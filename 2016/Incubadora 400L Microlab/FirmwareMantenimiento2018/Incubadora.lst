CCS PCH C Compiler, Version 4.104, 5967               17-ene.-18 07:34

               Filename: H:\JP\JP\Laboratorio\Incubadora\2016\Incubadora 400L Microlab\FirmwareMantenimiento2018\Incubadora.lst

               ROM used: 27970 bytes (85%)
                         Largest free fragment is 4794
               RAM used: 1530 (75%) at main() level
                         1591 (78%) worst case
               Stack:    5 worst case (4 in main + 1 for interrupts)

*
0000:  GOTO   2F9A
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0C76
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... /// Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,NOVREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0CCE:  MOVLW  05
0CD0:  MOVWF  FEA
0CD2:  MOVLW  FC
0CD4:  MOVWF  FE9
0CD6:  MOVF   FEF,W
0CD8:  BZ    0CF6
0CDA:  MOVLW  0F
0CDC:  MOVWF  01
0CDE:  CLRF   00
0CE0:  DECFSZ 00,F
0CE2:  BRA    0CE0
0CE4:  DECFSZ 01,F
0CE6:  BRA    0CDE
0CE8:  MOVLW  8F
0CEA:  MOVWF  00
0CEC:  DECFSZ 00,F
0CEE:  BRA    0CEC
0CF0:  NOP   
0CF2:  DECFSZ FEF,F
0CF4:  BRA    0CDA
0CF6:  RETLW  00
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
0E80:  BCF    F93.2
0E82:  BSF    F8A.2
....................    output_low(GLCD_E); 
0E84:  BCF    F93.7
0E86:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
0E88:  BCF    F93.3
0E8A:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0E8C:  BCF    F93.4
0E8E:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
0E90:  BCF    F93.5
0E92:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
0E94:  MOVLB  6
0E96:  CLRF   x0C
0E98:  MOVLW  C0
0E9A:  MOVWF  x0D
0E9C:  MOVLB  0
0E9E:  RCALL  0D2E
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
0EA0:  MOVLW  01
0EA2:  MOVLB  6
0EA4:  MOVWF  x0C
0EA6:  MOVLW  C0
0EA8:  MOVWF  x0D
0EAA:  MOVLB  0
0EAC:  RCALL  0D2E
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
0EAE:  MOVLB  6
0EB0:  CLRF   x0C
0EB2:  MOVLW  40
0EB4:  MOVWF  x0D
0EB6:  MOVLB  0
0EB8:  RCALL  0D2E
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
0EBA:  MOVLW  01
0EBC:  MOVLB  6
0EBE:  MOVWF  x0C
0EC0:  MOVLW  40
0EC2:  MOVWF  x0D
0EC4:  MOVLB  0
0EC6:  RCALL  0D2E
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
0EC8:  MOVLB  6
0ECA:  CLRF   x0C
0ECC:  MOVLW  B8
0ECE:  MOVWF  x0D
0ED0:  MOVLB  0
0ED2:  RCALL  0D2E
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
0ED4:  MOVLW  01
0ED6:  MOVLB  6
0ED8:  MOVWF  x0C
0EDA:  MOVLW  B8
0EDC:  MOVWF  x0D
0EDE:  MOVLB  0
0EE0:  RCALL  0D2E
....................  
....................    if(mode == ON) 
0EE2:  MOVLB  5
0EE4:  DECFSZ xF6,W
0EE6:  BRA    0F06
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
0EE8:  MOVLB  6
0EEA:  CLRF   x0C
0EEC:  MOVLW  3F
0EEE:  MOVWF  x0D
0EF0:  MOVLB  0
0EF2:  RCALL  0D2E
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
0EF4:  MOVLW  01
0EF6:  MOVLB  6
0EF8:  MOVWF  x0C
0EFA:  MOVLW  3F
0EFC:  MOVWF  x0D
0EFE:  MOVLB  0
0F00:  RCALL  0D2E
....................    } 
....................    else 
0F02:  BRA    0F20
0F04:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
0F06:  MOVLB  6
0F08:  CLRF   x0C
0F0A:  MOVLW  3E
0F0C:  MOVWF  x0D
0F0E:  MOVLB  0
0F10:  RCALL  0D2E
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
0F12:  MOVLW  01
0F14:  MOVLB  6
0F16:  MOVWF  x0C
0F18:  MOVLW  3E
0F1A:  MOVWF  x0D
0F1C:  MOVLB  0
0F1E:  RCALL  0D2E
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
0F20:  MOVLB  5
0F22:  CLRF   xF7
0F24:  MOVLB  0
0F26:  RCALL  0D6E
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
0F28:  RCALL  0DC8
....................    #endif 
.................... } 
0F2A:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
0DC8:  MOVLB  6
0DCA:  CLRF   x08
0DCC:  MOVLW  16
0DCE:  MOVWF  x07
....................    p2 = displayData.right; 
0DD0:  MOVLW  02
0DD2:  MOVWF  x0A
0DD4:  MOVLW  16
0DD6:  MOVWF  x09
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
0DD8:  CLRF   x05
0DDA:  MOVF   x05,W
0DDC:  SUBLW  07
0DDE:  BNC   0E7C
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
0DE0:  BCF    F93.5
0DE2:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
0DE4:  CLRF   x0C
0DE6:  MOVLW  40
0DE8:  MOVWF  x0D
0DEA:  MOVLB  0
0DEC:  RCALL  0D2E
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
0DEE:  MOVLW  01
0DF0:  MOVLB  6
0DF2:  MOVWF  x0C
0DF4:  MOVLW  40
0DF6:  MOVWF  x0D
0DF8:  MOVLB  0
0DFA:  RCALL  0D2E
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
0DFC:  MOVLB  6
0DFE:  MOVF   x05,W
0E00:  IORLW  B8
0E02:  MOVWF  x0B
0E04:  CLRF   x0C
0E06:  MOVWF  x0D
0E08:  MOVLB  0
0E0A:  RCALL  0D2E
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
0E0C:  MOVLB  6
0E0E:  MOVF   x05,W
0E10:  IORLW  B8
0E12:  MOVWF  x0B
0E14:  MOVLW  01
0E16:  MOVWF  x0C
0E18:  MOVFF  60B,60D
0E1C:  MOVLB  0
0E1E:  RCALL  0D2E
....................       output_high(GLCD_DI);                     // Set for data 
0E20:  BCF    F93.5
0E22:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
0E24:  MOVLB  6
0E26:  CLRF   x06
0E28:  MOVF   x06,W
0E2A:  SUBLW  3F
0E2C:  BNC   0E78
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
0E2E:  MOVFF  608,03
0E32:  MOVF   x07,W
0E34:  INCF   x07,F
0E36:  BTFSC  FD8.2
0E38:  INCF   x08,F
0E3A:  MOVWF  FE9
0E3C:  MOVFF  03,FEA
0E40:  MOVFF  FEF,60B
0E44:  CLRF   x0C
0E46:  MOVFF  60B,60D
0E4A:  MOVLB  0
0E4C:  RCALL  0D2E
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
0E4E:  MOVLB  6
0E50:  MOVFF  60A,03
0E54:  MOVF   x09,W
0E56:  INCF   x09,F
0E58:  BTFSC  FD8.2
0E5A:  INCF   x0A,F
0E5C:  MOVWF  FE9
0E5E:  MOVFF  03,FEA
0E62:  MOVFF  FEF,60B
0E66:  MOVLW  01
0E68:  MOVWF  x0C
0E6A:  MOVFF  60B,60D
0E6E:  MOVLB  0
0E70:  RCALL  0D2E
....................       } 
0E72:  MOVLB  6
0E74:  INCF   x06,F
0E76:  BRA    0E28
....................    } 
0E78:  INCF   x05,F
0E7A:  BRA    0DDA
.................... } 
0E7C:  MOVLB  0
0E7E:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
0F2C:  MOVLB  6
0F2E:  CLRF   x29
0F30:  RRCF   x24,W
0F32:  MOVWF  x28
0F34:  RRCF   x28,F
0F36:  RRCF   x28,F
0F38:  MOVLW  1F
0F3A:  ANDWF  x28,F
....................    temp *= 64; 
0F3C:  RLCF   x28,F
0F3E:  RLCF   x29,F
0F40:  RLCF   x28,F
0F42:  RLCF   x29,F
0F44:  RLCF   x28,F
0F46:  RLCF   x29,F
0F48:  RLCF   x28,F
0F4A:  RLCF   x29,F
0F4C:  RLCF   x28,F
0F4E:  RLCF   x29,F
0F50:  RLCF   x28,F
0F52:  RLCF   x29,F
0F54:  MOVLW  C0
0F56:  ANDWF  x28,F
....................    temp += x; 
0F58:  MOVF   x23,W
0F5A:  ADDWF  x28,F
0F5C:  MOVLW  00
0F5E:  ADDWFC x29,F
....................  
....................    if(x > 63) 
0F60:  MOVF   x23,W
0F62:  SUBLW  3F
0F64:  BC    0F80
....................    { 
....................       p = displayData.right + temp - 64; 
0F66:  MOVLW  16
0F68:  ADDWF  x28,W
0F6A:  MOVWF  x2A
0F6C:  MOVLW  02
0F6E:  ADDWFC x29,W
0F70:  MOVWF  x2B
0F72:  MOVLW  40
0F74:  SUBWF  x2A,W
0F76:  MOVWF  x26
0F78:  MOVLW  00
0F7A:  SUBWFB x2B,W
0F7C:  MOVWF  x27
....................    } 
....................    else 
0F7E:  BRA    0F8C
....................    { 
....................       p = displayData.left + temp; 
0F80:  MOVLW  16
0F82:  ADDWF  x28,W
0F84:  MOVWF  x26
0F86:  MOVLW  00
0F88:  ADDWFC x29,W
0F8A:  MOVWF  x27
....................    } 
....................  
....................    if(color) 
0F8C:  MOVF   x25,F
0F8E:  BZ    0FBA
....................    { 
....................       bit_set(*p, y%8); 
0F90:  MOVFF  627,03
0F94:  MOVFF  626,FE9
0F98:  MOVFF  627,FEA
0F9C:  MOVF   x24,W
0F9E:  ANDLW  07
0FA0:  MOVWF  x2A
0FA2:  MOVLW  01
0FA4:  MOVWF  00
0FA6:  MOVF   x2A,W
0FA8:  MOVWF  01
0FAA:  BZ    0FB4
0FAC:  BCF    FD8.0
0FAE:  RLCF   00,F
0FB0:  DECFSZ 01,F
0FB2:  BRA    0FAC
0FB4:  MOVF   00,W
0FB6:  IORWF  FEF,F
....................    } 
....................    else 
0FB8:  BRA    0FE4
....................    { 
....................       bit_clear(*p, y%8); 
0FBA:  MOVFF  627,03
0FBE:  MOVFF  626,FE9
0FC2:  MOVFF  627,FEA
0FC6:  MOVF   x24,W
0FC8:  ANDLW  07
0FCA:  MOVWF  x2A
0FCC:  MOVLW  01
0FCE:  MOVWF  00
0FD0:  MOVF   x2A,W
0FD2:  MOVWF  01
0FD4:  BZ    0FDE
0FD6:  BCF    FD8.0
0FD8:  RLCF   00,F
0FDA:  DECFSZ 01,F
0FDC:  BRA    0FD6
0FDE:  MOVF   00,W
0FE0:  XORLW  FF
0FE2:  ANDWF  FEF,F
....................    } 
.................... } 
0FE4:  MOVLB  0
0FE6:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
0D6E:  MOVLB  5
0D70:  CLRF   xFA
0D72:  MOVLW  16
0D74:  MOVWF  xF9
....................    p2 = displayData.right; 
0D76:  MOVLW  02
0D78:  MOVWF  xFC
0D7A:  MOVLW  16
0D7C:  MOVWF  xFB
....................    data = 0xFF * color; 
0D7E:  MOVF   xF7,W
0D80:  MULLW  FF
0D82:  MOVFF  FF3,5F8
....................  
....................    for(i=0; i<512; ++i) 
0D86:  CLRF   xFE
0D88:  CLRF   xFD
0D8A:  MOVF   xFE,W
0D8C:  SUBLW  01
0D8E:  BNC   0DC4
....................    { 
....................       *p1++ = data; 
0D90:  MOVFF  5FA,03
0D94:  MOVF   xF9,W
0D96:  INCF   xF9,F
0D98:  BTFSC  FD8.2
0D9A:  INCF   xFA,F
0D9C:  MOVWF  FE9
0D9E:  MOVFF  03,FEA
0DA2:  MOVFF  5F8,FEF
....................       *p2++ = data; 
0DA6:  MOVFF  5FC,03
0DAA:  MOVF   xFB,W
0DAC:  INCF   xFB,F
0DAE:  BTFSC  FD8.2
0DB0:  INCF   xFC,F
0DB2:  MOVWF  FE9
0DB4:  MOVFF  03,FEA
0DB8:  MOVFF  5F8,FEF
....................    } 
0DBC:  INCF   xFD,F
0DBE:  BTFSC  FD8.2
0DC0:  INCF   xFE,F
0DC2:  BRA    0D8A
.................... } 
0DC4:  MOVLB  0
0DC6:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0D2E:  MOVLB  6
0D30:  MOVF   x0C,F
0D32:  BZ    0D3A
....................       output_high(GLCD_CS2); 
0D34:  BCF    F93.4
0D36:  BSF    F8A.4
....................    else 
0D38:  BRA    0D3E
....................       output_high(GLCD_CS1); 
0D3A:  BCF    F93.3
0D3C:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0D3E:  BCF    F93.6
0D40:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
0D42:  CLRF   F95
0D44:  MOVFF  60D,F8C
....................    delay_cycles(50); 
0D48:  MOVLW  10
0D4A:  MOVWF  00
0D4C:  DECFSZ 00,F
0D4E:  BRA    0D4C
0D50:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0D52:  BCF    F93.7
0D54:  BSF    F8A.7
....................    delay_cycles(250); 
0D56:  MOVLW  53
0D58:  MOVWF  00
0D5A:  DECFSZ 00,F
0D5C:  BRA    0D5A
....................    output_low(GLCD_E); 
0D5E:  BCF    F93.7
0D60:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0D62:  BCF    F93.3
0D64:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0D66:  BCF    F93.4
0D68:  BCF    F8A.4
.................... } 
0D6A:  MOVLB  0
0D6C:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
11A0:  MOVLW  01
11A2:  MOVLB  6
11A4:  MOVWF  x1C
11A6:  MOVWF  x1D
11A8:  CLRF   x22
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
11AA:  MOVF   x13,W
11AC:  SUBWF  x15,W
11AE:  MOVWF  x23
11B0:  MOVF   x23,W
11B2:  BTFSS  x23.7
11B4:  BRA    11BC
11B6:  MOVLW  00
11B8:  BSF    FD8.0
11BA:  SUBFWB x23,W
11BC:  CLRF   03
11BE:  MOVWF  x1A
11C0:  MOVFF  03,61B
....................    dy = abs((signed int8)(y2 - y1)); 
11C4:  MOVF   x14,W
11C6:  SUBWF  x16,W
11C8:  MOVWF  x23
11CA:  MOVF   x23,W
11CC:  BTFSS  x23.7
11CE:  BRA    11D6
11D0:  MOVLW  00
11D2:  BSF    FD8.0
11D4:  SUBFWB x23,W
11D6:  CLRF   03
11D8:  MOVWF  x18
11DA:  MOVFF  03,619
....................    #endif 
....................  
....................    if(x1 > x2) 
11DE:  MOVF   x13,W
11E0:  SUBWF  x15,W
11E2:  BC    11E8
....................       addx = -1; 
11E4:  MOVLW  FF
11E6:  MOVWF  x1C
....................    if(y1 > y2) 
11E8:  MOVF   x14,W
11EA:  SUBWF  x16,W
11EC:  BC    11F2
....................       addy = -1; 
11EE:  MOVLW  FF
11F0:  MOVWF  x1D
....................  
....................    if(dx >= dy) 
11F2:  MOVF   x19,W
11F4:  SUBWF  x1B,W
11F6:  BNC   126E
11F8:  BNZ   1200
11FA:  MOVF   x18,W
11FC:  SUBWF  x1A,W
11FE:  BNC   126E
....................    { 
....................       dy *= 2; 
1200:  BCF    FD8.0
1202:  RLCF   x18,F
1204:  RLCF   x19,F
....................       P = dy - dx; 
1206:  MOVF   x1A,W
1208:  SUBWF  x18,W
120A:  MOVWF  00
120C:  MOVF   x1B,W
120E:  SUBWFB x19,W
1210:  MOVFF  00,61E
1214:  MOVWF  x1F
....................       diff = P - dx; 
1216:  MOVF   x1A,W
1218:  SUBWF  x1E,W
121A:  MOVWF  x20
121C:  MOVF   x1B,W
121E:  SUBWFB x1F,W
1220:  MOVWF  x21
....................  
....................       for(; i<=dx; ++i) 
1222:  MOVF   x1B,F
1224:  BNZ   122C
1226:  MOVF   x22,W
1228:  SUBWF  x1A,W
122A:  BNC   126C
....................       { 
....................          glcd_pixel(x1, y1, color); 
122C:  MOVFF  613,623
1230:  MOVFF  614,624
1234:  MOVFF  617,625
1238:  MOVLB  0
123A:  RCALL  0F2C
....................  
....................          if(P < 0) 
123C:  MOVLB  6
123E:  BTFSC  x1F.7
1240:  BRA    1244
1242:  BRA    1254
....................          { 
....................             P  += dy; 
1244:  MOVF   x18,W
1246:  ADDWF  x1E,F
1248:  MOVF   x19,W
124A:  ADDWFC x1F,F
....................             x1 += addx; 
124C:  MOVF   x1C,W
124E:  ADDWF  x13,W
1250:  MOVWF  x13
....................          } 
....................          else 
1252:  BRA    1268
....................          { 
....................             P  += diff; 
1254:  MOVF   x20,W
1256:  ADDWF  x1E,F
1258:  MOVF   x21,W
125A:  ADDWFC x1F,F
....................             x1 += addx; 
125C:  MOVF   x1C,W
125E:  ADDWF  x13,W
1260:  MOVWF  x13
....................             y1 += addy; 
1262:  MOVF   x1D,W
1264:  ADDWF  x14,W
1266:  MOVWF  x14
....................          } 
....................       } 
1268:  INCF   x22,F
126A:  BRA    1222
....................    } 
....................    else 
126C:  BRA    12DA
....................    { 
....................       dx *= 2; 
126E:  BCF    FD8.0
1270:  RLCF   x1A,F
1272:  RLCF   x1B,F
....................       P = dx - dy; 
1274:  MOVF   x18,W
1276:  SUBWF  x1A,W
1278:  MOVWF  00
127A:  MOVF   x19,W
127C:  SUBWFB x1B,W
127E:  MOVFF  00,61E
1282:  MOVWF  x1F
....................       diff = P - dy; 
1284:  MOVF   x18,W
1286:  SUBWF  x1E,W
1288:  MOVWF  x20
128A:  MOVF   x19,W
128C:  SUBWFB x1F,W
128E:  MOVWF  x21
....................  
....................       for(; i<=dy; ++i) 
1290:  MOVF   x19,F
1292:  BNZ   129A
1294:  MOVF   x22,W
1296:  SUBWF  x18,W
1298:  BNC   12DA
....................       { 
....................          glcd_pixel(x1, y1, color); 
129A:  MOVFF  613,623
129E:  MOVFF  614,624
12A2:  MOVFF  617,625
12A6:  MOVLB  0
12A8:  RCALL  0F2C
....................  
....................          if(P < 0) 
12AA:  MOVLB  6
12AC:  BTFSC  x1F.7
12AE:  BRA    12B2
12B0:  BRA    12C2
....................          { 
....................             P  += dx; 
12B2:  MOVF   x1A,W
12B4:  ADDWF  x1E,F
12B6:  MOVF   x1B,W
12B8:  ADDWFC x1F,F
....................             y1 += addy; 
12BA:  MOVF   x1D,W
12BC:  ADDWF  x14,W
12BE:  MOVWF  x14
....................          } 
....................          else 
12C0:  BRA    12D6
....................          { 
....................             P  += diff; 
12C2:  MOVF   x20,W
12C4:  ADDWF  x1E,F
12C6:  MOVF   x21,W
12C8:  ADDWFC x1F,F
....................             x1 += addx; 
12CA:  MOVF   x1C,W
12CC:  ADDWF  x13,W
12CE:  MOVWF  x13
....................             y1 += addy; 
12D0:  MOVF   x1D,W
12D2:  ADDWF  x14,W
12D4:  MOVWF  x14
....................          } 
....................       } 
12D6:  INCF   x22,F
12D8:  BRA    1290
....................    } 
.................... } 
12DA:  MOVLB  0
12DC:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
12DE:  MOVLB  6
12E0:  MOVF   x0C,F
12E2:  BZ    1340
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
12E4:  MOVF   x0A,W
12E6:  SUBWF  x08,W
12E8:  BC    12F4
....................       { 
....................          xmin = x1; 
12EA:  MOVFF  608,60F
....................          xmax = x2; 
12EE:  MOVFF  60A,610
....................       } 
....................       else 
12F2:  BRA    12FC
....................       { 
....................          xmin = x2; 
12F4:  MOVFF  60A,60F
....................          xmax = x1; 
12F8:  MOVFF  608,610
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
12FC:  MOVF   x0B,W
12FE:  SUBWF  x09,W
1300:  BC    130C
....................       { 
....................          ymin = y1; 
1302:  MOVFF  609,611
....................          ymax = y2; 
1306:  MOVFF  60B,612
....................       } 
....................       else 
130A:  BRA    1314
....................       { 
....................          ymin = y2; 
130C:  MOVFF  60B,611
....................          ymax = y1; 
1310:  MOVFF  609,612
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
1314:  MOVF   x0F,W
1316:  SUBWF  x10,W
1318:  BNC   133E
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
131A:  MOVFF  611,60E
131E:  MOVF   x0E,W
1320:  SUBWF  x12,W
1322:  BNC   133A
....................          { 
....................             glcd_pixel(xmin, i, color); 
1324:  MOVFF  60F,623
1328:  MOVFF  60E,624
132C:  MOVFF  60D,625
1330:  MOVLB  0
1332:  RCALL  0F2C
....................          } 
1334:  MOVLB  6
1336:  INCF   x0E,F
1338:  BRA    131E
....................       } 
133A:  INCF   x0F,F
133C:  BRA    1314
....................    } 
....................    else 
133E:  BRA    139C
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
1340:  MOVFF  608,613
1344:  MOVFF  609,614
1348:  MOVFF  60A,615
134C:  MOVFF  609,616
1350:  MOVFF  60D,617
1354:  MOVLB  0
1356:  RCALL  11A0
....................       glcd_line(x1, y2, x2, y2, color); 
1358:  MOVFF  608,613
135C:  MOVFF  60B,614
1360:  MOVFF  60A,615
1364:  MOVFF  60B,616
1368:  MOVFF  60D,617
136C:  RCALL  11A0
....................       glcd_line(x1, y1, x1, y2, color); 
136E:  MOVFF  608,613
1372:  MOVFF  609,614
1376:  MOVFF  608,615
137A:  MOVFF  60B,616
137E:  MOVFF  60D,617
1382:  RCALL  11A0
....................       glcd_line(x2, y1, x2, y2, color); 
1384:  MOVFF  60A,613
1388:  MOVFF  609,614
138C:  MOVFF  60A,615
1390:  MOVFF  60B,616
1394:  MOVFF  60D,617
1398:  RCALL  11A0
139A:  MOVLB  6
....................    } 
.................... } 
139C:  MOVLB  0
139E:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
1F52:  MOVLB  5
1F54:  CLRF   xFB
....................    b = radius; 
1F56:  MOVFF  5F8,5FC
....................    P = 1 - radius; 
1F5A:  MOVLW  01
1F5C:  BSF    FD8.0
1F5E:  SUBFWB xF8,W
1F60:  MOVWF  xFD
....................  
....................    do 
....................    { 
....................       if(fill) 
1F62:  MOVF   xF9,F
1F64:  BZ    2048
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
1F66:  MOVF   xFB,W
1F68:  SUBWF  xF6,W
1F6A:  MOVWF  xFE
1F6C:  MOVF   xFC,W
1F6E:  ADDWF  xF7,W
1F70:  MOVWF  xFF
1F72:  MOVF   xFB,W
1F74:  ADDWF  xF6,W
1F76:  MOVLB  6
1F78:  MOVWF  x00
1F7A:  MOVLB  5
1F7C:  MOVF   xFC,W
1F7E:  ADDWF  xF7,W
1F80:  MOVLB  6
1F82:  MOVWF  x01
1F84:  MOVFF  5FE,613
1F88:  MOVFF  5FF,614
1F8C:  MOVFF  600,615
1F90:  MOVWF  x16
1F92:  MOVFF  5FA,617
1F96:  MOVLB  0
1F98:  CALL   11A0
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
1F9C:  MOVLB  5
1F9E:  MOVF   xFB,W
1FA0:  SUBWF  xF6,W
1FA2:  MOVWF  xFE
1FA4:  MOVF   xFC,W
1FA6:  SUBWF  xF7,W
1FA8:  MOVWF  xFF
1FAA:  MOVF   xFB,W
1FAC:  ADDWF  xF6,W
1FAE:  MOVLB  6
1FB0:  MOVWF  x00
1FB2:  MOVLB  5
1FB4:  MOVF   xFC,W
1FB6:  SUBWF  xF7,W
1FB8:  MOVLB  6
1FBA:  MOVWF  x01
1FBC:  MOVFF  5FE,613
1FC0:  MOVFF  5FF,614
1FC4:  MOVFF  600,615
1FC8:  MOVWF  x16
1FCA:  MOVFF  5FA,617
1FCE:  MOVLB  0
1FD0:  CALL   11A0
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
1FD4:  MOVLB  5
1FD6:  MOVF   xFC,W
1FD8:  SUBWF  xF6,W
1FDA:  MOVWF  xFE
1FDC:  MOVF   xFB,W
1FDE:  ADDWF  xF7,W
1FE0:  MOVWF  xFF
1FE2:  MOVF   xFC,W
1FE4:  ADDWF  xF6,W
1FE6:  MOVLB  6
1FE8:  MOVWF  x00
1FEA:  MOVLB  5
1FEC:  MOVF   xFB,W
1FEE:  ADDWF  xF7,W
1FF0:  MOVLB  6
1FF2:  MOVWF  x01
1FF4:  MOVFF  5FE,613
1FF8:  MOVFF  5FF,614
1FFC:  MOVFF  600,615
2000:  MOVWF  x16
2002:  MOVFF  5FA,617
2006:  MOVLB  0
2008:  CALL   11A0
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
200C:  MOVLB  5
200E:  MOVF   xFC,W
2010:  SUBWF  xF6,W
2012:  MOVWF  xFE
2014:  MOVF   xFB,W
2016:  SUBWF  xF7,W
2018:  MOVWF  xFF
201A:  MOVF   xFC,W
201C:  ADDWF  xF6,W
201E:  MOVLB  6
2020:  MOVWF  x00
2022:  MOVLB  5
2024:  MOVF   xFB,W
2026:  SUBWF  xF7,W
2028:  MOVLB  6
202A:  MOVWF  x01
202C:  MOVFF  5FE,613
2030:  MOVFF  5FF,614
2034:  MOVFF  600,615
2038:  MOVWF  x16
203A:  MOVFF  5FA,617
203E:  MOVLB  0
2040:  CALL   11A0
....................       } 
....................       else 
2044:  BRA    2146
2046:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2048:  MOVF   xF6,W
204A:  ADDWF  xFB,W
204C:  MOVWF  xFE
204E:  MOVF   xF7,W
2050:  ADDWF  xFC,W
2052:  MOVWF  xFF
2054:  MOVFF  5FE,623
2058:  MOVFF  FE8,624
205C:  MOVFF  5FA,625
2060:  MOVLB  0
2062:  CALL   0F2C
....................          glcd_pixel(b+x, a+y, color); 
2066:  MOVLB  5
2068:  MOVF   xF6,W
206A:  ADDWF  xFC,W
206C:  MOVWF  xFE
206E:  MOVF   xF7,W
2070:  ADDWF  xFB,W
2072:  MOVWF  xFF
2074:  MOVFF  5FE,623
2078:  MOVFF  FE8,624
207C:  MOVFF  5FA,625
2080:  MOVLB  0
2082:  CALL   0F2C
....................          glcd_pixel(x-a, b+y, color); 
2086:  MOVLB  5
2088:  MOVF   xFB,W
208A:  SUBWF  xF6,W
208C:  MOVWF  xFE
208E:  MOVF   xF7,W
2090:  ADDWF  xFC,W
2092:  MOVWF  xFF
2094:  MOVFF  5FE,623
2098:  MOVFF  FE8,624
209C:  MOVFF  5FA,625
20A0:  MOVLB  0
20A2:  CALL   0F2C
....................          glcd_pixel(x-b, a+y, color); 
20A6:  MOVLB  5
20A8:  MOVF   xFC,W
20AA:  SUBWF  xF6,W
20AC:  MOVWF  xFE
20AE:  MOVF   xF7,W
20B0:  ADDWF  xFB,W
20B2:  MOVWF  xFF
20B4:  MOVFF  5FE,623
20B8:  MOVFF  FE8,624
20BC:  MOVFF  5FA,625
20C0:  MOVLB  0
20C2:  CALL   0F2C
....................          glcd_pixel(b+x, y-a, color); 
20C6:  MOVLB  5
20C8:  MOVF   xF6,W
20CA:  ADDWF  xFC,W
20CC:  MOVWF  xFE
20CE:  MOVF   xFB,W
20D0:  SUBWF  xF7,W
20D2:  MOVWF  xFF
20D4:  MOVFF  5FE,623
20D8:  MOVFF  FE8,624
20DC:  MOVFF  5FA,625
20E0:  MOVLB  0
20E2:  CALL   0F2C
....................          glcd_pixel(a+x, y-b, color); 
20E6:  MOVLB  5
20E8:  MOVF   xF6,W
20EA:  ADDWF  xFB,W
20EC:  MOVWF  xFE
20EE:  MOVF   xFC,W
20F0:  SUBWF  xF7,W
20F2:  MOVWF  xFF
20F4:  MOVFF  5FE,623
20F8:  MOVFF  FE8,624
20FC:  MOVFF  5FA,625
2100:  MOVLB  0
2102:  CALL   0F2C
....................          glcd_pixel(x-a, y-b, color); 
2106:  MOVLB  5
2108:  MOVF   xFB,W
210A:  SUBWF  xF6,W
210C:  MOVWF  xFE
210E:  MOVF   xFC,W
2110:  SUBWF  xF7,W
2112:  MOVWF  xFF
2114:  MOVFF  5FE,623
2118:  MOVFF  FE8,624
211C:  MOVFF  5FA,625
2120:  MOVLB  0
2122:  CALL   0F2C
....................          glcd_pixel(x-b, y-a, color); 
2126:  MOVLB  5
2128:  MOVF   xFC,W
212A:  SUBWF  xF6,W
212C:  MOVWF  xFE
212E:  MOVF   xFB,W
2130:  SUBWF  xF7,W
2132:  MOVWF  xFF
2134:  MOVFF  5FE,623
2138:  MOVFF  FE8,624
213C:  MOVFF  5FA,625
2140:  MOVLB  0
2142:  CALL   0F2C
....................       } 
....................  
....................       if(P < 0) 
2146:  MOVLB  5
2148:  BTFSC  xFD.7
214A:  BRA    214E
214C:  BRA    216A
....................          P += 3 + 2 * a++; 
214E:  MOVF   xFB,W
2150:  INCF   xFB,F
2152:  MOVWF  xFE
2154:  MOVLW  02
2156:  MOVWF  xFF
2158:  MOVFF  5FE,600
215C:  MOVLB  0
215E:  RCALL  1F02
2160:  MOVF   01,W
2162:  ADDLW  03
2164:  MOVLB  5
2166:  ADDWF  xFD,F
....................       else 
2168:  BRA    218C
....................          P += 5 + 2 * (a++ - b--); 
216A:  MOVF   xFB,W
216C:  INCF   xFB,F
216E:  MOVWF  xFE
2170:  MOVF   xFC,W
2172:  DECF   xFC,F
2174:  SUBWF  xFE,W
2176:  MOVWF  xFE
2178:  MOVLW  02
217A:  MOVWF  xFF
217C:  MOVFF  5FE,600
2180:  MOVLB  0
2182:  RCALL  1F02
2184:  MOVF   01,W
2186:  ADDLW  05
2188:  MOVLB  5
218A:  ADDWF  xFD,F
....................     } while(a <= b); 
218C:  MOVF   xFB,W
218E:  XORLW  80
2190:  MOVWF  00
2192:  MOVF   xFC,W
2194:  XORLW  80
2196:  SUBWF  00,W
2198:  BTFSC  FD8.2
219A:  BRA    1F62
219C:  BTFSS  FD8.0
219E:  BRA    1F62
.................... } 
21A0:  MOVLB  0
21A2:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
0FE8:  MOVFF  60A,03
0FEC:  MOVLB  6
0FEE:  MOVFF  609,FE9
0FF2:  MOVFF  60A,FEA
0FF6:  MOVF   FEF,F
0FF8:  BTFSC  FD8.2
0FFA:  BRA    119C
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
0FFC:  MOVFF  60A,03
1000:  MOVFF  609,FE9
1004:  MOVFF  60A,FEA
1008:  MOVF   FEF,W
100A:  SUBLW  52
100C:  BNC   105C
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
100E:  MOVFF  60A,03
1012:  MOVFF  609,FE9
1016:  MOVFF  60A,FEA
101A:  MOVLW  20
101C:  SUBWF  FEF,W
101E:  MULLW  05
1020:  MOVF   FF3,W
1022:  CLRF   03
1024:  MOVWF  x16
1026:  MOVLW  06
1028:  MOVWF  FEA
102A:  MOVLW  11
102C:  MOVWF  FE9
102E:  CLRF   x1A
1030:  MOVFF  616,619
1034:  MOVFF  FF2,617
1038:  BCF    FF2.7
103A:  MOVLW  05
103C:  MOVWF  01
103E:  CLRF   FF7
1040:  MOVF   x16,W
1042:  MOVLB  0
1044:  CALL   0096
1048:  TBLRD*-
104A:  TBLRD*+
104C:  MOVFF  FF5,FEE
1050:  DECFSZ 01,F
1052:  BRA    104A
1054:  MOVLB  6
1056:  BTFSC  x17.7
1058:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
105A:  BRA    10C6
105C:  MOVFF  60A,03
1060:  MOVFF  609,FE9
1064:  MOVFF  60A,FEA
1068:  MOVF   FEF,W
106A:  SUBLW  7E
106C:  BNC   10BC
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
106E:  MOVFF  60A,03
1072:  MOVFF  609,FE9
1076:  MOVFF  60A,FEA
107A:  MOVLW  53
107C:  SUBWF  FEF,W
107E:  MULLW  05
1080:  MOVF   FF3,W
1082:  CLRF   03
1084:  MOVWF  x16
1086:  MOVLW  06
1088:  MOVWF  FEA
108A:  MOVLW  11
108C:  MOVWF  FE9
108E:  CLRF   x1A
1090:  MOVFF  616,619
1094:  MOVFF  FF2,617
1098:  BCF    FF2.7
109A:  MOVLW  05
109C:  MOVWF  01
109E:  CLRF   FF7
10A0:  MOVF   x16,W
10A2:  MOVLB  0
10A4:  CALL   01B0
10A8:  TBLRD*-
10AA:  TBLRD*+
10AC:  MOVFF  FF5,FEE
10B0:  DECFSZ 01,F
10B2:  BRA    10AA
10B4:  MOVLB  6
10B6:  BTFSC  x17.7
10B8:  BSF    FF2.7
....................       else 
10BA:  BRA    10C6
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
10BC:  CLRF   x11
10BE:  CLRF   x12
10C0:  CLRF   x13
10C2:  CLRF   x14
10C4:  CLRF   x15
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
10C6:  MOVFF  60A,03
10CA:  MOVF   x09,W
10CC:  MOVWF  FE9
10CE:  MOVFF  03,FEA
10D2:  MOVF   FEF,W
10D4:  XORLW  0A
10D6:  MOVLB  0
10D8:  BZ    10E0
10DA:  XORLW  07
10DC:  BZ    10F0
10DE:  BRA    10F6
....................          case '\n': 
....................             y += 7*size + 1; 
10E0:  MOVLB  6
10E2:  MOVF   x0B,W
10E4:  MULLW  07
10E6:  MOVF   FF3,W
10E8:  ADDLW  01
10EA:  ADDWF  x08,F
....................             continue; 
10EC:  BRA    118E
10EE:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
10F0:  MOVLB  6
10F2:  CLRF   x07
....................             continue; 
10F4:  BRA    118E
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
10F6:  MOVLB  6
10F8:  MOVF   x0B,W
10FA:  MULLW  05
10FC:  MOVF   FF3,W
10FE:  ADDWF  x07,W
1100:  SUBLW  7F
1102:  BC    1110
....................       { 
....................          x = 0;                           // Set x at far left position 
1104:  CLRF   x07
....................          y += 7*size + 1;                 // Set y at next position down 
1106:  MOVF   x0B,W
1108:  MULLW  07
110A:  MOVF   FF3,W
110C:  ADDLW  01
110E:  ADDWF  x08,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
1110:  CLRF   x0D
1112:  MOVF   x0D,W
1114:  SUBLW  04
1116:  BNC   118E
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
1118:  CLRF   x0E
111A:  MOVF   x0E,W
111C:  SUBLW  06
111E:  BNC   1186
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
1120:  CLRF   03
1122:  MOVF   x0D,W
1124:  ADDLW  11
1126:  MOVWF  FE9
1128:  MOVLW  06
112A:  ADDWFC 03,W
112C:  MOVWF  FEA
112E:  MOVFF  FEF,616
1132:  MOVFF  616,00
1136:  MOVF   x0E,W
1138:  MOVWF  01
113A:  BZ    1144
113C:  BCF    FD8.0
113E:  RRCF   00,F
1140:  DECFSZ 01,F
1142:  BRA    113C
1144:  BTFSS  00.0
1146:  BRA    1182
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
1148:  CLRF   x0F
114A:  MOVF   x0B,W
114C:  SUBWF  x0F,W
114E:  BC    1182
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
1150:  CLRF   x10
1152:  MOVF   x0B,W
1154:  SUBWF  x10,W
1156:  BC    117E
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
1158:  MOVF   x10,W
115A:  ADDWF  x07,W
115C:  MOVWF  x16
115E:  MOVF   x0E,W
1160:  MULWF  x0B
1162:  MOVF   FF3,W
1164:  ADDWF  x08,W
1166:  ADDWF  x0F,W
1168:  MOVWF  x17
116A:  MOVFF  616,623
116E:  MOVWF  x24
1170:  MOVFF  60C,625
1174:  MOVLB  0
1176:  RCALL  0F2C
....................                   } 
1178:  MOVLB  6
117A:  INCF   x10,F
117C:  BRA    1152
....................                } 
117E:  INCF   x0F,F
1180:  BRA    114A
....................             } 
....................          } 
1182:  INCF   x0E,F
1184:  BRA    111A
....................       } 
1186:  INCF   x0D,F
1188:  MOVF   x0B,W
118A:  ADDWF  x07,F
118C:  BRA    1112
....................    } 
118E:  INCF   x09,F
1190:  BTFSC  FD8.2
1192:  INCF   x0A,F
1194:  INCF   x07,F
1196:  MOVLB  0
1198:  BRA    0FE8
119A:  MOVLB  6
.................... } 
119C:  MOVLB  0
119E:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Horno [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x00, 0x00, 0x0E, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x02, 0x00, 0x0E, 
.................... 0x60, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x05, 0x00, 0x0E, 
.................... 0x70, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x02, 0x00, 0x0E, 
.................... 0x60, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xE1, 0xC0, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x01, 0x80, 0x60, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x78, 0x10, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x06, 0x7C, 0x18, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0x7C, 0x08, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x3C, 0x04, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x10, 0x04, 0x0E, 
.................... 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x0C, 0xE4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x2D, 0xF4, 0x0E, 
.................... 0x02, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x63, 0xF4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0xF1, 0xE4, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x70, 0x10, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x30, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xC0, 0xC0, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x7F, 0x80, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
.................... // Definición de teclado - NO 
.................... #define   UP            input(PIN_A5) 
.................... #define   DOWN          input(PIN_E0) 
.................... #define   RIGHT         input(PIN_E1) 
.................... #define   LEFT          input(PIN_E2) 
....................  
.................... //#define   DOOR          input(PIN_A3) 
.................... #define   TERM          input(PIN_A4) 
....................  
.................... // Definición de Salidas 
.................... #define   Resistencia_on     output_bit(PIN_C0,1) 
.................... #define   Resistencia_off    output_bit(PIN_C0,0) 
.................... #define   Resistencia2_on    output_bit(PIN_C2,1) 
.................... #define   Resistencia2_off   output_bit(PIN_C2,0) 
.................... #define   Ventilador_on      output_bit(PIN_C1,1) 
.................... #define   Ventilador_off     output_bit(PIN_C1,0) 
.................... #define   Libre1_on          output_bit(PIN_C6,1) 
.................... #define   Libre1_off         output_bit(PIN_C6,0) 
.................... #define   Libre2_on          output_bit(PIN_C7,1) 
.................... #define   Libre2_off         output_bit(PIN_C7,0) 
.................... #define   Libre3_on          output_bit(PIN_B0,1) 
.................... #define   Libre3_off         output_bit(PIN_B0,0) 
.................... #define   Libre4_on          output_bit(PIN_B1,1) 
.................... #define   Libre4_off         output_bit(PIN_B1,0) 
....................  
.................... float promedio[80]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float X[2]={0.0,0.0}; 
.................... int8 h=0,l=0,Ajuste=0,Ajusten=0,MediaMovil=10,tiemporecta=0,tiempoventilador=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,visual=1,Lectura=0,estado_ventilador=0; 
.................... short flag_clear=0,flag_clear2=0,flag_clear3=0,flag_clear4=0,flag_tiempocalentamiento=0,flag_display=0,flag_setpoint=0,flag_control=0; 
.................... int8 y=0,tiemporeset=0,flag_ventilador=0; 
.................... int8 Menu=0, unidad=1,i=0,Pausa=0,Pausa_ant=0,TiempoControl=0; 
.................... int8 Setpoint=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,tinicio=0,tiempocalentamiento=0,tiemposetpoint=0,Puerta=0; 
.................... float Potencia=0.0,Tpulsomin=0.0,Gananciamax=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float V0=0.0,R1=10000.0,Pt,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=25.0,desvio=0.0,Coeficiente=31.0; 
.................... float Aumento=0.0,Temperatura=0.0; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void ActualizaRecta(){ 
....................    X[y]=Temperatura; 
*
26CE:  MOVLB  5
26D0:  MOVF   x67,W
26D2:  MULLW  04
26D4:  MOVF   FF3,W
26D6:  CLRF   03
26D8:  ADDLW  56
26DA:  MOVWF  FE9
26DC:  MOVLW  05
26DE:  ADDWFC 03,W
26E0:  MOVWF  FEA
26E2:  MOVFF  5D2,FEF
26E6:  MOVFF  5D3,FEC
26EA:  MOVFF  5D4,FEC
26EE:  MOVFF  5D5,FEC
....................    y++; 
26F2:  INCF   x67,F
....................    if(y>=2) 
26F4:  MOVF   x67,W
26F6:  SUBLW  01
26F8:  BC    2736
....................    { 
....................       y=0; 
26FA:  CLRF   x67
....................       Aumento=X[1]-X[0]; 
26FC:  BSF    FD8.1
26FE:  MOVFF  55D,5FE
2702:  MOVFF  55C,5FD
2706:  MOVFF  55B,5FC
270A:  MOVFF  55A,5FB
270E:  MOVFF  559,602
2712:  MOVFF  558,601
2716:  MOVFF  557,600
271A:  MOVFF  556,5FF
271E:  MOVLB  0
2720:  CALL   187E
2724:  MOVFF  03,5D1
2728:  MOVFF  02,5D0
272C:  MOVFF  01,5CF
2730:  MOVFF  00,5CE
2734:  MOVLB  5
....................    } 
.................... } 
2736:  MOVLB  0
2738:  GOTO   2784 (RETURN)
....................  
.................... // Funcion para conversor analogo-digital 
.................... float sensores(int x){ 
.................... float y;set_adc_channel(x);delay_ms(1);y=read_adc();return (y); 
*
16A8:  MOVLB  5
16AA:  RLCF   xF7,W
16AC:  MOVWF  00
16AE:  RLCF   00,F
16B0:  MOVLW  FC
16B2:  ANDWF  00,F
16B4:  MOVFF  00,01
16B8:  MOVF   FC2,W
16BA:  ANDLW  C3
16BC:  IORWF  00,W
16BE:  MOVWF  FC2
16C0:  MOVLW  01
16C2:  MOVWF  xFC
16C4:  MOVLB  0
16C6:  CALL   0CCE
16CA:  BSF    FC2.1
16CC:  BTFSC  FC2.1
16CE:  BRA    16CC
16D0:  MOVFF  FC4,5FD
16D4:  MOVFF  FC3,5FC
16D8:  MOVLB  0
16DA:  CALL   0CF8
16DE:  MOVFF  03,5FB
16E2:  MOVFF  02,5FA
16E6:  MOVFF  01,5F9
16EA:  MOVFF  00,5F8
16EE:  MOVFF  5F8,00
16F2:  MOVFF  5F9,01
16F6:  MOVFF  5FA,02
16FA:  MOVFF  5FB,03
.................... } 
16FE:  RETLW  00
.................... float Leer_Sensor(int media) 
.................... { 
....................    Prom=0.0; 
*
1B28:  MOVLB  5
1B2A:  CLRF   xB9
1B2C:  CLRF   xB8
1B2E:  CLRF   xB7
1B30:  CLRF   xB6
....................    V0 = sensores(0);   //Lectura de Divisor de Voltaje de PT100 con resistencia de 6.18k (+-2%) 
1B32:  CLRF   xF7
1B34:  MOVLB  0
1B36:  RCALL  16A8
1B38:  MOVFF  03,5A1
1B3C:  MOVFF  02,5A0
1B40:  MOVFF  01,59F
1B44:  MOVFF  00,59E
....................    V0 = V0/49.9; // Se elimina la ganancia 
1B48:  MOVFF  5A1,5FE
1B4C:  MOVFF  5A0,5FD
1B50:  MOVFF  59F,5FC
1B54:  MOVFF  59E,5FB
1B58:  MOVLW  9A
1B5A:  MOVLB  6
1B5C:  MOVWF  x02
1B5E:  MOVLW  99
1B60:  MOVWF  x01
1B62:  MOVLW  47
1B64:  MOVWF  x00
1B66:  MOVLW  84
1B68:  MOVLB  5
1B6A:  MOVWF  xFF
1B6C:  MOVLB  0
1B6E:  RCALL  1700
1B70:  MOVFF  03,5A1
1B74:  MOVFF  02,5A0
1B78:  MOVFF  01,59F
1B7C:  MOVFF  00,59E
....................    Pt=(R1)/((1023.0/V0)-1.0); // Se calcula el valor de la PT100 
1B80:  MOVLB  5
1B82:  CLRF   xFE
1B84:  MOVLW  C0
1B86:  MOVWF  xFD
1B88:  MOVLW  7F
1B8A:  MOVWF  xFC
1B8C:  MOVLW  88
1B8E:  MOVWF  xFB
1B90:  MOVFF  5A1,602
1B94:  MOVFF  5A0,601
1B98:  MOVFF  59F,600
1B9C:  MOVFF  59E,5FF
1BA0:  MOVLB  0
1BA2:  RCALL  1700
1BA4:  MOVFF  00,5F7
1BA8:  MOVFF  01,5F8
1BAC:  MOVFF  02,5F9
1BB0:  MOVFF  03,5FA
1BB4:  BSF    FD8.1
1BB6:  MOVFF  03,5FE
1BBA:  MOVFF  02,5FD
1BBE:  MOVFF  01,5FC
1BC2:  MOVFF  00,5FB
1BC6:  MOVLB  6
1BC8:  CLRF   x02
1BCA:  CLRF   x01
1BCC:  CLRF   x00
1BCE:  MOVLW  7F
1BD0:  MOVLB  5
1BD2:  MOVWF  xFF
1BD4:  MOVLB  0
1BD6:  RCALL  187E
1BD8:  MOVFF  5A5,5FE
1BDC:  MOVFF  5A4,5FD
1BE0:  MOVFF  5A3,5FC
1BE4:  MOVFF  5A2,5FB
1BE8:  MOVFF  03,602
1BEC:  MOVFF  02,601
1BF0:  MOVFF  01,600
1BF4:  MOVFF  00,5FF
1BF8:  RCALL  1700
1BFA:  MOVFF  03,5A9
1BFE:  MOVFF  02,5A8
1C02:  MOVFF  01,5A7
1C06:  MOVFF  00,5A6
....................    //Pt=R1/((1023.0/V0)-1.0); // Se calcula el valor de la PT100 
....................    //Pt=Pt-0.5; 
....................     
....................              
....................    if(l>(media-1)) 
1C0A:  MOVLW  01
1C0C:  MOVLB  5
1C0E:  SUBWF  xF6,W
1C10:  SUBWF  x5F,W
1C12:  BZ    1C18
1C14:  BNC   1C18
....................    {l=0;} 
1C16:  CLRF   x5F
....................    //promedio[l]=Temperature;l++; 
....................    promedio[l]=Pt;l++; 
1C18:  CLRF   xFB
1C1A:  MOVFF  55F,5FA
1C1E:  CLRF   xFD
1C20:  MOVLW  04
1C22:  MOVWF  xFC
1C24:  MOVLB  0
1C26:  RCALL  1B06
1C28:  MOVF   01,W
1C2A:  ADDLW  16
1C2C:  MOVWF  FE9
1C2E:  MOVLW  04
1C30:  ADDWFC 02,W
1C32:  MOVWF  FEA
1C34:  MOVFF  5A6,FEF
1C38:  MOVFF  5A7,FEC
1C3C:  MOVFF  5A8,FEC
1C40:  MOVFF  5A9,FEC
1C44:  MOVLB  5
1C46:  INCF   x5F,F
....................           
....................    for(h=0;h<media;h++) 
1C48:  CLRF   x5E
1C4A:  MOVF   xF6,W
1C4C:  SUBWF  x5E,W
1C4E:  BC    1CCA
....................    { 
....................       Prom+=promedio[h]; 
1C50:  CLRF   xFB
1C52:  MOVFF  55E,5FA
1C56:  CLRF   xFD
1C58:  MOVLW  04
1C5A:  MOVWF  xFC
1C5C:  MOVLB  0
1C5E:  RCALL  1B06
1C60:  MOVFF  02,03
1C64:  MOVF   01,W
1C66:  ADDLW  16
1C68:  MOVWF  FE9
1C6A:  MOVLW  04
1C6C:  ADDWFC 02,W
1C6E:  MOVWF  FEA
1C70:  MOVFF  FEF,00
1C74:  MOVFF  FEC,01
1C78:  MOVFF  FEC,02
1C7C:  MOVFF  FEC,03
1C80:  MOVFF  FEA,5F8
1C84:  MOVFF  FE9,5F7
1C88:  BCF    FD8.1
1C8A:  MOVFF  5B9,5FE
1C8E:  MOVFF  5B8,5FD
1C92:  MOVFF  5B7,5FC
1C96:  MOVFF  5B6,5FB
1C9A:  MOVFF  03,602
1C9E:  MOVFF  02,601
1CA2:  MOVFF  01,600
1CA6:  MOVFF  00,5FF
1CAA:  RCALL  187E
1CAC:  MOVFF  5F8,FEA
1CB0:  MOVFF  5F7,FE9
1CB4:  MOVFF  03,5B9
1CB8:  MOVFF  02,5B8
1CBC:  MOVFF  01,5B7
1CC0:  MOVFF  00,5B6
....................    }  
1CC4:  MOVLB  5
1CC6:  INCF   x5E,F
1CC8:  BRA    1C4A
....................    Prom=Prom/media;    
1CCA:  CLRF   xFD
1CCC:  MOVFF  5F6,5FC
1CD0:  MOVLB  0
1CD2:  CALL   0CF8
1CD6:  MOVFF  5B9,5FE
1CDA:  MOVFF  5B8,5FD
1CDE:  MOVFF  5B7,5FC
1CE2:  MOVFF  5B6,5FB
1CE6:  MOVFF  03,602
1CEA:  MOVFF  02,601
1CEE:  MOVFF  01,600
1CF2:  MOVFF  00,5FF
1CF6:  RCALL  1700
1CF8:  MOVFF  03,5B9
1CFC:  MOVFF  02,5B8
1D00:  MOVFF  01,5B7
1D04:  MOVFF  00,5B6
....................    Temperature=(Prom-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
1D08:  BSF    FD8.1
1D0A:  MOVFF  5B9,5FE
1D0E:  MOVFF  5B8,5FD
1D12:  MOVFF  5B7,5FC
1D16:  MOVFF  5B6,5FB
1D1A:  MOVLB  6
1D1C:  CLRF   x02
1D1E:  CLRF   x01
1D20:  MOVLW  48
1D22:  MOVWF  x00
1D24:  MOVLW  85
1D26:  MOVLB  5
1D28:  MOVWF  xFF
1D2A:  MOVLB  0
1D2C:  RCALL  187E
1D2E:  MOVFF  00,5F7
1D32:  MOVFF  01,5F8
1D36:  MOVFF  02,5F9
1D3A:  MOVFF  03,5FA
1D3E:  MOVFF  03,5FE
1D42:  MOVFF  02,5FD
1D46:  MOVFF  01,5FC
1D4A:  MOVFF  00,5FB
1D4E:  MOVLW  B8
1D50:  MOVLB  6
1D52:  MOVWF  x02
1D54:  MOVLW  1E
1D56:  MOVWF  x01
1D58:  MOVLW  45
1D5A:  MOVWF  x00
1D5C:  MOVLW  7D
1D5E:  MOVLB  5
1D60:  MOVWF  xFF
1D62:  MOVLB  0
1D64:  RCALL  1700
1D66:  MOVFF  03,5BD
1D6A:  MOVFF  02,5BC
1D6E:  MOVFF  01,5BB
1D72:  MOVFF  00,5BA
....................    //Temperature=(Pt-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio. 
....................     
....................    Temperature+=((float)Ajuste-(float)Ajusten); 
1D76:  MOVLB  5
1D78:  CLRF   xFD
1D7A:  MOVFF  560,5FC
1D7E:  MOVLB  0
1D80:  CALL   0CF8
1D84:  MOVFF  00,5F7
1D88:  MOVFF  01,5F8
1D8C:  MOVFF  02,5F9
1D90:  MOVFF  03,5FA
1D94:  MOVLB  5
1D96:  CLRF   xFD
1D98:  MOVFF  561,5FC
1D9C:  MOVLB  0
1D9E:  CALL   0CF8
1DA2:  BSF    FD8.1
1DA4:  MOVFF  5FA,5FE
1DA8:  MOVFF  5F9,5FD
1DAC:  MOVFF  5F8,5FC
1DB0:  MOVFF  5F7,5FB
1DB4:  MOVFF  03,602
1DB8:  MOVFF  02,601
1DBC:  MOVFF  01,600
1DC0:  MOVFF  00,5FF
1DC4:  RCALL  187E
1DC6:  BCF    FD8.1
1DC8:  MOVFF  5BD,5FE
1DCC:  MOVFF  5BC,5FD
1DD0:  MOVFF  5BB,5FC
1DD4:  MOVFF  5BA,5FB
1DD8:  MOVFF  03,602
1DDC:  MOVFF  02,601
1DE0:  MOVFF  01,600
1DE4:  MOVFF  00,5FF
1DE8:  RCALL  187E
1DEA:  MOVFF  03,5BD
1DEE:  MOVFF  02,5BC
1DF2:  MOVFF  01,5BB
1DF6:  MOVFF  00,5BA
....................     
....................    //return Prom; 
....................    return Temperature; 
1DFA:  MOVFF  5BA,00
1DFE:  MOVFF  5BB,01
1E02:  MOVFF  5BC,02
1E06:  MOVFF  5BD,03
.................... } 
1E0A:  RETLW  00
....................  
.................... void Controla(){ 
.................... //-------------------------------Control de Calentamiento------------------------------------------------------------//          
....................    if(tiemporecta>=60) 
*
2778:  MOVLB  5
277A:  MOVF   x63,W
277C:  SUBLW  3B
277E:  BC    2788
....................    { 
....................       ActualizaRecta(); 
2780:  MOVLB  0
2782:  BRA    26CE
....................       tiemporecta=0; 
2784:  MOVLB  5
2786:  CLRF   x63
....................    } 
....................     
....................    if(tiemposetpoint>600) 
2788:  MOVF   x7F,W
278A:  SUBLW  01
278C:  BC    279A
278E:  XORLW  FF
2790:  BNZ   2798
2792:  MOVF   x7E,W
2794:  SUBLW  58
2796:  BC    279A
....................    { 
....................       flag_control=1; 
2798:  BSF    x66.5
....................    } 
....................     
....................    if(flag_ventilador==0) 
279A:  MOVF   x69,F
279C:  BNZ   27A4
....................    { 
....................       Ventilador_on; 
279E:  BSF    F8B.1
27A0:  BCF    F94.1
....................    } 
....................    else 
27A2:  BRA    27B2
....................    { 
....................       if(estado_ventilador==1) 
27A4:  BTFSS  x65.5
27A6:  BRA    27AE
....................       { 
....................          Ventilador_on; 
27A8:  BSF    F8B.1
27AA:  BCF    F94.1
....................       } 
....................       else 
27AC:  BRA    27B2
....................       { 
....................          Ventilador_off; 
27AE:  BCF    F8B.1
27B0:  BCF    F94.1
....................       } 
....................    } 
....................    
....................    error=desvio+Setpoint-Temperatura;      // Cálculo del error ****** 
27B2:  CLRF   xFD
27B4:  MOVFF  570,5FC
27B8:  MOVLB  0
27BA:  CALL   0CF8
27BE:  BCF    FD8.1
27C0:  MOVFF  5C9,5FE
27C4:  MOVFF  5C8,5FD
27C8:  MOVFF  5C7,5FC
27CC:  MOVFF  5C6,5FB
27D0:  MOVFF  03,602
27D4:  MOVFF  02,601
27D8:  MOVFF  01,600
27DC:  MOVFF  00,5FF
27E0:  CALL   187E
27E4:  MOVFF  00,5F6
27E8:  MOVFF  01,5F7
27EC:  MOVFF  02,5F8
27F0:  MOVFF  03,5F9
27F4:  BSF    FD8.1
27F6:  MOVFF  03,5FE
27FA:  MOVFF  02,5FD
27FE:  MOVFF  01,5FC
2802:  MOVFF  00,5FB
2806:  MOVFF  5D5,602
280A:  MOVFF  5D4,601
280E:  MOVFF  5D3,600
2812:  MOVFF  5D2,5FF
2816:  CALL   187E
281A:  MOVFF  03,5B5
281E:  MOVFF  02,5B4
2822:  MOVFF  01,5B3
2826:  MOVFF  00,5B2
....................     
....................    if(error>1.0 && error<50 && Aumento<0.3 && flag_setpoint==0) 
282A:  MOVLB  5
282C:  CLRF   xF9
282E:  CLRF   xF8
2830:  CLRF   xF7
2832:  MOVLW  7F
2834:  MOVWF  xF6
2836:  MOVFF  5B5,5FD
283A:  MOVFF  5B4,5FC
283E:  MOVFF  5B3,5FB
2842:  MOVFF  5B2,5FA
2846:  MOVLB  0
2848:  RCALL  2654
284A:  BTFSS  FD8.0
284C:  BRA    29C6
284E:  MOVFF  5B5,5F9
2852:  MOVFF  5B4,5F8
2856:  MOVFF  5B3,5F7
285A:  MOVFF  5B2,5F6
285E:  MOVLB  5
2860:  CLRF   xFD
2862:  CLRF   xFC
2864:  MOVLW  48
2866:  MOVWF  xFB
2868:  MOVLW  84
286A:  MOVWF  xFA
286C:  MOVLB  0
286E:  RCALL  2654
2870:  BTFSS  FD8.0
2872:  BRA    29C6
2874:  MOVFF  5D1,5F9
2878:  MOVFF  5D0,5F8
287C:  MOVFF  5CF,5F7
2880:  MOVFF  5CE,5F6
2884:  MOVLW  9A
2886:  MOVLB  5
2888:  MOVWF  xFD
288A:  MOVLW  99
288C:  MOVWF  xFC
288E:  MOVLW  19
2890:  MOVWF  xFB
2892:  MOVLW  7D
2894:  MOVWF  xFA
2896:  MOVLB  0
2898:  RCALL  2654
289A:  BTFSS  FD8.0
289C:  BRA    29C6
289E:  MOVLB  5
28A0:  BTFSS  x66.4
28A2:  BRA    28A8
28A4:  MOVLB  0
28A6:  BRA    29C6
....................    { 
....................       if(Potencia<90.0) 
28A8:  MOVFF  585,5F9
28AC:  MOVFF  584,5F8
28B0:  MOVFF  583,5F7
28B4:  MOVFF  582,5F6
28B8:  CLRF   xFD
28BA:  CLRF   xFC
28BC:  MOVLW  34
28BE:  MOVWF  xFB
28C0:  MOVLW  85
28C2:  MOVWF  xFA
28C4:  MOVLB  0
28C6:  RCALL  2654
28C8:  BTFSS  FD8.0
28CA:  BRA    29C6
....................       { 
....................          if(TiempoControl>=120) 
28CC:  MOVLB  5
28CE:  MOVF   x6F,W
28D0:  SUBLW  77
28D2:  BTFSC  FD8.0
28D4:  BRA    29C8
....................          { 
....................             TiempoControl=0; 
28D6:  CLRF   x6F
....................             if(Aumento<-0.5) 
28D8:  MOVFF  5D1,5F9
28DC:  MOVFF  5D0,5F8
28E0:  MOVFF  5CF,5F7
28E4:  MOVFF  5CE,5F6
28E8:  CLRF   xFD
28EA:  CLRF   xFC
28EC:  MOVLW  80
28EE:  MOVWF  xFB
28F0:  MOVLW  7E
28F2:  MOVWF  xFA
28F4:  MOVLB  0
28F6:  RCALL  2654
28F8:  BNC   2932
....................             { 
....................                Ganancia+=2; 
28FA:  BCF    FD8.1
28FC:  MOVFF  5C5,5FE
2900:  MOVFF  5C4,5FD
2904:  MOVFF  5C3,5FC
2908:  MOVFF  5C2,5FB
290C:  MOVLB  6
290E:  CLRF   x02
2910:  CLRF   x01
2912:  CLRF   x00
2914:  MOVLW  80
2916:  MOVLB  5
2918:  MOVWF  xFF
291A:  MOVLB  0
291C:  CALL   187E
2920:  MOVFF  03,5C5
2924:  MOVFF  02,5C4
2928:  MOVFF  01,5C3
292C:  MOVFF  00,5C2
....................             } 
....................             else 
2930:  BRA    29C6
....................             { 
....................                if(Aumento<-0.1) 
2932:  MOVFF  5D1,5F9
2936:  MOVFF  5D0,5F8
293A:  MOVFF  5CF,5F7
293E:  MOVFF  5CE,5F6
2942:  MOVLW  CD
2944:  MOVLB  5
2946:  MOVWF  xFD
2948:  MOVLW  CC
294A:  MOVWF  xFC
294C:  MOVWF  xFB
294E:  MOVLW  7B
2950:  MOVWF  xFA
2952:  MOVLB  0
2954:  RCALL  2654
2956:  BNC   2990
....................                { 
....................                   Ganancia+=1; 
2958:  BCF    FD8.1
295A:  MOVFF  5C5,5FE
295E:  MOVFF  5C4,5FD
2962:  MOVFF  5C3,5FC
2966:  MOVFF  5C2,5FB
296A:  MOVLB  6
296C:  CLRF   x02
296E:  CLRF   x01
2970:  CLRF   x00
2972:  MOVLW  7F
2974:  MOVLB  5
2976:  MOVWF  xFF
2978:  MOVLB  0
297A:  CALL   187E
297E:  MOVFF  03,5C5
2982:  MOVFF  02,5C4
2986:  MOVFF  01,5C3
298A:  MOVFF  00,5C2
....................                }    
....................                else 
298E:  BRA    29C6
....................                { 
....................                   Ganancia+=0.5; 
2990:  BCF    FD8.1
2992:  MOVFF  5C5,5FE
2996:  MOVFF  5C4,5FD
299A:  MOVFF  5C3,5FC
299E:  MOVFF  5C2,5FB
29A2:  MOVLB  6
29A4:  CLRF   x02
29A6:  CLRF   x01
29A8:  CLRF   x00
29AA:  MOVLW  7E
29AC:  MOVLB  5
29AE:  MOVWF  xFF
29B0:  MOVLB  0
29B2:  CALL   187E
29B6:  MOVFF  03,5C5
29BA:  MOVFF  02,5C4
29BE:  MOVFF  01,5C3
29C2:  MOVFF  00,5C2
29C6:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................    } 
....................     
....................    if(error<-1.0) 
29C8:  MOVFF  5B5,5F9
29CC:  MOVFF  5B4,5F8
29D0:  MOVFF  5B3,5F7
29D4:  MOVFF  5B2,5F6
29D8:  CLRF   xFD
29DA:  CLRF   xFC
29DC:  MOVLW  80
29DE:  MOVWF  xFB
29E0:  MOVLW  7F
29E2:  MOVWF  xFA
29E4:  MOVLB  0
29E6:  RCALL  2654
29E8:  BNC   2A30
....................    { 
....................       if(TiempoControl>=120) 
29EA:  MOVLB  5
29EC:  MOVF   x6F,W
29EE:  SUBLW  77
29F0:  BC    2A32
....................       { 
....................          TiempoControl=0; 
29F2:  CLRF   x6F
....................          Ganancia-=0.2; 
29F4:  BSF    FD8.1
29F6:  MOVFF  5C5,5FE
29FA:  MOVFF  5C4,5FD
29FE:  MOVFF  5C3,5FC
2A02:  MOVFF  5C2,5FB
2A06:  MOVLW  CD
2A08:  MOVLB  6
2A0A:  MOVWF  x02
2A0C:  MOVLW  CC
2A0E:  MOVWF  x01
2A10:  MOVLW  4C
2A12:  MOVWF  x00
2A14:  MOVLW  7C
2A16:  MOVLB  5
2A18:  MOVWF  xFF
2A1A:  MOVLB  0
2A1C:  CALL   187E
2A20:  MOVFF  03,5C5
2A24:  MOVFF  02,5C4
2A28:  MOVFF  01,5C3
2A2C:  MOVFF  00,5C2
2A30:  MOVLB  5
....................       } 
....................    } 
....................     
....................    if(Ganancia<0.5) 
2A32:  MOVFF  5C5,5F9
2A36:  MOVFF  5C4,5F8
2A3A:  MOVFF  5C3,5F7
2A3E:  MOVFF  5C2,5F6
2A42:  CLRF   xFD
2A44:  CLRF   xFC
2A46:  CLRF   xFB
2A48:  MOVLW  7E
2A4A:  MOVWF  xFA
2A4C:  MOVLB  0
2A4E:  RCALL  2654
2A50:  BNC   2A60
....................    { 
....................       Ganancia=0.5; 
2A52:  MOVLB  5
2A54:  CLRF   xC5
2A56:  CLRF   xC4
2A58:  CLRF   xC3
2A5A:  MOVLW  7E
2A5C:  MOVWF  xC2
2A5E:  MOVLB  0
....................    } 
....................    if(Ganancia>Gananciamax) 
2A60:  MOVFF  58D,5F9
2A64:  MOVFF  58C,5F8
2A68:  MOVFF  58B,5F7
2A6C:  MOVFF  58A,5F6
2A70:  MOVFF  5C5,5FD
2A74:  MOVFF  5C4,5FC
2A78:  MOVFF  5C3,5FB
2A7C:  MOVFF  5C2,5FA
2A80:  RCALL  2654
2A82:  BNC   2A94
....................    { 
....................       Ganancia=Gananciamax; 
2A84:  MOVFF  58D,5C5
2A88:  MOVFF  58C,5C4
2A8C:  MOVFF  58B,5C3
2A90:  MOVFF  58A,5C2
....................    } 
....................     
....................    if(error<0.0)     // Anti Wind_DOWN     
2A94:  MOVFF  5B5,5F9
2A98:  MOVFF  5B4,5F8
2A9C:  MOVFF  5B3,5F7
2AA0:  MOVFF  5B2,5F6
2AA4:  MOVLB  5
2AA6:  CLRF   xFD
2AA8:  CLRF   xFC
2AAA:  CLRF   xFB
2AAC:  CLRF   xFA
2AAE:  MOVLB  0
2AB0:  RCALL  2654
2AB2:  BNC   2AC0
....................    { 
....................       error=0.0; 
2AB4:  MOVLB  5
2AB6:  CLRF   xB5
2AB8:  CLRF   xB4
2ABA:  CLRF   xB3
2ABC:  CLRF   xB2
2ABE:  MOVLB  0
....................    } 
....................    //tmp=(Setpoint-Prom)*Ganancia;  // Control Proporcional. 
....................    tmp=error*Ganancia;  // Control Proporcional. 
2AC0:  MOVFF  5B5,616
2AC4:  MOVFF  5B4,615
2AC8:  MOVFF  5B3,614
2ACC:  MOVFF  5B2,613
2AD0:  MOVFF  5C5,61A
2AD4:  MOVFF  5C4,619
2AD8:  MOVFF  5C3,618
2ADC:  MOVFF  5C2,617
2AE0:  CALL   1E0C
2AE4:  MOVFF  03,5C1
2AE8:  MOVFF  02,5C0
2AEC:  MOVFF  01,5BF
2AF0:  MOVFF  00,5BE
....................           
....................    if(tmp>Setpoint)   // Anti Wind-UP       
2AF4:  MOVLB  5
2AF6:  CLRF   xFD
2AF8:  MOVFF  570,5FC
2AFC:  MOVLB  0
2AFE:  CALL   0CF8
2B02:  MOVFF  03,5F9
2B06:  MOVFF  02,5F8
2B0A:  MOVFF  01,5F7
2B0E:  MOVFF  00,5F6
2B12:  MOVFF  5C1,5FD
2B16:  MOVFF  5C0,5FC
2B1A:  MOVFF  5BF,5FB
2B1E:  MOVFF  5BE,5FA
2B22:  RCALL  2654
2B24:  BNC   2B44
....................    { 
....................       tmp=Setpoint; 
2B26:  MOVLB  5
2B28:  CLRF   xFD
2B2A:  MOVFF  570,5FC
2B2E:  MOVLB  0
2B30:  CALL   0CF8
2B34:  MOVFF  03,5C1
2B38:  MOVFF  02,5C0
2B3C:  MOVFF  01,5BF
2B40:  MOVFF  00,5BE
....................    } 
....................                 
....................    if(tmp<0.0)     // Anti Wind_DOWN     
2B44:  MOVFF  5C1,5F9
2B48:  MOVFF  5C0,5F8
2B4C:  MOVFF  5BF,5F7
2B50:  MOVFF  5BE,5F6
2B54:  MOVLB  5
2B56:  CLRF   xFD
2B58:  CLRF   xFC
2B5A:  CLRF   xFB
2B5C:  CLRF   xFA
2B5E:  MOVLB  0
2B60:  RCALL  2654
2B62:  BNC   2B6E
....................    { 
....................       tmp=0.0; 
2B64:  MOVLB  5
2B66:  CLRF   xC1
2B68:  CLRF   xC0
2B6A:  CLRF   xBF
2B6C:  CLRF   xBE
....................    } 
....................     
....................    // Tpulso(t)= Tciclo*(y(t)-ymin)/(ymax - ymin); calculo de ciclo util para control de resistencia.ymax=140.ymin=0; 
....................    // Tpulso es float, hay que pasar ese ciclo a una salida de un puerto usando el TMR1. 
....................    Tpulso=(tmp/Setpoint)*Tciclo;   
2B6E:  MOVLB  5
2B70:  CLRF   xFD
2B72:  MOVFF  570,5FC
2B76:  MOVLB  0
2B78:  CALL   0CF8
2B7C:  MOVFF  5C1,5FE
2B80:  MOVFF  5C0,5FD
2B84:  MOVFF  5BF,5FC
2B88:  MOVFF  5BE,5FB
2B8C:  MOVFF  03,602
2B90:  MOVFF  02,601
2B94:  MOVFF  01,600
2B98:  MOVFF  00,5FF
2B9C:  CALL   1700
2BA0:  MOVFF  00,5F6
2BA4:  MOVFF  01,5F7
2BA8:  MOVFF  02,5F8
2BAC:  MOVFF  03,5F9
2BB0:  MOVFF  03,616
2BB4:  MOVFF  02,615
2BB8:  MOVFF  01,614
2BBC:  MOVFF  00,613
2BC0:  MOVFF  5AD,61A
2BC4:  MOVFF  5AC,619
2BC8:  MOVFF  5AB,618
2BCC:  MOVFF  5AA,617
2BD0:  CALL   1E0C
2BD4:  MOVFF  03,5B1
2BD8:  MOVFF  02,5B0
2BDC:  MOVFF  01,5AF
2BE0:  MOVFF  00,5AE
....................    
....................     
....................    if(tiempoctrl<(int16)(Tpulso/0.005)) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
2BE4:  MOVFF  5B1,5FE
2BE8:  MOVFF  5B0,5FD
2BEC:  MOVFF  5AF,5FC
2BF0:  MOVFF  5AE,5FB
2BF4:  MOVLW  0A
2BF6:  MOVLB  6
2BF8:  MOVWF  x02
2BFA:  MOVLW  D7
2BFC:  MOVWF  x01
2BFE:  MOVLW  23
2C00:  MOVWF  x00
2C02:  MOVLW  77
2C04:  MOVLB  5
2C06:  MOVWF  xFF
2C08:  MOVLB  0
2C0A:  CALL   1700
2C0E:  MOVFF  03,5F9
2C12:  MOVFF  02,5F8
2C16:  MOVFF  01,5F7
2C1A:  MOVFF  00,5F6
2C1E:  RCALL  273C
2C20:  MOVFF  02,03
2C24:  MOVF   01,W
2C26:  MOVLB  5
2C28:  MOVF   x79,W
2C2A:  SUBWF  02,W
2C2C:  BNC   2C40
2C2E:  BNZ   2C36
2C30:  MOVF   01,W
2C32:  SUBWF  x78,W
2C34:  BC    2C40
....................    { 
....................       Resistencia_on; 
2C36:  BSF    F8B.0
2C38:  BCF    F94.0
....................       Resistencia2_on; 
2C3A:  BSF    F8B.2
2C3C:  BCF    F94.2
....................    } 
....................    else          
2C3E:  BRA    2C48
....................    { 
....................       Resistencia_off; 
2C40:  BCF    F8B.0
2C42:  BCF    F94.0
....................       Resistencia2_off; 
2C44:  BCF    F8B.2
2C46:  BCF    F94.2
....................    } 
....................           
....................    if(tiempoctrl>=(int16)(Tciclo/0.005)) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
2C48:  MOVFF  5AD,5FE
2C4C:  MOVFF  5AC,5FD
2C50:  MOVFF  5AB,5FC
2C54:  MOVFF  5AA,5FB
2C58:  MOVLW  0A
2C5A:  MOVLB  6
2C5C:  MOVWF  x02
2C5E:  MOVLW  D7
2C60:  MOVWF  x01
2C62:  MOVLW  23
2C64:  MOVWF  x00
2C66:  MOVLW  77
2C68:  MOVLB  5
2C6A:  MOVWF  xFF
2C6C:  MOVLB  0
2C6E:  CALL   1700
2C72:  MOVFF  03,5F9
2C76:  MOVFF  02,5F8
2C7A:  MOVFF  01,5F7
2C7E:  MOVFF  00,5F6
2C82:  RCALL  273C
2C84:  MOVF   02,W
2C86:  MOVWF  03
2C88:  MOVLB  5
2C8A:  SUBWF  x79,W
2C8C:  BNC   2C9A
2C8E:  BNZ   2C96
2C90:  MOVF   01,W
2C92:  SUBWF  x78,W
2C94:  BNC   2C9A
....................    { 
....................       tiempoctrl=0; 
2C96:  CLRF   x79
2C98:  CLRF   x78
....................    } // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
....................                                        
.................... //--------------------------------------------------------------------------------------------------------------------//    
.................... } 
2C9A:  MOVLB  0
2C9C:  RETLW  00
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
13A0:  MOVLB  5
13A2:  MOVFF  5F6,01
13A6:  MOVFF  5F7,03
13AA:  MOVFF  5F6,5FC
13AE:  MOVFF  5F7,5FD
13B2:  MOVLW  05
13B4:  MOVWF  FEA
13B6:  MOVLW  D6
13B8:  MOVWF  FE9
13BA:  MOVFF  5F7,FE2
13BE:  MOVFF  5F6,FE1
13C2:  MOVF   FE7,F
13C4:  MOVFF  FE6,FEE
13C8:  BNZ   13C2
....................    if(sombreado==2) 
13CA:  MOVF   xFA,W
13CC:  SUBLW  02
13CE:  BNZ   13FC
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
13D0:  MOVLW  01
13D2:  ADDWF  xF8,W
13D4:  MOVWF  xFC
13D6:  MOVLW  01
13D8:  ADDWF  xF9,W
13DA:  MOVWF  xFD
13DC:  MOVFF  5FC,607
13E0:  MOVFF  FE8,608
13E4:  MOVLW  05
13E6:  MOVLB  6
13E8:  MOVWF  x0A
13EA:  MOVLW  D6
13EC:  MOVWF  x09
13EE:  MOVFF  5FB,60B
13F2:  MOVLW  01
13F4:  MOVWF  x0C
13F6:  MOVLB  0
13F8:  RCALL  0FE8
13FA:  MOVLB  5
....................    if(sombreado==1) 
13FC:  DECFSZ xFA,W
13FE:  BRA    1450
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
1400:  MOVF   xFB,W
1402:  MULLW  08
1404:  MOVF   FF3,W
1406:  ADDWF  xF9,W
1408:  MOVWF  xFC
140A:  MOVLB  6
140C:  CLRF   x08
140E:  MOVFF  5F9,609
1412:  MOVLW  7F
1414:  MOVWF  x0A
1416:  MOVFF  5FC,60B
141A:  MOVLW  01
141C:  MOVWF  x0C
141E:  MOVWF  x0D
1420:  MOVLB  0
1422:  RCALL  12DE
1424:  MOVLW  01
1426:  MOVLB  5
1428:  ADDWF  xF8,W
142A:  MOVWF  xFC
142C:  MOVLW  01
142E:  ADDWF  xF9,W
1430:  MOVWF  xFD
1432:  MOVFF  5FC,607
1436:  MOVFF  FE8,608
143A:  MOVLW  05
143C:  MOVLB  6
143E:  MOVWF  x0A
1440:  MOVLW  D6
1442:  MOVWF  x09
1444:  MOVFF  5FB,60B
1448:  CLRF   x0C
144A:  MOVLB  0
144C:  RCALL  0FE8
144E:  MOVLB  5
....................    if(sombreado==0) 
1450:  MOVF   xFA,F
1452:  BNZ   14A4
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1454:  MOVF   xFB,W
1456:  MULLW  08
1458:  MOVF   FF3,W
145A:  ADDWF  xF9,W
145C:  MOVWF  xFC
145E:  MOVLB  6
1460:  CLRF   x08
1462:  MOVFF  5F9,609
1466:  MOVLW  7F
1468:  MOVWF  x0A
146A:  MOVFF  5FC,60B
146E:  MOVLW  01
1470:  MOVWF  x0C
1472:  CLRF   x0D
1474:  MOVLB  0
1476:  RCALL  12DE
1478:  MOVLW  01
147A:  MOVLB  5
147C:  ADDWF  xF8,W
147E:  MOVWF  xFC
1480:  MOVLW  01
1482:  ADDWF  xF9,W
1484:  MOVWF  xFD
1486:  MOVFF  5FC,607
148A:  MOVFF  FE8,608
148E:  MOVLW  05
1490:  MOVLB  6
1492:  MOVWF  x0A
1494:  MOVLW  D6
1496:  MOVWF  x09
1498:  MOVFF  5FB,60B
149C:  MOVLW  01
149E:  MOVWF  x0C
14A0:  MOVLB  0
14A2:  RCALL  0FE8
....................    glcd_update(); 
14A4:  MOVLB  0
14A6:  RCALL  0DC8
.................... } 
14A8:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
23A2:  MOVLB  5
23A4:  MOVF   xFA,W
23A6:  SUBLW  02
23A8:  BNZ   2428
....................    { 
....................       sprintf(voltage, "%03u", digito); 
23AA:  MOVLW  05
23AC:  MOVWF  xF5
23AE:  MOVLW  FC
23B0:  MOVWF  xF4
23B2:  MOVFF  5F7,605
23B6:  MOVLW  03
23B8:  MOVLB  6
23BA:  MOVWF  x06
23BC:  MOVLB  0
23BE:  RCALL  21A4
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
23C0:  MOVLB  5
23C2:  MOVF   xFB,W
23C4:  MULLW  12
23C6:  MOVF   FF3,W
23C8:  ADDWF  xF8,W
23CA:  MOVLB  6
23CC:  MOVWF  x05
23CE:  MOVLB  5
23D0:  MOVF   xFB,W
23D2:  MULLW  08
23D4:  MOVF   FF3,W
23D6:  ADDWF  xF9,W
23D8:  MOVLB  6
23DA:  MOVWF  x06
23DC:  MOVFF  5F8,608
23E0:  MOVFF  5F9,609
23E4:  MOVFF  605,60A
23E8:  MOVWF  x0B
23EA:  MOVLW  01
23EC:  MOVWF  x0C
23EE:  MOVWF  x0D
23F0:  MOVLB  0
23F2:  CALL   12DE
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
23F6:  MOVLW  01
23F8:  MOVLB  5
23FA:  ADDWF  xF8,W
23FC:  MOVLB  6
23FE:  MOVWF  x05
2400:  MOVLW  01
2402:  MOVLB  5
2404:  ADDWF  xF9,W
2406:  MOVLB  6
2408:  MOVWF  x06
240A:  MOVFF  605,607
240E:  MOVWF  x08
2410:  MOVLW  05
2412:  MOVWF  x0A
2414:  MOVLW  FC
2416:  MOVWF  x09
2418:  MOVFF  5FB,60B
241C:  CLRF   x0C
241E:  MOVLB  0
2420:  CALL   0FE8
....................    } 
....................    else 
2424:  BRA    2594
2426:  MOVLB  5
....................    { 
....................       if(sombreado==3) 
2428:  MOVF   xFA,W
242A:  SUBLW  03
242C:  BNZ   24AC
....................       { 
....................          sprintf(voltage, "%03u", digito); 
242E:  MOVLW  05
2430:  MOVWF  xF5
2432:  MOVLW  FC
2434:  MOVWF  xF4
2436:  MOVFF  5F7,605
243A:  MOVLW  03
243C:  MOVLB  6
243E:  MOVWF  x06
2440:  MOVLB  0
2442:  RCALL  21A4
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
2444:  MOVLB  5
2446:  MOVF   xFB,W
2448:  MULLW  12
244A:  MOVF   FF3,W
244C:  ADDWF  xF8,W
244E:  MOVLB  6
2450:  MOVWF  x05
2452:  MOVLB  5
2454:  MOVF   xFB,W
2456:  MULLW  08
2458:  MOVF   FF3,W
245A:  ADDWF  xF9,W
245C:  MOVLB  6
245E:  MOVWF  x06
2460:  MOVFF  5F8,608
2464:  MOVFF  5F9,609
2468:  MOVFF  605,60A
246C:  MOVWF  x0B
246E:  MOVLW  01
2470:  MOVWF  x0C
2472:  CLRF   x0D
2474:  MOVLB  0
2476:  CALL   12DE
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
247A:  MOVLW  01
247C:  MOVLB  5
247E:  ADDWF  xF8,W
2480:  MOVLB  6
2482:  MOVWF  x05
2484:  MOVLW  01
2486:  MOVLB  5
2488:  ADDWF  xF9,W
248A:  MOVLB  6
248C:  MOVWF  x06
248E:  MOVFF  605,607
2492:  MOVWF  x08
2494:  MOVLW  05
2496:  MOVWF  x0A
2498:  MOVLW  FC
249A:  MOVWF  x09
249C:  MOVFF  5FB,60B
24A0:  MOVLW  01
24A2:  MOVWF  x0C
24A4:  MOVLB  0
24A6:  CALL   0FE8
24AA:  MOVLB  5
....................       } 
....................       sprintf(voltage, "%u", digito); 
24AC:  MOVLW  05
24AE:  MOVWF  xF5
24B0:  MOVLW  FC
24B2:  MOVWF  xF4
24B4:  MOVFF  5F7,605
24B8:  MOVLW  1B
24BA:  MOVLB  6
24BC:  MOVWF  x06
24BE:  MOVLB  0
24C0:  RCALL  21A4
....................       if(sombreado==1) 
24C2:  MOVLB  5
24C4:  DECFSZ xFA,W
24C6:  BRA    252C
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
24C8:  MOVF   xFB,W
24CA:  MULLW  05
24CC:  MOVF   FF3,W
24CE:  ADDWF  xF8,W
24D0:  MOVLB  6
24D2:  MOVWF  x05
24D4:  MOVLB  5
24D6:  MOVF   xFB,W
24D8:  MULLW  08
24DA:  MOVF   FF3,W
24DC:  ADDWF  xF9,W
24DE:  MOVLB  6
24E0:  MOVWF  x06
24E2:  MOVFF  5F8,608
24E6:  MOVFF  5F9,609
24EA:  MOVFF  605,60A
24EE:  MOVWF  x0B
24F0:  MOVLW  01
24F2:  MOVWF  x0C
24F4:  MOVWF  x0D
24F6:  MOVLB  0
24F8:  CALL   12DE
24FC:  MOVLW  01
24FE:  MOVLB  5
2500:  ADDWF  xF8,W
2502:  MOVLB  6
2504:  MOVWF  x05
2506:  MOVLW  01
2508:  MOVLB  5
250A:  ADDWF  xF9,W
250C:  MOVLB  6
250E:  MOVWF  x06
2510:  MOVFF  605,607
2514:  MOVWF  x08
2516:  MOVLW  05
2518:  MOVWF  x0A
251A:  MOVLW  FC
251C:  MOVWF  x09
251E:  MOVFF  5FB,60B
2522:  CLRF   x0C
2524:  MOVLB  0
2526:  CALL   0FE8
252A:  MOVLB  5
....................       if(sombreado==0) 
252C:  MOVF   xFA,F
252E:  BNZ   2596
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
2530:  MOVF   xFB,W
2532:  MULLW  05
2534:  MOVF   FF3,W
2536:  ADDWF  xF8,W
2538:  MOVLB  6
253A:  MOVWF  x05
253C:  MOVLB  5
253E:  MOVF   xFB,W
2540:  MULLW  08
2542:  MOVF   FF3,W
2544:  ADDWF  xF9,W
2546:  MOVLB  6
2548:  MOVWF  x06
254A:  MOVFF  5F8,608
254E:  MOVFF  5F9,609
2552:  MOVFF  605,60A
2556:  MOVWF  x0B
2558:  MOVLW  01
255A:  MOVWF  x0C
255C:  CLRF   x0D
255E:  MOVLB  0
2560:  CALL   12DE
2564:  MOVLW  01
2566:  MOVLB  5
2568:  ADDWF  xF8,W
256A:  MOVLB  6
256C:  MOVWF  x05
256E:  MOVLW  01
2570:  MOVLB  5
2572:  ADDWF  xF9,W
2574:  MOVLB  6
2576:  MOVWF  x06
2578:  MOVFF  605,607
257C:  MOVWF  x08
257E:  MOVLW  05
2580:  MOVWF  x0A
2582:  MOVLW  FC
2584:  MOVWF  x09
2586:  MOVFF  5FB,60B
258A:  MOVLW  01
258C:  MOVWF  x0C
258E:  MOVLB  0
2590:  CALL   0FE8
2594:  MOVLB  5
....................    } 
....................    glcd_update(); 
2596:  MOVLB  0
2598:  CALL   0DC8
.................... } 
259C:  RETLW  00
....................  
.................... void displayTemperatura(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
222A:  MOVLB  5
222C:  MOVF   xFA,W
222E:  SUBLW  02
2230:  BNZ   22B0
....................    { 
....................       sprintf(voltage, "%03u", digito); 
2232:  MOVLW  05
2234:  MOVWF  xF5
2236:  MOVLW  FC
2238:  MOVWF  xF4
223A:  MOVFF  5F7,605
223E:  MOVLW  03
2240:  MOVLB  6
2242:  MOVWF  x06
2244:  MOVLB  0
2246:  RCALL  21A4
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
2248:  MOVLB  5
224A:  MOVF   xFB,W
224C:  MULLW  12
224E:  MOVF   FF3,W
2250:  ADDWF  xF8,W
2252:  MOVLB  6
2254:  MOVWF  x05
2256:  MOVLB  5
2258:  MOVF   xFB,W
225A:  MULLW  08
225C:  MOVF   FF3,W
225E:  ADDWF  xF9,W
2260:  MOVLB  6
2262:  MOVWF  x06
2264:  MOVFF  5F8,608
2268:  MOVFF  5F9,609
226C:  MOVFF  605,60A
2270:  MOVWF  x0B
2272:  MOVLW  01
2274:  MOVWF  x0C
2276:  MOVWF  x0D
2278:  MOVLB  0
227A:  CALL   12DE
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
227E:  MOVLW  01
2280:  MOVLB  5
2282:  ADDWF  xF8,W
2284:  MOVLB  6
2286:  MOVWF  x05
2288:  MOVLW  01
228A:  MOVLB  5
228C:  ADDWF  xF9,W
228E:  MOVLB  6
2290:  MOVWF  x06
2292:  MOVFF  605,607
2296:  MOVWF  x08
2298:  MOVLW  05
229A:  MOVWF  x0A
229C:  MOVLW  FC
229E:  MOVWF  x09
22A0:  MOVFF  5FB,60B
22A4:  CLRF   x0C
22A6:  MOVLB  0
22A8:  CALL   0FE8
....................    } 
....................    else 
22AC:  BRA    2398
22AE:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%03u", digito); 
22B0:  MOVLW  05
22B2:  MOVWF  xF5
22B4:  MOVLW  FC
22B6:  MOVWF  xF4
22B8:  MOVFF  5F7,605
22BC:  MOVLW  03
22BE:  MOVLB  6
22C0:  MOVWF  x06
22C2:  MOVLB  0
22C4:  RCALL  21A4
....................     
....................       if(sombreado==1) 
22C6:  MOVLB  5
22C8:  DECFSZ xFA,W
22CA:  BRA    2330
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
22CC:  MOVF   xFB,W
22CE:  MULLW  05
22D0:  MOVF   FF3,W
22D2:  ADDWF  xF8,W
22D4:  MOVLB  6
22D6:  MOVWF  x05
22D8:  MOVLB  5
22DA:  MOVF   xFB,W
22DC:  MULLW  08
22DE:  MOVF   FF3,W
22E0:  ADDWF  xF9,W
22E2:  MOVLB  6
22E4:  MOVWF  x06
22E6:  MOVFF  5F8,608
22EA:  MOVFF  5F9,609
22EE:  MOVFF  605,60A
22F2:  MOVWF  x0B
22F4:  MOVLW  01
22F6:  MOVWF  x0C
22F8:  MOVWF  x0D
22FA:  MOVLB  0
22FC:  CALL   12DE
2300:  MOVLW  01
2302:  MOVLB  5
2304:  ADDWF  xF8,W
2306:  MOVLB  6
2308:  MOVWF  x05
230A:  MOVLW  01
230C:  MOVLB  5
230E:  ADDWF  xF9,W
2310:  MOVLB  6
2312:  MOVWF  x06
2314:  MOVFF  605,607
2318:  MOVWF  x08
231A:  MOVLW  05
231C:  MOVWF  x0A
231E:  MOVLW  FC
2320:  MOVWF  x09
2322:  MOVFF  5FB,60B
2326:  CLRF   x0C
2328:  MOVLB  0
232A:  CALL   0FE8
232E:  MOVLB  5
....................       if(sombreado==0) 
2330:  MOVF   xFA,F
2332:  BNZ   239A
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
2334:  MOVF   xFB,W
2336:  MULLW  05
2338:  MOVF   FF3,W
233A:  ADDWF  xF8,W
233C:  MOVLB  6
233E:  MOVWF  x05
2340:  MOVLB  5
2342:  MOVF   xFB,W
2344:  MULLW  08
2346:  MOVF   FF3,W
2348:  ADDWF  xF9,W
234A:  MOVLB  6
234C:  MOVWF  x06
234E:  MOVFF  5F8,608
2352:  MOVFF  5F9,609
2356:  MOVFF  605,60A
235A:  MOVWF  x0B
235C:  MOVLW  01
235E:  MOVWF  x0C
2360:  CLRF   x0D
2362:  MOVLB  0
2364:  CALL   12DE
2368:  MOVLW  01
236A:  MOVLB  5
236C:  ADDWF  xF8,W
236E:  MOVLB  6
2370:  MOVWF  x05
2372:  MOVLW  01
2374:  MOVLB  5
2376:  ADDWF  xF9,W
2378:  MOVLB  6
237A:  MOVWF  x06
237C:  MOVFF  605,607
2380:  MOVWF  x08
2382:  MOVLW  05
2384:  MOVWF  x0A
2386:  MOVLW  FC
2388:  MOVWF  x09
238A:  MOVFF  5FB,60B
238E:  MOVLW  01
2390:  MOVWF  x0C
2392:  MOVLB  0
2394:  CALL   0FE8
2398:  MOVLB  5
....................    } 
....................    glcd_update(); 
239A:  MOVLB  0
239C:  CALL   0DC8
.................... } 
23A0:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
259E:  MOVLB  5
25A0:  MOVF   xF6,W
25A2:  SUBLW  05
25A4:  BNZ   264E
....................    for( i = 0 ; i < 64 ; i ++ ) 
25A6:  CLRF   xF7
25A8:  MOVF   xF7,W
25AA:  SUBLW  3F
25AC:  BNC   264E
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
25AE:  CLRF   xF8
25B0:  MOVF   xF8,W
25B2:  SUBLW  0F
25B4:  BNC   264A
....................       {     
....................          for(k=7;k>-1;k--) 
25B6:  MOVLW  07
25B8:  MOVWF  xF9
25BA:  MOVF   xF9,W
25BC:  XORLW  80
25BE:  SUBLW  7F
25C0:  BC    2646
....................          {       
....................             if( bit_test(Horno[i][j] ,7-k ))  
25C2:  CLRF   xFB
25C4:  MOVFF  5F7,5FA
25C8:  CLRF   xFD
25CA:  MOVLW  10
25CC:  MOVWF  xFC
25CE:  MOVLB  0
25D0:  CALL   1B06
25D4:  MOVFF  02,5FB
25D8:  MOVFF  01,5FA
25DC:  MOVLB  5
25DE:  MOVF   xF8,W
25E0:  ADDWF  01,W
25E2:  MOVWF  01
25E4:  MOVLW  00
25E6:  ADDWFC 02,W
25E8:  MOVWF  03
25EA:  MOVF   01,W
25EC:  MOVFF  FF2,5FA
25F0:  BCF    FF2.7
25F2:  MOVFF  03,FF7
25F6:  MOVLB  0
25F8:  CALL   02A6
25FC:  MOVLB  5
25FE:  BTFSC  xFA.7
2600:  BSF    FF2.7
2602:  MOVWF  xFA
2604:  MOVLW  07
2606:  BSF    FD8.0
2608:  SUBFWB xF9,W
260A:  MOVWF  xFB
260C:  MOVFF  5FA,00
2610:  MOVF   xFB,W
2612:  MOVWF  01
2614:  BZ    261E
2616:  BCF    FD8.0
2618:  RRCF   00,F
261A:  DECFSZ 01,F
261C:  BRA    2616
261E:  BTFSS  00.0
2620:  BRA    2642
....................                glcd_pixel( j*8+k,i, ON ); 
2622:  MOVF   xF8,W
2624:  MULLW  08
2626:  MOVF   FF3,W
2628:  ADDWF  xF9,W
262A:  MOVWF  xFA
262C:  MOVFF  FE8,623
2630:  MOVFF  5F7,624
2634:  MOVLW  01
2636:  MOVLB  6
2638:  MOVWF  x25
263A:  MOVLB  0
263C:  CALL   0F2C
2640:  MOVLB  5
....................          }   
2642:  DECF   xF9,F
2644:  BRA    25BA
....................       } 
2646:  INCF   xF8,F
2648:  BRA    25B0
....................    } 
264A:  INCF   xF7,F
264C:  BRA    25A8
....................    } 
....................     
.................... } 
264E:  MOVLB  0
2650:  GOTO   5078 (RETURN)
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0C76:  MOVLW  15
0C78:  MOVWF  FCF
0C7A:  MOVLW  A0
0C7C:  MOVWF  FCE
....................    tiempos++; 
0C7E:  MOVLB  5
0C80:  INCF   x74,F
0C82:  BTFSC  FD8.2
0C84:  INCF   x75,F
....................    tiempos3++; 
0C86:  INCF   x76,F
0C88:  BTFSC  FD8.2
0C8A:  INCF   x77,F
....................    tiempoctrl++; 
0C8C:  INCF   x78,F
0C8E:  BTFSC  FD8.2
0C90:  INCF   x79,F
....................     
....................    if(tiempos>=200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0C92:  MOVF   x75,F
0C94:  BNZ   0C9C
0C96:  MOVF   x74,W
0C98:  SUBLW  C7
0C9A:  BC    0CC6
....................    {tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++; 
0C9C:  CLRF   x75
0C9E:  CLRF   x74
0CA0:  BSF    x65.4
0CA2:  INCF   x68,F
0CA4:  INCF   x6F,F
0CA6:  INCF   x63,F
....................     
....................       if(flag_setpoint==1) 
0CA8:  BTFSS  x66.4
0CAA:  BRA    0CB2
....................          tiemposetpoint++; 
0CAC:  INCF   x7E,F
0CAE:  BTFSC  FD8.2
0CB0:  INCF   x7F,F
....................           
....................       if(tiempo_esterilizacion==1) 
0CB2:  DECFSZ x72,W
0CB4:  BRA    0CBC
....................       {                
....................          tinicio++; 
0CB6:  INCF   x7A,F
0CB8:  BTFSC  FD8.2
0CBA:  INCF   x7B,F
....................       } 
....................        
....................       if(flag_tiempocalentamiento==1) 
0CBC:  BTFSS  x66.2
0CBE:  BRA    0CC6
....................       { 
....................          tiempocalentamiento++; 
0CC0:  INCF   x7C,F
0CC2:  BTFSC  FD8.2
0CC4:  INCF   x7D,F
....................       } 
....................    }         
.................... } 
....................     
0CC6:  BCF    F9E.0
0CC8:  MOVLB  0
0CCA:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
.................... } 
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
2F18:  MOVLW  05
2F1A:  MOVLB  5
2F1C:  MOVWF  xF5
2F1E:  MOVLW  FD
2F20:  MOVWF  xF4
2F22:  MOVLW  42
2F24:  MOVWF  FE9
2F26:  MOVFF  5F9,609
2F2A:  MOVFF  5F8,608
2F2E:  MOVFF  5F7,607
2F32:  MOVFF  5F6,606
2F36:  MOVLW  01
2F38:  MOVLB  6
2F3A:  MOVWF  x0A
2F3C:  MOVLB  0
2F3E:  BRA    2D62
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2F40:  MOVLB  5
2F42:  MOVF   xFC,W
2F44:  MULLW  1B
2F46:  MOVF   FF3,W
2F48:  ADDWF  xFA,W
2F4A:  MOVLB  6
2F4C:  MOVWF  x06
2F4E:  MOVLB  5
2F50:  MOVF   xFC,W
2F52:  MULLW  08
2F54:  MOVF   FF3,W
2F56:  ADDWF  xFB,W
2F58:  MOVLB  6
2F5A:  MOVWF  x07
2F5C:  MOVFF  5FA,608
2F60:  MOVFF  5FB,609
2F64:  MOVFF  606,60A
2F68:  MOVWF  x0B
2F6A:  MOVLW  01
2F6C:  MOVWF  x0C
2F6E:  CLRF   x0D
2F70:  MOVLB  0
2F72:  CALL   12DE
....................    glcd_text57(x, y, voltage, w, ON); 
2F76:  MOVFF  5FA,607
2F7A:  MOVFF  5FB,608
2F7E:  MOVLW  05
2F80:  MOVLB  6
2F82:  MOVWF  x0A
2F84:  MOVLW  FD
2F86:  MOVWF  x09
2F88:  MOVFF  5FC,60B
2F8C:  MOVLW  01
2F8E:  MOVWF  x0C
2F90:  MOVLB  0
2F92:  CALL   0FE8
.................... } 
2F96:  GOTO   556E (RETURN)
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
15D8:  MOVLW  05
15DA:  MOVLB  5
15DC:  MOVWF  xF5
15DE:  MOVLW  FC
15E0:  MOVWF  xF4
15E2:  MOVFF  5F8,605
15E6:  MOVLW  1F
15E8:  MOVLB  6
15EA:  MOVWF  x06
15EC:  MOVLB  0
15EE:  BRA    14F8
....................     
....................    if(sombreado==1) 
15F0:  MOVLB  5
15F2:  DECFSZ xFB,W
15F4:  BRA    1650
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
15F6:  MOVLW  12
15F8:  ADDWF  xF9,W
15FA:  MOVLB  6
15FC:  MOVWF  x05
15FE:  MOVLW  18
1600:  MOVLB  5
1602:  ADDWF  xFA,W
1604:  MOVLB  6
1606:  MOVWF  x06
1608:  MOVFF  5F9,608
160C:  MOVFF  5FA,609
1610:  MOVFF  605,60A
1614:  MOVWF  x0B
1616:  MOVLW  01
1618:  MOVWF  x0C
161A:  MOVWF  x0D
161C:  MOVLB  0
161E:  RCALL  12DE
1620:  MOVLW  02
1622:  MOVLB  5
1624:  ADDWF  xF9,W
1626:  MOVLB  6
1628:  MOVWF  x05
162A:  MOVLW  01
162C:  MOVLB  5
162E:  ADDWF  xFA,W
1630:  MOVLB  6
1632:  MOVWF  x06
1634:  MOVFF  605,607
1638:  MOVWF  x08
163A:  MOVLW  05
163C:  MOVWF  x0A
163E:  MOVLW  FC
1640:  MOVWF  x09
1642:  MOVLW  02
1644:  MOVWF  x0B
1646:  CLRF   x0C
1648:  MOVLB  0
164A:  RCALL  0FE8
....................    else    
164C:  BRA    16A6
164E:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
1650:  MOVLW  12
1652:  ADDWF  xF9,W
1654:  MOVLB  6
1656:  MOVWF  x05
1658:  MOVLW  18
165A:  MOVLB  5
165C:  ADDWF  xFA,W
165E:  MOVLB  6
1660:  MOVWF  x06
1662:  MOVFF  5F9,608
1666:  MOVFF  5FA,609
166A:  MOVFF  605,60A
166E:  MOVWF  x0B
1670:  CLRF   x0C
1672:  CLRF   x0D
1674:  MOVLB  0
1676:  RCALL  12DE
1678:  MOVLW  02
167A:  MOVLB  5
167C:  ADDWF  xF9,W
167E:  MOVLB  6
1680:  MOVWF  x05
1682:  MOVLW  01
1684:  MOVLB  5
1686:  ADDWF  xFA,W
1688:  MOVLB  6
168A:  MOVWF  x06
168C:  MOVFF  605,607
1690:  MOVWF  x08
1692:  MOVLW  05
1694:  MOVWF  x0A
1696:  MOVLW  FC
1698:  MOVWF  x09
169A:  MOVLW  02
169C:  MOVWF  x0B
169E:  MOVLW  01
16A0:  MOVWF  x0C
16A2:  MOVLB  0
16A4:  RCALL  0FE8
....................  
.................... } 
16A6:  RETLW  00
....................  
....................  
.................... void main() 
.................... { 
*
2F9A:  CLRF   FF8
2F9C:  BCF    FD0.7
2F9E:  BSF    07.7
2FA0:  CLRF   FEA
2FA2:  CLRF   FE9
2FA4:  MOVLB  5
2FA6:  CLRF   x5E
2FA8:  CLRF   x5F
2FAA:  CLRF   x60
2FAC:  CLRF   x61
2FAE:  MOVLW  0A
2FB0:  MOVWF  x62
2FB2:  CLRF   x63
2FB4:  CLRF   x64
2FB6:  BCF    x65.0
2FB8:  BCF    x65.1
2FBA:  BCF    x65.2
2FBC:  BSF    x65.3
2FBE:  BCF    x65.4
2FC0:  BCF    x65.5
2FC2:  BCF    x65.6
2FC4:  BCF    x65.7
2FC6:  BCF    x66.0
2FC8:  BCF    x66.1
2FCA:  BCF    x66.2
2FCC:  BCF    x66.3
2FCE:  BCF    x66.4
2FD0:  BCF    x66.5
2FD2:  CLRF   x67
2FD4:  CLRF   x68
2FD6:  CLRF   x69
2FD8:  CLRF   x6A
2FDA:  MOVLW  01
2FDC:  MOVWF  x6B
2FDE:  CLRF   x6C
2FE0:  CLRF   x6D
2FE2:  CLRF   x6E
2FE4:  CLRF   x6F
2FE6:  CLRF   x70
2FE8:  MOVWF  x71
2FEA:  CLRF   x72
2FEC:  CLRF   x73
2FEE:  CLRF   x75
2FF0:  CLRF   x74
2FF2:  CLRF   x77
2FF4:  CLRF   x76
2FF6:  CLRF   x79
2FF8:  CLRF   x78
2FFA:  CLRF   x7B
2FFC:  CLRF   x7A
2FFE:  CLRF   x7D
3000:  CLRF   x7C
3002:  CLRF   x7F
3004:  CLRF   x7E
3006:  CLRF   x81
3008:  CLRF   x80
300A:  CLRF   x85
300C:  CLRF   x84
300E:  CLRF   x83
3010:  CLRF   x82
3012:  CLRF   x89
3014:  CLRF   x88
3016:  CLRF   x87
3018:  CLRF   x86
301A:  CLRF   x8D
301C:  CLRF   x8C
301E:  CLRF   x8B
3020:  CLRF   x8A
3022:  CLRF   xA1
3024:  CLRF   xA0
3026:  CLRF   x9F
3028:  CLRF   x9E
302A:  CLRF   xA5
302C:  MOVLW  40
302E:  MOVWF  xA4
3030:  MOVLW  1C
3032:  MOVWF  xA3
3034:  MOVLW  8C
3036:  MOVWF  xA2
3038:  CLRF   xAD
303A:  CLRF   xAC
303C:  MOVLW  20
303E:  MOVWF  xAB
3040:  MOVLW  82
3042:  MOVWF  xAA
3044:  CLRF   xB1
3046:  CLRF   xB0
3048:  CLRF   xAF
304A:  CLRF   xAE
304C:  CLRF   xB5
304E:  CLRF   xB4
3050:  CLRF   xB3
3052:  CLRF   xB2
3054:  CLRF   xB9
3056:  CLRF   xB8
3058:  CLRF   xB7
305A:  CLRF   xB6
305C:  CLRF   xBD
305E:  CLRF   xBC
3060:  CLRF   xBB
3062:  CLRF   xBA
3064:  CLRF   xC1
3066:  CLRF   xC0
3068:  CLRF   xBF
306A:  CLRF   xBE
306C:  CLRF   xC5
306E:  CLRF   xC4
3070:  MOVLW  48
3072:  MOVWF  xC3
3074:  MOVLW  83
3076:  MOVWF  xC2
3078:  CLRF   xC9
307A:  CLRF   xC8
307C:  CLRF   xC7
307E:  CLRF   xC6
3080:  CLRF   xCD
3082:  CLRF   xCC
3084:  MOVLW  78
3086:  MOVWF  xCB
3088:  MOVLW  83
308A:  MOVWF  xCA
308C:  CLRF   xD1
308E:  CLRF   xD0
3090:  CLRF   xCF
3092:  CLRF   xCE
3094:  CLRF   xD5
3096:  CLRF   xD4
3098:  CLRF   xD3
309A:  CLRF   xD2
309C:  MOVF   FC1,W
309E:  ANDLW  C0
30A0:  IORLW  0F
30A2:  MOVWF  FC1
30A4:  MOVLW  07
30A6:  MOVWF  FB4
30A8:  MOVLB  4
30AA:  CLRF   x16
30AC:  CLRF   x17
30AE:  CLRF   x18
30B0:  CLRF   x19
30B2:  CLRF   x1A
30B4:  CLRF   x1B
30B6:  CLRF   x1C
30B8:  CLRF   x1D
30BA:  CLRF   x1E
30BC:  CLRF   x1F
30BE:  CLRF   x20
30C0:  CLRF   x21
30C2:  CLRF   x22
30C4:  CLRF   x23
30C6:  CLRF   x24
30C8:  CLRF   x25
30CA:  CLRF   x26
30CC:  CLRF   x27
30CE:  CLRF   x28
30D0:  CLRF   x29
30D2:  CLRF   x2A
30D4:  CLRF   x2B
30D6:  CLRF   x2C
30D8:  CLRF   x2D
30DA:  CLRF   x2E
30DC:  CLRF   x2F
30DE:  CLRF   x30
30E0:  CLRF   x31
30E2:  CLRF   x32
30E4:  CLRF   x33
30E6:  CLRF   x34
30E8:  CLRF   x35
30EA:  CLRF   x36
30EC:  CLRF   x37
30EE:  CLRF   x38
30F0:  CLRF   x39
30F2:  CLRF   x3A
30F4:  CLRF   x3B
30F6:  CLRF   x3C
30F8:  CLRF   x3D
30FA:  CLRF   x3E
30FC:  CLRF   x3F
30FE:  CLRF   x40
3100:  CLRF   x41
3102:  CLRF   x42
3104:  CLRF   x43
3106:  CLRF   x44
3108:  CLRF   x45
310A:  CLRF   x46
310C:  CLRF   x47
310E:  CLRF   x48
3110:  CLRF   x49
3112:  CLRF   x4A
3114:  CLRF   x4B
3116:  CLRF   x4C
3118:  CLRF   x4D
311A:  CLRF   x4E
311C:  CLRF   x4F
311E:  CLRF   x50
3120:  CLRF   x51
3122:  CLRF   x52
3124:  CLRF   x53
3126:  CLRF   x54
3128:  CLRF   x55
312A:  CLRF   x56
312C:  CLRF   x57
312E:  CLRF   x58
3130:  CLRF   x59
3132:  CLRF   x5A
3134:  CLRF   x5B
3136:  CLRF   x5C
3138:  CLRF   x5D
313A:  CLRF   x5E
313C:  CLRF   x5F
313E:  CLRF   x60
3140:  CLRF   x61
3142:  CLRF   x62
3144:  CLRF   x63
3146:  CLRF   x64
3148:  CLRF   x65
314A:  CLRF   x66
314C:  CLRF   x67
314E:  CLRF   x68
3150:  CLRF   x69
3152:  CLRF   x6A
3154:  CLRF   x6B
3156:  CLRF   x6C
3158:  CLRF   x6D
315A:  CLRF   x6E
315C:  CLRF   x6F
315E:  CLRF   x70
3160:  CLRF   x71
3162:  CLRF   x72
3164:  CLRF   x73
3166:  CLRF   x74
3168:  CLRF   x75
316A:  CLRF   x76
316C:  CLRF   x77
316E:  CLRF   x78
3170:  CLRF   x79
3172:  CLRF   x7A
3174:  CLRF   x7B
3176:  CLRF   x7C
3178:  CLRF   x7D
317A:  CLRF   x7E
317C:  CLRF   x7F
317E:  CLRF   x80
3180:  CLRF   x81
3182:  CLRF   x82
3184:  CLRF   x83
3186:  CLRF   x84
3188:  CLRF   x85
318A:  CLRF   x86
318C:  CLRF   x87
318E:  CLRF   x88
3190:  CLRF   x89
3192:  CLRF   x8A
3194:  CLRF   x8B
3196:  CLRF   x8C
3198:  CLRF   x8D
319A:  CLRF   x8E
319C:  CLRF   x8F
319E:  CLRF   x90
31A0:  CLRF   x91
31A2:  CLRF   x92
31A4:  CLRF   x93
31A6:  CLRF   x94
31A8:  CLRF   x95
31AA:  CLRF   x96
31AC:  CLRF   x97
31AE:  CLRF   x98
31B0:  CLRF   x99
31B2:  CLRF   x9A
31B4:  CLRF   x9B
31B6:  CLRF   x9C
31B8:  CLRF   x9D
31BA:  CLRF   x9E
31BC:  CLRF   x9F
31BE:  CLRF   xA0
31C0:  CLRF   xA1
31C2:  CLRF   xA2
31C4:  CLRF   xA3
31C6:  CLRF   xA4
31C8:  CLRF   xA5
31CA:  CLRF   xA6
31CC:  CLRF   xA7
31CE:  CLRF   xA8
31D0:  CLRF   xA9
31D2:  CLRF   xAA
31D4:  CLRF   xAB
31D6:  CLRF   xAC
31D8:  CLRF   xAD
31DA:  CLRF   xAE
31DC:  CLRF   xAF
31DE:  CLRF   xB0
31E0:  CLRF   xB1
31E2:  CLRF   xB2
31E4:  CLRF   xB3
31E6:  CLRF   xB4
31E8:  CLRF   xB5
31EA:  CLRF   xB6
31EC:  CLRF   xB7
31EE:  CLRF   xB8
31F0:  CLRF   xB9
31F2:  CLRF   xBA
31F4:  CLRF   xBB
31F6:  CLRF   xBC
31F8:  CLRF   xBD
31FA:  CLRF   xBE
31FC:  CLRF   xBF
31FE:  CLRF   xC0
3200:  CLRF   xC1
3202:  CLRF   xC2
3204:  CLRF   xC3
3206:  CLRF   xC4
3208:  CLRF   xC5
320A:  CLRF   xC6
320C:  CLRF   xC7
320E:  CLRF   xC8
3210:  CLRF   xC9
3212:  CLRF   xCA
3214:  CLRF   xCB
3216:  CLRF   xCC
3218:  CLRF   xCD
321A:  CLRF   xCE
321C:  CLRF   xCF
321E:  CLRF   xD0
3220:  CLRF   xD1
3222:  CLRF   xD2
3224:  CLRF   xD3
3226:  CLRF   xD4
3228:  CLRF   xD5
322A:  CLRF   xD6
322C:  CLRF   xD7
322E:  CLRF   xD8
3230:  CLRF   xD9
3232:  CLRF   xDA
3234:  CLRF   xDB
3236:  CLRF   xDC
3238:  CLRF   xDD
323A:  CLRF   xDE
323C:  CLRF   xDF
323E:  CLRF   xE0
3240:  CLRF   xE1
3242:  CLRF   xE2
3244:  CLRF   xE3
3246:  CLRF   xE4
3248:  CLRF   xE5
324A:  CLRF   xE6
324C:  CLRF   xE7
324E:  CLRF   xE8
3250:  CLRF   xE9
3252:  CLRF   xEA
3254:  CLRF   xEB
3256:  CLRF   xEC
3258:  CLRF   xED
325A:  CLRF   xEE
325C:  CLRF   xEF
325E:  CLRF   xF0
3260:  CLRF   xF1
3262:  CLRF   xF2
3264:  CLRF   xF3
3266:  CLRF   xF4
3268:  CLRF   xF5
326A:  CLRF   xF6
326C:  CLRF   xF7
326E:  CLRF   xF8
3270:  CLRF   xF9
3272:  CLRF   xFA
3274:  CLRF   xFB
3276:  CLRF   xFC
3278:  CLRF   xFD
327A:  CLRF   xFE
327C:  CLRF   xFF
327E:  MOVLB  5
3280:  CLRF   x00
3282:  CLRF   x01
3284:  CLRF   x02
3286:  CLRF   x03
3288:  CLRF   x04
328A:  CLRF   x05
328C:  CLRF   x06
328E:  CLRF   x07
3290:  CLRF   x08
3292:  CLRF   x09
3294:  CLRF   x0A
3296:  CLRF   x0B
3298:  CLRF   x0C
329A:  CLRF   x0D
329C:  CLRF   x0E
329E:  CLRF   x0F
32A0:  CLRF   x10
32A2:  CLRF   x11
32A4:  CLRF   x12
32A6:  CLRF   x13
32A8:  CLRF   x14
32AA:  CLRF   x15
32AC:  CLRF   x16
32AE:  CLRF   x17
32B0:  CLRF   x18
32B2:  CLRF   x19
32B4:  CLRF   x1A
32B6:  CLRF   x1B
32B8:  CLRF   x1C
32BA:  CLRF   x1D
32BC:  CLRF   x1E
32BE:  CLRF   x1F
32C0:  CLRF   x20
32C2:  CLRF   x21
32C4:  CLRF   x22
32C6:  CLRF   x23
32C8:  CLRF   x24
32CA:  CLRF   x25
32CC:  CLRF   x26
32CE:  CLRF   x27
32D0:  CLRF   x28
32D2:  CLRF   x29
32D4:  CLRF   x2A
32D6:  CLRF   x2B
32D8:  CLRF   x2C
32DA:  CLRF   x2D
32DC:  CLRF   x2E
32DE:  CLRF   x2F
32E0:  CLRF   x30
32E2:  CLRF   x31
32E4:  CLRF   x32
32E6:  CLRF   x33
32E8:  CLRF   x34
32EA:  CLRF   x35
32EC:  CLRF   x36
32EE:  CLRF   x37
32F0:  CLRF   x38
32F2:  CLRF   x39
32F4:  CLRF   x3A
32F6:  CLRF   x3B
32F8:  CLRF   x3C
32FA:  CLRF   x3D
32FC:  CLRF   x3E
32FE:  CLRF   x3F
3300:  CLRF   x40
3302:  CLRF   x41
3304:  CLRF   x42
3306:  CLRF   x43
3308:  CLRF   x44
330A:  CLRF   x45
330C:  CLRF   x46
330E:  CLRF   x47
3310:  CLRF   x48
3312:  CLRF   x49
3314:  CLRF   x4A
3316:  CLRF   x4B
3318:  CLRF   x4C
331A:  CLRF   x4D
331C:  CLRF   x4E
331E:  CLRF   x4F
3320:  CLRF   x50
3322:  CLRF   x51
3324:  CLRF   x52
3326:  CLRF   x53
3328:  CLRF   x54
332A:  CLRF   x55
332C:  CLRF   x56
332E:  CLRF   x57
3330:  CLRF   x58
3332:  CLRF   x59
3334:  CLRF   x5A
3336:  CLRF   x5B
3338:  CLRF   x5C
333A:  CLRF   x5D
333C:  CLRF   x8E
333E:  CLRF   x8F
3340:  CLRF   x90
3342:  CLRF   x91
3344:  CLRF   x92
3346:  CLRF   x93
3348:  CLRF   x94
334A:  CLRF   x95
334C:  CLRF   x96
334E:  CLRF   x97
3350:  CLRF   x98
3352:  CLRF   x99
3354:  CLRF   x9A
3356:  CLRF   x9B
3358:  CLRF   x9C
335A:  CLRF   x9D
335C:  CLRF   xF4
335E:  CLRF   xF5
....................    delay_ms(1000);    
3360:  MOVLW  04
3362:  MOVWF  xF6
3364:  MOVLW  FA
3366:  MOVWF  xFC
3368:  MOVLB  0
336A:  CALL   0CCE
336E:  MOVLB  5
3370:  DECFSZ xF6,F
3372:  BRA    3364
....................    Libre1_on;Libre2_on;Libre3_on;Libre4_on; 
3374:  BSF    F8B.6
3376:  BCF    F94.6
3378:  BSF    F8B.7
337A:  BCF    F94.7
337C:  BSF    F8A.0
337E:  BCF    F93.0
3380:  BSF    F8A.1
3382:  BCF    F93.1
....................    Ventilador_off;Resistencia_off;Resistencia2_off; 
3384:  BCF    F8B.1
3386:  BCF    F94.1
3388:  BCF    F8B.0
338A:  BCF    F94.0
338C:  BCF    F8B.2
338E:  BCF    F94.2
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
3390:  MOVLW  85
3392:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
3394:  BSF    F9D.0
....................    setup_adc_ports(AN0_TO_AN3); 
3396:  MOVF   FC1,W
3398:  ANDLW  C0
339A:  IORLW  0B
339C:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_64); 
339E:  BCF    FC0.0
33A0:  BSF    FC0.1
33A2:  BSF    FC0.2
33A4:  BSF    FC0.7
33A6:  BSF    FC2.0
....................    enable_interrupts(global); 
33A8:  MOVLW  C0
33AA:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0); 
33AC:  MOVFF  FF2,5F6
33B0:  BCF    FF2.7
33B2:  CLRF   FA9
33B4:  BCF    FA6.6
33B6:  BCF    FA6.7
33B8:  BSF    FA6.0
33BA:  MOVF   FA8,W
33BC:  BTFSC  xF6.7
33BE:  BSF    FF2.7
33C0:  MOVWF  x92
....................    delay_ms(50); 
33C2:  MOVLW  32
33C4:  MOVWF  xFC
33C6:  MOVLB  0
33C8:  CALL   0CCE
....................    Testerilizacionp[1]=read_eeprom(1); 
33CC:  MOVFF  FF2,5F6
33D0:  BCF    FF2.7
33D2:  MOVLW  01
33D4:  MOVWF  FA9
33D6:  BCF    FA6.6
33D8:  BCF    FA6.7
33DA:  BSF    FA6.0
33DC:  MOVF   FA8,W
33DE:  MOVLB  5
33E0:  BTFSC  xF6.7
33E2:  BSF    FF2.7
33E4:  MOVWF  x93
....................    delay_ms(50); 
33E6:  MOVLW  32
33E8:  MOVWF  xFC
33EA:  MOVLB  0
33EC:  CALL   0CCE
....................    Testerilizacionp[2]=read_eeprom(2); 
33F0:  MOVFF  FF2,5F6
33F4:  BCF    FF2.7
33F6:  MOVLW  02
33F8:  MOVWF  FA9
33FA:  BCF    FA6.6
33FC:  BCF    FA6.7
33FE:  BSF    FA6.0
3400:  MOVF   FA8,W
3402:  MOVLB  5
3404:  BTFSC  xF6.7
3406:  BSF    FF2.7
3408:  MOVWF  x94
....................    delay_ms(50); 
340A:  MOVLW  32
340C:  MOVWF  xFC
340E:  MOVLB  0
3410:  CALL   0CCE
....................    Testerilizacionp[3]=read_eeprom(3); 
3414:  MOVFF  FF2,5F6
3418:  BCF    FF2.7
341A:  MOVLW  03
341C:  MOVWF  FA9
341E:  BCF    FA6.6
3420:  BCF    FA6.7
3422:  BSF    FA6.0
3424:  MOVF   FA8,W
3426:  MOVLB  5
3428:  BTFSC  xF6.7
342A:  BSF    FF2.7
342C:  MOVWF  x95
....................    delay_ms(50); 
342E:  MOVLW  32
3430:  MOVWF  xFC
3432:  MOVLB  0
3434:  CALL   0CCE
....................    Setpoint=read_eeprom(8); 
3438:  MOVFF  FF2,5F6
343C:  BCF    FF2.7
343E:  MOVLW  08
3440:  MOVWF  FA9
3442:  BCF    FA6.6
3444:  BCF    FA6.7
3446:  BSF    FA6.0
3448:  MOVF   FA8,W
344A:  MOVLB  5
344C:  BTFSC  xF6.7
344E:  BSF    FF2.7
3450:  MOVWF  x70
....................    delay_ms(50); 
3452:  MOVLW  32
3454:  MOVWF  xFC
3456:  MOVLB  0
3458:  CALL   0CCE
....................    Password[0]=read_eeprom(10); 
345C:  MOVFF  FF2,5F6
3460:  BCF    FF2.7
3462:  MOVLW  0A
3464:  MOVWF  FA9
3466:  BCF    FA6.6
3468:  BCF    FA6.7
346A:  BSF    FA6.0
346C:  MOVF   FA8,W
346E:  MOVLB  5
3470:  BTFSC  xF6.7
3472:  BSF    FF2.7
3474:  MOVWF  x9A
....................    delay_ms(50); 
3476:  MOVLW  32
3478:  MOVWF  xFC
347A:  MOVLB  0
347C:  CALL   0CCE
....................    Password[1]=read_eeprom(11); 
3480:  MOVFF  FF2,5F6
3484:  BCF    FF2.7
3486:  MOVLW  0B
3488:  MOVWF  FA9
348A:  BCF    FA6.6
348C:  BCF    FA6.7
348E:  BSF    FA6.0
3490:  MOVF   FA8,W
3492:  MOVLB  5
3494:  BTFSC  xF6.7
3496:  BSF    FF2.7
3498:  MOVWF  x9B
....................    delay_ms(50); 
349A:  MOVLW  32
349C:  MOVWF  xFC
349E:  MOVLB  0
34A0:  CALL   0CCE
....................    Password[2]=read_eeprom(12); 
34A4:  MOVFF  FF2,5F6
34A8:  BCF    FF2.7
34AA:  MOVLW  0C
34AC:  MOVWF  FA9
34AE:  BCF    FA6.6
34B0:  BCF    FA6.7
34B2:  BSF    FA6.0
34B4:  MOVF   FA8,W
34B6:  MOVLB  5
34B8:  BTFSC  xF6.7
34BA:  BSF    FF2.7
34BC:  MOVWF  x9C
....................    delay_ms(50); 
34BE:  MOVLW  32
34C0:  MOVWF  xFC
34C2:  MOVLB  0
34C4:  CALL   0CCE
....................    Password[3]=read_eeprom(13); 
34C8:  MOVFF  FF2,5F6
34CC:  BCF    FF2.7
34CE:  MOVLW  0D
34D0:  MOVWF  FA9
34D2:  BCF    FA6.6
34D4:  BCF    FA6.7
34D6:  BSF    FA6.0
34D8:  MOVF   FA8,W
34DA:  MOVLB  5
34DC:  BTFSC  xF6.7
34DE:  BSF    FF2.7
34E0:  MOVWF  x9D
....................    delay_ms(50); 
34E2:  MOVLW  32
34E4:  MOVWF  xFC
34E6:  MOVLB  0
34E8:  CALL   0CCE
....................    Ganancia=read_eeprom(20); 
34EC:  MOVFF  FF2,5F6
34F0:  BCF    FF2.7
34F2:  MOVLW  14
34F4:  MOVWF  FA9
34F6:  BCF    FA6.6
34F8:  BCF    FA6.7
34FA:  BSF    FA6.0
34FC:  MOVF   FA8,W
34FE:  MOVLB  5
3500:  BTFSC  xF6.7
3502:  BSF    FF2.7
3504:  CLRF   xFD
3506:  MOVWF  xFC
3508:  MOVLB  0
350A:  CALL   0CF8
350E:  MOVFF  03,5C5
3512:  MOVFF  02,5C4
3516:  MOVFF  01,5C3
351A:  MOVFF  00,5C2
....................    delay_ms(50); 
351E:  MOVLW  32
3520:  MOVLB  5
3522:  MOVWF  xFC
3524:  MOVLB  0
3526:  CALL   0CCE
....................    Tciclo=read_eeprom(30); 
352A:  MOVFF  FF2,5F6
352E:  BCF    FF2.7
3530:  MOVLW  1E
3532:  MOVWF  FA9
3534:  BCF    FA6.6
3536:  BCF    FA6.7
3538:  BSF    FA6.0
353A:  MOVF   FA8,W
353C:  MOVLB  5
353E:  BTFSC  xF6.7
3540:  BSF    FF2.7
3542:  CLRF   xFD
3544:  MOVWF  xFC
3546:  MOVLB  0
3548:  CALL   0CF8
354C:  MOVFF  03,5AD
3550:  MOVFF  02,5AC
3554:  MOVFF  01,5AB
3558:  MOVFF  00,5AA
....................    delay_ms(50); 
355C:  MOVLW  32
355E:  MOVLB  5
3560:  MOVWF  xFC
3562:  MOVLB  0
3564:  CALL   0CCE
....................    Ajuste=read_eeprom(40); 
3568:  MOVFF  FF2,5F6
356C:  BCF    FF2.7
356E:  MOVLW  28
3570:  MOVWF  FA9
3572:  BCF    FA6.6
3574:  BCF    FA6.7
3576:  BSF    FA6.0
3578:  MOVF   FA8,W
357A:  MOVLB  5
357C:  BTFSC  xF6.7
357E:  BSF    FF2.7
3580:  MOVWF  x60
....................    delay_ms(50); 
3582:  MOVLW  32
3584:  MOVWF  xFC
3586:  MOVLB  0
3588:  CALL   0CCE
....................    Ajusten=read_eeprom(50); 
358C:  MOVFF  FF2,5F6
3590:  BCF    FF2.7
3592:  MOVLW  32
3594:  MOVWF  FA9
3596:  BCF    FA6.6
3598:  BCF    FA6.7
359A:  BSF    FA6.0
359C:  MOVF   FA8,W
359E:  MOVLB  5
35A0:  BTFSC  xF6.7
35A2:  BSF    FF2.7
35A4:  MOVWF  x61
....................    delay_ms(50); 
35A6:  MOVLW  32
35A8:  MOVWF  xFC
35AA:  MOVLB  0
35AC:  CALL   0CCE
....................    MediaMovil=read_eeprom(60); 
35B0:  MOVFF  FF2,5F6
35B4:  BCF    FF2.7
35B6:  MOVLW  3C
35B8:  MOVWF  FA9
35BA:  BCF    FA6.6
35BC:  BCF    FA6.7
35BE:  BSF    FA6.0
35C0:  MOVF   FA8,W
35C2:  MOVLB  5
35C4:  BTFSC  xF6.7
35C6:  BSF    FF2.7
35C8:  MOVWF  x62
....................    delay_ms(50); 
35CA:  MOVLW  32
35CC:  MOVWF  xFC
35CE:  MOVLB  0
35D0:  CALL   0CCE
....................    //Coeficiente=read_eeprom(70); 
....................    delay_ms(50); 
35D4:  MOVLW  32
35D6:  MOVLB  5
35D8:  MOVWF  xFC
35DA:  MOVLB  0
35DC:  CALL   0CCE
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
35E0:  MOVLW  01
35E2:  MOVLB  5
35E4:  MOVWF  xF6
35E6:  MOVLB  0
35E8:  CALL   0E80
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
35EC:  MOVLB  5
35EE:  CLRF   xF7
35F0:  MOVLB  0
35F2:  CALL   0D6E
....................    strcpy(Menus.Letra,"JP Inglobal"); 
35F6:  MOVLW  05
35F8:  MOVWF  FEA
35FA:  MOVLW  D6
35FC:  MOVWF  FE9
35FE:  MOVFF  FF2,5F6
3602:  BCF    FF2.7
3604:  MOVLW  00
3606:  CALL   06BE
360A:  TBLRD*-
360C:  TBLRD*+
360E:  MOVF   FF5,W
3610:  MOVWF  FEE
3612:  IORLW  00
3614:  BNZ   360C
3616:  MOVLB  5
3618:  BTFSC  xF6.7
361A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
361C:  MOVLW  05
361E:  MOVWF  xF7
3620:  MOVLW  D6
3622:  MOVWF  xF6
3624:  CLRF   xF8
3626:  CLRF   xF9
3628:  CLRF   xFA
362A:  MOVLW  02
362C:  MOVWF  xFB
362E:  MOVLB  0
3630:  CALL   13A0
....................    strcpy(Menus.Letra,"     Incubadora"); 
3634:  MOVLW  05
3636:  MOVWF  FEA
3638:  MOVLW  D6
363A:  MOVWF  FE9
363C:  MOVFF  FF2,5F6
3640:  BCF    FF2.7
3642:  MOVLW  00
3644:  CALL   06E4
3648:  TBLRD*-
364A:  TBLRD*+
364C:  MOVF   FF5,W
364E:  MOVWF  FEE
3650:  IORLW  00
3652:  BNZ   364A
3654:  MOVLB  5
3656:  BTFSC  xF6.7
3658:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
365A:  MOVLW  05
365C:  MOVWF  xF7
365E:  MOVLW  D6
3660:  MOVWF  xF6
3662:  CLRF   xF8
3664:  MOVLW  14
3666:  MOVWF  xF9
3668:  CLRF   xFA
366A:  MOVLW  01
366C:  MOVWF  xFB
366E:  MOVLB  0
3670:  CALL   13A0
....................    strcpy(Menus.Letra,"   Digital" ); 
3674:  MOVLW  05
3676:  MOVWF  FEA
3678:  MOVLW  D6
367A:  MOVWF  FE9
367C:  MOVFF  FF2,5F6
3680:  BCF    FF2.7
3682:  MOVLW  00
3684:  CALL   070E
3688:  TBLRD*-
368A:  TBLRD*+
368C:  MOVF   FF5,W
368E:  MOVWF  FEE
3690:  IORLW  00
3692:  BNZ   368A
3694:  MOVLB  5
3696:  BTFSC  xF6.7
3698:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,1); 
369A:  MOVLW  05
369C:  MOVWF  xF7
369E:  MOVLW  D6
36A0:  MOVWF  xF6
36A2:  CLRF   xF8
36A4:  MOVLW  1E
36A6:  MOVWF  xF9
36A8:  CLRF   xFA
36AA:  MOVLW  01
36AC:  MOVWF  xFB
36AE:  MOVLB  0
36B0:  CALL   13A0
....................    strcpy(Menus.Letra,"  400 Lts"); 
36B4:  MOVLW  05
36B6:  MOVWF  FEA
36B8:  MOVLW  D6
36BA:  MOVWF  FE9
36BC:  MOVFF  FF2,5F6
36C0:  BCF    FF2.7
36C2:  MOVLW  00
36C4:  CALL   0734
36C8:  TBLRD*-
36CA:  TBLRD*+
36CC:  MOVF   FF5,W
36CE:  MOVWF  FEE
36D0:  IORLW  00
36D2:  BNZ   36CA
36D4:  MOVLB  5
36D6:  BTFSC  xF6.7
36D8:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,45,0,2); 
36DA:  MOVLW  05
36DC:  MOVWF  xF7
36DE:  MOVLW  D6
36E0:  MOVWF  xF6
36E2:  CLRF   xF8
36E4:  MOVLW  2D
36E6:  MOVWF  xF9
36E8:  CLRF   xFA
36EA:  MOVLW  02
36EC:  MOVWF  xFB
36EE:  MOVLB  0
36F0:  CALL   13A0
....................    delay_ms(1000); 
36F4:  MOVLW  04
36F6:  MOVLB  5
36F8:  MOVWF  xF6
36FA:  MOVLW  FA
36FC:  MOVWF  xFC
36FE:  MOVLB  0
3700:  CALL   0CCE
3704:  MOVLB  5
3706:  DECFSZ xF6,F
3708:  BRA    36FA
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
370A:  CLRF   xF7
370C:  MOVLB  0
370E:  CALL   0D6E
....................    displayContrasena(Contrasena[0],20,30,1); 
3712:  MOVFF  596,5F8
3716:  MOVLW  14
3718:  MOVLB  5
371A:  MOVWF  xF9
371C:  MOVLW  1E
371E:  MOVWF  xFA
3720:  MOVLW  01
3722:  MOVWF  xFB
3724:  MOVLB  0
3726:  CALL   15D8
....................    displayContrasena(Contrasena[1],40,30,0); 
372A:  MOVFF  597,5F8
372E:  MOVLW  28
3730:  MOVLB  5
3732:  MOVWF  xF9
3734:  MOVLW  1E
3736:  MOVWF  xFA
3738:  CLRF   xFB
373A:  MOVLB  0
373C:  CALL   15D8
....................    displayContrasena(Contrasena[2],60,30,0); 
3740:  MOVFF  598,5F8
3744:  MOVLW  3C
3746:  MOVLB  5
3748:  MOVWF  xF9
374A:  MOVLW  1E
374C:  MOVWF  xFA
374E:  CLRF   xFB
3750:  MOVLB  0
3752:  CALL   15D8
....................    displayContrasena(Contrasena[3],80,30,0); 
3756:  MOVFF  599,5F8
375A:  MOVLW  50
375C:  MOVLB  5
375E:  MOVWF  xF9
3760:  MOVLW  1E
3762:  MOVWF  xFA
3764:  CLRF   xFB
3766:  MOVLB  0
3768:  CALL   15D8
....................     
....................    for(i=0;i<80;i++) 
376C:  MOVLB  5
376E:  CLRF   x6C
3770:  MOVF   x6C,W
3772:  SUBLW  4F
3774:  BNC   3796
....................    { 
....................       Temperatura=Leer_Sensor(MediaMovil); 
3776:  MOVFF  562,5F6
377A:  MOVLB  0
377C:  CALL   1B28
3780:  MOVFF  03,5D5
3784:  MOVFF  02,5D4
3788:  MOVFF  01,5D3
378C:  MOVFF  00,5D2
....................    } 
3790:  MOVLB  5
3792:  INCF   x6C,F
3794:  BRA    3770
....................     
....................    while(true) 
....................    { 
....................     
....................       if(UP && DOWN && RIGHT && LEFT) 
3796:  BSF    F92.5
3798:  BTFSS  F80.5
379A:  BRA    3826
379C:  BSF    F96.0
379E:  BTFSS  F84.0
37A0:  BRA    3826
37A2:  BSF    F96.1
37A4:  BTFSS  F84.1
37A6:  BRA    3826
37A8:  BSF    F96.2
37AA:  BTFSS  F84.2
37AC:  BRA    3826
....................       { 
....................          delay_ms(500); 
37AE:  MOVLW  02
37B0:  MOVWF  xF6
37B2:  MOVLW  FA
37B4:  MOVWF  xFC
37B6:  MOVLB  0
37B8:  CALL   0CCE
37BC:  MOVLB  5
37BE:  DECFSZ xF6,F
37C0:  BRA    37B2
....................          strcpy(Menus.Letra,"Cargando.."); 
37C2:  MOVLW  05
37C4:  MOVWF  FEA
37C6:  MOVLW  D6
37C8:  MOVWF  FE9
37CA:  MOVFF  FF2,5F6
37CE:  BCF    FF2.7
37D0:  MOVLW  00
37D2:  MOVLB  0
37D4:  CALL   0758
37D8:  TBLRD*-
37DA:  TBLRD*+
37DC:  MOVF   FF5,W
37DE:  MOVWF  FEE
37E0:  IORLW  00
37E2:  BNZ   37DA
37E4:  MOVLB  5
37E6:  BTFSC  xF6.7
37E8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,30,1,1); 
37EA:  MOVLW  05
37EC:  MOVWF  xF7
37EE:  MOVLW  D6
37F0:  MOVWF  xF6
37F2:  CLRF   xF8
37F4:  MOVLW  1E
37F6:  MOVWF  xF9
37F8:  MOVLW  01
37FA:  MOVWF  xFA
37FC:  MOVWF  xFB
37FE:  MOVLB  0
3800:  CALL   13A0
....................          delay_ms(2000); 
3804:  MOVLW  08
3806:  MOVLB  5
3808:  MOVWF  xF6
380A:  MOVLW  FA
380C:  MOVWF  xFC
380E:  MOVLB  0
3810:  CALL   0CCE
3814:  MOVLB  5
3816:  DECFSZ xF6,F
3818:  BRA    380A
....................          Menu=100; 
381A:  MOVLW  64
381C:  MOVWF  x6A
....................          glcd_fillScreen(OFF); 
381E:  CLRF   xF7
3820:  MOVLB  0
3822:  CALL   0D6E
....................       } 
....................     
....................       glcd_update();             
3826:  MOVLB  0
3828:  CALL   0DC8
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
382C:  MOVLB  5
382E:  MOVF   x6A,F
3830:  BTFSS  FD8.2
3832:  BRA    3DAE
....................        
....................       strcpy(Menus.Letra,"Clave"); 
3834:  MOVLW  05
3836:  MOVWF  FEA
3838:  MOVLW  D6
383A:  MOVWF  FE9
383C:  MOVFF  FF2,5F6
3840:  BCF    FF2.7
3842:  MOVLW  00
3844:  MOVLB  0
3846:  CALL   077E
384A:  TBLRD*-
384C:  TBLRD*+
384E:  MOVF   FF5,W
3850:  MOVWF  FEE
3852:  IORLW  00
3854:  BNZ   384C
3856:  MOVLB  5
3858:  BTFSC  xF6.7
385A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
385C:  MOVLW  05
385E:  MOVWF  xF7
3860:  MOVLW  D6
3862:  MOVWF  xF6
3864:  MOVLW  1E
3866:  MOVWF  xF8
3868:  CLRF   xF9
386A:  MOVLW  01
386C:  MOVWF  xFA
386E:  MOVLW  02
3870:  MOVWF  xFB
3872:  MOVLB  0
3874:  CALL   13A0
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
3878:  BSF    F92.5
387A:  BTFSS  F80.5
387C:  BRA    394E
....................       { 
....................          if(Flanco == 0) 
387E:  MOVLB  5
3880:  BTFSC  x65.0
3882:  BRA    394C
....................          { 
....................             Flanco = 1;delay_ms(30); 
3884:  BSF    x65.0
3886:  MOVLW  1E
3888:  MOVWF  xFC
388A:  MOVLB  0
388C:  CALL   0CCE
....................             for(i=1;i<=4;i++) 
3890:  MOVLW  01
3892:  MOVLB  5
3894:  MOVWF  x6C
3896:  MOVF   x6C,W
3898:  SUBLW  04
389A:  BNC   394C
....................             { 
....................                if(unidad==i) 
389C:  MOVF   x6C,W
389E:  SUBWF  x6B,W
38A0:  BNZ   3916
....................                { 
....................                   Contrasena[i-1]++; 
38A2:  MOVLW  01
38A4:  SUBWF  x6C,W
38A6:  CLRF   03
38A8:  ADDLW  96
38AA:  MOVWF  FE9
38AC:  MOVLW  05
38AE:  ADDWFC 03,W
38B0:  MOVWF  FEA
38B2:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
38B4:  MOVLW  01
38B6:  SUBWF  x6C,W
38B8:  CLRF   03
38BA:  ADDLW  96
38BC:  MOVWF  FE9
38BE:  MOVLW  05
38C0:  ADDWFC 03,W
38C2:  MOVWF  FEA
38C4:  BTFSC  FEF.7
38C6:  BRA    38E0
38C8:  MOVF   FEF,W
38CA:  SUBLW  09
38CC:  BC    38E0
....................                   { 
....................                      Contrasena[i-1]=0; 
38CE:  MOVLW  01
38D0:  SUBWF  x6C,W
38D2:  CLRF   03
38D4:  ADDLW  96
38D6:  MOVWF  FE9
38D8:  MOVLW  05
38DA:  ADDWFC 03,W
38DC:  MOVWF  FEA
38DE:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
38E0:  MOVLW  01
38E2:  SUBWF  x6C,W
38E4:  CLRF   03
38E6:  ADDLW  96
38E8:  MOVWF  FE9
38EA:  MOVLW  05
38EC:  ADDWFC 03,W
38EE:  MOVWF  FEA
38F0:  MOVFF  FEF,5F6
38F4:  MOVF   x6C,W
38F6:  MULLW  14
38F8:  MOVFF  FF3,5F7
38FC:  MOVFF  5F6,5F8
3900:  MOVFF  5F7,5F9
3904:  MOVLW  1E
3906:  MOVWF  xFA
3908:  MOVLW  01
390A:  MOVWF  xFB
390C:  MOVLB  0
390E:  CALL   15D8
....................                } 
....................                else 
3912:  BRA    3946
3914:  MOVLB  5
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
3916:  MOVLW  01
3918:  SUBWF  x6C,W
391A:  CLRF   03
391C:  ADDLW  96
391E:  MOVWF  FE9
3920:  MOVLW  05
3922:  ADDWFC 03,W
3924:  MOVWF  FEA
3926:  MOVFF  FEF,5F6
392A:  MOVF   x6C,W
392C:  MULLW  14
392E:  MOVFF  FF3,5F7
3932:  MOVFF  5F6,5F8
3936:  MOVFF  5F7,5F9
393A:  MOVLW  1E
393C:  MOVWF  xFA
393E:  CLRF   xFB
3940:  MOVLB  0
3942:  CALL   15D8
....................                } 
....................             } 
3946:  MOVLB  5
3948:  INCF   x6C,F
394A:  BRA    3896
....................          } 
....................       } 
....................          else 
394C:  BRA    3952
....................             {Flanco = 0;} 
394E:  MOVLB  5
3950:  BCF    x65.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
3952:  BSF    F96.0
3954:  BTFSS  F84.0
3956:  BRA    3A24
....................       { 
....................          if(Flanco2 == 0) 
3958:  BTFSC  x65.2
395A:  BRA    3A22
....................             {Flanco2 = 1;delay_ms(30); 
395C:  BSF    x65.2
395E:  MOVLW  1E
3960:  MOVWF  xFC
3962:  MOVLB  0
3964:  CALL   0CCE
....................                for(i=1;i<=4;i++) 
3968:  MOVLW  01
396A:  MOVLB  5
396C:  MOVWF  x6C
396E:  MOVF   x6C,W
3970:  SUBLW  04
3972:  BNC   3A22
....................                { 
....................                   if(unidad==i) 
3974:  MOVF   x6C,W
3976:  SUBWF  x6B,W
3978:  BNZ   39EC
....................                   {Contrasena[i-1]--;  
397A:  MOVLW  01
397C:  SUBWF  x6C,W
397E:  CLRF   03
3980:  ADDLW  96
3982:  MOVWF  FE9
3984:  MOVLW  05
3986:  ADDWFC 03,W
3988:  MOVWF  FEA
398A:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
398C:  MOVLW  01
398E:  SUBWF  x6C,W
3990:  CLRF   03
3992:  ADDLW  96
3994:  MOVWF  FE9
3996:  MOVLW  05
3998:  ADDWFC 03,W
399A:  MOVWF  FEA
399C:  BTFSC  FEF.7
399E:  BRA    39A2
39A0:  BRA    39B6
....................                         {Contrasena[i-1]=9;} 
39A2:  MOVLW  01
39A4:  SUBWF  x6C,W
39A6:  CLRF   03
39A8:  ADDLW  96
39AA:  MOVWF  FE9
39AC:  MOVLW  05
39AE:  ADDWFC 03,W
39B0:  MOVWF  FEA
39B2:  MOVLW  09
39B4:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
39B6:  MOVLW  01
39B8:  SUBWF  x6C,W
39BA:  CLRF   03
39BC:  ADDLW  96
39BE:  MOVWF  FE9
39C0:  MOVLW  05
39C2:  ADDWFC 03,W
39C4:  MOVWF  FEA
39C6:  MOVFF  FEF,5F6
39CA:  MOVF   x6C,W
39CC:  MULLW  14
39CE:  MOVFF  FF3,5F7
39D2:  MOVFF  5F6,5F8
39D6:  MOVFF  5F7,5F9
39DA:  MOVLW  1E
39DC:  MOVWF  xFA
39DE:  MOVLW  01
39E0:  MOVWF  xFB
39E2:  MOVLB  0
39E4:  CALL   15D8
....................                   else 
39E8:  BRA    3A1C
39EA:  MOVLB  5
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
39EC:  MOVLW  01
39EE:  SUBWF  x6C,W
39F0:  CLRF   03
39F2:  ADDLW  96
39F4:  MOVWF  FE9
39F6:  MOVLW  05
39F8:  ADDWFC 03,W
39FA:  MOVWF  FEA
39FC:  MOVFF  FEF,5F6
3A00:  MOVF   x6C,W
3A02:  MULLW  14
3A04:  MOVFF  FF3,5F7
3A08:  MOVFF  5F6,5F8
3A0C:  MOVFF  5F7,5F9
3A10:  MOVLW  1E
3A12:  MOVWF  xFA
3A14:  CLRF   xFB
3A16:  MOVLB  0
3A18:  CALL   15D8
....................                }       
3A1C:  MOVLB  5
3A1E:  INCF   x6C,F
3A20:  BRA    396E
....................             }      
....................       } 
....................          else 
3A22:  BRA    3A26
....................             {Flanco2 = 0;}   
3A24:  BCF    x65.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
3A26:  BSF    F96.1
3A28:  BTFSS  F84.1
3A2A:  BRA    3ABE
....................       { 
....................          if(Flanco1 == 0) 
3A2C:  BTFSC  x65.1
3A2E:  BRA    3ABC
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
3A30:  BSF    x65.1
3A32:  MOVLW  1E
3A34:  MOVWF  xFC
3A36:  MOVLB  0
3A38:  CALL   0CCE
3A3C:  MOVLB  5
3A3E:  INCF   x6B,F
....................                for(i=1;i<=4;i++) 
3A40:  MOVLW  01
3A42:  MOVWF  x6C
3A44:  MOVF   x6C,W
3A46:  SUBLW  04
3A48:  BNC   3ABC
....................                { 
....................                   if(unidad==i) 
3A4A:  MOVF   x6C,W
3A4C:  SUBWF  x6B,W
3A4E:  BNZ   3A86
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
3A50:  MOVLW  01
3A52:  SUBWF  x6C,W
3A54:  CLRF   03
3A56:  ADDLW  96
3A58:  MOVWF  FE9
3A5A:  MOVLW  05
3A5C:  ADDWFC 03,W
3A5E:  MOVWF  FEA
3A60:  MOVFF  FEF,5F6
3A64:  MOVF   x6C,W
3A66:  MULLW  14
3A68:  MOVFF  FF3,5F7
3A6C:  MOVFF  5F6,5F8
3A70:  MOVFF  5F7,5F9
3A74:  MOVLW  1E
3A76:  MOVWF  xFA
3A78:  MOVLW  01
3A7A:  MOVWF  xFB
3A7C:  MOVLB  0
3A7E:  CALL   15D8
....................                   else 
3A82:  BRA    3AB6
3A84:  MOVLB  5
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
3A86:  MOVLW  01
3A88:  SUBWF  x6C,W
3A8A:  CLRF   03
3A8C:  ADDLW  96
3A8E:  MOVWF  FE9
3A90:  MOVLW  05
3A92:  ADDWFC 03,W
3A94:  MOVWF  FEA
3A96:  MOVFF  FEF,5F6
3A9A:  MOVF   x6C,W
3A9C:  MULLW  14
3A9E:  MOVFF  FF3,5F7
3AA2:  MOVFF  5F6,5F8
3AA6:  MOVFF  5F7,5F9
3AAA:  MOVLW  1E
3AAC:  MOVWF  xFA
3AAE:  CLRF   xFB
3AB0:  MOVLB  0
3AB2:  CALL   15D8
....................                } 
3AB6:  MOVLB  5
3AB8:  INCF   x6C,F
3ABA:  BRA    3A44
....................             } 
....................       } 
....................          else 
3ABC:  BRA    3AC0
....................             {Flanco1 = 0;}   
3ABE:  BCF    x65.1
....................      
....................       if(unidad>4) 
3AC0:  MOVF   x6B,W
3AC2:  SUBLW  04
3AC4:  BTFSC  FD8.0
3AC6:  BRA    3DAE
....................       {glcd_fillScreen(OFF);unidad=4; 
3AC8:  CLRF   xF7
3ACA:  MOVLB  0
3ACC:  CALL   0D6E
3AD0:  MOVLW  04
3AD2:  MOVLB  5
3AD4:  MOVWF  x6B
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
3AD6:  MOVF   x96,W
3AD8:  SUBLW  03
3ADA:  BNZ   3BC2
3ADC:  MOVF   x97,W
3ADE:  SUBLW  08
3AE0:  BNZ   3BC2
3AE2:  MOVF   x98,W
3AE4:  SUBLW  09
3AE6:  BNZ   3BC2
3AE8:  MOVF   x99,W
3AEA:  SUBLW  02
3AEC:  BNZ   3BC2
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
3AEE:  MOVLW  0A
3AF0:  MOVWF  FA9
3AF2:  CLRF   FA8
3AF4:  BCF    FA6.6
3AF6:  BCF    FA6.7
3AF8:  BSF    FA6.2
3AFA:  MOVF   FF2,W
3AFC:  MOVWF  00
3AFE:  BCF    FF2.7
3B00:  MOVLB  F
3B02:  MOVLW  55
3B04:  MOVWF  FA7
3B06:  MOVLW  AA
3B08:  MOVWF  FA7
3B0A:  BSF    FA6.1
3B0C:  BTFSC  FA6.1
3B0E:  BRA    3B0C
3B10:  BCF    FA6.2
3B12:  MOVF   00,W
3B14:  IORWF  FF2,F
3B16:  MOVLW  14
3B18:  MOVLB  5
3B1A:  MOVWF  xFC
3B1C:  MOVLB  0
3B1E:  CALL   0CCE
3B22:  MOVLW  0B
3B24:  MOVWF  FA9
3B26:  CLRF   FA8
3B28:  BCF    FA6.6
3B2A:  BCF    FA6.7
3B2C:  BSF    FA6.2
3B2E:  MOVF   FF2,W
3B30:  MOVWF  00
3B32:  BCF    FF2.7
3B34:  MOVLB  F
3B36:  MOVLW  55
3B38:  MOVWF  FA7
3B3A:  MOVLW  AA
3B3C:  MOVWF  FA7
3B3E:  BSF    FA6.1
3B40:  BTFSC  FA6.1
3B42:  BRA    3B40
3B44:  BCF    FA6.2
3B46:  MOVF   00,W
3B48:  IORWF  FF2,F
3B4A:  MOVLW  14
3B4C:  MOVLB  5
3B4E:  MOVWF  xFC
3B50:  MOVLB  0
3B52:  CALL   0CCE
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
3B56:  MOVLW  0C
3B58:  MOVWF  FA9
3B5A:  CLRF   FA8
3B5C:  BCF    FA6.6
3B5E:  BCF    FA6.7
3B60:  BSF    FA6.2
3B62:  MOVF   FF2,W
3B64:  MOVWF  00
3B66:  BCF    FF2.7
3B68:  MOVLB  F
3B6A:  MOVLW  55
3B6C:  MOVWF  FA7
3B6E:  MOVLW  AA
3B70:  MOVWF  FA7
3B72:  BSF    FA6.1
3B74:  BTFSC  FA6.1
3B76:  BRA    3B74
3B78:  BCF    FA6.2
3B7A:  MOVF   00,W
3B7C:  IORWF  FF2,F
3B7E:  MOVLW  14
3B80:  MOVLB  5
3B82:  MOVWF  xFC
3B84:  MOVLB  0
3B86:  CALL   0CCE
3B8A:  MOVLW  0D
3B8C:  MOVWF  FA9
3B8E:  CLRF   FA8
3B90:  BCF    FA6.6
3B92:  BCF    FA6.7
3B94:  BSF    FA6.2
3B96:  MOVF   FF2,W
3B98:  MOVWF  00
3B9A:  BCF    FF2.7
3B9C:  MOVLB  F
3B9E:  MOVLW  55
3BA0:  MOVWF  FA7
3BA2:  MOVLW  AA
3BA4:  MOVWF  FA7
3BA6:  BSF    FA6.1
3BA8:  BTFSC  FA6.1
3BAA:  BRA    3BA8
3BAC:  BCF    FA6.2
3BAE:  MOVF   00,W
3BB0:  IORWF  FF2,F
3BB2:  MOVLW  14
3BB4:  MOVLB  5
3BB6:  MOVWF  xFC
3BB8:  MOVLB  0
3BBA:  CALL   0CCE
....................              reset_cpu();}         
3BBE:  RESET
3BC0:  MOVLB  5
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
3BC2:  MOVF   x9A,W
3BC4:  SUBWF  x96,W
3BC6:  BNZ   3C96
3BC8:  MOVF   x9B,W
3BCA:  SUBWF  x97,W
3BCC:  BNZ   3C96
3BCE:  MOVF   x9C,W
3BD0:  SUBWF  x98,W
3BD2:  BNZ   3C96
3BD4:  MOVF   x9D,W
3BD6:  SUBWF  x99,W
3BD8:  BNZ   3C96
....................          { 
....................             glcd_fillScreen(OFF); 
3BDA:  CLRF   xF7
3BDC:  MOVLB  0
3BDE:  CALL   0D6E
....................             strcpy(Menus.Letra,"Clave"); 
3BE2:  MOVLW  05
3BE4:  MOVWF  FEA
3BE6:  MOVLW  D6
3BE8:  MOVWF  FE9
3BEA:  MOVFF  FF2,5F6
3BEE:  BCF    FF2.7
3BF0:  MOVLW  00
3BF2:  CALL   077E
3BF6:  TBLRD*-
3BF8:  TBLRD*+
3BFA:  MOVF   FF5,W
3BFC:  MOVWF  FEE
3BFE:  IORLW  00
3C00:  BNZ   3BF8
3C02:  MOVLB  5
3C04:  BTFSC  xF6.7
3C06:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3C08:  MOVLW  05
3C0A:  MOVWF  xF7
3C0C:  MOVLW  D6
3C0E:  MOVWF  xF6
3C10:  MOVLW  1E
3C12:  MOVWF  xF8
3C14:  CLRF   xF9
3C16:  CLRF   xFA
3C18:  MOVLW  02
3C1A:  MOVWF  xFB
3C1C:  MOVLB  0
3C1E:  CALL   13A0
....................             strcpy(Menus.Letra,"Correcta"); 
3C22:  MOVLW  05
3C24:  MOVWF  FEA
3C26:  MOVLW  D6
3C28:  MOVWF  FE9
3C2A:  MOVFF  FF2,5F6
3C2E:  BCF    FF2.7
3C30:  MOVLW  00
3C32:  CALL   079E
3C36:  TBLRD*-
3C38:  TBLRD*+
3C3A:  MOVF   FF5,W
3C3C:  MOVWF  FEE
3C3E:  IORLW  00
3C40:  BNZ   3C38
3C42:  MOVLB  5
3C44:  BTFSC  xF6.7
3C46:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
3C48:  MOVLW  05
3C4A:  MOVWF  xF7
3C4C:  MOVLW  D6
3C4E:  MOVWF  xF6
3C50:  MOVLW  0F
3C52:  MOVWF  xF8
3C54:  MOVLW  1E
3C56:  MOVWF  xF9
3C58:  CLRF   xFA
3C5A:  MOVLW  02
3C5C:  MOVWF  xFB
3C5E:  MOVLB  0
3C60:  CALL   13A0
....................             Menu=1;glcd_update();delay_ms(1000); 
3C64:  MOVLW  01
3C66:  MOVLB  5
3C68:  MOVWF  x6A
3C6A:  MOVLB  0
3C6C:  CALL   0DC8
3C70:  MOVLW  04
3C72:  MOVLB  5
3C74:  MOVWF  xF6
3C76:  MOVLW  FA
3C78:  MOVWF  xFC
3C7A:  MOVLB  0
3C7C:  CALL   0CCE
3C80:  MOVLB  5
3C82:  DECFSZ xF6,F
3C84:  BRA    3C76
....................             glcd_fillScreen(OFF);unidad=1; 
3C86:  CLRF   xF7
3C88:  MOVLB  0
3C8A:  CALL   0D6E
3C8E:  MOVLW  01
3C90:  MOVLB  5
3C92:  MOVWF  x6B
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
3C94:  BRA    3DAE
....................          { 
....................             glcd_fillScreen(OFF); 
3C96:  CLRF   xF7
3C98:  MOVLB  0
3C9A:  CALL   0D6E
....................             strcpy(Menus.Letra,"Clave"); 
3C9E:  MOVLW  05
3CA0:  MOVWF  FEA
3CA2:  MOVLW  D6
3CA4:  MOVWF  FE9
3CA6:  MOVFF  FF2,5F6
3CAA:  BCF    FF2.7
3CAC:  MOVLW  00
3CAE:  CALL   077E
3CB2:  TBLRD*-
3CB4:  TBLRD*+
3CB6:  MOVF   FF5,W
3CB8:  MOVWF  FEE
3CBA:  IORLW  00
3CBC:  BNZ   3CB4
3CBE:  MOVLB  5
3CC0:  BTFSC  xF6.7
3CC2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3CC4:  MOVLW  05
3CC6:  MOVWF  xF7
3CC8:  MOVLW  D6
3CCA:  MOVWF  xF6
3CCC:  MOVLW  1E
3CCE:  MOVWF  xF8
3CD0:  CLRF   xF9
3CD2:  CLRF   xFA
3CD4:  MOVLW  02
3CD6:  MOVWF  xFB
3CD8:  MOVLB  0
3CDA:  CALL   13A0
....................             strcpy(Menus.Letra,"Incorrecta"); 
3CDE:  MOVLW  05
3CE0:  MOVWF  FEA
3CE2:  MOVLW  D6
3CE4:  MOVWF  FE9
3CE6:  MOVFF  FF2,5F6
3CEA:  BCF    FF2.7
3CEC:  MOVLW  00
3CEE:  CALL   07C2
3CF2:  TBLRD*-
3CF4:  TBLRD*+
3CF6:  MOVF   FF5,W
3CF8:  MOVWF  FEE
3CFA:  IORLW  00
3CFC:  BNZ   3CF4
3CFE:  MOVLB  5
3D00:  BTFSC  xF6.7
3D02:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
3D04:  MOVLW  05
3D06:  MOVWF  xF7
3D08:  MOVLW  D6
3D0A:  MOVWF  xF6
3D0C:  CLRF   xF8
3D0E:  MOVLW  1E
3D10:  MOVWF  xF9
3D12:  CLRF   xFA
3D14:  MOVLW  02
3D16:  MOVWF  xFB
3D18:  MOVLB  0
3D1A:  CALL   13A0
....................             Menu=0;glcd_update();delay_ms(1000); 
3D1E:  MOVLB  5
3D20:  CLRF   x6A
3D22:  MOVLB  0
3D24:  CALL   0DC8
3D28:  MOVLW  04
3D2A:  MOVLB  5
3D2C:  MOVWF  xF6
3D2E:  MOVLW  FA
3D30:  MOVWF  xFC
3D32:  MOVLB  0
3D34:  CALL   0CCE
3D38:  MOVLB  5
3D3A:  DECFSZ xF6,F
3D3C:  BRA    3D2E
....................             glcd_fillScreen(OFF);unidad=1; 
3D3E:  CLRF   xF7
3D40:  MOVLB  0
3D42:  CALL   0D6E
3D46:  MOVLW  01
3D48:  MOVLB  5
3D4A:  MOVWF  x6B
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
3D4C:  CLRF   x96
3D4E:  CLRF   x97
3D50:  CLRF   x98
3D52:  CLRF   x99
....................             displayContrasena(Contrasena[0],20,30,1); 
3D54:  MOVFF  596,5F8
3D58:  MOVLW  14
3D5A:  MOVWF  xF9
3D5C:  MOVLW  1E
3D5E:  MOVWF  xFA
3D60:  MOVLW  01
3D62:  MOVWF  xFB
3D64:  MOVLB  0
3D66:  CALL   15D8
....................             displayContrasena(Contrasena[1],40,30,0); 
3D6A:  MOVFF  597,5F8
3D6E:  MOVLW  28
3D70:  MOVLB  5
3D72:  MOVWF  xF9
3D74:  MOVLW  1E
3D76:  MOVWF  xFA
3D78:  CLRF   xFB
3D7A:  MOVLB  0
3D7C:  CALL   15D8
....................             displayContrasena(Contrasena[2],60,30,0); 
3D80:  MOVFF  598,5F8
3D84:  MOVLW  3C
3D86:  MOVLB  5
3D88:  MOVWF  xF9
3D8A:  MOVLW  1E
3D8C:  MOVWF  xFA
3D8E:  CLRF   xFB
3D90:  MOVLB  0
3D92:  CALL   15D8
....................             displayContrasena(Contrasena[3],80,30,0); 
3D96:  MOVFF  599,5F8
3D9A:  MOVLW  50
3D9C:  MOVLB  5
3D9E:  MOVWF  xF9
3DA0:  MOVLW  1E
3DA2:  MOVWF  xFA
3DA4:  CLRF   xFB
3DA6:  MOVLB  0
3DA8:  CALL   15D8
3DAC:  MOVLB  5
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
3DAE:  DECFSZ x6A,W
3DB0:  BRA    40C4
....................        
....................          if(Opcion>4) 
3DB2:  MOVF   x71,W
3DB4:  SUBLW  04
3DB6:  BC    3DBC
....................          {Opcion=1;} 
3DB8:  MOVLW  01
3DBA:  MOVWF  x71
....................          if(Opcion<1) 
3DBC:  MOVF   x71,F
3DBE:  BNZ   3DC4
....................          {Opcion=4;} 
3DC0:  MOVLW  04
3DC2:  MOVWF  x71
....................           
....................          strcpy(Menus.Letra,"Menu"); 
3DC4:  MOVLW  05
3DC6:  MOVWF  FEA
3DC8:  MOVLW  D6
3DCA:  MOVWF  FE9
3DCC:  MOVFF  FF2,5F6
3DD0:  BCF    FF2.7
3DD2:  MOVLW  00
3DD4:  MOVLB  0
3DD6:  CALL   07E8
3DDA:  TBLRD*-
3DDC:  TBLRD*+
3DDE:  MOVF   FF5,W
3DE0:  MOVWF  FEE
3DE2:  IORLW  00
3DE4:  BNZ   3DDC
3DE6:  MOVLB  5
3DE8:  BTFSC  xF6.7
3DEA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
3DEC:  MOVLW  05
3DEE:  MOVWF  xF7
3DF0:  MOVLW  D6
3DF2:  MOVWF  xF6
3DF4:  MOVLW  1E
3DF6:  MOVWF  xF8
3DF8:  CLRF   xF9
3DFA:  MOVLW  01
3DFC:  MOVWF  xFA
3DFE:  MOVLW  02
3E00:  MOVWF  xFB
3E02:  MOVLB  0
3E04:  CALL   13A0
....................        
....................          if(Opcion==1)    
3E08:  MOVLB  5
3E0A:  DECFSZ x71,W
3E0C:  BRA    3E54
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
3E0E:  MOVLW  05
3E10:  MOVWF  FEA
3E12:  MOVLW  D6
3E14:  MOVWF  FE9
3E16:  MOVFF  FF2,5F6
3E1A:  BCF    FF2.7
3E1C:  MOVLW  00
3E1E:  MOVLB  0
3E20:  CALL   0808
3E24:  TBLRD*-
3E26:  TBLRD*+
3E28:  MOVF   FF5,W
3E2A:  MOVWF  FEE
3E2C:  IORLW  00
3E2E:  BNZ   3E26
3E30:  MOVLB  5
3E32:  BTFSC  xF6.7
3E34:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
3E36:  MOVLW  05
3E38:  MOVWF  xF7
3E3A:  MOVLW  D6
3E3C:  MOVWF  xF6
3E3E:  CLRF   xF8
3E40:  MOVLW  14
3E42:  MOVWF  xF9
3E44:  MOVLW  01
3E46:  MOVWF  xFA
3E48:  MOVWF  xFB
3E4A:  MOVLB  0
3E4C:  CALL   13A0
....................          else 
3E50:  BRA    3E96
3E52:  MOVLB  5
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
3E54:  MOVLW  05
3E56:  MOVWF  FEA
3E58:  MOVLW  D6
3E5A:  MOVWF  FE9
3E5C:  MOVFF  FF2,5F6
3E60:  BCF    FF2.7
3E62:  MOVLW  00
3E64:  MOVLB  0
3E66:  CALL   0808
3E6A:  TBLRD*-
3E6C:  TBLRD*+
3E6E:  MOVF   FF5,W
3E70:  MOVWF  FEE
3E72:  IORLW  00
3E74:  BNZ   3E6C
3E76:  MOVLB  5
3E78:  BTFSC  xF6.7
3E7A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);} 
3E7C:  MOVLW  05
3E7E:  MOVWF  xF7
3E80:  MOVLW  D6
3E82:  MOVWF  xF6
3E84:  CLRF   xF8
3E86:  MOVLW  14
3E88:  MOVWF  xF9
3E8A:  CLRF   xFA
3E8C:  MOVLW  01
3E8E:  MOVWF  xFB
3E90:  MOVLB  0
3E92:  CALL   13A0
....................           
....................          if(Opcion==2)    
3E96:  MOVLB  5
3E98:  MOVF   x71,W
3E9A:  SUBLW  02
3E9C:  BNZ   3EE4
....................             {strcpy(Menus.Letra,"Temperatura"); 
3E9E:  MOVLW  05
3EA0:  MOVWF  FEA
3EA2:  MOVLW  D6
3EA4:  MOVWF  FE9
3EA6:  MOVFF  FF2,5F6
3EAA:  BCF    FF2.7
3EAC:  MOVLW  00
3EAE:  MOVLB  0
3EB0:  CALL   0832
3EB4:  TBLRD*-
3EB6:  TBLRD*+
3EB8:  MOVF   FF5,W
3EBA:  MOVWF  FEE
3EBC:  IORLW  00
3EBE:  BNZ   3EB6
3EC0:  MOVLB  5
3EC2:  BTFSC  xF6.7
3EC4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
3EC6:  MOVLW  05
3EC8:  MOVWF  xF7
3ECA:  MOVLW  D6
3ECC:  MOVWF  xF6
3ECE:  CLRF   xF8
3ED0:  MOVLW  1E
3ED2:  MOVWF  xF9
3ED4:  MOVLW  01
3ED6:  MOVWF  xFA
3ED8:  MOVWF  xFB
3EDA:  MOVLB  0
3EDC:  CALL   13A0
....................          else 
3EE0:  BRA    3F26
3EE2:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temperatura"); 
3EE4:  MOVLW  05
3EE6:  MOVWF  FEA
3EE8:  MOVLW  D6
3EEA:  MOVWF  FE9
3EEC:  MOVFF  FF2,5F6
3EF0:  BCF    FF2.7
3EF2:  MOVLW  00
3EF4:  MOVLB  0
3EF6:  CALL   0832
3EFA:  TBLRD*-
3EFC:  TBLRD*+
3EFE:  MOVF   FF5,W
3F00:  MOVWF  FEE
3F02:  IORLW  00
3F04:  BNZ   3EFC
3F06:  MOVLB  5
3F08:  BTFSC  xF6.7
3F0A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);} 
3F0C:  MOVLW  05
3F0E:  MOVWF  xF7
3F10:  MOVLW  D6
3F12:  MOVWF  xF6
3F14:  CLRF   xF8
3F16:  MOVLW  1E
3F18:  MOVWF  xF9
3F1A:  CLRF   xFA
3F1C:  MOVLW  01
3F1E:  MOVWF  xFB
3F20:  MOVLB  0
3F22:  CALL   13A0
....................              
....................          if(Opcion==3)    
3F26:  MOVLB  5
3F28:  MOVF   x71,W
3F2A:  SUBLW  03
3F2C:  BNZ   3F74
....................             {strcpy(Menus.Letra,"Temporizador"); 
3F2E:  MOVLW  05
3F30:  MOVWF  FEA
3F32:  MOVLW  D6
3F34:  MOVWF  FE9
3F36:  MOVFF  FF2,5F6
3F3A:  BCF    FF2.7
3F3C:  MOVLW  00
3F3E:  MOVLB  0
3F40:  CALL   0858
3F44:  TBLRD*-
3F46:  TBLRD*+
3F48:  MOVF   FF5,W
3F4A:  MOVWF  FEE
3F4C:  IORLW  00
3F4E:  BNZ   3F46
3F50:  MOVLB  5
3F52:  BTFSC  xF6.7
3F54:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
3F56:  MOVLW  05
3F58:  MOVWF  xF7
3F5A:  MOVLW  D6
3F5C:  MOVWF  xF6
3F5E:  CLRF   xF8
3F60:  MOVLW  28
3F62:  MOVWF  xF9
3F64:  MOVLW  01
3F66:  MOVWF  xFA
3F68:  MOVWF  xFB
3F6A:  MOVLB  0
3F6C:  CALL   13A0
....................          else 
3F70:  BRA    3FB6
3F72:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temporizador"); 
3F74:  MOVLW  05
3F76:  MOVWF  FEA
3F78:  MOVLW  D6
3F7A:  MOVWF  FE9
3F7C:  MOVFF  FF2,5F6
3F80:  BCF    FF2.7
3F82:  MOVLW  00
3F84:  MOVLB  0
3F86:  CALL   0858
3F8A:  TBLRD*-
3F8C:  TBLRD*+
3F8E:  MOVF   FF5,W
3F90:  MOVWF  FEE
3F92:  IORLW  00
3F94:  BNZ   3F8C
3F96:  MOVLB  5
3F98:  BTFSC  xF6.7
3F9A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}    
3F9C:  MOVLW  05
3F9E:  MOVWF  xF7
3FA0:  MOVLW  D6
3FA2:  MOVWF  xF6
3FA4:  CLRF   xF8
3FA6:  MOVLW  28
3FA8:  MOVWF  xF9
3FAA:  CLRF   xFA
3FAC:  MOVLW  01
3FAE:  MOVWF  xFB
3FB0:  MOVLB  0
3FB2:  CALL   13A0
....................                          
....................          if(Opcion==4)    
3FB6:  MOVLB  5
3FB8:  MOVF   x71,W
3FBA:  SUBLW  04
3FBC:  BNZ   4004
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3FBE:  MOVLW  05
3FC0:  MOVWF  FEA
3FC2:  MOVLW  D6
3FC4:  MOVWF  FE9
3FC6:  MOVFF  FF2,5F6
3FCA:  BCF    FF2.7
3FCC:  MOVLW  00
3FCE:  MOVLB  0
3FD0:  CALL   0880
3FD4:  TBLRD*-
3FD6:  TBLRD*+
3FD8:  MOVF   FF5,W
3FDA:  MOVWF  FEE
3FDC:  IORLW  00
3FDE:  BNZ   3FD6
3FE0:  MOVLB  5
3FE2:  BTFSC  xF6.7
3FE4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
3FE6:  MOVLW  05
3FE8:  MOVWF  xF7
3FEA:  MOVLW  D6
3FEC:  MOVWF  xF6
3FEE:  CLRF   xF8
3FF0:  MOVLW  32
3FF2:  MOVWF  xF9
3FF4:  MOVLW  01
3FF6:  MOVWF  xFA
3FF8:  MOVWF  xFB
3FFA:  MOVLB  0
3FFC:  CALL   13A0
....................          else 
4000:  BRA    4046
4002:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
4004:  MOVLW  05
4006:  MOVWF  FEA
4008:  MOVLW  D6
400A:  MOVWF  FE9
400C:  MOVFF  FF2,5F6
4010:  BCF    FF2.7
4012:  MOVLW  00
4014:  MOVLB  0
4016:  CALL   0880
401A:  TBLRD*-
401C:  TBLRD*+
401E:  MOVF   FF5,W
4020:  MOVWF  FEE
4022:  IORLW  00
4024:  BNZ   401C
4026:  MOVLB  5
4028:  BTFSC  xF6.7
402A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}      
402C:  MOVLW  05
402E:  MOVWF  xF7
4030:  MOVLW  D6
4032:  MOVWF  xF6
4034:  CLRF   xF8
4036:  MOVLW  32
4038:  MOVWF  xF9
403A:  CLRF   xFA
403C:  MOVLW  01
403E:  MOVWF  xFB
4040:  MOVLB  0
4042:  CALL   13A0
....................              
....................       if(UP)//Si oprime hacia arriba 
4046:  BSF    F92.5
4048:  BTFSS  F80.5
404A:  BRA    4066
....................          {  if(Flanco == 0)  
404C:  MOVLB  5
404E:  BTFSC  x65.0
4050:  BRA    4064
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
4052:  BSF    x65.0
4054:  MOVLW  1E
4056:  MOVWF  xFC
4058:  MOVLB  0
405A:  CALL   0CCE
405E:  MOVLB  5
4060:  DECF   x71,F
4062:  BSF    x65.3
....................                } 
....................          } 
....................             else 
4064:  BRA    406A
....................                {Flanco = 0;} 
4066:  MOVLB  5
4068:  BCF    x65.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
406A:  BSF    F96.0
406C:  BTFSS  F84.0
406E:  BRA    4088
....................          {  if(Flanco2 == 0)  
4070:  BTFSC  x65.2
4072:  BRA    4086
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
4074:  BSF    x65.2
4076:  MOVLW  1E
4078:  MOVWF  xFC
407A:  MOVLB  0
407C:  CALL   0CCE
4080:  MOVLB  5
4082:  INCF   x71,F
4084:  BSF    x65.3
....................                }      
....................          } 
....................             else 
4086:  BRA    408A
....................                {Flanco2 = 0;}   
4088:  BCF    x65.2
....................                 
....................        if(RIGHT)//Si oprime SET 
408A:  BSF    F96.1
408C:  BTFSS  F84.1
408E:  BRA    40C2
....................          {  if(Flanco1 == 0)  
4090:  BTFSC  x65.1
4092:  BRA    40C0
....................                {Flanco1 = 1;delay_ms(500);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4094:  BSF    x65.1
4096:  MOVLW  02
4098:  MOVWF  xF6
409A:  MOVLW  FA
409C:  MOVWF  xFC
409E:  MOVLB  0
40A0:  CALL   0CCE
40A4:  MOVLB  5
40A6:  DECFSZ xF6,F
40A8:  BRA    409A
40AA:  MOVLW  03
40AC:  ADDWF  x71,W
40AE:  MOVWF  x6A
40B0:  MOVLW  01
40B2:  MOVWF  x71
40B4:  CLRF   xF7
40B6:  MOVLB  0
40B8:  CALL   0D6E
40BC:  MOVLB  5
40BE:  BSF    x65.3
....................                } 
....................          } 
....................             else 
40C0:  BRA    40C4
....................                {Flanco1 = 0;}   
40C2:  BCF    x65.1
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Continuar 
40C4:  MOVF   x6A,W
40C6:  SUBLW  04
40C8:  BTFSS  FD8.2
40CA:  BRA    433C
....................        
....................       if(Opcion>2) 
40CC:  MOVF   x71,W
40CE:  SUBLW  02
40D0:  BC    40D6
....................          Opcion=1; 
40D2:  MOVLW  01
40D4:  MOVWF  x71
....................           
....................       if(Opcion<1) 
40D6:  MOVF   x71,F
40D8:  BNZ   40DE
....................          Opcion=2; 
40DA:  MOVLW  02
40DC:  MOVWF  x71
....................        
....................          strcpy(Menus.Letra,"Continuar"); 
40DE:  MOVLW  05
40E0:  MOVWF  FEA
40E2:  MOVLW  D6
40E4:  MOVWF  FE9
40E6:  MOVFF  FF2,5F6
40EA:  BCF    FF2.7
40EC:  MOVLW  00
40EE:  MOVLB  0
40F0:  CALL   08A8
40F4:  TBLRD*-
40F6:  TBLRD*+
40F8:  MOVF   FF5,W
40FA:  MOVWF  FEE
40FC:  IORLW  00
40FE:  BNZ   40F6
4100:  MOVLB  5
4102:  BTFSC  xF6.7
4104:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4106:  MOVLW  05
4108:  MOVWF  xF7
410A:  MOVLW  D6
410C:  MOVWF  xF6
410E:  CLRF   xF8
4110:  CLRF   xF9
4112:  MOVLW  01
4114:  MOVWF  xFA
4116:  MOVLW  02
4118:  MOVWF  xFB
411A:  MOVLB  0
411C:  CALL   13A0
....................           
....................          if(Opcion==2) 
4120:  MOVLB  5
4122:  MOVF   x71,W
4124:  SUBLW  02
4126:  BNZ   41B2
....................          {strcpy(Menus.Letra,"SI"); 
4128:  MOVLW  05
412A:  MOVWF  FEA
412C:  MOVLW  D6
412E:  MOVWF  FE9
4130:  MOVFF  FF2,5F6
4134:  BCF    FF2.7
4136:  MOVLW  00
4138:  MOVLB  0
413A:  CALL   08CC
413E:  TBLRD*-
4140:  TBLRD*+
4142:  MOVF   FF5,W
4144:  MOVWF  FEE
4146:  IORLW  00
4148:  BNZ   4140
414A:  MOVLB  5
414C:  BTFSC  xF6.7
414E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
4150:  MOVLW  05
4152:  MOVWF  xF7
4154:  MOVLW  D6
4156:  MOVWF  xF6
4158:  MOVLW  32
415A:  MOVWF  xF8
415C:  MOVLW  19
415E:  MOVWF  xF9
4160:  MOVLW  01
4162:  MOVWF  xFA
4164:  MOVLW  02
4166:  MOVWF  xFB
4168:  MOVLB  0
416A:  CALL   13A0
....................          strcpy(Menus.Letra,"NO"); 
416E:  MOVLW  05
4170:  MOVWF  FEA
4172:  MOVLW  D6
4174:  MOVWF  FE9
4176:  MOVFF  FF2,5F6
417A:  BCF    FF2.7
417C:  MOVLW  00
417E:  CALL   08EA
4182:  TBLRD*-
4184:  TBLRD*+
4186:  MOVF   FF5,W
4188:  MOVWF  FEE
418A:  IORLW  00
418C:  BNZ   4184
418E:  MOVLB  5
4190:  BTFSC  xF6.7
4192:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
4194:  MOVLW  05
4196:  MOVWF  xF7
4198:  MOVLW  D6
419A:  MOVWF  xF6
419C:  MOVLW  32
419E:  MOVWF  xF8
41A0:  MOVLW  2D
41A2:  MOVWF  xF9
41A4:  CLRF   xFA
41A6:  MOVLW  02
41A8:  MOVWF  xFB
41AA:  MOVLB  0
41AC:  CALL   13A0
41B0:  MOVLB  5
....................          } 
....................          if(Opcion==1) 
41B2:  DECFSZ x71,W
41B4:  BRA    4240
....................          {strcpy(Menus.Letra,"SI"); 
41B6:  MOVLW  05
41B8:  MOVWF  FEA
41BA:  MOVLW  D6
41BC:  MOVWF  FE9
41BE:  MOVFF  FF2,5F6
41C2:  BCF    FF2.7
41C4:  MOVLW  00
41C6:  MOVLB  0
41C8:  CALL   08CC
41CC:  TBLRD*-
41CE:  TBLRD*+
41D0:  MOVF   FF5,W
41D2:  MOVWF  FEE
41D4:  IORLW  00
41D6:  BNZ   41CE
41D8:  MOVLB  5
41DA:  BTFSC  xF6.7
41DC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
41DE:  MOVLW  05
41E0:  MOVWF  xF7
41E2:  MOVLW  D6
41E4:  MOVWF  xF6
41E6:  MOVLW  32
41E8:  MOVWF  xF8
41EA:  MOVLW  19
41EC:  MOVWF  xF9
41EE:  CLRF   xFA
41F0:  MOVLW  02
41F2:  MOVWF  xFB
41F4:  MOVLB  0
41F6:  CALL   13A0
....................          strcpy(Menus.Letra,"NO"); 
41FA:  MOVLW  05
41FC:  MOVWF  FEA
41FE:  MOVLW  D6
4200:  MOVWF  FE9
4202:  MOVFF  FF2,5F6
4206:  BCF    FF2.7
4208:  MOVLW  00
420A:  CALL   08EA
420E:  TBLRD*-
4210:  TBLRD*+
4212:  MOVF   FF5,W
4214:  MOVWF  FEE
4216:  IORLW  00
4218:  BNZ   4210
421A:  MOVLB  5
421C:  BTFSC  xF6.7
421E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
4220:  MOVLW  05
4222:  MOVWF  xF7
4224:  MOVLW  D6
4226:  MOVWF  xF6
4228:  MOVLW  32
422A:  MOVWF  xF8
422C:  MOVLW  2D
422E:  MOVWF  xF9
4230:  MOVLW  01
4232:  MOVWF  xFA
4234:  MOVLW  02
4236:  MOVWF  xFB
4238:  MOVLB  0
423A:  CALL   13A0
423E:  MOVLB  5
....................          } 
....................         
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
4240:  BSF    F92.5
4242:  BTFSS  F80.5
4244:  BRA    424E
....................       { 
....................          if(Opcion<2) 
4246:  MOVF   x71,W
4248:  SUBLW  01
424A:  BNC   424E
....................          { 
....................             Opcion++; 
424C:  INCF   x71,F
....................          } 
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
424E:  BSF    F96.0
4250:  BTFSS  F84.0
4252:  BRA    425C
....................       {   
....................          if(Opcion>1) 
4254:  MOVF   x71,W
4256:  SUBLW  01
4258:  BC    425C
....................          { 
....................             Opcion--; 
425A:  DECF   x71,F
....................          }   
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
425C:  BSF    F96.1
425E:  BTFSS  F84.1
4260:  BRA    430A
....................       {   
....................          if(Opcion==2) 
4262:  MOVF   x71,W
4264:  SUBLW  02
4266:  BNZ   42E2
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;glcd_fillScreen(OFF);pausa=0; 
4268:  MOVLW  14
426A:  MOVWF  x6A
426C:  MOVLW  0F
426E:  MOVLB  6
4270:  MOVWF  x08
4272:  MOVLW  12
4274:  MOVWF  x09
4276:  MOVLW  1E
4278:  MOVWF  x0A
427A:  MOVLW  35
427C:  MOVWF  x0B
427E:  CLRF   x0C
4280:  MOVLW  01
4282:  MOVWF  x0D
4284:  MOVLB  0
4286:  CALL   12DE
428A:  MOVLB  5
428C:  CLRF   x73
428E:  CLRF   xF7
4290:  MOVLB  0
4292:  CALL   0D6E
4296:  MOVLB  5
4298:  CLRF   x6D
....................             //Ganancia=Setpoint*(Ganancia/Coeficiente); 
....................             //Tpulsomin=(Setpoint/150.0); 
....................             Gananciamax=(0.27)*Setpoint; 
429A:  CLRF   xFD
429C:  MOVFF  570,5FC
42A0:  MOVLB  0
42A2:  CALL   0CF8
42A6:  MOVLW  71
42A8:  MOVLB  6
42AA:  MOVWF  x16
42AC:  MOVLW  3D
42AE:  MOVWF  x15
42B0:  MOVLW  0A
42B2:  MOVWF  x14
42B4:  MOVLW  7D
42B6:  MOVWF  x13
42B8:  MOVFF  03,61A
42BC:  MOVFF  02,619
42C0:  MOVFF  01,618
42C4:  MOVFF  00,617
42C8:  MOVLB  0
42CA:  CALL   1E0C
42CE:  MOVFF  03,58D
42D2:  MOVFF  02,58C
42D6:  MOVFF  01,58B
42DA:  MOVFF  00,58A
....................          } 
....................          else 
42DE:  BRA    430C
42E0:  MOVLB  5
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
42E2:  MOVLW  04
42E4:  MOVWF  xF6
42E6:  MOVLW  AF
42E8:  MOVWF  xFC
42EA:  MOVLB  0
42EC:  CALL   0CCE
42F0:  MOVLB  5
42F2:  DECFSZ xF6,F
42F4:  BRA    42E6
42F6:  MOVLW  01
42F8:  MOVWF  x6A
42FA:  CLRF   xF7
42FC:  MOVLB  0
42FE:  CALL   0D6E
4302:  MOVLW  01
4304:  MOVLB  5
4306:  MOVWF  x71
4308:  BSF    x65.3
430A:  MOVLB  0
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
430C:  BSF    F96.2
430E:  BTFSS  F84.2
4310:  BRA    433E
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
4312:  MOVLW  04
4314:  MOVLB  5
4316:  MOVWF  xF6
4318:  MOVLW  AF
431A:  MOVWF  xFC
431C:  MOVLB  0
431E:  CALL   0CCE
4322:  MOVLB  5
4324:  DECFSZ xF6,F
4326:  BRA    4318
4328:  MOVLW  01
432A:  MOVWF  x6A
432C:  CLRF   xF7
432E:  MOVLB  0
4330:  CALL   0D6E
4334:  MOVLW  01
4336:  MOVLB  5
4338:  MOVWF  x71
433A:  BSF    x65.3
433C:  MOVLB  0
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Temperatura 
433E:  MOVLB  5
4340:  MOVF   x6A,W
4342:  SUBLW  05
4344:  BTFSS  FD8.2
4346:  BRA    44FE
....................       glcd_circle(85,30,3,NO,ON); 
4348:  MOVLW  55
434A:  MOVWF  xF6
434C:  MOVLW  1E
434E:  MOVWF  xF7
4350:  MOVLW  03
4352:  MOVWF  xF8
4354:  CLRF   xF9
4356:  MOVLW  01
4358:  MOVWF  xFA
435A:  MOVLB  0
435C:  CALL   1F52
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,92,30,2,3); 
4360:  MOVLW  05
4362:  MOVWF  FEA
4364:  MOVLW  D6
4366:  MOVWF  FE9
4368:  MOVFF  FF2,5F6
436C:  BCF    FF2.7
436E:  MOVLW  00
4370:  CALL   0908
4374:  TBLRD*-
4376:  TBLRD*+
4378:  MOVF   FF5,W
437A:  MOVWF  FEE
437C:  IORLW  00
437E:  BNZ   4376
4380:  MOVLB  5
4382:  BTFSC  xF6.7
4384:  BSF    FF2.7
4386:  MOVLW  05
4388:  MOVWF  xF7
438A:  MOVLW  D6
438C:  MOVWF  xF6
438E:  MOVLW  5C
4390:  MOVWF  xF8
4392:  MOVLW  1E
4394:  MOVWF  xF9
4396:  MOVLW  02
4398:  MOVWF  xFA
439A:  MOVLW  03
439C:  MOVWF  xFB
439E:  MOVLB  0
43A0:  CALL   13A0
....................        
....................          //glcd_fillScreen(OFF); 
....................          strcpy(Menus.Letra,"Temperatura"); 
43A4:  MOVLW  05
43A6:  MOVWF  FEA
43A8:  MOVLW  D6
43AA:  MOVWF  FE9
43AC:  MOVFF  FF2,5F6
43B0:  BCF    FF2.7
43B2:  MOVLW  00
43B4:  CALL   0832
43B8:  TBLRD*-
43BA:  TBLRD*+
43BC:  MOVF   FF5,W
43BE:  MOVWF  FEE
43C0:  IORLW  00
43C2:  BNZ   43BA
43C4:  MOVLB  5
43C6:  BTFSC  xF6.7
43C8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
43CA:  MOVLW  05
43CC:  MOVWF  xF7
43CE:  MOVLW  D6
43D0:  MOVWF  xF6
43D2:  CLRF   xF8
43D4:  CLRF   xF9
43D6:  MOVLW  01
43D8:  MOVWF  xFA
43DA:  MOVLW  02
43DC:  MOVWF  xFB
43DE:  MOVLB  0
43E0:  CALL   13A0
....................           
....................          displayTemperatura(Setpoint,30,30,0,3); 
43E4:  MOVFF  570,5F7
43E8:  MOVLW  1E
43EA:  MOVLB  5
43EC:  MOVWF  xF8
43EE:  MOVWF  xF9
43F0:  CLRF   xFA
43F2:  MOVLW  03
43F4:  MOVWF  xFB
43F6:  MOVLB  0
43F8:  CALL   222A
....................        
....................          if(UP)//Si oprime hacia arriba 
43FC:  BSF    F92.5
43FE:  BTFSS  F80.5
4400:  BRA    444C
....................          {   
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(30, 30, 80, 55, YES, OFF); 
4402:  MOVLW  1E
4404:  MOVLB  6
4406:  MOVWF  x08
4408:  MOVWF  x09
440A:  MOVLW  50
440C:  MOVWF  x0A
440E:  MOVLW  37
4410:  MOVWF  x0B
4412:  MOVLW  01
4414:  MOVWF  x0C
4416:  CLRF   x0D
4418:  MOVLB  0
441A:  CALL   12DE
....................                if(Setpoint>60) 
441E:  MOVLB  5
4420:  MOVF   x70,W
4422:  SUBLW  3C
4424:  BC    443A
....................                { 
....................                   Setpoint=60;delay_ms(100);visual=1; 
4426:  MOVLW  3C
4428:  MOVWF  x70
442A:  MOVLW  64
442C:  MOVWF  xFC
442E:  MOVLB  0
4430:  CALL   0CCE
4434:  MOVLB  5
4436:  BSF    x65.3
....................                } 
....................                else 
4438:  BRA    444A
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
443A:  MOVLW  1E
443C:  MOVWF  xFC
443E:  MOVLB  0
4440:  CALL   0CCE
4444:  MOVLB  5
4446:  INCF   x70,F
4448:  BSF    x65.3
444A:  MOVLB  0
....................                } 
....................              
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
444C:  BSF    F96.0
444E:  BTFSS  F84.0
4450:  BRA    4488
....................          {   
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(30, 30, 80, 55, YES, OFF); 
4452:  MOVLW  1E
4454:  MOVLB  6
4456:  MOVWF  x08
4458:  MOVWF  x09
445A:  MOVLW  50
445C:  MOVWF  x0A
445E:  MOVLW  37
4460:  MOVWF  x0B
4462:  MOVLW  01
4464:  MOVWF  x0C
4466:  CLRF   x0D
4468:  MOVLB  0
446A:  CALL   12DE
....................             if(Setpoint>20) 
446E:  MOVLB  5
4470:  MOVF   x70,W
4472:  SUBLW  14
4474:  BC    4486
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
4476:  MOVLW  1E
4478:  MOVWF  xFC
447A:  MOVLB  0
447C:  CALL   0CCE
4480:  MOVLB  5
4482:  DECF   x70,F
4484:  BSF    x65.3
4486:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
4488:  BSF    F96.1
448A:  BTFSS  F84.1
448C:  BRA    44A0
....................          {   
....................             delay_ms(30);visual=1; 
448E:  MOVLW  1E
4490:  MOVLB  5
4492:  MOVWF  xFC
4494:  MOVLB  0
4496:  CALL   0CCE
449A:  MOVLB  5
449C:  BSF    x65.3
449E:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
44A0:  BSF    F96.2
44A2:  BTFSS  F84.2
44A4:  BRA    44FC
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
44A6:  MOVLW  04
44A8:  MOVLB  5
44AA:  MOVWF  xF6
44AC:  MOVLW  AF
44AE:  MOVWF  xFC
44B0:  MOVLB  0
44B2:  CALL   0CCE
44B6:  MOVLB  5
44B8:  DECFSZ xF6,F
44BA:  BRA    44AC
44BC:  MOVLW  01
44BE:  MOVWF  x6A
44C0:  CLRF   xF7
44C2:  MOVLB  0
44C4:  CALL   0D6E
44C8:  MOVLW  01
44CA:  MOVLB  5
44CC:  MOVWF  x71
44CE:  BSF    x65.3
....................             write_eeprom(8,Setpoint); 
44D0:  MOVLW  08
44D2:  MOVWF  FA9
44D4:  MOVFF  570,FA8
44D8:  BCF    FA6.6
44DA:  BCF    FA6.7
44DC:  BSF    FA6.2
44DE:  MOVF   FF2,W
44E0:  MOVWF  00
44E2:  BCF    FF2.7
44E4:  MOVLB  F
44E6:  MOVLW  55
44E8:  MOVWF  FA7
44EA:  MOVLW  AA
44EC:  MOVWF  FA7
44EE:  BSF    FA6.1
44F0:  BTFSC  FA6.1
44F2:  BRA    44F0
44F4:  BCF    FA6.2
44F6:  MOVF   00,W
44F8:  IORWF  FF2,F
44FA:  MOVLB  0
44FC:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Temporizador 
44FE:  MOVF   x6A,W
4500:  SUBLW  06
4502:  BTFSS  FD8.2
4504:  BRA    47FA
....................       
....................        
....................          if(unidad<1) 
4506:  MOVF   x6B,F
4508:  BNZ   450E
....................          {unidad=4;} 
450A:  MOVLW  04
450C:  MOVWF  x6B
....................           
....................          strcpy(Menus.Letra,"Temporiza"); 
450E:  MOVLW  05
4510:  MOVWF  FEA
4512:  MOVLW  D6
4514:  MOVWF  FE9
4516:  MOVFF  FF2,5F6
451A:  BCF    FF2.7
451C:  MOVLW  00
451E:  MOVLB  0
4520:  CALL   0924
4524:  TBLRD*-
4526:  TBLRD*+
4528:  MOVF   FF5,W
452A:  MOVWF  FEE
452C:  IORLW  00
452E:  BNZ   4526
4530:  MOVLB  5
4532:  BTFSC  xF6.7
4534:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4536:  MOVLW  05
4538:  MOVWF  xF7
453A:  MOVLW  D6
453C:  MOVWF  xF6
453E:  CLRF   xF8
4540:  CLRF   xF9
4542:  MOVLW  01
4544:  MOVWF  xFA
4546:  MOVLW  02
4548:  MOVWF  xFB
454A:  MOVLB  0
454C:  CALL   13A0
....................           
....................          if(unidad==4) 
4550:  MOVLB  5
4552:  MOVF   x6B,W
4554:  SUBLW  04
4556:  BNZ   4576
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
4558:  MOVFF  595,5F7
455C:  MOVLW  14
455E:  MOVWF  xF8
4560:  MOVLW  28
4562:  MOVWF  xF9
4564:  MOVLW  01
4566:  MOVWF  xFA
4568:  MOVLW  02
456A:  MOVWF  xFB
456C:  MOVLB  0
456E:  CALL   23A2
....................          else 
4572:  BRA    458E
4574:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
4576:  MOVFF  595,5F7
457A:  MOVLW  14
457C:  MOVWF  xF8
457E:  MOVLW  28
4580:  MOVWF  xF9
4582:  CLRF   xFA
4584:  MOVLW  02
4586:  MOVWF  xFB
4588:  MOVLB  0
458A:  CALL   23A2
....................           
....................          if(unidad==3) 
458E:  MOVLB  5
4590:  MOVF   x6B,W
4592:  SUBLW  03
4594:  BNZ   45B2
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
4596:  MOVFF  594,5F7
459A:  MOVLW  28
459C:  MOVWF  xF8
459E:  MOVWF  xF9
45A0:  MOVLW  01
45A2:  MOVWF  xFA
45A4:  MOVLW  02
45A6:  MOVWF  xFB
45A8:  MOVLB  0
45AA:  CALL   23A2
....................          else 
45AE:  BRA    45C8
45B0:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
45B2:  MOVFF  594,5F7
45B6:  MOVLW  28
45B8:  MOVWF  xF8
45BA:  MOVWF  xF9
45BC:  CLRF   xFA
45BE:  MOVLW  02
45C0:  MOVWF  xFB
45C2:  MOVLB  0
45C4:  CALL   23A2
....................           
....................          if(unidad==2) 
45C8:  MOVLB  5
45CA:  MOVF   x6B,W
45CC:  SUBLW  02
45CE:  BNZ   45EE
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
45D0:  MOVFF  593,5F7
45D4:  MOVLW  46
45D6:  MOVWF  xF8
45D8:  MOVLW  28
45DA:  MOVWF  xF9
45DC:  MOVLW  01
45DE:  MOVWF  xFA
45E0:  MOVLW  02
45E2:  MOVWF  xFB
45E4:  MOVLB  0
45E6:  CALL   23A2
....................          else 
45EA:  BRA    4606
45EC:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
45EE:  MOVFF  593,5F7
45F2:  MOVLW  46
45F4:  MOVWF  xF8
45F6:  MOVLW  28
45F8:  MOVWF  xF9
45FA:  CLRF   xFA
45FC:  MOVLW  02
45FE:  MOVWF  xFB
4600:  MOVLB  0
4602:  CALL   23A2
....................           
....................          if(unidad==1) 
4606:  MOVLB  5
4608:  DECFSZ x6B,W
460A:  BRA    462A
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
460C:  MOVFF  592,5F7
4610:  MOVLW  5A
4612:  MOVWF  xF8
4614:  MOVLW  28
4616:  MOVWF  xF9
4618:  MOVLW  01
461A:  MOVWF  xFA
461C:  MOVLW  02
461E:  MOVWF  xFB
4620:  MOVLB  0
4622:  CALL   23A2
....................          else 
4626:  BRA    4642
4628:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
462A:  MOVFF  592,5F7
462E:  MOVLW  5A
4630:  MOVWF  xF8
4632:  MOVLW  28
4634:  MOVWF  xF9
4636:  CLRF   xFA
4638:  MOVLW  02
463A:  MOVWF  xFB
463C:  MOVLB  0
463E:  CALL   23A2
....................           
....................          strcpy(Menus.Letra,":"); 
4642:  MOVLW  05
4644:  MOVWF  FEA
4646:  MOVLW  D6
4648:  MOVWF  FE9
464A:  MOVFF  FF2,5F6
464E:  BCF    FF2.7
4650:  MOVLW  00
4652:  CALL   0948
4656:  TBLRD*-
4658:  TBLRD*+
465A:  MOVF   FF5,W
465C:  MOVWF  FEE
465E:  IORLW  00
4660:  BNZ   4658
4662:  MOVLB  5
4664:  BTFSC  xF6.7
4666:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);            
4668:  MOVLW  05
466A:  MOVWF  xF7
466C:  MOVLW  D6
466E:  MOVWF  xF6
4670:  MOVLW  3C
4672:  MOVWF  xF8
4674:  MOVLW  2A
4676:  MOVWF  xF9
4678:  MOVLW  02
467A:  MOVWF  xFA
467C:  MOVWF  xFB
467E:  MOVLB  0
4680:  CALL   13A0
....................        
....................          if(UP)//Si oprime hacia arriba 
4684:  BSF    F92.5
4686:  BTFSS  F80.5
4688:  BRA    46C8
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
468A:  MOVLW  01
468C:  MOVLB  5
468E:  SUBWF  x6B,W
4690:  CLRF   03
4692:  ADDLW  92
4694:  MOVWF  FE9
4696:  MOVLW  05
4698:  ADDWFC 03,W
469A:  MOVWF  FEA
469C:  BTFSC  FEF.7
469E:  BRA    46A6
46A0:  MOVF   FEF,W
46A2:  SUBLW  08
46A4:  BNC   46C6
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
46A6:  MOVLW  1E
46A8:  MOVWF  xFC
46AA:  MOVLB  0
46AC:  CALL   0CCE
46B0:  MOVLW  01
46B2:  MOVLB  5
46B4:  SUBWF  x6B,W
46B6:  CLRF   03
46B8:  ADDLW  92
46BA:  MOVWF  FE9
46BC:  MOVLW  05
46BE:  ADDWFC 03,W
46C0:  MOVWF  FEA
46C2:  INCF   FEF,F
46C4:  BSF    x65.3
46C6:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
46C8:  BSF    F96.0
46CA:  BTFSS  F84.0
46CC:  BRA    470C
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
46CE:  MOVLW  01
46D0:  MOVLB  5
46D2:  SUBWF  x6B,W
46D4:  CLRF   03
46D6:  ADDLW  92
46D8:  MOVWF  FE9
46DA:  MOVLW  05
46DC:  ADDWFC 03,W
46DE:  MOVWF  FEA
46E0:  BTFSC  FEF.7
46E2:  BRA    470A
46E4:  MOVF   FEF,W
46E6:  SUBLW  00
46E8:  BC    470A
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
46EA:  MOVLW  1E
46EC:  MOVWF  xFC
46EE:  MOVLB  0
46F0:  CALL   0CCE
46F4:  MOVLW  01
46F6:  MOVLB  5
46F8:  SUBWF  x6B,W
46FA:  CLRF   03
46FC:  ADDLW  92
46FE:  MOVWF  FE9
4700:  MOVLW  05
4702:  ADDWFC 03,W
4704:  MOVWF  FEA
4706:  DECF   FEF,F
4708:  BSF    x65.3
470A:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
470C:  BSF    F96.1
470E:  BTFSS  F84.1
4710:  BRA    4726
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
4712:  MOVLW  1E
4714:  MOVLB  5
4716:  MOVWF  xFC
4718:  MOVLB  0
471A:  CALL   0CCE
471E:  MOVLB  5
4720:  DECF   x6B,F
4722:  BSF    x65.3
4724:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
4726:  BSF    F96.2
4728:  BTFSS  F84.2
472A:  BRA    47F8
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
472C:  MOVLW  04
472E:  MOVLB  5
4730:  MOVWF  xF6
4732:  MOVLW  AF
4734:  MOVWF  xFC
4736:  MOVLB  0
4738:  CALL   0CCE
473C:  MOVLB  5
473E:  DECFSZ xF6,F
4740:  BRA    4732
4742:  MOVLW  01
4744:  MOVWF  x6A
4746:  CLRF   xF7
4748:  MOVLB  0
474A:  CALL   0D6E
474E:  MOVLW  01
4750:  MOVLB  5
4752:  MOVWF  x71
4754:  BSF    x65.3
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
4756:  CLRF   FA9
4758:  MOVFF  592,FA8
475C:  BCF    FA6.6
475E:  BCF    FA6.7
4760:  BSF    FA6.2
4762:  MOVF   FF2,W
4764:  MOVWF  00
4766:  BCF    FF2.7
4768:  MOVLB  F
476A:  MOVLW  55
476C:  MOVWF  FA7
476E:  MOVLW  AA
4770:  MOVWF  FA7
4772:  BSF    FA6.1
4774:  BTFSC  FA6.1
4776:  BRA    4774
4778:  BCF    FA6.2
477A:  MOVF   00,W
477C:  IORWF  FF2,F
477E:  MOVLW  01
4780:  MOVWF  FA9
4782:  MOVFF  593,FA8
4786:  BCF    FA6.6
4788:  BCF    FA6.7
478A:  BSF    FA6.2
478C:  MOVF   FF2,W
478E:  MOVWF  00
4790:  BCF    FF2.7
4792:  MOVLW  55
4794:  MOVWF  FA7
4796:  MOVLW  AA
4798:  MOVWF  FA7
479A:  BSF    FA6.1
479C:  BTFSC  FA6.1
479E:  BRA    479C
47A0:  BCF    FA6.2
47A2:  MOVF   00,W
47A4:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
47A6:  MOVLW  02
47A8:  MOVWF  FA9
47AA:  MOVFF  594,FA8
47AE:  BCF    FA6.6
47B0:  BCF    FA6.7
47B2:  BSF    FA6.2
47B4:  MOVFF  FF2,00
47B8:  BCF    FF2.7
47BA:  MOVLW  55
47BC:  MOVWF  FA7
47BE:  MOVLW  AA
47C0:  MOVWF  FA7
47C2:  BSF    FA6.1
47C4:  BTFSC  FA6.1
47C6:  BRA    47C4
47C8:  BCF    FA6.2
47CA:  MOVF   00,W
47CC:  IORWF  FF2,F
47CE:  MOVLW  03
47D0:  MOVWF  FA9
47D2:  MOVFF  595,FA8
47D6:  BCF    FA6.6
47D8:  BCF    FA6.7
47DA:  BSF    FA6.2
47DC:  MOVFF  FF2,00
47E0:  BCF    FF2.7
47E2:  MOVLW  55
47E4:  MOVWF  FA7
47E6:  MOVLW  AA
47E8:  MOVWF  FA7
47EA:  BSF    FA6.1
47EC:  BTFSC  FA6.1
47EE:  BRA    47EC
47F0:  BCF    FA6.2
47F2:  MOVF   00,W
47F4:  IORWF  FF2,F
47F6:  MOVLB  0
47F8:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==7){ // Menu de Cambio de Contraseña 
47FA:  MOVF   x6A,W
47FC:  SUBLW  07
47FE:  BTFSS  FD8.2
4800:  BRA    4C9A
....................          
....................       strcpy(Menus.Letra,"Clave"); 
4802:  MOVLW  05
4804:  MOVWF  FEA
4806:  MOVLW  D6
4808:  MOVWF  FE9
480A:  MOVFF  FF2,5F6
480E:  BCF    FF2.7
4810:  MOVLW  00
4812:  MOVLB  0
4814:  CALL   077E
4818:  TBLRD*-
481A:  TBLRD*+
481C:  MOVF   FF5,W
481E:  MOVWF  FEE
4820:  IORLW  00
4822:  BNZ   481A
4824:  MOVLB  5
4826:  BTFSC  xF6.7
4828:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
482A:  MOVLW  05
482C:  MOVWF  xF7
482E:  MOVLW  D6
4830:  MOVWF  xF6
4832:  MOVLW  1E
4834:  MOVWF  xF8
4836:  CLRF   xF9
4838:  MOVLW  01
483A:  MOVWF  xFA
483C:  MOVLW  02
483E:  MOVWF  xFB
4840:  MOVLB  0
4842:  CALL   13A0
....................        
....................       if(unidad==1) 
4846:  MOVLB  5
4848:  DECFSZ x6B,W
484A:  BRA    48A8
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
484C:  MOVFF  596,5F8
4850:  MOVLW  14
4852:  MOVWF  xF9
4854:  MOVLW  1E
4856:  MOVWF  xFA
4858:  MOVLW  01
485A:  MOVWF  xFB
485C:  MOVLB  0
485E:  CALL   15D8
....................          displayContrasena(Contrasena[1],40,30,0); 
4862:  MOVFF  597,5F8
4866:  MOVLW  28
4868:  MOVLB  5
486A:  MOVWF  xF9
486C:  MOVLW  1E
486E:  MOVWF  xFA
4870:  CLRF   xFB
4872:  MOVLB  0
4874:  CALL   15D8
....................          displayContrasena(Contrasena[2],60,30,0); 
4878:  MOVFF  598,5F8
487C:  MOVLW  3C
487E:  MOVLB  5
4880:  MOVWF  xF9
4882:  MOVLW  1E
4884:  MOVWF  xFA
4886:  CLRF   xFB
4888:  MOVLB  0
488A:  CALL   15D8
....................          displayContrasena(Contrasena[3],80,30,0); 
488E:  MOVFF  599,5F8
4892:  MOVLW  50
4894:  MOVLB  5
4896:  MOVWF  xF9
4898:  MOVLW  1E
489A:  MOVWF  xFA
489C:  CLRF   xFB
489E:  MOVLB  0
48A0:  CALL   15D8
....................       } 
....................       else 
48A4:  BRA    49CA
48A6:  MOVLB  5
....................       { 
....................          if(unidad==2) 
48A8:  MOVF   x6B,W
48AA:  SUBLW  02
48AC:  BNZ   490A
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
48AE:  MOVFF  596,5F8
48B2:  MOVLW  14
48B4:  MOVWF  xF9
48B6:  MOVLW  1E
48B8:  MOVWF  xFA
48BA:  CLRF   xFB
48BC:  MOVLB  0
48BE:  CALL   15D8
....................             displayContrasena(Contrasena[1],40,30,1); 
48C2:  MOVFF  597,5F8
48C6:  MOVLW  28
48C8:  MOVLB  5
48CA:  MOVWF  xF9
48CC:  MOVLW  1E
48CE:  MOVWF  xFA
48D0:  MOVLW  01
48D2:  MOVWF  xFB
48D4:  MOVLB  0
48D6:  CALL   15D8
....................             displayContrasena(Contrasena[2],60,30,0); 
48DA:  MOVFF  598,5F8
48DE:  MOVLW  3C
48E0:  MOVLB  5
48E2:  MOVWF  xF9
48E4:  MOVLW  1E
48E6:  MOVWF  xFA
48E8:  CLRF   xFB
48EA:  MOVLB  0
48EC:  CALL   15D8
....................             displayContrasena(Contrasena[3],80,30,0); 
48F0:  MOVFF  599,5F8
48F4:  MOVLW  50
48F6:  MOVLB  5
48F8:  MOVWF  xF9
48FA:  MOVLW  1E
48FC:  MOVWF  xFA
48FE:  CLRF   xFB
4900:  MOVLB  0
4902:  CALL   15D8
....................          } 
....................          else 
4906:  BRA    49CA
4908:  MOVLB  5
....................          { 
....................             if(unidad==3) 
490A:  MOVF   x6B,W
490C:  SUBLW  03
490E:  BNZ   496C
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4910:  MOVFF  596,5F8
4914:  MOVLW  14
4916:  MOVWF  xF9
4918:  MOVLW  1E
491A:  MOVWF  xFA
491C:  CLRF   xFB
491E:  MOVLB  0
4920:  CALL   15D8
....................                displayContrasena(Contrasena[1],40,30,0); 
4924:  MOVFF  597,5F8
4928:  MOVLW  28
492A:  MOVLB  5
492C:  MOVWF  xF9
492E:  MOVLW  1E
4930:  MOVWF  xFA
4932:  CLRF   xFB
4934:  MOVLB  0
4936:  CALL   15D8
....................                displayContrasena(Contrasena[2],60,30,1); 
493A:  MOVFF  598,5F8
493E:  MOVLW  3C
4940:  MOVLB  5
4942:  MOVWF  xF9
4944:  MOVLW  1E
4946:  MOVWF  xFA
4948:  MOVLW  01
494A:  MOVWF  xFB
494C:  MOVLB  0
494E:  CALL   15D8
....................                displayContrasena(Contrasena[3],80,30,0); 
4952:  MOVFF  599,5F8
4956:  MOVLW  50
4958:  MOVLB  5
495A:  MOVWF  xF9
495C:  MOVLW  1E
495E:  MOVWF  xFA
4960:  CLRF   xFB
4962:  MOVLB  0
4964:  CALL   15D8
....................             } 
....................             else 
4968:  BRA    49CA
496A:  MOVLB  5
....................             { 
....................                if(unidad==4) 
496C:  MOVF   x6B,W
496E:  SUBLW  04
4970:  BNZ   49CC
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4972:  MOVFF  596,5F8
4976:  MOVLW  14
4978:  MOVWF  xF9
497A:  MOVLW  1E
497C:  MOVWF  xFA
497E:  CLRF   xFB
4980:  MOVLB  0
4982:  CALL   15D8
....................                   displayContrasena(Contrasena[1],40,30,0); 
4986:  MOVFF  597,5F8
498A:  MOVLW  28
498C:  MOVLB  5
498E:  MOVWF  xF9
4990:  MOVLW  1E
4992:  MOVWF  xFA
4994:  CLRF   xFB
4996:  MOVLB  0
4998:  CALL   15D8
....................                   displayContrasena(Contrasena[2],60,30,0); 
499C:  MOVFF  598,5F8
49A0:  MOVLW  3C
49A2:  MOVLB  5
49A4:  MOVWF  xF9
49A6:  MOVLW  1E
49A8:  MOVWF  xFA
49AA:  CLRF   xFB
49AC:  MOVLB  0
49AE:  CALL   15D8
....................                   displayContrasena(Contrasena[3],80,30,1); 
49B2:  MOVFF  599,5F8
49B6:  MOVLW  50
49B8:  MOVLB  5
49BA:  MOVWF  xF9
49BC:  MOVLW  1E
49BE:  MOVWF  xFA
49C0:  MOVLW  01
49C2:  MOVWF  xFB
49C4:  MOVLB  0
49C6:  CALL   15D8
49CA:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
49CC:  BSF    F92.5
49CE:  BTFSS  F80.5
49D0:  BRA    4A38
....................       { 
....................          if(Flanco == 0) 
49D2:  BTFSC  x65.0
49D4:  BRA    4A36
....................          { 
....................             Flanco = 1;delay_ms(30); 
49D6:  BSF    x65.0
49D8:  MOVLW  1E
49DA:  MOVWF  xFC
49DC:  MOVLB  0
49DE:  CALL   0CCE
....................             for(i=1;i<=4;i++) 
49E2:  MOVLW  01
49E4:  MOVLB  5
49E6:  MOVWF  x6C
49E8:  MOVF   x6C,W
49EA:  SUBLW  04
49EC:  BNC   4A36
....................             { 
....................                if(unidad==i) 
49EE:  MOVF   x6C,W
49F0:  SUBWF  x6B,W
49F2:  BNZ   4A32
....................                { 
....................                   Contrasena[i-1]++; 
49F4:  MOVLW  01
49F6:  SUBWF  x6C,W
49F8:  CLRF   03
49FA:  ADDLW  96
49FC:  MOVWF  FE9
49FE:  MOVLW  05
4A00:  ADDWFC 03,W
4A02:  MOVWF  FEA
4A04:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4A06:  MOVLW  01
4A08:  SUBWF  x6C,W
4A0A:  CLRF   03
4A0C:  ADDLW  96
4A0E:  MOVWF  FE9
4A10:  MOVLW  05
4A12:  ADDWFC 03,W
4A14:  MOVWF  FEA
4A16:  BTFSC  FEF.7
4A18:  BRA    4A32
4A1A:  MOVF   FEF,W
4A1C:  SUBLW  09
4A1E:  BC    4A32
....................                   { 
....................                      Contrasena[i-1]=0; 
4A20:  MOVLW  01
4A22:  SUBWF  x6C,W
4A24:  CLRF   03
4A26:  ADDLW  96
4A28:  MOVWF  FE9
4A2A:  MOVLW  05
4A2C:  ADDWFC 03,W
4A2E:  MOVWF  FEA
4A30:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4A32:  INCF   x6C,F
4A34:  BRA    49E8
....................          } 
....................       } 
....................       else 
4A36:  BRA    4A3A
....................       { 
....................          Flanco = 0; 
4A38:  BCF    x65.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4A3A:  BSF    F96.0
4A3C:  BTFSS  F84.0
4A3E:  BRA    4AA4
....................       { 
....................          if(Flanco2 == 0) 
4A40:  BTFSC  x65.2
4A42:  BRA    4AA2
....................             {Flanco2 = 1;delay_ms(30); 
4A44:  BSF    x65.2
4A46:  MOVLW  1E
4A48:  MOVWF  xFC
4A4A:  MOVLB  0
4A4C:  CALL   0CCE
....................                for(i=1;i<=4;i++) 
4A50:  MOVLW  01
4A52:  MOVLB  5
4A54:  MOVWF  x6C
4A56:  MOVF   x6C,W
4A58:  SUBLW  04
4A5A:  BNC   4AA2
....................                { 
....................                   if(unidad==i) 
4A5C:  MOVF   x6C,W
4A5E:  SUBWF  x6B,W
4A60:  BNZ   4A9E
....................                   {Contrasena[i-1]--;  
4A62:  MOVLW  01
4A64:  SUBWF  x6C,W
4A66:  CLRF   03
4A68:  ADDLW  96
4A6A:  MOVWF  FE9
4A6C:  MOVLW  05
4A6E:  ADDWFC 03,W
4A70:  MOVWF  FEA
4A72:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4A74:  MOVLW  01
4A76:  SUBWF  x6C,W
4A78:  CLRF   03
4A7A:  ADDLW  96
4A7C:  MOVWF  FE9
4A7E:  MOVLW  05
4A80:  ADDWFC 03,W
4A82:  MOVWF  FEA
4A84:  BTFSC  FEF.7
4A86:  BRA    4A8A
4A88:  BRA    4A9E
....................                         {Contrasena[i-1]=9;} 
4A8A:  MOVLW  01
4A8C:  SUBWF  x6C,W
4A8E:  CLRF   03
4A90:  ADDLW  96
4A92:  MOVWF  FE9
4A94:  MOVLW  05
4A96:  ADDWFC 03,W
4A98:  MOVWF  FEA
4A9A:  MOVLW  09
4A9C:  MOVWF  FEF
....................                   } 
....................                }       
4A9E:  INCF   x6C,F
4AA0:  BRA    4A56
....................             }      
....................       } 
....................       else 
4AA2:  BRA    4AA6
....................       { 
....................          Flanco2 = 0; 
4AA4:  BCF    x65.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4AA6:  BSF    F96.1
4AA8:  BTFSS  F84.1
4AAA:  BRA    4ACA
....................       { 
....................          if(Flanco1 == 0) 
4AAC:  BTFSC  x65.1
4AAE:  BRA    4AC8
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4AB0:  BSF    x65.1
4AB2:  MOVLW  02
4AB4:  MOVWF  xF6
4AB6:  MOVLW  96
4AB8:  MOVWF  xFC
4ABA:  MOVLB  0
4ABC:  CALL   0CCE
4AC0:  MOVLB  5
4AC2:  DECFSZ xF6,F
4AC4:  BRA    4AB6
4AC6:  INCF   x6B,F
....................       } 
....................       else 
4AC8:  BRA    4ACC
....................       { 
....................          Flanco1 = 0; 
4ACA:  BCF    x65.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4ACC:  BSF    F96.2
4ACE:  BTFSS  F84.2
4AD0:  BRA    4AF4
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4AD2:  MOVLW  04
4AD4:  MOVWF  xF6
4AD6:  MOVLW  AF
4AD8:  MOVWF  xFC
4ADA:  MOVLB  0
4ADC:  CALL   0CCE
4AE0:  MOVLB  5
4AE2:  DECFSZ xF6,F
4AE4:  BRA    4AD6
4AE6:  MOVLW  01
4AE8:  MOVWF  x6A
4AEA:  CLRF   xF7
4AEC:  MOVLB  0
4AEE:  CALL   0D6E
4AF2:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
4AF4:  MOVF   x6B,W
4AF6:  SUBLW  04
4AF8:  BTFSC  FD8.0
4AFA:  BRA    4C9A
....................       {glcd_fillScreen(OFF); 
4AFC:  CLRF   xF7
4AFE:  MOVLB  0
4B00:  CALL   0D6E
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4B04:  MOVLB  5
4B06:  MOVF   x9A,W
4B08:  SUBWF  x96,W
4B0A:  BNZ   4BDA
4B0C:  MOVF   x9B,W
4B0E:  SUBWF  x97,W
4B10:  BNZ   4BDA
4B12:  MOVF   x9C,W
4B14:  SUBWF  x98,W
4B16:  BNZ   4BDA
4B18:  MOVF   x9D,W
4B1A:  SUBWF  x99,W
4B1C:  BNZ   4BDA
....................          { 
....................             glcd_fillScreen(OFF); 
4B1E:  CLRF   xF7
4B20:  MOVLB  0
4B22:  CALL   0D6E
....................             strcpy(Menus.Letra,"Clave"); 
4B26:  MOVLW  05
4B28:  MOVWF  FEA
4B2A:  MOVLW  D6
4B2C:  MOVWF  FE9
4B2E:  MOVFF  FF2,5F6
4B32:  BCF    FF2.7
4B34:  MOVLW  00
4B36:  CALL   077E
4B3A:  TBLRD*-
4B3C:  TBLRD*+
4B3E:  MOVF   FF5,W
4B40:  MOVWF  FEE
4B42:  IORLW  00
4B44:  BNZ   4B3C
4B46:  MOVLB  5
4B48:  BTFSC  xF6.7
4B4A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4B4C:  MOVLW  05
4B4E:  MOVWF  xF7
4B50:  MOVLW  D6
4B52:  MOVWF  xF6
4B54:  MOVLW  1E
4B56:  MOVWF  xF8
4B58:  CLRF   xF9
4B5A:  CLRF   xFA
4B5C:  MOVLW  02
4B5E:  MOVWF  xFB
4B60:  MOVLB  0
4B62:  CALL   13A0
....................             strcpy(Menus.Letra,"Correcta"); 
4B66:  MOVLW  05
4B68:  MOVWF  FEA
4B6A:  MOVLW  D6
4B6C:  MOVWF  FE9
4B6E:  MOVFF  FF2,5F6
4B72:  BCF    FF2.7
4B74:  MOVLW  00
4B76:  CALL   079E
4B7A:  TBLRD*-
4B7C:  TBLRD*+
4B7E:  MOVF   FF5,W
4B80:  MOVWF  FEE
4B82:  IORLW  00
4B84:  BNZ   4B7C
4B86:  MOVLB  5
4B88:  BTFSC  xF6.7
4B8A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4B8C:  MOVLW  05
4B8E:  MOVWF  xF7
4B90:  MOVLW  D6
4B92:  MOVWF  xF6
4B94:  MOVLW  0F
4B96:  MOVWF  xF8
4B98:  MOVLW  1E
4B9A:  MOVWF  xF9
4B9C:  CLRF   xFA
4B9E:  MOVLW  02
4BA0:  MOVWF  xFB
4BA2:  MOVLB  0
4BA4:  CALL   13A0
....................             Menu=91;glcd_update();delay_ms(1000); 
4BA8:  MOVLW  5B
4BAA:  MOVLB  5
4BAC:  MOVWF  x6A
4BAE:  MOVLB  0
4BB0:  CALL   0DC8
4BB4:  MOVLW  04
4BB6:  MOVLB  5
4BB8:  MOVWF  xF6
4BBA:  MOVLW  FA
4BBC:  MOVWF  xFC
4BBE:  MOVLB  0
4BC0:  CALL   0CCE
4BC4:  MOVLB  5
4BC6:  DECFSZ xF6,F
4BC8:  BRA    4BBA
....................             glcd_fillScreen(OFF);unidad=1; 
4BCA:  CLRF   xF7
4BCC:  MOVLB  0
4BCE:  CALL   0D6E
4BD2:  MOVLW  01
4BD4:  MOVLB  5
4BD6:  MOVWF  x6B
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4BD8:  BRA    4C9A
....................          { 
....................             glcd_fillScreen(OFF); 
4BDA:  CLRF   xF7
4BDC:  MOVLB  0
4BDE:  CALL   0D6E
....................             strcpy(Menus.Letra,"Clave"); 
4BE2:  MOVLW  05
4BE4:  MOVWF  FEA
4BE6:  MOVLW  D6
4BE8:  MOVWF  FE9
4BEA:  MOVFF  FF2,5F6
4BEE:  BCF    FF2.7
4BF0:  MOVLW  00
4BF2:  CALL   077E
4BF6:  TBLRD*-
4BF8:  TBLRD*+
4BFA:  MOVF   FF5,W
4BFC:  MOVWF  FEE
4BFE:  IORLW  00
4C00:  BNZ   4BF8
4C02:  MOVLB  5
4C04:  BTFSC  xF6.7
4C06:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4C08:  MOVLW  05
4C0A:  MOVWF  xF7
4C0C:  MOVLW  D6
4C0E:  MOVWF  xF6
4C10:  MOVLW  1E
4C12:  MOVWF  xF8
4C14:  CLRF   xF9
4C16:  CLRF   xFA
4C18:  MOVLW  02
4C1A:  MOVWF  xFB
4C1C:  MOVLB  0
4C1E:  CALL   13A0
....................             strcpy(Menus.Letra,"Incorrecta"); 
4C22:  MOVLW  05
4C24:  MOVWF  FEA
4C26:  MOVLW  D6
4C28:  MOVWF  FE9
4C2A:  MOVFF  FF2,5F6
4C2E:  BCF    FF2.7
4C30:  MOVLW  00
4C32:  CALL   07C2
4C36:  TBLRD*-
4C38:  TBLRD*+
4C3A:  MOVF   FF5,W
4C3C:  MOVWF  FEE
4C3E:  IORLW  00
4C40:  BNZ   4C38
4C42:  MOVLB  5
4C44:  BTFSC  xF6.7
4C46:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4C48:  MOVLW  05
4C4A:  MOVWF  xF7
4C4C:  MOVLW  D6
4C4E:  MOVWF  xF6
4C50:  CLRF   xF8
4C52:  MOVLW  1E
4C54:  MOVWF  xF9
4C56:  CLRF   xFA
4C58:  MOVLW  02
4C5A:  MOVWF  xFB
4C5C:  MOVLB  0
4C5E:  CALL   13A0
....................             Menu=1;glcd_update();delay_ms(1000); 
4C62:  MOVLW  01
4C64:  MOVLB  5
4C66:  MOVWF  x6A
4C68:  MOVLB  0
4C6A:  CALL   0DC8
4C6E:  MOVLW  04
4C70:  MOVLB  5
4C72:  MOVWF  xF6
4C74:  MOVLW  FA
4C76:  MOVWF  xFC
4C78:  MOVLB  0
4C7A:  CALL   0CCE
4C7E:  MOVLB  5
4C80:  DECFSZ xF6,F
4C82:  BRA    4C74
....................             glcd_fillScreen(OFF);unidad=1; 
4C84:  CLRF   xF7
4C86:  MOVLB  0
4C88:  CALL   0D6E
4C8C:  MOVLW  01
4C8E:  MOVLB  5
4C90:  MOVWF  x6B
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4C92:  CLRF   x96
4C94:  CLRF   x97
4C96:  CLRF   x98
4C98:  CLRF   x99
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4C9A:  MOVF   x6A,W
4C9C:  SUBLW  5B
4C9E:  BTFSS  FD8.2
4CA0:  BRA    5064
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4CA2:  MOVLW  05
4CA4:  MOVWF  FEA
4CA6:  MOVLW  D6
4CA8:  MOVWF  FE9
4CAA:  MOVFF  FF2,5F6
4CAE:  BCF    FF2.7
4CB0:  MOVLW  00
4CB2:  MOVLB  0
4CB4:  CALL   0964
4CB8:  TBLRD*-
4CBA:  TBLRD*+
4CBC:  MOVF   FF5,W
4CBE:  MOVWF  FEE
4CC0:  IORLW  00
4CC2:  BNZ   4CBA
4CC4:  MOVLB  5
4CC6:  BTFSC  xF6.7
4CC8:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4CCA:  MOVLW  05
4CCC:  MOVWF  xF7
4CCE:  MOVLW  D6
4CD0:  MOVWF  xF6
4CD2:  CLRF   xF8
4CD4:  CLRF   xF9
4CD6:  MOVLW  01
4CD8:  MOVWF  xFA
4CDA:  MOVLW  02
4CDC:  MOVWF  xFB
4CDE:  MOVLB  0
4CE0:  CALL   13A0
....................        
....................       if(unidad==1) 
4CE4:  MOVLB  5
4CE6:  DECFSZ x6B,W
4CE8:  BRA    4D46
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4CEA:  MOVFF  59A,5F8
4CEE:  MOVLW  14
4CF0:  MOVWF  xF9
4CF2:  MOVLW  1E
4CF4:  MOVWF  xFA
4CF6:  MOVLW  01
4CF8:  MOVWF  xFB
4CFA:  MOVLB  0
4CFC:  CALL   15D8
....................          displayContrasena(Password[1],40,30,0); 
4D00:  MOVFF  59B,5F8
4D04:  MOVLW  28
4D06:  MOVLB  5
4D08:  MOVWF  xF9
4D0A:  MOVLW  1E
4D0C:  MOVWF  xFA
4D0E:  CLRF   xFB
4D10:  MOVLB  0
4D12:  CALL   15D8
....................          displayContrasena(Password[2],60,30,0); 
4D16:  MOVFF  59C,5F8
4D1A:  MOVLW  3C
4D1C:  MOVLB  5
4D1E:  MOVWF  xF9
4D20:  MOVLW  1E
4D22:  MOVWF  xFA
4D24:  CLRF   xFB
4D26:  MOVLB  0
4D28:  CALL   15D8
....................          displayContrasena(Password[3],80,30,0); 
4D2C:  MOVFF  59D,5F8
4D30:  MOVLW  50
4D32:  MOVLB  5
4D34:  MOVWF  xF9
4D36:  MOVLW  1E
4D38:  MOVWF  xFA
4D3A:  CLRF   xFB
4D3C:  MOVLB  0
4D3E:  CALL   15D8
....................       } 
....................       else 
4D42:  BRA    4E68
4D44:  MOVLB  5
....................       { 
....................          if(unidad==2) 
4D46:  MOVF   x6B,W
4D48:  SUBLW  02
4D4A:  BNZ   4DA8
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4D4C:  MOVFF  59A,5F8
4D50:  MOVLW  14
4D52:  MOVWF  xF9
4D54:  MOVLW  1E
4D56:  MOVWF  xFA
4D58:  CLRF   xFB
4D5A:  MOVLB  0
4D5C:  CALL   15D8
....................             displayContrasena(Password[1],40,30,1); 
4D60:  MOVFF  59B,5F8
4D64:  MOVLW  28
4D66:  MOVLB  5
4D68:  MOVWF  xF9
4D6A:  MOVLW  1E
4D6C:  MOVWF  xFA
4D6E:  MOVLW  01
4D70:  MOVWF  xFB
4D72:  MOVLB  0
4D74:  CALL   15D8
....................             displayContrasena(Password[2],60,30,0); 
4D78:  MOVFF  59C,5F8
4D7C:  MOVLW  3C
4D7E:  MOVLB  5
4D80:  MOVWF  xF9
4D82:  MOVLW  1E
4D84:  MOVWF  xFA
4D86:  CLRF   xFB
4D88:  MOVLB  0
4D8A:  CALL   15D8
....................             displayContrasena(Password[3],80,30,0); 
4D8E:  MOVFF  59D,5F8
4D92:  MOVLW  50
4D94:  MOVLB  5
4D96:  MOVWF  xF9
4D98:  MOVLW  1E
4D9A:  MOVWF  xFA
4D9C:  CLRF   xFB
4D9E:  MOVLB  0
4DA0:  CALL   15D8
....................          } 
....................          else 
4DA4:  BRA    4E68
4DA6:  MOVLB  5
....................          { 
....................             if(unidad==3) 
4DA8:  MOVF   x6B,W
4DAA:  SUBLW  03
4DAC:  BNZ   4E0A
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4DAE:  MOVFF  59A,5F8
4DB2:  MOVLW  14
4DB4:  MOVWF  xF9
4DB6:  MOVLW  1E
4DB8:  MOVWF  xFA
4DBA:  CLRF   xFB
4DBC:  MOVLB  0
4DBE:  CALL   15D8
....................                displayContrasena(Password[1],40,30,0); 
4DC2:  MOVFF  59B,5F8
4DC6:  MOVLW  28
4DC8:  MOVLB  5
4DCA:  MOVWF  xF9
4DCC:  MOVLW  1E
4DCE:  MOVWF  xFA
4DD0:  CLRF   xFB
4DD2:  MOVLB  0
4DD4:  CALL   15D8
....................                displayContrasena(Password[2],60,30,1); 
4DD8:  MOVFF  59C,5F8
4DDC:  MOVLW  3C
4DDE:  MOVLB  5
4DE0:  MOVWF  xF9
4DE2:  MOVLW  1E
4DE4:  MOVWF  xFA
4DE6:  MOVLW  01
4DE8:  MOVWF  xFB
4DEA:  MOVLB  0
4DEC:  CALL   15D8
....................                displayContrasena(Password[3],80,30,0); 
4DF0:  MOVFF  59D,5F8
4DF4:  MOVLW  50
4DF6:  MOVLB  5
4DF8:  MOVWF  xF9
4DFA:  MOVLW  1E
4DFC:  MOVWF  xFA
4DFE:  CLRF   xFB
4E00:  MOVLB  0
4E02:  CALL   15D8
....................             } 
....................             else 
4E06:  BRA    4E68
4E08:  MOVLB  5
....................             { 
....................                if(unidad==4) 
4E0A:  MOVF   x6B,W
4E0C:  SUBLW  04
4E0E:  BNZ   4E6A
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
4E10:  MOVFF  59A,5F8
4E14:  MOVLW  14
4E16:  MOVWF  xF9
4E18:  MOVLW  1E
4E1A:  MOVWF  xFA
4E1C:  CLRF   xFB
4E1E:  MOVLB  0
4E20:  CALL   15D8
....................                   displayContrasena(Password[1],40,30,0); 
4E24:  MOVFF  59B,5F8
4E28:  MOVLW  28
4E2A:  MOVLB  5
4E2C:  MOVWF  xF9
4E2E:  MOVLW  1E
4E30:  MOVWF  xFA
4E32:  CLRF   xFB
4E34:  MOVLB  0
4E36:  CALL   15D8
....................                   displayContrasena(Password[2],60,30,0); 
4E3A:  MOVFF  59C,5F8
4E3E:  MOVLW  3C
4E40:  MOVLB  5
4E42:  MOVWF  xF9
4E44:  MOVLW  1E
4E46:  MOVWF  xFA
4E48:  CLRF   xFB
4E4A:  MOVLB  0
4E4C:  CALL   15D8
....................                   displayContrasena(Password[3],80,30,1); 
4E50:  MOVFF  59D,5F8
4E54:  MOVLW  50
4E56:  MOVLB  5
4E58:  MOVWF  xF9
4E5A:  MOVLW  1E
4E5C:  MOVWF  xFA
4E5E:  MOVLW  01
4E60:  MOVWF  xFB
4E62:  MOVLB  0
4E64:  CALL   15D8
4E68:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4E6A:  BSF    F92.5
4E6C:  BTFSS  F80.5
4E6E:  BRA    4ED6
....................       { 
....................          if(Flanco == 0) 
4E70:  BTFSC  x65.0
4E72:  BRA    4ED4
....................          { 
....................             Flanco = 1;delay_ms(30); 
4E74:  BSF    x65.0
4E76:  MOVLW  1E
4E78:  MOVWF  xFC
4E7A:  MOVLB  0
4E7C:  CALL   0CCE
....................             for(i=1;i<=4;i++) 
4E80:  MOVLW  01
4E82:  MOVLB  5
4E84:  MOVWF  x6C
4E86:  MOVF   x6C,W
4E88:  SUBLW  04
4E8A:  BNC   4ED4
....................             { 
....................                if(unidad==i) 
4E8C:  MOVF   x6C,W
4E8E:  SUBWF  x6B,W
4E90:  BNZ   4ED0
....................                { 
....................                   Password[i-1]++; 
4E92:  MOVLW  01
4E94:  SUBWF  x6C,W
4E96:  CLRF   03
4E98:  ADDLW  9A
4E9A:  MOVWF  FE9
4E9C:  MOVLW  05
4E9E:  ADDWFC 03,W
4EA0:  MOVWF  FEA
4EA2:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
4EA4:  MOVLW  01
4EA6:  SUBWF  x6C,W
4EA8:  CLRF   03
4EAA:  ADDLW  9A
4EAC:  MOVWF  FE9
4EAE:  MOVLW  05
4EB0:  ADDWFC 03,W
4EB2:  MOVWF  FEA
4EB4:  BTFSC  FEF.7
4EB6:  BRA    4ED0
4EB8:  MOVF   FEF,W
4EBA:  SUBLW  09
4EBC:  BC    4ED0
....................                   { 
....................                      Password[i-1]=0; 
4EBE:  MOVLW  01
4EC0:  SUBWF  x6C,W
4EC2:  CLRF   03
4EC4:  ADDLW  9A
4EC6:  MOVWF  FE9
4EC8:  MOVLW  05
4ECA:  ADDWFC 03,W
4ECC:  MOVWF  FEA
4ECE:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4ED0:  INCF   x6C,F
4ED2:  BRA    4E86
....................          } 
....................       } 
....................       else 
4ED4:  BRA    4ED8
....................       { 
....................          Flanco = 0; 
4ED6:  BCF    x65.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4ED8:  BSF    F96.0
4EDA:  BTFSS  F84.0
4EDC:  BRA    4F42
....................       { 
....................          if(Flanco2 == 0) 
4EDE:  BTFSC  x65.2
4EE0:  BRA    4F40
....................             {Flanco2 = 1;delay_ms(30); 
4EE2:  BSF    x65.2
4EE4:  MOVLW  1E
4EE6:  MOVWF  xFC
4EE8:  MOVLB  0
4EEA:  CALL   0CCE
....................                for(i=1;i<=4;i++) 
4EEE:  MOVLW  01
4EF0:  MOVLB  5
4EF2:  MOVWF  x6C
4EF4:  MOVF   x6C,W
4EF6:  SUBLW  04
4EF8:  BNC   4F40
....................                { 
....................                   if(unidad==i) 
4EFA:  MOVF   x6C,W
4EFC:  SUBWF  x6B,W
4EFE:  BNZ   4F3C
....................                   { 
....................                      Password[i-1]--; 
4F00:  MOVLW  01
4F02:  SUBWF  x6C,W
4F04:  CLRF   03
4F06:  ADDLW  9A
4F08:  MOVWF  FE9
4F0A:  MOVLW  05
4F0C:  ADDWFC 03,W
4F0E:  MOVWF  FEA
4F10:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
4F12:  MOVLW  01
4F14:  SUBWF  x6C,W
4F16:  CLRF   03
4F18:  ADDLW  9A
4F1A:  MOVWF  FE9
4F1C:  MOVLW  05
4F1E:  ADDWFC 03,W
4F20:  MOVWF  FEA
4F22:  BTFSC  FEF.7
4F24:  BRA    4F28
4F26:  BRA    4F3C
....................                      { 
....................                         Password[i-1]=9; 
4F28:  MOVLW  01
4F2A:  SUBWF  x6C,W
4F2C:  CLRF   03
4F2E:  ADDLW  9A
4F30:  MOVWF  FE9
4F32:  MOVLW  05
4F34:  ADDWFC 03,W
4F36:  MOVWF  FEA
4F38:  MOVLW  09
4F3A:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
4F3C:  INCF   x6C,F
4F3E:  BRA    4EF4
....................             }      
....................       } 
....................       else 
4F40:  BRA    4F44
....................       { 
....................          Flanco2 = 0; 
4F42:  BCF    x65.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4F44:  BSF    F96.1
4F46:  BTFSS  F84.1
4F48:  BRA    4F68
....................       { 
....................          if(Flanco1 == 0) 
4F4A:  BTFSC  x65.1
4F4C:  BRA    4F66
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4F4E:  BSF    x65.1
4F50:  MOVLW  02
4F52:  MOVWF  xF6
4F54:  MOVLW  96
4F56:  MOVWF  xFC
4F58:  MOVLB  0
4F5A:  CALL   0CCE
4F5E:  MOVLB  5
4F60:  DECFSZ xF6,F
4F62:  BRA    4F54
4F64:  INCF   x6B,F
....................       } 
....................       else 
4F66:  BRA    4F6A
....................       { 
....................          Flanco1 = 0; 
4F68:  BCF    x65.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4F6A:  BSF    F96.2
4F6C:  BTFSS  F84.2
4F6E:  BRA    4F92
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4F70:  MOVLW  04
4F72:  MOVWF  xF6
4F74:  MOVLW  AF
4F76:  MOVWF  xFC
4F78:  MOVLB  0
4F7A:  CALL   0CCE
4F7E:  MOVLB  5
4F80:  DECFSZ xF6,F
4F82:  BRA    4F74
4F84:  MOVLW  01
4F86:  MOVWF  x6A
4F88:  CLRF   xF7
4F8A:  MOVLB  0
4F8C:  CALL   0D6E
4F90:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
4F92:  MOVF   x6B,W
4F94:  SUBLW  04
4F96:  BC    5064
....................       { 
....................          Opcion=1;unidad=1; 
4F98:  MOVLW  01
4F9A:  MOVWF  x71
4F9C:  MOVWF  x6B
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
4F9E:  MOVLW  0A
4FA0:  MOVWF  FA9
4FA2:  MOVFF  59A,FA8
4FA6:  BCF    FA6.6
4FA8:  BCF    FA6.7
4FAA:  BSF    FA6.2
4FAC:  MOVF   FF2,W
4FAE:  MOVWF  00
4FB0:  BCF    FF2.7
4FB2:  MOVLB  F
4FB4:  MOVLW  55
4FB6:  MOVWF  FA7
4FB8:  MOVLW  AA
4FBA:  MOVWF  FA7
4FBC:  BSF    FA6.1
4FBE:  BTFSC  FA6.1
4FC0:  BRA    4FBE
4FC2:  BCF    FA6.2
4FC4:  MOVF   00,W
4FC6:  IORWF  FF2,F
4FC8:  MOVLW  0B
4FCA:  MOVWF  FA9
4FCC:  MOVFF  59B,FA8
4FD0:  BCF    FA6.6
4FD2:  BCF    FA6.7
4FD4:  BSF    FA6.2
4FD6:  MOVF   FF2,W
4FD8:  MOVWF  00
4FDA:  BCF    FF2.7
4FDC:  MOVLW  55
4FDE:  MOVWF  FA7
4FE0:  MOVLW  AA
4FE2:  MOVWF  FA7
4FE4:  BSF    FA6.1
4FE6:  BTFSC  FA6.1
4FE8:  BRA    4FE6
4FEA:  BCF    FA6.2
4FEC:  MOVF   00,W
4FEE:  IORWF  FF2,F
4FF0:  MOVLW  0C
4FF2:  MOVWF  FA9
4FF4:  MOVFF  59C,FA8
4FF8:  BCF    FA6.6
4FFA:  BCF    FA6.7
4FFC:  BSF    FA6.2
4FFE:  MOVF   FF2,W
5000:  MOVWF  00
5002:  BCF    FF2.7
5004:  MOVLW  55
5006:  MOVWF  FA7
5008:  MOVLW  AA
500A:  MOVWF  FA7
500C:  BSF    FA6.1
500E:  BTFSC  FA6.1
5010:  BRA    500E
5012:  BCF    FA6.2
5014:  MOVF   00,W
5016:  IORWF  FF2,F
5018:  MOVLW  0D
501A:  MOVWF  FA9
501C:  MOVFF  59D,FA8
5020:  BCF    FA6.6
5022:  BCF    FA6.7
5024:  BSF    FA6.2
5026:  MOVF   FF2,W
5028:  MOVWF  00
502A:  BCF    FF2.7
502C:  MOVLW  55
502E:  MOVWF  FA7
5030:  MOVLW  AA
5032:  MOVWF  FA7
5034:  BSF    FA6.1
5036:  BTFSC  FA6.1
5038:  BRA    5036
503A:  BCF    FA6.2
503C:  MOVF   00,W
503E:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
5040:  MOVLW  04
5042:  MOVLB  5
5044:  MOVWF  xF6
5046:  MOVLW  FA
5048:  MOVWF  xFC
504A:  MOVLB  0
504C:  CALL   0CCE
5050:  MOVLB  5
5052:  DECFSZ xF6,F
5054:  BRA    5046
5056:  CLRF   xF7
5058:  MOVLB  0
505A:  CALL   0D6E
505E:  MOVLW  01
5060:  MOVLB  5
5062:  MOVWF  x6A
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==20){ //Menu de Funcionamiento 
5064:  MOVF   x6A,W
5066:  SUBLW  14
5068:  BTFSS  FD8.2
506A:  GOTO   5ADE
....................        
....................       // Muestra imagen de fondo en Display GLCD 
....................       glcd_imagen(5); 
506E:  MOVLW  05
5070:  MOVWF  xF6
5072:  MOVLB  0
5074:  GOTO   259E
....................        
....................        
....................       if(Puerta<770 && !TERM && tiempo_esterilizacion<2) 
5078:  MOVLB  5
507A:  MOVF   x81,W
507C:  SUBLW  03
507E:  BTFSS  FD8.0
5080:  BRA    5302
5082:  BNZ   508C
5084:  MOVF   x80,W
5086:  SUBLW  01
5088:  BTFSS  FD8.0
508A:  BRA    5302
508C:  BSF    F92.4
508E:  BTFSC  F80.4
5090:  BRA    5302
5092:  MOVF   x72,W
5094:  SUBLW  01
5096:  BTFSS  FD8.0
5098:  BRA    5302
....................       { 
....................          if(Temperatura>=Setpoint-0.5) 
509A:  CLRF   xFD
509C:  MOVFF  570,5FC
50A0:  MOVLB  0
50A2:  CALL   0CF8
50A6:  BSF    FD8.1
50A8:  MOVFF  03,5FE
50AC:  MOVFF  02,5FD
50B0:  MOVFF  01,5FC
50B4:  MOVFF  00,5FB
50B8:  MOVLB  6
50BA:  CLRF   x02
50BC:  CLRF   x01
50BE:  CLRF   x00
50C0:  MOVLW  7E
50C2:  MOVLB  5
50C4:  MOVWF  xFF
50C6:  MOVLB  0
50C8:  CALL   187E
50CC:  MOVFF  03,5F9
50D0:  MOVFF  02,5F8
50D4:  MOVFF  01,5F7
50D8:  MOVFF  00,5F6
50DC:  MOVFF  5D5,5FD
50E0:  MOVFF  5D4,5FC
50E4:  MOVFF  5D3,5FB
50E8:  MOVFF  5D2,5FA
50EC:  CALL   2654
50F0:  BC    50F4
50F2:  BNZ   50FC
....................          { 
....................             flag_setpoint=1; 
50F4:  MOVLB  5
50F6:  BSF    x66.4
....................             flag_ventilador=1; 
50F8:  MOVLW  01
50FA:  MOVWF  x69
....................          } 
....................           
....................          if(Temperatura<Setpoint-0.8) 
50FC:  MOVLB  5
50FE:  CLRF   xFD
5100:  MOVFF  570,5FC
5104:  MOVLB  0
5106:  CALL   0CF8
510A:  BSF    FD8.1
510C:  MOVFF  03,5FE
5110:  MOVFF  02,5FD
5114:  MOVFF  01,5FC
5118:  MOVFF  00,5FB
511C:  MOVLW  CD
511E:  MOVLB  6
5120:  MOVWF  x02
5122:  MOVLW  CC
5124:  MOVWF  x01
5126:  MOVLW  4C
5128:  MOVWF  x00
512A:  MOVLW  7E
512C:  MOVLB  5
512E:  MOVWF  xFF
5130:  MOVLB  0
5132:  CALL   187E
5136:  MOVFF  5D5,5F9
513A:  MOVFF  5D4,5F8
513E:  MOVFF  5D3,5F7
5142:  MOVFF  5D2,5F6
5146:  MOVFF  03,5FD
514A:  MOVFF  02,5FC
514E:  MOVFF  01,5FB
5152:  MOVFF  00,5FA
5156:  CALL   2654
515A:  BNC   5160
....................          { 
....................             flag_ventilador=0; 
515C:  MOVLB  5
515E:  CLRF   x69
....................          } 
....................           
....................          if(Temperatura<Setpoint-1.2) 
5160:  MOVLB  5
5162:  CLRF   xFD
5164:  MOVFF  570,5FC
5168:  MOVLB  0
516A:  CALL   0CF8
516E:  BSF    FD8.1
5170:  MOVFF  03,5FE
5174:  MOVFF  02,5FD
5178:  MOVFF  01,5FC
517C:  MOVFF  00,5FB
5180:  MOVLW  9A
5182:  MOVLB  6
5184:  MOVWF  x02
5186:  MOVLW  99
5188:  MOVWF  x01
518A:  MOVLW  19
518C:  MOVWF  x00
518E:  MOVLW  7F
5190:  MOVLB  5
5192:  MOVWF  xFF
5194:  MOVLB  0
5196:  CALL   187E
519A:  MOVFF  5D5,5F9
519E:  MOVFF  5D4,5F8
51A2:  MOVFF  5D3,5F7
51A6:  MOVFF  5D2,5F6
51AA:  MOVFF  03,5FD
51AE:  MOVFF  02,5FC
51B2:  MOVFF  01,5FB
51B6:  MOVFF  00,5FA
51BA:  CALL   2654
51BE:  BNC   51C4
....................          { 
....................             flag_setpoint=0; 
51C0:  MOVLB  5
51C2:  BCF    x66.4
....................          } 
....................          if(Temperatura>=Setpoint-5.0) 
51C4:  MOVLB  5
51C6:  CLRF   xFD
51C8:  MOVFF  570,5FC
51CC:  MOVLB  0
51CE:  CALL   0CF8
51D2:  BSF    FD8.1
51D4:  MOVFF  03,5FE
51D8:  MOVFF  02,5FD
51DC:  MOVFF  01,5FC
51E0:  MOVFF  00,5FB
51E4:  MOVLB  6
51E6:  CLRF   x02
51E8:  CLRF   x01
51EA:  MOVLW  20
51EC:  MOVWF  x00
51EE:  MOVLW  81
51F0:  MOVLB  5
51F2:  MOVWF  xFF
51F4:  MOVLB  0
51F6:  CALL   187E
51FA:  MOVFF  03,5F9
51FE:  MOVFF  02,5F8
5202:  MOVFF  01,5F7
5206:  MOVFF  00,5F6
520A:  MOVFF  5D5,5FD
520E:  MOVFF  5D4,5FC
5212:  MOVFF  5D3,5FB
5216:  MOVFF  5D2,5FA
521A:  CALL   2654
521E:  BC    5222
5220:  BNZ   5294
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
5222:  MOVLB  6
5224:  CLRF   x08
5226:  MOVLW  37
5228:  MOVWF  x09
522A:  MOVLW  7F
522C:  MOVWF  x0A
522E:  MOVLW  3F
5230:  MOVWF  x0B
5232:  MOVLW  01
5234:  MOVWF  x0C
5236:  CLRF   x0D
5238:  MOVLB  0
523A:  CALL   12DE
....................             strcpy(Menus.Letra,"Status:Controlando"); 
523E:  MOVLW  05
5240:  MOVWF  FEA
5242:  MOVLW  D6
5244:  MOVWF  FE9
5246:  MOVFF  FF2,5F6
524A:  BCF    FF2.7
524C:  MOVLW  00
524E:  CALL   098A
5252:  TBLRD*-
5254:  TBLRD*+
5256:  MOVF   FF5,W
5258:  MOVWF  FEE
525A:  IORLW  00
525C:  BNZ   5254
525E:  MOVLB  5
5260:  BTFSC  xF6.7
5262:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5264:  MOVLW  05
5266:  MOVWF  xF7
5268:  MOVLW  D6
526A:  MOVWF  xF6
526C:  CLRF   xF8
526E:  MOVLW  37
5270:  MOVWF  xF9
5272:  MOVLW  02
5274:  MOVWF  xFA
5276:  MOVLW  01
5278:  MOVWF  xFB
527A:  MOVLB  0
527C:  CALL   13A0
....................             tiempo_esterilizacion=1; 
5280:  MOVLW  01
5282:  MOVLB  5
5284:  MOVWF  x72
....................             Controla(); 
5286:  MOVLB  0
5288:  CALL   2778
....................             flag_tiempocalentamiento=0; 
528C:  MOVLB  5
528E:  BCF    x66.2
....................          } 
....................          else 
5290:  BRA    5302
5292:  MOVLB  0
....................          { 
....................             flag_tiempocalentamiento=1; 
5294:  MOVLB  5
5296:  BSF    x66.2
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
5298:  MOVLB  6
529A:  CLRF   x08
529C:  MOVLW  37
529E:  MOVWF  x09
52A0:  MOVLW  7F
52A2:  MOVWF  x0A
52A4:  MOVLW  3F
52A6:  MOVWF  x0B
52A8:  MOVLW  01
52AA:  MOVWF  x0C
52AC:  CLRF   x0D
52AE:  MOVLB  0
52B0:  CALL   12DE
....................             strcpy(Menus.Letra,"Status:Calentando"); 
52B4:  MOVLW  05
52B6:  MOVWF  FEA
52B8:  MOVLW  D6
52BA:  MOVWF  FE9
52BC:  MOVFF  FF2,5F6
52C0:  BCF    FF2.7
52C2:  MOVLW  00
52C4:  CALL   09B8
52C8:  TBLRD*-
52CA:  TBLRD*+
52CC:  MOVF   FF5,W
52CE:  MOVWF  FEE
52D0:  IORLW  00
52D2:  BNZ   52CA
52D4:  MOVLB  5
52D6:  BTFSC  xF6.7
52D8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
52DA:  MOVLW  05
52DC:  MOVWF  xF7
52DE:  MOVLW  D6
52E0:  MOVWF  xF6
52E2:  CLRF   xF8
52E4:  MOVLW  37
52E6:  MOVWF  xF9
52E8:  MOVLW  02
52EA:  MOVWF  xFA
52EC:  MOVLW  01
52EE:  MOVWF  xFB
52F0:  MOVLB  0
52F2:  CALL   13A0
....................             tiempo_esterilizacion=0; 
52F6:  MOVLB  5
52F8:  CLRF   x72
....................             Controla(); 
52FA:  MOVLB  0
52FC:  CALL   2778
5300:  MOVLB  5
....................          } 
....................       } 
....................        
....................       /*if(Pausa==1 && Puerta<770 && !TERM) 
....................       { 
....................          flag_tiempocalentamiento=0; 
....................          strcpy(Menus.Letra,"Status:Pausado"); 
....................          displayMenu(Menus.Letra,0,55,2,1); 
....................          tiempo_esterilizacion=0; 
....................          Resistencia_off; 
....................          Resistencia2_off; 
....................          Ventilador_off; 
....................          Tpulso=0.0; 
....................       }*/ 
....................        
....................       if(Puerta>770) 
5302:  MOVF   x81,W
5304:  SUBLW  02
5306:  BC    53A2
5308:  XORLW  FF
530A:  BNZ   5312
530C:  MOVF   x80,W
530E:  SUBLW  02
5310:  BC    53A2
....................       { 
....................          flag_tiempocalentamiento=0; 
5312:  BCF    x66.2
....................          //Ganancia=read_eeprom(20); 
....................          //Ganancia=Setpoint*(Ganancia/Coeficiente); 
....................          Ganancia=1; 
5314:  CLRF   xC5
5316:  CLRF   xC4
5318:  CLRF   xC3
531A:  MOVLW  7F
531C:  MOVWF  xC2
....................          Pausa_ant=Pausa; 
531E:  MOVFF  56D,56E
....................          Pausa=0; 
5322:  CLRF   x6D
....................          //glcd_fillScreen(OFF); 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
5324:  MOVLB  6
5326:  CLRF   x08
5328:  MOVLW  37
532A:  MOVWF  x09
532C:  MOVLW  7F
532E:  MOVWF  x0A
5330:  MOVLW  3F
5332:  MOVWF  x0B
5334:  MOVLW  01
5336:  MOVWF  x0C
5338:  CLRF   x0D
533A:  MOVLB  0
533C:  CALL   12DE
....................          tiempo_esterilizacion=0; 
5340:  MOVLB  5
5342:  CLRF   x72
....................          Resistencia_off; 
5344:  BCF    F8B.0
5346:  BCF    F94.0
....................          Resistencia2_off; 
5348:  BCF    F8B.2
534A:  BCF    F94.2
....................          Ventilador_off; 
534C:  BCF    F8B.1
534E:  BCF    F94.1
....................          Tpulso=0.0; 
5350:  CLRF   xB1
5352:  CLRF   xB0
5354:  CLRF   xAF
5356:  CLRF   xAE
....................          flag_clear2=1; 
5358:  BSF    x65.7
....................          strcpy(Menus.Letra,"Status:Puerta Abierta"); 
535A:  MOVLW  05
535C:  MOVWF  FEA
535E:  MOVLW  D6
5360:  MOVWF  FE9
5362:  MOVFF  FF2,5F6
5366:  BCF    FF2.7
5368:  MOVLW  00
536A:  MOVLB  0
536C:  CALL   09E4
5370:  TBLRD*-
5372:  TBLRD*+
5374:  MOVF   FF5,W
5376:  MOVWF  FEE
5378:  IORLW  00
537A:  BNZ   5372
537C:  MOVLB  5
537E:  BTFSC  xF6.7
5380:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
5382:  MOVLW  05
5384:  MOVWF  xF7
5386:  MOVLW  D6
5388:  MOVWF  xF6
538A:  CLRF   xF8
538C:  MOVLW  37
538E:  MOVWF  xF9
5390:  MOVLW  02
5392:  MOVWF  xFA
5394:  MOVLW  01
5396:  MOVWF  xFB
5398:  MOVLB  0
539A:  CALL   13A0
....................       } 
....................       else 
539E:  BRA    53C8
53A0:  MOVLB  5
....................       { 
....................          if(flag_clear2==1) 
53A2:  BTFSS  x65.7
53A4:  BRA    53C6
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
53A6:  MOVLB  6
53A8:  CLRF   x08
53AA:  MOVLW  37
53AC:  MOVWF  x09
53AE:  MOVLW  7F
53B0:  MOVWF  x0A
53B2:  MOVLW  3F
53B4:  MOVWF  x0B
53B6:  MOVLW  01
53B8:  MOVWF  x0C
53BA:  CLRF   x0D
53BC:  MOVLB  0
53BE:  CALL   12DE
....................             flag_clear2=0; 
53C2:  MOVLB  5
53C4:  BCF    x65.7
53C6:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(TERM) 
53C8:  BSF    F92.4
53CA:  BTFSS  F80.4
53CC:  BRA    5454
....................       { 
....................          flag_tiempocalentamiento=0; 
53CE:  MOVLB  5
53D0:  BCF    x66.2
....................          Pausa_ant=Pausa; 
53D2:  MOVFF  56D,56E
....................          Pausa=0; 
53D6:  CLRF   x6D
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
53D8:  MOVLB  6
53DA:  CLRF   x08
53DC:  MOVLW  37
53DE:  MOVWF  x09
53E0:  MOVLW  7F
53E2:  MOVWF  x0A
53E4:  MOVLW  3F
53E6:  MOVWF  x0B
53E8:  MOVLW  01
53EA:  MOVWF  x0C
53EC:  CLRF   x0D
53EE:  MOVLB  0
53F0:  CALL   12DE
....................          tiempo_esterilizacion=0; 
53F4:  MOVLB  5
53F6:  CLRF   x72
....................          Resistencia_off; 
53F8:  BCF    F8B.0
53FA:  BCF    F94.0
....................          Resistencia2_off; 
53FC:  BCF    F8B.2
53FE:  BCF    F94.2
....................          Ventilador_off; 
5400:  BCF    F8B.1
5402:  BCF    F94.1
....................          Tpulso=0.0; 
5404:  CLRF   xB1
5406:  CLRF   xB0
5408:  CLRF   xAF
540A:  CLRF   xAE
....................          flag_clear3=1; 
540C:  BSF    x66.0
....................          strcpy(Menus.Letra,"Status:Alarma 01"); 
540E:  MOVLW  05
5410:  MOVWF  FEA
5412:  MOVLW  D6
5414:  MOVWF  FE9
5416:  MOVFF  FF2,5F6
541A:  BCF    FF2.7
541C:  MOVLW  00
541E:  MOVLB  0
5420:  CALL   0A14
5424:  TBLRD*-
5426:  TBLRD*+
5428:  MOVF   FF5,W
542A:  MOVWF  FEE
542C:  IORLW  00
542E:  BNZ   5426
5430:  MOVLB  5
5432:  BTFSC  xF6.7
5434:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
5436:  MOVLW  05
5438:  MOVWF  xF7
543A:  MOVLW  D6
543C:  MOVWF  xF6
543E:  CLRF   xF8
5440:  MOVLW  37
5442:  MOVWF  xF9
5444:  MOVLW  02
5446:  MOVWF  xFA
5448:  MOVLW  01
544A:  MOVWF  xFB
544C:  MOVLB  0
544E:  CALL   13A0
....................       } 
....................       else 
5452:  BRA    547C
....................       { 
....................          if(flag_clear3==1) 
5454:  MOVLB  5
5456:  BTFSS  x66.0
5458:  BRA    547A
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
545A:  MOVLB  6
545C:  CLRF   x08
545E:  MOVLW  37
5460:  MOVWF  x09
5462:  MOVLW  7F
5464:  MOVWF  x0A
5466:  MOVLW  3F
5468:  MOVWF  x0B
546A:  MOVLW  01
546C:  MOVWF  x0C
546E:  CLRF   x0D
5470:  MOVLB  0
5472:  CALL   12DE
....................             flag_clear3=0; 
5476:  MOVLB  5
5478:  BCF    x66.0
547A:  MOVLB  0
....................          } 
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
547C:  BSF    F96.1
547E:  BTFSS  F84.1
5480:  BRA    549C
....................       {   
....................          glcd_init(ON);flag_display=!flag_display;delay_ms(100); 
5482:  MOVLW  01
5484:  MOVLB  5
5486:  MOVWF  xF6
5488:  MOVLB  0
548A:  CALL   0E80
548E:  MOVLB  5
5490:  BTG    x66.3
5492:  MOVLW  64
5494:  MOVWF  xFC
5496:  MOVLB  0
5498:  CALL   0CCE
....................       }  
....................          
....................       if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
549C:  MOVLB  5
549E:  BTFSS  x65.4
54A0:  BRA    5962
....................       {                  
....................           
....................          Lectura=0; 
54A2:  BCF    x65.4
....................          Potencia=(100.0/Tciclo)*Tpulso; 
54A4:  CLRF   xFE
54A6:  CLRF   xFD
54A8:  MOVLW  48
54AA:  MOVWF  xFC
54AC:  MOVLW  85
54AE:  MOVWF  xFB
54B0:  MOVFF  5AD,602
54B4:  MOVFF  5AC,601
54B8:  MOVFF  5AB,600
54BC:  MOVFF  5AA,5FF
54C0:  MOVLB  0
54C2:  CALL   1700
54C6:  MOVFF  00,5F6
54CA:  MOVFF  01,5F7
54CE:  MOVFF  02,5F8
54D2:  MOVFF  03,5F9
54D6:  MOVFF  03,616
54DA:  MOVFF  02,615
54DE:  MOVFF  01,614
54E2:  MOVFF  00,613
54E6:  MOVFF  5B1,61A
54EA:  MOVFF  5B0,619
54EE:  MOVFF  5AF,618
54F2:  MOVFF  5AE,617
54F6:  CALL   1E0C
54FA:  MOVFF  03,585
54FE:  MOVFF  02,584
5502:  MOVFF  01,583
5506:  MOVFF  00,582
....................          Temperatura=Leer_Sensor(MediaMovil); 
550A:  MOVFF  562,5F6
550E:  CALL   1B28
5512:  MOVFF  03,5D5
5516:  MOVFF  02,5D4
551A:  MOVFF  01,5D3
551E:  MOVFF  00,5D2
....................          Puerta=sensores(3); 
5522:  MOVLW  03
5524:  MOVLB  5
5526:  MOVWF  xF7
5528:  MOVLB  0
552A:  CALL   16A8
552E:  MOVFF  03,5F9
5532:  MOVFF  02,5F8
5536:  MOVFF  01,5F7
553A:  MOVFF  00,5F6
553E:  CALL   273C
5542:  MOVFF  02,581
5546:  MOVFF  01,580
....................          displayT(Temperatura,15,29,2); 
554A:  MOVFF  5D5,5F9
554E:  MOVFF  5D4,5F8
5552:  MOVFF  5D3,5F7
5556:  MOVFF  5D2,5F6
555A:  MOVLW  0F
555C:  MOVLB  5
555E:  MOVWF  xFA
5560:  MOVLW  1D
5562:  MOVWF  xFB
5564:  MOVLW  02
5566:  MOVWF  xFC
5568:  MOVLB  0
556A:  GOTO   2F18
....................          glcd_circle(74,30,2,NO,ON); 
556E:  MOVLW  4A
5570:  MOVLB  5
5572:  MOVWF  xF6
5574:  MOVLW  1E
5576:  MOVWF  xF7
5578:  MOVLW  02
557A:  MOVWF  xF8
557C:  CLRF   xF9
557E:  MOVLW  01
5580:  MOVWF  xFA
5582:  MOVLB  0
5584:  CALL   1F52
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,75,30,2,2); 
5588:  MOVLW  05
558A:  MOVWF  FEA
558C:  MOVLW  D6
558E:  MOVWF  FE9
5590:  MOVFF  FF2,5F6
5594:  BCF    FF2.7
5596:  MOVLW  00
5598:  CALL   0908
559C:  TBLRD*-
559E:  TBLRD*+
55A0:  MOVF   FF5,W
55A2:  MOVWF  FEE
55A4:  IORLW  00
55A6:  BNZ   559E
55A8:  MOVLB  5
55AA:  BTFSC  xF6.7
55AC:  BSF    FF2.7
55AE:  MOVLW  05
55B0:  MOVWF  xF7
55B2:  MOVLW  D6
55B4:  MOVWF  xF6
55B6:  MOVLW  4B
55B8:  MOVWF  xF8
55BA:  MOVLW  1E
55BC:  MOVWF  xF9
55BE:  MOVLW  02
55C0:  MOVWF  xFA
55C2:  MOVWF  xFB
55C4:  MOVLB  0
55C6:  CALL   13A0
....................           
....................          displayTiempo(Setpoint,30,45,3,1); 
55CA:  MOVFF  570,5F7
55CE:  MOVLW  1E
55D0:  MOVLB  5
55D2:  MOVWF  xF8
55D4:  MOVLW  2D
55D6:  MOVWF  xF9
55D8:  MOVLW  03
55DA:  MOVWF  xFA
55DC:  MOVLW  01
55DE:  MOVWF  xFB
55E0:  MOVLB  0
55E2:  CALL   23A2
....................          glcd_circle(50,47,1,NO,ON); 
55E6:  MOVLW  32
55E8:  MOVLB  5
55EA:  MOVWF  xF6
55EC:  MOVLW  2F
55EE:  MOVWF  xF7
55F0:  MOVLW  01
55F2:  MOVWF  xF8
55F4:  CLRF   xF9
55F6:  MOVWF  xFA
55F8:  MOVLB  0
55FA:  CALL   1F52
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,53,45,2,1); 
55FE:  MOVLW  05
5600:  MOVWF  FEA
5602:  MOVLW  D6
5604:  MOVWF  FE9
5606:  MOVFF  FF2,5F6
560A:  BCF    FF2.7
560C:  MOVLW  00
560E:  CALL   0908
5612:  TBLRD*-
5614:  TBLRD*+
5616:  MOVF   FF5,W
5618:  MOVWF  FEE
561A:  IORLW  00
561C:  BNZ   5614
561E:  MOVLB  5
5620:  BTFSC  xF6.7
5622:  BSF    FF2.7
5624:  MOVLW  05
5626:  MOVWF  xF7
5628:  MOVLW  D6
562A:  MOVWF  xF6
562C:  MOVLW  35
562E:  MOVWF  xF8
5630:  MOVLW  2D
5632:  MOVWF  xF9
5634:  MOVLW  02
5636:  MOVWF  xFA
5638:  MOVLW  01
563A:  MOVWF  xFB
563C:  MOVLB  0
563E:  CALL   13A0
....................          strcpy(Menus.Letra,"Temp:");displayMenu(Menus.Letra,0,45,2,1);  
5642:  MOVLW  05
5644:  MOVWF  FEA
5646:  MOVLW  D6
5648:  MOVWF  FE9
564A:  MOVFF  FF2,5F6
564E:  BCF    FF2.7
5650:  MOVLW  00
5652:  CALL   0A40
5656:  TBLRD*-
5658:  TBLRD*+
565A:  MOVF   FF5,W
565C:  MOVWF  FEE
565E:  IORLW  00
5660:  BNZ   5658
5662:  MOVLB  5
5664:  BTFSC  xF6.7
5666:  BSF    FF2.7
5668:  MOVLW  05
566A:  MOVWF  xF7
566C:  MOVLW  D6
566E:  MOVWF  xF6
5670:  CLRF   xF8
5672:  MOVLW  2D
5674:  MOVWF  xF9
5676:  MOVLW  02
5678:  MOVWF  xFA
567A:  MOVLW  01
567C:  MOVWF  xFB
567E:  MOVLB  0
5680:  CALL   13A0
....................           
....................          displayTiempo(Potencia,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
5684:  MOVFF  585,5F9
5688:  MOVFF  584,5F8
568C:  MOVFF  583,5F7
5690:  MOVFF  582,5F6
5694:  CALL   273C
5698:  MOVFF  01,5F6
569C:  MOVFF  01,5F7
56A0:  MOVLW  61
56A2:  MOVLB  5
56A4:  MOVWF  xF8
56A6:  MOVLW  2A
56A8:  MOVWF  xF9
56AA:  MOVLW  03
56AC:  MOVWF  xFA
56AE:  MOVLW  01
56B0:  MOVWF  xFB
56B2:  MOVLB  0
56B4:  CALL   23A2
56B8:  MOVLW  05
56BA:  MOVWF  FEA
56BC:  MOVLW  D6
56BE:  MOVWF  FE9
56C0:  MOVFF  FF2,5F6
56C4:  BCF    FF2.7
56C6:  MOVLW  00
56C8:  CALL   0A60
56CC:  TBLRD*-
56CE:  TBLRD*+
56D0:  MOVF   FF5,W
56D2:  MOVWF  FEE
56D4:  IORLW  00
56D6:  BNZ   56CE
56D8:  MOVLB  5
56DA:  BTFSC  xF6.7
56DC:  BSF    FF2.7
56DE:  MOVLW  05
56E0:  MOVWF  xF7
56E2:  MOVLW  D6
56E4:  MOVWF  xF6
56E6:  MOVLW  73
56E8:  MOVWF  xF8
56EA:  MOVLW  2A
56EC:  MOVWF  xF9
56EE:  MOVLW  02
56F0:  MOVWF  xFA
56F2:  MOVLW  01
56F4:  MOVWF  xFB
56F6:  MOVLB  0
56F8:  CALL   13A0
....................          //displayTiempo(Tpulsomin*10,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
....................           
....................          if(flag_display==1) 
56FC:  MOVLB  5
56FE:  BTFSS  x66.3
5700:  BRA    573A
....................             displayTiempo(Ganancia,97,13,3,1); 
5702:  MOVFF  5C5,5F9
5706:  MOVFF  5C4,5F8
570A:  MOVFF  5C3,5F7
570E:  MOVFF  5C2,5F6
5712:  MOVLB  0
5714:  CALL   273C
5718:  MOVFF  01,5F6
571C:  MOVFF  01,5F7
5720:  MOVLW  61
5722:  MOVLB  5
5724:  MOVWF  xF8
5726:  MOVLW  0D
5728:  MOVWF  xF9
572A:  MOVLW  03
572C:  MOVWF  xFA
572E:  MOVLW  01
5730:  MOVWF  xFB
5732:  MOVLB  0
5734:  CALL   23A2
....................             //displayTiempo(Gananciamax,97,13,3,1); 
....................          else 
5738:  BRA    5758
....................             glcd_rect(97, 13, 115, 18, YES, OFF); 
573A:  MOVLW  61
573C:  MOVLB  6
573E:  MOVWF  x08
5740:  MOVLW  0D
5742:  MOVWF  x09
5744:  MOVLW  73
5746:  MOVWF  x0A
5748:  MOVLW  12
574A:  MOVWF  x0B
574C:  MOVLW  01
574E:  MOVWF  x0C
5750:  CLRF   x0D
5752:  MOVLB  0
5754:  CALL   12DE
....................           
....................          // Muestra Valor de esterilizacion Programado. 
....................          displayTiempo(Testerilizacion[3],20,2,0,2);displayTiempo(Testerilizacion[2],33,2,0,2); 
5758:  MOVFF  591,5F7
575C:  MOVLW  14
575E:  MOVLB  5
5760:  MOVWF  xF8
5762:  MOVLW  02
5764:  MOVWF  xF9
5766:  CLRF   xFA
5768:  MOVWF  xFB
576A:  MOVLB  0
576C:  CALL   23A2
5770:  MOVFF  590,5F7
5774:  MOVLW  21
5776:  MOVLB  5
5778:  MOVWF  xF8
577A:  MOVLW  02
577C:  MOVWF  xF9
577E:  CLRF   xFA
5780:  MOVWF  xFB
5782:  MOVLB  0
5784:  CALL   23A2
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,46,2,2,2);  
5788:  MOVLW  05
578A:  MOVWF  FEA
578C:  MOVLW  D6
578E:  MOVWF  FE9
5790:  MOVFF  FF2,5F6
5794:  BCF    FF2.7
5796:  MOVLW  00
5798:  CALL   0948
579C:  TBLRD*-
579E:  TBLRD*+
57A0:  MOVF   FF5,W
57A2:  MOVWF  FEE
57A4:  IORLW  00
57A6:  BNZ   579E
57A8:  MOVLB  5
57AA:  BTFSC  xF6.7
57AC:  BSF    FF2.7
57AE:  MOVLW  05
57B0:  MOVWF  xF7
57B2:  MOVLW  D6
57B4:  MOVWF  xF6
57B6:  MOVLW  2E
57B8:  MOVWF  xF8
57BA:  MOVLW  02
57BC:  MOVWF  xF9
57BE:  MOVWF  xFA
57C0:  MOVWF  xFB
57C2:  MOVLB  0
57C4:  CALL   13A0
....................          displayTiempo(Testerilizacion[1],55,2,0,2);displayTiempo(Testerilizacion[0],68,2,0,2); 
57C8:  MOVFF  58F,5F7
57CC:  MOVLW  37
57CE:  MOVLB  5
57D0:  MOVWF  xF8
57D2:  MOVLW  02
57D4:  MOVWF  xF9
57D6:  CLRF   xFA
57D8:  MOVWF  xFB
57DA:  MOVLB  0
57DC:  CALL   23A2
57E0:  MOVFF  58E,5F7
57E4:  MOVLW  44
57E6:  MOVLB  5
57E8:  MOVWF  xF8
57EA:  MOVLW  02
57EC:  MOVWF  xF9
57EE:  CLRF   xFA
57F0:  MOVWF  xFB
57F2:  MOVLB  0
57F4:  CALL   23A2
....................           
....................          // Muestra Valor de esterilizacion actual. 
....................          strcpy(Menus.Letra,"Time:");displayMenu(Menus.Letra,0,18,2,1);  
57F8:  MOVLW  05
57FA:  MOVWF  FEA
57FC:  MOVLW  D6
57FE:  MOVWF  FE9
5800:  MOVFF  FF2,5F6
5804:  BCF    FF2.7
5806:  MOVLW  00
5808:  CALL   0A7C
580C:  TBLRD*-
580E:  TBLRD*+
5810:  MOVF   FF5,W
5812:  MOVWF  FEE
5814:  IORLW  00
5816:  BNZ   580E
5818:  MOVLB  5
581A:  BTFSC  xF6.7
581C:  BSF    FF2.7
581E:  MOVLW  05
5820:  MOVWF  xF7
5822:  MOVLW  D6
5824:  MOVWF  xF6
5826:  CLRF   xF8
5828:  MOVLW  12
582A:  MOVWF  xF9
582C:  MOVLW  02
582E:  MOVWF  xFA
5830:  MOVLW  01
5832:  MOVWF  xFB
5834:  MOVLB  0
5836:  CALL   13A0
....................          displayTiempo(Testerilizacionp[3],30,18,0,1);displayTiempo(Testerilizacionp[2],36,18,0,1); 
583A:  MOVFF  595,5F7
583E:  MOVLW  1E
5840:  MOVLB  5
5842:  MOVWF  xF8
5844:  MOVLW  12
5846:  MOVWF  xF9
5848:  CLRF   xFA
584A:  MOVLW  01
584C:  MOVWF  xFB
584E:  MOVLB  0
5850:  CALL   23A2
5854:  MOVFF  594,5F7
5858:  MOVLW  24
585A:  MOVLB  5
585C:  MOVWF  xF8
585E:  MOVLW  12
5860:  MOVWF  xF9
5862:  CLRF   xFA
5864:  MOVLW  01
5866:  MOVWF  xFB
5868:  MOVLB  0
586A:  CALL   23A2
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,42,18,2,1);  
586E:  MOVLW  05
5870:  MOVWF  FEA
5872:  MOVLW  D6
5874:  MOVWF  FE9
5876:  MOVFF  FF2,5F6
587A:  BCF    FF2.7
587C:  MOVLW  00
587E:  CALL   0948
5882:  TBLRD*-
5884:  TBLRD*+
5886:  MOVF   FF5,W
5888:  MOVWF  FEE
588A:  IORLW  00
588C:  BNZ   5884
588E:  MOVLB  5
5890:  BTFSC  xF6.7
5892:  BSF    FF2.7
5894:  MOVLW  05
5896:  MOVWF  xF7
5898:  MOVLW  D6
589A:  MOVWF  xF6
589C:  MOVLW  2A
589E:  MOVWF  xF8
58A0:  MOVLW  12
58A2:  MOVWF  xF9
58A4:  MOVLW  02
58A6:  MOVWF  xFA
58A8:  MOVLW  01
58AA:  MOVWF  xFB
58AC:  MOVLB  0
58AE:  CALL   13A0
....................          displayTiempo(Testerilizacionp[1],48,18,0,1);displayTiempo(Testerilizacionp[0],54,18,0,1); 
58B2:  MOVFF  593,5F7
58B6:  MOVLW  30
58B8:  MOVLB  5
58BA:  MOVWF  xF8
58BC:  MOVLW  12
58BE:  MOVWF  xF9
58C0:  CLRF   xFA
58C2:  MOVLW  01
58C4:  MOVWF  xFB
58C6:  MOVLB  0
58C8:  CALL   23A2
58CC:  MOVFF  592,5F7
58D0:  MOVLW  36
58D2:  MOVLB  5
58D4:  MOVWF  xF8
58D6:  MOVLW  12
58D8:  MOVWF  xF9
58DA:  CLRF   xFA
58DC:  MOVLW  01
58DE:  MOVWF  xFB
58E0:  MOVLB  0
58E2:  CALL   23A2
....................          strcpy(Menus.Letra,"(H:M)");displayMenu(Menus.Letra,60,18,2,1);  
58E6:  MOVLW  05
58E8:  MOVWF  FEA
58EA:  MOVLW  D6
58EC:  MOVWF  FE9
58EE:  MOVFF  FF2,5F6
58F2:  BCF    FF2.7
58F4:  MOVLW  00
58F6:  CALL   0A9C
58FA:  TBLRD*-
58FC:  TBLRD*+
58FE:  MOVF   FF5,W
5900:  MOVWF  FEE
5902:  IORLW  00
5904:  BNZ   58FC
5906:  MOVLB  5
5908:  BTFSC  xF6.7
590A:  BSF    FF2.7
590C:  MOVLW  05
590E:  MOVWF  xF7
5910:  MOVLW  D6
5912:  MOVWF  xF6
5914:  MOVLW  3C
5916:  MOVWF  xF8
5918:  MOVLW  12
591A:  MOVWF  xF9
591C:  MOVLW  02
591E:  MOVWF  xFA
5920:  MOVLW  01
5922:  MOVWF  xFB
5924:  MOVLB  0
5926:  CALL   13A0
....................           
....................          glcd_rect(0, 0, 89, 27, NO, ON); 
592A:  MOVLB  6
592C:  CLRF   x08
592E:  CLRF   x09
5930:  MOVLW  59
5932:  MOVWF  x0A
5934:  MOVLW  1B
5936:  MOVWF  x0B
5938:  CLRF   x0C
593A:  MOVLW  01
593C:  MOVWF  x0D
593E:  MOVLB  0
5940:  CALL   12DE
....................          glcd_rect(0, 27, 89, 54, NO, ON); 
5944:  MOVLB  6
5946:  CLRF   x08
5948:  MOVLW  1B
594A:  MOVWF  x09
594C:  MOVLW  59
594E:  MOVWF  x0A
5950:  MOVLW  36
5952:  MOVWF  x0B
5954:  CLRF   x0C
5956:  MOVLW  01
5958:  MOVWF  x0D
595A:  MOVLB  0
595C:  CALL   12DE
5960:  MOVLB  5
....................       }  
....................        
....................       // Si cumplio el tiempo de esterilización, Muestre ciclo finalizado y detenga control de temperatura. 
....................       if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1) 
5962:  MOVF   x92,W
5964:  XORLW  80
5966:  MOVWF  00
5968:  MOVF   x8E,W
596A:  XORLW  80
596C:  SUBWF  00,W
596E:  BZ    5972
5970:  BC    5A00
5972:  MOVF   x93,W
5974:  XORLW  80
5976:  MOVWF  00
5978:  MOVF   x8F,W
597A:  XORLW  80
597C:  SUBWF  00,W
597E:  BZ    5982
5980:  BC    5A00
5982:  MOVF   x94,W
5984:  XORLW  80
5986:  MOVWF  00
5988:  MOVF   x90,W
598A:  XORLW  80
598C:  SUBWF  00,W
598E:  BZ    5992
5990:  BC    5A00
5992:  MOVF   x95,W
5994:  XORLW  80
5996:  MOVWF  00
5998:  MOVF   x91,W
599A:  XORLW  80
599C:  SUBWF  00,W
599E:  BZ    59A2
59A0:  BC    5A00
59A2:  DECFSZ x72,W
59A4:  BRA    5A00
....................       { 
....................          if(flag_clear==0) 
59A6:  BTFSC  x65.6
59A8:  BRA    59BA
....................          { 
....................             glcd_fillScreen(OFF); 
59AA:  CLRF   xF7
59AC:  MOVLB  0
59AE:  CALL   0D6E
....................             tiempo_esterilizacion=2; 
59B2:  MOVLW  02
59B4:  MOVLB  5
59B6:  MOVWF  x72
....................             //Pausa=2; 
....................             flag_clear=1; 
59B8:  BSF    x65.6
....................             //Resistencia_off; 
....................             //Resistencia2_off; 
....................             //Ventilador_off; 
....................             //Tpulso=0.0; 
....................          } 
....................          strcpy(Menus.Letra,"Status:Finalizado"); 
59BA:  MOVLW  05
59BC:  MOVWF  FEA
59BE:  MOVLW  D6
59C0:  MOVWF  FE9
59C2:  MOVFF  FF2,5F6
59C6:  BCF    FF2.7
59C8:  MOVLW  00
59CA:  MOVLB  0
59CC:  CALL   0ABC
59D0:  TBLRD*-
59D2:  TBLRD*+
59D4:  MOVF   FF5,W
59D6:  MOVWF  FEE
59D8:  IORLW  00
59DA:  BNZ   59D2
59DC:  MOVLB  5
59DE:  BTFSC  xF6.7
59E0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
59E2:  MOVLW  05
59E4:  MOVWF  xF7
59E6:  MOVLW  D6
59E8:  MOVWF  xF6
59EA:  CLRF   xF8
59EC:  MOVLW  37
59EE:  MOVWF  xF9
59F0:  MOVLW  02
59F2:  MOVWF  xFA
59F4:  MOVLW  01
59F6:  MOVWF  xFB
59F8:  MOVLB  0
59FA:  CALL   13A0
59FE:  MOVLB  5
....................       }  
....................        
....................       // Si ha pasado un tiempo x y no ha llegado al setpoint 
....................       if(tiempocalentamiento>7200 && tiempo_esterilizacion==0) 
5A00:  MOVF   x7D,W
5A02:  SUBLW  1B
5A04:  BC    5A98
5A06:  XORLW  FF
5A08:  BNZ   5A10
5A0A:  MOVF   x7C,W
5A0C:  SUBLW  20
5A0E:  BC    5A98
5A10:  MOVF   x72,F
5A12:  BNZ   5A98
....................       { 
....................          if(flag_clear4==0) 
5A14:  BTFSC  x66.1
5A16:  BRA    5A52
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
5A18:  MOVLB  6
5A1A:  CLRF   x08
5A1C:  MOVLW  37
5A1E:  MOVWF  x09
5A20:  MOVLW  7F
5A22:  MOVWF  x0A
5A24:  MOVLW  3F
5A26:  MOVWF  x0B
5A28:  MOVLW  01
5A2A:  MOVWF  x0C
5A2C:  CLRF   x0D
5A2E:  MOVLB  0
5A30:  CALL   12DE
....................             tiempo_esterilizacion=0; 
5A34:  MOVLB  5
5A36:  CLRF   x72
....................             Pausa=2; 
5A38:  MOVLW  02
5A3A:  MOVWF  x6D
....................             flag_clear4=1; 
5A3C:  BSF    x66.1
....................             Resistencia_off; 
5A3E:  BCF    F8B.0
5A40:  BCF    F94.0
....................             Resistencia2_off; 
5A42:  BCF    F8B.2
5A44:  BCF    F94.2
....................             Ventilador_off; 
5A46:  BCF    F8B.1
5A48:  BCF    F94.1
....................             Tpulso=0.0; 
5A4A:  CLRF   xB1
5A4C:  CLRF   xB0
5A4E:  CLRF   xAF
5A50:  CLRF   xAE
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 02"); 
5A52:  MOVLW  05
5A54:  MOVWF  FEA
5A56:  MOVLW  D6
5A58:  MOVWF  FE9
5A5A:  MOVFF  FF2,5F6
5A5E:  BCF    FF2.7
5A60:  MOVLW  00
5A62:  MOVLB  0
5A64:  CALL   0AE8
5A68:  TBLRD*-
5A6A:  TBLRD*+
5A6C:  MOVF   FF5,W
5A6E:  MOVWF  FEE
5A70:  IORLW  00
5A72:  BNZ   5A6A
5A74:  MOVLB  5
5A76:  BTFSC  xF6.7
5A78:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
5A7A:  MOVLW  05
5A7C:  MOVWF  xF7
5A7E:  MOVLW  D6
5A80:  MOVWF  xF6
5A82:  CLRF   xF8
5A84:  MOVLW  37
5A86:  MOVWF  xF9
5A88:  MOVLW  02
5A8A:  MOVWF  xFA
5A8C:  MOVLW  01
5A8E:  MOVWF  xFB
5A90:  MOVLB  0
5A92:  CALL   13A0
5A96:  MOVLB  5
....................       } 
....................        
....................       if(tinicio>=60) 
5A98:  MOVF   x7B,F
5A9A:  BNZ   5AA2
5A9C:  MOVF   x7A,W
5A9E:  SUBLW  3B
5AA0:  BC    5ADE
....................       { 
....................          tinicio=0; 
5AA2:  CLRF   x7B
5AA4:  CLRF   x7A
....................          Testerilizacion[0]++; 
5AA6:  INCF   x8E,F
....................          if(Testerilizacion[0]>9) 
5AA8:  BTFSC  x8E.7
5AAA:  BRA    5AB6
5AAC:  MOVF   x8E,W
5AAE:  SUBLW  09
5AB0:  BC    5AB6
....................          { 
....................             Testerilizacion[0]=0; 
5AB2:  CLRF   x8E
....................             Testerilizacion[1]++; 
5AB4:  INCF   x8F,F
....................          } 
....................          if(Testerilizacion[1]>5) 
5AB6:  BTFSC  x8F.7
5AB8:  BRA    5AC4
5ABA:  MOVF   x8F,W
5ABC:  SUBLW  05
5ABE:  BC    5AC4
....................          { 
....................             Testerilizacion[1]=0; 
5AC0:  CLRF   x8F
....................             Testerilizacion[2]++; 
5AC2:  INCF   x90,F
....................          } 
....................          if(Testerilizacion[2]>9) 
5AC4:  BTFSC  x90.7
5AC6:  BRA    5AD2
5AC8:  MOVF   x90,W
5ACA:  SUBLW  09
5ACC:  BC    5AD2
....................          { 
....................             Testerilizacion[2]=0; 
5ACE:  CLRF   x90
....................             Testerilizacion[3]++; 
5AD0:  INCF   x91,F
....................          } 
....................          if(Testerilizacion[3]>9) 
5AD2:  BTFSC  x91.7
5AD4:  BRA    5ADE
5AD6:  MOVF   x91,W
5AD8:  SUBLW  09
5ADA:  BC    5ADE
....................          { 
....................             Testerilizacion[3]=0; 
5ADC:  CLRF   x91
....................          } 
....................       } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==30){ //Menu de Retroceso 
5ADE:  MOVF   x6A,W
5AE0:  SUBLW  1E
5AE2:  BTFSS  FD8.2
5AE4:  BRA    5CFA
....................        
....................       strcpy(Menus.Letra,"Regresar"); 
5AE6:  MOVLW  05
5AE8:  MOVWF  FEA
5AEA:  MOVLW  D6
5AEC:  MOVWF  FE9
5AEE:  MOVFF  FF2,5F6
5AF2:  BCF    FF2.7
5AF4:  MOVLW  00
5AF6:  MOVLB  0
5AF8:  CALL   0B14
5AFC:  TBLRD*-
5AFE:  TBLRD*+
5B00:  MOVF   FF5,W
5B02:  MOVWF  FEE
5B04:  IORLW  00
5B06:  BNZ   5AFE
5B08:  MOVLB  5
5B0A:  BTFSC  xF6.7
5B0C:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2); 
5B0E:  MOVLW  05
5B10:  MOVWF  xF7
5B12:  MOVLW  D6
5B14:  MOVWF  xF6
5B16:  CLRF   xF8
5B18:  CLRF   xF9
5B1A:  MOVLW  01
5B1C:  MOVWF  xFA
5B1E:  MOVLW  02
5B20:  MOVWF  xFB
5B22:  MOVLB  0
5B24:  CALL   13A0
....................           
....................       if(Opcion==2) 
5B28:  MOVLB  5
5B2A:  MOVF   x71,W
5B2C:  SUBLW  02
5B2E:  BNZ   5BBA
....................       {strcpy(Menus.Letra,"SI"); 
5B30:  MOVLW  05
5B32:  MOVWF  FEA
5B34:  MOVLW  D6
5B36:  MOVWF  FE9
5B38:  MOVFF  FF2,5F6
5B3C:  BCF    FF2.7
5B3E:  MOVLW  00
5B40:  MOVLB  0
5B42:  CALL   08CC
5B46:  TBLRD*-
5B48:  TBLRD*+
5B4A:  MOVF   FF5,W
5B4C:  MOVWF  FEE
5B4E:  IORLW  00
5B50:  BNZ   5B48
5B52:  MOVLB  5
5B54:  BTFSC  xF6.7
5B56:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,25,1,2); 
5B58:  MOVLW  05
5B5A:  MOVWF  xF7
5B5C:  MOVLW  D6
5B5E:  MOVWF  xF6
5B60:  MOVLW  32
5B62:  MOVWF  xF8
5B64:  MOVLW  19
5B66:  MOVWF  xF9
5B68:  MOVLW  01
5B6A:  MOVWF  xFA
5B6C:  MOVLW  02
5B6E:  MOVWF  xFB
5B70:  MOVLB  0
5B72:  CALL   13A0
....................       strcpy(Menus.Letra,"NO"); 
5B76:  MOVLW  05
5B78:  MOVWF  FEA
5B7A:  MOVLW  D6
5B7C:  MOVWF  FE9
5B7E:  MOVFF  FF2,5F6
5B82:  BCF    FF2.7
5B84:  MOVLW  00
5B86:  CALL   08EA
5B8A:  TBLRD*-
5B8C:  TBLRD*+
5B8E:  MOVF   FF5,W
5B90:  MOVWF  FEE
5B92:  IORLW  00
5B94:  BNZ   5B8C
5B96:  MOVLB  5
5B98:  BTFSC  xF6.7
5B9A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,45,0,2); 
5B9C:  MOVLW  05
5B9E:  MOVWF  xF7
5BA0:  MOVLW  D6
5BA2:  MOVWF  xF6
5BA4:  MOVLW  32
5BA6:  MOVWF  xF8
5BA8:  MOVLW  2D
5BAA:  MOVWF  xF9
5BAC:  CLRF   xFA
5BAE:  MOVLW  02
5BB0:  MOVWF  xFB
5BB2:  MOVLB  0
5BB4:  CALL   13A0
5BB8:  MOVLB  5
....................       } 
....................       if(Opcion==1) 
5BBA:  DECFSZ x71,W
5BBC:  BRA    5C48
....................       {strcpy(Menus.Letra,"SI"); 
5BBE:  MOVLW  05
5BC0:  MOVWF  FEA
5BC2:  MOVLW  D6
5BC4:  MOVWF  FE9
5BC6:  MOVFF  FF2,5F6
5BCA:  BCF    FF2.7
5BCC:  MOVLW  00
5BCE:  MOVLB  0
5BD0:  CALL   08CC
5BD4:  TBLRD*-
5BD6:  TBLRD*+
5BD8:  MOVF   FF5,W
5BDA:  MOVWF  FEE
5BDC:  IORLW  00
5BDE:  BNZ   5BD6
5BE0:  MOVLB  5
5BE2:  BTFSC  xF6.7
5BE4:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,25,0,2); 
5BE6:  MOVLW  05
5BE8:  MOVWF  xF7
5BEA:  MOVLW  D6
5BEC:  MOVWF  xF6
5BEE:  MOVLW  32
5BF0:  MOVWF  xF8
5BF2:  MOVLW  19
5BF4:  MOVWF  xF9
5BF6:  CLRF   xFA
5BF8:  MOVLW  02
5BFA:  MOVWF  xFB
5BFC:  MOVLB  0
5BFE:  CALL   13A0
....................       strcpy(Menus.Letra,"NO"); 
5C02:  MOVLW  05
5C04:  MOVWF  FEA
5C06:  MOVLW  D6
5C08:  MOVWF  FE9
5C0A:  MOVFF  FF2,5F6
5C0E:  BCF    FF2.7
5C10:  MOVLW  00
5C12:  CALL   08EA
5C16:  TBLRD*-
5C18:  TBLRD*+
5C1A:  MOVF   FF5,W
5C1C:  MOVWF  FEE
5C1E:  IORLW  00
5C20:  BNZ   5C18
5C22:  MOVLB  5
5C24:  BTFSC  xF6.7
5C26:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,45,1,2); 
5C28:  MOVLW  05
5C2A:  MOVWF  xF7
5C2C:  MOVLW  D6
5C2E:  MOVWF  xF6
5C30:  MOVLW  32
5C32:  MOVWF  xF8
5C34:  MOVLW  2D
5C36:  MOVWF  xF9
5C38:  MOVLW  01
5C3A:  MOVWF  xFA
5C3C:  MOVLW  02
5C3E:  MOVWF  xFB
5C40:  MOVLB  0
5C42:  CALL   13A0
5C46:  MOVLB  5
....................       }   
....................          
....................       if(UP)//Si oprime hacia arriba 
5C48:  BSF    F92.5
5C4A:  BTFSS  F80.5
5C4C:  BRA    5C58
....................       { 
....................          if(Opcion<2) 
5C4E:  MOVF   x71,W
5C50:  SUBLW  01
5C52:  BNC   5C56
....................          { 
....................             Opcion++; 
5C54:  INCF   x71,F
....................          } 
....................          visual=1; 
5C56:  BSF    x65.3
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5C58:  BSF    F96.0
5C5A:  BTFSS  F84.0
5C5C:  BRA    5C68
....................       {   
....................          if(Opcion>1) 
5C5E:  MOVF   x71,W
5C60:  SUBLW  01
5C62:  BC    5C66
....................          { 
....................             Opcion--; 
5C64:  DECF   x71,F
....................          }   
....................          visual=1; 
5C66:  BSF    x65.3
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5C68:  BSF    F96.1
5C6A:  BTFSS  F84.1
5C6C:  BRA    5CCC
....................       {   
....................          if(Opcion==2) 
5C6E:  MOVF   x71,W
5C70:  SUBLW  02
5C72:  BNZ   5CA4
....................          { 
....................             Menu=1;glcd_fillScreen(OFF);Testerilizacion[0]=0;Testerilizacion[1]=0;Testerilizacion[2]=0;Testerilizacion[3]=0; 
5C74:  MOVLW  01
5C76:  MOVWF  x6A
5C78:  CLRF   xF7
5C7A:  MOVLB  0
5C7C:  CALL   0D6E
5C80:  MOVLB  5
5C82:  CLRF   x8E
5C84:  CLRF   x8F
5C86:  CLRF   x90
5C88:  CLRF   x91
....................             Resistencia_off; 
5C8A:  BCF    F8B.0
5C8C:  BCF    F94.0
....................             Resistencia2_off; 
5C8E:  BCF    F8B.2
5C90:  BCF    F94.2
....................             Ventilador_off; 
5C92:  BCF    F8B.1
5C94:  BCF    F94.1
....................             Tpulso=0.0; 
5C96:  CLRF   xB1
5C98:  CLRF   xB0
5C9A:  CLRF   xAF
5C9C:  CLRF   xAE
....................             Opcion=1; 
5C9E:  MOVLW  01
5CA0:  MOVWF  x71
....................          } 
....................          else 
5CA2:  BRA    5CCC
....................          { 
....................             delay_ms(700);Menu=20;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5CA4:  MOVLW  04
5CA6:  MOVWF  xF6
5CA8:  MOVLW  AF
5CAA:  MOVWF  xFC
5CAC:  MOVLB  0
5CAE:  CALL   0CCE
5CB2:  MOVLB  5
5CB4:  DECFSZ xF6,F
5CB6:  BRA    5CA8
5CB8:  MOVLW  14
5CBA:  MOVWF  x6A
5CBC:  CLRF   xF7
5CBE:  MOVLB  0
5CC0:  CALL   0D6E
5CC4:  MOVLW  01
5CC6:  MOVLB  5
5CC8:  MOVWF  x71
5CCA:  BSF    x65.3
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5CCC:  BSF    F96.2
5CCE:  BTFSS  F84.2
5CD0:  BRA    5CFA
....................       { 
....................          delay_ms(700);Menu=20;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5CD2:  MOVLW  04
5CD4:  MOVWF  xF6
5CD6:  MOVLW  AF
5CD8:  MOVWF  xFC
5CDA:  MOVLB  0
5CDC:  CALL   0CCE
5CE0:  MOVLB  5
5CE2:  DECFSZ xF6,F
5CE4:  BRA    5CD6
5CE6:  MOVLW  14
5CE8:  MOVWF  x6A
5CEA:  CLRF   xF7
5CEC:  MOVLB  0
5CEE:  CALL   0D6E
5CF2:  MOVLW  01
5CF4:  MOVLB  5
5CF6:  MOVWF  x71
5CF8:  BSF    x65.3
....................       } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==100){ //Menu de Configuración de Parametros de Control 
5CFA:  MOVF   x6A,W
5CFC:  SUBLW  64
5CFE:  BTFSS  FD8.2
5D00:  BRA    60E2
....................        
....................       if(Opcion>6) 
5D02:  MOVF   x71,W
5D04:  SUBLW  06
5D06:  BC    5D0C
....................       {Opcion=1;} 
5D08:  MOVLW  01
5D0A:  MOVWF  x71
....................       if(Opcion<1) 
5D0C:  MOVF   x71,F
5D0E:  BNZ   5D14
....................       {Opcion=6;} 
5D10:  MOVLW  06
5D12:  MOVWF  x71
....................        
....................          if(Opcion==1)    
5D14:  DECFSZ x71,W
5D16:  BRA    5D5C
....................             {strcpy(Menus.Letra,"Ganancia"); 
5D18:  MOVLW  05
5D1A:  MOVWF  FEA
5D1C:  MOVLW  D6
5D1E:  MOVWF  FE9
5D20:  MOVFF  FF2,5F6
5D24:  BCF    FF2.7
5D26:  MOVLW  00
5D28:  MOVLB  0
5D2A:  CALL   0B38
5D2E:  TBLRD*-
5D30:  TBLRD*+
5D32:  MOVF   FF5,W
5D34:  MOVWF  FEE
5D36:  IORLW  00
5D38:  BNZ   5D30
5D3A:  MOVLB  5
5D3C:  BTFSC  xF6.7
5D3E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
5D40:  MOVLW  05
5D42:  MOVWF  xF7
5D44:  MOVLW  D6
5D46:  MOVWF  xF6
5D48:  CLRF   xF8
5D4A:  CLRF   xF9
5D4C:  MOVLW  01
5D4E:  MOVWF  xFA
5D50:  MOVWF  xFB
5D52:  MOVLB  0
5D54:  CALL   13A0
....................          else 
5D58:  BRA    5D9C
5D5A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ganancia"); 
5D5C:  MOVLW  05
5D5E:  MOVWF  FEA
5D60:  MOVLW  D6
5D62:  MOVWF  FE9
5D64:  MOVFF  FF2,5F6
5D68:  BCF    FF2.7
5D6A:  MOVLW  00
5D6C:  MOVLB  0
5D6E:  CALL   0B38
5D72:  TBLRD*-
5D74:  TBLRD*+
5D76:  MOVF   FF5,W
5D78:  MOVWF  FEE
5D7A:  IORLW  00
5D7C:  BNZ   5D74
5D7E:  MOVLB  5
5D80:  BTFSC  xF6.7
5D82:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);} 
5D84:  MOVLW  05
5D86:  MOVWF  xF7
5D88:  MOVLW  D6
5D8A:  MOVWF  xF6
5D8C:  CLRF   xF8
5D8E:  CLRF   xF9
5D90:  CLRF   xFA
5D92:  MOVLW  01
5D94:  MOVWF  xFB
5D96:  MOVLB  0
5D98:  CALL   13A0
....................           
....................          if(Opcion==2)    
5D9C:  MOVLB  5
5D9E:  MOVF   x71,W
5DA0:  SUBLW  02
5DA2:  BNZ   5DEA
....................             {strcpy(Menus.Letra,"Tciclo"); 
5DA4:  MOVLW  05
5DA6:  MOVWF  FEA
5DA8:  MOVLW  D6
5DAA:  MOVWF  FE9
5DAC:  MOVFF  FF2,5F6
5DB0:  BCF    FF2.7
5DB2:  MOVLW  00
5DB4:  MOVLB  0
5DB6:  CALL   0B5C
5DBA:  TBLRD*-
5DBC:  TBLRD*+
5DBE:  MOVF   FF5,W
5DC0:  MOVWF  FEE
5DC2:  IORLW  00
5DC4:  BNZ   5DBC
5DC6:  MOVLB  5
5DC8:  BTFSC  xF6.7
5DCA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
5DCC:  MOVLW  05
5DCE:  MOVWF  xF7
5DD0:  MOVLW  D6
5DD2:  MOVWF  xF6
5DD4:  CLRF   xF8
5DD6:  MOVLW  0A
5DD8:  MOVWF  xF9
5DDA:  MOVLW  01
5DDC:  MOVWF  xFA
5DDE:  MOVWF  xFB
5DE0:  MOVLB  0
5DE2:  CALL   13A0
....................          else 
5DE6:  BRA    5E2C
5DE8:  MOVLB  5
....................             {strcpy(Menus.Letra,"Tciclo"); 
5DEA:  MOVLW  05
5DEC:  MOVWF  FEA
5DEE:  MOVLW  D6
5DF0:  MOVWF  FE9
5DF2:  MOVFF  FF2,5F6
5DF6:  BCF    FF2.7
5DF8:  MOVLW  00
5DFA:  MOVLB  0
5DFC:  CALL   0B5C
5E00:  TBLRD*-
5E02:  TBLRD*+
5E04:  MOVF   FF5,W
5E06:  MOVWF  FEE
5E08:  IORLW  00
5E0A:  BNZ   5E02
5E0C:  MOVLB  5
5E0E:  BTFSC  xF6.7
5E10:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
5E12:  MOVLW  05
5E14:  MOVWF  xF7
5E16:  MOVLW  D6
5E18:  MOVWF  xF6
5E1A:  CLRF   xF8
5E1C:  MOVLW  0A
5E1E:  MOVWF  xF9
5E20:  CLRF   xFA
5E22:  MOVLW  01
5E24:  MOVWF  xFB
5E26:  MOVLB  0
5E28:  CALL   13A0
....................              
....................          if(Opcion==3)    
5E2C:  MOVLB  5
5E2E:  MOVF   x71,W
5E30:  SUBLW  03
5E32:  BNZ   5E7A
....................             {strcpy(Menus.Letra,"Ajuste +"); 
5E34:  MOVLW  05
5E36:  MOVWF  FEA
5E38:  MOVLW  D6
5E3A:  MOVWF  FE9
5E3C:  MOVFF  FF2,5F6
5E40:  BCF    FF2.7
5E42:  MOVLW  00
5E44:  MOVLB  0
5E46:  CALL   0B7E
5E4A:  TBLRD*-
5E4C:  TBLRD*+
5E4E:  MOVF   FF5,W
5E50:  MOVWF  FEE
5E52:  IORLW  00
5E54:  BNZ   5E4C
5E56:  MOVLB  5
5E58:  BTFSC  xF6.7
5E5A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
5E5C:  MOVLW  05
5E5E:  MOVWF  xF7
5E60:  MOVLW  D6
5E62:  MOVWF  xF6
5E64:  CLRF   xF8
5E66:  MOVLW  14
5E68:  MOVWF  xF9
5E6A:  MOVLW  01
5E6C:  MOVWF  xFA
5E6E:  MOVWF  xFB
5E70:  MOVLB  0
5E72:  CALL   13A0
....................          else 
5E76:  BRA    5EBC
5E78:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste +"); 
5E7A:  MOVLW  05
5E7C:  MOVWF  FEA
5E7E:  MOVLW  D6
5E80:  MOVWF  FE9
5E82:  MOVFF  FF2,5F6
5E86:  BCF    FF2.7
5E88:  MOVLW  00
5E8A:  MOVLB  0
5E8C:  CALL   0B7E
5E90:  TBLRD*-
5E92:  TBLRD*+
5E94:  MOVF   FF5,W
5E96:  MOVWF  FEE
5E98:  IORLW  00
5E9A:  BNZ   5E92
5E9C:  MOVLB  5
5E9E:  BTFSC  xF6.7
5EA0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);}    
5EA2:  MOVLW  05
5EA4:  MOVWF  xF7
5EA6:  MOVLW  D6
5EA8:  MOVWF  xF6
5EAA:  CLRF   xF8
5EAC:  MOVLW  14
5EAE:  MOVWF  xF9
5EB0:  CLRF   xFA
5EB2:  MOVLW  01
5EB4:  MOVWF  xFB
5EB6:  MOVLB  0
5EB8:  CALL   13A0
....................                          
....................          if(Opcion==4)    
5EBC:  MOVLB  5
5EBE:  MOVF   x71,W
5EC0:  SUBLW  04
5EC2:  BNZ   5F0A
....................             {strcpy(Menus.Letra,"Ajuste -"); 
5EC4:  MOVLW  05
5EC6:  MOVWF  FEA
5EC8:  MOVLW  D6
5ECA:  MOVWF  FE9
5ECC:  MOVFF  FF2,5F6
5ED0:  BCF    FF2.7
5ED2:  MOVLW  00
5ED4:  MOVLB  0
5ED6:  CALL   0BA2
5EDA:  TBLRD*-
5EDC:  TBLRD*+
5EDE:  MOVF   FF5,W
5EE0:  MOVWF  FEE
5EE2:  IORLW  00
5EE4:  BNZ   5EDC
5EE6:  MOVLB  5
5EE8:  BTFSC  xF6.7
5EEA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
5EEC:  MOVLW  05
5EEE:  MOVWF  xF7
5EF0:  MOVLW  D6
5EF2:  MOVWF  xF6
5EF4:  CLRF   xF8
5EF6:  MOVLW  1E
5EF8:  MOVWF  xF9
5EFA:  MOVLW  01
5EFC:  MOVWF  xFA
5EFE:  MOVWF  xFB
5F00:  MOVLB  0
5F02:  CALL   13A0
....................          else 
5F06:  BRA    5F4C
5F08:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste -"); 
5F0A:  MOVLW  05
5F0C:  MOVWF  FEA
5F0E:  MOVLW  D6
5F10:  MOVWF  FE9
5F12:  MOVFF  FF2,5F6
5F16:  BCF    FF2.7
5F18:  MOVLW  00
5F1A:  MOVLB  0
5F1C:  CALL   0BA2
5F20:  TBLRD*-
5F22:  TBLRD*+
5F24:  MOVF   FF5,W
5F26:  MOVWF  FEE
5F28:  IORLW  00
5F2A:  BNZ   5F22
5F2C:  MOVLB  5
5F2E:  BTFSC  xF6.7
5F30:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);}      
5F32:  MOVLW  05
5F34:  MOVWF  xF7
5F36:  MOVLW  D6
5F38:  MOVWF  xF6
5F3A:  CLRF   xF8
5F3C:  MOVLW  1E
5F3E:  MOVWF  xF9
5F40:  CLRF   xFA
5F42:  MOVLW  01
5F44:  MOVWF  xFB
5F46:  MOVLB  0
5F48:  CALL   13A0
....................              
....................          if(Opcion==5)    
5F4C:  MOVLB  5
5F4E:  MOVF   x71,W
5F50:  SUBLW  05
5F52:  BNZ   5F9A
....................             {strcpy(Menus.Letra,"Media Movil"); 
5F54:  MOVLW  05
5F56:  MOVWF  FEA
5F58:  MOVLW  D6
5F5A:  MOVWF  FE9
5F5C:  MOVFF  FF2,5F6
5F60:  BCF    FF2.7
5F62:  MOVLW  00
5F64:  MOVLB  0
5F66:  CALL   0BC6
5F6A:  TBLRD*-
5F6C:  TBLRD*+
5F6E:  MOVF   FF5,W
5F70:  MOVWF  FEE
5F72:  IORLW  00
5F74:  BNZ   5F6C
5F76:  MOVLB  5
5F78:  BTFSC  xF6.7
5F7A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
5F7C:  MOVLW  05
5F7E:  MOVWF  xF7
5F80:  MOVLW  D6
5F82:  MOVWF  xF6
5F84:  CLRF   xF8
5F86:  MOVLW  28
5F88:  MOVWF  xF9
5F8A:  MOVLW  01
5F8C:  MOVWF  xFA
5F8E:  MOVWF  xFB
5F90:  MOVLB  0
5F92:  CALL   13A0
....................          else 
5F96:  BRA    5FDC
5F98:  MOVLB  5
....................             {strcpy(Menus.Letra,"Media Movil"); 
5F9A:  MOVLW  05
5F9C:  MOVWF  FEA
5F9E:  MOVLW  D6
5FA0:  MOVWF  FE9
5FA2:  MOVFF  FF2,5F6
5FA6:  BCF    FF2.7
5FA8:  MOVLW  00
5FAA:  MOVLB  0
5FAC:  CALL   0BC6
5FB0:  TBLRD*-
5FB2:  TBLRD*+
5FB4:  MOVF   FF5,W
5FB6:  MOVWF  FEE
5FB8:  IORLW  00
5FBA:  BNZ   5FB2
5FBC:  MOVLB  5
5FBE:  BTFSC  xF6.7
5FC0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}      
5FC2:  MOVLW  05
5FC4:  MOVWF  xF7
5FC6:  MOVLW  D6
5FC8:  MOVWF  xF6
5FCA:  CLRF   xF8
5FCC:  MOVLW  28
5FCE:  MOVWF  xF9
5FD0:  CLRF   xFA
5FD2:  MOVLW  01
5FD4:  MOVWF  xFB
5FD6:  MOVLB  0
5FD8:  CALL   13A0
....................              
....................          if(Opcion==6)    
5FDC:  MOVLB  5
5FDE:  MOVF   x71,W
5FE0:  SUBLW  06
5FE2:  BNZ   602A
....................             {strcpy(Menus.Letra,"Coeficiente"); 
5FE4:  MOVLW  05
5FE6:  MOVWF  FEA
5FE8:  MOVLW  D6
5FEA:  MOVWF  FE9
5FEC:  MOVFF  FF2,5F6
5FF0:  BCF    FF2.7
5FF2:  MOVLW  00
5FF4:  MOVLB  0
5FF6:  CALL   0BEC
5FFA:  TBLRD*-
5FFC:  TBLRD*+
5FFE:  MOVF   FF5,W
6000:  MOVWF  FEE
6002:  IORLW  00
6004:  BNZ   5FFC
6006:  MOVLB  5
6008:  BTFSC  xF6.7
600A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
600C:  MOVLW  05
600E:  MOVWF  xF7
6010:  MOVLW  D6
6012:  MOVWF  xF6
6014:  CLRF   xF8
6016:  MOVLW  32
6018:  MOVWF  xF9
601A:  MOVLW  01
601C:  MOVWF  xFA
601E:  MOVWF  xFB
6020:  MOVLB  0
6022:  CALL   13A0
....................          else 
6026:  BRA    606C
6028:  MOVLB  5
....................             {strcpy(Menus.Letra,"Coeficiente"); 
602A:  MOVLW  05
602C:  MOVWF  FEA
602E:  MOVLW  D6
6030:  MOVWF  FE9
6032:  MOVFF  FF2,5F6
6036:  BCF    FF2.7
6038:  MOVLW  00
603A:  MOVLB  0
603C:  CALL   0BEC
6040:  TBLRD*-
6042:  TBLRD*+
6044:  MOVF   FF5,W
6046:  MOVWF  FEE
6048:  IORLW  00
604A:  BNZ   6042
604C:  MOVLB  5
604E:  BTFSC  xF6.7
6050:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}         
6052:  MOVLW  05
6054:  MOVWF  xF7
6056:  MOVLW  D6
6058:  MOVWF  xF6
605A:  CLRF   xF8
605C:  MOVLW  32
605E:  MOVWF  xF9
6060:  CLRF   xFA
6062:  MOVLW  01
6064:  MOVWF  xFB
6066:  MOVLB  0
6068:  CALL   13A0
....................        
....................       if(UP)//Si oprime hacia arriba 
606C:  BSF    F92.5
606E:  BTFSS  F80.5
6070:  BRA    608C
....................          {  if(Flanco == 0)  
6072:  MOVLB  5
6074:  BTFSC  x65.0
6076:  BRA    608A
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
6078:  BSF    x65.0
607A:  MOVLW  1E
607C:  MOVWF  xFC
607E:  MOVLB  0
6080:  CALL   0CCE
6084:  MOVLB  5
6086:  DECF   x71,F
6088:  BSF    x65.3
....................                } 
....................          } 
....................             else 
608A:  BRA    6090
....................                {Flanco = 0;} 
608C:  MOVLB  5
608E:  BCF    x65.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
6090:  BSF    F96.0
6092:  BTFSS  F84.0
6094:  BRA    60AE
....................          {  if(Flanco2 == 0)  
6096:  BTFSC  x65.2
6098:  BRA    60AC
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
609A:  BSF    x65.2
609C:  MOVLW  1E
609E:  MOVWF  xFC
60A0:  MOVLB  0
60A2:  CALL   0CCE
60A6:  MOVLB  5
60A8:  INCF   x71,F
60AA:  BSF    x65.3
....................                }      
....................          } 
....................             else 
60AC:  BRA    60B0
....................                {Flanco2 = 0;}   
60AE:  BCF    x65.2
....................                 
....................        if(RIGHT)//Si oprime SET 
60B0:  BSF    F96.1
60B2:  BTFSS  F84.1
60B4:  BRA    60E0
....................          {  if(Flanco1 == 0)  
60B6:  BTFSC  x65.1
60B8:  BRA    60DE
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
60BA:  BSF    x65.1
60BC:  MOVLW  1E
60BE:  MOVWF  xFC
60C0:  MOVLB  0
60C2:  CALL   0CCE
60C6:  MOVLW  64
60C8:  MOVLB  5
60CA:  ADDWF  x71,W
60CC:  MOVWF  x6A
60CE:  MOVLW  01
60D0:  MOVWF  x71
60D2:  CLRF   xF7
60D4:  MOVLB  0
60D6:  CALL   0D6E
60DA:  MOVLB  5
60DC:  BSF    x65.3
....................                } 
....................          } 
....................             else 
60DE:  BRA    60E2
....................                {Flanco1 = 0;}   
60E0:  BCF    x65.1
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==101){ // Menu de Ajuste de Ganancia 
60E2:  MOVF   x6A,W
60E4:  SUBLW  65
60E6:  BTFSS  FD8.2
60E8:  BRA    632C
....................        
....................       if(Ganancia>40) 
60EA:  CLRF   xF9
60EC:  CLRF   xF8
60EE:  MOVLW  20
60F0:  MOVWF  xF7
60F2:  MOVLW  84
60F4:  MOVWF  xF6
60F6:  MOVFF  5C5,5FD
60FA:  MOVFF  5C4,5FC
60FE:  MOVFF  5C3,5FB
6102:  MOVFF  5C2,5FA
6106:  MOVLB  0
6108:  CALL   2654
610C:  BNC   611A
....................       { 
....................          Ganancia=1; 
610E:  MOVLB  5
6110:  CLRF   xC5
6112:  CLRF   xC4
6114:  CLRF   xC3
6116:  MOVLW  7F
6118:  MOVWF  xC2
....................       } 
....................        
....................       if(visual==1) 
611A:  MOVLB  5
611C:  BTFSS  x65.3
611E:  BRA    619C
....................       { 
....................          glcd_fillScreen(OFF); 
6120:  CLRF   xF7
6122:  MOVLB  0
6124:  CALL   0D6E
....................          strcpy(Menus.Letra,"Ganancia"); 
6128:  MOVLW  05
612A:  MOVWF  FEA
612C:  MOVLW  D6
612E:  MOVWF  FE9
6130:  MOVFF  FF2,5F6
6134:  BCF    FF2.7
6136:  MOVLW  00
6138:  CALL   0B38
613C:  TBLRD*-
613E:  TBLRD*+
6140:  MOVF   FF5,W
6142:  MOVWF  FEE
6144:  IORLW  00
6146:  BNZ   613E
6148:  MOVLB  5
614A:  BTFSC  xF6.7
614C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
614E:  MOVLW  05
6150:  MOVWF  xF7
6152:  MOVLW  D6
6154:  MOVWF  xF6
6156:  CLRF   xF8
6158:  CLRF   xF9
615A:  MOVLW  01
615C:  MOVWF  xFA
615E:  MOVLW  02
6160:  MOVWF  xFB
6162:  MOVLB  0
6164:  CALL   13A0
....................           
....................          displayTemperatura(Ganancia,30,30,0,3); 
6168:  MOVFF  5C5,5F9
616C:  MOVFF  5C4,5F8
6170:  MOVFF  5C3,5F7
6174:  MOVFF  5C2,5F6
6178:  CALL   273C
617C:  MOVFF  01,5F6
6180:  MOVFF  01,5F7
6184:  MOVLW  1E
6186:  MOVLB  5
6188:  MOVWF  xF8
618A:  MOVWF  xF9
618C:  CLRF   xFA
618E:  MOVLW  03
6190:  MOVWF  xFB
6192:  MOVLB  0
6194:  CALL   222A
....................           
....................          visual=0; 
6198:  MOVLB  5
619A:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
619C:  BSF    F92.5
619E:  BTFSS  F80.5
61A0:  BRA    622C
....................          {   
....................             if(Ganancia>40) 
61A2:  CLRF   xF9
61A4:  CLRF   xF8
61A6:  MOVLW  20
61A8:  MOVWF  xF7
61AA:  MOVLW  84
61AC:  MOVWF  xF6
61AE:  MOVFF  5C5,5FD
61B2:  MOVFF  5C4,5FC
61B6:  MOVFF  5C3,5FB
61BA:  MOVFF  5C2,5FA
61BE:  MOVLB  0
61C0:  CALL   2654
61C4:  BNC   61E6
....................             { 
....................                Ganancia=40;delay_ms(100);visual=1; 
61C6:  MOVLB  5
61C8:  CLRF   xC5
61CA:  CLRF   xC4
61CC:  MOVLW  20
61CE:  MOVWF  xC3
61D0:  MOVLW  84
61D2:  MOVWF  xC2
61D4:  MOVLW  64
61D6:  MOVWF  xFC
61D8:  MOVLB  0
61DA:  CALL   0CCE
61DE:  MOVLB  5
61E0:  BSF    x65.3
....................             } 
....................             else 
61E2:  BRA    622C
61E4:  MOVLB  0
....................             { 
....................                delay_ms(30);Ganancia+=1.0;visual=1; 
61E6:  MOVLW  1E
61E8:  MOVLB  5
61EA:  MOVWF  xFC
61EC:  MOVLB  0
61EE:  CALL   0CCE
61F2:  BCF    FD8.1
61F4:  MOVFF  5C5,5FE
61F8:  MOVFF  5C4,5FD
61FC:  MOVFF  5C3,5FC
6200:  MOVFF  5C2,5FB
6204:  MOVLB  6
6206:  CLRF   x02
6208:  CLRF   x01
620A:  CLRF   x00
620C:  MOVLW  7F
620E:  MOVLB  5
6210:  MOVWF  xFF
6212:  MOVLB  0
6214:  CALL   187E
6218:  MOVFF  03,5C5
621C:  MOVFF  02,5C4
6220:  MOVFF  01,5C3
6224:  MOVFF  00,5C2
6228:  MOVLB  5
622A:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
622C:  BSF    F96.0
622E:  BTFSS  F84.0
6230:  BRA    629A
....................          {   
....................             if(Ganancia>1) 
6232:  CLRF   xF9
6234:  CLRF   xF8
6236:  CLRF   xF7
6238:  MOVLW  7F
623A:  MOVWF  xF6
623C:  MOVFF  5C5,5FD
6240:  MOVFF  5C4,5FC
6244:  MOVFF  5C3,5FB
6248:  MOVFF  5C2,5FA
624C:  MOVLB  0
624E:  CALL   2654
6252:  BNC   629C
....................             { 
....................                delay_ms(30);Ganancia-=1.0;visual=1;      
6254:  MOVLW  1E
6256:  MOVLB  5
6258:  MOVWF  xFC
625A:  MOVLB  0
625C:  CALL   0CCE
6260:  BSF    FD8.1
6262:  MOVFF  5C5,5FE
6266:  MOVFF  5C4,5FD
626A:  MOVFF  5C3,5FC
626E:  MOVFF  5C2,5FB
6272:  MOVLB  6
6274:  CLRF   x02
6276:  CLRF   x01
6278:  CLRF   x00
627A:  MOVLW  7F
627C:  MOVLB  5
627E:  MOVWF  xFF
6280:  MOVLB  0
6282:  CALL   187E
6286:  MOVFF  03,5C5
628A:  MOVFF  02,5C4
628E:  MOVFF  01,5C3
6292:  MOVFF  00,5C2
6296:  MOVLB  5
6298:  BSF    x65.3
629A:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
629C:  BSF    F96.1
629E:  BTFSS  F84.1
62A0:  BRA    62B4
....................          {   
....................             delay_ms(30);visual=1; 
62A2:  MOVLW  1E
62A4:  MOVLB  5
62A6:  MOVWF  xFC
62A8:  MOVLB  0
62AA:  CALL   0CCE
62AE:  MOVLB  5
62B0:  BSF    x65.3
62B2:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
62B4:  BSF    F96.2
62B6:  BTFSS  F84.2
62B8:  BRA    632A
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
62BA:  MOVLW  04
62BC:  MOVLB  5
62BE:  MOVWF  xF6
62C0:  MOVLW  AF
62C2:  MOVWF  xFC
62C4:  MOVLB  0
62C6:  CALL   0CCE
62CA:  MOVLB  5
62CC:  DECFSZ xF6,F
62CE:  BRA    62C0
62D0:  MOVLW  64
62D2:  MOVWF  x6A
62D4:  CLRF   xF7
62D6:  MOVLB  0
62D8:  CALL   0D6E
62DC:  MOVLW  01
62DE:  MOVLB  5
62E0:  MOVWF  x71
62E2:  BSF    x65.3
....................             write_eeprom(20,(int8)Ganancia); 
62E4:  MOVFF  5C5,5F9
62E8:  MOVFF  5C4,5F8
62EC:  MOVFF  5C3,5F7
62F0:  MOVFF  5C2,5F6
62F4:  MOVLB  0
62F6:  CALL   273C
62FA:  MOVFF  01,5F6
62FE:  MOVLW  14
6300:  MOVWF  FA9
6302:  MOVFF  5F6,FA8
6306:  BCF    FA6.6
6308:  BCF    FA6.7
630A:  BSF    FA6.2
630C:  MOVF   FF2,W
630E:  MOVWF  00
6310:  BCF    FF2.7
6312:  MOVLB  F
6314:  MOVLW  55
6316:  MOVWF  FA7
6318:  MOVLW  AA
631A:  MOVWF  FA7
631C:  BSF    FA6.1
631E:  BTFSC  FA6.1
6320:  BRA    631E
6322:  BCF    FA6.2
6324:  MOVF   00,W
6326:  IORWF  FF2,F
6328:  MOVLB  0
632A:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==102){ // Menu de Ajuste de Ganancia2 
632C:  MOVF   x6A,W
632E:  SUBLW  66
6330:  BTFSS  FD8.2
6332:  BRA    6578
....................        
....................       if(Tciclo>40) 
6334:  CLRF   xF9
6336:  CLRF   xF8
6338:  MOVLW  20
633A:  MOVWF  xF7
633C:  MOVLW  84
633E:  MOVWF  xF6
6340:  MOVFF  5AD,5FD
6344:  MOVFF  5AC,5FC
6348:  MOVFF  5AB,5FB
634C:  MOVFF  5AA,5FA
6350:  MOVLB  0
6352:  CALL   2654
6356:  BNC   6366
....................       { 
....................          Tciclo=40; 
6358:  MOVLB  5
635A:  CLRF   xAD
635C:  CLRF   xAC
635E:  MOVLW  20
6360:  MOVWF  xAB
6362:  MOVLW  84
6364:  MOVWF  xAA
....................       } 
....................        
....................       if(visual==1) 
6366:  MOVLB  5
6368:  BTFSS  x65.3
636A:  BRA    63E8
....................       { 
....................          glcd_fillScreen(OFF); 
636C:  CLRF   xF7
636E:  MOVLB  0
6370:  CALL   0D6E
....................          strcpy(Menus.Letra,"Tciclo"); 
6374:  MOVLW  05
6376:  MOVWF  FEA
6378:  MOVLW  D6
637A:  MOVWF  FE9
637C:  MOVFF  FF2,5F6
6380:  BCF    FF2.7
6382:  MOVLW  00
6384:  CALL   0B5C
6388:  TBLRD*-
638A:  TBLRD*+
638C:  MOVF   FF5,W
638E:  MOVWF  FEE
6390:  IORLW  00
6392:  BNZ   638A
6394:  MOVLB  5
6396:  BTFSC  xF6.7
6398:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
639A:  MOVLW  05
639C:  MOVWF  xF7
639E:  MOVLW  D6
63A0:  MOVWF  xF6
63A2:  CLRF   xF8
63A4:  CLRF   xF9
63A6:  MOVLW  01
63A8:  MOVWF  xFA
63AA:  MOVLW  02
63AC:  MOVWF  xFB
63AE:  MOVLB  0
63B0:  CALL   13A0
....................           
....................          displayTemperatura(Tciclo,30,30,0,3); 
63B4:  MOVFF  5AD,5F9
63B8:  MOVFF  5AC,5F8
63BC:  MOVFF  5AB,5F7
63C0:  MOVFF  5AA,5F6
63C4:  CALL   273C
63C8:  MOVFF  01,5F6
63CC:  MOVFF  01,5F7
63D0:  MOVLW  1E
63D2:  MOVLB  5
63D4:  MOVWF  xF8
63D6:  MOVWF  xF9
63D8:  CLRF   xFA
63DA:  MOVLW  03
63DC:  MOVWF  xFB
63DE:  MOVLB  0
63E0:  CALL   222A
....................           
....................          visual=0; 
63E4:  MOVLB  5
63E6:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
63E8:  BSF    F92.5
63EA:  BTFSS  F80.5
63EC:  BRA    6478
....................          {   
....................             if(Tciclo>40) 
63EE:  CLRF   xF9
63F0:  CLRF   xF8
63F2:  MOVLW  20
63F4:  MOVWF  xF7
63F6:  MOVLW  84
63F8:  MOVWF  xF6
63FA:  MOVFF  5AD,5FD
63FE:  MOVFF  5AC,5FC
6402:  MOVFF  5AB,5FB
6406:  MOVFF  5AA,5FA
640A:  MOVLB  0
640C:  CALL   2654
6410:  BNC   6432
....................             { 
....................                Tciclo=40;delay_ms(100);visual=1; 
6412:  MOVLB  5
6414:  CLRF   xAD
6416:  CLRF   xAC
6418:  MOVLW  20
641A:  MOVWF  xAB
641C:  MOVLW  84
641E:  MOVWF  xAA
6420:  MOVLW  64
6422:  MOVWF  xFC
6424:  MOVLB  0
6426:  CALL   0CCE
642A:  MOVLB  5
642C:  BSF    x65.3
....................             } 
....................             else 
642E:  BRA    6478
6430:  MOVLB  0
....................             { 
....................                delay_ms(30);Tciclo+=1.0;visual=1; 
6432:  MOVLW  1E
6434:  MOVLB  5
6436:  MOVWF  xFC
6438:  MOVLB  0
643A:  CALL   0CCE
643E:  BCF    FD8.1
6440:  MOVFF  5AD,5FE
6444:  MOVFF  5AC,5FD
6448:  MOVFF  5AB,5FC
644C:  MOVFF  5AA,5FB
6450:  MOVLB  6
6452:  CLRF   x02
6454:  CLRF   x01
6456:  CLRF   x00
6458:  MOVLW  7F
645A:  MOVLB  5
645C:  MOVWF  xFF
645E:  MOVLB  0
6460:  CALL   187E
6464:  MOVFF  03,5AD
6468:  MOVFF  02,5AC
646C:  MOVFF  01,5AB
6470:  MOVFF  00,5AA
6474:  MOVLB  5
6476:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
6478:  BSF    F96.0
647A:  BTFSS  F84.0
647C:  BRA    64E6
....................          {   
....................             if(Tciclo>1) 
647E:  CLRF   xF9
6480:  CLRF   xF8
6482:  CLRF   xF7
6484:  MOVLW  7F
6486:  MOVWF  xF6
6488:  MOVFF  5AD,5FD
648C:  MOVFF  5AC,5FC
6490:  MOVFF  5AB,5FB
6494:  MOVFF  5AA,5FA
6498:  MOVLB  0
649A:  CALL   2654
649E:  BNC   64E8
....................             { 
....................                delay_ms(30);Tciclo-=1.0;visual=1;      
64A0:  MOVLW  1E
64A2:  MOVLB  5
64A4:  MOVWF  xFC
64A6:  MOVLB  0
64A8:  CALL   0CCE
64AC:  BSF    FD8.1
64AE:  MOVFF  5AD,5FE
64B2:  MOVFF  5AC,5FD
64B6:  MOVFF  5AB,5FC
64BA:  MOVFF  5AA,5FB
64BE:  MOVLB  6
64C0:  CLRF   x02
64C2:  CLRF   x01
64C4:  CLRF   x00
64C6:  MOVLW  7F
64C8:  MOVLB  5
64CA:  MOVWF  xFF
64CC:  MOVLB  0
64CE:  CALL   187E
64D2:  MOVFF  03,5AD
64D6:  MOVFF  02,5AC
64DA:  MOVFF  01,5AB
64DE:  MOVFF  00,5AA
64E2:  MOVLB  5
64E4:  BSF    x65.3
64E6:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
64E8:  BSF    F96.1
64EA:  BTFSS  F84.1
64EC:  BRA    6500
....................          {   
....................             delay_ms(30);visual=1; 
64EE:  MOVLW  1E
64F0:  MOVLB  5
64F2:  MOVWF  xFC
64F4:  MOVLB  0
64F6:  CALL   0CCE
64FA:  MOVLB  5
64FC:  BSF    x65.3
64FE:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
6500:  BSF    F96.2
6502:  BTFSS  F84.2
6504:  BRA    6576
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6506:  MOVLW  04
6508:  MOVLB  5
650A:  MOVWF  xF6
650C:  MOVLW  AF
650E:  MOVWF  xFC
6510:  MOVLB  0
6512:  CALL   0CCE
6516:  MOVLB  5
6518:  DECFSZ xF6,F
651A:  BRA    650C
651C:  MOVLW  64
651E:  MOVWF  x6A
6520:  CLRF   xF7
6522:  MOVLB  0
6524:  CALL   0D6E
6528:  MOVLW  01
652A:  MOVLB  5
652C:  MOVWF  x71
652E:  BSF    x65.3
....................             write_eeprom(30,(int8)Tciclo); 
6530:  MOVFF  5AD,5F9
6534:  MOVFF  5AC,5F8
6538:  MOVFF  5AB,5F7
653C:  MOVFF  5AA,5F6
6540:  MOVLB  0
6542:  CALL   273C
6546:  MOVFF  01,5F6
654A:  MOVLW  1E
654C:  MOVWF  FA9
654E:  MOVFF  5F6,FA8
6552:  BCF    FA6.6
6554:  BCF    FA6.7
6556:  BSF    FA6.2
6558:  MOVF   FF2,W
655A:  MOVWF  00
655C:  BCF    FF2.7
655E:  MOVLB  F
6560:  MOVLW  55
6562:  MOVWF  FA7
6564:  MOVLW  AA
6566:  MOVWF  FA7
6568:  BSF    FA6.1
656A:  BTFSC  FA6.1
656C:  BRA    656A
656E:  BCF    FA6.2
6570:  MOVF   00,W
6572:  IORWF  FF2,F
6574:  MOVLB  0
6576:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==103){ // Menu de Ajuste de Ajuste 
6578:  MOVF   x6A,W
657A:  SUBLW  67
657C:  BTFSS  FD8.2
657E:  BRA    673A
....................        
....................       if(Ajuste>100) 
6580:  MOVF   x60,W
6582:  SUBLW  64
6584:  BC    6588
....................       { 
....................          Ajuste=0; 
6586:  CLRF   x60
....................       } 
....................        
....................       if(visual==1) 
6588:  BTFSS  x65.3
658A:  BRA    65F0
....................       { 
....................          glcd_fillScreen(OFF); 
658C:  CLRF   xF7
658E:  MOVLB  0
6590:  CALL   0D6E
....................          strcpy(Menus.Letra,"Ajuste"); 
6594:  MOVLW  05
6596:  MOVWF  FEA
6598:  MOVLW  D6
659A:  MOVWF  FE9
659C:  MOVFF  FF2,5F6
65A0:  BCF    FF2.7
65A2:  MOVLW  00
65A4:  CALL   0C12
65A8:  TBLRD*-
65AA:  TBLRD*+
65AC:  MOVF   FF5,W
65AE:  MOVWF  FEE
65B0:  IORLW  00
65B2:  BNZ   65AA
65B4:  MOVLB  5
65B6:  BTFSC  xF6.7
65B8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
65BA:  MOVLW  05
65BC:  MOVWF  xF7
65BE:  MOVLW  D6
65C0:  MOVWF  xF6
65C2:  CLRF   xF8
65C4:  CLRF   xF9
65C6:  MOVLW  01
65C8:  MOVWF  xFA
65CA:  MOVLW  02
65CC:  MOVWF  xFB
65CE:  MOVLB  0
65D0:  CALL   13A0
....................           
....................          displayTemperatura(Ajuste,30,30,0,3); 
65D4:  MOVFF  560,5F7
65D8:  MOVLW  1E
65DA:  MOVLB  5
65DC:  MOVWF  xF8
65DE:  MOVWF  xF9
65E0:  CLRF   xFA
65E2:  MOVLW  03
65E4:  MOVWF  xFB
65E6:  MOVLB  0
65E8:  CALL   222A
....................           
....................          visual=0; 
65EC:  MOVLB  5
65EE:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
65F0:  BSF    F92.5
65F2:  BTFSS  F80.5
65F4:  BRA    6668
....................          {   
....................             if(Ajuste>100) 
65F6:  MOVF   x60,W
65F8:  SUBLW  64
65FA:  BC    660E
....................             { 
....................                Ajuste=100;delay_ms(100);visual=1; 
65FC:  MOVLW  64
65FE:  MOVWF  x60
6600:  MOVWF  xFC
6602:  MOVLB  0
6604:  CALL   0CCE
6608:  MOVLB  5
660A:  BSF    x65.3
....................             } 
....................             else 
660C:  BRA    6668
....................             { 
....................                delay_ms(30);Ajuste+=1.0;visual=1; 
660E:  MOVLW  1E
6610:  MOVWF  xFC
6612:  MOVLB  0
6614:  CALL   0CCE
6618:  MOVLB  5
661A:  CLRF   xFD
661C:  MOVFF  560,5FC
6620:  MOVLB  0
6622:  CALL   0CF8
6626:  BCF    FD8.1
6628:  MOVFF  03,5FE
662C:  MOVFF  02,5FD
6630:  MOVFF  01,5FC
6634:  MOVFF  00,5FB
6638:  MOVLB  6
663A:  CLRF   x02
663C:  CLRF   x01
663E:  CLRF   x00
6640:  MOVLW  7F
6642:  MOVLB  5
6644:  MOVWF  xFF
6646:  MOVLB  0
6648:  CALL   187E
664C:  MOVFF  03,5F9
6650:  MOVFF  02,5F8
6654:  MOVFF  01,5F7
6658:  MOVFF  00,5F6
665C:  CALL   273C
6660:  MOVFF  01,560
6664:  MOVLB  5
6666:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
6668:  BSF    F96.0
666A:  BTFSS  F84.0
666C:  BRA    66CC
....................          {   
....................             if(Ajuste>0) 
666E:  MOVF   x60,F
6670:  BZ    66CC
....................             { 
....................                delay_ms(30);Ajuste-=1.0;visual=1;      
6672:  MOVLW  1E
6674:  MOVWF  xFC
6676:  MOVLB  0
6678:  CALL   0CCE
667C:  MOVLB  5
667E:  CLRF   xFD
6680:  MOVFF  560,5FC
6684:  MOVLB  0
6686:  CALL   0CF8
668A:  BSF    FD8.1
668C:  MOVFF  03,5FE
6690:  MOVFF  02,5FD
6694:  MOVFF  01,5FC
6698:  MOVFF  00,5FB
669C:  MOVLB  6
669E:  CLRF   x02
66A0:  CLRF   x01
66A2:  CLRF   x00
66A4:  MOVLW  7F
66A6:  MOVLB  5
66A8:  MOVWF  xFF
66AA:  MOVLB  0
66AC:  CALL   187E
66B0:  MOVFF  03,5F9
66B4:  MOVFF  02,5F8
66B8:  MOVFF  01,5F7
66BC:  MOVFF  00,5F6
66C0:  CALL   273C
66C4:  MOVFF  01,560
66C8:  MOVLB  5
66CA:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
66CC:  BSF    F96.1
66CE:  BTFSS  F84.1
66D0:  BRA    66E0
....................          {   
....................             delay_ms(30);visual=1; 
66D2:  MOVLW  1E
66D4:  MOVWF  xFC
66D6:  MOVLB  0
66D8:  CALL   0CCE
66DC:  MOVLB  5
66DE:  BSF    x65.3
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
66E0:  BSF    F96.2
66E2:  BTFSS  F84.2
66E4:  BRA    673A
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
66E6:  MOVLW  04
66E8:  MOVWF  xF6
66EA:  MOVLW  AF
66EC:  MOVWF  xFC
66EE:  MOVLB  0
66F0:  CALL   0CCE
66F4:  MOVLB  5
66F6:  DECFSZ xF6,F
66F8:  BRA    66EA
66FA:  MOVLW  64
66FC:  MOVWF  x6A
66FE:  CLRF   xF7
6700:  MOVLB  0
6702:  CALL   0D6E
6706:  MOVLW  01
6708:  MOVLB  5
670A:  MOVWF  x71
670C:  BSF    x65.3
....................             write_eeprom(40,Ajuste); 
670E:  MOVLW  28
6710:  MOVWF  FA9
6712:  MOVFF  560,FA8
6716:  BCF    FA6.6
6718:  BCF    FA6.7
671A:  BSF    FA6.2
671C:  MOVF   FF2,W
671E:  MOVWF  00
6720:  BCF    FF2.7
6722:  MOVLB  F
6724:  MOVLW  55
6726:  MOVWF  FA7
6728:  MOVLW  AA
672A:  MOVWF  FA7
672C:  BSF    FA6.1
672E:  BTFSC  FA6.1
6730:  BRA    672E
6732:  BCF    FA6.2
6734:  MOVF   00,W
6736:  IORWF  FF2,F
6738:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==104){ // Menu de Ajuste de Ajusten 
673A:  MOVF   x6A,W
673C:  SUBLW  68
673E:  BTFSS  FD8.2
6740:  BRA    68FC
....................        
....................       if(Ajusten>100) 
6742:  MOVF   x61,W
6744:  SUBLW  64
6746:  BC    674A
....................       { 
....................          Ajusten=0; 
6748:  CLRF   x61
....................       } 
....................        
....................       if(visual==1) 
674A:  BTFSS  x65.3
674C:  BRA    67B2
....................       { 
....................          glcd_fillScreen(OFF); 
674E:  CLRF   xF7
6750:  MOVLB  0
6752:  CALL   0D6E
....................          strcpy(Menus.Letra,"Ajusten"); 
6756:  MOVLW  05
6758:  MOVWF  FEA
675A:  MOVLW  D6
675C:  MOVWF  FE9
675E:  MOVFF  FF2,5F6
6762:  BCF    FF2.7
6764:  MOVLW  00
6766:  CALL   0C34
676A:  TBLRD*-
676C:  TBLRD*+
676E:  MOVF   FF5,W
6770:  MOVWF  FEE
6772:  IORLW  00
6774:  BNZ   676C
6776:  MOVLB  5
6778:  BTFSC  xF6.7
677A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
677C:  MOVLW  05
677E:  MOVWF  xF7
6780:  MOVLW  D6
6782:  MOVWF  xF6
6784:  CLRF   xF8
6786:  CLRF   xF9
6788:  MOVLW  01
678A:  MOVWF  xFA
678C:  MOVLW  02
678E:  MOVWF  xFB
6790:  MOVLB  0
6792:  CALL   13A0
....................           
....................          displayTemperatura(Ajusten,30,30,0,3); 
6796:  MOVFF  561,5F7
679A:  MOVLW  1E
679C:  MOVLB  5
679E:  MOVWF  xF8
67A0:  MOVWF  xF9
67A2:  CLRF   xFA
67A4:  MOVLW  03
67A6:  MOVWF  xFB
67A8:  MOVLB  0
67AA:  CALL   222A
....................           
....................          visual=0; 
67AE:  MOVLB  5
67B0:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
67B2:  BSF    F92.5
67B4:  BTFSS  F80.5
67B6:  BRA    682A
....................          {   
....................             if(Ajusten>100) 
67B8:  MOVF   x61,W
67BA:  SUBLW  64
67BC:  BC    67D0
....................             { 
....................                Ajusten=100;delay_ms(100);visual=1; 
67BE:  MOVLW  64
67C0:  MOVWF  x61
67C2:  MOVWF  xFC
67C4:  MOVLB  0
67C6:  CALL   0CCE
67CA:  MOVLB  5
67CC:  BSF    x65.3
....................             } 
....................             else 
67CE:  BRA    682A
....................             { 
....................                delay_ms(30);Ajusten+=1.0;visual=1; 
67D0:  MOVLW  1E
67D2:  MOVWF  xFC
67D4:  MOVLB  0
67D6:  CALL   0CCE
67DA:  MOVLB  5
67DC:  CLRF   xFD
67DE:  MOVFF  561,5FC
67E2:  MOVLB  0
67E4:  CALL   0CF8
67E8:  BCF    FD8.1
67EA:  MOVFF  03,5FE
67EE:  MOVFF  02,5FD
67F2:  MOVFF  01,5FC
67F6:  MOVFF  00,5FB
67FA:  MOVLB  6
67FC:  CLRF   x02
67FE:  CLRF   x01
6800:  CLRF   x00
6802:  MOVLW  7F
6804:  MOVLB  5
6806:  MOVWF  xFF
6808:  MOVLB  0
680A:  CALL   187E
680E:  MOVFF  03,5F9
6812:  MOVFF  02,5F8
6816:  MOVFF  01,5F7
681A:  MOVFF  00,5F6
681E:  CALL   273C
6822:  MOVFF  01,561
6826:  MOVLB  5
6828:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
682A:  BSF    F96.0
682C:  BTFSS  F84.0
682E:  BRA    688E
....................          {   
....................             if(Ajusten>0) 
6830:  MOVF   x61,F
6832:  BZ    688E
....................             { 
....................                delay_ms(30);Ajusten-=1.0;visual=1;      
6834:  MOVLW  1E
6836:  MOVWF  xFC
6838:  MOVLB  0
683A:  CALL   0CCE
683E:  MOVLB  5
6840:  CLRF   xFD
6842:  MOVFF  561,5FC
6846:  MOVLB  0
6848:  CALL   0CF8
684C:  BSF    FD8.1
684E:  MOVFF  03,5FE
6852:  MOVFF  02,5FD
6856:  MOVFF  01,5FC
685A:  MOVFF  00,5FB
685E:  MOVLB  6
6860:  CLRF   x02
6862:  CLRF   x01
6864:  CLRF   x00
6866:  MOVLW  7F
6868:  MOVLB  5
686A:  MOVWF  xFF
686C:  MOVLB  0
686E:  CALL   187E
6872:  MOVFF  03,5F9
6876:  MOVFF  02,5F8
687A:  MOVFF  01,5F7
687E:  MOVFF  00,5F6
6882:  CALL   273C
6886:  MOVFF  01,561
688A:  MOVLB  5
688C:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
688E:  BSF    F96.1
6890:  BTFSS  F84.1
6892:  BRA    68A2
....................          {   
....................             delay_ms(30);visual=1; 
6894:  MOVLW  1E
6896:  MOVWF  xFC
6898:  MOVLB  0
689A:  CALL   0CCE
689E:  MOVLB  5
68A0:  BSF    x65.3
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
68A2:  BSF    F96.2
68A4:  BTFSS  F84.2
68A6:  BRA    68FC
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
68A8:  MOVLW  04
68AA:  MOVWF  xF6
68AC:  MOVLW  AF
68AE:  MOVWF  xFC
68B0:  MOVLB  0
68B2:  CALL   0CCE
68B6:  MOVLB  5
68B8:  DECFSZ xF6,F
68BA:  BRA    68AC
68BC:  MOVLW  64
68BE:  MOVWF  x6A
68C0:  CLRF   xF7
68C2:  MOVLB  0
68C4:  CALL   0D6E
68C8:  MOVLW  01
68CA:  MOVLB  5
68CC:  MOVWF  x71
68CE:  BSF    x65.3
....................             write_eeprom(50,Ajusten); 
68D0:  MOVLW  32
68D2:  MOVWF  FA9
68D4:  MOVFF  561,FA8
68D8:  BCF    FA6.6
68DA:  BCF    FA6.7
68DC:  BSF    FA6.2
68DE:  MOVF   FF2,W
68E0:  MOVWF  00
68E2:  BCF    FF2.7
68E4:  MOVLB  F
68E6:  MOVLW  55
68E8:  MOVWF  FA7
68EA:  MOVLW  AA
68EC:  MOVWF  FA7
68EE:  BSF    FA6.1
68F0:  BTFSC  FA6.1
68F2:  BRA    68F0
68F4:  BCF    FA6.2
68F6:  MOVF   00,W
68F8:  IORWF  FF2,F
68FA:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==105){ // Menu de Ajuste de Media Movil 
68FC:  MOVF   x6A,W
68FE:  SUBLW  69
6900:  BTFSS  FD8.2
6902:  BRA    6AC4
....................        
....................       if(MediaMovil>80) 
6904:  MOVF   x62,W
6906:  SUBLW  50
6908:  BC    690E
....................       { 
....................          MediaMovil=80; 
690A:  MOVLW  50
690C:  MOVWF  x62
....................       } 
....................        
....................       if(visual==1) 
690E:  BTFSS  x65.3
6910:  BRA    6976
....................       { 
....................          glcd_fillScreen(OFF); 
6912:  CLRF   xF7
6914:  MOVLB  0
6916:  CALL   0D6E
....................          strcpy(Menus.Letra,"Media"); 
691A:  MOVLW  05
691C:  MOVWF  FEA
691E:  MOVLW  D6
6920:  MOVWF  FE9
6922:  MOVFF  FF2,5F6
6926:  BCF    FF2.7
6928:  MOVLW  00
692A:  CALL   0C56
692E:  TBLRD*-
6930:  TBLRD*+
6932:  MOVF   FF5,W
6934:  MOVWF  FEE
6936:  IORLW  00
6938:  BNZ   6930
693A:  MOVLB  5
693C:  BTFSC  xF6.7
693E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
6940:  MOVLW  05
6942:  MOVWF  xF7
6944:  MOVLW  D6
6946:  MOVWF  xF6
6948:  CLRF   xF8
694A:  CLRF   xF9
694C:  MOVLW  01
694E:  MOVWF  xFA
6950:  MOVLW  02
6952:  MOVWF  xFB
6954:  MOVLB  0
6956:  CALL   13A0
....................           
....................          displayTemperatura(MediaMovil,30,30,0,3); 
695A:  MOVFF  562,5F7
695E:  MOVLW  1E
6960:  MOVLB  5
6962:  MOVWF  xF8
6964:  MOVWF  xF9
6966:  CLRF   xFA
6968:  MOVLW  03
696A:  MOVWF  xFB
696C:  MOVLB  0
696E:  CALL   222A
....................           
....................          visual=0; 
6972:  MOVLB  5
6974:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
6976:  BSF    F92.5
6978:  BTFSS  F80.5
697A:  BRA    69F0
....................          {   
....................             if(MediaMovil>80) 
697C:  MOVF   x62,W
697E:  SUBLW  50
6980:  BC    6996
....................             { 
....................                MediaMovil=80;delay_ms(100);visual=1; 
6982:  MOVLW  50
6984:  MOVWF  x62
6986:  MOVLW  64
6988:  MOVWF  xFC
698A:  MOVLB  0
698C:  CALL   0CCE
6990:  MOVLB  5
6992:  BSF    x65.3
....................             } 
....................             else 
6994:  BRA    69F0
....................             { 
....................                delay_ms(30);MediaMovil+=1.0;visual=1; 
6996:  MOVLW  1E
6998:  MOVWF  xFC
699A:  MOVLB  0
699C:  CALL   0CCE
69A0:  MOVLB  5
69A2:  CLRF   xFD
69A4:  MOVFF  562,5FC
69A8:  MOVLB  0
69AA:  CALL   0CF8
69AE:  BCF    FD8.1
69B0:  MOVFF  03,5FE
69B4:  MOVFF  02,5FD
69B8:  MOVFF  01,5FC
69BC:  MOVFF  00,5FB
69C0:  MOVLB  6
69C2:  CLRF   x02
69C4:  CLRF   x01
69C6:  CLRF   x00
69C8:  MOVLW  7F
69CA:  MOVLB  5
69CC:  MOVWF  xFF
69CE:  MOVLB  0
69D0:  CALL   187E
69D4:  MOVFF  03,5F9
69D8:  MOVFF  02,5F8
69DC:  MOVFF  01,5F7
69E0:  MOVFF  00,5F6
69E4:  CALL   273C
69E8:  MOVFF  01,562
69EC:  MOVLB  5
69EE:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
69F0:  BSF    F96.0
69F2:  BTFSS  F84.0
69F4:  BRA    6A56
....................          {   
....................             if(MediaMovil>1) 
69F6:  MOVF   x62,W
69F8:  SUBLW  01
69FA:  BC    6A56
....................             { 
....................                delay_ms(30);MediaMovil-=1.0;visual=1;      
69FC:  MOVLW  1E
69FE:  MOVWF  xFC
6A00:  MOVLB  0
6A02:  CALL   0CCE
6A06:  MOVLB  5
6A08:  CLRF   xFD
6A0A:  MOVFF  562,5FC
6A0E:  MOVLB  0
6A10:  CALL   0CF8
6A14:  BSF    FD8.1
6A16:  MOVFF  03,5FE
6A1A:  MOVFF  02,5FD
6A1E:  MOVFF  01,5FC
6A22:  MOVFF  00,5FB
6A26:  MOVLB  6
6A28:  CLRF   x02
6A2A:  CLRF   x01
6A2C:  CLRF   x00
6A2E:  MOVLW  7F
6A30:  MOVLB  5
6A32:  MOVWF  xFF
6A34:  MOVLB  0
6A36:  CALL   187E
6A3A:  MOVFF  03,5F9
6A3E:  MOVFF  02,5F8
6A42:  MOVFF  01,5F7
6A46:  MOVFF  00,5F6
6A4A:  CALL   273C
6A4E:  MOVFF  01,562
6A52:  MOVLB  5
6A54:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
6A56:  BSF    F96.1
6A58:  BTFSS  F84.1
6A5A:  BRA    6A6A
....................          {   
....................             delay_ms(30);visual=1; 
6A5C:  MOVLW  1E
6A5E:  MOVWF  xFC
6A60:  MOVLB  0
6A62:  CALL   0CCE
6A66:  MOVLB  5
6A68:  BSF    x65.3
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
6A6A:  BSF    F96.2
6A6C:  BTFSS  F84.2
6A6E:  BRA    6AC4
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6A70:  MOVLW  04
6A72:  MOVWF  xF6
6A74:  MOVLW  AF
6A76:  MOVWF  xFC
6A78:  MOVLB  0
6A7A:  CALL   0CCE
6A7E:  MOVLB  5
6A80:  DECFSZ xF6,F
6A82:  BRA    6A74
6A84:  MOVLW  64
6A86:  MOVWF  x6A
6A88:  CLRF   xF7
6A8A:  MOVLB  0
6A8C:  CALL   0D6E
6A90:  MOVLW  01
6A92:  MOVLB  5
6A94:  MOVWF  x71
6A96:  BSF    x65.3
....................             write_eeprom(60,MediaMovil); 
6A98:  MOVLW  3C
6A9A:  MOVWF  FA9
6A9C:  MOVFF  562,FA8
6AA0:  BCF    FA6.6
6AA2:  BCF    FA6.7
6AA4:  BSF    FA6.2
6AA6:  MOVF   FF2,W
6AA8:  MOVWF  00
6AAA:  BCF    FF2.7
6AAC:  MOVLB  F
6AAE:  MOVLW  55
6AB0:  MOVWF  FA7
6AB2:  MOVLW  AA
6AB4:  MOVWF  FA7
6AB6:  BSF    FA6.1
6AB8:  BTFSC  FA6.1
6ABA:  BRA    6AB8
6ABC:  BCF    FA6.2
6ABE:  MOVF   00,W
6AC0:  IORWF  FF2,F
6AC2:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==106){ // Menu de Ajuste de Coeficiente Regulador 
6AC4:  MOVF   x6A,W
6AC6:  SUBLW  6A
6AC8:  BTFSS  FD8.2
6ACA:  BRA    6D10
....................        
....................       if(Coeficiente>250) 
6ACC:  CLRF   xF9
6ACE:  CLRF   xF8
6AD0:  MOVLW  7A
6AD2:  MOVWF  xF7
6AD4:  MOVLW  86
6AD6:  MOVWF  xF6
6AD8:  MOVFF  5CD,5FD
6ADC:  MOVFF  5CC,5FC
6AE0:  MOVFF  5CB,5FB
6AE4:  MOVFF  5CA,5FA
6AE8:  MOVLB  0
6AEA:  CALL   2654
6AEE:  BNC   6AFE
....................       { 
....................          Coeficiente=100; 
6AF0:  MOVLB  5
6AF2:  CLRF   xCD
6AF4:  CLRF   xCC
6AF6:  MOVLW  48
6AF8:  MOVWF  xCB
6AFA:  MOVLW  85
6AFC:  MOVWF  xCA
....................       } 
....................        
....................       if(visual==1) 
6AFE:  MOVLB  5
6B00:  BTFSS  x65.3
6B02:  BRA    6B80
....................       { 
....................          glcd_fillScreen(OFF); 
6B04:  CLRF   xF7
6B06:  MOVLB  0
6B08:  CALL   0D6E
....................          strcpy(Menus.Letra,"Coeficiente"); 
6B0C:  MOVLW  05
6B0E:  MOVWF  FEA
6B10:  MOVLW  D6
6B12:  MOVWF  FE9
6B14:  MOVFF  FF2,5F6
6B18:  BCF    FF2.7
6B1A:  MOVLW  00
6B1C:  CALL   0BEC
6B20:  TBLRD*-
6B22:  TBLRD*+
6B24:  MOVF   FF5,W
6B26:  MOVWF  FEE
6B28:  IORLW  00
6B2A:  BNZ   6B22
6B2C:  MOVLB  5
6B2E:  BTFSC  xF6.7
6B30:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
6B32:  MOVLW  05
6B34:  MOVWF  xF7
6B36:  MOVLW  D6
6B38:  MOVWF  xF6
6B3A:  CLRF   xF8
6B3C:  CLRF   xF9
6B3E:  MOVLW  01
6B40:  MOVWF  xFA
6B42:  MOVLW  02
6B44:  MOVWF  xFB
6B46:  MOVLB  0
6B48:  CALL   13A0
....................           
....................          displayTemperatura(Coeficiente,30,30,0,3); 
6B4C:  MOVFF  5CD,5F9
6B50:  MOVFF  5CC,5F8
6B54:  MOVFF  5CB,5F7
6B58:  MOVFF  5CA,5F6
6B5C:  CALL   273C
6B60:  MOVFF  01,5F6
6B64:  MOVFF  01,5F7
6B68:  MOVLW  1E
6B6A:  MOVLB  5
6B6C:  MOVWF  xF8
6B6E:  MOVWF  xF9
6B70:  CLRF   xFA
6B72:  MOVLW  03
6B74:  MOVWF  xFB
6B76:  MOVLB  0
6B78:  CALL   222A
....................           
....................          visual=0; 
6B7C:  MOVLB  5
6B7E:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
6B80:  BSF    F92.5
6B82:  BTFSS  F80.5
6B84:  BRA    6C10
....................          {   
....................             if(Coeficiente>250) 
6B86:  CLRF   xF9
6B88:  CLRF   xF8
6B8A:  MOVLW  7A
6B8C:  MOVWF  xF7
6B8E:  MOVLW  86
6B90:  MOVWF  xF6
6B92:  MOVFF  5CD,5FD
6B96:  MOVFF  5CC,5FC
6B9A:  MOVFF  5CB,5FB
6B9E:  MOVFF  5CA,5FA
6BA2:  MOVLB  0
6BA4:  CALL   2654
6BA8:  BNC   6BCA
....................             { 
....................                Coeficiente=250;delay_ms(100);visual=1; 
6BAA:  MOVLB  5
6BAC:  CLRF   xCD
6BAE:  CLRF   xCC
6BB0:  MOVLW  7A
6BB2:  MOVWF  xCB
6BB4:  MOVLW  86
6BB6:  MOVWF  xCA
6BB8:  MOVLW  64
6BBA:  MOVWF  xFC
6BBC:  MOVLB  0
6BBE:  CALL   0CCE
6BC2:  MOVLB  5
6BC4:  BSF    x65.3
....................             } 
....................             else 
6BC6:  BRA    6C10
6BC8:  MOVLB  0
....................             { 
....................                delay_ms(30);Coeficiente+=1.0;visual=1; 
6BCA:  MOVLW  1E
6BCC:  MOVLB  5
6BCE:  MOVWF  xFC
6BD0:  MOVLB  0
6BD2:  CALL   0CCE
6BD6:  BCF    FD8.1
6BD8:  MOVFF  5CD,5FE
6BDC:  MOVFF  5CC,5FD
6BE0:  MOVFF  5CB,5FC
6BE4:  MOVFF  5CA,5FB
6BE8:  MOVLB  6
6BEA:  CLRF   x02
6BEC:  CLRF   x01
6BEE:  CLRF   x00
6BF0:  MOVLW  7F
6BF2:  MOVLB  5
6BF4:  MOVWF  xFF
6BF6:  MOVLB  0
6BF8:  CALL   187E
6BFC:  MOVFF  03,5CD
6C00:  MOVFF  02,5CC
6C04:  MOVFF  01,5CB
6C08:  MOVFF  00,5CA
6C0C:  MOVLB  5
6C0E:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
6C10:  BSF    F96.0
6C12:  BTFSS  F84.0
6C14:  BRA    6C7E
....................          {   
....................             if(Coeficiente>1) 
6C16:  CLRF   xF9
6C18:  CLRF   xF8
6C1A:  CLRF   xF7
6C1C:  MOVLW  7F
6C1E:  MOVWF  xF6
6C20:  MOVFF  5CD,5FD
6C24:  MOVFF  5CC,5FC
6C28:  MOVFF  5CB,5FB
6C2C:  MOVFF  5CA,5FA
6C30:  MOVLB  0
6C32:  CALL   2654
6C36:  BNC   6C80
....................             { 
....................                delay_ms(30);Coeficiente-=1.0;visual=1;      
6C38:  MOVLW  1E
6C3A:  MOVLB  5
6C3C:  MOVWF  xFC
6C3E:  MOVLB  0
6C40:  CALL   0CCE
6C44:  BSF    FD8.1
6C46:  MOVFF  5CD,5FE
6C4A:  MOVFF  5CC,5FD
6C4E:  MOVFF  5CB,5FC
6C52:  MOVFF  5CA,5FB
6C56:  MOVLB  6
6C58:  CLRF   x02
6C5A:  CLRF   x01
6C5C:  CLRF   x00
6C5E:  MOVLW  7F
6C60:  MOVLB  5
6C62:  MOVWF  xFF
6C64:  MOVLB  0
6C66:  CALL   187E
6C6A:  MOVFF  03,5CD
6C6E:  MOVFF  02,5CC
6C72:  MOVFF  01,5CB
6C76:  MOVFF  00,5CA
6C7A:  MOVLB  5
6C7C:  BSF    x65.3
6C7E:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
6C80:  BSF    F96.1
6C82:  BTFSS  F84.1
6C84:  BRA    6C98
....................          {   
....................             delay_ms(30);visual=1; 
6C86:  MOVLW  1E
6C88:  MOVLB  5
6C8A:  MOVWF  xFC
6C8C:  MOVLB  0
6C8E:  CALL   0CCE
6C92:  MOVLB  5
6C94:  BSF    x65.3
6C96:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
6C98:  BSF    F96.2
6C9A:  BTFSS  F84.2
6C9C:  BRA    6D0E
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6C9E:  MOVLW  04
6CA0:  MOVLB  5
6CA2:  MOVWF  xF6
6CA4:  MOVLW  AF
6CA6:  MOVWF  xFC
6CA8:  MOVLB  0
6CAA:  CALL   0CCE
6CAE:  MOVLB  5
6CB0:  DECFSZ xF6,F
6CB2:  BRA    6CA4
6CB4:  MOVLW  64
6CB6:  MOVWF  x6A
6CB8:  CLRF   xF7
6CBA:  MOVLB  0
6CBC:  CALL   0D6E
6CC0:  MOVLW  01
6CC2:  MOVLB  5
6CC4:  MOVWF  x71
6CC6:  BSF    x65.3
....................             write_eeprom(70,(int8)Coeficiente); 
6CC8:  MOVFF  5CD,5F9
6CCC:  MOVFF  5CC,5F8
6CD0:  MOVFF  5CB,5F7
6CD4:  MOVFF  5CA,5F6
6CD8:  MOVLB  0
6CDA:  CALL   273C
6CDE:  MOVFF  01,5F6
6CE2:  MOVLW  46
6CE4:  MOVWF  FA9
6CE6:  MOVFF  5F6,FA8
6CEA:  BCF    FA6.6
6CEC:  BCF    FA6.7
6CEE:  BSF    FA6.2
6CF0:  MOVF   FF2,W
6CF2:  MOVWF  00
6CF4:  BCF    FF2.7
6CF6:  MOVLB  F
6CF8:  MOVLW  55
6CFA:  MOVWF  FA7
6CFC:  MOVLW  AA
6CFE:  MOVWF  FA7
6D00:  BSF    FA6.1
6D02:  BTFSC  FA6.1
6D04:  BRA    6D02
6D06:  BCF    FA6.2
6D08:  MOVF   00,W
6D0A:  IORWF  FF2,F
6D0C:  MOVLB  0
6D0E:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................       if(tiemporeset>=60) 
6D10:  MOVF   x68,W
6D12:  SUBLW  3B
6D14:  BC    6D40
....................       { 
....................          glcd_init(ON); 
6D16:  MOVLW  01
6D18:  MOVWF  xF6
6D1A:  MOVLB  0
6D1C:  CALL   0E80
....................          tiemporeset=0; 
6D20:  MOVLB  5
6D22:  CLRF   x68
....................          if(tiempoventilador<2) 
6D24:  MOVF   x64,W
6D26:  SUBLW  01
6D28:  BNC   6D30
....................          { 
....................             estado_ventilador=0; 
6D2A:  BCF    x65.5
....................             tiempoventilador++; 
6D2C:  INCF   x64,F
....................          } 
....................          else 
6D2E:  BRA    6D40
....................          { 
....................             if(tiempoventilador>2) 
6D30:  MOVF   x64,W
6D32:  SUBLW  02
6D34:  BC    6D3C
....................             { 
....................                tiempoventilador=0; 
6D36:  CLRF   x64
....................                estado_ventilador=0; 
6D38:  BCF    x65.5
....................             } 
....................             else 
6D3A:  BRA    6D40
....................             { 
....................                estado_ventilador=1; 
6D3C:  BSF    x65.5
....................                tiempoventilador++; 
6D3E:  INCF   x64,F
....................             } 
....................          } 
....................          //estado_ventilador=!estado_ventilador; 
....................       }  
....................  
....................    } 
6D40:  GOTO   3796
.................... } 
6D44:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E1E   BROWNOUT NOWDT BORV20 PUT WDT32768 NOVREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
