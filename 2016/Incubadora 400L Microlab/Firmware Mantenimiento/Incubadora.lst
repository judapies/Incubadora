CCS PCH C Compiler, Version 4.104, 5967               14-jun.-17 07:34

               Filename: H:\JP\JP\Laboratorio\Incubadora\2016\Incubadora 400L Microlab\Firmware Mantenimiento\Incubadora.lst

               ROM used: 27504 bytes (84%)
                         Largest free fragment is 5260
               RAM used: 1530 (75%) at main() level
                         1591 (78%) worst case
               Stack:    5 worst case (4 in main + 1 for interrupts)

*
0000:  GOTO   2DB6
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0CA0
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... /// Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0CF8:  MOVLW  05
0CFA:  MOVWF  FEA
0CFC:  MOVLW  FC
0CFE:  MOVWF  FE9
0D00:  MOVF   FEF,W
0D02:  BZ    0D20
0D04:  MOVLW  0F
0D06:  MOVWF  01
0D08:  CLRF   00
0D0A:  DECFSZ 00,F
0D0C:  BRA    0D0A
0D0E:  DECFSZ 01,F
0D10:  BRA    0D08
0D12:  MOVLW  8F
0D14:  MOVWF  00
0D16:  DECFSZ 00,F
0D18:  BRA    0D16
0D1A:  NOP   
0D1C:  DECFSZ FEF,F
0D1E:  BRA    0D04
0D20:  RETLW  00
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
0E74:  BCF    F93.2
0E76:  BSF    F8A.2
....................    output_low(GLCD_E); 
0E78:  BCF    F93.7
0E7A:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
0E7C:  BCF    F93.3
0E7E:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0E80:  BCF    F93.4
0E82:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
0E84:  BCF    F93.5
0E86:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
0E88:  MOVLB  6
0E8A:  CLRF   x0C
0E8C:  MOVLW  C0
0E8E:  MOVWF  x0D
0E90:  MOVLB  0
0E92:  RCALL  0D22
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
0E94:  MOVLW  01
0E96:  MOVLB  6
0E98:  MOVWF  x0C
0E9A:  MOVLW  C0
0E9C:  MOVWF  x0D
0E9E:  MOVLB  0
0EA0:  RCALL  0D22
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
0EA2:  MOVLB  6
0EA4:  CLRF   x0C
0EA6:  MOVLW  40
0EA8:  MOVWF  x0D
0EAA:  MOVLB  0
0EAC:  RCALL  0D22
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
0EAE:  MOVLW  01
0EB0:  MOVLB  6
0EB2:  MOVWF  x0C
0EB4:  MOVLW  40
0EB6:  MOVWF  x0D
0EB8:  MOVLB  0
0EBA:  RCALL  0D22
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
0EBC:  MOVLB  6
0EBE:  CLRF   x0C
0EC0:  MOVLW  B8
0EC2:  MOVWF  x0D
0EC4:  MOVLB  0
0EC6:  RCALL  0D22
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
0EC8:  MOVLW  01
0ECA:  MOVLB  6
0ECC:  MOVWF  x0C
0ECE:  MOVLW  B8
0ED0:  MOVWF  x0D
0ED2:  MOVLB  0
0ED4:  RCALL  0D22
....................  
....................    if(mode == ON) 
0ED6:  MOVLB  5
0ED8:  DECFSZ xF6,W
0EDA:  BRA    0EFA
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
0EDC:  MOVLB  6
0EDE:  CLRF   x0C
0EE0:  MOVLW  3F
0EE2:  MOVWF  x0D
0EE4:  MOVLB  0
0EE6:  RCALL  0D22
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
0EE8:  MOVLW  01
0EEA:  MOVLB  6
0EEC:  MOVWF  x0C
0EEE:  MOVLW  3F
0EF0:  MOVWF  x0D
0EF2:  MOVLB  0
0EF4:  RCALL  0D22
....................    } 
....................    else 
0EF6:  BRA    0F14
0EF8:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
0EFA:  MOVLB  6
0EFC:  CLRF   x0C
0EFE:  MOVLW  3E
0F00:  MOVWF  x0D
0F02:  MOVLB  0
0F04:  RCALL  0D22
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
0F06:  MOVLW  01
0F08:  MOVLB  6
0F0A:  MOVWF  x0C
0F0C:  MOVLW  3E
0F0E:  MOVWF  x0D
0F10:  MOVLB  0
0F12:  RCALL  0D22
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
0F14:  MOVLB  5
0F16:  CLRF   xF7
0F18:  MOVLB  0
0F1A:  RCALL  0D62
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
0F1C:  RCALL  0DBC
....................    #endif 
.................... } 
0F1E:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
0DBC:  MOVLB  6
0DBE:  CLRF   x08
0DC0:  MOVLW  16
0DC2:  MOVWF  x07
....................    p2 = displayData.right; 
0DC4:  MOVLW  02
0DC6:  MOVWF  x0A
0DC8:  MOVLW  16
0DCA:  MOVWF  x09
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
0DCC:  CLRF   x05
0DCE:  MOVF   x05,W
0DD0:  SUBLW  07
0DD2:  BNC   0E70
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
0DD4:  BCF    F93.5
0DD6:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
0DD8:  CLRF   x0C
0DDA:  MOVLW  40
0DDC:  MOVWF  x0D
0DDE:  MOVLB  0
0DE0:  RCALL  0D22
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
0DE2:  MOVLW  01
0DE4:  MOVLB  6
0DE6:  MOVWF  x0C
0DE8:  MOVLW  40
0DEA:  MOVWF  x0D
0DEC:  MOVLB  0
0DEE:  RCALL  0D22
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
0DF0:  MOVLB  6
0DF2:  MOVF   x05,W
0DF4:  IORLW  B8
0DF6:  MOVWF  x0B
0DF8:  CLRF   x0C
0DFA:  MOVWF  x0D
0DFC:  MOVLB  0
0DFE:  RCALL  0D22
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
0E00:  MOVLB  6
0E02:  MOVF   x05,W
0E04:  IORLW  B8
0E06:  MOVWF  x0B
0E08:  MOVLW  01
0E0A:  MOVWF  x0C
0E0C:  MOVFF  60B,60D
0E10:  MOVLB  0
0E12:  RCALL  0D22
....................       output_high(GLCD_DI);                     // Set for data 
0E14:  BCF    F93.5
0E16:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
0E18:  MOVLB  6
0E1A:  CLRF   x06
0E1C:  MOVF   x06,W
0E1E:  SUBLW  3F
0E20:  BNC   0E6C
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
0E22:  MOVFF  608,03
0E26:  MOVF   x07,W
0E28:  INCF   x07,F
0E2A:  BTFSC  FD8.2
0E2C:  INCF   x08,F
0E2E:  MOVWF  FE9
0E30:  MOVFF  03,FEA
0E34:  MOVFF  FEF,60B
0E38:  CLRF   x0C
0E3A:  MOVFF  60B,60D
0E3E:  MOVLB  0
0E40:  RCALL  0D22
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
0E42:  MOVLB  6
0E44:  MOVFF  60A,03
0E48:  MOVF   x09,W
0E4A:  INCF   x09,F
0E4C:  BTFSC  FD8.2
0E4E:  INCF   x0A,F
0E50:  MOVWF  FE9
0E52:  MOVFF  03,FEA
0E56:  MOVFF  FEF,60B
0E5A:  MOVLW  01
0E5C:  MOVWF  x0C
0E5E:  MOVFF  60B,60D
0E62:  MOVLB  0
0E64:  RCALL  0D22
....................       } 
0E66:  MOVLB  6
0E68:  INCF   x06,F
0E6A:  BRA    0E1C
....................    } 
0E6C:  INCF   x05,F
0E6E:  BRA    0DCE
.................... } 
0E70:  MOVLB  0
0E72:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
0F20:  MOVLB  6
0F22:  CLRF   x29
0F24:  RRCF   x24,W
0F26:  MOVWF  x28
0F28:  RRCF   x28,F
0F2A:  RRCF   x28,F
0F2C:  MOVLW  1F
0F2E:  ANDWF  x28,F
....................    temp *= 64; 
0F30:  RLCF   x28,F
0F32:  RLCF   x29,F
0F34:  RLCF   x28,F
0F36:  RLCF   x29,F
0F38:  RLCF   x28,F
0F3A:  RLCF   x29,F
0F3C:  RLCF   x28,F
0F3E:  RLCF   x29,F
0F40:  RLCF   x28,F
0F42:  RLCF   x29,F
0F44:  RLCF   x28,F
0F46:  RLCF   x29,F
0F48:  MOVLW  C0
0F4A:  ANDWF  x28,F
....................    temp += x; 
0F4C:  MOVF   x23,W
0F4E:  ADDWF  x28,F
0F50:  MOVLW  00
0F52:  ADDWFC x29,F
....................  
....................    if(x > 63) 
0F54:  MOVF   x23,W
0F56:  SUBLW  3F
0F58:  BC    0F74
....................    { 
....................       p = displayData.right + temp - 64; 
0F5A:  MOVLW  16
0F5C:  ADDWF  x28,W
0F5E:  MOVWF  x2A
0F60:  MOVLW  02
0F62:  ADDWFC x29,W
0F64:  MOVWF  x2B
0F66:  MOVLW  40
0F68:  SUBWF  x2A,W
0F6A:  MOVWF  x26
0F6C:  MOVLW  00
0F6E:  SUBWFB x2B,W
0F70:  MOVWF  x27
....................    } 
....................    else 
0F72:  BRA    0F80
....................    { 
....................       p = displayData.left + temp; 
0F74:  MOVLW  16
0F76:  ADDWF  x28,W
0F78:  MOVWF  x26
0F7A:  MOVLW  00
0F7C:  ADDWFC x29,W
0F7E:  MOVWF  x27
....................    } 
....................  
....................    if(color) 
0F80:  MOVF   x25,F
0F82:  BZ    0FAE
....................    { 
....................       bit_set(*p, y%8); 
0F84:  MOVFF  627,03
0F88:  MOVFF  626,FE9
0F8C:  MOVFF  627,FEA
0F90:  MOVF   x24,W
0F92:  ANDLW  07
0F94:  MOVWF  x2A
0F96:  MOVLW  01
0F98:  MOVWF  00
0F9A:  MOVF   x2A,W
0F9C:  MOVWF  01
0F9E:  BZ    0FA8
0FA0:  BCF    FD8.0
0FA2:  RLCF   00,F
0FA4:  DECFSZ 01,F
0FA6:  BRA    0FA0
0FA8:  MOVF   00,W
0FAA:  IORWF  FEF,F
....................    } 
....................    else 
0FAC:  BRA    0FD8
....................    { 
....................       bit_clear(*p, y%8); 
0FAE:  MOVFF  627,03
0FB2:  MOVFF  626,FE9
0FB6:  MOVFF  627,FEA
0FBA:  MOVF   x24,W
0FBC:  ANDLW  07
0FBE:  MOVWF  x2A
0FC0:  MOVLW  01
0FC2:  MOVWF  00
0FC4:  MOVF   x2A,W
0FC6:  MOVWF  01
0FC8:  BZ    0FD2
0FCA:  BCF    FD8.0
0FCC:  RLCF   00,F
0FCE:  DECFSZ 01,F
0FD0:  BRA    0FCA
0FD2:  MOVF   00,W
0FD4:  XORLW  FF
0FD6:  ANDWF  FEF,F
....................    } 
.................... } 
0FD8:  MOVLB  0
0FDA:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
0D62:  MOVLB  5
0D64:  CLRF   xFA
0D66:  MOVLW  16
0D68:  MOVWF  xF9
....................    p2 = displayData.right; 
0D6A:  MOVLW  02
0D6C:  MOVWF  xFC
0D6E:  MOVLW  16
0D70:  MOVWF  xFB
....................    data = 0xFF * color; 
0D72:  MOVF   xF7,W
0D74:  MULLW  FF
0D76:  MOVFF  FF3,5F8
....................  
....................    for(i=0; i<512; ++i) 
0D7A:  CLRF   xFE
0D7C:  CLRF   xFD
0D7E:  MOVF   xFE,W
0D80:  SUBLW  01
0D82:  BNC   0DB8
....................    { 
....................       *p1++ = data; 
0D84:  MOVFF  5FA,03
0D88:  MOVF   xF9,W
0D8A:  INCF   xF9,F
0D8C:  BTFSC  FD8.2
0D8E:  INCF   xFA,F
0D90:  MOVWF  FE9
0D92:  MOVFF  03,FEA
0D96:  MOVFF  5F8,FEF
....................       *p2++ = data; 
0D9A:  MOVFF  5FC,03
0D9E:  MOVF   xFB,W
0DA0:  INCF   xFB,F
0DA2:  BTFSC  FD8.2
0DA4:  INCF   xFC,F
0DA6:  MOVWF  FE9
0DA8:  MOVFF  03,FEA
0DAC:  MOVFF  5F8,FEF
....................    } 
0DB0:  INCF   xFD,F
0DB2:  BTFSC  FD8.2
0DB4:  INCF   xFE,F
0DB6:  BRA    0D7E
.................... } 
0DB8:  MOVLB  0
0DBA:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0D22:  MOVLB  6
0D24:  MOVF   x0C,F
0D26:  BZ    0D2E
....................       output_high(GLCD_CS2); 
0D28:  BCF    F93.4
0D2A:  BSF    F8A.4
....................    else 
0D2C:  BRA    0D32
....................       output_high(GLCD_CS1); 
0D2E:  BCF    F93.3
0D30:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0D32:  BCF    F93.6
0D34:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
0D36:  CLRF   F95
0D38:  MOVFF  60D,F8C
....................    delay_cycles(50); 
0D3C:  MOVLW  10
0D3E:  MOVWF  00
0D40:  DECFSZ 00,F
0D42:  BRA    0D40
0D44:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0D46:  BCF    F93.7
0D48:  BSF    F8A.7
....................    delay_cycles(250); 
0D4A:  MOVLW  53
0D4C:  MOVWF  00
0D4E:  DECFSZ 00,F
0D50:  BRA    0D4E
....................    output_low(GLCD_E); 
0D52:  BCF    F93.7
0D54:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0D56:  BCF    F93.3
0D58:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0D5A:  BCF    F93.4
0D5C:  BCF    F8A.4
.................... } 
0D5E:  MOVLB  0
0D60:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
1194:  MOVLW  01
1196:  MOVLB  6
1198:  MOVWF  x1C
119A:  MOVWF  x1D
119C:  CLRF   x22
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
119E:  MOVF   x13,W
11A0:  SUBWF  x15,W
11A2:  MOVWF  x23
11A4:  MOVF   x23,W
11A6:  BTFSS  x23.7
11A8:  BRA    11B0
11AA:  MOVLW  00
11AC:  BSF    FD8.0
11AE:  SUBFWB x23,W
11B0:  CLRF   03
11B2:  MOVWF  x1A
11B4:  MOVFF  03,61B
....................    dy = abs((signed int8)(y2 - y1)); 
11B8:  MOVF   x14,W
11BA:  SUBWF  x16,W
11BC:  MOVWF  x23
11BE:  MOVF   x23,W
11C0:  BTFSS  x23.7
11C2:  BRA    11CA
11C4:  MOVLW  00
11C6:  BSF    FD8.0
11C8:  SUBFWB x23,W
11CA:  CLRF   03
11CC:  MOVWF  x18
11CE:  MOVFF  03,619
....................    #endif 
....................  
....................    if(x1 > x2) 
11D2:  MOVF   x13,W
11D4:  SUBWF  x15,W
11D6:  BC    11DC
....................       addx = -1; 
11D8:  MOVLW  FF
11DA:  MOVWF  x1C
....................    if(y1 > y2) 
11DC:  MOVF   x14,W
11DE:  SUBWF  x16,W
11E0:  BC    11E6
....................       addy = -1; 
11E2:  MOVLW  FF
11E4:  MOVWF  x1D
....................  
....................    if(dx >= dy) 
11E6:  MOVF   x19,W
11E8:  SUBWF  x1B,W
11EA:  BNC   1262
11EC:  BNZ   11F4
11EE:  MOVF   x18,W
11F0:  SUBWF  x1A,W
11F2:  BNC   1262
....................    { 
....................       dy *= 2; 
11F4:  BCF    FD8.0
11F6:  RLCF   x18,F
11F8:  RLCF   x19,F
....................       P = dy - dx; 
11FA:  MOVF   x1A,W
11FC:  SUBWF  x18,W
11FE:  MOVWF  00
1200:  MOVF   x1B,W
1202:  SUBWFB x19,W
1204:  MOVFF  00,61E
1208:  MOVWF  x1F
....................       diff = P - dx; 
120A:  MOVF   x1A,W
120C:  SUBWF  x1E,W
120E:  MOVWF  x20
1210:  MOVF   x1B,W
1212:  SUBWFB x1F,W
1214:  MOVWF  x21
....................  
....................       for(; i<=dx; ++i) 
1216:  MOVF   x1B,F
1218:  BNZ   1220
121A:  MOVF   x22,W
121C:  SUBWF  x1A,W
121E:  BNC   1260
....................       { 
....................          glcd_pixel(x1, y1, color); 
1220:  MOVFF  613,623
1224:  MOVFF  614,624
1228:  MOVFF  617,625
122C:  MOVLB  0
122E:  RCALL  0F20
....................  
....................          if(P < 0) 
1230:  MOVLB  6
1232:  BTFSC  x1F.7
1234:  BRA    1238
1236:  BRA    1248
....................          { 
....................             P  += dy; 
1238:  MOVF   x18,W
123A:  ADDWF  x1E,F
123C:  MOVF   x19,W
123E:  ADDWFC x1F,F
....................             x1 += addx; 
1240:  MOVF   x1C,W
1242:  ADDWF  x13,W
1244:  MOVWF  x13
....................          } 
....................          else 
1246:  BRA    125C
....................          { 
....................             P  += diff; 
1248:  MOVF   x20,W
124A:  ADDWF  x1E,F
124C:  MOVF   x21,W
124E:  ADDWFC x1F,F
....................             x1 += addx; 
1250:  MOVF   x1C,W
1252:  ADDWF  x13,W
1254:  MOVWF  x13
....................             y1 += addy; 
1256:  MOVF   x1D,W
1258:  ADDWF  x14,W
125A:  MOVWF  x14
....................          } 
....................       } 
125C:  INCF   x22,F
125E:  BRA    1216
....................    } 
....................    else 
1260:  BRA    12CE
....................    { 
....................       dx *= 2; 
1262:  BCF    FD8.0
1264:  RLCF   x1A,F
1266:  RLCF   x1B,F
....................       P = dx - dy; 
1268:  MOVF   x18,W
126A:  SUBWF  x1A,W
126C:  MOVWF  00
126E:  MOVF   x19,W
1270:  SUBWFB x1B,W
1272:  MOVFF  00,61E
1276:  MOVWF  x1F
....................       diff = P - dy; 
1278:  MOVF   x18,W
127A:  SUBWF  x1E,W
127C:  MOVWF  x20
127E:  MOVF   x19,W
1280:  SUBWFB x1F,W
1282:  MOVWF  x21
....................  
....................       for(; i<=dy; ++i) 
1284:  MOVF   x19,F
1286:  BNZ   128E
1288:  MOVF   x22,W
128A:  SUBWF  x18,W
128C:  BNC   12CE
....................       { 
....................          glcd_pixel(x1, y1, color); 
128E:  MOVFF  613,623
1292:  MOVFF  614,624
1296:  MOVFF  617,625
129A:  MOVLB  0
129C:  RCALL  0F20
....................  
....................          if(P < 0) 
129E:  MOVLB  6
12A0:  BTFSC  x1F.7
12A2:  BRA    12A6
12A4:  BRA    12B6
....................          { 
....................             P  += dx; 
12A6:  MOVF   x1A,W
12A8:  ADDWF  x1E,F
12AA:  MOVF   x1B,W
12AC:  ADDWFC x1F,F
....................             y1 += addy; 
12AE:  MOVF   x1D,W
12B0:  ADDWF  x14,W
12B2:  MOVWF  x14
....................          } 
....................          else 
12B4:  BRA    12CA
....................          { 
....................             P  += diff; 
12B6:  MOVF   x20,W
12B8:  ADDWF  x1E,F
12BA:  MOVF   x21,W
12BC:  ADDWFC x1F,F
....................             x1 += addx; 
12BE:  MOVF   x1C,W
12C0:  ADDWF  x13,W
12C2:  MOVWF  x13
....................             y1 += addy; 
12C4:  MOVF   x1D,W
12C6:  ADDWF  x14,W
12C8:  MOVWF  x14
....................          } 
....................       } 
12CA:  INCF   x22,F
12CC:  BRA    1284
....................    } 
.................... } 
12CE:  MOVLB  0
12D0:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
12D2:  MOVLB  6
12D4:  MOVF   x0C,F
12D6:  BZ    1334
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
12D8:  MOVF   x0A,W
12DA:  SUBWF  x08,W
12DC:  BC    12E8
....................       { 
....................          xmin = x1; 
12DE:  MOVFF  608,60F
....................          xmax = x2; 
12E2:  MOVFF  60A,610
....................       } 
....................       else 
12E6:  BRA    12F0
....................       { 
....................          xmin = x2; 
12E8:  MOVFF  60A,60F
....................          xmax = x1; 
12EC:  MOVFF  608,610
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
12F0:  MOVF   x0B,W
12F2:  SUBWF  x09,W
12F4:  BC    1300
....................       { 
....................          ymin = y1; 
12F6:  MOVFF  609,611
....................          ymax = y2; 
12FA:  MOVFF  60B,612
....................       } 
....................       else 
12FE:  BRA    1308
....................       { 
....................          ymin = y2; 
1300:  MOVFF  60B,611
....................          ymax = y1; 
1304:  MOVFF  609,612
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
1308:  MOVF   x0F,W
130A:  SUBWF  x10,W
130C:  BNC   1332
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
130E:  MOVFF  611,60E
1312:  MOVF   x0E,W
1314:  SUBWF  x12,W
1316:  BNC   132E
....................          { 
....................             glcd_pixel(xmin, i, color); 
1318:  MOVFF  60F,623
131C:  MOVFF  60E,624
1320:  MOVFF  60D,625
1324:  MOVLB  0
1326:  RCALL  0F20
....................          } 
1328:  MOVLB  6
132A:  INCF   x0E,F
132C:  BRA    1312
....................       } 
132E:  INCF   x0F,F
1330:  BRA    1308
....................    } 
....................    else 
1332:  BRA    1390
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
1334:  MOVFF  608,613
1338:  MOVFF  609,614
133C:  MOVFF  60A,615
1340:  MOVFF  609,616
1344:  MOVFF  60D,617
1348:  MOVLB  0
134A:  RCALL  1194
....................       glcd_line(x1, y2, x2, y2, color); 
134C:  MOVFF  608,613
1350:  MOVFF  60B,614
1354:  MOVFF  60A,615
1358:  MOVFF  60B,616
135C:  MOVFF  60D,617
1360:  RCALL  1194
....................       glcd_line(x1, y1, x1, y2, color); 
1362:  MOVFF  608,613
1366:  MOVFF  609,614
136A:  MOVFF  608,615
136E:  MOVFF  60B,616
1372:  MOVFF  60D,617
1376:  RCALL  1194
....................       glcd_line(x2, y1, x2, y2, color); 
1378:  MOVFF  60A,613
137C:  MOVFF  609,614
1380:  MOVFF  60A,615
1384:  MOVFF  60B,616
1388:  MOVFF  60D,617
138C:  RCALL  1194
138E:  MOVLB  6
....................    } 
.................... } 
1390:  MOVLB  0
1392:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
1F74:  MOVLB  5
1F76:  CLRF   xFB
....................    b = radius; 
1F78:  MOVFF  5F8,5FC
....................    P = 1 - radius; 
1F7C:  MOVLW  01
1F7E:  BSF    FD8.0
1F80:  SUBFWB xF8,W
1F82:  MOVWF  xFD
....................  
....................    do 
....................    { 
....................       if(fill) 
1F84:  MOVF   xF9,F
1F86:  BZ    206A
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
1F88:  MOVF   xFB,W
1F8A:  SUBWF  xF6,W
1F8C:  MOVWF  xFE
1F8E:  MOVF   xFC,W
1F90:  ADDWF  xF7,W
1F92:  MOVWF  xFF
1F94:  MOVF   xFB,W
1F96:  ADDWF  xF6,W
1F98:  MOVLB  6
1F9A:  MOVWF  x00
1F9C:  MOVLB  5
1F9E:  MOVF   xFC,W
1FA0:  ADDWF  xF7,W
1FA2:  MOVLB  6
1FA4:  MOVWF  x01
1FA6:  MOVFF  5FE,613
1FAA:  MOVFF  5FF,614
1FAE:  MOVFF  600,615
1FB2:  MOVWF  x16
1FB4:  MOVFF  5FA,617
1FB8:  MOVLB  0
1FBA:  CALL   1194
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
1FBE:  MOVLB  5
1FC0:  MOVF   xFB,W
1FC2:  SUBWF  xF6,W
1FC4:  MOVWF  xFE
1FC6:  MOVF   xFC,W
1FC8:  SUBWF  xF7,W
1FCA:  MOVWF  xFF
1FCC:  MOVF   xFB,W
1FCE:  ADDWF  xF6,W
1FD0:  MOVLB  6
1FD2:  MOVWF  x00
1FD4:  MOVLB  5
1FD6:  MOVF   xFC,W
1FD8:  SUBWF  xF7,W
1FDA:  MOVLB  6
1FDC:  MOVWF  x01
1FDE:  MOVFF  5FE,613
1FE2:  MOVFF  5FF,614
1FE6:  MOVFF  600,615
1FEA:  MOVWF  x16
1FEC:  MOVFF  5FA,617
1FF0:  MOVLB  0
1FF2:  CALL   1194
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
1FF6:  MOVLB  5
1FF8:  MOVF   xFC,W
1FFA:  SUBWF  xF6,W
1FFC:  MOVWF  xFE
1FFE:  MOVF   xFB,W
2000:  ADDWF  xF7,W
2002:  MOVWF  xFF
2004:  MOVF   xFC,W
2006:  ADDWF  xF6,W
2008:  MOVLB  6
200A:  MOVWF  x00
200C:  MOVLB  5
200E:  MOVF   xFB,W
2010:  ADDWF  xF7,W
2012:  MOVLB  6
2014:  MOVWF  x01
2016:  MOVFF  5FE,613
201A:  MOVFF  5FF,614
201E:  MOVFF  600,615
2022:  MOVWF  x16
2024:  MOVFF  5FA,617
2028:  MOVLB  0
202A:  CALL   1194
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
202E:  MOVLB  5
2030:  MOVF   xFC,W
2032:  SUBWF  xF6,W
2034:  MOVWF  xFE
2036:  MOVF   xFB,W
2038:  SUBWF  xF7,W
203A:  MOVWF  xFF
203C:  MOVF   xFC,W
203E:  ADDWF  xF6,W
2040:  MOVLB  6
2042:  MOVWF  x00
2044:  MOVLB  5
2046:  MOVF   xFB,W
2048:  SUBWF  xF7,W
204A:  MOVLB  6
204C:  MOVWF  x01
204E:  MOVFF  5FE,613
2052:  MOVFF  5FF,614
2056:  MOVFF  600,615
205A:  MOVWF  x16
205C:  MOVFF  5FA,617
2060:  MOVLB  0
2062:  CALL   1194
....................       } 
....................       else 
2066:  BRA    2168
2068:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
206A:  MOVF   xF6,W
206C:  ADDWF  xFB,W
206E:  MOVWF  xFE
2070:  MOVF   xF7,W
2072:  ADDWF  xFC,W
2074:  MOVWF  xFF
2076:  MOVFF  5FE,623
207A:  MOVFF  FE8,624
207E:  MOVFF  5FA,625
2082:  MOVLB  0
2084:  CALL   0F20
....................          glcd_pixel(b+x, a+y, color); 
2088:  MOVLB  5
208A:  MOVF   xF6,W
208C:  ADDWF  xFC,W
208E:  MOVWF  xFE
2090:  MOVF   xF7,W
2092:  ADDWF  xFB,W
2094:  MOVWF  xFF
2096:  MOVFF  5FE,623
209A:  MOVFF  FE8,624
209E:  MOVFF  5FA,625
20A2:  MOVLB  0
20A4:  CALL   0F20
....................          glcd_pixel(x-a, b+y, color); 
20A8:  MOVLB  5
20AA:  MOVF   xFB,W
20AC:  SUBWF  xF6,W
20AE:  MOVWF  xFE
20B0:  MOVF   xF7,W
20B2:  ADDWF  xFC,W
20B4:  MOVWF  xFF
20B6:  MOVFF  5FE,623
20BA:  MOVFF  FE8,624
20BE:  MOVFF  5FA,625
20C2:  MOVLB  0
20C4:  CALL   0F20
....................          glcd_pixel(x-b, a+y, color); 
20C8:  MOVLB  5
20CA:  MOVF   xFC,W
20CC:  SUBWF  xF6,W
20CE:  MOVWF  xFE
20D0:  MOVF   xF7,W
20D2:  ADDWF  xFB,W
20D4:  MOVWF  xFF
20D6:  MOVFF  5FE,623
20DA:  MOVFF  FE8,624
20DE:  MOVFF  5FA,625
20E2:  MOVLB  0
20E4:  CALL   0F20
....................          glcd_pixel(b+x, y-a, color); 
20E8:  MOVLB  5
20EA:  MOVF   xF6,W
20EC:  ADDWF  xFC,W
20EE:  MOVWF  xFE
20F0:  MOVF   xFB,W
20F2:  SUBWF  xF7,W
20F4:  MOVWF  xFF
20F6:  MOVFF  5FE,623
20FA:  MOVFF  FE8,624
20FE:  MOVFF  5FA,625
2102:  MOVLB  0
2104:  CALL   0F20
....................          glcd_pixel(a+x, y-b, color); 
2108:  MOVLB  5
210A:  MOVF   xF6,W
210C:  ADDWF  xFB,W
210E:  MOVWF  xFE
2110:  MOVF   xFC,W
2112:  SUBWF  xF7,W
2114:  MOVWF  xFF
2116:  MOVFF  5FE,623
211A:  MOVFF  FE8,624
211E:  MOVFF  5FA,625
2122:  MOVLB  0
2124:  CALL   0F20
....................          glcd_pixel(x-a, y-b, color); 
2128:  MOVLB  5
212A:  MOVF   xFB,W
212C:  SUBWF  xF6,W
212E:  MOVWF  xFE
2130:  MOVF   xFC,W
2132:  SUBWF  xF7,W
2134:  MOVWF  xFF
2136:  MOVFF  5FE,623
213A:  MOVFF  FE8,624
213E:  MOVFF  5FA,625
2142:  MOVLB  0
2144:  CALL   0F20
....................          glcd_pixel(x-b, y-a, color); 
2148:  MOVLB  5
214A:  MOVF   xFC,W
214C:  SUBWF  xF6,W
214E:  MOVWF  xFE
2150:  MOVF   xFB,W
2152:  SUBWF  xF7,W
2154:  MOVWF  xFF
2156:  MOVFF  5FE,623
215A:  MOVFF  FE8,624
215E:  MOVFF  5FA,625
2162:  MOVLB  0
2164:  CALL   0F20
....................       } 
....................  
....................       if(P < 0) 
2168:  MOVLB  5
216A:  BTFSC  xFD.7
216C:  BRA    2170
216E:  BRA    218C
....................          P += 3 + 2 * a++; 
2170:  MOVF   xFB,W
2172:  INCF   xFB,F
2174:  MOVWF  xFE
2176:  MOVLW  02
2178:  MOVWF  xFF
217A:  MOVFF  5FE,600
217E:  MOVLB  0
2180:  RCALL  1F24
2182:  MOVF   01,W
2184:  ADDLW  03
2186:  MOVLB  5
2188:  ADDWF  xFD,F
....................       else 
218A:  BRA    21AE
....................          P += 5 + 2 * (a++ - b--); 
218C:  MOVF   xFB,W
218E:  INCF   xFB,F
2190:  MOVWF  xFE
2192:  MOVF   xFC,W
2194:  DECF   xFC,F
2196:  SUBWF  xFE,W
2198:  MOVWF  xFE
219A:  MOVLW  02
219C:  MOVWF  xFF
219E:  MOVFF  5FE,600
21A2:  MOVLB  0
21A4:  RCALL  1F24
21A6:  MOVF   01,W
21A8:  ADDLW  05
21AA:  MOVLB  5
21AC:  ADDWF  xFD,F
....................     } while(a <= b); 
21AE:  MOVF   xFB,W
21B0:  XORLW  80
21B2:  MOVWF  00
21B4:  MOVF   xFC,W
21B6:  XORLW  80
21B8:  SUBWF  00,W
21BA:  BTFSC  FD8.2
21BC:  BRA    1F84
21BE:  BTFSS  FD8.0
21C0:  BRA    1F84
.................... } 
21C2:  MOVLB  0
21C4:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
0FDC:  MOVFF  60A,03
0FE0:  MOVLB  6
0FE2:  MOVFF  609,FE9
0FE6:  MOVFF  60A,FEA
0FEA:  MOVF   FEF,F
0FEC:  BTFSC  FD8.2
0FEE:  BRA    1190
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
0FF0:  MOVFF  60A,03
0FF4:  MOVFF  609,FE9
0FF8:  MOVFF  60A,FEA
0FFC:  MOVF   FEF,W
0FFE:  SUBLW  52
1000:  BNC   1050
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
1002:  MOVFF  60A,03
1006:  MOVFF  609,FE9
100A:  MOVFF  60A,FEA
100E:  MOVLW  20
1010:  SUBWF  FEF,W
1012:  MULLW  05
1014:  MOVF   FF3,W
1016:  CLRF   03
1018:  MOVWF  x16
101A:  MOVLW  06
101C:  MOVWF  FEA
101E:  MOVLW  11
1020:  MOVWF  FE9
1022:  CLRF   x1A
1024:  MOVFF  616,619
1028:  MOVFF  FF2,617
102C:  BCF    FF2.7
102E:  MOVLW  05
1030:  MOVWF  01
1032:  CLRF   FF7
1034:  MOVF   x16,W
1036:  MOVLB  0
1038:  CALL   0096
103C:  TBLRD*-
103E:  TBLRD*+
1040:  MOVFF  FF5,FEE
1044:  DECFSZ 01,F
1046:  BRA    103E
1048:  MOVLB  6
104A:  BTFSC  x17.7
104C:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
104E:  BRA    10BA
1050:  MOVFF  60A,03
1054:  MOVFF  609,FE9
1058:  MOVFF  60A,FEA
105C:  MOVF   FEF,W
105E:  SUBLW  7E
1060:  BNC   10B0
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
1062:  MOVFF  60A,03
1066:  MOVFF  609,FE9
106A:  MOVFF  60A,FEA
106E:  MOVLW  53
1070:  SUBWF  FEF,W
1072:  MULLW  05
1074:  MOVF   FF3,W
1076:  CLRF   03
1078:  MOVWF  x16
107A:  MOVLW  06
107C:  MOVWF  FEA
107E:  MOVLW  11
1080:  MOVWF  FE9
1082:  CLRF   x1A
1084:  MOVFF  616,619
1088:  MOVFF  FF2,617
108C:  BCF    FF2.7
108E:  MOVLW  05
1090:  MOVWF  01
1092:  CLRF   FF7
1094:  MOVF   x16,W
1096:  MOVLB  0
1098:  CALL   01B0
109C:  TBLRD*-
109E:  TBLRD*+
10A0:  MOVFF  FF5,FEE
10A4:  DECFSZ 01,F
10A6:  BRA    109E
10A8:  MOVLB  6
10AA:  BTFSC  x17.7
10AC:  BSF    FF2.7
....................       else 
10AE:  BRA    10BA
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
10B0:  CLRF   x11
10B2:  CLRF   x12
10B4:  CLRF   x13
10B6:  CLRF   x14
10B8:  CLRF   x15
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
10BA:  MOVFF  60A,03
10BE:  MOVF   x09,W
10C0:  MOVWF  FE9
10C2:  MOVFF  03,FEA
10C6:  MOVF   FEF,W
10C8:  XORLW  0A
10CA:  MOVLB  0
10CC:  BZ    10D4
10CE:  XORLW  07
10D0:  BZ    10E4
10D2:  BRA    10EA
....................          case '\n': 
....................             y += 7*size + 1; 
10D4:  MOVLB  6
10D6:  MOVF   x0B,W
10D8:  MULLW  07
10DA:  MOVF   FF3,W
10DC:  ADDLW  01
10DE:  ADDWF  x08,F
....................             continue; 
10E0:  BRA    1182
10E2:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
10E4:  MOVLB  6
10E6:  CLRF   x07
....................             continue; 
10E8:  BRA    1182
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
10EA:  MOVLB  6
10EC:  MOVF   x0B,W
10EE:  MULLW  05
10F0:  MOVF   FF3,W
10F2:  ADDWF  x07,W
10F4:  SUBLW  7F
10F6:  BC    1104
....................       { 
....................          x = 0;                           // Set x at far left position 
10F8:  CLRF   x07
....................          y += 7*size + 1;                 // Set y at next position down 
10FA:  MOVF   x0B,W
10FC:  MULLW  07
10FE:  MOVF   FF3,W
1100:  ADDLW  01
1102:  ADDWF  x08,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
1104:  CLRF   x0D
1106:  MOVF   x0D,W
1108:  SUBLW  04
110A:  BNC   1182
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
110C:  CLRF   x0E
110E:  MOVF   x0E,W
1110:  SUBLW  06
1112:  BNC   117A
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
1114:  CLRF   03
1116:  MOVF   x0D,W
1118:  ADDLW  11
111A:  MOVWF  FE9
111C:  MOVLW  06
111E:  ADDWFC 03,W
1120:  MOVWF  FEA
1122:  MOVFF  FEF,616
1126:  MOVFF  616,00
112A:  MOVF   x0E,W
112C:  MOVWF  01
112E:  BZ    1138
1130:  BCF    FD8.0
1132:  RRCF   00,F
1134:  DECFSZ 01,F
1136:  BRA    1130
1138:  BTFSS  00.0
113A:  BRA    1176
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
113C:  CLRF   x0F
113E:  MOVF   x0B,W
1140:  SUBWF  x0F,W
1142:  BC    1176
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
1144:  CLRF   x10
1146:  MOVF   x0B,W
1148:  SUBWF  x10,W
114A:  BC    1172
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
114C:  MOVF   x10,W
114E:  ADDWF  x07,W
1150:  MOVWF  x16
1152:  MOVF   x0E,W
1154:  MULWF  x0B
1156:  MOVF   FF3,W
1158:  ADDWF  x08,W
115A:  ADDWF  x0F,W
115C:  MOVWF  x17
115E:  MOVFF  616,623
1162:  MOVWF  x24
1164:  MOVFF  60C,625
1168:  MOVLB  0
116A:  RCALL  0F20
....................                   } 
116C:  MOVLB  6
116E:  INCF   x10,F
1170:  BRA    1146
....................                } 
1172:  INCF   x0F,F
1174:  BRA    113E
....................             } 
....................          } 
1176:  INCF   x0E,F
1178:  BRA    110E
....................       } 
117A:  INCF   x0D,F
117C:  MOVF   x0B,W
117E:  ADDWF  x07,F
1180:  BRA    1106
....................    } 
1182:  INCF   x09,F
1184:  BTFSC  FD8.2
1186:  INCF   x0A,F
1188:  INCF   x07,F
118A:  MOVLB  0
118C:  BRA    0FDC
118E:  MOVLB  6
.................... } 
1190:  MOVLB  0
1192:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Horno [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x00, 0x00, 0x0E, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x02, 0x00, 0x0E, 
.................... 0x60, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x05, 0x00, 0x0E, 
.................... 0x70, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x02, 0x00, 0x0E, 
.................... 0x60, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xE1, 0xC0, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x01, 0x80, 0x60, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x78, 0x10, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x06, 0x7C, 0x18, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0x7C, 0x08, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x3C, 0x04, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x10, 0x04, 0x0E, 
.................... 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x0C, 0xE4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x2D, 0xF4, 0x0E, 
.................... 0x02, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x63, 0xF4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0xF1, 0xE4, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x70, 0x10, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x30, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xC0, 0xC0, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x7F, 0x80, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
.................... // Definición de teclado - NO 
.................... #define   UP            input(PIN_A5) 
.................... #define   DOWN          input(PIN_E0) 
.................... #define   RIGHT         input(PIN_E1) 
.................... #define   LEFT          input(PIN_E2) 
....................  
.................... //#define   DOOR          input(PIN_A3) 
.................... #define   TERM          input(PIN_A4) 
....................  
.................... // Definición de Salidas 
.................... #define   Resistencia_on     output_bit(PIN_C0,1) 
.................... #define   Resistencia_off    output_bit(PIN_C0,0) 
.................... #define   Resistencia2_on    output_bit(PIN_C2,1) 
.................... #define   Resistencia2_off   output_bit(PIN_C2,0) 
.................... #define   Ventilador_on      output_bit(PIN_C1,1) 
.................... #define   Ventilador_off     output_bit(PIN_C1,0) 
.................... #define   Libre1_on          output_bit(PIN_C6,1) 
.................... #define   Libre1_off         output_bit(PIN_C6,0) 
.................... #define   Libre2_on          output_bit(PIN_C7,1) 
.................... #define   Libre2_off         output_bit(PIN_C7,0) 
.................... #define   Libre3_on          output_bit(PIN_B0,1) 
.................... #define   Libre3_off         output_bit(PIN_B0,0) 
.................... #define   Libre4_on          output_bit(PIN_B1,1) 
.................... #define   Libre4_off         output_bit(PIN_B1,0) 
....................  
.................... float promedio[80]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float X[2]={0.0,0.0}; 
.................... int8 h=0,l=0,Ajuste=0,Ajusten=0,MediaMovil=60,tiemporecta=0,tiempoventilador=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,visual=1,Lectura=0,estado_ventilador=0; 
.................... short flag_clear=0,flag_clear2=0,flag_clear3=0,flag_clear4=0,flag_tiempocalentamiento=0,flag_display=0,flag_setpoint=0,flag_control=0; 
.................... int8 y=0,tiemporeset=0,flag_ventilador=0; 
.................... int8 Menu=0, unidad=1,i=0,Pausa=0,Pausa_ant=0,TiempoControl=0; 
.................... int8 Setpoint=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,tinicio=0,tiempocalentamiento=0,tiemposetpoint=0,Puerta=0; 
.................... float Potencia=0.0,Tpulsomin=0.0,Gananciamax=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float V0=0.0,R1=10000.0,Pt,Tciclo=5.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=1.0,desvio=0.0,Coeficiente=35.0; 
.................... float Aumento=0.0,Temperatura=0.0; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void ActualizaRecta(){ 
....................    X[y]=Temperatura; 
*
26F0:  MOVLB  5
26F2:  MOVF   x67,W
26F4:  MULLW  04
26F6:  MOVF   FF3,W
26F8:  CLRF   03
26FA:  ADDLW  56
26FC:  MOVWF  FE9
26FE:  MOVLW  05
2700:  ADDWFC 03,W
2702:  MOVWF  FEA
2704:  MOVFF  5D2,FEF
2708:  MOVFF  5D3,FEC
270C:  MOVFF  5D4,FEC
2710:  MOVFF  5D5,FEC
....................    y++; 
2714:  INCF   x67,F
....................    if(y>=2) 
2716:  MOVF   x67,W
2718:  SUBLW  01
271A:  BC    2758
....................    { 
....................       y=0; 
271C:  CLRF   x67
....................       Aumento=X[1]-X[0]; 
271E:  BSF    FD8.1
2720:  MOVFF  55D,5FE
2724:  MOVFF  55C,5FD
2728:  MOVFF  55B,5FC
272C:  MOVFF  55A,5FB
2730:  MOVFF  559,602
2734:  MOVFF  558,601
2738:  MOVFF  557,600
273C:  MOVFF  556,5FF
2740:  MOVLB  0
2742:  CALL   18A6
2746:  MOVFF  03,5D1
274A:  MOVFF  02,5D0
274E:  MOVFF  01,5CF
2752:  MOVFF  00,5CE
2756:  MOVLB  5
....................    } 
.................... } 
2758:  MOVLB  0
275A:  GOTO   27A6 (RETURN)
....................  
.................... // Funcion para conversor analogo-digital 
.................... float sensores(int x){ 
.................... float y;set_adc_channel(x);delay_ms(1);y=read_adc();return (y); 
*
16D2:  MOVLB  5
16D4:  RLCF   xF7,W
16D6:  MOVWF  00
16D8:  RLCF   00,F
16DA:  MOVLW  FC
16DC:  ANDWF  00,F
16DE:  MOVFF  00,01
16E2:  MOVF   FC2,W
16E4:  ANDLW  C3
16E6:  IORWF  00,W
16E8:  MOVWF  FC2
16EA:  MOVLW  01
16EC:  MOVWF  xFC
16EE:  MOVLB  0
16F0:  CALL   0CF8
16F4:  BSF    FC2.1
16F6:  BTFSC  FC2.1
16F8:  BRA    16F6
16FA:  MOVFF  FC4,5FD
16FE:  MOVFF  FC3,5FC
1702:  MOVLB  0
1704:  RCALL  169C
1706:  MOVFF  03,5FB
170A:  MOVFF  02,5FA
170E:  MOVFF  01,5F9
1712:  MOVFF  00,5F8
1716:  MOVFF  5F8,00
171A:  MOVFF  5F9,01
171E:  MOVFF  5FA,02
1722:  MOVFF  5FB,03
.................... } 
1726:  RETLW  00
.................... float Leer_Sensor(int media) 
.................... { 
....................    Prom=0.0; 
*
1B50:  MOVLB  5
1B52:  CLRF   xB9
1B54:  CLRF   xB8
1B56:  CLRF   xB7
1B58:  CLRF   xB6
....................    V0 = sensores(0);   //Lectura de Divisor de Voltaje de PT100 con resistencia de 6.18k (+-2%) 
1B5A:  CLRF   xF7
1B5C:  MOVLB  0
1B5E:  RCALL  16D2
1B60:  MOVFF  03,5A1
1B64:  MOVFF  02,5A0
1B68:  MOVFF  01,59F
1B6C:  MOVFF  00,59E
....................    V0 = V0/49.9; // Se elimina la ganancia 
1B70:  MOVFF  5A1,5FE
1B74:  MOVFF  5A0,5FD
1B78:  MOVFF  59F,5FC
1B7C:  MOVFF  59E,5FB
1B80:  MOVLW  9A
1B82:  MOVLB  6
1B84:  MOVWF  x02
1B86:  MOVLW  99
1B88:  MOVWF  x01
1B8A:  MOVLW  47
1B8C:  MOVWF  x00
1B8E:  MOVLW  84
1B90:  MOVLB  5
1B92:  MOVWF  xFF
1B94:  MOVLB  0
1B96:  RCALL  1728
1B98:  MOVFF  03,5A1
1B9C:  MOVFF  02,5A0
1BA0:  MOVFF  01,59F
1BA4:  MOVFF  00,59E
....................    Pt=(R1)/((1023.0/V0)-1.0); // Se calcula el valor de la PT100 
1BA8:  MOVLB  5
1BAA:  CLRF   xFE
1BAC:  MOVLW  C0
1BAE:  MOVWF  xFD
1BB0:  MOVLW  7F
1BB2:  MOVWF  xFC
1BB4:  MOVLW  88
1BB6:  MOVWF  xFB
1BB8:  MOVFF  5A1,602
1BBC:  MOVFF  5A0,601
1BC0:  MOVFF  59F,600
1BC4:  MOVFF  59E,5FF
1BC8:  MOVLB  0
1BCA:  RCALL  1728
1BCC:  MOVFF  00,5F7
1BD0:  MOVFF  01,5F8
1BD4:  MOVFF  02,5F9
1BD8:  MOVFF  03,5FA
1BDC:  BSF    FD8.1
1BDE:  MOVFF  03,5FE
1BE2:  MOVFF  02,5FD
1BE6:  MOVFF  01,5FC
1BEA:  MOVFF  00,5FB
1BEE:  MOVLB  6
1BF0:  CLRF   x02
1BF2:  CLRF   x01
1BF4:  CLRF   x00
1BF6:  MOVLW  7F
1BF8:  MOVLB  5
1BFA:  MOVWF  xFF
1BFC:  MOVLB  0
1BFE:  RCALL  18A6
1C00:  MOVFF  5A5,5FE
1C04:  MOVFF  5A4,5FD
1C08:  MOVFF  5A3,5FC
1C0C:  MOVFF  5A2,5FB
1C10:  MOVFF  03,602
1C14:  MOVFF  02,601
1C18:  MOVFF  01,600
1C1C:  MOVFF  00,5FF
1C20:  RCALL  1728
1C22:  MOVFF  03,5A9
1C26:  MOVFF  02,5A8
1C2A:  MOVFF  01,5A7
1C2E:  MOVFF  00,5A6
....................    //Pt=R1/((1023.0/V0)-1.0); // Se calcula el valor de la PT100 
....................    //Pt=Pt-0.5; 
....................     
....................              
....................    if(l>(media-1)) 
1C32:  MOVLW  01
1C34:  MOVLB  5
1C36:  SUBWF  xF6,W
1C38:  SUBWF  x5F,W
1C3A:  BZ    1C40
1C3C:  BNC   1C40
....................    {l=0;} 
1C3E:  CLRF   x5F
....................    //promedio[l]=Temperature;l++; 
....................    promedio[l]=Pt;l++; 
1C40:  CLRF   xFB
1C42:  MOVFF  55F,5FA
1C46:  CLRF   xFD
1C48:  MOVLW  04
1C4A:  MOVWF  xFC
1C4C:  MOVLB  0
1C4E:  RCALL  1B2E
1C50:  MOVF   01,W
1C52:  ADDLW  16
1C54:  MOVWF  FE9
1C56:  MOVLW  04
1C58:  ADDWFC 02,W
1C5A:  MOVWF  FEA
1C5C:  MOVFF  5A6,FEF
1C60:  MOVFF  5A7,FEC
1C64:  MOVFF  5A8,FEC
1C68:  MOVFF  5A9,FEC
1C6C:  MOVLB  5
1C6E:  INCF   x5F,F
....................           
....................    for(h=0;h<media;h++) 
1C70:  CLRF   x5E
1C72:  MOVF   xF6,W
1C74:  SUBWF  x5E,W
1C76:  BC    1CF2
....................    { 
....................       Prom+=promedio[h]; 
1C78:  CLRF   xFB
1C7A:  MOVFF  55E,5FA
1C7E:  CLRF   xFD
1C80:  MOVLW  04
1C82:  MOVWF  xFC
1C84:  MOVLB  0
1C86:  RCALL  1B2E
1C88:  MOVFF  02,03
1C8C:  MOVF   01,W
1C8E:  ADDLW  16
1C90:  MOVWF  FE9
1C92:  MOVLW  04
1C94:  ADDWFC 02,W
1C96:  MOVWF  FEA
1C98:  MOVFF  FEF,00
1C9C:  MOVFF  FEC,01
1CA0:  MOVFF  FEC,02
1CA4:  MOVFF  FEC,03
1CA8:  MOVFF  FEA,5F8
1CAC:  MOVFF  FE9,5F7
1CB0:  BCF    FD8.1
1CB2:  MOVFF  5B9,5FE
1CB6:  MOVFF  5B8,5FD
1CBA:  MOVFF  5B7,5FC
1CBE:  MOVFF  5B6,5FB
1CC2:  MOVFF  03,602
1CC6:  MOVFF  02,601
1CCA:  MOVFF  01,600
1CCE:  MOVFF  00,5FF
1CD2:  RCALL  18A6
1CD4:  MOVFF  5F8,FEA
1CD8:  MOVFF  5F7,FE9
1CDC:  MOVFF  03,5B9
1CE0:  MOVFF  02,5B8
1CE4:  MOVFF  01,5B7
1CE8:  MOVFF  00,5B6
....................    }  
1CEC:  MOVLB  5
1CEE:  INCF   x5E,F
1CF0:  BRA    1C72
....................    Prom=Prom/media;    
1CF2:  CLRF   xFD
1CF4:  MOVFF  5F6,5FC
1CF8:  MOVLB  0
1CFA:  RCALL  169C
1CFC:  MOVFF  5B9,5FE
1D00:  MOVFF  5B8,5FD
1D04:  MOVFF  5B7,5FC
1D08:  MOVFF  5B6,5FB
1D0C:  MOVFF  03,602
1D10:  MOVFF  02,601
1D14:  MOVFF  01,600
1D18:  MOVFF  00,5FF
1D1C:  RCALL  1728
1D1E:  MOVFF  03,5B9
1D22:  MOVFF  02,5B8
1D26:  MOVFF  01,5B7
1D2A:  MOVFF  00,5B6
....................    Temperature=(Prom-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
1D2E:  BSF    FD8.1
1D30:  MOVFF  5B9,5FE
1D34:  MOVFF  5B8,5FD
1D38:  MOVFF  5B7,5FC
1D3C:  MOVFF  5B6,5FB
1D40:  MOVLB  6
1D42:  CLRF   x02
1D44:  CLRF   x01
1D46:  MOVLW  48
1D48:  MOVWF  x00
1D4A:  MOVLW  85
1D4C:  MOVLB  5
1D4E:  MOVWF  xFF
1D50:  MOVLB  0
1D52:  RCALL  18A6
1D54:  MOVFF  00,5F7
1D58:  MOVFF  01,5F8
1D5C:  MOVFF  02,5F9
1D60:  MOVFF  03,5FA
1D64:  MOVFF  03,5FE
1D68:  MOVFF  02,5FD
1D6C:  MOVFF  01,5FC
1D70:  MOVFF  00,5FB
1D74:  MOVLW  B8
1D76:  MOVLB  6
1D78:  MOVWF  x02
1D7A:  MOVLW  1E
1D7C:  MOVWF  x01
1D7E:  MOVLW  45
1D80:  MOVWF  x00
1D82:  MOVLW  7D
1D84:  MOVLB  5
1D86:  MOVWF  xFF
1D88:  MOVLB  0
1D8A:  RCALL  1728
1D8C:  MOVFF  03,5BD
1D90:  MOVFF  02,5BC
1D94:  MOVFF  01,5BB
1D98:  MOVFF  00,5BA
....................    //Temperature=(Pt-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio. 
....................     
....................    Temperature+=((float)Ajuste-(float)Ajusten); 
1D9C:  MOVLB  5
1D9E:  CLRF   xFD
1DA0:  MOVFF  560,5FC
1DA4:  MOVLB  0
1DA6:  RCALL  169C
1DA8:  MOVFF  00,5F7
1DAC:  MOVFF  01,5F8
1DB0:  MOVFF  02,5F9
1DB4:  MOVFF  03,5FA
1DB8:  MOVLB  5
1DBA:  CLRF   xFD
1DBC:  MOVFF  561,5FC
1DC0:  MOVLB  0
1DC2:  RCALL  169C
1DC4:  BSF    FD8.1
1DC6:  MOVFF  5FA,5FE
1DCA:  MOVFF  5F9,5FD
1DCE:  MOVFF  5F8,5FC
1DD2:  MOVFF  5F7,5FB
1DD6:  MOVFF  03,602
1DDA:  MOVFF  02,601
1DDE:  MOVFF  01,600
1DE2:  MOVFF  00,5FF
1DE6:  RCALL  18A6
1DE8:  BCF    FD8.1
1DEA:  MOVFF  5BD,5FE
1DEE:  MOVFF  5BC,5FD
1DF2:  MOVFF  5BB,5FC
1DF6:  MOVFF  5BA,5FB
1DFA:  MOVFF  03,602
1DFE:  MOVFF  02,601
1E02:  MOVFF  01,600
1E06:  MOVFF  00,5FF
1E0A:  RCALL  18A6
1E0C:  MOVFF  03,5BD
1E10:  MOVFF  02,5BC
1E14:  MOVFF  01,5BB
1E18:  MOVFF  00,5BA
....................     
....................    //return Prom; 
....................    return Temperature; 
1E1C:  MOVFF  5BA,00
1E20:  MOVFF  5BB,01
1E24:  MOVFF  5BC,02
1E28:  MOVFF  5BD,03
.................... } 
1E2C:  RETLW  00
....................  
.................... void Controla(){ 
.................... //-------------------------------Control de Calentamiento------------------------------------------------------------//          
....................    if(tiemporecta>=20) 
*
279A:  MOVLB  5
279C:  MOVF   x63,W
279E:  SUBLW  13
27A0:  BC    27AA
....................    { 
....................       ActualizaRecta(); 
27A2:  MOVLB  0
27A4:  BRA    26F0
....................       tiemporecta=0; 
27A6:  MOVLB  5
27A8:  CLRF   x63
....................    } 
....................     
....................    if(tiemposetpoint>600) 
27AA:  MOVF   x7F,W
27AC:  SUBLW  01
27AE:  BC    27BC
27B0:  XORLW  FF
27B2:  BNZ   27BA
27B4:  MOVF   x7E,W
27B6:  SUBLW  58
27B8:  BC    27BC
....................    { 
....................       flag_control=1; 
27BA:  BSF    x66.5
....................    } 
....................     
....................    if(flag_ventilador==0) 
27BC:  MOVF   x69,F
27BE:  BNZ   27C6
....................    { 
....................       Ventilador_on; 
27C0:  BSF    F8B.1
27C2:  BCF    F94.1
....................    } 
....................    else 
27C4:  BRA    27D4
....................    { 
....................       if(estado_ventilador==1) 
27C6:  BTFSS  x65.5
27C8:  BRA    27D0
....................       { 
....................          Ventilador_on; 
27CA:  BSF    F8B.1
27CC:  BCF    F94.1
....................       } 
....................       else 
27CE:  BRA    27D4
....................       { 
....................          Ventilador_off; 
27D0:  BCF    F8B.1
27D2:  BCF    F94.1
....................       } 
....................    } 
....................    
....................    error=desvio+Setpoint-Temperatura;      // Cálculo del error ****** 
27D4:  CLRF   xFD
27D6:  MOVFF  570,5FC
27DA:  MOVLB  0
27DC:  CALL   169C
27E0:  BCF    FD8.1
27E2:  MOVFF  5C9,5FE
27E6:  MOVFF  5C8,5FD
27EA:  MOVFF  5C7,5FC
27EE:  MOVFF  5C6,5FB
27F2:  MOVFF  03,602
27F6:  MOVFF  02,601
27FA:  MOVFF  01,600
27FE:  MOVFF  00,5FF
2802:  CALL   18A6
2806:  MOVFF  00,5F6
280A:  MOVFF  01,5F7
280E:  MOVFF  02,5F8
2812:  MOVFF  03,5F9
2816:  BSF    FD8.1
2818:  MOVFF  03,5FE
281C:  MOVFF  02,5FD
2820:  MOVFF  01,5FC
2824:  MOVFF  00,5FB
2828:  MOVFF  5D5,602
282C:  MOVFF  5D4,601
2830:  MOVFF  5D3,600
2834:  MOVFF  5D2,5FF
2838:  CALL   18A6
283C:  MOVFF  03,5B5
2840:  MOVFF  02,5B4
2844:  MOVFF  01,5B3
2848:  MOVFF  00,5B2
....................     
....................    /*if(error>1.0 && error<50 && Aumento<0.3 && flag_setpoint==0) 
....................    { 
....................       if(Potencia<90.0) 
....................       { 
....................          if(TiempoControl>=120) 
....................          { 
....................             TiempoControl=0; 
....................             if(Aumento<-0.5) 
....................             { 
....................                Ganancia+=2; 
....................             } 
....................             else 
....................             { 
....................                if(Aumento<-0.1) 
....................                { 
....................                   Ganancia+=1; 
....................                }    
....................                else 
....................                { 
....................                   Ganancia+=0.5; 
....................                } 
....................             } 
....................          } 
....................       } 
....................    } 
....................     
....................    if(error<-1.0) 
....................    { 
....................       if(TiempoControl>=120) 
....................       { 
....................          TiempoControl=0; 
....................          Ganancia-=0.2; 
....................       } 
....................    }*/ 
....................     
....................    if(Ganancia<0.5) 
284C:  MOVFF  5C5,5F9
2850:  MOVFF  5C4,5F8
2854:  MOVFF  5C3,5F7
2858:  MOVFF  5C2,5F6
285C:  MOVLB  5
285E:  CLRF   xFD
2860:  CLRF   xFC
2862:  CLRF   xFB
2864:  MOVLW  7E
2866:  MOVWF  xFA
2868:  MOVLB  0
286A:  RCALL  2676
286C:  BNC   287C
....................    { 
....................       Ganancia=0.5; 
286E:  MOVLB  5
2870:  CLRF   xC5
2872:  CLRF   xC4
2874:  CLRF   xC3
2876:  MOVLW  7E
2878:  MOVWF  xC2
287A:  MOVLB  0
....................    } 
....................    if(Ganancia>Gananciamax) 
287C:  MOVFF  58D,5F9
2880:  MOVFF  58C,5F8
2884:  MOVFF  58B,5F7
2888:  MOVFF  58A,5F6
288C:  MOVFF  5C5,5FD
2890:  MOVFF  5C4,5FC
2894:  MOVFF  5C3,5FB
2898:  MOVFF  5C2,5FA
289C:  RCALL  2676
289E:  BNC   28B0
....................    { 
....................       Ganancia=Gananciamax; 
28A0:  MOVFF  58D,5C5
28A4:  MOVFF  58C,5C4
28A8:  MOVFF  58B,5C3
28AC:  MOVFF  58A,5C2
....................    } 
....................     
....................    if(error<0.0)     // Anti Wind_DOWN     
28B0:  MOVFF  5B5,5F9
28B4:  MOVFF  5B4,5F8
28B8:  MOVFF  5B3,5F7
28BC:  MOVFF  5B2,5F6
28C0:  MOVLB  5
28C2:  CLRF   xFD
28C4:  CLRF   xFC
28C6:  CLRF   xFB
28C8:  CLRF   xFA
28CA:  MOVLB  0
28CC:  RCALL  2676
28CE:  BNC   28DC
....................    { 
....................       error=0.0; 
28D0:  MOVLB  5
28D2:  CLRF   xB5
28D4:  CLRF   xB4
28D6:  CLRF   xB3
28D8:  CLRF   xB2
28DA:  MOVLB  0
....................    } 
....................    //tmp=(Setpoint-Prom)*Ganancia;  // Control Proporcional. 
....................    tmp=error*Ganancia;  // Control Proporcional. 
28DC:  MOVFF  5B5,616
28E0:  MOVFF  5B4,615
28E4:  MOVFF  5B3,614
28E8:  MOVFF  5B2,613
28EC:  MOVFF  5C5,61A
28F0:  MOVFF  5C4,619
28F4:  MOVFF  5C3,618
28F8:  MOVFF  5C2,617
28FC:  CALL   1E2E
2900:  MOVFF  03,5C1
2904:  MOVFF  02,5C0
2908:  MOVFF  01,5BF
290C:  MOVFF  00,5BE
....................           
....................    if(tmp>Setpoint)   // Anti Wind-UP       
2910:  MOVLB  5
2912:  CLRF   xFD
2914:  MOVFF  570,5FC
2918:  MOVLB  0
291A:  CALL   169C
291E:  MOVFF  03,5F9
2922:  MOVFF  02,5F8
2926:  MOVFF  01,5F7
292A:  MOVFF  00,5F6
292E:  MOVFF  5C1,5FD
2932:  MOVFF  5C0,5FC
2936:  MOVFF  5BF,5FB
293A:  MOVFF  5BE,5FA
293E:  RCALL  2676
2940:  BNC   2960
....................    { 
....................       tmp=Setpoint; 
2942:  MOVLB  5
2944:  CLRF   xFD
2946:  MOVFF  570,5FC
294A:  MOVLB  0
294C:  CALL   169C
2950:  MOVFF  03,5C1
2954:  MOVFF  02,5C0
2958:  MOVFF  01,5BF
295C:  MOVFF  00,5BE
....................    } 
....................                 
....................    if(tmp<0.0)     // Anti Wind_DOWN     
2960:  MOVFF  5C1,5F9
2964:  MOVFF  5C0,5F8
2968:  MOVFF  5BF,5F7
296C:  MOVFF  5BE,5F6
2970:  MOVLB  5
2972:  CLRF   xFD
2974:  CLRF   xFC
2976:  CLRF   xFB
2978:  CLRF   xFA
297A:  MOVLB  0
297C:  RCALL  2676
297E:  BNC   298A
....................    { 
....................       tmp=0.0; 
2980:  MOVLB  5
2982:  CLRF   xC1
2984:  CLRF   xC0
2986:  CLRF   xBF
2988:  CLRF   xBE
....................    } 
....................     
....................    // Tpulso(t)= Tciclo*(y(t)-ymin)/(ymax - ymin); calculo de ciclo util para control de resistencia.ymax=140.ymin=0; 
....................    // Tpulso es float, hay que pasar ese ciclo a una salida de un puerto usando el TMR1. 
....................    Tpulso=(tmp/Setpoint)*Tciclo;   
298A:  MOVLB  5
298C:  CLRF   xFD
298E:  MOVFF  570,5FC
2992:  MOVLB  0
2994:  CALL   169C
2998:  MOVFF  5C1,5FE
299C:  MOVFF  5C0,5FD
29A0:  MOVFF  5BF,5FC
29A4:  MOVFF  5BE,5FB
29A8:  MOVFF  03,602
29AC:  MOVFF  02,601
29B0:  MOVFF  01,600
29B4:  MOVFF  00,5FF
29B8:  CALL   1728
29BC:  MOVFF  00,5F6
29C0:  MOVFF  01,5F7
29C4:  MOVFF  02,5F8
29C8:  MOVFF  03,5F9
29CC:  MOVFF  03,616
29D0:  MOVFF  02,615
29D4:  MOVFF  01,614
29D8:  MOVFF  00,613
29DC:  MOVFF  5AD,61A
29E0:  MOVFF  5AC,619
29E4:  MOVFF  5AB,618
29E8:  MOVFF  5AA,617
29EC:  CALL   1E2E
29F0:  MOVFF  03,5B1
29F4:  MOVFF  02,5B0
29F8:  MOVFF  01,5AF
29FC:  MOVFF  00,5AE
....................     
....................    if(tiempoctrl<=(int16)(Tpulso/0.005)) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
2A00:  MOVFF  5B1,5FE
2A04:  MOVFF  5B0,5FD
2A08:  MOVFF  5AF,5FC
2A0C:  MOVFF  5AE,5FB
2A10:  MOVLW  0A
2A12:  MOVLB  6
2A14:  MOVWF  x02
2A16:  MOVLW  D7
2A18:  MOVWF  x01
2A1A:  MOVLW  23
2A1C:  MOVWF  x00
2A1E:  MOVLW  77
2A20:  MOVLB  5
2A22:  MOVWF  xFF
2A24:  MOVLB  0
2A26:  CALL   1728
2A2A:  MOVFF  03,5F9
2A2E:  MOVFF  02,5F8
2A32:  MOVFF  01,5F7
2A36:  MOVFF  00,5F6
2A3A:  RCALL  275E
2A3C:  MOVFF  02,03
2A40:  MOVF   01,W
2A42:  MOVLB  5
2A44:  MOVF   x79,W
2A46:  SUBWF  02,W
2A48:  BNC   2A5C
2A4A:  BNZ   2A52
2A4C:  MOVF   x78,W
2A4E:  SUBWF  01,W
2A50:  BNC   2A5C
....................    { 
....................       Resistencia_on; 
2A52:  BSF    F8B.0
2A54:  BCF    F94.0
....................       Resistencia2_on; 
2A56:  BSF    F8B.2
2A58:  BCF    F94.2
....................    } 
....................    else          
2A5A:  BRA    2A64
....................    { 
....................       Resistencia_off; 
2A5C:  BCF    F8B.0
2A5E:  BCF    F94.0
....................       Resistencia2_off; 
2A60:  BCF    F8B.2
2A62:  BCF    F94.2
....................    } 
....................           
....................    if(tiempoctrl>=(int16)(Tciclo/0.005)) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
2A64:  MOVFF  5AD,5FE
2A68:  MOVFF  5AC,5FD
2A6C:  MOVFF  5AB,5FC
2A70:  MOVFF  5AA,5FB
2A74:  MOVLW  0A
2A76:  MOVLB  6
2A78:  MOVWF  x02
2A7A:  MOVLW  D7
2A7C:  MOVWF  x01
2A7E:  MOVLW  23
2A80:  MOVWF  x00
2A82:  MOVLW  77
2A84:  MOVLB  5
2A86:  MOVWF  xFF
2A88:  MOVLB  0
2A8A:  CALL   1728
2A8E:  MOVFF  03,5F9
2A92:  MOVFF  02,5F8
2A96:  MOVFF  01,5F7
2A9A:  MOVFF  00,5F6
2A9E:  RCALL  275E
2AA0:  MOVF   02,W
2AA2:  MOVWF  03
2AA4:  MOVLB  5
2AA6:  SUBWF  x79,W
2AA8:  BNC   2AB6
2AAA:  BNZ   2AB2
2AAC:  MOVF   01,W
2AAE:  SUBWF  x78,W
2AB0:  BNC   2AB6
....................    { 
....................       tiempoctrl=0; 
2AB2:  CLRF   x79
2AB4:  CLRF   x78
....................    } // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
....................                                        
.................... //--------------------------------------------------------------------------------------------------------------------//    
.................... } 
2AB6:  MOVLB  0
2AB8:  RETLW  00
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
1394:  MOVLB  5
1396:  MOVFF  5F6,01
139A:  MOVFF  5F7,03
139E:  MOVFF  5F6,5FC
13A2:  MOVFF  5F7,5FD
13A6:  MOVLW  05
13A8:  MOVWF  FEA
13AA:  MOVLW  D6
13AC:  MOVWF  FE9
13AE:  MOVFF  5F7,FE2
13B2:  MOVFF  5F6,FE1
13B6:  MOVF   FE7,F
13B8:  MOVFF  FE6,FEE
13BC:  BNZ   13B6
....................    if(sombreado==2) 
13BE:  MOVF   xFA,W
13C0:  SUBLW  02
13C2:  BNZ   13F0
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
13C4:  MOVLW  01
13C6:  ADDWF  xF8,W
13C8:  MOVWF  xFC
13CA:  MOVLW  01
13CC:  ADDWF  xF9,W
13CE:  MOVWF  xFD
13D0:  MOVFF  5FC,607
13D4:  MOVFF  FE8,608
13D8:  MOVLW  05
13DA:  MOVLB  6
13DC:  MOVWF  x0A
13DE:  MOVLW  D6
13E0:  MOVWF  x09
13E2:  MOVFF  5FB,60B
13E6:  MOVLW  01
13E8:  MOVWF  x0C
13EA:  MOVLB  0
13EC:  RCALL  0FDC
13EE:  MOVLB  5
....................    if(sombreado==1) 
13F0:  DECFSZ xFA,W
13F2:  BRA    1444
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
13F4:  MOVF   xFB,W
13F6:  MULLW  08
13F8:  MOVF   FF3,W
13FA:  ADDWF  xF9,W
13FC:  MOVWF  xFC
13FE:  MOVLB  6
1400:  CLRF   x08
1402:  MOVFF  5F9,609
1406:  MOVLW  7F
1408:  MOVWF  x0A
140A:  MOVFF  5FC,60B
140E:  MOVLW  01
1410:  MOVWF  x0C
1412:  MOVWF  x0D
1414:  MOVLB  0
1416:  RCALL  12D2
1418:  MOVLW  01
141A:  MOVLB  5
141C:  ADDWF  xF8,W
141E:  MOVWF  xFC
1420:  MOVLW  01
1422:  ADDWF  xF9,W
1424:  MOVWF  xFD
1426:  MOVFF  5FC,607
142A:  MOVFF  FE8,608
142E:  MOVLW  05
1430:  MOVLB  6
1432:  MOVWF  x0A
1434:  MOVLW  D6
1436:  MOVWF  x09
1438:  MOVFF  5FB,60B
143C:  CLRF   x0C
143E:  MOVLB  0
1440:  RCALL  0FDC
1442:  MOVLB  5
....................    if(sombreado==0) 
1444:  MOVF   xFA,F
1446:  BNZ   1498
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1448:  MOVF   xFB,W
144A:  MULLW  08
144C:  MOVF   FF3,W
144E:  ADDWF  xF9,W
1450:  MOVWF  xFC
1452:  MOVLB  6
1454:  CLRF   x08
1456:  MOVFF  5F9,609
145A:  MOVLW  7F
145C:  MOVWF  x0A
145E:  MOVFF  5FC,60B
1462:  MOVLW  01
1464:  MOVWF  x0C
1466:  CLRF   x0D
1468:  MOVLB  0
146A:  RCALL  12D2
146C:  MOVLW  01
146E:  MOVLB  5
1470:  ADDWF  xF8,W
1472:  MOVWF  xFC
1474:  MOVLW  01
1476:  ADDWF  xF9,W
1478:  MOVWF  xFD
147A:  MOVFF  5FC,607
147E:  MOVFF  FE8,608
1482:  MOVLW  05
1484:  MOVLB  6
1486:  MOVWF  x0A
1488:  MOVLW  D6
148A:  MOVWF  x09
148C:  MOVFF  5FB,60B
1490:  MOVLW  01
1492:  MOVWF  x0C
1494:  MOVLB  0
1496:  RCALL  0FDC
....................    glcd_update(); 
1498:  MOVLB  0
149A:  RCALL  0DBC
.................... } 
149C:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
23C4:  MOVLB  5
23C6:  MOVF   xFA,W
23C8:  SUBLW  02
23CA:  BNZ   244A
....................    { 
....................       sprintf(voltage, "%03u", digito); 
23CC:  MOVLW  05
23CE:  MOVWF  xF5
23D0:  MOVLW  FC
23D2:  MOVWF  xF4
23D4:  MOVFF  5F7,605
23D8:  MOVLW  03
23DA:  MOVLB  6
23DC:  MOVWF  x06
23DE:  MOVLB  0
23E0:  RCALL  21C6
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
23E2:  MOVLB  5
23E4:  MOVF   xFB,W
23E6:  MULLW  12
23E8:  MOVF   FF3,W
23EA:  ADDWF  xF8,W
23EC:  MOVLB  6
23EE:  MOVWF  x05
23F0:  MOVLB  5
23F2:  MOVF   xFB,W
23F4:  MULLW  08
23F6:  MOVF   FF3,W
23F8:  ADDWF  xF9,W
23FA:  MOVLB  6
23FC:  MOVWF  x06
23FE:  MOVFF  5F8,608
2402:  MOVFF  5F9,609
2406:  MOVFF  605,60A
240A:  MOVWF  x0B
240C:  MOVLW  01
240E:  MOVWF  x0C
2410:  MOVWF  x0D
2412:  MOVLB  0
2414:  CALL   12D2
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
2418:  MOVLW  01
241A:  MOVLB  5
241C:  ADDWF  xF8,W
241E:  MOVLB  6
2420:  MOVWF  x05
2422:  MOVLW  01
2424:  MOVLB  5
2426:  ADDWF  xF9,W
2428:  MOVLB  6
242A:  MOVWF  x06
242C:  MOVFF  605,607
2430:  MOVWF  x08
2432:  MOVLW  05
2434:  MOVWF  x0A
2436:  MOVLW  FC
2438:  MOVWF  x09
243A:  MOVFF  5FB,60B
243E:  CLRF   x0C
2440:  MOVLB  0
2442:  CALL   0FDC
....................    } 
....................    else 
2446:  BRA    25B6
2448:  MOVLB  5
....................    { 
....................       if(sombreado==3) 
244A:  MOVF   xFA,W
244C:  SUBLW  03
244E:  BNZ   24CE
....................       { 
....................          sprintf(voltage, "%03u", digito); 
2450:  MOVLW  05
2452:  MOVWF  xF5
2454:  MOVLW  FC
2456:  MOVWF  xF4
2458:  MOVFF  5F7,605
245C:  MOVLW  03
245E:  MOVLB  6
2460:  MOVWF  x06
2462:  MOVLB  0
2464:  RCALL  21C6
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
2466:  MOVLB  5
2468:  MOVF   xFB,W
246A:  MULLW  12
246C:  MOVF   FF3,W
246E:  ADDWF  xF8,W
2470:  MOVLB  6
2472:  MOVWF  x05
2474:  MOVLB  5
2476:  MOVF   xFB,W
2478:  MULLW  08
247A:  MOVF   FF3,W
247C:  ADDWF  xF9,W
247E:  MOVLB  6
2480:  MOVWF  x06
2482:  MOVFF  5F8,608
2486:  MOVFF  5F9,609
248A:  MOVFF  605,60A
248E:  MOVWF  x0B
2490:  MOVLW  01
2492:  MOVWF  x0C
2494:  CLRF   x0D
2496:  MOVLB  0
2498:  CALL   12D2
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
249C:  MOVLW  01
249E:  MOVLB  5
24A0:  ADDWF  xF8,W
24A2:  MOVLB  6
24A4:  MOVWF  x05
24A6:  MOVLW  01
24A8:  MOVLB  5
24AA:  ADDWF  xF9,W
24AC:  MOVLB  6
24AE:  MOVWF  x06
24B0:  MOVFF  605,607
24B4:  MOVWF  x08
24B6:  MOVLW  05
24B8:  MOVWF  x0A
24BA:  MOVLW  FC
24BC:  MOVWF  x09
24BE:  MOVFF  5FB,60B
24C2:  MOVLW  01
24C4:  MOVWF  x0C
24C6:  MOVLB  0
24C8:  CALL   0FDC
24CC:  MOVLB  5
....................       } 
....................       sprintf(voltage, "%u", digito); 
24CE:  MOVLW  05
24D0:  MOVWF  xF5
24D2:  MOVLW  FC
24D4:  MOVWF  xF4
24D6:  MOVFF  5F7,605
24DA:  MOVLW  1B
24DC:  MOVLB  6
24DE:  MOVWF  x06
24E0:  MOVLB  0
24E2:  RCALL  21C6
....................       if(sombreado==1) 
24E4:  MOVLB  5
24E6:  DECFSZ xFA,W
24E8:  BRA    254E
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
24EA:  MOVF   xFB,W
24EC:  MULLW  05
24EE:  MOVF   FF3,W
24F0:  ADDWF  xF8,W
24F2:  MOVLB  6
24F4:  MOVWF  x05
24F6:  MOVLB  5
24F8:  MOVF   xFB,W
24FA:  MULLW  08
24FC:  MOVF   FF3,W
24FE:  ADDWF  xF9,W
2500:  MOVLB  6
2502:  MOVWF  x06
2504:  MOVFF  5F8,608
2508:  MOVFF  5F9,609
250C:  MOVFF  605,60A
2510:  MOVWF  x0B
2512:  MOVLW  01
2514:  MOVWF  x0C
2516:  MOVWF  x0D
2518:  MOVLB  0
251A:  CALL   12D2
251E:  MOVLW  01
2520:  MOVLB  5
2522:  ADDWF  xF8,W
2524:  MOVLB  6
2526:  MOVWF  x05
2528:  MOVLW  01
252A:  MOVLB  5
252C:  ADDWF  xF9,W
252E:  MOVLB  6
2530:  MOVWF  x06
2532:  MOVFF  605,607
2536:  MOVWF  x08
2538:  MOVLW  05
253A:  MOVWF  x0A
253C:  MOVLW  FC
253E:  MOVWF  x09
2540:  MOVFF  5FB,60B
2544:  CLRF   x0C
2546:  MOVLB  0
2548:  CALL   0FDC
254C:  MOVLB  5
....................       if(sombreado==0) 
254E:  MOVF   xFA,F
2550:  BNZ   25B8
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
2552:  MOVF   xFB,W
2554:  MULLW  05
2556:  MOVF   FF3,W
2558:  ADDWF  xF8,W
255A:  MOVLB  6
255C:  MOVWF  x05
255E:  MOVLB  5
2560:  MOVF   xFB,W
2562:  MULLW  08
2564:  MOVF   FF3,W
2566:  ADDWF  xF9,W
2568:  MOVLB  6
256A:  MOVWF  x06
256C:  MOVFF  5F8,608
2570:  MOVFF  5F9,609
2574:  MOVFF  605,60A
2578:  MOVWF  x0B
257A:  MOVLW  01
257C:  MOVWF  x0C
257E:  CLRF   x0D
2580:  MOVLB  0
2582:  CALL   12D2
2586:  MOVLW  01
2588:  MOVLB  5
258A:  ADDWF  xF8,W
258C:  MOVLB  6
258E:  MOVWF  x05
2590:  MOVLW  01
2592:  MOVLB  5
2594:  ADDWF  xF9,W
2596:  MOVLB  6
2598:  MOVWF  x06
259A:  MOVFF  605,607
259E:  MOVWF  x08
25A0:  MOVLW  05
25A2:  MOVWF  x0A
25A4:  MOVLW  FC
25A6:  MOVWF  x09
25A8:  MOVFF  5FB,60B
25AC:  MOVLW  01
25AE:  MOVWF  x0C
25B0:  MOVLB  0
25B2:  CALL   0FDC
25B6:  MOVLB  5
....................    } 
....................    glcd_update(); 
25B8:  MOVLB  0
25BA:  CALL   0DBC
.................... } 
25BE:  RETLW  00
....................  
.................... void displayTemperatura(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
224C:  MOVLB  5
224E:  MOVF   xFA,W
2250:  SUBLW  02
2252:  BNZ   22D2
....................    { 
....................       sprintf(voltage, "%03u", digito); 
2254:  MOVLW  05
2256:  MOVWF  xF5
2258:  MOVLW  FC
225A:  MOVWF  xF4
225C:  MOVFF  5F7,605
2260:  MOVLW  03
2262:  MOVLB  6
2264:  MOVWF  x06
2266:  MOVLB  0
2268:  RCALL  21C6
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
226A:  MOVLB  5
226C:  MOVF   xFB,W
226E:  MULLW  12
2270:  MOVF   FF3,W
2272:  ADDWF  xF8,W
2274:  MOVLB  6
2276:  MOVWF  x05
2278:  MOVLB  5
227A:  MOVF   xFB,W
227C:  MULLW  08
227E:  MOVF   FF3,W
2280:  ADDWF  xF9,W
2282:  MOVLB  6
2284:  MOVWF  x06
2286:  MOVFF  5F8,608
228A:  MOVFF  5F9,609
228E:  MOVFF  605,60A
2292:  MOVWF  x0B
2294:  MOVLW  01
2296:  MOVWF  x0C
2298:  MOVWF  x0D
229A:  MOVLB  0
229C:  CALL   12D2
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
22A0:  MOVLW  01
22A2:  MOVLB  5
22A4:  ADDWF  xF8,W
22A6:  MOVLB  6
22A8:  MOVWF  x05
22AA:  MOVLW  01
22AC:  MOVLB  5
22AE:  ADDWF  xF9,W
22B0:  MOVLB  6
22B2:  MOVWF  x06
22B4:  MOVFF  605,607
22B8:  MOVWF  x08
22BA:  MOVLW  05
22BC:  MOVWF  x0A
22BE:  MOVLW  FC
22C0:  MOVWF  x09
22C2:  MOVFF  5FB,60B
22C6:  CLRF   x0C
22C8:  MOVLB  0
22CA:  CALL   0FDC
....................    } 
....................    else 
22CE:  BRA    23BA
22D0:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%03u", digito); 
22D2:  MOVLW  05
22D4:  MOVWF  xF5
22D6:  MOVLW  FC
22D8:  MOVWF  xF4
22DA:  MOVFF  5F7,605
22DE:  MOVLW  03
22E0:  MOVLB  6
22E2:  MOVWF  x06
22E4:  MOVLB  0
22E6:  RCALL  21C6
....................     
....................       if(sombreado==1) 
22E8:  MOVLB  5
22EA:  DECFSZ xFA,W
22EC:  BRA    2352
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
22EE:  MOVF   xFB,W
22F0:  MULLW  05
22F2:  MOVF   FF3,W
22F4:  ADDWF  xF8,W
22F6:  MOVLB  6
22F8:  MOVWF  x05
22FA:  MOVLB  5
22FC:  MOVF   xFB,W
22FE:  MULLW  08
2300:  MOVF   FF3,W
2302:  ADDWF  xF9,W
2304:  MOVLB  6
2306:  MOVWF  x06
2308:  MOVFF  5F8,608
230C:  MOVFF  5F9,609
2310:  MOVFF  605,60A
2314:  MOVWF  x0B
2316:  MOVLW  01
2318:  MOVWF  x0C
231A:  MOVWF  x0D
231C:  MOVLB  0
231E:  CALL   12D2
2322:  MOVLW  01
2324:  MOVLB  5
2326:  ADDWF  xF8,W
2328:  MOVLB  6
232A:  MOVWF  x05
232C:  MOVLW  01
232E:  MOVLB  5
2330:  ADDWF  xF9,W
2332:  MOVLB  6
2334:  MOVWF  x06
2336:  MOVFF  605,607
233A:  MOVWF  x08
233C:  MOVLW  05
233E:  MOVWF  x0A
2340:  MOVLW  FC
2342:  MOVWF  x09
2344:  MOVFF  5FB,60B
2348:  CLRF   x0C
234A:  MOVLB  0
234C:  CALL   0FDC
2350:  MOVLB  5
....................       if(sombreado==0) 
2352:  MOVF   xFA,F
2354:  BNZ   23BC
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
2356:  MOVF   xFB,W
2358:  MULLW  05
235A:  MOVF   FF3,W
235C:  ADDWF  xF8,W
235E:  MOVLB  6
2360:  MOVWF  x05
2362:  MOVLB  5
2364:  MOVF   xFB,W
2366:  MULLW  08
2368:  MOVF   FF3,W
236A:  ADDWF  xF9,W
236C:  MOVLB  6
236E:  MOVWF  x06
2370:  MOVFF  5F8,608
2374:  MOVFF  5F9,609
2378:  MOVFF  605,60A
237C:  MOVWF  x0B
237E:  MOVLW  01
2380:  MOVWF  x0C
2382:  CLRF   x0D
2384:  MOVLB  0
2386:  CALL   12D2
238A:  MOVLW  01
238C:  MOVLB  5
238E:  ADDWF  xF8,W
2390:  MOVLB  6
2392:  MOVWF  x05
2394:  MOVLW  01
2396:  MOVLB  5
2398:  ADDWF  xF9,W
239A:  MOVLB  6
239C:  MOVWF  x06
239E:  MOVFF  605,607
23A2:  MOVWF  x08
23A4:  MOVLW  05
23A6:  MOVWF  x0A
23A8:  MOVLW  FC
23AA:  MOVWF  x09
23AC:  MOVFF  5FB,60B
23B0:  MOVLW  01
23B2:  MOVWF  x0C
23B4:  MOVLB  0
23B6:  CALL   0FDC
23BA:  MOVLB  5
....................    } 
....................    glcd_update(); 
23BC:  MOVLB  0
23BE:  CALL   0DBC
.................... } 
23C2:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
25C0:  MOVLB  5
25C2:  MOVF   xF6,W
25C4:  SUBLW  05
25C6:  BNZ   2670
....................    for( i = 0 ; i < 64 ; i ++ ) 
25C8:  CLRF   xF7
25CA:  MOVF   xF7,W
25CC:  SUBLW  3F
25CE:  BNC   2670
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
25D0:  CLRF   xF8
25D2:  MOVF   xF8,W
25D4:  SUBLW  0F
25D6:  BNC   266C
....................       {     
....................          for(k=7;k>-1;k--) 
25D8:  MOVLW  07
25DA:  MOVWF  xF9
25DC:  MOVF   xF9,W
25DE:  XORLW  80
25E0:  SUBLW  7F
25E2:  BC    2668
....................          {       
....................             if( bit_test(Horno[i][j] ,7-k ))  
25E4:  CLRF   xFB
25E6:  MOVFF  5F7,5FA
25EA:  CLRF   xFD
25EC:  MOVLW  10
25EE:  MOVWF  xFC
25F0:  MOVLB  0
25F2:  CALL   1B2E
25F6:  MOVFF  02,5FB
25FA:  MOVFF  01,5FA
25FE:  MOVLB  5
2600:  MOVF   xF8,W
2602:  ADDWF  01,W
2604:  MOVWF  01
2606:  MOVLW  00
2608:  ADDWFC 02,W
260A:  MOVWF  03
260C:  MOVF   01,W
260E:  MOVFF  FF2,5FA
2612:  BCF    FF2.7
2614:  MOVFF  03,FF7
2618:  MOVLB  0
261A:  CALL   02A6
261E:  MOVLB  5
2620:  BTFSC  xFA.7
2622:  BSF    FF2.7
2624:  MOVWF  xFA
2626:  MOVLW  07
2628:  BSF    FD8.0
262A:  SUBFWB xF9,W
262C:  MOVWF  xFB
262E:  MOVFF  5FA,00
2632:  MOVF   xFB,W
2634:  MOVWF  01
2636:  BZ    2640
2638:  BCF    FD8.0
263A:  RRCF   00,F
263C:  DECFSZ 01,F
263E:  BRA    2638
2640:  BTFSS  00.0
2642:  BRA    2664
....................                glcd_pixel( j*8+k,i, ON ); 
2644:  MOVF   xF8,W
2646:  MULLW  08
2648:  MOVF   FF3,W
264A:  ADDWF  xF9,W
264C:  MOVWF  xFA
264E:  MOVFF  FE8,623
2652:  MOVFF  5F7,624
2656:  MOVLW  01
2658:  MOVLB  6
265A:  MOVWF  x25
265C:  MOVLB  0
265E:  CALL   0F20
2662:  MOVLB  5
....................          }   
2664:  DECF   xF9,F
2666:  BRA    25DC
....................       } 
2668:  INCF   xF8,F
266A:  BRA    25D2
....................    } 
266C:  INCF   xF7,F
266E:  BRA    25CA
....................    } 
....................     
.................... } 
2670:  MOVLB  0
2672:  GOTO   4D6A (RETURN)
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0CA0:  MOVLW  15
0CA2:  MOVWF  FCF
0CA4:  MOVLW  A0
0CA6:  MOVWF  FCE
....................    tiempos++; 
0CA8:  MOVLB  5
0CAA:  INCF   x74,F
0CAC:  BTFSC  FD8.2
0CAE:  INCF   x75,F
....................    tiempos3++; 
0CB0:  INCF   x76,F
0CB2:  BTFSC  FD8.2
0CB4:  INCF   x77,F
....................    tiempoctrl++; 
0CB6:  INCF   x78,F
0CB8:  BTFSC  FD8.2
0CBA:  INCF   x79,F
....................     
....................    if(tiempos>=200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0CBC:  MOVF   x75,F
0CBE:  BNZ   0CC6
0CC0:  MOVF   x74,W
0CC2:  SUBLW  C7
0CC4:  BC    0CF0
....................    {tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++; 
0CC6:  CLRF   x75
0CC8:  CLRF   x74
0CCA:  BSF    x65.4
0CCC:  INCF   x68,F
0CCE:  INCF   x6F,F
0CD0:  INCF   x63,F
....................     
....................       if(flag_setpoint==1) 
0CD2:  BTFSS  x66.4
0CD4:  BRA    0CDC
....................          tiemposetpoint++; 
0CD6:  INCF   x7E,F
0CD8:  BTFSC  FD8.2
0CDA:  INCF   x7F,F
....................           
....................       if(tiempo_esterilizacion==1) 
0CDC:  DECFSZ x72,W
0CDE:  BRA    0CE6
....................       {                
....................          tinicio++; 
0CE0:  INCF   x7A,F
0CE2:  BTFSC  FD8.2
0CE4:  INCF   x7B,F
....................       } 
....................        
....................       if(flag_tiempocalentamiento==1) 
0CE6:  BTFSS  x66.2
0CE8:  BRA    0CF0
....................       { 
....................          tiempocalentamiento++; 
0CEA:  INCF   x7C,F
0CEC:  BTFSC  FD8.2
0CEE:  INCF   x7D,F
....................       } 
....................    }         
.................... } 
....................     
0CF0:  BCF    F9E.0
0CF2:  MOVLB  0
0CF4:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
.................... } 
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
2D34:  MOVLW  05
2D36:  MOVLB  5
2D38:  MOVWF  xF5
2D3A:  MOVLW  FD
2D3C:  MOVWF  xF4
2D3E:  MOVLW  42
2D40:  MOVWF  FE9
2D42:  MOVFF  5F9,609
2D46:  MOVFF  5F8,608
2D4A:  MOVFF  5F7,607
2D4E:  MOVFF  5F6,606
2D52:  MOVLW  01
2D54:  MOVLB  6
2D56:  MOVWF  x0A
2D58:  MOVLB  0
2D5A:  BRA    2B7E
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2D5C:  MOVLB  5
2D5E:  MOVF   xFC,W
2D60:  MULLW  1B
2D62:  MOVF   FF3,W
2D64:  ADDWF  xFA,W
2D66:  MOVLB  6
2D68:  MOVWF  x06
2D6A:  MOVLB  5
2D6C:  MOVF   xFC,W
2D6E:  MULLW  08
2D70:  MOVF   FF3,W
2D72:  ADDWF  xFB,W
2D74:  MOVLB  6
2D76:  MOVWF  x07
2D78:  MOVFF  5FA,608
2D7C:  MOVFF  5FB,609
2D80:  MOVFF  606,60A
2D84:  MOVWF  x0B
2D86:  MOVLW  01
2D88:  MOVWF  x0C
2D8A:  CLRF   x0D
2D8C:  MOVLB  0
2D8E:  CALL   12D2
....................    glcd_text57(x, y, voltage, w, ON); 
2D92:  MOVFF  5FA,607
2D96:  MOVFF  5FB,608
2D9A:  MOVLW  05
2D9C:  MOVLB  6
2D9E:  MOVWF  x0A
2DA0:  MOVLW  FD
2DA2:  MOVWF  x09
2DA4:  MOVFF  5FC,60B
2DA8:  MOVLW  01
2DAA:  MOVWF  x0C
2DAC:  MOVLB  0
2DAE:  CALL   0FDC
.................... } 
2DB2:  GOTO   5350 (RETURN)
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
15CC:  MOVLW  05
15CE:  MOVLB  5
15D0:  MOVWF  xF5
15D2:  MOVLW  FC
15D4:  MOVWF  xF4
15D6:  MOVFF  5F8,605
15DA:  MOVLW  1F
15DC:  MOVLB  6
15DE:  MOVWF  x06
15E0:  MOVLB  0
15E2:  BRA    14EC
....................     
....................    if(sombreado==1) 
15E4:  MOVLB  5
15E6:  DECFSZ xFB,W
15E8:  BRA    1644
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
15EA:  MOVLW  12
15EC:  ADDWF  xF9,W
15EE:  MOVLB  6
15F0:  MOVWF  x05
15F2:  MOVLW  18
15F4:  MOVLB  5
15F6:  ADDWF  xFA,W
15F8:  MOVLB  6
15FA:  MOVWF  x06
15FC:  MOVFF  5F9,608
1600:  MOVFF  5FA,609
1604:  MOVFF  605,60A
1608:  MOVWF  x0B
160A:  MOVLW  01
160C:  MOVWF  x0C
160E:  MOVWF  x0D
1610:  MOVLB  0
1612:  RCALL  12D2
1614:  MOVLW  02
1616:  MOVLB  5
1618:  ADDWF  xF9,W
161A:  MOVLB  6
161C:  MOVWF  x05
161E:  MOVLW  01
1620:  MOVLB  5
1622:  ADDWF  xFA,W
1624:  MOVLB  6
1626:  MOVWF  x06
1628:  MOVFF  605,607
162C:  MOVWF  x08
162E:  MOVLW  05
1630:  MOVWF  x0A
1632:  MOVLW  FC
1634:  MOVWF  x09
1636:  MOVLW  02
1638:  MOVWF  x0B
163A:  CLRF   x0C
163C:  MOVLB  0
163E:  RCALL  0FDC
....................    else    
1640:  BRA    169A
1642:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
1644:  MOVLW  12
1646:  ADDWF  xF9,W
1648:  MOVLB  6
164A:  MOVWF  x05
164C:  MOVLW  18
164E:  MOVLB  5
1650:  ADDWF  xFA,W
1652:  MOVLB  6
1654:  MOVWF  x06
1656:  MOVFF  5F9,608
165A:  MOVFF  5FA,609
165E:  MOVFF  605,60A
1662:  MOVWF  x0B
1664:  CLRF   x0C
1666:  CLRF   x0D
1668:  MOVLB  0
166A:  RCALL  12D2
166C:  MOVLW  02
166E:  MOVLB  5
1670:  ADDWF  xF9,W
1672:  MOVLB  6
1674:  MOVWF  x05
1676:  MOVLW  01
1678:  MOVLB  5
167A:  ADDWF  xFA,W
167C:  MOVLB  6
167E:  MOVWF  x06
1680:  MOVFF  605,607
1684:  MOVWF  x08
1686:  MOVLW  05
1688:  MOVWF  x0A
168A:  MOVLW  FC
168C:  MOVWF  x09
168E:  MOVLW  02
1690:  MOVWF  x0B
1692:  MOVLW  01
1694:  MOVWF  x0C
1696:  MOVLB  0
1698:  RCALL  0FDC
....................  
.................... } 
169A:  RETLW  00
....................  
....................  
.................... void main() 
.................... { 
*
2DB6:  CLRF   FF8
2DB8:  BCF    FD0.7
2DBA:  BSF    07.7
2DBC:  CLRF   FEA
2DBE:  CLRF   FE9
2DC0:  MOVLB  5
2DC2:  CLRF   x5E
2DC4:  CLRF   x5F
2DC6:  CLRF   x60
2DC8:  CLRF   x61
2DCA:  MOVLW  3C
2DCC:  MOVWF  x62
2DCE:  CLRF   x63
2DD0:  CLRF   x64
2DD2:  BCF    x65.0
2DD4:  BCF    x65.1
2DD6:  BCF    x65.2
2DD8:  BSF    x65.3
2DDA:  BCF    x65.4
2DDC:  BCF    x65.5
2DDE:  BCF    x65.6
2DE0:  BCF    x65.7
2DE2:  BCF    x66.0
2DE4:  BCF    x66.1
2DE6:  BCF    x66.2
2DE8:  BCF    x66.3
2DEA:  BCF    x66.4
2DEC:  BCF    x66.5
2DEE:  CLRF   x67
2DF0:  CLRF   x68
2DF2:  CLRF   x69
2DF4:  CLRF   x6A
2DF6:  MOVLW  01
2DF8:  MOVWF  x6B
2DFA:  CLRF   x6C
2DFC:  CLRF   x6D
2DFE:  CLRF   x6E
2E00:  CLRF   x6F
2E02:  CLRF   x70
2E04:  MOVWF  x71
2E06:  CLRF   x72
2E08:  CLRF   x73
2E0A:  CLRF   x75
2E0C:  CLRF   x74
2E0E:  CLRF   x77
2E10:  CLRF   x76
2E12:  CLRF   x79
2E14:  CLRF   x78
2E16:  CLRF   x7B
2E18:  CLRF   x7A
2E1A:  CLRF   x7D
2E1C:  CLRF   x7C
2E1E:  CLRF   x7F
2E20:  CLRF   x7E
2E22:  CLRF   x81
2E24:  CLRF   x80
2E26:  CLRF   x85
2E28:  CLRF   x84
2E2A:  CLRF   x83
2E2C:  CLRF   x82
2E2E:  CLRF   x89
2E30:  CLRF   x88
2E32:  CLRF   x87
2E34:  CLRF   x86
2E36:  CLRF   x8D
2E38:  CLRF   x8C
2E3A:  CLRF   x8B
2E3C:  CLRF   x8A
2E3E:  CLRF   xA1
2E40:  CLRF   xA0
2E42:  CLRF   x9F
2E44:  CLRF   x9E
2E46:  CLRF   xA5
2E48:  MOVLW  40
2E4A:  MOVWF  xA4
2E4C:  MOVLW  1C
2E4E:  MOVWF  xA3
2E50:  MOVLW  8C
2E52:  MOVWF  xA2
2E54:  CLRF   xAD
2E56:  CLRF   xAC
2E58:  MOVLW  20
2E5A:  MOVWF  xAB
2E5C:  MOVLW  81
2E5E:  MOVWF  xAA
2E60:  CLRF   xB1
2E62:  CLRF   xB0
2E64:  CLRF   xAF
2E66:  CLRF   xAE
2E68:  CLRF   xB5
2E6A:  CLRF   xB4
2E6C:  CLRF   xB3
2E6E:  CLRF   xB2
2E70:  CLRF   xB9
2E72:  CLRF   xB8
2E74:  CLRF   xB7
2E76:  CLRF   xB6
2E78:  CLRF   xBD
2E7A:  CLRF   xBC
2E7C:  CLRF   xBB
2E7E:  CLRF   xBA
2E80:  CLRF   xC1
2E82:  CLRF   xC0
2E84:  CLRF   xBF
2E86:  CLRF   xBE
2E88:  CLRF   xC5
2E8A:  CLRF   xC4
2E8C:  CLRF   xC3
2E8E:  MOVLW  7F
2E90:  MOVWF  xC2
2E92:  CLRF   xC9
2E94:  CLRF   xC8
2E96:  CLRF   xC7
2E98:  CLRF   xC6
2E9A:  CLRF   xCD
2E9C:  CLRF   xCC
2E9E:  MOVLW  0C
2EA0:  MOVWF  xCB
2EA2:  MOVLW  84
2EA4:  MOVWF  xCA
2EA6:  CLRF   xD1
2EA8:  CLRF   xD0
2EAA:  CLRF   xCF
2EAC:  CLRF   xCE
2EAE:  CLRF   xD5
2EB0:  CLRF   xD4
2EB2:  CLRF   xD3
2EB4:  CLRF   xD2
2EB6:  MOVF   FC1,W
2EB8:  ANDLW  C0
2EBA:  IORLW  0F
2EBC:  MOVWF  FC1
2EBE:  MOVLW  07
2EC0:  MOVWF  FB4
2EC2:  MOVLB  4
2EC4:  CLRF   x16
2EC6:  CLRF   x17
2EC8:  CLRF   x18
2ECA:  CLRF   x19
2ECC:  CLRF   x1A
2ECE:  CLRF   x1B
2ED0:  CLRF   x1C
2ED2:  CLRF   x1D
2ED4:  CLRF   x1E
2ED6:  CLRF   x1F
2ED8:  CLRF   x20
2EDA:  CLRF   x21
2EDC:  CLRF   x22
2EDE:  CLRF   x23
2EE0:  CLRF   x24
2EE2:  CLRF   x25
2EE4:  CLRF   x26
2EE6:  CLRF   x27
2EE8:  CLRF   x28
2EEA:  CLRF   x29
2EEC:  CLRF   x2A
2EEE:  CLRF   x2B
2EF0:  CLRF   x2C
2EF2:  CLRF   x2D
2EF4:  CLRF   x2E
2EF6:  CLRF   x2F
2EF8:  CLRF   x30
2EFA:  CLRF   x31
2EFC:  CLRF   x32
2EFE:  CLRF   x33
2F00:  CLRF   x34
2F02:  CLRF   x35
2F04:  CLRF   x36
2F06:  CLRF   x37
2F08:  CLRF   x38
2F0A:  CLRF   x39
2F0C:  CLRF   x3A
2F0E:  CLRF   x3B
2F10:  CLRF   x3C
2F12:  CLRF   x3D
2F14:  CLRF   x3E
2F16:  CLRF   x3F
2F18:  CLRF   x40
2F1A:  CLRF   x41
2F1C:  CLRF   x42
2F1E:  CLRF   x43
2F20:  CLRF   x44
2F22:  CLRF   x45
2F24:  CLRF   x46
2F26:  CLRF   x47
2F28:  CLRF   x48
2F2A:  CLRF   x49
2F2C:  CLRF   x4A
2F2E:  CLRF   x4B
2F30:  CLRF   x4C
2F32:  CLRF   x4D
2F34:  CLRF   x4E
2F36:  CLRF   x4F
2F38:  CLRF   x50
2F3A:  CLRF   x51
2F3C:  CLRF   x52
2F3E:  CLRF   x53
2F40:  CLRF   x54
2F42:  CLRF   x55
2F44:  CLRF   x56
2F46:  CLRF   x57
2F48:  CLRF   x58
2F4A:  CLRF   x59
2F4C:  CLRF   x5A
2F4E:  CLRF   x5B
2F50:  CLRF   x5C
2F52:  CLRF   x5D
2F54:  CLRF   x5E
2F56:  CLRF   x5F
2F58:  CLRF   x60
2F5A:  CLRF   x61
2F5C:  CLRF   x62
2F5E:  CLRF   x63
2F60:  CLRF   x64
2F62:  CLRF   x65
2F64:  CLRF   x66
2F66:  CLRF   x67
2F68:  CLRF   x68
2F6A:  CLRF   x69
2F6C:  CLRF   x6A
2F6E:  CLRF   x6B
2F70:  CLRF   x6C
2F72:  CLRF   x6D
2F74:  CLRF   x6E
2F76:  CLRF   x6F
2F78:  CLRF   x70
2F7A:  CLRF   x71
2F7C:  CLRF   x72
2F7E:  CLRF   x73
2F80:  CLRF   x74
2F82:  CLRF   x75
2F84:  CLRF   x76
2F86:  CLRF   x77
2F88:  CLRF   x78
2F8A:  CLRF   x79
2F8C:  CLRF   x7A
2F8E:  CLRF   x7B
2F90:  CLRF   x7C
2F92:  CLRF   x7D
2F94:  CLRF   x7E
2F96:  CLRF   x7F
2F98:  CLRF   x80
2F9A:  CLRF   x81
2F9C:  CLRF   x82
2F9E:  CLRF   x83
2FA0:  CLRF   x84
2FA2:  CLRF   x85
2FA4:  CLRF   x86
2FA6:  CLRF   x87
2FA8:  CLRF   x88
2FAA:  CLRF   x89
2FAC:  CLRF   x8A
2FAE:  CLRF   x8B
2FB0:  CLRF   x8C
2FB2:  CLRF   x8D
2FB4:  CLRF   x8E
2FB6:  CLRF   x8F
2FB8:  CLRF   x90
2FBA:  CLRF   x91
2FBC:  CLRF   x92
2FBE:  CLRF   x93
2FC0:  CLRF   x94
2FC2:  CLRF   x95
2FC4:  CLRF   x96
2FC6:  CLRF   x97
2FC8:  CLRF   x98
2FCA:  CLRF   x99
2FCC:  CLRF   x9A
2FCE:  CLRF   x9B
2FD0:  CLRF   x9C
2FD2:  CLRF   x9D
2FD4:  CLRF   x9E
2FD6:  CLRF   x9F
2FD8:  CLRF   xA0
2FDA:  CLRF   xA1
2FDC:  CLRF   xA2
2FDE:  CLRF   xA3
2FE0:  CLRF   xA4
2FE2:  CLRF   xA5
2FE4:  CLRF   xA6
2FE6:  CLRF   xA7
2FE8:  CLRF   xA8
2FEA:  CLRF   xA9
2FEC:  CLRF   xAA
2FEE:  CLRF   xAB
2FF0:  CLRF   xAC
2FF2:  CLRF   xAD
2FF4:  CLRF   xAE
2FF6:  CLRF   xAF
2FF8:  CLRF   xB0
2FFA:  CLRF   xB1
2FFC:  CLRF   xB2
2FFE:  CLRF   xB3
3000:  CLRF   xB4
3002:  CLRF   xB5
3004:  CLRF   xB6
3006:  CLRF   xB7
3008:  CLRF   xB8
300A:  CLRF   xB9
300C:  CLRF   xBA
300E:  CLRF   xBB
3010:  CLRF   xBC
3012:  CLRF   xBD
3014:  CLRF   xBE
3016:  CLRF   xBF
3018:  CLRF   xC0
301A:  CLRF   xC1
301C:  CLRF   xC2
301E:  CLRF   xC3
3020:  CLRF   xC4
3022:  CLRF   xC5
3024:  CLRF   xC6
3026:  CLRF   xC7
3028:  CLRF   xC8
302A:  CLRF   xC9
302C:  CLRF   xCA
302E:  CLRF   xCB
3030:  CLRF   xCC
3032:  CLRF   xCD
3034:  CLRF   xCE
3036:  CLRF   xCF
3038:  CLRF   xD0
303A:  CLRF   xD1
303C:  CLRF   xD2
303E:  CLRF   xD3
3040:  CLRF   xD4
3042:  CLRF   xD5
3044:  CLRF   xD6
3046:  CLRF   xD7
3048:  CLRF   xD8
304A:  CLRF   xD9
304C:  CLRF   xDA
304E:  CLRF   xDB
3050:  CLRF   xDC
3052:  CLRF   xDD
3054:  CLRF   xDE
3056:  CLRF   xDF
3058:  CLRF   xE0
305A:  CLRF   xE1
305C:  CLRF   xE2
305E:  CLRF   xE3
3060:  CLRF   xE4
3062:  CLRF   xE5
3064:  CLRF   xE6
3066:  CLRF   xE7
3068:  CLRF   xE8
306A:  CLRF   xE9
306C:  CLRF   xEA
306E:  CLRF   xEB
3070:  CLRF   xEC
3072:  CLRF   xED
3074:  CLRF   xEE
3076:  CLRF   xEF
3078:  CLRF   xF0
307A:  CLRF   xF1
307C:  CLRF   xF2
307E:  CLRF   xF3
3080:  CLRF   xF4
3082:  CLRF   xF5
3084:  CLRF   xF6
3086:  CLRF   xF7
3088:  CLRF   xF8
308A:  CLRF   xF9
308C:  CLRF   xFA
308E:  CLRF   xFB
3090:  CLRF   xFC
3092:  CLRF   xFD
3094:  CLRF   xFE
3096:  CLRF   xFF
3098:  MOVLB  5
309A:  CLRF   x00
309C:  CLRF   x01
309E:  CLRF   x02
30A0:  CLRF   x03
30A2:  CLRF   x04
30A4:  CLRF   x05
30A6:  CLRF   x06
30A8:  CLRF   x07
30AA:  CLRF   x08
30AC:  CLRF   x09
30AE:  CLRF   x0A
30B0:  CLRF   x0B
30B2:  CLRF   x0C
30B4:  CLRF   x0D
30B6:  CLRF   x0E
30B8:  CLRF   x0F
30BA:  CLRF   x10
30BC:  CLRF   x11
30BE:  CLRF   x12
30C0:  CLRF   x13
30C2:  CLRF   x14
30C4:  CLRF   x15
30C6:  CLRF   x16
30C8:  CLRF   x17
30CA:  CLRF   x18
30CC:  CLRF   x19
30CE:  CLRF   x1A
30D0:  CLRF   x1B
30D2:  CLRF   x1C
30D4:  CLRF   x1D
30D6:  CLRF   x1E
30D8:  CLRF   x1F
30DA:  CLRF   x20
30DC:  CLRF   x21
30DE:  CLRF   x22
30E0:  CLRF   x23
30E2:  CLRF   x24
30E4:  CLRF   x25
30E6:  CLRF   x26
30E8:  CLRF   x27
30EA:  CLRF   x28
30EC:  CLRF   x29
30EE:  CLRF   x2A
30F0:  CLRF   x2B
30F2:  CLRF   x2C
30F4:  CLRF   x2D
30F6:  CLRF   x2E
30F8:  CLRF   x2F
30FA:  CLRF   x30
30FC:  CLRF   x31
30FE:  CLRF   x32
3100:  CLRF   x33
3102:  CLRF   x34
3104:  CLRF   x35
3106:  CLRF   x36
3108:  CLRF   x37
310A:  CLRF   x38
310C:  CLRF   x39
310E:  CLRF   x3A
3110:  CLRF   x3B
3112:  CLRF   x3C
3114:  CLRF   x3D
3116:  CLRF   x3E
3118:  CLRF   x3F
311A:  CLRF   x40
311C:  CLRF   x41
311E:  CLRF   x42
3120:  CLRF   x43
3122:  CLRF   x44
3124:  CLRF   x45
3126:  CLRF   x46
3128:  CLRF   x47
312A:  CLRF   x48
312C:  CLRF   x49
312E:  CLRF   x4A
3130:  CLRF   x4B
3132:  CLRF   x4C
3134:  CLRF   x4D
3136:  CLRF   x4E
3138:  CLRF   x4F
313A:  CLRF   x50
313C:  CLRF   x51
313E:  CLRF   x52
3140:  CLRF   x53
3142:  CLRF   x54
3144:  CLRF   x55
3146:  CLRF   x56
3148:  CLRF   x57
314A:  CLRF   x58
314C:  CLRF   x59
314E:  CLRF   x5A
3150:  CLRF   x5B
3152:  CLRF   x5C
3154:  CLRF   x5D
3156:  CLRF   x8E
3158:  CLRF   x8F
315A:  CLRF   x90
315C:  CLRF   x91
315E:  CLRF   x92
3160:  CLRF   x93
3162:  CLRF   x94
3164:  CLRF   x95
3166:  CLRF   x96
3168:  CLRF   x97
316A:  CLRF   x98
316C:  CLRF   x99
316E:  CLRF   x9A
3170:  CLRF   x9B
3172:  CLRF   x9C
3174:  CLRF   x9D
3176:  CLRF   xF4
3178:  CLRF   xF5
....................    delay_ms(1000);    
317A:  MOVLW  04
317C:  MOVWF  xF6
317E:  MOVLW  FA
3180:  MOVWF  xFC
3182:  MOVLB  0
3184:  CALL   0CF8
3188:  MOVLB  5
318A:  DECFSZ xF6,F
318C:  BRA    317E
....................    Libre1_on;Libre2_on;Libre3_on;Libre4_on; 
318E:  BSF    F8B.6
3190:  BCF    F94.6
3192:  BSF    F8B.7
3194:  BCF    F94.7
3196:  BSF    F8A.0
3198:  BCF    F93.0
319A:  BSF    F8A.1
319C:  BCF    F93.1
....................    Ventilador_off;Resistencia_off;Resistencia2_off; 
319E:  BCF    F8B.1
31A0:  BCF    F94.1
31A2:  BCF    F8B.0
31A4:  BCF    F94.0
31A6:  BCF    F8B.2
31A8:  BCF    F94.2
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
31AA:  MOVLW  85
31AC:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
31AE:  BSF    F9D.0
....................    setup_adc_ports(AN0_TO_AN3); 
31B0:  MOVF   FC1,W
31B2:  ANDLW  C0
31B4:  IORLW  0B
31B6:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_64); 
31B8:  BCF    FC0.0
31BA:  BSF    FC0.1
31BC:  BSF    FC0.2
31BE:  BSF    FC0.7
31C0:  BSF    FC2.0
....................    /*setup_ccp1 (CCP_PWM); 
....................    setup_timer_2(T2_DIV_BY_4, 255, 1);    
....................    set_pwm1_duty(0);*/ 
....................    enable_interrupts(global); 
31C2:  MOVLW  C0
31C4:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(10);Testerilizacionp[1]=read_eeprom(20);Testerilizacionp[2]=read_eeprom(30);Testerilizacionp[3]=read_eeprom(40); 
31C6:  MOVFF  FF2,5F6
31CA:  BCF    FF2.7
31CC:  MOVLW  0A
31CE:  MOVWF  FA9
31D0:  BCF    FA6.6
31D2:  BCF    FA6.7
31D4:  BSF    FA6.0
31D6:  MOVF   FA8,W
31D8:  BTFSC  xF6.7
31DA:  BSF    FF2.7
31DC:  MOVWF  x92
31DE:  MOVFF  FF2,5F6
31E2:  BCF    FF2.7
31E4:  MOVLW  14
31E6:  MOVWF  FA9
31E8:  BCF    FA6.6
31EA:  BCF    FA6.7
31EC:  BSF    FA6.0
31EE:  MOVF   FA8,W
31F0:  BTFSC  xF6.7
31F2:  BSF    FF2.7
31F4:  MOVWF  x93
31F6:  MOVFF  FF2,5F6
31FA:  BCF    FF2.7
31FC:  MOVLW  1E
31FE:  MOVWF  FA9
3200:  BCF    FA6.6
3202:  BCF    FA6.7
3204:  BSF    FA6.0
3206:  MOVF   FA8,W
3208:  BTFSC  xF6.7
320A:  BSF    FF2.7
320C:  MOVWF  x94
320E:  MOVFF  FF2,5F6
3212:  BCF    FF2.7
3214:  MOVLW  28
3216:  MOVWF  FA9
3218:  BCF    FA6.6
321A:  BCF    FA6.7
321C:  BSF    FA6.0
321E:  MOVF   FA8,W
3220:  BTFSC  xF6.7
3222:  BSF    FF2.7
3224:  MOVWF  x95
....................    Setpoint=read_eeprom(50); 
3226:  MOVFF  FF2,5F6
322A:  BCF    FF2.7
322C:  MOVLW  32
322E:  MOVWF  FA9
3230:  BCF    FA6.6
3232:  BCF    FA6.7
3234:  BSF    FA6.0
3236:  MOVF   FA8,W
3238:  BTFSC  xF6.7
323A:  BSF    FF2.7
323C:  MOVWF  x70
....................    Password[0]=read_eeprom(60);Password[1]=read_eeprom(70);Password[2]=read_eeprom(80);Password[3]=read_eeprom(90); 
323E:  MOVFF  FF2,5F6
3242:  BCF    FF2.7
3244:  MOVLW  3C
3246:  MOVWF  FA9
3248:  BCF    FA6.6
324A:  BCF    FA6.7
324C:  BSF    FA6.0
324E:  MOVF   FA8,W
3250:  BTFSC  xF6.7
3252:  BSF    FF2.7
3254:  MOVWF  x9A
3256:  MOVFF  FF2,5F6
325A:  BCF    FF2.7
325C:  MOVLW  46
325E:  MOVWF  FA9
3260:  BCF    FA6.6
3262:  BCF    FA6.7
3264:  BSF    FA6.0
3266:  MOVF   FA8,W
3268:  BTFSC  xF6.7
326A:  BSF    FF2.7
326C:  MOVWF  x9B
326E:  MOVFF  FF2,5F6
3272:  BCF    FF2.7
3274:  MOVLW  50
3276:  MOVWF  FA9
3278:  BCF    FA6.6
327A:  BCF    FA6.7
327C:  BSF    FA6.0
327E:  MOVF   FA8,W
3280:  BTFSC  xF6.7
3282:  BSF    FF2.7
3284:  MOVWF  x9C
3286:  MOVFF  FF2,5F6
328A:  BCF    FF2.7
328C:  MOVLW  5A
328E:  MOVWF  FA9
3290:  BCF    FA6.6
3292:  BCF    FA6.7
3294:  BSF    FA6.0
3296:  MOVF   FA8,W
3298:  BTFSC  xF6.7
329A:  BSF    FF2.7
329C:  MOVWF  x9D
....................    //Ganancia=read_eeprom(20); 
....................    //Tciclo=read_eeprom(30); 
....................    //Ajuste=read_eeprom(40); 
....................    //Ajusten=read_eeprom(50); 
....................    //MediaMovil=read_eeprom(60); 
....................    //Coeficiente=read_eeprom(70); 
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
329E:  MOVLW  01
32A0:  MOVWF  xF6
32A2:  MOVLB  0
32A4:  CALL   0E74
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
32A8:  MOVLB  5
32AA:  CLRF   xF7
32AC:  MOVLB  0
32AE:  CALL   0D62
....................    strcpy(Menus.Letra,"JP Inglobal"); 
32B2:  MOVLW  05
32B4:  MOVWF  FEA
32B6:  MOVLW  D6
32B8:  MOVWF  FE9
32BA:  MOVFF  FF2,5F6
32BE:  BCF    FF2.7
32C0:  MOVLW  00
32C2:  CALL   06BE
32C6:  TBLRD*-
32C8:  TBLRD*+
32CA:  MOVF   FF5,W
32CC:  MOVWF  FEE
32CE:  IORLW  00
32D0:  BNZ   32C8
32D2:  MOVLB  5
32D4:  BTFSC  xF6.7
32D6:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
32D8:  MOVLW  05
32DA:  MOVWF  xF7
32DC:  MOVLW  D6
32DE:  MOVWF  xF6
32E0:  CLRF   xF8
32E2:  CLRF   xF9
32E4:  CLRF   xFA
32E6:  MOVLW  02
32E8:  MOVWF  xFB
32EA:  MOVLB  0
32EC:  CALL   1394
....................    strcpy(Menus.Letra,"     Incubadora"); 
32F0:  MOVLW  05
32F2:  MOVWF  FEA
32F4:  MOVLW  D6
32F6:  MOVWF  FE9
32F8:  MOVFF  FF2,5F6
32FC:  BCF    FF2.7
32FE:  MOVLW  00
3300:  CALL   06E4
3304:  TBLRD*-
3306:  TBLRD*+
3308:  MOVF   FF5,W
330A:  MOVWF  FEE
330C:  IORLW  00
330E:  BNZ   3306
3310:  MOVLB  5
3312:  BTFSC  xF6.7
3314:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
3316:  MOVLW  05
3318:  MOVWF  xF7
331A:  MOVLW  D6
331C:  MOVWF  xF6
331E:  CLRF   xF8
3320:  MOVLW  14
3322:  MOVWF  xF9
3324:  CLRF   xFA
3326:  MOVLW  01
3328:  MOVWF  xFB
332A:  MOVLB  0
332C:  CALL   1394
....................    strcpy(Menus.Letra,"   Digital" ); 
3330:  MOVLW  05
3332:  MOVWF  FEA
3334:  MOVLW  D6
3336:  MOVWF  FE9
3338:  MOVFF  FF2,5F6
333C:  BCF    FF2.7
333E:  MOVLW  00
3340:  CALL   070E
3344:  TBLRD*-
3346:  TBLRD*+
3348:  MOVF   FF5,W
334A:  MOVWF  FEE
334C:  IORLW  00
334E:  BNZ   3346
3350:  MOVLB  5
3352:  BTFSC  xF6.7
3354:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,1); 
3356:  MOVLW  05
3358:  MOVWF  xF7
335A:  MOVLW  D6
335C:  MOVWF  xF6
335E:  CLRF   xF8
3360:  MOVLW  1E
3362:  MOVWF  xF9
3364:  CLRF   xFA
3366:  MOVLW  01
3368:  MOVWF  xFB
336A:  MOVLB  0
336C:  CALL   1394
....................    strcpy(Menus.Letra,"  400 Lts"); 
3370:  MOVLW  05
3372:  MOVWF  FEA
3374:  MOVLW  D6
3376:  MOVWF  FE9
3378:  MOVFF  FF2,5F6
337C:  BCF    FF2.7
337E:  MOVLW  00
3380:  CALL   0734
3384:  TBLRD*-
3386:  TBLRD*+
3388:  MOVF   FF5,W
338A:  MOVWF  FEE
338C:  IORLW  00
338E:  BNZ   3386
3390:  MOVLB  5
3392:  BTFSC  xF6.7
3394:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,45,0,2); 
3396:  MOVLW  05
3398:  MOVWF  xF7
339A:  MOVLW  D6
339C:  MOVWF  xF6
339E:  CLRF   xF8
33A0:  MOVLW  2D
33A2:  MOVWF  xF9
33A4:  CLRF   xFA
33A6:  MOVLW  02
33A8:  MOVWF  xFB
33AA:  MOVLB  0
33AC:  CALL   1394
....................    delay_ms(1000); 
33B0:  MOVLW  04
33B2:  MOVLB  5
33B4:  MOVWF  xF6
33B6:  MOVLW  FA
33B8:  MOVWF  xFC
33BA:  MOVLB  0
33BC:  CALL   0CF8
33C0:  MOVLB  5
33C2:  DECFSZ xF6,F
33C4:  BRA    33B6
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
33C6:  CLRF   xF7
33C8:  MOVLB  0
33CA:  CALL   0D62
....................    displayContrasena(Contrasena[0],20,30,1); 
33CE:  MOVFF  596,5F8
33D2:  MOVLW  14
33D4:  MOVLB  5
33D6:  MOVWF  xF9
33D8:  MOVLW  1E
33DA:  MOVWF  xFA
33DC:  MOVLW  01
33DE:  MOVWF  xFB
33E0:  MOVLB  0
33E2:  CALL   15CC
....................    displayContrasena(Contrasena[1],40,30,0); 
33E6:  MOVFF  597,5F8
33EA:  MOVLW  28
33EC:  MOVLB  5
33EE:  MOVWF  xF9
33F0:  MOVLW  1E
33F2:  MOVWF  xFA
33F4:  CLRF   xFB
33F6:  MOVLB  0
33F8:  CALL   15CC
....................    displayContrasena(Contrasena[2],60,30,0); 
33FC:  MOVFF  598,5F8
3400:  MOVLW  3C
3402:  MOVLB  5
3404:  MOVWF  xF9
3406:  MOVLW  1E
3408:  MOVWF  xFA
340A:  CLRF   xFB
340C:  MOVLB  0
340E:  CALL   15CC
....................    displayContrasena(Contrasena[3],80,30,0); 
3412:  MOVFF  599,5F8
3416:  MOVLW  50
3418:  MOVLB  5
341A:  MOVWF  xF9
341C:  MOVLW  1E
341E:  MOVWF  xFA
3420:  CLRF   xFB
3422:  MOVLB  0
3424:  CALL   15CC
....................     
....................    for(i=0;i<80;i++) 
3428:  MOVLB  5
342A:  CLRF   x6C
342C:  MOVF   x6C,W
342E:  SUBLW  4F
3430:  BNC   3452
....................    { 
....................       Temperatura=Leer_Sensor(MediaMovil); 
3432:  MOVFF  562,5F6
3436:  MOVLB  0
3438:  CALL   1B50
343C:  MOVFF  03,5D5
3440:  MOVFF  02,5D4
3444:  MOVFF  01,5D3
3448:  MOVFF  00,5D2
....................    } 
344C:  MOVLB  5
344E:  INCF   x6C,F
3450:  BRA    342C
....................    /*Menu=20; 
....................    glcd_fillScreen(OFF); 
....................    Ajuste=0; 
....................    Ajusten=0;*/ 
....................    while(true) 
....................    { 
....................     
....................       if(UP && DOWN && RIGHT && LEFT) 
3452:  BSF    F92.5
3454:  BTFSS  F80.5
3456:  BRA    34E2
3458:  BSF    F96.0
345A:  BTFSS  F84.0
345C:  BRA    34E2
345E:  BSF    F96.1
3460:  BTFSS  F84.1
3462:  BRA    34E2
3464:  BSF    F96.2
3466:  BTFSS  F84.2
3468:  BRA    34E2
....................       { 
....................          delay_ms(500); 
346A:  MOVLW  02
346C:  MOVWF  xF6
346E:  MOVLW  FA
3470:  MOVWF  xFC
3472:  MOVLB  0
3474:  CALL   0CF8
3478:  MOVLB  5
347A:  DECFSZ xF6,F
347C:  BRA    346E
....................          strcpy(Menus.Letra,"Cargando.."); 
347E:  MOVLW  05
3480:  MOVWF  FEA
3482:  MOVLW  D6
3484:  MOVWF  FE9
3486:  MOVFF  FF2,5F6
348A:  BCF    FF2.7
348C:  MOVLW  00
348E:  MOVLB  0
3490:  CALL   0758
3494:  TBLRD*-
3496:  TBLRD*+
3498:  MOVF   FF5,W
349A:  MOVWF  FEE
349C:  IORLW  00
349E:  BNZ   3496
34A0:  MOVLB  5
34A2:  BTFSC  xF6.7
34A4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,30,1,1); 
34A6:  MOVLW  05
34A8:  MOVWF  xF7
34AA:  MOVLW  D6
34AC:  MOVWF  xF6
34AE:  CLRF   xF8
34B0:  MOVLW  1E
34B2:  MOVWF  xF9
34B4:  MOVLW  01
34B6:  MOVWF  xFA
34B8:  MOVWF  xFB
34BA:  MOVLB  0
34BC:  CALL   1394
....................          delay_ms(2000); 
34C0:  MOVLW  08
34C2:  MOVLB  5
34C4:  MOVWF  xF6
34C6:  MOVLW  FA
34C8:  MOVWF  xFC
34CA:  MOVLB  0
34CC:  CALL   0CF8
34D0:  MOVLB  5
34D2:  DECFSZ xF6,F
34D4:  BRA    34C6
....................          Menu=100; 
34D6:  MOVLW  64
34D8:  MOVWF  x6A
....................          glcd_fillScreen(OFF); 
34DA:  CLRF   xF7
34DC:  MOVLB  0
34DE:  CALL   0D62
....................       } 
....................     
....................       glcd_update();             
34E2:  MOVLB  0
34E4:  CALL   0DBC
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
34E8:  MOVLB  5
34EA:  MOVF   x6A,F
34EC:  BTFSS  FD8.2
34EE:  BRA    3A6A
....................        
....................       strcpy(Menus.Letra,"Clave"); 
34F0:  MOVLW  05
34F2:  MOVWF  FEA
34F4:  MOVLW  D6
34F6:  MOVWF  FE9
34F8:  MOVFF  FF2,5F6
34FC:  BCF    FF2.7
34FE:  MOVLW  00
3500:  MOVLB  0
3502:  CALL   077E
3506:  TBLRD*-
3508:  TBLRD*+
350A:  MOVF   FF5,W
350C:  MOVWF  FEE
350E:  IORLW  00
3510:  BNZ   3508
3512:  MOVLB  5
3514:  BTFSC  xF6.7
3516:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
3518:  MOVLW  05
351A:  MOVWF  xF7
351C:  MOVLW  D6
351E:  MOVWF  xF6
3520:  MOVLW  1E
3522:  MOVWF  xF8
3524:  CLRF   xF9
3526:  MOVLW  01
3528:  MOVWF  xFA
352A:  MOVLW  02
352C:  MOVWF  xFB
352E:  MOVLB  0
3530:  CALL   1394
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
3534:  BSF    F92.5
3536:  BTFSS  F80.5
3538:  BRA    360A
....................       { 
....................          if(Flanco == 0) 
353A:  MOVLB  5
353C:  BTFSC  x65.0
353E:  BRA    3608
....................          { 
....................             Flanco = 1;delay_ms(30); 
3540:  BSF    x65.0
3542:  MOVLW  1E
3544:  MOVWF  xFC
3546:  MOVLB  0
3548:  CALL   0CF8
....................             for(i=1;i<=4;i++) 
354C:  MOVLW  01
354E:  MOVLB  5
3550:  MOVWF  x6C
3552:  MOVF   x6C,W
3554:  SUBLW  04
3556:  BNC   3608
....................             { 
....................                if(unidad==i) 
3558:  MOVF   x6C,W
355A:  SUBWF  x6B,W
355C:  BNZ   35D2
....................                { 
....................                   Contrasena[i-1]++; 
355E:  MOVLW  01
3560:  SUBWF  x6C,W
3562:  CLRF   03
3564:  ADDLW  96
3566:  MOVWF  FE9
3568:  MOVLW  05
356A:  ADDWFC 03,W
356C:  MOVWF  FEA
356E:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
3570:  MOVLW  01
3572:  SUBWF  x6C,W
3574:  CLRF   03
3576:  ADDLW  96
3578:  MOVWF  FE9
357A:  MOVLW  05
357C:  ADDWFC 03,W
357E:  MOVWF  FEA
3580:  BTFSC  FEF.7
3582:  BRA    359C
3584:  MOVF   FEF,W
3586:  SUBLW  09
3588:  BC    359C
....................                   { 
....................                      Contrasena[i-1]=0; 
358A:  MOVLW  01
358C:  SUBWF  x6C,W
358E:  CLRF   03
3590:  ADDLW  96
3592:  MOVWF  FE9
3594:  MOVLW  05
3596:  ADDWFC 03,W
3598:  MOVWF  FEA
359A:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
359C:  MOVLW  01
359E:  SUBWF  x6C,W
35A0:  CLRF   03
35A2:  ADDLW  96
35A4:  MOVWF  FE9
35A6:  MOVLW  05
35A8:  ADDWFC 03,W
35AA:  MOVWF  FEA
35AC:  MOVFF  FEF,5F6
35B0:  MOVF   x6C,W
35B2:  MULLW  14
35B4:  MOVFF  FF3,5F7
35B8:  MOVFF  5F6,5F8
35BC:  MOVFF  5F7,5F9
35C0:  MOVLW  1E
35C2:  MOVWF  xFA
35C4:  MOVLW  01
35C6:  MOVWF  xFB
35C8:  MOVLB  0
35CA:  CALL   15CC
....................                } 
....................                else 
35CE:  BRA    3602
35D0:  MOVLB  5
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
35D2:  MOVLW  01
35D4:  SUBWF  x6C,W
35D6:  CLRF   03
35D8:  ADDLW  96
35DA:  MOVWF  FE9
35DC:  MOVLW  05
35DE:  ADDWFC 03,W
35E0:  MOVWF  FEA
35E2:  MOVFF  FEF,5F6
35E6:  MOVF   x6C,W
35E8:  MULLW  14
35EA:  MOVFF  FF3,5F7
35EE:  MOVFF  5F6,5F8
35F2:  MOVFF  5F7,5F9
35F6:  MOVLW  1E
35F8:  MOVWF  xFA
35FA:  CLRF   xFB
35FC:  MOVLB  0
35FE:  CALL   15CC
....................                } 
....................             } 
3602:  MOVLB  5
3604:  INCF   x6C,F
3606:  BRA    3552
....................          } 
....................       } 
....................          else 
3608:  BRA    360E
....................             {Flanco = 0;} 
360A:  MOVLB  5
360C:  BCF    x65.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
360E:  BSF    F96.0
3610:  BTFSS  F84.0
3612:  BRA    36E0
....................       { 
....................          if(Flanco2 == 0) 
3614:  BTFSC  x65.2
3616:  BRA    36DE
....................             {Flanco2 = 1;delay_ms(30); 
3618:  BSF    x65.2
361A:  MOVLW  1E
361C:  MOVWF  xFC
361E:  MOVLB  0
3620:  CALL   0CF8
....................                for(i=1;i<=4;i++) 
3624:  MOVLW  01
3626:  MOVLB  5
3628:  MOVWF  x6C
362A:  MOVF   x6C,W
362C:  SUBLW  04
362E:  BNC   36DE
....................                { 
....................                   if(unidad==i) 
3630:  MOVF   x6C,W
3632:  SUBWF  x6B,W
3634:  BNZ   36A8
....................                   {Contrasena[i-1]--;  
3636:  MOVLW  01
3638:  SUBWF  x6C,W
363A:  CLRF   03
363C:  ADDLW  96
363E:  MOVWF  FE9
3640:  MOVLW  05
3642:  ADDWFC 03,W
3644:  MOVWF  FEA
3646:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
3648:  MOVLW  01
364A:  SUBWF  x6C,W
364C:  CLRF   03
364E:  ADDLW  96
3650:  MOVWF  FE9
3652:  MOVLW  05
3654:  ADDWFC 03,W
3656:  MOVWF  FEA
3658:  BTFSC  FEF.7
365A:  BRA    365E
365C:  BRA    3672
....................                         {Contrasena[i-1]=9;} 
365E:  MOVLW  01
3660:  SUBWF  x6C,W
3662:  CLRF   03
3664:  ADDLW  96
3666:  MOVWF  FE9
3668:  MOVLW  05
366A:  ADDWFC 03,W
366C:  MOVWF  FEA
366E:  MOVLW  09
3670:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
3672:  MOVLW  01
3674:  SUBWF  x6C,W
3676:  CLRF   03
3678:  ADDLW  96
367A:  MOVWF  FE9
367C:  MOVLW  05
367E:  ADDWFC 03,W
3680:  MOVWF  FEA
3682:  MOVFF  FEF,5F6
3686:  MOVF   x6C,W
3688:  MULLW  14
368A:  MOVFF  FF3,5F7
368E:  MOVFF  5F6,5F8
3692:  MOVFF  5F7,5F9
3696:  MOVLW  1E
3698:  MOVWF  xFA
369A:  MOVLW  01
369C:  MOVWF  xFB
369E:  MOVLB  0
36A0:  CALL   15CC
....................                   else 
36A4:  BRA    36D8
36A6:  MOVLB  5
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
36A8:  MOVLW  01
36AA:  SUBWF  x6C,W
36AC:  CLRF   03
36AE:  ADDLW  96
36B0:  MOVWF  FE9
36B2:  MOVLW  05
36B4:  ADDWFC 03,W
36B6:  MOVWF  FEA
36B8:  MOVFF  FEF,5F6
36BC:  MOVF   x6C,W
36BE:  MULLW  14
36C0:  MOVFF  FF3,5F7
36C4:  MOVFF  5F6,5F8
36C8:  MOVFF  5F7,5F9
36CC:  MOVLW  1E
36CE:  MOVWF  xFA
36D0:  CLRF   xFB
36D2:  MOVLB  0
36D4:  CALL   15CC
....................                }       
36D8:  MOVLB  5
36DA:  INCF   x6C,F
36DC:  BRA    362A
....................             }      
....................       } 
....................          else 
36DE:  BRA    36E2
....................             {Flanco2 = 0;}   
36E0:  BCF    x65.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
36E2:  BSF    F96.1
36E4:  BTFSS  F84.1
36E6:  BRA    377A
....................       { 
....................          if(Flanco1 == 0) 
36E8:  BTFSC  x65.1
36EA:  BRA    3778
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
36EC:  BSF    x65.1
36EE:  MOVLW  1E
36F0:  MOVWF  xFC
36F2:  MOVLB  0
36F4:  CALL   0CF8
36F8:  MOVLB  5
36FA:  INCF   x6B,F
....................                for(i=1;i<=4;i++) 
36FC:  MOVLW  01
36FE:  MOVWF  x6C
3700:  MOVF   x6C,W
3702:  SUBLW  04
3704:  BNC   3778
....................                { 
....................                   if(unidad==i) 
3706:  MOVF   x6C,W
3708:  SUBWF  x6B,W
370A:  BNZ   3742
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
370C:  MOVLW  01
370E:  SUBWF  x6C,W
3710:  CLRF   03
3712:  ADDLW  96
3714:  MOVWF  FE9
3716:  MOVLW  05
3718:  ADDWFC 03,W
371A:  MOVWF  FEA
371C:  MOVFF  FEF,5F6
3720:  MOVF   x6C,W
3722:  MULLW  14
3724:  MOVFF  FF3,5F7
3728:  MOVFF  5F6,5F8
372C:  MOVFF  5F7,5F9
3730:  MOVLW  1E
3732:  MOVWF  xFA
3734:  MOVLW  01
3736:  MOVWF  xFB
3738:  MOVLB  0
373A:  CALL   15CC
....................                   else 
373E:  BRA    3772
3740:  MOVLB  5
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
3742:  MOVLW  01
3744:  SUBWF  x6C,W
3746:  CLRF   03
3748:  ADDLW  96
374A:  MOVWF  FE9
374C:  MOVLW  05
374E:  ADDWFC 03,W
3750:  MOVWF  FEA
3752:  MOVFF  FEF,5F6
3756:  MOVF   x6C,W
3758:  MULLW  14
375A:  MOVFF  FF3,5F7
375E:  MOVFF  5F6,5F8
3762:  MOVFF  5F7,5F9
3766:  MOVLW  1E
3768:  MOVWF  xFA
376A:  CLRF   xFB
376C:  MOVLB  0
376E:  CALL   15CC
....................                } 
3772:  MOVLB  5
3774:  INCF   x6C,F
3776:  BRA    3700
....................             } 
....................       } 
....................          else 
3778:  BRA    377C
....................             {Flanco1 = 0;}   
377A:  BCF    x65.1
....................      
....................       if(unidad>4) 
377C:  MOVF   x6B,W
377E:  SUBLW  04
3780:  BTFSC  FD8.0
3782:  BRA    3A6A
....................       {glcd_fillScreen(OFF);unidad=4; 
3784:  CLRF   xF7
3786:  MOVLB  0
3788:  CALL   0D62
378C:  MOVLW  04
378E:  MOVLB  5
3790:  MOVWF  x6B
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
3792:  MOVF   x96,W
3794:  SUBLW  03
3796:  BNZ   387E
3798:  MOVF   x97,W
379A:  SUBLW  08
379C:  BNZ   387E
379E:  MOVF   x98,W
37A0:  SUBLW  09
37A2:  BNZ   387E
37A4:  MOVF   x99,W
37A6:  SUBLW  02
37A8:  BNZ   387E
....................             {write_eeprom(60,0);delay_ms(20);write_eeprom(70,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
37AA:  MOVLW  3C
37AC:  MOVWF  FA9
37AE:  CLRF   FA8
37B0:  BCF    FA6.6
37B2:  BCF    FA6.7
37B4:  BSF    FA6.2
37B6:  MOVF   FF2,W
37B8:  MOVWF  00
37BA:  BCF    FF2.7
37BC:  MOVLB  F
37BE:  MOVLW  55
37C0:  MOVWF  FA7
37C2:  MOVLW  AA
37C4:  MOVWF  FA7
37C6:  BSF    FA6.1
37C8:  BTFSC  FA6.1
37CA:  BRA    37C8
37CC:  BCF    FA6.2
37CE:  MOVF   00,W
37D0:  IORWF  FF2,F
37D2:  MOVLW  14
37D4:  MOVLB  5
37D6:  MOVWF  xFC
37D8:  MOVLB  0
37DA:  CALL   0CF8
37DE:  MOVLW  46
37E0:  MOVWF  FA9
37E2:  CLRF   FA8
37E4:  BCF    FA6.6
37E6:  BCF    FA6.7
37E8:  BSF    FA6.2
37EA:  MOVF   FF2,W
37EC:  MOVWF  00
37EE:  BCF    FF2.7
37F0:  MOVLB  F
37F2:  MOVLW  55
37F4:  MOVWF  FA7
37F6:  MOVLW  AA
37F8:  MOVWF  FA7
37FA:  BSF    FA6.1
37FC:  BTFSC  FA6.1
37FE:  BRA    37FC
3800:  BCF    FA6.2
3802:  MOVF   00,W
3804:  IORWF  FF2,F
3806:  MOVLW  14
3808:  MOVLB  5
380A:  MOVWF  xFC
380C:  MOVLB  0
380E:  CALL   0CF8
....................              write_eeprom(80,0);delay_ms(20);write_eeprom(90,0);delay_ms(20); 
3812:  MOVLW  50
3814:  MOVWF  FA9
3816:  CLRF   FA8
3818:  BCF    FA6.6
381A:  BCF    FA6.7
381C:  BSF    FA6.2
381E:  MOVF   FF2,W
3820:  MOVWF  00
3822:  BCF    FF2.7
3824:  MOVLB  F
3826:  MOVLW  55
3828:  MOVWF  FA7
382A:  MOVLW  AA
382C:  MOVWF  FA7
382E:  BSF    FA6.1
3830:  BTFSC  FA6.1
3832:  BRA    3830
3834:  BCF    FA6.2
3836:  MOVF   00,W
3838:  IORWF  FF2,F
383A:  MOVLW  14
383C:  MOVLB  5
383E:  MOVWF  xFC
3840:  MOVLB  0
3842:  CALL   0CF8
3846:  MOVLW  5A
3848:  MOVWF  FA9
384A:  CLRF   FA8
384C:  BCF    FA6.6
384E:  BCF    FA6.7
3850:  BSF    FA6.2
3852:  MOVF   FF2,W
3854:  MOVWF  00
3856:  BCF    FF2.7
3858:  MOVLB  F
385A:  MOVLW  55
385C:  MOVWF  FA7
385E:  MOVLW  AA
3860:  MOVWF  FA7
3862:  BSF    FA6.1
3864:  BTFSC  FA6.1
3866:  BRA    3864
3868:  BCF    FA6.2
386A:  MOVF   00,W
386C:  IORWF  FF2,F
386E:  MOVLW  14
3870:  MOVLB  5
3872:  MOVWF  xFC
3874:  MOVLB  0
3876:  CALL   0CF8
....................              reset_cpu();}         
387A:  RESET
387C:  MOVLB  5
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
387E:  MOVF   x9A,W
3880:  SUBWF  x96,W
3882:  BNZ   3952
3884:  MOVF   x9B,W
3886:  SUBWF  x97,W
3888:  BNZ   3952
388A:  MOVF   x9C,W
388C:  SUBWF  x98,W
388E:  BNZ   3952
3890:  MOVF   x9D,W
3892:  SUBWF  x99,W
3894:  BNZ   3952
....................          { 
....................             glcd_fillScreen(OFF); 
3896:  CLRF   xF7
3898:  MOVLB  0
389A:  CALL   0D62
....................             strcpy(Menus.Letra,"Clave"); 
389E:  MOVLW  05
38A0:  MOVWF  FEA
38A2:  MOVLW  D6
38A4:  MOVWF  FE9
38A6:  MOVFF  FF2,5F6
38AA:  BCF    FF2.7
38AC:  MOVLW  00
38AE:  CALL   077E
38B2:  TBLRD*-
38B4:  TBLRD*+
38B6:  MOVF   FF5,W
38B8:  MOVWF  FEE
38BA:  IORLW  00
38BC:  BNZ   38B4
38BE:  MOVLB  5
38C0:  BTFSC  xF6.7
38C2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
38C4:  MOVLW  05
38C6:  MOVWF  xF7
38C8:  MOVLW  D6
38CA:  MOVWF  xF6
38CC:  MOVLW  1E
38CE:  MOVWF  xF8
38D0:  CLRF   xF9
38D2:  CLRF   xFA
38D4:  MOVLW  02
38D6:  MOVWF  xFB
38D8:  MOVLB  0
38DA:  CALL   1394
....................             strcpy(Menus.Letra,"Correcta"); 
38DE:  MOVLW  05
38E0:  MOVWF  FEA
38E2:  MOVLW  D6
38E4:  MOVWF  FE9
38E6:  MOVFF  FF2,5F6
38EA:  BCF    FF2.7
38EC:  MOVLW  00
38EE:  CALL   079E
38F2:  TBLRD*-
38F4:  TBLRD*+
38F6:  MOVF   FF5,W
38F8:  MOVWF  FEE
38FA:  IORLW  00
38FC:  BNZ   38F4
38FE:  MOVLB  5
3900:  BTFSC  xF6.7
3902:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
3904:  MOVLW  05
3906:  MOVWF  xF7
3908:  MOVLW  D6
390A:  MOVWF  xF6
390C:  MOVLW  0F
390E:  MOVWF  xF8
3910:  MOVLW  1E
3912:  MOVWF  xF9
3914:  CLRF   xFA
3916:  MOVLW  02
3918:  MOVWF  xFB
391A:  MOVLB  0
391C:  CALL   1394
....................             Menu=1;glcd_update();delay_ms(1000); 
3920:  MOVLW  01
3922:  MOVLB  5
3924:  MOVWF  x6A
3926:  MOVLB  0
3928:  CALL   0DBC
392C:  MOVLW  04
392E:  MOVLB  5
3930:  MOVWF  xF6
3932:  MOVLW  FA
3934:  MOVWF  xFC
3936:  MOVLB  0
3938:  CALL   0CF8
393C:  MOVLB  5
393E:  DECFSZ xF6,F
3940:  BRA    3932
....................             glcd_fillScreen(OFF);unidad=1; 
3942:  CLRF   xF7
3944:  MOVLB  0
3946:  CALL   0D62
394A:  MOVLW  01
394C:  MOVLB  5
394E:  MOVWF  x6B
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
3950:  BRA    3A6A
....................          { 
....................             glcd_fillScreen(OFF); 
3952:  CLRF   xF7
3954:  MOVLB  0
3956:  CALL   0D62
....................             strcpy(Menus.Letra,"Clave"); 
395A:  MOVLW  05
395C:  MOVWF  FEA
395E:  MOVLW  D6
3960:  MOVWF  FE9
3962:  MOVFF  FF2,5F6
3966:  BCF    FF2.7
3968:  MOVLW  00
396A:  CALL   077E
396E:  TBLRD*-
3970:  TBLRD*+
3972:  MOVF   FF5,W
3974:  MOVWF  FEE
3976:  IORLW  00
3978:  BNZ   3970
397A:  MOVLB  5
397C:  BTFSC  xF6.7
397E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3980:  MOVLW  05
3982:  MOVWF  xF7
3984:  MOVLW  D6
3986:  MOVWF  xF6
3988:  MOVLW  1E
398A:  MOVWF  xF8
398C:  CLRF   xF9
398E:  CLRF   xFA
3990:  MOVLW  02
3992:  MOVWF  xFB
3994:  MOVLB  0
3996:  CALL   1394
....................             strcpy(Menus.Letra,"Incorrecta"); 
399A:  MOVLW  05
399C:  MOVWF  FEA
399E:  MOVLW  D6
39A0:  MOVWF  FE9
39A2:  MOVFF  FF2,5F6
39A6:  BCF    FF2.7
39A8:  MOVLW  00
39AA:  CALL   07C2
39AE:  TBLRD*-
39B0:  TBLRD*+
39B2:  MOVF   FF5,W
39B4:  MOVWF  FEE
39B6:  IORLW  00
39B8:  BNZ   39B0
39BA:  MOVLB  5
39BC:  BTFSC  xF6.7
39BE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
39C0:  MOVLW  05
39C2:  MOVWF  xF7
39C4:  MOVLW  D6
39C6:  MOVWF  xF6
39C8:  CLRF   xF8
39CA:  MOVLW  1E
39CC:  MOVWF  xF9
39CE:  CLRF   xFA
39D0:  MOVLW  02
39D2:  MOVWF  xFB
39D4:  MOVLB  0
39D6:  CALL   1394
....................             Menu=0;glcd_update();delay_ms(1000); 
39DA:  MOVLB  5
39DC:  CLRF   x6A
39DE:  MOVLB  0
39E0:  CALL   0DBC
39E4:  MOVLW  04
39E6:  MOVLB  5
39E8:  MOVWF  xF6
39EA:  MOVLW  FA
39EC:  MOVWF  xFC
39EE:  MOVLB  0
39F0:  CALL   0CF8
39F4:  MOVLB  5
39F6:  DECFSZ xF6,F
39F8:  BRA    39EA
....................             glcd_fillScreen(OFF);unidad=1; 
39FA:  CLRF   xF7
39FC:  MOVLB  0
39FE:  CALL   0D62
3A02:  MOVLW  01
3A04:  MOVLB  5
3A06:  MOVWF  x6B
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
3A08:  CLRF   x96
3A0A:  CLRF   x97
3A0C:  CLRF   x98
3A0E:  CLRF   x99
....................             displayContrasena(Contrasena[0],20,30,1); 
3A10:  MOVFF  596,5F8
3A14:  MOVLW  14
3A16:  MOVWF  xF9
3A18:  MOVLW  1E
3A1A:  MOVWF  xFA
3A1C:  MOVLW  01
3A1E:  MOVWF  xFB
3A20:  MOVLB  0
3A22:  CALL   15CC
....................             displayContrasena(Contrasena[1],40,30,0); 
3A26:  MOVFF  597,5F8
3A2A:  MOVLW  28
3A2C:  MOVLB  5
3A2E:  MOVWF  xF9
3A30:  MOVLW  1E
3A32:  MOVWF  xFA
3A34:  CLRF   xFB
3A36:  MOVLB  0
3A38:  CALL   15CC
....................             displayContrasena(Contrasena[2],60,30,0); 
3A3C:  MOVFF  598,5F8
3A40:  MOVLW  3C
3A42:  MOVLB  5
3A44:  MOVWF  xF9
3A46:  MOVLW  1E
3A48:  MOVWF  xFA
3A4A:  CLRF   xFB
3A4C:  MOVLB  0
3A4E:  CALL   15CC
....................             displayContrasena(Contrasena[3],80,30,0); 
3A52:  MOVFF  599,5F8
3A56:  MOVLW  50
3A58:  MOVLB  5
3A5A:  MOVWF  xF9
3A5C:  MOVLW  1E
3A5E:  MOVWF  xFA
3A60:  CLRF   xFB
3A62:  MOVLB  0
3A64:  CALL   15CC
3A68:  MOVLB  5
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
3A6A:  DECFSZ x6A,W
3A6C:  BRA    3D80
....................        
....................          if(Opcion>4) 
3A6E:  MOVF   x71,W
3A70:  SUBLW  04
3A72:  BC    3A78
....................          {Opcion=1;} 
3A74:  MOVLW  01
3A76:  MOVWF  x71
....................          if(Opcion<1) 
3A78:  MOVF   x71,F
3A7A:  BNZ   3A80
....................          {Opcion=4;} 
3A7C:  MOVLW  04
3A7E:  MOVWF  x71
....................           
....................          strcpy(Menus.Letra,"Menu"); 
3A80:  MOVLW  05
3A82:  MOVWF  FEA
3A84:  MOVLW  D6
3A86:  MOVWF  FE9
3A88:  MOVFF  FF2,5F6
3A8C:  BCF    FF2.7
3A8E:  MOVLW  00
3A90:  MOVLB  0
3A92:  CALL   07E8
3A96:  TBLRD*-
3A98:  TBLRD*+
3A9A:  MOVF   FF5,W
3A9C:  MOVWF  FEE
3A9E:  IORLW  00
3AA0:  BNZ   3A98
3AA2:  MOVLB  5
3AA4:  BTFSC  xF6.7
3AA6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
3AA8:  MOVLW  05
3AAA:  MOVWF  xF7
3AAC:  MOVLW  D6
3AAE:  MOVWF  xF6
3AB0:  MOVLW  1E
3AB2:  MOVWF  xF8
3AB4:  CLRF   xF9
3AB6:  MOVLW  01
3AB8:  MOVWF  xFA
3ABA:  MOVLW  02
3ABC:  MOVWF  xFB
3ABE:  MOVLB  0
3AC0:  CALL   1394
....................        
....................          if(Opcion==1)    
3AC4:  MOVLB  5
3AC6:  DECFSZ x71,W
3AC8:  BRA    3B10
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
3ACA:  MOVLW  05
3ACC:  MOVWF  FEA
3ACE:  MOVLW  D6
3AD0:  MOVWF  FE9
3AD2:  MOVFF  FF2,5F6
3AD6:  BCF    FF2.7
3AD8:  MOVLW  00
3ADA:  MOVLB  0
3ADC:  CALL   0808
3AE0:  TBLRD*-
3AE2:  TBLRD*+
3AE4:  MOVF   FF5,W
3AE6:  MOVWF  FEE
3AE8:  IORLW  00
3AEA:  BNZ   3AE2
3AEC:  MOVLB  5
3AEE:  BTFSC  xF6.7
3AF0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
3AF2:  MOVLW  05
3AF4:  MOVWF  xF7
3AF6:  MOVLW  D6
3AF8:  MOVWF  xF6
3AFA:  CLRF   xF8
3AFC:  MOVLW  14
3AFE:  MOVWF  xF9
3B00:  MOVLW  01
3B02:  MOVWF  xFA
3B04:  MOVWF  xFB
3B06:  MOVLB  0
3B08:  CALL   1394
....................          else 
3B0C:  BRA    3B52
3B0E:  MOVLB  5
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
3B10:  MOVLW  05
3B12:  MOVWF  FEA
3B14:  MOVLW  D6
3B16:  MOVWF  FE9
3B18:  MOVFF  FF2,5F6
3B1C:  BCF    FF2.7
3B1E:  MOVLW  00
3B20:  MOVLB  0
3B22:  CALL   0808
3B26:  TBLRD*-
3B28:  TBLRD*+
3B2A:  MOVF   FF5,W
3B2C:  MOVWF  FEE
3B2E:  IORLW  00
3B30:  BNZ   3B28
3B32:  MOVLB  5
3B34:  BTFSC  xF6.7
3B36:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);} 
3B38:  MOVLW  05
3B3A:  MOVWF  xF7
3B3C:  MOVLW  D6
3B3E:  MOVWF  xF6
3B40:  CLRF   xF8
3B42:  MOVLW  14
3B44:  MOVWF  xF9
3B46:  CLRF   xFA
3B48:  MOVLW  01
3B4A:  MOVWF  xFB
3B4C:  MOVLB  0
3B4E:  CALL   1394
....................           
....................          if(Opcion==2)    
3B52:  MOVLB  5
3B54:  MOVF   x71,W
3B56:  SUBLW  02
3B58:  BNZ   3BA0
....................             {strcpy(Menus.Letra,"Temperatura"); 
3B5A:  MOVLW  05
3B5C:  MOVWF  FEA
3B5E:  MOVLW  D6
3B60:  MOVWF  FE9
3B62:  MOVFF  FF2,5F6
3B66:  BCF    FF2.7
3B68:  MOVLW  00
3B6A:  MOVLB  0
3B6C:  CALL   0832
3B70:  TBLRD*-
3B72:  TBLRD*+
3B74:  MOVF   FF5,W
3B76:  MOVWF  FEE
3B78:  IORLW  00
3B7A:  BNZ   3B72
3B7C:  MOVLB  5
3B7E:  BTFSC  xF6.7
3B80:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
3B82:  MOVLW  05
3B84:  MOVWF  xF7
3B86:  MOVLW  D6
3B88:  MOVWF  xF6
3B8A:  CLRF   xF8
3B8C:  MOVLW  1E
3B8E:  MOVWF  xF9
3B90:  MOVLW  01
3B92:  MOVWF  xFA
3B94:  MOVWF  xFB
3B96:  MOVLB  0
3B98:  CALL   1394
....................          else 
3B9C:  BRA    3BE2
3B9E:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temperatura"); 
3BA0:  MOVLW  05
3BA2:  MOVWF  FEA
3BA4:  MOVLW  D6
3BA6:  MOVWF  FE9
3BA8:  MOVFF  FF2,5F6
3BAC:  BCF    FF2.7
3BAE:  MOVLW  00
3BB0:  MOVLB  0
3BB2:  CALL   0832
3BB6:  TBLRD*-
3BB8:  TBLRD*+
3BBA:  MOVF   FF5,W
3BBC:  MOVWF  FEE
3BBE:  IORLW  00
3BC0:  BNZ   3BB8
3BC2:  MOVLB  5
3BC4:  BTFSC  xF6.7
3BC6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);} 
3BC8:  MOVLW  05
3BCA:  MOVWF  xF7
3BCC:  MOVLW  D6
3BCE:  MOVWF  xF6
3BD0:  CLRF   xF8
3BD2:  MOVLW  1E
3BD4:  MOVWF  xF9
3BD6:  CLRF   xFA
3BD8:  MOVLW  01
3BDA:  MOVWF  xFB
3BDC:  MOVLB  0
3BDE:  CALL   1394
....................              
....................          if(Opcion==3)    
3BE2:  MOVLB  5
3BE4:  MOVF   x71,W
3BE6:  SUBLW  03
3BE8:  BNZ   3C30
....................             {strcpy(Menus.Letra,"Temporizador"); 
3BEA:  MOVLW  05
3BEC:  MOVWF  FEA
3BEE:  MOVLW  D6
3BF0:  MOVWF  FE9
3BF2:  MOVFF  FF2,5F6
3BF6:  BCF    FF2.7
3BF8:  MOVLW  00
3BFA:  MOVLB  0
3BFC:  CALL   0858
3C00:  TBLRD*-
3C02:  TBLRD*+
3C04:  MOVF   FF5,W
3C06:  MOVWF  FEE
3C08:  IORLW  00
3C0A:  BNZ   3C02
3C0C:  MOVLB  5
3C0E:  BTFSC  xF6.7
3C10:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
3C12:  MOVLW  05
3C14:  MOVWF  xF7
3C16:  MOVLW  D6
3C18:  MOVWF  xF6
3C1A:  CLRF   xF8
3C1C:  MOVLW  28
3C1E:  MOVWF  xF9
3C20:  MOVLW  01
3C22:  MOVWF  xFA
3C24:  MOVWF  xFB
3C26:  MOVLB  0
3C28:  CALL   1394
....................          else 
3C2C:  BRA    3C72
3C2E:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temporizador"); 
3C30:  MOVLW  05
3C32:  MOVWF  FEA
3C34:  MOVLW  D6
3C36:  MOVWF  FE9
3C38:  MOVFF  FF2,5F6
3C3C:  BCF    FF2.7
3C3E:  MOVLW  00
3C40:  MOVLB  0
3C42:  CALL   0858
3C46:  TBLRD*-
3C48:  TBLRD*+
3C4A:  MOVF   FF5,W
3C4C:  MOVWF  FEE
3C4E:  IORLW  00
3C50:  BNZ   3C48
3C52:  MOVLB  5
3C54:  BTFSC  xF6.7
3C56:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}    
3C58:  MOVLW  05
3C5A:  MOVWF  xF7
3C5C:  MOVLW  D6
3C5E:  MOVWF  xF6
3C60:  CLRF   xF8
3C62:  MOVLW  28
3C64:  MOVWF  xF9
3C66:  CLRF   xFA
3C68:  MOVLW  01
3C6A:  MOVWF  xFB
3C6C:  MOVLB  0
3C6E:  CALL   1394
....................                          
....................          if(Opcion==4)    
3C72:  MOVLB  5
3C74:  MOVF   x71,W
3C76:  SUBLW  04
3C78:  BNZ   3CC0
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3C7A:  MOVLW  05
3C7C:  MOVWF  FEA
3C7E:  MOVLW  D6
3C80:  MOVWF  FE9
3C82:  MOVFF  FF2,5F6
3C86:  BCF    FF2.7
3C88:  MOVLW  00
3C8A:  MOVLB  0
3C8C:  CALL   0880
3C90:  TBLRD*-
3C92:  TBLRD*+
3C94:  MOVF   FF5,W
3C96:  MOVWF  FEE
3C98:  IORLW  00
3C9A:  BNZ   3C92
3C9C:  MOVLB  5
3C9E:  BTFSC  xF6.7
3CA0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
3CA2:  MOVLW  05
3CA4:  MOVWF  xF7
3CA6:  MOVLW  D6
3CA8:  MOVWF  xF6
3CAA:  CLRF   xF8
3CAC:  MOVLW  32
3CAE:  MOVWF  xF9
3CB0:  MOVLW  01
3CB2:  MOVWF  xFA
3CB4:  MOVWF  xFB
3CB6:  MOVLB  0
3CB8:  CALL   1394
....................          else 
3CBC:  BRA    3D02
3CBE:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3CC0:  MOVLW  05
3CC2:  MOVWF  FEA
3CC4:  MOVLW  D6
3CC6:  MOVWF  FE9
3CC8:  MOVFF  FF2,5F6
3CCC:  BCF    FF2.7
3CCE:  MOVLW  00
3CD0:  MOVLB  0
3CD2:  CALL   0880
3CD6:  TBLRD*-
3CD8:  TBLRD*+
3CDA:  MOVF   FF5,W
3CDC:  MOVWF  FEE
3CDE:  IORLW  00
3CE0:  BNZ   3CD8
3CE2:  MOVLB  5
3CE4:  BTFSC  xF6.7
3CE6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}      
3CE8:  MOVLW  05
3CEA:  MOVWF  xF7
3CEC:  MOVLW  D6
3CEE:  MOVWF  xF6
3CF0:  CLRF   xF8
3CF2:  MOVLW  32
3CF4:  MOVWF  xF9
3CF6:  CLRF   xFA
3CF8:  MOVLW  01
3CFA:  MOVWF  xFB
3CFC:  MOVLB  0
3CFE:  CALL   1394
....................              
....................       if(UP)//Si oprime hacia arriba 
3D02:  BSF    F92.5
3D04:  BTFSS  F80.5
3D06:  BRA    3D22
....................          {  if(Flanco == 0)  
3D08:  MOVLB  5
3D0A:  BTFSC  x65.0
3D0C:  BRA    3D20
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
3D0E:  BSF    x65.0
3D10:  MOVLW  1E
3D12:  MOVWF  xFC
3D14:  MOVLB  0
3D16:  CALL   0CF8
3D1A:  MOVLB  5
3D1C:  DECF   x71,F
3D1E:  BSF    x65.3
....................                } 
....................          } 
....................             else 
3D20:  BRA    3D26
....................                {Flanco = 0;} 
3D22:  MOVLB  5
3D24:  BCF    x65.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
3D26:  BSF    F96.0
3D28:  BTFSS  F84.0
3D2A:  BRA    3D44
....................          {  if(Flanco2 == 0)  
3D2C:  BTFSC  x65.2
3D2E:  BRA    3D42
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
3D30:  BSF    x65.2
3D32:  MOVLW  1E
3D34:  MOVWF  xFC
3D36:  MOVLB  0
3D38:  CALL   0CF8
3D3C:  MOVLB  5
3D3E:  INCF   x71,F
3D40:  BSF    x65.3
....................                }      
....................          } 
....................             else 
3D42:  BRA    3D46
....................                {Flanco2 = 0;}   
3D44:  BCF    x65.2
....................                 
....................        if(RIGHT)//Si oprime SET 
3D46:  BSF    F96.1
3D48:  BTFSS  F84.1
3D4A:  BRA    3D7E
....................          {  if(Flanco1 == 0)  
3D4C:  BTFSC  x65.1
3D4E:  BRA    3D7C
....................                {Flanco1 = 1;delay_ms(500);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
3D50:  BSF    x65.1
3D52:  MOVLW  02
3D54:  MOVWF  xF6
3D56:  MOVLW  FA
3D58:  MOVWF  xFC
3D5A:  MOVLB  0
3D5C:  CALL   0CF8
3D60:  MOVLB  5
3D62:  DECFSZ xF6,F
3D64:  BRA    3D56
3D66:  MOVLW  03
3D68:  ADDWF  x71,W
3D6A:  MOVWF  x6A
3D6C:  MOVLW  01
3D6E:  MOVWF  x71
3D70:  CLRF   xF7
3D72:  MOVLB  0
3D74:  CALL   0D62
3D78:  MOVLB  5
3D7A:  BSF    x65.3
....................                } 
....................          } 
....................             else 
3D7C:  BRA    3D80
....................                {Flanco1 = 0;}   
3D7E:  BCF    x65.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Continuar 
3D80:  MOVF   x6A,W
3D82:  SUBLW  04
3D84:  BTFSS  FD8.2
3D86:  BRA    402C
....................        
....................       if(Opcion>2) 
3D88:  MOVF   x71,W
3D8A:  SUBLW  02
3D8C:  BC    3D92
....................          Opcion=1; 
3D8E:  MOVLW  01
3D90:  MOVWF  x71
....................           
....................       if(Opcion<1) 
3D92:  MOVF   x71,F
3D94:  BNZ   3D9A
....................          Opcion=2; 
3D96:  MOVLW  02
3D98:  MOVWF  x71
....................        
....................          strcpy(Menus.Letra,"Continuar"); 
3D9A:  MOVLW  05
3D9C:  MOVWF  FEA
3D9E:  MOVLW  D6
3DA0:  MOVWF  FE9
3DA2:  MOVFF  FF2,5F6
3DA6:  BCF    FF2.7
3DA8:  MOVLW  00
3DAA:  MOVLB  0
3DAC:  CALL   08A8
3DB0:  TBLRD*-
3DB2:  TBLRD*+
3DB4:  MOVF   FF5,W
3DB6:  MOVWF  FEE
3DB8:  IORLW  00
3DBA:  BNZ   3DB2
3DBC:  MOVLB  5
3DBE:  BTFSC  xF6.7
3DC0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
3DC2:  MOVLW  05
3DC4:  MOVWF  xF7
3DC6:  MOVLW  D6
3DC8:  MOVWF  xF6
3DCA:  CLRF   xF8
3DCC:  CLRF   xF9
3DCE:  MOVLW  01
3DD0:  MOVWF  xFA
3DD2:  MOVLW  02
3DD4:  MOVWF  xFB
3DD6:  MOVLB  0
3DD8:  CALL   1394
....................           
....................          if(Opcion==2) 
3DDC:  MOVLB  5
3DDE:  MOVF   x71,W
3DE0:  SUBLW  02
3DE2:  BNZ   3E6E
....................          {strcpy(Menus.Letra,"SI"); 
3DE4:  MOVLW  05
3DE6:  MOVWF  FEA
3DE8:  MOVLW  D6
3DEA:  MOVWF  FE9
3DEC:  MOVFF  FF2,5F6
3DF0:  BCF    FF2.7
3DF2:  MOVLW  00
3DF4:  MOVLB  0
3DF6:  CALL   08CC
3DFA:  TBLRD*-
3DFC:  TBLRD*+
3DFE:  MOVF   FF5,W
3E00:  MOVWF  FEE
3E02:  IORLW  00
3E04:  BNZ   3DFC
3E06:  MOVLB  5
3E08:  BTFSC  xF6.7
3E0A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
3E0C:  MOVLW  05
3E0E:  MOVWF  xF7
3E10:  MOVLW  D6
3E12:  MOVWF  xF6
3E14:  MOVLW  32
3E16:  MOVWF  xF8
3E18:  MOVLW  19
3E1A:  MOVWF  xF9
3E1C:  MOVLW  01
3E1E:  MOVWF  xFA
3E20:  MOVLW  02
3E22:  MOVWF  xFB
3E24:  MOVLB  0
3E26:  CALL   1394
....................          strcpy(Menus.Letra,"NO"); 
3E2A:  MOVLW  05
3E2C:  MOVWF  FEA
3E2E:  MOVLW  D6
3E30:  MOVWF  FE9
3E32:  MOVFF  FF2,5F6
3E36:  BCF    FF2.7
3E38:  MOVLW  00
3E3A:  CALL   08EA
3E3E:  TBLRD*-
3E40:  TBLRD*+
3E42:  MOVF   FF5,W
3E44:  MOVWF  FEE
3E46:  IORLW  00
3E48:  BNZ   3E40
3E4A:  MOVLB  5
3E4C:  BTFSC  xF6.7
3E4E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
3E50:  MOVLW  05
3E52:  MOVWF  xF7
3E54:  MOVLW  D6
3E56:  MOVWF  xF6
3E58:  MOVLW  32
3E5A:  MOVWF  xF8
3E5C:  MOVLW  2D
3E5E:  MOVWF  xF9
3E60:  CLRF   xFA
3E62:  MOVLW  02
3E64:  MOVWF  xFB
3E66:  MOVLB  0
3E68:  CALL   1394
3E6C:  MOVLB  5
....................          } 
....................          if(Opcion==1) 
3E6E:  DECFSZ x71,W
3E70:  BRA    3EFC
....................          {strcpy(Menus.Letra,"SI"); 
3E72:  MOVLW  05
3E74:  MOVWF  FEA
3E76:  MOVLW  D6
3E78:  MOVWF  FE9
3E7A:  MOVFF  FF2,5F6
3E7E:  BCF    FF2.7
3E80:  MOVLW  00
3E82:  MOVLB  0
3E84:  CALL   08CC
3E88:  TBLRD*-
3E8A:  TBLRD*+
3E8C:  MOVF   FF5,W
3E8E:  MOVWF  FEE
3E90:  IORLW  00
3E92:  BNZ   3E8A
3E94:  MOVLB  5
3E96:  BTFSC  xF6.7
3E98:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
3E9A:  MOVLW  05
3E9C:  MOVWF  xF7
3E9E:  MOVLW  D6
3EA0:  MOVWF  xF6
3EA2:  MOVLW  32
3EA4:  MOVWF  xF8
3EA6:  MOVLW  19
3EA8:  MOVWF  xF9
3EAA:  CLRF   xFA
3EAC:  MOVLW  02
3EAE:  MOVWF  xFB
3EB0:  MOVLB  0
3EB2:  CALL   1394
....................          strcpy(Menus.Letra,"NO"); 
3EB6:  MOVLW  05
3EB8:  MOVWF  FEA
3EBA:  MOVLW  D6
3EBC:  MOVWF  FE9
3EBE:  MOVFF  FF2,5F6
3EC2:  BCF    FF2.7
3EC4:  MOVLW  00
3EC6:  CALL   08EA
3ECA:  TBLRD*-
3ECC:  TBLRD*+
3ECE:  MOVF   FF5,W
3ED0:  MOVWF  FEE
3ED2:  IORLW  00
3ED4:  BNZ   3ECC
3ED6:  MOVLB  5
3ED8:  BTFSC  xF6.7
3EDA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
3EDC:  MOVLW  05
3EDE:  MOVWF  xF7
3EE0:  MOVLW  D6
3EE2:  MOVWF  xF6
3EE4:  MOVLW  32
3EE6:  MOVWF  xF8
3EE8:  MOVLW  2D
3EEA:  MOVWF  xF9
3EEC:  MOVLW  01
3EEE:  MOVWF  xFA
3EF0:  MOVLW  02
3EF2:  MOVWF  xFB
3EF4:  MOVLB  0
3EF6:  CALL   1394
3EFA:  MOVLB  5
....................          } 
....................         
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
3EFC:  BSF    F92.5
3EFE:  BTFSS  F80.5
3F00:  BRA    3F0A
....................       { 
....................          if(Opcion<2) 
3F02:  MOVF   x71,W
3F04:  SUBLW  01
3F06:  BNC   3F0A
....................          { 
....................             Opcion++; 
3F08:  INCF   x71,F
....................          } 
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
3F0A:  BSF    F96.0
3F0C:  BTFSS  F84.0
3F0E:  BRA    3F18
....................       {   
....................          if(Opcion>1) 
3F10:  MOVF   x71,W
3F12:  SUBLW  01
3F14:  BC    3F18
....................          { 
....................             Opcion--; 
3F16:  DECF   x71,F
....................          }   
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
3F18:  BSF    F96.1
3F1A:  BTFSS  F84.1
3F1C:  BRA    3FFA
....................       {   
....................          if(Opcion==2) 
3F1E:  MOVF   x71,W
3F20:  SUBLW  02
3F22:  BNZ   3FD2
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;glcd_fillScreen(OFF);pausa=0; 
3F24:  MOVLW  14
3F26:  MOVWF  x6A
3F28:  MOVLW  0F
3F2A:  MOVLB  6
3F2C:  MOVWF  x08
3F2E:  MOVLW  12
3F30:  MOVWF  x09
3F32:  MOVLW  1E
3F34:  MOVWF  x0A
3F36:  MOVLW  35
3F38:  MOVWF  x0B
3F3A:  CLRF   x0C
3F3C:  MOVLW  01
3F3E:  MOVWF  x0D
3F40:  MOVLB  0
3F42:  CALL   12D2
3F46:  MOVLB  5
3F48:  CLRF   x73
3F4A:  CLRF   xF7
3F4C:  MOVLB  0
3F4E:  CALL   0D62
3F52:  MOVLB  5
3F54:  CLRF   x6D
....................             Ganancia=Setpoint*(Ganancia/Coeficiente); 
3F56:  MOVFF  5C5,5FE
3F5A:  MOVFF  5C4,5FD
3F5E:  MOVFF  5C3,5FC
3F62:  MOVFF  5C2,5FB
3F66:  MOVFF  5CD,602
3F6A:  MOVFF  5CC,601
3F6E:  MOVFF  5CB,600
3F72:  MOVFF  5CA,5FF
3F76:  MOVLB  0
3F78:  CALL   1728
3F7C:  MOVFF  00,5F6
3F80:  MOVFF  01,5F7
3F84:  MOVFF  02,5F8
3F88:  MOVFF  03,5F9
3F8C:  MOVLB  5
3F8E:  CLRF   xFD
3F90:  MOVFF  570,5FC
3F94:  MOVLB  0
3F96:  CALL   169C
3F9A:  MOVFF  03,616
3F9E:  MOVFF  02,615
3FA2:  MOVFF  01,614
3FA6:  MOVFF  00,613
3FAA:  MOVFF  5F9,61A
3FAE:  MOVFF  5F8,619
3FB2:  MOVFF  5F7,618
3FB6:  MOVFF  5F6,617
3FBA:  CALL   1E2E
3FBE:  MOVFF  03,5C5
3FC2:  MOVFF  02,5C4
3FC6:  MOVFF  01,5C3
3FCA:  MOVFF  00,5C2
....................          } 
....................          else 
3FCE:  BRA    3FFC
3FD0:  MOVLB  5
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
3FD2:  MOVLW  04
3FD4:  MOVWF  xF6
3FD6:  MOVLW  AF
3FD8:  MOVWF  xFC
3FDA:  MOVLB  0
3FDC:  CALL   0CF8
3FE0:  MOVLB  5
3FE2:  DECFSZ xF6,F
3FE4:  BRA    3FD6
3FE6:  MOVLW  01
3FE8:  MOVWF  x6A
3FEA:  CLRF   xF7
3FEC:  MOVLB  0
3FEE:  CALL   0D62
3FF2:  MOVLW  01
3FF4:  MOVLB  5
3FF6:  MOVWF  x71
3FF8:  BSF    x65.3
3FFA:  MOVLB  0
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
3FFC:  BSF    F96.2
3FFE:  BTFSS  F84.2
4000:  BRA    402E
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
4002:  MOVLW  04
4004:  MOVLB  5
4006:  MOVWF  xF6
4008:  MOVLW  AF
400A:  MOVWF  xFC
400C:  MOVLB  0
400E:  CALL   0CF8
4012:  MOVLB  5
4014:  DECFSZ xF6,F
4016:  BRA    4008
4018:  MOVLW  01
401A:  MOVWF  x6A
401C:  CLRF   xF7
401E:  MOVLB  0
4020:  CALL   0D62
4024:  MOVLW  01
4026:  MOVLB  5
4028:  MOVWF  x71
402A:  BSF    x65.3
402C:  MOVLB  0
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Temperatura 
402E:  MOVLB  5
4030:  MOVF   x6A,W
4032:  SUBLW  05
4034:  BTFSS  FD8.2
4036:  BRA    41EE
....................       glcd_circle(85,30,3,NO,ON); 
4038:  MOVLW  55
403A:  MOVWF  xF6
403C:  MOVLW  1E
403E:  MOVWF  xF7
4040:  MOVLW  03
4042:  MOVWF  xF8
4044:  CLRF   xF9
4046:  MOVLW  01
4048:  MOVWF  xFA
404A:  MOVLB  0
404C:  CALL   1F74
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,92,30,2,3); 
4050:  MOVLW  05
4052:  MOVWF  FEA
4054:  MOVLW  D6
4056:  MOVWF  FE9
4058:  MOVFF  FF2,5F6
405C:  BCF    FF2.7
405E:  MOVLW  00
4060:  CALL   0908
4064:  TBLRD*-
4066:  TBLRD*+
4068:  MOVF   FF5,W
406A:  MOVWF  FEE
406C:  IORLW  00
406E:  BNZ   4066
4070:  MOVLB  5
4072:  BTFSC  xF6.7
4074:  BSF    FF2.7
4076:  MOVLW  05
4078:  MOVWF  xF7
407A:  MOVLW  D6
407C:  MOVWF  xF6
407E:  MOVLW  5C
4080:  MOVWF  xF8
4082:  MOVLW  1E
4084:  MOVWF  xF9
4086:  MOVLW  02
4088:  MOVWF  xFA
408A:  MOVLW  03
408C:  MOVWF  xFB
408E:  MOVLB  0
4090:  CALL   1394
....................        
....................          //glcd_fillScreen(OFF); 
....................          strcpy(Menus.Letra,"Temperatura"); 
4094:  MOVLW  05
4096:  MOVWF  FEA
4098:  MOVLW  D6
409A:  MOVWF  FE9
409C:  MOVFF  FF2,5F6
40A0:  BCF    FF2.7
40A2:  MOVLW  00
40A4:  CALL   0832
40A8:  TBLRD*-
40AA:  TBLRD*+
40AC:  MOVF   FF5,W
40AE:  MOVWF  FEE
40B0:  IORLW  00
40B2:  BNZ   40AA
40B4:  MOVLB  5
40B6:  BTFSC  xF6.7
40B8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
40BA:  MOVLW  05
40BC:  MOVWF  xF7
40BE:  MOVLW  D6
40C0:  MOVWF  xF6
40C2:  CLRF   xF8
40C4:  CLRF   xF9
40C6:  MOVLW  01
40C8:  MOVWF  xFA
40CA:  MOVLW  02
40CC:  MOVWF  xFB
40CE:  MOVLB  0
40D0:  CALL   1394
....................           
....................          displayTemperatura(Setpoint,30,30,0,3); 
40D4:  MOVFF  570,5F7
40D8:  MOVLW  1E
40DA:  MOVLB  5
40DC:  MOVWF  xF8
40DE:  MOVWF  xF9
40E0:  CLRF   xFA
40E2:  MOVLW  03
40E4:  MOVWF  xFB
40E6:  MOVLB  0
40E8:  CALL   224C
....................        
....................          if(UP)//Si oprime hacia arriba 
40EC:  BSF    F92.5
40EE:  BTFSS  F80.5
40F0:  BRA    413C
....................          {   
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(30, 30, 80, 55, YES, OFF); 
40F2:  MOVLW  1E
40F4:  MOVLB  6
40F6:  MOVWF  x08
40F8:  MOVWF  x09
40FA:  MOVLW  50
40FC:  MOVWF  x0A
40FE:  MOVLW  37
4100:  MOVWF  x0B
4102:  MOVLW  01
4104:  MOVWF  x0C
4106:  CLRF   x0D
4108:  MOVLB  0
410A:  CALL   12D2
....................                if(Setpoint>60) 
410E:  MOVLB  5
4110:  MOVF   x70,W
4112:  SUBLW  3C
4114:  BC    412A
....................                { 
....................                   Setpoint=60;delay_ms(100);visual=1; 
4116:  MOVLW  3C
4118:  MOVWF  x70
411A:  MOVLW  64
411C:  MOVWF  xFC
411E:  MOVLB  0
4120:  CALL   0CF8
4124:  MOVLB  5
4126:  BSF    x65.3
....................                } 
....................                else 
4128:  BRA    413A
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
412A:  MOVLW  1E
412C:  MOVWF  xFC
412E:  MOVLB  0
4130:  CALL   0CF8
4134:  MOVLB  5
4136:  INCF   x70,F
4138:  BSF    x65.3
413A:  MOVLB  0
....................                } 
....................              
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
413C:  BSF    F96.0
413E:  BTFSS  F84.0
4140:  BRA    4178
....................          {   
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(30, 30, 80, 55, YES, OFF); 
4142:  MOVLW  1E
4144:  MOVLB  6
4146:  MOVWF  x08
4148:  MOVWF  x09
414A:  MOVLW  50
414C:  MOVWF  x0A
414E:  MOVLW  37
4150:  MOVWF  x0B
4152:  MOVLW  01
4154:  MOVWF  x0C
4156:  CLRF   x0D
4158:  MOVLB  0
415A:  CALL   12D2
....................             if(Setpoint>20) 
415E:  MOVLB  5
4160:  MOVF   x70,W
4162:  SUBLW  14
4164:  BC    4176
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
4166:  MOVLW  1E
4168:  MOVWF  xFC
416A:  MOVLB  0
416C:  CALL   0CF8
4170:  MOVLB  5
4172:  DECF   x70,F
4174:  BSF    x65.3
4176:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
4178:  BSF    F96.1
417A:  BTFSS  F84.1
417C:  BRA    4190
....................          {   
....................             delay_ms(30);visual=1; 
417E:  MOVLW  1E
4180:  MOVLB  5
4182:  MOVWF  xFC
4184:  MOVLB  0
4186:  CALL   0CF8
418A:  MOVLB  5
418C:  BSF    x65.3
418E:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
4190:  BSF    F96.2
4192:  BTFSS  F84.2
4194:  BRA    41EC
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
4196:  MOVLW  04
4198:  MOVLB  5
419A:  MOVWF  xF6
419C:  MOVLW  AF
419E:  MOVWF  xFC
41A0:  MOVLB  0
41A2:  CALL   0CF8
41A6:  MOVLB  5
41A8:  DECFSZ xF6,F
41AA:  BRA    419C
41AC:  MOVLW  01
41AE:  MOVWF  x6A
41B0:  CLRF   xF7
41B2:  MOVLB  0
41B4:  CALL   0D62
41B8:  MOVLW  01
41BA:  MOVLB  5
41BC:  MOVWF  x71
41BE:  BSF    x65.3
....................             write_eeprom(50,Setpoint); 
41C0:  MOVLW  32
41C2:  MOVWF  FA9
41C4:  MOVFF  570,FA8
41C8:  BCF    FA6.6
41CA:  BCF    FA6.7
41CC:  BSF    FA6.2
41CE:  MOVF   FF2,W
41D0:  MOVWF  00
41D2:  BCF    FF2.7
41D4:  MOVLB  F
41D6:  MOVLW  55
41D8:  MOVWF  FA7
41DA:  MOVLW  AA
41DC:  MOVWF  FA7
41DE:  BSF    FA6.1
41E0:  BTFSC  FA6.1
41E2:  BRA    41E0
41E4:  BCF    FA6.2
41E6:  MOVF   00,W
41E8:  IORWF  FF2,F
41EA:  MOVLB  0
41EC:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Temporizador 
41EE:  MOVF   x6A,W
41F0:  SUBLW  06
41F2:  BTFSS  FD8.2
41F4:  BRA    44EC
....................       
....................        
....................          if(unidad<1) 
41F6:  MOVF   x6B,F
41F8:  BNZ   41FE
....................          {unidad=4;} 
41FA:  MOVLW  04
41FC:  MOVWF  x6B
....................           
....................          strcpy(Menus.Letra,"Temporiza"); 
41FE:  MOVLW  05
4200:  MOVWF  FEA
4202:  MOVLW  D6
4204:  MOVWF  FE9
4206:  MOVFF  FF2,5F6
420A:  BCF    FF2.7
420C:  MOVLW  00
420E:  MOVLB  0
4210:  CALL   0924
4214:  TBLRD*-
4216:  TBLRD*+
4218:  MOVF   FF5,W
421A:  MOVWF  FEE
421C:  IORLW  00
421E:  BNZ   4216
4220:  MOVLB  5
4222:  BTFSC  xF6.7
4224:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4226:  MOVLW  05
4228:  MOVWF  xF7
422A:  MOVLW  D6
422C:  MOVWF  xF6
422E:  CLRF   xF8
4230:  CLRF   xF9
4232:  MOVLW  01
4234:  MOVWF  xFA
4236:  MOVLW  02
4238:  MOVWF  xFB
423A:  MOVLB  0
423C:  CALL   1394
....................           
....................          if(unidad==4) 
4240:  MOVLB  5
4242:  MOVF   x6B,W
4244:  SUBLW  04
4246:  BNZ   4266
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
4248:  MOVFF  595,5F7
424C:  MOVLW  14
424E:  MOVWF  xF8
4250:  MOVLW  28
4252:  MOVWF  xF9
4254:  MOVLW  01
4256:  MOVWF  xFA
4258:  MOVLW  02
425A:  MOVWF  xFB
425C:  MOVLB  0
425E:  CALL   23C4
....................          else 
4262:  BRA    427E
4264:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
4266:  MOVFF  595,5F7
426A:  MOVLW  14
426C:  MOVWF  xF8
426E:  MOVLW  28
4270:  MOVWF  xF9
4272:  CLRF   xFA
4274:  MOVLW  02
4276:  MOVWF  xFB
4278:  MOVLB  0
427A:  CALL   23C4
....................           
....................          if(unidad==3) 
427E:  MOVLB  5
4280:  MOVF   x6B,W
4282:  SUBLW  03
4284:  BNZ   42A2
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
4286:  MOVFF  594,5F7
428A:  MOVLW  28
428C:  MOVWF  xF8
428E:  MOVWF  xF9
4290:  MOVLW  01
4292:  MOVWF  xFA
4294:  MOVLW  02
4296:  MOVWF  xFB
4298:  MOVLB  0
429A:  CALL   23C4
....................          else 
429E:  BRA    42B8
42A0:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
42A2:  MOVFF  594,5F7
42A6:  MOVLW  28
42A8:  MOVWF  xF8
42AA:  MOVWF  xF9
42AC:  CLRF   xFA
42AE:  MOVLW  02
42B0:  MOVWF  xFB
42B2:  MOVLB  0
42B4:  CALL   23C4
....................           
....................          if(unidad==2) 
42B8:  MOVLB  5
42BA:  MOVF   x6B,W
42BC:  SUBLW  02
42BE:  BNZ   42DE
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
42C0:  MOVFF  593,5F7
42C4:  MOVLW  46
42C6:  MOVWF  xF8
42C8:  MOVLW  28
42CA:  MOVWF  xF9
42CC:  MOVLW  01
42CE:  MOVWF  xFA
42D0:  MOVLW  02
42D2:  MOVWF  xFB
42D4:  MOVLB  0
42D6:  CALL   23C4
....................          else 
42DA:  BRA    42F6
42DC:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
42DE:  MOVFF  593,5F7
42E2:  MOVLW  46
42E4:  MOVWF  xF8
42E6:  MOVLW  28
42E8:  MOVWF  xF9
42EA:  CLRF   xFA
42EC:  MOVLW  02
42EE:  MOVWF  xFB
42F0:  MOVLB  0
42F2:  CALL   23C4
....................           
....................          if(unidad==1) 
42F6:  MOVLB  5
42F8:  DECFSZ x6B,W
42FA:  BRA    431A
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
42FC:  MOVFF  592,5F7
4300:  MOVLW  5A
4302:  MOVWF  xF8
4304:  MOVLW  28
4306:  MOVWF  xF9
4308:  MOVLW  01
430A:  MOVWF  xFA
430C:  MOVLW  02
430E:  MOVWF  xFB
4310:  MOVLB  0
4312:  CALL   23C4
....................          else 
4316:  BRA    4332
4318:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
431A:  MOVFF  592,5F7
431E:  MOVLW  5A
4320:  MOVWF  xF8
4322:  MOVLW  28
4324:  MOVWF  xF9
4326:  CLRF   xFA
4328:  MOVLW  02
432A:  MOVWF  xFB
432C:  MOVLB  0
432E:  CALL   23C4
....................           
....................          strcpy(Menus.Letra,":"); 
4332:  MOVLW  05
4334:  MOVWF  FEA
4336:  MOVLW  D6
4338:  MOVWF  FE9
433A:  MOVFF  FF2,5F6
433E:  BCF    FF2.7
4340:  MOVLW  00
4342:  CALL   0948
4346:  TBLRD*-
4348:  TBLRD*+
434A:  MOVF   FF5,W
434C:  MOVWF  FEE
434E:  IORLW  00
4350:  BNZ   4348
4352:  MOVLB  5
4354:  BTFSC  xF6.7
4356:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);            
4358:  MOVLW  05
435A:  MOVWF  xF7
435C:  MOVLW  D6
435E:  MOVWF  xF6
4360:  MOVLW  3C
4362:  MOVWF  xF8
4364:  MOVLW  2A
4366:  MOVWF  xF9
4368:  MOVLW  02
436A:  MOVWF  xFA
436C:  MOVWF  xFB
436E:  MOVLB  0
4370:  CALL   1394
....................        
....................          if(UP)//Si oprime hacia arriba 
4374:  BSF    F92.5
4376:  BTFSS  F80.5
4378:  BRA    43B8
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
437A:  MOVLW  01
437C:  MOVLB  5
437E:  SUBWF  x6B,W
4380:  CLRF   03
4382:  ADDLW  92
4384:  MOVWF  FE9
4386:  MOVLW  05
4388:  ADDWFC 03,W
438A:  MOVWF  FEA
438C:  BTFSC  FEF.7
438E:  BRA    4396
4390:  MOVF   FEF,W
4392:  SUBLW  08
4394:  BNC   43B6
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
4396:  MOVLW  1E
4398:  MOVWF  xFC
439A:  MOVLB  0
439C:  CALL   0CF8
43A0:  MOVLW  01
43A2:  MOVLB  5
43A4:  SUBWF  x6B,W
43A6:  CLRF   03
43A8:  ADDLW  92
43AA:  MOVWF  FE9
43AC:  MOVLW  05
43AE:  ADDWFC 03,W
43B0:  MOVWF  FEA
43B2:  INCF   FEF,F
43B4:  BSF    x65.3
43B6:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
43B8:  BSF    F96.0
43BA:  BTFSS  F84.0
43BC:  BRA    43FC
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
43BE:  MOVLW  01
43C0:  MOVLB  5
43C2:  SUBWF  x6B,W
43C4:  CLRF   03
43C6:  ADDLW  92
43C8:  MOVWF  FE9
43CA:  MOVLW  05
43CC:  ADDWFC 03,W
43CE:  MOVWF  FEA
43D0:  BTFSC  FEF.7
43D2:  BRA    43FA
43D4:  MOVF   FEF,W
43D6:  SUBLW  00
43D8:  BC    43FA
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
43DA:  MOVLW  1E
43DC:  MOVWF  xFC
43DE:  MOVLB  0
43E0:  CALL   0CF8
43E4:  MOVLW  01
43E6:  MOVLB  5
43E8:  SUBWF  x6B,W
43EA:  CLRF   03
43EC:  ADDLW  92
43EE:  MOVWF  FE9
43F0:  MOVLW  05
43F2:  ADDWFC 03,W
43F4:  MOVWF  FEA
43F6:  DECF   FEF,F
43F8:  BSF    x65.3
43FA:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
43FC:  BSF    F96.1
43FE:  BTFSS  F84.1
4400:  BRA    4416
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
4402:  MOVLW  1E
4404:  MOVLB  5
4406:  MOVWF  xFC
4408:  MOVLB  0
440A:  CALL   0CF8
440E:  MOVLB  5
4410:  DECF   x6B,F
4412:  BSF    x65.3
4414:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
4416:  BSF    F96.2
4418:  BTFSS  F84.2
441A:  BRA    44EA
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
441C:  MOVLW  04
441E:  MOVLB  5
4420:  MOVWF  xF6
4422:  MOVLW  AF
4424:  MOVWF  xFC
4426:  MOVLB  0
4428:  CALL   0CF8
442C:  MOVLB  5
442E:  DECFSZ xF6,F
4430:  BRA    4422
4432:  MOVLW  01
4434:  MOVWF  x6A
4436:  CLRF   xF7
4438:  MOVLB  0
443A:  CALL   0D62
443E:  MOVLW  01
4440:  MOVLB  5
4442:  MOVWF  x71
4444:  BSF    x65.3
....................             write_eeprom(10,Testerilizacionp[0]);write_eeprom(20,Testerilizacionp[1]); 
4446:  MOVLW  0A
4448:  MOVWF  FA9
444A:  MOVFF  592,FA8
444E:  BCF    FA6.6
4450:  BCF    FA6.7
4452:  BSF    FA6.2
4454:  MOVF   FF2,W
4456:  MOVWF  00
4458:  BCF    FF2.7
445A:  MOVLB  F
445C:  MOVLW  55
445E:  MOVWF  FA7
4460:  MOVLW  AA
4462:  MOVWF  FA7
4464:  BSF    FA6.1
4466:  BTFSC  FA6.1
4468:  BRA    4466
446A:  BCF    FA6.2
446C:  MOVF   00,W
446E:  IORWF  FF2,F
4470:  MOVLW  14
4472:  MOVWF  FA9
4474:  MOVFF  593,FA8
4478:  BCF    FA6.6
447A:  BCF    FA6.7
447C:  BSF    FA6.2
447E:  MOVF   FF2,W
4480:  MOVWF  00
4482:  BCF    FF2.7
4484:  MOVLW  55
4486:  MOVWF  FA7
4488:  MOVLW  AA
448A:  MOVWF  FA7
448C:  BSF    FA6.1
448E:  BTFSC  FA6.1
4490:  BRA    448E
4492:  BCF    FA6.2
4494:  MOVF   00,W
4496:  IORWF  FF2,F
....................             write_eeprom(30,Testerilizacionp[2]);write_eeprom(40,Testerilizacionp[3]); 
4498:  MOVLW  1E
449A:  MOVWF  FA9
449C:  MOVFF  594,FA8
44A0:  BCF    FA6.6
44A2:  BCF    FA6.7
44A4:  BSF    FA6.2
44A6:  MOVFF  FF2,00
44AA:  BCF    FF2.7
44AC:  MOVLW  55
44AE:  MOVWF  FA7
44B0:  MOVLW  AA
44B2:  MOVWF  FA7
44B4:  BSF    FA6.1
44B6:  BTFSC  FA6.1
44B8:  BRA    44B6
44BA:  BCF    FA6.2
44BC:  MOVF   00,W
44BE:  IORWF  FF2,F
44C0:  MOVLW  28
44C2:  MOVWF  FA9
44C4:  MOVFF  595,FA8
44C8:  BCF    FA6.6
44CA:  BCF    FA6.7
44CC:  BSF    FA6.2
44CE:  MOVFF  FF2,00
44D2:  BCF    FF2.7
44D4:  MOVLW  55
44D6:  MOVWF  FA7
44D8:  MOVLW  AA
44DA:  MOVWF  FA7
44DC:  BSF    FA6.1
44DE:  BTFSC  FA6.1
44E0:  BRA    44DE
44E2:  BCF    FA6.2
44E4:  MOVF   00,W
44E6:  IORWF  FF2,F
44E8:  MOVLB  0
44EA:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==7){ // Menu de Cambio de Contraseña 
44EC:  MOVF   x6A,W
44EE:  SUBLW  07
44F0:  BTFSS  FD8.2
44F2:  BRA    498C
....................          
....................       strcpy(Menus.Letra,"Clave"); 
44F4:  MOVLW  05
44F6:  MOVWF  FEA
44F8:  MOVLW  D6
44FA:  MOVWF  FE9
44FC:  MOVFF  FF2,5F6
4500:  BCF    FF2.7
4502:  MOVLW  00
4504:  MOVLB  0
4506:  CALL   077E
450A:  TBLRD*-
450C:  TBLRD*+
450E:  MOVF   FF5,W
4510:  MOVWF  FEE
4512:  IORLW  00
4514:  BNZ   450C
4516:  MOVLB  5
4518:  BTFSC  xF6.7
451A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
451C:  MOVLW  05
451E:  MOVWF  xF7
4520:  MOVLW  D6
4522:  MOVWF  xF6
4524:  MOVLW  1E
4526:  MOVWF  xF8
4528:  CLRF   xF9
452A:  MOVLW  01
452C:  MOVWF  xFA
452E:  MOVLW  02
4530:  MOVWF  xFB
4532:  MOVLB  0
4534:  CALL   1394
....................        
....................       if(unidad==1) 
4538:  MOVLB  5
453A:  DECFSZ x6B,W
453C:  BRA    459A
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
453E:  MOVFF  596,5F8
4542:  MOVLW  14
4544:  MOVWF  xF9
4546:  MOVLW  1E
4548:  MOVWF  xFA
454A:  MOVLW  01
454C:  MOVWF  xFB
454E:  MOVLB  0
4550:  CALL   15CC
....................          displayContrasena(Contrasena[1],40,30,0); 
4554:  MOVFF  597,5F8
4558:  MOVLW  28
455A:  MOVLB  5
455C:  MOVWF  xF9
455E:  MOVLW  1E
4560:  MOVWF  xFA
4562:  CLRF   xFB
4564:  MOVLB  0
4566:  CALL   15CC
....................          displayContrasena(Contrasena[2],60,30,0); 
456A:  MOVFF  598,5F8
456E:  MOVLW  3C
4570:  MOVLB  5
4572:  MOVWF  xF9
4574:  MOVLW  1E
4576:  MOVWF  xFA
4578:  CLRF   xFB
457A:  MOVLB  0
457C:  CALL   15CC
....................          displayContrasena(Contrasena[3],80,30,0); 
4580:  MOVFF  599,5F8
4584:  MOVLW  50
4586:  MOVLB  5
4588:  MOVWF  xF9
458A:  MOVLW  1E
458C:  MOVWF  xFA
458E:  CLRF   xFB
4590:  MOVLB  0
4592:  CALL   15CC
....................       } 
....................       else 
4596:  BRA    46BC
4598:  MOVLB  5
....................       { 
....................          if(unidad==2) 
459A:  MOVF   x6B,W
459C:  SUBLW  02
459E:  BNZ   45FC
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
45A0:  MOVFF  596,5F8
45A4:  MOVLW  14
45A6:  MOVWF  xF9
45A8:  MOVLW  1E
45AA:  MOVWF  xFA
45AC:  CLRF   xFB
45AE:  MOVLB  0
45B0:  CALL   15CC
....................             displayContrasena(Contrasena[1],40,30,1); 
45B4:  MOVFF  597,5F8
45B8:  MOVLW  28
45BA:  MOVLB  5
45BC:  MOVWF  xF9
45BE:  MOVLW  1E
45C0:  MOVWF  xFA
45C2:  MOVLW  01
45C4:  MOVWF  xFB
45C6:  MOVLB  0
45C8:  CALL   15CC
....................             displayContrasena(Contrasena[2],60,30,0); 
45CC:  MOVFF  598,5F8
45D0:  MOVLW  3C
45D2:  MOVLB  5
45D4:  MOVWF  xF9
45D6:  MOVLW  1E
45D8:  MOVWF  xFA
45DA:  CLRF   xFB
45DC:  MOVLB  0
45DE:  CALL   15CC
....................             displayContrasena(Contrasena[3],80,30,0); 
45E2:  MOVFF  599,5F8
45E6:  MOVLW  50
45E8:  MOVLB  5
45EA:  MOVWF  xF9
45EC:  MOVLW  1E
45EE:  MOVWF  xFA
45F0:  CLRF   xFB
45F2:  MOVLB  0
45F4:  CALL   15CC
....................          } 
....................          else 
45F8:  BRA    46BC
45FA:  MOVLB  5
....................          { 
....................             if(unidad==3) 
45FC:  MOVF   x6B,W
45FE:  SUBLW  03
4600:  BNZ   465E
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
4602:  MOVFF  596,5F8
4606:  MOVLW  14
4608:  MOVWF  xF9
460A:  MOVLW  1E
460C:  MOVWF  xFA
460E:  CLRF   xFB
4610:  MOVLB  0
4612:  CALL   15CC
....................                displayContrasena(Contrasena[1],40,30,0); 
4616:  MOVFF  597,5F8
461A:  MOVLW  28
461C:  MOVLB  5
461E:  MOVWF  xF9
4620:  MOVLW  1E
4622:  MOVWF  xFA
4624:  CLRF   xFB
4626:  MOVLB  0
4628:  CALL   15CC
....................                displayContrasena(Contrasena[2],60,30,1); 
462C:  MOVFF  598,5F8
4630:  MOVLW  3C
4632:  MOVLB  5
4634:  MOVWF  xF9
4636:  MOVLW  1E
4638:  MOVWF  xFA
463A:  MOVLW  01
463C:  MOVWF  xFB
463E:  MOVLB  0
4640:  CALL   15CC
....................                displayContrasena(Contrasena[3],80,30,0); 
4644:  MOVFF  599,5F8
4648:  MOVLW  50
464A:  MOVLB  5
464C:  MOVWF  xF9
464E:  MOVLW  1E
4650:  MOVWF  xFA
4652:  CLRF   xFB
4654:  MOVLB  0
4656:  CALL   15CC
....................             } 
....................             else 
465A:  BRA    46BC
465C:  MOVLB  5
....................             { 
....................                if(unidad==4) 
465E:  MOVF   x6B,W
4660:  SUBLW  04
4662:  BNZ   46BE
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4664:  MOVFF  596,5F8
4668:  MOVLW  14
466A:  MOVWF  xF9
466C:  MOVLW  1E
466E:  MOVWF  xFA
4670:  CLRF   xFB
4672:  MOVLB  0
4674:  CALL   15CC
....................                   displayContrasena(Contrasena[1],40,30,0); 
4678:  MOVFF  597,5F8
467C:  MOVLW  28
467E:  MOVLB  5
4680:  MOVWF  xF9
4682:  MOVLW  1E
4684:  MOVWF  xFA
4686:  CLRF   xFB
4688:  MOVLB  0
468A:  CALL   15CC
....................                   displayContrasena(Contrasena[2],60,30,0); 
468E:  MOVFF  598,5F8
4692:  MOVLW  3C
4694:  MOVLB  5
4696:  MOVWF  xF9
4698:  MOVLW  1E
469A:  MOVWF  xFA
469C:  CLRF   xFB
469E:  MOVLB  0
46A0:  CALL   15CC
....................                   displayContrasena(Contrasena[3],80,30,1); 
46A4:  MOVFF  599,5F8
46A8:  MOVLW  50
46AA:  MOVLB  5
46AC:  MOVWF  xF9
46AE:  MOVLW  1E
46B0:  MOVWF  xFA
46B2:  MOVLW  01
46B4:  MOVWF  xFB
46B6:  MOVLB  0
46B8:  CALL   15CC
46BC:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
46BE:  BSF    F92.5
46C0:  BTFSS  F80.5
46C2:  BRA    472A
....................       { 
....................          if(Flanco == 0) 
46C4:  BTFSC  x65.0
46C6:  BRA    4728
....................          { 
....................             Flanco = 1;delay_ms(30); 
46C8:  BSF    x65.0
46CA:  MOVLW  1E
46CC:  MOVWF  xFC
46CE:  MOVLB  0
46D0:  CALL   0CF8
....................             for(i=1;i<=4;i++) 
46D4:  MOVLW  01
46D6:  MOVLB  5
46D8:  MOVWF  x6C
46DA:  MOVF   x6C,W
46DC:  SUBLW  04
46DE:  BNC   4728
....................             { 
....................                if(unidad==i) 
46E0:  MOVF   x6C,W
46E2:  SUBWF  x6B,W
46E4:  BNZ   4724
....................                { 
....................                   Contrasena[i-1]++; 
46E6:  MOVLW  01
46E8:  SUBWF  x6C,W
46EA:  CLRF   03
46EC:  ADDLW  96
46EE:  MOVWF  FE9
46F0:  MOVLW  05
46F2:  ADDWFC 03,W
46F4:  MOVWF  FEA
46F6:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
46F8:  MOVLW  01
46FA:  SUBWF  x6C,W
46FC:  CLRF   03
46FE:  ADDLW  96
4700:  MOVWF  FE9
4702:  MOVLW  05
4704:  ADDWFC 03,W
4706:  MOVWF  FEA
4708:  BTFSC  FEF.7
470A:  BRA    4724
470C:  MOVF   FEF,W
470E:  SUBLW  09
4710:  BC    4724
....................                   { 
....................                      Contrasena[i-1]=0; 
4712:  MOVLW  01
4714:  SUBWF  x6C,W
4716:  CLRF   03
4718:  ADDLW  96
471A:  MOVWF  FE9
471C:  MOVLW  05
471E:  ADDWFC 03,W
4720:  MOVWF  FEA
4722:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4724:  INCF   x6C,F
4726:  BRA    46DA
....................          } 
....................       } 
....................       else 
4728:  BRA    472C
....................       { 
....................          Flanco = 0; 
472A:  BCF    x65.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
472C:  BSF    F96.0
472E:  BTFSS  F84.0
4730:  BRA    4796
....................       { 
....................          if(Flanco2 == 0) 
4732:  BTFSC  x65.2
4734:  BRA    4794
....................             {Flanco2 = 1;delay_ms(30); 
4736:  BSF    x65.2
4738:  MOVLW  1E
473A:  MOVWF  xFC
473C:  MOVLB  0
473E:  CALL   0CF8
....................                for(i=1;i<=4;i++) 
4742:  MOVLW  01
4744:  MOVLB  5
4746:  MOVWF  x6C
4748:  MOVF   x6C,W
474A:  SUBLW  04
474C:  BNC   4794
....................                { 
....................                   if(unidad==i) 
474E:  MOVF   x6C,W
4750:  SUBWF  x6B,W
4752:  BNZ   4790
....................                   {Contrasena[i-1]--;  
4754:  MOVLW  01
4756:  SUBWF  x6C,W
4758:  CLRF   03
475A:  ADDLW  96
475C:  MOVWF  FE9
475E:  MOVLW  05
4760:  ADDWFC 03,W
4762:  MOVWF  FEA
4764:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4766:  MOVLW  01
4768:  SUBWF  x6C,W
476A:  CLRF   03
476C:  ADDLW  96
476E:  MOVWF  FE9
4770:  MOVLW  05
4772:  ADDWFC 03,W
4774:  MOVWF  FEA
4776:  BTFSC  FEF.7
4778:  BRA    477C
477A:  BRA    4790
....................                         {Contrasena[i-1]=9;} 
477C:  MOVLW  01
477E:  SUBWF  x6C,W
4780:  CLRF   03
4782:  ADDLW  96
4784:  MOVWF  FE9
4786:  MOVLW  05
4788:  ADDWFC 03,W
478A:  MOVWF  FEA
478C:  MOVLW  09
478E:  MOVWF  FEF
....................                   } 
....................                }       
4790:  INCF   x6C,F
4792:  BRA    4748
....................             }      
....................       } 
....................       else 
4794:  BRA    4798
....................       { 
....................          Flanco2 = 0; 
4796:  BCF    x65.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4798:  BSF    F96.1
479A:  BTFSS  F84.1
479C:  BRA    47BC
....................       { 
....................          if(Flanco1 == 0) 
479E:  BTFSC  x65.1
47A0:  BRA    47BA
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
47A2:  BSF    x65.1
47A4:  MOVLW  02
47A6:  MOVWF  xF6
47A8:  MOVLW  96
47AA:  MOVWF  xFC
47AC:  MOVLB  0
47AE:  CALL   0CF8
47B2:  MOVLB  5
47B4:  DECFSZ xF6,F
47B6:  BRA    47A8
47B8:  INCF   x6B,F
....................       } 
....................       else 
47BA:  BRA    47BE
....................       { 
....................          Flanco1 = 0; 
47BC:  BCF    x65.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
47BE:  BSF    F96.2
47C0:  BTFSS  F84.2
47C2:  BRA    47E6
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
47C4:  MOVLW  04
47C6:  MOVWF  xF6
47C8:  MOVLW  AF
47CA:  MOVWF  xFC
47CC:  MOVLB  0
47CE:  CALL   0CF8
47D2:  MOVLB  5
47D4:  DECFSZ xF6,F
47D6:  BRA    47C8
47D8:  MOVLW  01
47DA:  MOVWF  x6A
47DC:  CLRF   xF7
47DE:  MOVLB  0
47E0:  CALL   0D62
47E4:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
47E6:  MOVF   x6B,W
47E8:  SUBLW  04
47EA:  BTFSC  FD8.0
47EC:  BRA    498C
....................       {glcd_fillScreen(OFF); 
47EE:  CLRF   xF7
47F0:  MOVLB  0
47F2:  CALL   0D62
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
47F6:  MOVLB  5
47F8:  MOVF   x9A,W
47FA:  SUBWF  x96,W
47FC:  BNZ   48CC
47FE:  MOVF   x9B,W
4800:  SUBWF  x97,W
4802:  BNZ   48CC
4804:  MOVF   x9C,W
4806:  SUBWF  x98,W
4808:  BNZ   48CC
480A:  MOVF   x9D,W
480C:  SUBWF  x99,W
480E:  BNZ   48CC
....................          { 
....................             glcd_fillScreen(OFF); 
4810:  CLRF   xF7
4812:  MOVLB  0
4814:  CALL   0D62
....................             strcpy(Menus.Letra,"Clave"); 
4818:  MOVLW  05
481A:  MOVWF  FEA
481C:  MOVLW  D6
481E:  MOVWF  FE9
4820:  MOVFF  FF2,5F6
4824:  BCF    FF2.7
4826:  MOVLW  00
4828:  CALL   077E
482C:  TBLRD*-
482E:  TBLRD*+
4830:  MOVF   FF5,W
4832:  MOVWF  FEE
4834:  IORLW  00
4836:  BNZ   482E
4838:  MOVLB  5
483A:  BTFSC  xF6.7
483C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
483E:  MOVLW  05
4840:  MOVWF  xF7
4842:  MOVLW  D6
4844:  MOVWF  xF6
4846:  MOVLW  1E
4848:  MOVWF  xF8
484A:  CLRF   xF9
484C:  CLRF   xFA
484E:  MOVLW  02
4850:  MOVWF  xFB
4852:  MOVLB  0
4854:  CALL   1394
....................             strcpy(Menus.Letra,"Correcta"); 
4858:  MOVLW  05
485A:  MOVWF  FEA
485C:  MOVLW  D6
485E:  MOVWF  FE9
4860:  MOVFF  FF2,5F6
4864:  BCF    FF2.7
4866:  MOVLW  00
4868:  CALL   079E
486C:  TBLRD*-
486E:  TBLRD*+
4870:  MOVF   FF5,W
4872:  MOVWF  FEE
4874:  IORLW  00
4876:  BNZ   486E
4878:  MOVLB  5
487A:  BTFSC  xF6.7
487C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
487E:  MOVLW  05
4880:  MOVWF  xF7
4882:  MOVLW  D6
4884:  MOVWF  xF6
4886:  MOVLW  0F
4888:  MOVWF  xF8
488A:  MOVLW  1E
488C:  MOVWF  xF9
488E:  CLRF   xFA
4890:  MOVLW  02
4892:  MOVWF  xFB
4894:  MOVLB  0
4896:  CALL   1394
....................             Menu=91;glcd_update();delay_ms(1000); 
489A:  MOVLW  5B
489C:  MOVLB  5
489E:  MOVWF  x6A
48A0:  MOVLB  0
48A2:  CALL   0DBC
48A6:  MOVLW  04
48A8:  MOVLB  5
48AA:  MOVWF  xF6
48AC:  MOVLW  FA
48AE:  MOVWF  xFC
48B0:  MOVLB  0
48B2:  CALL   0CF8
48B6:  MOVLB  5
48B8:  DECFSZ xF6,F
48BA:  BRA    48AC
....................             glcd_fillScreen(OFF);unidad=1; 
48BC:  CLRF   xF7
48BE:  MOVLB  0
48C0:  CALL   0D62
48C4:  MOVLW  01
48C6:  MOVLB  5
48C8:  MOVWF  x6B
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
48CA:  BRA    498C
....................          { 
....................             glcd_fillScreen(OFF); 
48CC:  CLRF   xF7
48CE:  MOVLB  0
48D0:  CALL   0D62
....................             strcpy(Menus.Letra,"Clave"); 
48D4:  MOVLW  05
48D6:  MOVWF  FEA
48D8:  MOVLW  D6
48DA:  MOVWF  FE9
48DC:  MOVFF  FF2,5F6
48E0:  BCF    FF2.7
48E2:  MOVLW  00
48E4:  CALL   077E
48E8:  TBLRD*-
48EA:  TBLRD*+
48EC:  MOVF   FF5,W
48EE:  MOVWF  FEE
48F0:  IORLW  00
48F2:  BNZ   48EA
48F4:  MOVLB  5
48F6:  BTFSC  xF6.7
48F8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
48FA:  MOVLW  05
48FC:  MOVWF  xF7
48FE:  MOVLW  D6
4900:  MOVWF  xF6
4902:  MOVLW  1E
4904:  MOVWF  xF8
4906:  CLRF   xF9
4908:  CLRF   xFA
490A:  MOVLW  02
490C:  MOVWF  xFB
490E:  MOVLB  0
4910:  CALL   1394
....................             strcpy(Menus.Letra,"Incorrecta"); 
4914:  MOVLW  05
4916:  MOVWF  FEA
4918:  MOVLW  D6
491A:  MOVWF  FE9
491C:  MOVFF  FF2,5F6
4920:  BCF    FF2.7
4922:  MOVLW  00
4924:  CALL   07C2
4928:  TBLRD*-
492A:  TBLRD*+
492C:  MOVF   FF5,W
492E:  MOVWF  FEE
4930:  IORLW  00
4932:  BNZ   492A
4934:  MOVLB  5
4936:  BTFSC  xF6.7
4938:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
493A:  MOVLW  05
493C:  MOVWF  xF7
493E:  MOVLW  D6
4940:  MOVWF  xF6
4942:  CLRF   xF8
4944:  MOVLW  1E
4946:  MOVWF  xF9
4948:  CLRF   xFA
494A:  MOVLW  02
494C:  MOVWF  xFB
494E:  MOVLB  0
4950:  CALL   1394
....................             Menu=1;glcd_update();delay_ms(1000); 
4954:  MOVLW  01
4956:  MOVLB  5
4958:  MOVWF  x6A
495A:  MOVLB  0
495C:  CALL   0DBC
4960:  MOVLW  04
4962:  MOVLB  5
4964:  MOVWF  xF6
4966:  MOVLW  FA
4968:  MOVWF  xFC
496A:  MOVLB  0
496C:  CALL   0CF8
4970:  MOVLB  5
4972:  DECFSZ xF6,F
4974:  BRA    4966
....................             glcd_fillScreen(OFF);unidad=1; 
4976:  CLRF   xF7
4978:  MOVLB  0
497A:  CALL   0D62
497E:  MOVLW  01
4980:  MOVLB  5
4982:  MOVWF  x6B
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4984:  CLRF   x96
4986:  CLRF   x97
4988:  CLRF   x98
498A:  CLRF   x99
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
498C:  MOVF   x6A,W
498E:  SUBLW  5B
4990:  BTFSS  FD8.2
4992:  BRA    4D56
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4994:  MOVLW  05
4996:  MOVWF  FEA
4998:  MOVLW  D6
499A:  MOVWF  FE9
499C:  MOVFF  FF2,5F6
49A0:  BCF    FF2.7
49A2:  MOVLW  00
49A4:  MOVLB  0
49A6:  CALL   0964
49AA:  TBLRD*-
49AC:  TBLRD*+
49AE:  MOVF   FF5,W
49B0:  MOVWF  FEE
49B2:  IORLW  00
49B4:  BNZ   49AC
49B6:  MOVLB  5
49B8:  BTFSC  xF6.7
49BA:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
49BC:  MOVLW  05
49BE:  MOVWF  xF7
49C0:  MOVLW  D6
49C2:  MOVWF  xF6
49C4:  CLRF   xF8
49C6:  CLRF   xF9
49C8:  MOVLW  01
49CA:  MOVWF  xFA
49CC:  MOVLW  02
49CE:  MOVWF  xFB
49D0:  MOVLB  0
49D2:  CALL   1394
....................        
....................       if(unidad==1) 
49D6:  MOVLB  5
49D8:  DECFSZ x6B,W
49DA:  BRA    4A38
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
49DC:  MOVFF  59A,5F8
49E0:  MOVLW  14
49E2:  MOVWF  xF9
49E4:  MOVLW  1E
49E6:  MOVWF  xFA
49E8:  MOVLW  01
49EA:  MOVWF  xFB
49EC:  MOVLB  0
49EE:  CALL   15CC
....................          displayContrasena(Password[1],40,30,0); 
49F2:  MOVFF  59B,5F8
49F6:  MOVLW  28
49F8:  MOVLB  5
49FA:  MOVWF  xF9
49FC:  MOVLW  1E
49FE:  MOVWF  xFA
4A00:  CLRF   xFB
4A02:  MOVLB  0
4A04:  CALL   15CC
....................          displayContrasena(Password[2],60,30,0); 
4A08:  MOVFF  59C,5F8
4A0C:  MOVLW  3C
4A0E:  MOVLB  5
4A10:  MOVWF  xF9
4A12:  MOVLW  1E
4A14:  MOVWF  xFA
4A16:  CLRF   xFB
4A18:  MOVLB  0
4A1A:  CALL   15CC
....................          displayContrasena(Password[3],80,30,0); 
4A1E:  MOVFF  59D,5F8
4A22:  MOVLW  50
4A24:  MOVLB  5
4A26:  MOVWF  xF9
4A28:  MOVLW  1E
4A2A:  MOVWF  xFA
4A2C:  CLRF   xFB
4A2E:  MOVLB  0
4A30:  CALL   15CC
....................       } 
....................       else 
4A34:  BRA    4B5A
4A36:  MOVLB  5
....................       { 
....................          if(unidad==2) 
4A38:  MOVF   x6B,W
4A3A:  SUBLW  02
4A3C:  BNZ   4A9A
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4A3E:  MOVFF  59A,5F8
4A42:  MOVLW  14
4A44:  MOVWF  xF9
4A46:  MOVLW  1E
4A48:  MOVWF  xFA
4A4A:  CLRF   xFB
4A4C:  MOVLB  0
4A4E:  CALL   15CC
....................             displayContrasena(Password[1],40,30,1); 
4A52:  MOVFF  59B,5F8
4A56:  MOVLW  28
4A58:  MOVLB  5
4A5A:  MOVWF  xF9
4A5C:  MOVLW  1E
4A5E:  MOVWF  xFA
4A60:  MOVLW  01
4A62:  MOVWF  xFB
4A64:  MOVLB  0
4A66:  CALL   15CC
....................             displayContrasena(Password[2],60,30,0); 
4A6A:  MOVFF  59C,5F8
4A6E:  MOVLW  3C
4A70:  MOVLB  5
4A72:  MOVWF  xF9
4A74:  MOVLW  1E
4A76:  MOVWF  xFA
4A78:  CLRF   xFB
4A7A:  MOVLB  0
4A7C:  CALL   15CC
....................             displayContrasena(Password[3],80,30,0); 
4A80:  MOVFF  59D,5F8
4A84:  MOVLW  50
4A86:  MOVLB  5
4A88:  MOVWF  xF9
4A8A:  MOVLW  1E
4A8C:  MOVWF  xFA
4A8E:  CLRF   xFB
4A90:  MOVLB  0
4A92:  CALL   15CC
....................          } 
....................          else 
4A96:  BRA    4B5A
4A98:  MOVLB  5
....................          { 
....................             if(unidad==3) 
4A9A:  MOVF   x6B,W
4A9C:  SUBLW  03
4A9E:  BNZ   4AFC
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4AA0:  MOVFF  59A,5F8
4AA4:  MOVLW  14
4AA6:  MOVWF  xF9
4AA8:  MOVLW  1E
4AAA:  MOVWF  xFA
4AAC:  CLRF   xFB
4AAE:  MOVLB  0
4AB0:  CALL   15CC
....................                displayContrasena(Password[1],40,30,0); 
4AB4:  MOVFF  59B,5F8
4AB8:  MOVLW  28
4ABA:  MOVLB  5
4ABC:  MOVWF  xF9
4ABE:  MOVLW  1E
4AC0:  MOVWF  xFA
4AC2:  CLRF   xFB
4AC4:  MOVLB  0
4AC6:  CALL   15CC
....................                displayContrasena(Password[2],60,30,1); 
4ACA:  MOVFF  59C,5F8
4ACE:  MOVLW  3C
4AD0:  MOVLB  5
4AD2:  MOVWF  xF9
4AD4:  MOVLW  1E
4AD6:  MOVWF  xFA
4AD8:  MOVLW  01
4ADA:  MOVWF  xFB
4ADC:  MOVLB  0
4ADE:  CALL   15CC
....................                displayContrasena(Password[3],80,30,0); 
4AE2:  MOVFF  59D,5F8
4AE6:  MOVLW  50
4AE8:  MOVLB  5
4AEA:  MOVWF  xF9
4AEC:  MOVLW  1E
4AEE:  MOVWF  xFA
4AF0:  CLRF   xFB
4AF2:  MOVLB  0
4AF4:  CALL   15CC
....................             } 
....................             else 
4AF8:  BRA    4B5A
4AFA:  MOVLB  5
....................             { 
....................                if(unidad==4) 
4AFC:  MOVF   x6B,W
4AFE:  SUBLW  04
4B00:  BNZ   4B5C
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
4B02:  MOVFF  59A,5F8
4B06:  MOVLW  14
4B08:  MOVWF  xF9
4B0A:  MOVLW  1E
4B0C:  MOVWF  xFA
4B0E:  CLRF   xFB
4B10:  MOVLB  0
4B12:  CALL   15CC
....................                   displayContrasena(Password[1],40,30,0); 
4B16:  MOVFF  59B,5F8
4B1A:  MOVLW  28
4B1C:  MOVLB  5
4B1E:  MOVWF  xF9
4B20:  MOVLW  1E
4B22:  MOVWF  xFA
4B24:  CLRF   xFB
4B26:  MOVLB  0
4B28:  CALL   15CC
....................                   displayContrasena(Password[2],60,30,0); 
4B2C:  MOVFF  59C,5F8
4B30:  MOVLW  3C
4B32:  MOVLB  5
4B34:  MOVWF  xF9
4B36:  MOVLW  1E
4B38:  MOVWF  xFA
4B3A:  CLRF   xFB
4B3C:  MOVLB  0
4B3E:  CALL   15CC
....................                   displayContrasena(Password[3],80,30,1); 
4B42:  MOVFF  59D,5F8
4B46:  MOVLW  50
4B48:  MOVLB  5
4B4A:  MOVWF  xF9
4B4C:  MOVLW  1E
4B4E:  MOVWF  xFA
4B50:  MOVLW  01
4B52:  MOVWF  xFB
4B54:  MOVLB  0
4B56:  CALL   15CC
4B5A:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4B5C:  BSF    F92.5
4B5E:  BTFSS  F80.5
4B60:  BRA    4BC8
....................       { 
....................          if(Flanco == 0) 
4B62:  BTFSC  x65.0
4B64:  BRA    4BC6
....................          { 
....................             Flanco = 1;delay_ms(30); 
4B66:  BSF    x65.0
4B68:  MOVLW  1E
4B6A:  MOVWF  xFC
4B6C:  MOVLB  0
4B6E:  CALL   0CF8
....................             for(i=1;i<=4;i++) 
4B72:  MOVLW  01
4B74:  MOVLB  5
4B76:  MOVWF  x6C
4B78:  MOVF   x6C,W
4B7A:  SUBLW  04
4B7C:  BNC   4BC6
....................             { 
....................                if(unidad==i) 
4B7E:  MOVF   x6C,W
4B80:  SUBWF  x6B,W
4B82:  BNZ   4BC2
....................                { 
....................                   Password[i-1]++; 
4B84:  MOVLW  01
4B86:  SUBWF  x6C,W
4B88:  CLRF   03
4B8A:  ADDLW  9A
4B8C:  MOVWF  FE9
4B8E:  MOVLW  05
4B90:  ADDWFC 03,W
4B92:  MOVWF  FEA
4B94:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
4B96:  MOVLW  01
4B98:  SUBWF  x6C,W
4B9A:  CLRF   03
4B9C:  ADDLW  9A
4B9E:  MOVWF  FE9
4BA0:  MOVLW  05
4BA2:  ADDWFC 03,W
4BA4:  MOVWF  FEA
4BA6:  BTFSC  FEF.7
4BA8:  BRA    4BC2
4BAA:  MOVF   FEF,W
4BAC:  SUBLW  09
4BAE:  BC    4BC2
....................                   { 
....................                      Password[i-1]=0; 
4BB0:  MOVLW  01
4BB2:  SUBWF  x6C,W
4BB4:  CLRF   03
4BB6:  ADDLW  9A
4BB8:  MOVWF  FE9
4BBA:  MOVLW  05
4BBC:  ADDWFC 03,W
4BBE:  MOVWF  FEA
4BC0:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4BC2:  INCF   x6C,F
4BC4:  BRA    4B78
....................          } 
....................       } 
....................       else 
4BC6:  BRA    4BCA
....................       { 
....................          Flanco = 0; 
4BC8:  BCF    x65.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4BCA:  BSF    F96.0
4BCC:  BTFSS  F84.0
4BCE:  BRA    4C34
....................       { 
....................          if(Flanco2 == 0) 
4BD0:  BTFSC  x65.2
4BD2:  BRA    4C32
....................             {Flanco2 = 1;delay_ms(30); 
4BD4:  BSF    x65.2
4BD6:  MOVLW  1E
4BD8:  MOVWF  xFC
4BDA:  MOVLB  0
4BDC:  CALL   0CF8
....................                for(i=1;i<=4;i++) 
4BE0:  MOVLW  01
4BE2:  MOVLB  5
4BE4:  MOVWF  x6C
4BE6:  MOVF   x6C,W
4BE8:  SUBLW  04
4BEA:  BNC   4C32
....................                { 
....................                   if(unidad==i) 
4BEC:  MOVF   x6C,W
4BEE:  SUBWF  x6B,W
4BF0:  BNZ   4C2E
....................                   { 
....................                      Password[i-1]--; 
4BF2:  MOVLW  01
4BF4:  SUBWF  x6C,W
4BF6:  CLRF   03
4BF8:  ADDLW  9A
4BFA:  MOVWF  FE9
4BFC:  MOVLW  05
4BFE:  ADDWFC 03,W
4C00:  MOVWF  FEA
4C02:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
4C04:  MOVLW  01
4C06:  SUBWF  x6C,W
4C08:  CLRF   03
4C0A:  ADDLW  9A
4C0C:  MOVWF  FE9
4C0E:  MOVLW  05
4C10:  ADDWFC 03,W
4C12:  MOVWF  FEA
4C14:  BTFSC  FEF.7
4C16:  BRA    4C1A
4C18:  BRA    4C2E
....................                      { 
....................                         Password[i-1]=9; 
4C1A:  MOVLW  01
4C1C:  SUBWF  x6C,W
4C1E:  CLRF   03
4C20:  ADDLW  9A
4C22:  MOVWF  FE9
4C24:  MOVLW  05
4C26:  ADDWFC 03,W
4C28:  MOVWF  FEA
4C2A:  MOVLW  09
4C2C:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
4C2E:  INCF   x6C,F
4C30:  BRA    4BE6
....................             }      
....................       } 
....................       else 
4C32:  BRA    4C36
....................       { 
....................          Flanco2 = 0; 
4C34:  BCF    x65.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4C36:  BSF    F96.1
4C38:  BTFSS  F84.1
4C3A:  BRA    4C5A
....................       { 
....................          if(Flanco1 == 0) 
4C3C:  BTFSC  x65.1
4C3E:  BRA    4C58
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4C40:  BSF    x65.1
4C42:  MOVLW  02
4C44:  MOVWF  xF6
4C46:  MOVLW  96
4C48:  MOVWF  xFC
4C4A:  MOVLB  0
4C4C:  CALL   0CF8
4C50:  MOVLB  5
4C52:  DECFSZ xF6,F
4C54:  BRA    4C46
4C56:  INCF   x6B,F
....................       } 
....................       else 
4C58:  BRA    4C5C
....................       { 
....................          Flanco1 = 0; 
4C5A:  BCF    x65.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4C5C:  BSF    F96.2
4C5E:  BTFSS  F84.2
4C60:  BRA    4C84
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4C62:  MOVLW  04
4C64:  MOVWF  xF6
4C66:  MOVLW  AF
4C68:  MOVWF  xFC
4C6A:  MOVLB  0
4C6C:  CALL   0CF8
4C70:  MOVLB  5
4C72:  DECFSZ xF6,F
4C74:  BRA    4C66
4C76:  MOVLW  01
4C78:  MOVWF  x6A
4C7A:  CLRF   xF7
4C7C:  MOVLB  0
4C7E:  CALL   0D62
4C82:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
4C84:  MOVF   x6B,W
4C86:  SUBLW  04
4C88:  BC    4D56
....................       { 
....................          Opcion=1;unidad=1; 
4C8A:  MOVLW  01
4C8C:  MOVWF  x71
4C8E:  MOVWF  x6B
....................          write_eeprom(60,Password[0]);write_eeprom(70,Password[1]);write_eeprom(80,Password[2]);write_eeprom(90,Password[3]); 
4C90:  MOVLW  3C
4C92:  MOVWF  FA9
4C94:  MOVFF  59A,FA8
4C98:  BCF    FA6.6
4C9A:  BCF    FA6.7
4C9C:  BSF    FA6.2
4C9E:  MOVF   FF2,W
4CA0:  MOVWF  00
4CA2:  BCF    FF2.7
4CA4:  MOVLB  F
4CA6:  MOVLW  55
4CA8:  MOVWF  FA7
4CAA:  MOVLW  AA
4CAC:  MOVWF  FA7
4CAE:  BSF    FA6.1
4CB0:  BTFSC  FA6.1
4CB2:  BRA    4CB0
4CB4:  BCF    FA6.2
4CB6:  MOVF   00,W
4CB8:  IORWF  FF2,F
4CBA:  MOVLW  46
4CBC:  MOVWF  FA9
4CBE:  MOVFF  59B,FA8
4CC2:  BCF    FA6.6
4CC4:  BCF    FA6.7
4CC6:  BSF    FA6.2
4CC8:  MOVF   FF2,W
4CCA:  MOVWF  00
4CCC:  BCF    FF2.7
4CCE:  MOVLW  55
4CD0:  MOVWF  FA7
4CD2:  MOVLW  AA
4CD4:  MOVWF  FA7
4CD6:  BSF    FA6.1
4CD8:  BTFSC  FA6.1
4CDA:  BRA    4CD8
4CDC:  BCF    FA6.2
4CDE:  MOVF   00,W
4CE0:  IORWF  FF2,F
4CE2:  MOVLW  50
4CE4:  MOVWF  FA9
4CE6:  MOVFF  59C,FA8
4CEA:  BCF    FA6.6
4CEC:  BCF    FA6.7
4CEE:  BSF    FA6.2
4CF0:  MOVF   FF2,W
4CF2:  MOVWF  00
4CF4:  BCF    FF2.7
4CF6:  MOVLW  55
4CF8:  MOVWF  FA7
4CFA:  MOVLW  AA
4CFC:  MOVWF  FA7
4CFE:  BSF    FA6.1
4D00:  BTFSC  FA6.1
4D02:  BRA    4D00
4D04:  BCF    FA6.2
4D06:  MOVF   00,W
4D08:  IORWF  FF2,F
4D0A:  MOVLW  5A
4D0C:  MOVWF  FA9
4D0E:  MOVFF  59D,FA8
4D12:  BCF    FA6.6
4D14:  BCF    FA6.7
4D16:  BSF    FA6.2
4D18:  MOVF   FF2,W
4D1A:  MOVWF  00
4D1C:  BCF    FF2.7
4D1E:  MOVLW  55
4D20:  MOVWF  FA7
4D22:  MOVLW  AA
4D24:  MOVWF  FA7
4D26:  BSF    FA6.1
4D28:  BTFSC  FA6.1
4D2A:  BRA    4D28
4D2C:  BCF    FA6.2
4D2E:  MOVF   00,W
4D30:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
4D32:  MOVLW  04
4D34:  MOVLB  5
4D36:  MOVWF  xF6
4D38:  MOVLW  FA
4D3A:  MOVWF  xFC
4D3C:  MOVLB  0
4D3E:  CALL   0CF8
4D42:  MOVLB  5
4D44:  DECFSZ xF6,F
4D46:  BRA    4D38
4D48:  CLRF   xF7
4D4A:  MOVLB  0
4D4C:  CALL   0D62
4D50:  MOVLW  01
4D52:  MOVLB  5
4D54:  MOVWF  x6A
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==20){ //Menu de Funcionamiento 
4D56:  MOVF   x6A,W
4D58:  SUBLW  14
4D5A:  BTFSS  FD8.2
4D5C:  GOTO   590C
....................        
....................       // Muestra imagen de fondo en Display GLCD 
....................       glcd_imagen(5); 
4D60:  MOVLW  05
4D62:  MOVWF  xF6
4D64:  MOVLB  0
4D66:  GOTO   25C0
....................        
....................        
....................       if(Pausa==0 && Puerta<770 && !TERM) 
4D6A:  MOVLB  5
4D6C:  MOVF   x6D,F
4D6E:  BTFSS  FD8.2
4D70:  BRA    4FF2
4D72:  MOVF   x81,W
4D74:  SUBLW  03
4D76:  BTFSS  FD8.0
4D78:  BRA    4FF2
4D7A:  BNZ   4D84
4D7C:  MOVF   x80,W
4D7E:  SUBLW  01
4D80:  BTFSS  FD8.0
4D82:  BRA    4FF2
4D84:  BSF    F92.4
4D86:  BTFSC  F80.4
4D88:  BRA    4FF2
....................       { 
....................          if(Temperatura>=Setpoint-0.5) 
4D8A:  CLRF   xFD
4D8C:  MOVFF  570,5FC
4D90:  MOVLB  0
4D92:  CALL   169C
4D96:  BSF    FD8.1
4D98:  MOVFF  03,5FE
4D9C:  MOVFF  02,5FD
4DA0:  MOVFF  01,5FC
4DA4:  MOVFF  00,5FB
4DA8:  MOVLB  6
4DAA:  CLRF   x02
4DAC:  CLRF   x01
4DAE:  CLRF   x00
4DB0:  MOVLW  7E
4DB2:  MOVLB  5
4DB4:  MOVWF  xFF
4DB6:  MOVLB  0
4DB8:  CALL   18A6
4DBC:  MOVFF  03,5F9
4DC0:  MOVFF  02,5F8
4DC4:  MOVFF  01,5F7
4DC8:  MOVFF  00,5F6
4DCC:  MOVFF  5D5,5FD
4DD0:  MOVFF  5D4,5FC
4DD4:  MOVFF  5D3,5FB
4DD8:  MOVFF  5D2,5FA
4DDC:  CALL   2676
4DE0:  BC    4DE4
4DE2:  BNZ   4DEC
....................          { 
....................             flag_setpoint=1; 
4DE4:  MOVLB  5
4DE6:  BSF    x66.4
....................             flag_ventilador=1; 
4DE8:  MOVLW  01
4DEA:  MOVWF  x69
....................          } 
....................           
....................          if(Temperatura<Setpoint-0.8) 
4DEC:  MOVLB  5
4DEE:  CLRF   xFD
4DF0:  MOVFF  570,5FC
4DF4:  MOVLB  0
4DF6:  CALL   169C
4DFA:  BSF    FD8.1
4DFC:  MOVFF  03,5FE
4E00:  MOVFF  02,5FD
4E04:  MOVFF  01,5FC
4E08:  MOVFF  00,5FB
4E0C:  MOVLW  CD
4E0E:  MOVLB  6
4E10:  MOVWF  x02
4E12:  MOVLW  CC
4E14:  MOVWF  x01
4E16:  MOVLW  4C
4E18:  MOVWF  x00
4E1A:  MOVLW  7E
4E1C:  MOVLB  5
4E1E:  MOVWF  xFF
4E20:  MOVLB  0
4E22:  CALL   18A6
4E26:  MOVFF  5D5,5F9
4E2A:  MOVFF  5D4,5F8
4E2E:  MOVFF  5D3,5F7
4E32:  MOVFF  5D2,5F6
4E36:  MOVFF  03,5FD
4E3A:  MOVFF  02,5FC
4E3E:  MOVFF  01,5FB
4E42:  MOVFF  00,5FA
4E46:  CALL   2676
4E4A:  BNC   4E50
....................          { 
....................             flag_ventilador=0; 
4E4C:  MOVLB  5
4E4E:  CLRF   x69
....................          } 
....................           
....................          if(Temperatura<Setpoint-1.2) 
4E50:  MOVLB  5
4E52:  CLRF   xFD
4E54:  MOVFF  570,5FC
4E58:  MOVLB  0
4E5A:  CALL   169C
4E5E:  BSF    FD8.1
4E60:  MOVFF  03,5FE
4E64:  MOVFF  02,5FD
4E68:  MOVFF  01,5FC
4E6C:  MOVFF  00,5FB
4E70:  MOVLW  9A
4E72:  MOVLB  6
4E74:  MOVWF  x02
4E76:  MOVLW  99
4E78:  MOVWF  x01
4E7A:  MOVLW  19
4E7C:  MOVWF  x00
4E7E:  MOVLW  7F
4E80:  MOVLB  5
4E82:  MOVWF  xFF
4E84:  MOVLB  0
4E86:  CALL   18A6
4E8A:  MOVFF  5D5,5F9
4E8E:  MOVFF  5D4,5F8
4E92:  MOVFF  5D3,5F7
4E96:  MOVFF  5D2,5F6
4E9A:  MOVFF  03,5FD
4E9E:  MOVFF  02,5FC
4EA2:  MOVFF  01,5FB
4EA6:  MOVFF  00,5FA
4EAA:  CALL   2676
4EAE:  BNC   4EB4
....................          { 
....................             flag_setpoint=0; 
4EB0:  MOVLB  5
4EB2:  BCF    x66.4
....................          } 
....................          if(Temperatura>=Setpoint-5.0) 
4EB4:  MOVLB  5
4EB6:  CLRF   xFD
4EB8:  MOVFF  570,5FC
4EBC:  MOVLB  0
4EBE:  CALL   169C
4EC2:  BSF    FD8.1
4EC4:  MOVFF  03,5FE
4EC8:  MOVFF  02,5FD
4ECC:  MOVFF  01,5FC
4ED0:  MOVFF  00,5FB
4ED4:  MOVLB  6
4ED6:  CLRF   x02
4ED8:  CLRF   x01
4EDA:  MOVLW  20
4EDC:  MOVWF  x00
4EDE:  MOVLW  81
4EE0:  MOVLB  5
4EE2:  MOVWF  xFF
4EE4:  MOVLB  0
4EE6:  CALL   18A6
4EEA:  MOVFF  03,5F9
4EEE:  MOVFF  02,5F8
4EF2:  MOVFF  01,5F7
4EF6:  MOVFF  00,5F6
4EFA:  MOVFF  5D5,5FD
4EFE:  MOVFF  5D4,5FC
4F02:  MOVFF  5D3,5FB
4F06:  MOVFF  5D2,5FA
4F0A:  CALL   2676
4F0E:  BC    4F12
4F10:  BNZ   4F84
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
4F12:  MOVLB  6
4F14:  CLRF   x08
4F16:  MOVLW  37
4F18:  MOVWF  x09
4F1A:  MOVLW  7F
4F1C:  MOVWF  x0A
4F1E:  MOVLW  3F
4F20:  MOVWF  x0B
4F22:  MOVLW  01
4F24:  MOVWF  x0C
4F26:  CLRF   x0D
4F28:  MOVLB  0
4F2A:  CALL   12D2
....................             strcpy(Menus.Letra,"Status:Controlando"); 
4F2E:  MOVLW  05
4F30:  MOVWF  FEA
4F32:  MOVLW  D6
4F34:  MOVWF  FE9
4F36:  MOVFF  FF2,5F6
4F3A:  BCF    FF2.7
4F3C:  MOVLW  00
4F3E:  CALL   098A
4F42:  TBLRD*-
4F44:  TBLRD*+
4F46:  MOVF   FF5,W
4F48:  MOVWF  FEE
4F4A:  IORLW  00
4F4C:  BNZ   4F44
4F4E:  MOVLB  5
4F50:  BTFSC  xF6.7
4F52:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
4F54:  MOVLW  05
4F56:  MOVWF  xF7
4F58:  MOVLW  D6
4F5A:  MOVWF  xF6
4F5C:  CLRF   xF8
4F5E:  MOVLW  37
4F60:  MOVWF  xF9
4F62:  MOVLW  02
4F64:  MOVWF  xFA
4F66:  MOVLW  01
4F68:  MOVWF  xFB
4F6A:  MOVLB  0
4F6C:  CALL   1394
....................             tiempo_esterilizacion=1; 
4F70:  MOVLW  01
4F72:  MOVLB  5
4F74:  MOVWF  x72
....................             Controla(); 
4F76:  MOVLB  0
4F78:  CALL   279A
....................             flag_tiempocalentamiento=0; 
4F7C:  MOVLB  5
4F7E:  BCF    x66.2
....................          } 
....................          else 
4F80:  BRA    4FF2
4F82:  MOVLB  0
....................          { 
....................             flag_tiempocalentamiento=1; 
4F84:  MOVLB  5
4F86:  BSF    x66.2
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
4F88:  MOVLB  6
4F8A:  CLRF   x08
4F8C:  MOVLW  37
4F8E:  MOVWF  x09
4F90:  MOVLW  7F
4F92:  MOVWF  x0A
4F94:  MOVLW  3F
4F96:  MOVWF  x0B
4F98:  MOVLW  01
4F9A:  MOVWF  x0C
4F9C:  CLRF   x0D
4F9E:  MOVLB  0
4FA0:  CALL   12D2
....................             strcpy(Menus.Letra,"Status:Calentando"); 
4FA4:  MOVLW  05
4FA6:  MOVWF  FEA
4FA8:  MOVLW  D6
4FAA:  MOVWF  FE9
4FAC:  MOVFF  FF2,5F6
4FB0:  BCF    FF2.7
4FB2:  MOVLW  00
4FB4:  CALL   09B8
4FB8:  TBLRD*-
4FBA:  TBLRD*+
4FBC:  MOVF   FF5,W
4FBE:  MOVWF  FEE
4FC0:  IORLW  00
4FC2:  BNZ   4FBA
4FC4:  MOVLB  5
4FC6:  BTFSC  xF6.7
4FC8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
4FCA:  MOVLW  05
4FCC:  MOVWF  xF7
4FCE:  MOVLW  D6
4FD0:  MOVWF  xF6
4FD2:  CLRF   xF8
4FD4:  MOVLW  37
4FD6:  MOVWF  xF9
4FD8:  MOVLW  02
4FDA:  MOVWF  xFA
4FDC:  MOVLW  01
4FDE:  MOVWF  xFB
4FE0:  MOVLB  0
4FE2:  CALL   1394
....................             tiempo_esterilizacion=0; 
4FE6:  MOVLB  5
4FE8:  CLRF   x72
....................             Controla(); 
4FEA:  MOVLB  0
4FEC:  CALL   279A
4FF0:  MOVLB  5
....................          } 
....................       } 
....................        
....................       if(Pausa==1 && Puerta<770 && !TERM) 
4FF2:  DECFSZ x6D,W
4FF4:  BRA    5068
4FF6:  MOVF   x81,W
4FF8:  SUBLW  03
4FFA:  BNC   5068
4FFC:  BNZ   5004
4FFE:  MOVF   x80,W
5000:  SUBLW  01
5002:  BNC   5068
5004:  BSF    F92.4
5006:  BTFSC  F80.4
5008:  BRA    5068
....................       { 
....................          flag_tiempocalentamiento=0; 
500A:  BCF    x66.2
....................          strcpy(Menus.Letra,"Status:Pausado"); 
500C:  MOVLW  05
500E:  MOVWF  FEA
5010:  MOVLW  D6
5012:  MOVWF  FE9
5014:  MOVFF  FF2,5F6
5018:  BCF    FF2.7
501A:  MOVLW  00
501C:  MOVLB  0
501E:  CALL   09E4
5022:  TBLRD*-
5024:  TBLRD*+
5026:  MOVF   FF5,W
5028:  MOVWF  FEE
502A:  IORLW  00
502C:  BNZ   5024
502E:  MOVLB  5
5030:  BTFSC  xF6.7
5032:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
5034:  MOVLW  05
5036:  MOVWF  xF7
5038:  MOVLW  D6
503A:  MOVWF  xF6
503C:  CLRF   xF8
503E:  MOVLW  37
5040:  MOVWF  xF9
5042:  MOVLW  02
5044:  MOVWF  xFA
5046:  MOVLW  01
5048:  MOVWF  xFB
504A:  MOVLB  0
504C:  CALL   1394
....................          tiempo_esterilizacion=0; 
5050:  MOVLB  5
5052:  CLRF   x72
....................          Resistencia_off; 
5054:  BCF    F8B.0
5056:  BCF    F94.0
....................          Resistencia2_off; 
5058:  BCF    F8B.2
505A:  BCF    F94.2
....................          Ventilador_off; 
505C:  BCF    F8B.1
505E:  BCF    F94.1
....................          Tpulso=0.0; 
5060:  CLRF   xB1
5062:  CLRF   xB0
5064:  CLRF   xAF
5066:  CLRF   xAE
....................       } 
....................        
....................       if(Puerta>770) 
5068:  MOVF   x81,W
506A:  SUBLW  02
506C:  BC    5102
506E:  XORLW  FF
5070:  BNZ   5078
5072:  MOVF   x80,W
5074:  SUBLW  02
5076:  BC    5102
....................       { 
....................          flag_tiempocalentamiento=0; 
5078:  BCF    x66.2
....................          if(flag_clear2==0) 
507A:  BTFSC  x65.7
507C:  BRA    50BA
....................          { 
....................             Pausa_ant=Pausa; 
507E:  MOVFF  56D,56E
....................             Pausa=0; 
5082:  CLRF   x6D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
5084:  MOVLB  6
5086:  CLRF   x08
5088:  MOVLW  37
508A:  MOVWF  x09
508C:  MOVLW  7F
508E:  MOVWF  x0A
5090:  MOVLW  3F
5092:  MOVWF  x0B
5094:  MOVLW  01
5096:  MOVWF  x0C
5098:  CLRF   x0D
509A:  MOVLB  0
509C:  CALL   12D2
....................             tiempo_esterilizacion=0; 
50A0:  MOVLB  5
50A2:  CLRF   x72
....................             Resistencia_off; 
50A4:  BCF    F8B.0
50A6:  BCF    F94.0
....................             Resistencia2_off; 
50A8:  BCF    F8B.2
50AA:  BCF    F94.2
....................             Ventilador_off; 
50AC:  BCF    F8B.1
50AE:  BCF    F94.1
....................             Tpulso=0.0; 
50B0:  CLRF   xB1
50B2:  CLRF   xB0
50B4:  CLRF   xAF
50B6:  CLRF   xAE
....................             flag_clear2=1; 
50B8:  BSF    x65.7
....................          } 
....................          strcpy(Menus.Letra,"Status:Puerta Abierta"); 
50BA:  MOVLW  05
50BC:  MOVWF  FEA
50BE:  MOVLW  D6
50C0:  MOVWF  FE9
50C2:  MOVFF  FF2,5F6
50C6:  BCF    FF2.7
50C8:  MOVLW  00
50CA:  MOVLB  0
50CC:  CALL   0A0E
50D0:  TBLRD*-
50D2:  TBLRD*+
50D4:  MOVF   FF5,W
50D6:  MOVWF  FEE
50D8:  IORLW  00
50DA:  BNZ   50D2
50DC:  MOVLB  5
50DE:  BTFSC  xF6.7
50E0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
50E2:  MOVLW  05
50E4:  MOVWF  xF7
50E6:  MOVLW  D6
50E8:  MOVWF  xF6
50EA:  CLRF   xF8
50EC:  MOVLW  37
50EE:  MOVWF  xF9
50F0:  MOVLW  02
50F2:  MOVWF  xFA
50F4:  MOVLW  01
50F6:  MOVWF  xFB
50F8:  MOVLB  0
50FA:  CALL   1394
....................       } 
....................       else 
50FE:  BRA    512C
5100:  MOVLB  5
....................       { 
....................          if(flag_clear2==1) 
5102:  BTFSS  x65.7
5104:  BRA    512A
....................          { 
....................             Pausa=Pausa_ant; 
5106:  MOVFF  56E,56D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
510A:  MOVLB  6
510C:  CLRF   x08
510E:  MOVLW  37
5110:  MOVWF  x09
5112:  MOVLW  7F
5114:  MOVWF  x0A
5116:  MOVLW  3F
5118:  MOVWF  x0B
511A:  MOVLW  01
511C:  MOVWF  x0C
511E:  CLRF   x0D
5120:  MOVLB  0
5122:  CALL   12D2
....................             flag_clear2=0; 
5126:  MOVLB  5
5128:  BCF    x65.7
512A:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(TERM) 
512C:  BSF    F92.4
512E:  BTFSS  F80.4
5130:  BRA    51BC
....................       { 
....................          flag_tiempocalentamiento=0; 
5132:  MOVLB  5
5134:  BCF    x66.2
....................          if(flag_clear3==0) 
5136:  BTFSC  x66.0
5138:  BRA    5176
....................          { 
....................             Pausa_ant=Pausa; 
513A:  MOVFF  56D,56E
....................             Pausa=0; 
513E:  CLRF   x6D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
5140:  MOVLB  6
5142:  CLRF   x08
5144:  MOVLW  37
5146:  MOVWF  x09
5148:  MOVLW  7F
514A:  MOVWF  x0A
514C:  MOVLW  3F
514E:  MOVWF  x0B
5150:  MOVLW  01
5152:  MOVWF  x0C
5154:  CLRF   x0D
5156:  MOVLB  0
5158:  CALL   12D2
....................             tiempo_esterilizacion=0; 
515C:  MOVLB  5
515E:  CLRF   x72
....................             Resistencia_off; 
5160:  BCF    F8B.0
5162:  BCF    F94.0
....................             Resistencia2_off; 
5164:  BCF    F8B.2
5166:  BCF    F94.2
....................             Ventilador_off; 
5168:  BCF    F8B.1
516A:  BCF    F94.1
....................             Tpulso=0.0; 
516C:  CLRF   xB1
516E:  CLRF   xB0
5170:  CLRF   xAF
5172:  CLRF   xAE
....................             flag_clear3=1; 
5174:  BSF    x66.0
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 01"); 
5176:  MOVLW  05
5178:  MOVWF  FEA
517A:  MOVLW  D6
517C:  MOVWF  FE9
517E:  MOVFF  FF2,5F6
5182:  BCF    FF2.7
5184:  MOVLW  00
5186:  MOVLB  0
5188:  CALL   0A3E
518C:  TBLRD*-
518E:  TBLRD*+
5190:  MOVF   FF5,W
5192:  MOVWF  FEE
5194:  IORLW  00
5196:  BNZ   518E
5198:  MOVLB  5
519A:  BTFSC  xF6.7
519C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
519E:  MOVLW  05
51A0:  MOVWF  xF7
51A2:  MOVLW  D6
51A4:  MOVWF  xF6
51A6:  CLRF   xF8
51A8:  MOVLW  37
51AA:  MOVWF  xF9
51AC:  MOVLW  02
51AE:  MOVWF  xFA
51B0:  MOVLW  01
51B2:  MOVWF  xFB
51B4:  MOVLB  0
51B6:  CALL   1394
....................       } 
....................       else 
51BA:  BRA    51E8
....................       { 
....................          if(flag_clear3==1) 
51BC:  MOVLB  5
51BE:  BTFSS  x66.0
51C0:  BRA    51E6
....................          { 
....................             Pausa=Pausa_ant; 
51C2:  MOVFF  56E,56D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
51C6:  MOVLB  6
51C8:  CLRF   x08
51CA:  MOVLW  37
51CC:  MOVWF  x09
51CE:  MOVLW  7F
51D0:  MOVWF  x0A
51D2:  MOVLW  3F
51D4:  MOVWF  x0B
51D6:  MOVLW  01
51D8:  MOVWF  x0C
51DA:  CLRF   x0D
51DC:  MOVLB  0
51DE:  CALL   12D2
....................             flag_clear3=0; 
51E2:  MOVLB  5
51E4:  BCF    x66.0
51E6:  MOVLB  0
....................          } 
....................       }   
....................        
....................       if(UP)//Si oprime hacia arriba 
51E8:  BSF    F92.5
51EA:  BTFSS  F80.5
51EC:  BRA    5228
....................       { 
....................          if(Pausa!=2) 
51EE:  MOVLB  5
51F0:  MOVF   x6D,W
51F2:  SUBLW  02
51F4:  BZ    522A
....................          { 
....................             delay_ms(500);Pausa=0; 
51F6:  MOVLW  02
51F8:  MOVWF  xF6
51FA:  MOVLW  FA
51FC:  MOVWF  xFC
51FE:  MOVLB  0
5200:  CALL   0CF8
5204:  MOVLB  5
5206:  DECFSZ xF6,F
5208:  BRA    51FA
520A:  CLRF   x6D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
520C:  MOVLB  6
520E:  CLRF   x08
5210:  MOVLW  37
5212:  MOVWF  x09
5214:  MOVLW  7F
5216:  MOVWF  x0A
5218:  MOVLW  3F
521A:  MOVWF  x0B
521C:  MOVLW  01
521E:  MOVWF  x0C
5220:  CLRF   x0D
5222:  MOVLB  0
5224:  CALL   12D2
5228:  MOVLB  5
....................          } 
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
522A:  BSF    F96.0
522C:  BTFSS  F84.0
522E:  BRA    526C
....................       {   
....................          if(Pausa!=2) 
5230:  MOVF   x6D,W
5232:  SUBLW  02
5234:  BZ    526C
....................          { 
....................             delay_ms(500);Pausa=1; 
5236:  MOVLW  02
5238:  MOVWF  xF6
523A:  MOVLW  FA
523C:  MOVWF  xFC
523E:  MOVLB  0
5240:  CALL   0CF8
5244:  MOVLB  5
5246:  DECFSZ xF6,F
5248:  BRA    523A
524A:  MOVLW  01
524C:  MOVWF  x6D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
524E:  MOVLB  6
5250:  CLRF   x08
5252:  MOVLW  37
5254:  MOVWF  x09
5256:  MOVLW  7F
5258:  MOVWF  x0A
525A:  MOVLW  3F
525C:  MOVWF  x0B
525E:  MOVLW  01
5260:  MOVWF  x0C
5262:  CLRF   x0D
5264:  MOVLB  0
5266:  CALL   12D2
526A:  MOVLB  5
....................          } 
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
526C:  BSF    F96.1
526E:  BTFSS  F84.1
5270:  BRA    5280
....................       {   
....................          glcd_init(ON);flag_display=!flag_display; 
5272:  MOVLW  01
5274:  MOVWF  xF6
5276:  MOVLB  0
5278:  CALL   0E74
527C:  MOVLB  5
527E:  BTG    x66.3
....................       }  
....................          
....................       if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
5280:  BTFSS  x65.4
5282:  BRA    5744
....................       {                  
....................           
....................          Lectura=0; 
5284:  BCF    x65.4
....................          Potencia=(100.0/Tciclo)*Tpulso; 
5286:  CLRF   xFE
5288:  CLRF   xFD
528A:  MOVLW  48
528C:  MOVWF  xFC
528E:  MOVLW  85
5290:  MOVWF  xFB
5292:  MOVFF  5AD,602
5296:  MOVFF  5AC,601
529A:  MOVFF  5AB,600
529E:  MOVFF  5AA,5FF
52A2:  MOVLB  0
52A4:  CALL   1728
52A8:  MOVFF  00,5F6
52AC:  MOVFF  01,5F7
52B0:  MOVFF  02,5F8
52B4:  MOVFF  03,5F9
52B8:  MOVFF  03,616
52BC:  MOVFF  02,615
52C0:  MOVFF  01,614
52C4:  MOVFF  00,613
52C8:  MOVFF  5B1,61A
52CC:  MOVFF  5B0,619
52D0:  MOVFF  5AF,618
52D4:  MOVFF  5AE,617
52D8:  CALL   1E2E
52DC:  MOVFF  03,585
52E0:  MOVFF  02,584
52E4:  MOVFF  01,583
52E8:  MOVFF  00,582
....................          Temperatura=Leer_Sensor(MediaMovil); 
52EC:  MOVFF  562,5F6
52F0:  CALL   1B50
52F4:  MOVFF  03,5D5
52F8:  MOVFF  02,5D4
52FC:  MOVFF  01,5D3
5300:  MOVFF  00,5D2
....................          Puerta=sensores(3); 
5304:  MOVLW  03
5306:  MOVLB  5
5308:  MOVWF  xF7
530A:  MOVLB  0
530C:  CALL   16D2
5310:  MOVFF  03,5F9
5314:  MOVFF  02,5F8
5318:  MOVFF  01,5F7
531C:  MOVFF  00,5F6
5320:  CALL   275E
5324:  MOVFF  02,581
5328:  MOVFF  01,580
....................          displayT(Temperatura,15,29,2); 
532C:  MOVFF  5D5,5F9
5330:  MOVFF  5D4,5F8
5334:  MOVFF  5D3,5F7
5338:  MOVFF  5D2,5F6
533C:  MOVLW  0F
533E:  MOVLB  5
5340:  MOVWF  xFA
5342:  MOVLW  1D
5344:  MOVWF  xFB
5346:  MOVLW  02
5348:  MOVWF  xFC
534A:  MOVLB  0
534C:  GOTO   2D34
....................          glcd_circle(74,30,2,NO,ON); 
5350:  MOVLW  4A
5352:  MOVLB  5
5354:  MOVWF  xF6
5356:  MOVLW  1E
5358:  MOVWF  xF7
535A:  MOVLW  02
535C:  MOVWF  xF8
535E:  CLRF   xF9
5360:  MOVLW  01
5362:  MOVWF  xFA
5364:  MOVLB  0
5366:  CALL   1F74
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,75,30,2,2); 
536A:  MOVLW  05
536C:  MOVWF  FEA
536E:  MOVLW  D6
5370:  MOVWF  FE9
5372:  MOVFF  FF2,5F6
5376:  BCF    FF2.7
5378:  MOVLW  00
537A:  CALL   0908
537E:  TBLRD*-
5380:  TBLRD*+
5382:  MOVF   FF5,W
5384:  MOVWF  FEE
5386:  IORLW  00
5388:  BNZ   5380
538A:  MOVLB  5
538C:  BTFSC  xF6.7
538E:  BSF    FF2.7
5390:  MOVLW  05
5392:  MOVWF  xF7
5394:  MOVLW  D6
5396:  MOVWF  xF6
5398:  MOVLW  4B
539A:  MOVWF  xF8
539C:  MOVLW  1E
539E:  MOVWF  xF9
53A0:  MOVLW  02
53A2:  MOVWF  xFA
53A4:  MOVWF  xFB
53A6:  MOVLB  0
53A8:  CALL   1394
....................           
....................          displayTiempo(Setpoint,30,45,3,1); 
53AC:  MOVFF  570,5F7
53B0:  MOVLW  1E
53B2:  MOVLB  5
53B4:  MOVWF  xF8
53B6:  MOVLW  2D
53B8:  MOVWF  xF9
53BA:  MOVLW  03
53BC:  MOVWF  xFA
53BE:  MOVLW  01
53C0:  MOVWF  xFB
53C2:  MOVLB  0
53C4:  CALL   23C4
....................          glcd_circle(50,47,1,NO,ON); 
53C8:  MOVLW  32
53CA:  MOVLB  5
53CC:  MOVWF  xF6
53CE:  MOVLW  2F
53D0:  MOVWF  xF7
53D2:  MOVLW  01
53D4:  MOVWF  xF8
53D6:  CLRF   xF9
53D8:  MOVWF  xFA
53DA:  MOVLB  0
53DC:  CALL   1F74
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,53,45,2,1); 
53E0:  MOVLW  05
53E2:  MOVWF  FEA
53E4:  MOVLW  D6
53E6:  MOVWF  FE9
53E8:  MOVFF  FF2,5F6
53EC:  BCF    FF2.7
53EE:  MOVLW  00
53F0:  CALL   0908
53F4:  TBLRD*-
53F6:  TBLRD*+
53F8:  MOVF   FF5,W
53FA:  MOVWF  FEE
53FC:  IORLW  00
53FE:  BNZ   53F6
5400:  MOVLB  5
5402:  BTFSC  xF6.7
5404:  BSF    FF2.7
5406:  MOVLW  05
5408:  MOVWF  xF7
540A:  MOVLW  D6
540C:  MOVWF  xF6
540E:  MOVLW  35
5410:  MOVWF  xF8
5412:  MOVLW  2D
5414:  MOVWF  xF9
5416:  MOVLW  02
5418:  MOVWF  xFA
541A:  MOVLW  01
541C:  MOVWF  xFB
541E:  MOVLB  0
5420:  CALL   1394
....................          strcpy(Menus.Letra,"Temp:");displayMenu(Menus.Letra,0,45,2,1);  
5424:  MOVLW  05
5426:  MOVWF  FEA
5428:  MOVLW  D6
542A:  MOVWF  FE9
542C:  MOVFF  FF2,5F6
5430:  BCF    FF2.7
5432:  MOVLW  00
5434:  CALL   0A6A
5438:  TBLRD*-
543A:  TBLRD*+
543C:  MOVF   FF5,W
543E:  MOVWF  FEE
5440:  IORLW  00
5442:  BNZ   543A
5444:  MOVLB  5
5446:  BTFSC  xF6.7
5448:  BSF    FF2.7
544A:  MOVLW  05
544C:  MOVWF  xF7
544E:  MOVLW  D6
5450:  MOVWF  xF6
5452:  CLRF   xF8
5454:  MOVLW  2D
5456:  MOVWF  xF9
5458:  MOVLW  02
545A:  MOVWF  xFA
545C:  MOVLW  01
545E:  MOVWF  xFB
5460:  MOVLB  0
5462:  CALL   1394
....................           
....................          displayTiempo(Potencia,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
5466:  MOVFF  585,5F9
546A:  MOVFF  584,5F8
546E:  MOVFF  583,5F7
5472:  MOVFF  582,5F6
5476:  CALL   275E
547A:  MOVFF  01,5F6
547E:  MOVFF  01,5F7
5482:  MOVLW  61
5484:  MOVLB  5
5486:  MOVWF  xF8
5488:  MOVLW  2A
548A:  MOVWF  xF9
548C:  MOVLW  03
548E:  MOVWF  xFA
5490:  MOVLW  01
5492:  MOVWF  xFB
5494:  MOVLB  0
5496:  CALL   23C4
549A:  MOVLW  05
549C:  MOVWF  FEA
549E:  MOVLW  D6
54A0:  MOVWF  FE9
54A2:  MOVFF  FF2,5F6
54A6:  BCF    FF2.7
54A8:  MOVLW  00
54AA:  CALL   0A8A
54AE:  TBLRD*-
54B0:  TBLRD*+
54B2:  MOVF   FF5,W
54B4:  MOVWF  FEE
54B6:  IORLW  00
54B8:  BNZ   54B0
54BA:  MOVLB  5
54BC:  BTFSC  xF6.7
54BE:  BSF    FF2.7
54C0:  MOVLW  05
54C2:  MOVWF  xF7
54C4:  MOVLW  D6
54C6:  MOVWF  xF6
54C8:  MOVLW  73
54CA:  MOVWF  xF8
54CC:  MOVLW  2A
54CE:  MOVWF  xF9
54D0:  MOVLW  02
54D2:  MOVWF  xFA
54D4:  MOVLW  01
54D6:  MOVWF  xFB
54D8:  MOVLB  0
54DA:  CALL   1394
....................          //displayTiempo(Tpulsomin*10,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
....................           
....................          if(flag_display==1) 
54DE:  MOVLB  5
54E0:  BTFSS  x66.3
54E2:  BRA    551C
....................             displayTiempo(Ganancia,97,13,3,1); 
54E4:  MOVFF  5C5,5F9
54E8:  MOVFF  5C4,5F8
54EC:  MOVFF  5C3,5F7
54F0:  MOVFF  5C2,5F6
54F4:  MOVLB  0
54F6:  CALL   275E
54FA:  MOVFF  01,5F6
54FE:  MOVFF  01,5F7
5502:  MOVLW  61
5504:  MOVLB  5
5506:  MOVWF  xF8
5508:  MOVLW  0D
550A:  MOVWF  xF9
550C:  MOVLW  03
550E:  MOVWF  xFA
5510:  MOVLW  01
5512:  MOVWF  xFB
5514:  MOVLB  0
5516:  CALL   23C4
....................             //displayTiempo(Gananciamax,97,13,3,1); 
....................          else 
551A:  BRA    553A
....................             glcd_rect(97, 13, 115, 18, YES, OFF); 
551C:  MOVLW  61
551E:  MOVLB  6
5520:  MOVWF  x08
5522:  MOVLW  0D
5524:  MOVWF  x09
5526:  MOVLW  73
5528:  MOVWF  x0A
552A:  MOVLW  12
552C:  MOVWF  x0B
552E:  MOVLW  01
5530:  MOVWF  x0C
5532:  CLRF   x0D
5534:  MOVLB  0
5536:  CALL   12D2
....................           
....................          // Muestra Valor de esterilizacion Programado. 
....................          displayTiempo(Testerilizacion[3],20,2,0,2);displayTiempo(Testerilizacion[2],33,2,0,2); 
553A:  MOVFF  591,5F7
553E:  MOVLW  14
5540:  MOVLB  5
5542:  MOVWF  xF8
5544:  MOVLW  02
5546:  MOVWF  xF9
5548:  CLRF   xFA
554A:  MOVWF  xFB
554C:  MOVLB  0
554E:  CALL   23C4
5552:  MOVFF  590,5F7
5556:  MOVLW  21
5558:  MOVLB  5
555A:  MOVWF  xF8
555C:  MOVLW  02
555E:  MOVWF  xF9
5560:  CLRF   xFA
5562:  MOVWF  xFB
5564:  MOVLB  0
5566:  CALL   23C4
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,46,2,2,2);  
556A:  MOVLW  05
556C:  MOVWF  FEA
556E:  MOVLW  D6
5570:  MOVWF  FE9
5572:  MOVFF  FF2,5F6
5576:  BCF    FF2.7
5578:  MOVLW  00
557A:  CALL   0948
557E:  TBLRD*-
5580:  TBLRD*+
5582:  MOVF   FF5,W
5584:  MOVWF  FEE
5586:  IORLW  00
5588:  BNZ   5580
558A:  MOVLB  5
558C:  BTFSC  xF6.7
558E:  BSF    FF2.7
5590:  MOVLW  05
5592:  MOVWF  xF7
5594:  MOVLW  D6
5596:  MOVWF  xF6
5598:  MOVLW  2E
559A:  MOVWF  xF8
559C:  MOVLW  02
559E:  MOVWF  xF9
55A0:  MOVWF  xFA
55A2:  MOVWF  xFB
55A4:  MOVLB  0
55A6:  CALL   1394
....................          displayTiempo(Testerilizacion[1],55,2,0,2);displayTiempo(Testerilizacion[0],68,2,0,2); 
55AA:  MOVFF  58F,5F7
55AE:  MOVLW  37
55B0:  MOVLB  5
55B2:  MOVWF  xF8
55B4:  MOVLW  02
55B6:  MOVWF  xF9
55B8:  CLRF   xFA
55BA:  MOVWF  xFB
55BC:  MOVLB  0
55BE:  CALL   23C4
55C2:  MOVFF  58E,5F7
55C6:  MOVLW  44
55C8:  MOVLB  5
55CA:  MOVWF  xF8
55CC:  MOVLW  02
55CE:  MOVWF  xF9
55D0:  CLRF   xFA
55D2:  MOVWF  xFB
55D4:  MOVLB  0
55D6:  CALL   23C4
....................           
....................          // Muestra Valor de esterilizacion actual. 
....................          strcpy(Menus.Letra,"Time:");displayMenu(Menus.Letra,0,18,2,1);  
55DA:  MOVLW  05
55DC:  MOVWF  FEA
55DE:  MOVLW  D6
55E0:  MOVWF  FE9
55E2:  MOVFF  FF2,5F6
55E6:  BCF    FF2.7
55E8:  MOVLW  00
55EA:  CALL   0AA6
55EE:  TBLRD*-
55F0:  TBLRD*+
55F2:  MOVF   FF5,W
55F4:  MOVWF  FEE
55F6:  IORLW  00
55F8:  BNZ   55F0
55FA:  MOVLB  5
55FC:  BTFSC  xF6.7
55FE:  BSF    FF2.7
5600:  MOVLW  05
5602:  MOVWF  xF7
5604:  MOVLW  D6
5606:  MOVWF  xF6
5608:  CLRF   xF8
560A:  MOVLW  12
560C:  MOVWF  xF9
560E:  MOVLW  02
5610:  MOVWF  xFA
5612:  MOVLW  01
5614:  MOVWF  xFB
5616:  MOVLB  0
5618:  CALL   1394
....................          displayTiempo(Testerilizacionp[3],30,18,0,1);displayTiempo(Testerilizacionp[2],36,18,0,1); 
561C:  MOVFF  595,5F7
5620:  MOVLW  1E
5622:  MOVLB  5
5624:  MOVWF  xF8
5626:  MOVLW  12
5628:  MOVWF  xF9
562A:  CLRF   xFA
562C:  MOVLW  01
562E:  MOVWF  xFB
5630:  MOVLB  0
5632:  CALL   23C4
5636:  MOVFF  594,5F7
563A:  MOVLW  24
563C:  MOVLB  5
563E:  MOVWF  xF8
5640:  MOVLW  12
5642:  MOVWF  xF9
5644:  CLRF   xFA
5646:  MOVLW  01
5648:  MOVWF  xFB
564A:  MOVLB  0
564C:  CALL   23C4
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,42,18,2,1);  
5650:  MOVLW  05
5652:  MOVWF  FEA
5654:  MOVLW  D6
5656:  MOVWF  FE9
5658:  MOVFF  FF2,5F6
565C:  BCF    FF2.7
565E:  MOVLW  00
5660:  CALL   0948
5664:  TBLRD*-
5666:  TBLRD*+
5668:  MOVF   FF5,W
566A:  MOVWF  FEE
566C:  IORLW  00
566E:  BNZ   5666
5670:  MOVLB  5
5672:  BTFSC  xF6.7
5674:  BSF    FF2.7
5676:  MOVLW  05
5678:  MOVWF  xF7
567A:  MOVLW  D6
567C:  MOVWF  xF6
567E:  MOVLW  2A
5680:  MOVWF  xF8
5682:  MOVLW  12
5684:  MOVWF  xF9
5686:  MOVLW  02
5688:  MOVWF  xFA
568A:  MOVLW  01
568C:  MOVWF  xFB
568E:  MOVLB  0
5690:  CALL   1394
....................          displayTiempo(Testerilizacionp[1],48,18,0,1);displayTiempo(Testerilizacionp[0],54,18,0,1); 
5694:  MOVFF  593,5F7
5698:  MOVLW  30
569A:  MOVLB  5
569C:  MOVWF  xF8
569E:  MOVLW  12
56A0:  MOVWF  xF9
56A2:  CLRF   xFA
56A4:  MOVLW  01
56A6:  MOVWF  xFB
56A8:  MOVLB  0
56AA:  CALL   23C4
56AE:  MOVFF  592,5F7
56B2:  MOVLW  36
56B4:  MOVLB  5
56B6:  MOVWF  xF8
56B8:  MOVLW  12
56BA:  MOVWF  xF9
56BC:  CLRF   xFA
56BE:  MOVLW  01
56C0:  MOVWF  xFB
56C2:  MOVLB  0
56C4:  CALL   23C4
....................          strcpy(Menus.Letra,"(H:M)");displayMenu(Menus.Letra,60,18,2,1);  
56C8:  MOVLW  05
56CA:  MOVWF  FEA
56CC:  MOVLW  D6
56CE:  MOVWF  FE9
56D0:  MOVFF  FF2,5F6
56D4:  BCF    FF2.7
56D6:  MOVLW  00
56D8:  CALL   0AC6
56DC:  TBLRD*-
56DE:  TBLRD*+
56E0:  MOVF   FF5,W
56E2:  MOVWF  FEE
56E4:  IORLW  00
56E6:  BNZ   56DE
56E8:  MOVLB  5
56EA:  BTFSC  xF6.7
56EC:  BSF    FF2.7
56EE:  MOVLW  05
56F0:  MOVWF  xF7
56F2:  MOVLW  D6
56F4:  MOVWF  xF6
56F6:  MOVLW  3C
56F8:  MOVWF  xF8
56FA:  MOVLW  12
56FC:  MOVWF  xF9
56FE:  MOVLW  02
5700:  MOVWF  xFA
5702:  MOVLW  01
5704:  MOVWF  xFB
5706:  MOVLB  0
5708:  CALL   1394
....................           
....................          glcd_rect(0, 0, 89, 27, NO, ON); 
570C:  MOVLB  6
570E:  CLRF   x08
5710:  CLRF   x09
5712:  MOVLW  59
5714:  MOVWF  x0A
5716:  MOVLW  1B
5718:  MOVWF  x0B
571A:  CLRF   x0C
571C:  MOVLW  01
571E:  MOVWF  x0D
5720:  MOVLB  0
5722:  CALL   12D2
....................          glcd_rect(0, 27, 89, 54, NO, ON); 
5726:  MOVLB  6
5728:  CLRF   x08
572A:  MOVLW  1B
572C:  MOVWF  x09
572E:  MOVLW  59
5730:  MOVWF  x0A
5732:  MOVLW  36
5734:  MOVWF  x0B
5736:  CLRF   x0C
5738:  MOVLW  01
573A:  MOVWF  x0D
573C:  MOVLB  0
573E:  CALL   12D2
5742:  MOVLB  5
....................       }  
....................        
....................       // Si cumplio el tiempo de esterilización, Muestre ciclo finalizado y detenga control de temperatura. 
....................       if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1) 
5744:  MOVF   x92,W
5746:  XORLW  80
5748:  MOVWF  00
574A:  MOVF   x8E,W
574C:  XORLW  80
574E:  SUBWF  00,W
5750:  BZ    5754
5752:  BC    57F8
5754:  MOVF   x93,W
5756:  XORLW  80
5758:  MOVWF  00
575A:  MOVF   x8F,W
575C:  XORLW  80
575E:  SUBWF  00,W
5760:  BZ    5764
5762:  BC    57F8
5764:  MOVF   x94,W
5766:  XORLW  80
5768:  MOVWF  00
576A:  MOVF   x90,W
576C:  XORLW  80
576E:  SUBWF  00,W
5770:  BZ    5774
5772:  BC    57F8
5774:  MOVF   x95,W
5776:  XORLW  80
5778:  MOVWF  00
577A:  MOVF   x91,W
577C:  XORLW  80
577E:  SUBWF  00,W
5780:  BZ    5784
5782:  BC    57F8
5784:  DECFSZ x72,W
5786:  BRA    57F8
....................       { 
....................          if(flag_clear==0) 
5788:  BTFSC  x65.6
578A:  BRA    57B2
....................          { 
....................             glcd_fillScreen(OFF); 
578C:  CLRF   xF7
578E:  MOVLB  0
5790:  CALL   0D62
....................             //glcd_rect(0, 55, 127, 63, YES, OFF); 
....................             tiempo_esterilizacion=0; 
5794:  MOVLB  5
5796:  CLRF   x72
....................             Pausa=2; 
5798:  MOVLW  02
579A:  MOVWF  x6D
....................             flag_clear=1; 
579C:  BSF    x65.6
....................             Resistencia_off; 
579E:  BCF    F8B.0
57A0:  BCF    F94.0
....................             Resistencia2_off; 
57A2:  BCF    F8B.2
57A4:  BCF    F94.2
....................             Ventilador_off; 
57A6:  BCF    F8B.1
57A8:  BCF    F94.1
....................             Tpulso=0.0; 
57AA:  CLRF   xB1
57AC:  CLRF   xB0
57AE:  CLRF   xAF
57B0:  CLRF   xAE
....................          } 
....................          strcpy(Menus.Letra,"Status:Finalizado"); 
57B2:  MOVLW  05
57B4:  MOVWF  FEA
57B6:  MOVLW  D6
57B8:  MOVWF  FE9
57BA:  MOVFF  FF2,5F6
57BE:  BCF    FF2.7
57C0:  MOVLW  00
57C2:  MOVLB  0
57C4:  CALL   0AE6
57C8:  TBLRD*-
57CA:  TBLRD*+
57CC:  MOVF   FF5,W
57CE:  MOVWF  FEE
57D0:  IORLW  00
57D2:  BNZ   57CA
57D4:  MOVLB  5
57D6:  BTFSC  xF6.7
57D8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
57DA:  MOVLW  05
57DC:  MOVWF  xF7
57DE:  MOVLW  D6
57E0:  MOVWF  xF6
57E2:  CLRF   xF8
57E4:  MOVLW  37
57E6:  MOVWF  xF9
57E8:  MOVLW  02
57EA:  MOVWF  xFA
57EC:  MOVLW  01
57EE:  MOVWF  xFB
57F0:  MOVLB  0
57F2:  CALL   1394
57F6:  MOVLB  5
....................       }  
....................        
....................       // Si ha pasado un tiempo x y no ha llegado al setpoint 
....................       if(tiempocalentamiento>7200 && tiempo_esterilizacion==0) 
57F8:  MOVF   x7D,W
57FA:  SUBLW  1B
57FC:  BC    5890
57FE:  XORLW  FF
5800:  BNZ   5808
5802:  MOVF   x7C,W
5804:  SUBLW  20
5806:  BC    5890
5808:  MOVF   x72,F
580A:  BNZ   5890
....................       { 
....................          if(flag_clear4==0) 
580C:  BTFSC  x66.1
580E:  BRA    584A
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
5810:  MOVLB  6
5812:  CLRF   x08
5814:  MOVLW  37
5816:  MOVWF  x09
5818:  MOVLW  7F
581A:  MOVWF  x0A
581C:  MOVLW  3F
581E:  MOVWF  x0B
5820:  MOVLW  01
5822:  MOVWF  x0C
5824:  CLRF   x0D
5826:  MOVLB  0
5828:  CALL   12D2
....................             tiempo_esterilizacion=0; 
582C:  MOVLB  5
582E:  CLRF   x72
....................             Pausa=2; 
5830:  MOVLW  02
5832:  MOVWF  x6D
....................             flag_clear4=1; 
5834:  BSF    x66.1
....................             Resistencia_off; 
5836:  BCF    F8B.0
5838:  BCF    F94.0
....................             Resistencia2_off; 
583A:  BCF    F8B.2
583C:  BCF    F94.2
....................             Ventilador_off; 
583E:  BCF    F8B.1
5840:  BCF    F94.1
....................             Tpulso=0.0; 
5842:  CLRF   xB1
5844:  CLRF   xB0
5846:  CLRF   xAF
5848:  CLRF   xAE
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 02"); 
584A:  MOVLW  05
584C:  MOVWF  FEA
584E:  MOVLW  D6
5850:  MOVWF  FE9
5852:  MOVFF  FF2,5F6
5856:  BCF    FF2.7
5858:  MOVLW  00
585A:  MOVLB  0
585C:  CALL   0B12
5860:  TBLRD*-
5862:  TBLRD*+
5864:  MOVF   FF5,W
5866:  MOVWF  FEE
5868:  IORLW  00
586A:  BNZ   5862
586C:  MOVLB  5
586E:  BTFSC  xF6.7
5870:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
5872:  MOVLW  05
5874:  MOVWF  xF7
5876:  MOVLW  D6
5878:  MOVWF  xF6
587A:  CLRF   xF8
587C:  MOVLW  37
587E:  MOVWF  xF9
5880:  MOVLW  02
5882:  MOVWF  xFA
5884:  MOVLW  01
5886:  MOVWF  xFB
5888:  MOVLB  0
588A:  CALL   1394
588E:  MOVLB  5
....................       } 
....................        
....................       if(tinicio>=60) 
5890:  MOVF   x7B,F
5892:  BNZ   589A
5894:  MOVF   x7A,W
5896:  SUBLW  3B
5898:  BC    58D6
....................       { 
....................          tinicio=0; 
589A:  CLRF   x7B
589C:  CLRF   x7A
....................          Testerilizacion[0]++; 
589E:  INCF   x8E,F
....................          if(Testerilizacion[0]>9) 
58A0:  BTFSC  x8E.7
58A2:  BRA    58AE
58A4:  MOVF   x8E,W
58A6:  SUBLW  09
58A8:  BC    58AE
....................          { 
....................             Testerilizacion[0]=0; 
58AA:  CLRF   x8E
....................             Testerilizacion[1]++; 
58AC:  INCF   x8F,F
....................          } 
....................          if(Testerilizacion[1]>5) 
58AE:  BTFSC  x8F.7
58B0:  BRA    58BC
58B2:  MOVF   x8F,W
58B4:  SUBLW  05
58B6:  BC    58BC
....................          { 
....................             Testerilizacion[1]=0; 
58B8:  CLRF   x8F
....................             Testerilizacion[2]++; 
58BA:  INCF   x90,F
....................          } 
....................          if(Testerilizacion[2]>9) 
58BC:  BTFSC  x90.7
58BE:  BRA    58CA
58C0:  MOVF   x90,W
58C2:  SUBLW  09
58C4:  BC    58CA
....................          { 
....................             Testerilizacion[2]=0; 
58C6:  CLRF   x90
....................             Testerilizacion[3]++; 
58C8:  INCF   x91,F
....................          } 
....................          if(Testerilizacion[3]>9) 
58CA:  BTFSC  x91.7
58CC:  BRA    58D6
58CE:  MOVF   x91,W
58D0:  SUBLW  09
58D2:  BC    58D6
....................          { 
....................             Testerilizacion[3]=0; 
58D4:  CLRF   x91
....................          } 
....................       } 
....................        
....................       if(LEFT)//Si oprime boton de Toma. 
58D6:  BSF    F96.2
58D8:  BTFSS  F84.2
58DA:  BRA    590C
....................       { 
....................          if(Pausa!=2) 
58DC:  MOVF   x6D,W
58DE:  SUBLW  02
58E0:  BZ    590C
....................          { 
....................             delay_ms(500);Menu=30;glcd_fillscreen(OFF);Opcion=1;visual=1;Pausa=1; 
58E2:  MOVLW  02
58E4:  MOVWF  xF6
58E6:  MOVLW  FA
58E8:  MOVWF  xFC
58EA:  MOVLB  0
58EC:  CALL   0CF8
58F0:  MOVLB  5
58F2:  DECFSZ xF6,F
58F4:  BRA    58E6
58F6:  MOVLW  1E
58F8:  MOVWF  x6A
58FA:  CLRF   xF7
58FC:  MOVLB  0
58FE:  CALL   0D62
5902:  MOVLW  01
5904:  MOVLB  5
5906:  MOVWF  x71
5908:  BSF    x65.3
590A:  MOVWF  x6D
....................          } 
....................       } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==30){ //Menu de Retroceso 
590C:  MOVF   x6A,W
590E:  SUBLW  1E
5910:  BTFSS  FD8.2
5912:  BRA    5B28
....................        
....................       strcpy(Menus.Letra,"Regresar"); 
5914:  MOVLW  05
5916:  MOVWF  FEA
5918:  MOVLW  D6
591A:  MOVWF  FE9
591C:  MOVFF  FF2,5F6
5920:  BCF    FF2.7
5922:  MOVLW  00
5924:  MOVLB  0
5926:  CALL   0B3E
592A:  TBLRD*-
592C:  TBLRD*+
592E:  MOVF   FF5,W
5930:  MOVWF  FEE
5932:  IORLW  00
5934:  BNZ   592C
5936:  MOVLB  5
5938:  BTFSC  xF6.7
593A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2); 
593C:  MOVLW  05
593E:  MOVWF  xF7
5940:  MOVLW  D6
5942:  MOVWF  xF6
5944:  CLRF   xF8
5946:  CLRF   xF9
5948:  MOVLW  01
594A:  MOVWF  xFA
594C:  MOVLW  02
594E:  MOVWF  xFB
5950:  MOVLB  0
5952:  CALL   1394
....................           
....................       if(Opcion==2) 
5956:  MOVLB  5
5958:  MOVF   x71,W
595A:  SUBLW  02
595C:  BNZ   59E8
....................       {strcpy(Menus.Letra,"SI"); 
595E:  MOVLW  05
5960:  MOVWF  FEA
5962:  MOVLW  D6
5964:  MOVWF  FE9
5966:  MOVFF  FF2,5F6
596A:  BCF    FF2.7
596C:  MOVLW  00
596E:  MOVLB  0
5970:  CALL   08CC
5974:  TBLRD*-
5976:  TBLRD*+
5978:  MOVF   FF5,W
597A:  MOVWF  FEE
597C:  IORLW  00
597E:  BNZ   5976
5980:  MOVLB  5
5982:  BTFSC  xF6.7
5984:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,25,1,2); 
5986:  MOVLW  05
5988:  MOVWF  xF7
598A:  MOVLW  D6
598C:  MOVWF  xF6
598E:  MOVLW  32
5990:  MOVWF  xF8
5992:  MOVLW  19
5994:  MOVWF  xF9
5996:  MOVLW  01
5998:  MOVWF  xFA
599A:  MOVLW  02
599C:  MOVWF  xFB
599E:  MOVLB  0
59A0:  CALL   1394
....................       strcpy(Menus.Letra,"NO"); 
59A4:  MOVLW  05
59A6:  MOVWF  FEA
59A8:  MOVLW  D6
59AA:  MOVWF  FE9
59AC:  MOVFF  FF2,5F6
59B0:  BCF    FF2.7
59B2:  MOVLW  00
59B4:  CALL   08EA
59B8:  TBLRD*-
59BA:  TBLRD*+
59BC:  MOVF   FF5,W
59BE:  MOVWF  FEE
59C0:  IORLW  00
59C2:  BNZ   59BA
59C4:  MOVLB  5
59C6:  BTFSC  xF6.7
59C8:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,45,0,2); 
59CA:  MOVLW  05
59CC:  MOVWF  xF7
59CE:  MOVLW  D6
59D0:  MOVWF  xF6
59D2:  MOVLW  32
59D4:  MOVWF  xF8
59D6:  MOVLW  2D
59D8:  MOVWF  xF9
59DA:  CLRF   xFA
59DC:  MOVLW  02
59DE:  MOVWF  xFB
59E0:  MOVLB  0
59E2:  CALL   1394
59E6:  MOVLB  5
....................       } 
....................       if(Opcion==1) 
59E8:  DECFSZ x71,W
59EA:  BRA    5A76
....................       {strcpy(Menus.Letra,"SI"); 
59EC:  MOVLW  05
59EE:  MOVWF  FEA
59F0:  MOVLW  D6
59F2:  MOVWF  FE9
59F4:  MOVFF  FF2,5F6
59F8:  BCF    FF2.7
59FA:  MOVLW  00
59FC:  MOVLB  0
59FE:  CALL   08CC
5A02:  TBLRD*-
5A04:  TBLRD*+
5A06:  MOVF   FF5,W
5A08:  MOVWF  FEE
5A0A:  IORLW  00
5A0C:  BNZ   5A04
5A0E:  MOVLB  5
5A10:  BTFSC  xF6.7
5A12:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,25,0,2); 
5A14:  MOVLW  05
5A16:  MOVWF  xF7
5A18:  MOVLW  D6
5A1A:  MOVWF  xF6
5A1C:  MOVLW  32
5A1E:  MOVWF  xF8
5A20:  MOVLW  19
5A22:  MOVWF  xF9
5A24:  CLRF   xFA
5A26:  MOVLW  02
5A28:  MOVWF  xFB
5A2A:  MOVLB  0
5A2C:  CALL   1394
....................       strcpy(Menus.Letra,"NO"); 
5A30:  MOVLW  05
5A32:  MOVWF  FEA
5A34:  MOVLW  D6
5A36:  MOVWF  FE9
5A38:  MOVFF  FF2,5F6
5A3C:  BCF    FF2.7
5A3E:  MOVLW  00
5A40:  CALL   08EA
5A44:  TBLRD*-
5A46:  TBLRD*+
5A48:  MOVF   FF5,W
5A4A:  MOVWF  FEE
5A4C:  IORLW  00
5A4E:  BNZ   5A46
5A50:  MOVLB  5
5A52:  BTFSC  xF6.7
5A54:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,45,1,2); 
5A56:  MOVLW  05
5A58:  MOVWF  xF7
5A5A:  MOVLW  D6
5A5C:  MOVWF  xF6
5A5E:  MOVLW  32
5A60:  MOVWF  xF8
5A62:  MOVLW  2D
5A64:  MOVWF  xF9
5A66:  MOVLW  01
5A68:  MOVWF  xFA
5A6A:  MOVLW  02
5A6C:  MOVWF  xFB
5A6E:  MOVLB  0
5A70:  CALL   1394
5A74:  MOVLB  5
....................       }   
....................          
....................       if(UP)//Si oprime hacia arriba 
5A76:  BSF    F92.5
5A78:  BTFSS  F80.5
5A7A:  BRA    5A86
....................       { 
....................          if(Opcion<2) 
5A7C:  MOVF   x71,W
5A7E:  SUBLW  01
5A80:  BNC   5A84
....................          { 
....................             Opcion++; 
5A82:  INCF   x71,F
....................          } 
....................          visual=1; 
5A84:  BSF    x65.3
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5A86:  BSF    F96.0
5A88:  BTFSS  F84.0
5A8A:  BRA    5A96
....................       {   
....................          if(Opcion>1) 
5A8C:  MOVF   x71,W
5A8E:  SUBLW  01
5A90:  BC    5A94
....................          { 
....................             Opcion--; 
5A92:  DECF   x71,F
....................          }   
....................          visual=1; 
5A94:  BSF    x65.3
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5A96:  BSF    F96.1
5A98:  BTFSS  F84.1
5A9A:  BRA    5AFA
....................       {   
....................          if(Opcion==2) 
5A9C:  MOVF   x71,W
5A9E:  SUBLW  02
5AA0:  BNZ   5AD2
....................          { 
....................             Menu=1;glcd_fillScreen(OFF);Testerilizacion[0]=0;Testerilizacion[1]=0;Testerilizacion[2]=0;Testerilizacion[3]=0; 
5AA2:  MOVLW  01
5AA4:  MOVWF  x6A
5AA6:  CLRF   xF7
5AA8:  MOVLB  0
5AAA:  CALL   0D62
5AAE:  MOVLB  5
5AB0:  CLRF   x8E
5AB2:  CLRF   x8F
5AB4:  CLRF   x90
5AB6:  CLRF   x91
....................             Resistencia_off; 
5AB8:  BCF    F8B.0
5ABA:  BCF    F94.0
....................             Resistencia2_off; 
5ABC:  BCF    F8B.2
5ABE:  BCF    F94.2
....................             Ventilador_off; 
5AC0:  BCF    F8B.1
5AC2:  BCF    F94.1
....................             Tpulso=0.0; 
5AC4:  CLRF   xB1
5AC6:  CLRF   xB0
5AC8:  CLRF   xAF
5ACA:  CLRF   xAE
....................             Opcion=1; 
5ACC:  MOVLW  01
5ACE:  MOVWF  x71
....................          } 
....................          else 
5AD0:  BRA    5AFA
....................          { 
....................             delay_ms(700);Menu=20;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5AD2:  MOVLW  04
5AD4:  MOVWF  xF6
5AD6:  MOVLW  AF
5AD8:  MOVWF  xFC
5ADA:  MOVLB  0
5ADC:  CALL   0CF8
5AE0:  MOVLB  5
5AE2:  DECFSZ xF6,F
5AE4:  BRA    5AD6
5AE6:  MOVLW  14
5AE8:  MOVWF  x6A
5AEA:  CLRF   xF7
5AEC:  MOVLB  0
5AEE:  CALL   0D62
5AF2:  MOVLW  01
5AF4:  MOVLB  5
5AF6:  MOVWF  x71
5AF8:  BSF    x65.3
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5AFA:  BSF    F96.2
5AFC:  BTFSS  F84.2
5AFE:  BRA    5B28
....................       { 
....................          delay_ms(700);Menu=20;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5B00:  MOVLW  04
5B02:  MOVWF  xF6
5B04:  MOVLW  AF
5B06:  MOVWF  xFC
5B08:  MOVLB  0
5B0A:  CALL   0CF8
5B0E:  MOVLB  5
5B10:  DECFSZ xF6,F
5B12:  BRA    5B04
5B14:  MOVLW  14
5B16:  MOVWF  x6A
5B18:  CLRF   xF7
5B1A:  MOVLB  0
5B1C:  CALL   0D62
5B20:  MOVLW  01
5B22:  MOVLB  5
5B24:  MOVWF  x71
5B26:  BSF    x65.3
....................       } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==100){ //Menu de Configuración de Parametros de Control 
5B28:  MOVF   x6A,W
5B2A:  SUBLW  64
5B2C:  BTFSS  FD8.2
5B2E:  BRA    5F10
....................        
....................       if(Opcion>6) 
5B30:  MOVF   x71,W
5B32:  SUBLW  06
5B34:  BC    5B3A
....................       {Opcion=1;} 
5B36:  MOVLW  01
5B38:  MOVWF  x71
....................       if(Opcion<1) 
5B3A:  MOVF   x71,F
5B3C:  BNZ   5B42
....................       {Opcion=6;} 
5B3E:  MOVLW  06
5B40:  MOVWF  x71
....................        
....................          if(Opcion==1)    
5B42:  DECFSZ x71,W
5B44:  BRA    5B8A
....................             {strcpy(Menus.Letra,"Ganancia"); 
5B46:  MOVLW  05
5B48:  MOVWF  FEA
5B4A:  MOVLW  D6
5B4C:  MOVWF  FE9
5B4E:  MOVFF  FF2,5F6
5B52:  BCF    FF2.7
5B54:  MOVLW  00
5B56:  MOVLB  0
5B58:  CALL   0B62
5B5C:  TBLRD*-
5B5E:  TBLRD*+
5B60:  MOVF   FF5,W
5B62:  MOVWF  FEE
5B64:  IORLW  00
5B66:  BNZ   5B5E
5B68:  MOVLB  5
5B6A:  BTFSC  xF6.7
5B6C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
5B6E:  MOVLW  05
5B70:  MOVWF  xF7
5B72:  MOVLW  D6
5B74:  MOVWF  xF6
5B76:  CLRF   xF8
5B78:  CLRF   xF9
5B7A:  MOVLW  01
5B7C:  MOVWF  xFA
5B7E:  MOVWF  xFB
5B80:  MOVLB  0
5B82:  CALL   1394
....................          else 
5B86:  BRA    5BCA
5B88:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ganancia"); 
5B8A:  MOVLW  05
5B8C:  MOVWF  FEA
5B8E:  MOVLW  D6
5B90:  MOVWF  FE9
5B92:  MOVFF  FF2,5F6
5B96:  BCF    FF2.7
5B98:  MOVLW  00
5B9A:  MOVLB  0
5B9C:  CALL   0B62
5BA0:  TBLRD*-
5BA2:  TBLRD*+
5BA4:  MOVF   FF5,W
5BA6:  MOVWF  FEE
5BA8:  IORLW  00
5BAA:  BNZ   5BA2
5BAC:  MOVLB  5
5BAE:  BTFSC  xF6.7
5BB0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);} 
5BB2:  MOVLW  05
5BB4:  MOVWF  xF7
5BB6:  MOVLW  D6
5BB8:  MOVWF  xF6
5BBA:  CLRF   xF8
5BBC:  CLRF   xF9
5BBE:  CLRF   xFA
5BC0:  MOVLW  01
5BC2:  MOVWF  xFB
5BC4:  MOVLB  0
5BC6:  CALL   1394
....................           
....................          if(Opcion==2)    
5BCA:  MOVLB  5
5BCC:  MOVF   x71,W
5BCE:  SUBLW  02
5BD0:  BNZ   5C18
....................             {strcpy(Menus.Letra,"Tciclo"); 
5BD2:  MOVLW  05
5BD4:  MOVWF  FEA
5BD6:  MOVLW  D6
5BD8:  MOVWF  FE9
5BDA:  MOVFF  FF2,5F6
5BDE:  BCF    FF2.7
5BE0:  MOVLW  00
5BE2:  MOVLB  0
5BE4:  CALL   0B86
5BE8:  TBLRD*-
5BEA:  TBLRD*+
5BEC:  MOVF   FF5,W
5BEE:  MOVWF  FEE
5BF0:  IORLW  00
5BF2:  BNZ   5BEA
5BF4:  MOVLB  5
5BF6:  BTFSC  xF6.7
5BF8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
5BFA:  MOVLW  05
5BFC:  MOVWF  xF7
5BFE:  MOVLW  D6
5C00:  MOVWF  xF6
5C02:  CLRF   xF8
5C04:  MOVLW  0A
5C06:  MOVWF  xF9
5C08:  MOVLW  01
5C0A:  MOVWF  xFA
5C0C:  MOVWF  xFB
5C0E:  MOVLB  0
5C10:  CALL   1394
....................          else 
5C14:  BRA    5C5A
5C16:  MOVLB  5
....................             {strcpy(Menus.Letra,"Tciclo"); 
5C18:  MOVLW  05
5C1A:  MOVWF  FEA
5C1C:  MOVLW  D6
5C1E:  MOVWF  FE9
5C20:  MOVFF  FF2,5F6
5C24:  BCF    FF2.7
5C26:  MOVLW  00
5C28:  MOVLB  0
5C2A:  CALL   0B86
5C2E:  TBLRD*-
5C30:  TBLRD*+
5C32:  MOVF   FF5,W
5C34:  MOVWF  FEE
5C36:  IORLW  00
5C38:  BNZ   5C30
5C3A:  MOVLB  5
5C3C:  BTFSC  xF6.7
5C3E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
5C40:  MOVLW  05
5C42:  MOVWF  xF7
5C44:  MOVLW  D6
5C46:  MOVWF  xF6
5C48:  CLRF   xF8
5C4A:  MOVLW  0A
5C4C:  MOVWF  xF9
5C4E:  CLRF   xFA
5C50:  MOVLW  01
5C52:  MOVWF  xFB
5C54:  MOVLB  0
5C56:  CALL   1394
....................              
....................          if(Opcion==3)    
5C5A:  MOVLB  5
5C5C:  MOVF   x71,W
5C5E:  SUBLW  03
5C60:  BNZ   5CA8
....................             {strcpy(Menus.Letra,"Ajuste +"); 
5C62:  MOVLW  05
5C64:  MOVWF  FEA
5C66:  MOVLW  D6
5C68:  MOVWF  FE9
5C6A:  MOVFF  FF2,5F6
5C6E:  BCF    FF2.7
5C70:  MOVLW  00
5C72:  MOVLB  0
5C74:  CALL   0BA8
5C78:  TBLRD*-
5C7A:  TBLRD*+
5C7C:  MOVF   FF5,W
5C7E:  MOVWF  FEE
5C80:  IORLW  00
5C82:  BNZ   5C7A
5C84:  MOVLB  5
5C86:  BTFSC  xF6.7
5C88:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
5C8A:  MOVLW  05
5C8C:  MOVWF  xF7
5C8E:  MOVLW  D6
5C90:  MOVWF  xF6
5C92:  CLRF   xF8
5C94:  MOVLW  14
5C96:  MOVWF  xF9
5C98:  MOVLW  01
5C9A:  MOVWF  xFA
5C9C:  MOVWF  xFB
5C9E:  MOVLB  0
5CA0:  CALL   1394
....................          else 
5CA4:  BRA    5CEA
5CA6:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste +"); 
5CA8:  MOVLW  05
5CAA:  MOVWF  FEA
5CAC:  MOVLW  D6
5CAE:  MOVWF  FE9
5CB0:  MOVFF  FF2,5F6
5CB4:  BCF    FF2.7
5CB6:  MOVLW  00
5CB8:  MOVLB  0
5CBA:  CALL   0BA8
5CBE:  TBLRD*-
5CC0:  TBLRD*+
5CC2:  MOVF   FF5,W
5CC4:  MOVWF  FEE
5CC6:  IORLW  00
5CC8:  BNZ   5CC0
5CCA:  MOVLB  5
5CCC:  BTFSC  xF6.7
5CCE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);}    
5CD0:  MOVLW  05
5CD2:  MOVWF  xF7
5CD4:  MOVLW  D6
5CD6:  MOVWF  xF6
5CD8:  CLRF   xF8
5CDA:  MOVLW  14
5CDC:  MOVWF  xF9
5CDE:  CLRF   xFA
5CE0:  MOVLW  01
5CE2:  MOVWF  xFB
5CE4:  MOVLB  0
5CE6:  CALL   1394
....................                          
....................          if(Opcion==4)    
5CEA:  MOVLB  5
5CEC:  MOVF   x71,W
5CEE:  SUBLW  04
5CF0:  BNZ   5D38
....................             {strcpy(Menus.Letra,"Ajuste -"); 
5CF2:  MOVLW  05
5CF4:  MOVWF  FEA
5CF6:  MOVLW  D6
5CF8:  MOVWF  FE9
5CFA:  MOVFF  FF2,5F6
5CFE:  BCF    FF2.7
5D00:  MOVLW  00
5D02:  MOVLB  0
5D04:  CALL   0BCC
5D08:  TBLRD*-
5D0A:  TBLRD*+
5D0C:  MOVF   FF5,W
5D0E:  MOVWF  FEE
5D10:  IORLW  00
5D12:  BNZ   5D0A
5D14:  MOVLB  5
5D16:  BTFSC  xF6.7
5D18:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
5D1A:  MOVLW  05
5D1C:  MOVWF  xF7
5D1E:  MOVLW  D6
5D20:  MOVWF  xF6
5D22:  CLRF   xF8
5D24:  MOVLW  1E
5D26:  MOVWF  xF9
5D28:  MOVLW  01
5D2A:  MOVWF  xFA
5D2C:  MOVWF  xFB
5D2E:  MOVLB  0
5D30:  CALL   1394
....................          else 
5D34:  BRA    5D7A
5D36:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste -"); 
5D38:  MOVLW  05
5D3A:  MOVWF  FEA
5D3C:  MOVLW  D6
5D3E:  MOVWF  FE9
5D40:  MOVFF  FF2,5F6
5D44:  BCF    FF2.7
5D46:  MOVLW  00
5D48:  MOVLB  0
5D4A:  CALL   0BCC
5D4E:  TBLRD*-
5D50:  TBLRD*+
5D52:  MOVF   FF5,W
5D54:  MOVWF  FEE
5D56:  IORLW  00
5D58:  BNZ   5D50
5D5A:  MOVLB  5
5D5C:  BTFSC  xF6.7
5D5E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);}      
5D60:  MOVLW  05
5D62:  MOVWF  xF7
5D64:  MOVLW  D6
5D66:  MOVWF  xF6
5D68:  CLRF   xF8
5D6A:  MOVLW  1E
5D6C:  MOVWF  xF9
5D6E:  CLRF   xFA
5D70:  MOVLW  01
5D72:  MOVWF  xFB
5D74:  MOVLB  0
5D76:  CALL   1394
....................              
....................          if(Opcion==5)    
5D7A:  MOVLB  5
5D7C:  MOVF   x71,W
5D7E:  SUBLW  05
5D80:  BNZ   5DC8
....................             {strcpy(Menus.Letra,"Media Movil"); 
5D82:  MOVLW  05
5D84:  MOVWF  FEA
5D86:  MOVLW  D6
5D88:  MOVWF  FE9
5D8A:  MOVFF  FF2,5F6
5D8E:  BCF    FF2.7
5D90:  MOVLW  00
5D92:  MOVLB  0
5D94:  CALL   0BF0
5D98:  TBLRD*-
5D9A:  TBLRD*+
5D9C:  MOVF   FF5,W
5D9E:  MOVWF  FEE
5DA0:  IORLW  00
5DA2:  BNZ   5D9A
5DA4:  MOVLB  5
5DA6:  BTFSC  xF6.7
5DA8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
5DAA:  MOVLW  05
5DAC:  MOVWF  xF7
5DAE:  MOVLW  D6
5DB0:  MOVWF  xF6
5DB2:  CLRF   xF8
5DB4:  MOVLW  28
5DB6:  MOVWF  xF9
5DB8:  MOVLW  01
5DBA:  MOVWF  xFA
5DBC:  MOVWF  xFB
5DBE:  MOVLB  0
5DC0:  CALL   1394
....................          else 
5DC4:  BRA    5E0A
5DC6:  MOVLB  5
....................             {strcpy(Menus.Letra,"Media Movil"); 
5DC8:  MOVLW  05
5DCA:  MOVWF  FEA
5DCC:  MOVLW  D6
5DCE:  MOVWF  FE9
5DD0:  MOVFF  FF2,5F6
5DD4:  BCF    FF2.7
5DD6:  MOVLW  00
5DD8:  MOVLB  0
5DDA:  CALL   0BF0
5DDE:  TBLRD*-
5DE0:  TBLRD*+
5DE2:  MOVF   FF5,W
5DE4:  MOVWF  FEE
5DE6:  IORLW  00
5DE8:  BNZ   5DE0
5DEA:  MOVLB  5
5DEC:  BTFSC  xF6.7
5DEE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}      
5DF0:  MOVLW  05
5DF2:  MOVWF  xF7
5DF4:  MOVLW  D6
5DF6:  MOVWF  xF6
5DF8:  CLRF   xF8
5DFA:  MOVLW  28
5DFC:  MOVWF  xF9
5DFE:  CLRF   xFA
5E00:  MOVLW  01
5E02:  MOVWF  xFB
5E04:  MOVLB  0
5E06:  CALL   1394
....................              
....................          if(Opcion==6)    
5E0A:  MOVLB  5
5E0C:  MOVF   x71,W
5E0E:  SUBLW  06
5E10:  BNZ   5E58
....................             {strcpy(Menus.Letra,"Coeficiente"); 
5E12:  MOVLW  05
5E14:  MOVWF  FEA
5E16:  MOVLW  D6
5E18:  MOVWF  FE9
5E1A:  MOVFF  FF2,5F6
5E1E:  BCF    FF2.7
5E20:  MOVLW  00
5E22:  MOVLB  0
5E24:  CALL   0C16
5E28:  TBLRD*-
5E2A:  TBLRD*+
5E2C:  MOVF   FF5,W
5E2E:  MOVWF  FEE
5E30:  IORLW  00
5E32:  BNZ   5E2A
5E34:  MOVLB  5
5E36:  BTFSC  xF6.7
5E38:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
5E3A:  MOVLW  05
5E3C:  MOVWF  xF7
5E3E:  MOVLW  D6
5E40:  MOVWF  xF6
5E42:  CLRF   xF8
5E44:  MOVLW  32
5E46:  MOVWF  xF9
5E48:  MOVLW  01
5E4A:  MOVWF  xFA
5E4C:  MOVWF  xFB
5E4E:  MOVLB  0
5E50:  CALL   1394
....................          else 
5E54:  BRA    5E9A
5E56:  MOVLB  5
....................             {strcpy(Menus.Letra,"Coeficiente"); 
5E58:  MOVLW  05
5E5A:  MOVWF  FEA
5E5C:  MOVLW  D6
5E5E:  MOVWF  FE9
5E60:  MOVFF  FF2,5F6
5E64:  BCF    FF2.7
5E66:  MOVLW  00
5E68:  MOVLB  0
5E6A:  CALL   0C16
5E6E:  TBLRD*-
5E70:  TBLRD*+
5E72:  MOVF   FF5,W
5E74:  MOVWF  FEE
5E76:  IORLW  00
5E78:  BNZ   5E70
5E7A:  MOVLB  5
5E7C:  BTFSC  xF6.7
5E7E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}         
5E80:  MOVLW  05
5E82:  MOVWF  xF7
5E84:  MOVLW  D6
5E86:  MOVWF  xF6
5E88:  CLRF   xF8
5E8A:  MOVLW  32
5E8C:  MOVWF  xF9
5E8E:  CLRF   xFA
5E90:  MOVLW  01
5E92:  MOVWF  xFB
5E94:  MOVLB  0
5E96:  CALL   1394
....................        
....................       if(UP)//Si oprime hacia arriba 
5E9A:  BSF    F92.5
5E9C:  BTFSS  F80.5
5E9E:  BRA    5EBA
....................          {  if(Flanco == 0)  
5EA0:  MOVLB  5
5EA2:  BTFSC  x65.0
5EA4:  BRA    5EB8
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
5EA6:  BSF    x65.0
5EA8:  MOVLW  1E
5EAA:  MOVWF  xFC
5EAC:  MOVLB  0
5EAE:  CALL   0CF8
5EB2:  MOVLB  5
5EB4:  DECF   x71,F
5EB6:  BSF    x65.3
....................                } 
....................          } 
....................             else 
5EB8:  BRA    5EBE
....................                {Flanco = 0;} 
5EBA:  MOVLB  5
5EBC:  BCF    x65.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
5EBE:  BSF    F96.0
5EC0:  BTFSS  F84.0
5EC2:  BRA    5EDC
....................          {  if(Flanco2 == 0)  
5EC4:  BTFSC  x65.2
5EC6:  BRA    5EDA
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
5EC8:  BSF    x65.2
5ECA:  MOVLW  1E
5ECC:  MOVWF  xFC
5ECE:  MOVLB  0
5ED0:  CALL   0CF8
5ED4:  MOVLB  5
5ED6:  INCF   x71,F
5ED8:  BSF    x65.3
....................                }      
....................          } 
....................             else 
5EDA:  BRA    5EDE
....................                {Flanco2 = 0;}   
5EDC:  BCF    x65.2
....................                 
....................        if(RIGHT)//Si oprime SET 
5EDE:  BSF    F96.1
5EE0:  BTFSS  F84.1
5EE2:  BRA    5F0E
....................          {  if(Flanco1 == 0)  
5EE4:  BTFSC  x65.1
5EE6:  BRA    5F0C
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
5EE8:  BSF    x65.1
5EEA:  MOVLW  1E
5EEC:  MOVWF  xFC
5EEE:  MOVLB  0
5EF0:  CALL   0CF8
5EF4:  MOVLW  64
5EF6:  MOVLB  5
5EF8:  ADDWF  x71,W
5EFA:  MOVWF  x6A
5EFC:  MOVLW  01
5EFE:  MOVWF  x71
5F00:  CLRF   xF7
5F02:  MOVLB  0
5F04:  CALL   0D62
5F08:  MOVLB  5
5F0A:  BSF    x65.3
....................                } 
....................          } 
....................             else 
5F0C:  BRA    5F10
....................                {Flanco1 = 0;}   
5F0E:  BCF    x65.1
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==101){ // Menu de Ajuste de Ganancia 
5F10:  MOVF   x6A,W
5F12:  SUBLW  65
5F14:  BTFSS  FD8.2
5F16:  BRA    615A
....................        
....................       if(Ganancia>40) 
5F18:  CLRF   xF9
5F1A:  CLRF   xF8
5F1C:  MOVLW  20
5F1E:  MOVWF  xF7
5F20:  MOVLW  84
5F22:  MOVWF  xF6
5F24:  MOVFF  5C5,5FD
5F28:  MOVFF  5C4,5FC
5F2C:  MOVFF  5C3,5FB
5F30:  MOVFF  5C2,5FA
5F34:  MOVLB  0
5F36:  CALL   2676
5F3A:  BNC   5F48
....................       { 
....................          Ganancia=1; 
5F3C:  MOVLB  5
5F3E:  CLRF   xC5
5F40:  CLRF   xC4
5F42:  CLRF   xC3
5F44:  MOVLW  7F
5F46:  MOVWF  xC2
....................       } 
....................        
....................       if(visual==1) 
5F48:  MOVLB  5
5F4A:  BTFSS  x65.3
5F4C:  BRA    5FCA
....................       { 
....................          glcd_fillScreen(OFF); 
5F4E:  CLRF   xF7
5F50:  MOVLB  0
5F52:  CALL   0D62
....................          strcpy(Menus.Letra,"Ganancia"); 
5F56:  MOVLW  05
5F58:  MOVWF  FEA
5F5A:  MOVLW  D6
5F5C:  MOVWF  FE9
5F5E:  MOVFF  FF2,5F6
5F62:  BCF    FF2.7
5F64:  MOVLW  00
5F66:  CALL   0B62
5F6A:  TBLRD*-
5F6C:  TBLRD*+
5F6E:  MOVF   FF5,W
5F70:  MOVWF  FEE
5F72:  IORLW  00
5F74:  BNZ   5F6C
5F76:  MOVLB  5
5F78:  BTFSC  xF6.7
5F7A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5F7C:  MOVLW  05
5F7E:  MOVWF  xF7
5F80:  MOVLW  D6
5F82:  MOVWF  xF6
5F84:  CLRF   xF8
5F86:  CLRF   xF9
5F88:  MOVLW  01
5F8A:  MOVWF  xFA
5F8C:  MOVLW  02
5F8E:  MOVWF  xFB
5F90:  MOVLB  0
5F92:  CALL   1394
....................           
....................          displayTemperatura(Ganancia,30,30,0,3); 
5F96:  MOVFF  5C5,5F9
5F9A:  MOVFF  5C4,5F8
5F9E:  MOVFF  5C3,5F7
5FA2:  MOVFF  5C2,5F6
5FA6:  CALL   275E
5FAA:  MOVFF  01,5F6
5FAE:  MOVFF  01,5F7
5FB2:  MOVLW  1E
5FB4:  MOVLB  5
5FB6:  MOVWF  xF8
5FB8:  MOVWF  xF9
5FBA:  CLRF   xFA
5FBC:  MOVLW  03
5FBE:  MOVWF  xFB
5FC0:  MOVLB  0
5FC2:  CALL   224C
....................           
....................          visual=0; 
5FC6:  MOVLB  5
5FC8:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
5FCA:  BSF    F92.5
5FCC:  BTFSS  F80.5
5FCE:  BRA    605A
....................          {   
....................             if(Ganancia>40) 
5FD0:  CLRF   xF9
5FD2:  CLRF   xF8
5FD4:  MOVLW  20
5FD6:  MOVWF  xF7
5FD8:  MOVLW  84
5FDA:  MOVWF  xF6
5FDC:  MOVFF  5C5,5FD
5FE0:  MOVFF  5C4,5FC
5FE4:  MOVFF  5C3,5FB
5FE8:  MOVFF  5C2,5FA
5FEC:  MOVLB  0
5FEE:  CALL   2676
5FF2:  BNC   6014
....................             { 
....................                Ganancia=40;delay_ms(100);visual=1; 
5FF4:  MOVLB  5
5FF6:  CLRF   xC5
5FF8:  CLRF   xC4
5FFA:  MOVLW  20
5FFC:  MOVWF  xC3
5FFE:  MOVLW  84
6000:  MOVWF  xC2
6002:  MOVLW  64
6004:  MOVWF  xFC
6006:  MOVLB  0
6008:  CALL   0CF8
600C:  MOVLB  5
600E:  BSF    x65.3
....................             } 
....................             else 
6010:  BRA    605A
6012:  MOVLB  0
....................             { 
....................                delay_ms(30);Ganancia+=1.0;visual=1; 
6014:  MOVLW  1E
6016:  MOVLB  5
6018:  MOVWF  xFC
601A:  MOVLB  0
601C:  CALL   0CF8
6020:  BCF    FD8.1
6022:  MOVFF  5C5,5FE
6026:  MOVFF  5C4,5FD
602A:  MOVFF  5C3,5FC
602E:  MOVFF  5C2,5FB
6032:  MOVLB  6
6034:  CLRF   x02
6036:  CLRF   x01
6038:  CLRF   x00
603A:  MOVLW  7F
603C:  MOVLB  5
603E:  MOVWF  xFF
6040:  MOVLB  0
6042:  CALL   18A6
6046:  MOVFF  03,5C5
604A:  MOVFF  02,5C4
604E:  MOVFF  01,5C3
6052:  MOVFF  00,5C2
6056:  MOVLB  5
6058:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
605A:  BSF    F96.0
605C:  BTFSS  F84.0
605E:  BRA    60C8
....................          {   
....................             if(Ganancia>1) 
6060:  CLRF   xF9
6062:  CLRF   xF8
6064:  CLRF   xF7
6066:  MOVLW  7F
6068:  MOVWF  xF6
606A:  MOVFF  5C5,5FD
606E:  MOVFF  5C4,5FC
6072:  MOVFF  5C3,5FB
6076:  MOVFF  5C2,5FA
607A:  MOVLB  0
607C:  CALL   2676
6080:  BNC   60CA
....................             { 
....................                delay_ms(30);Ganancia-=1.0;visual=1;      
6082:  MOVLW  1E
6084:  MOVLB  5
6086:  MOVWF  xFC
6088:  MOVLB  0
608A:  CALL   0CF8
608E:  BSF    FD8.1
6090:  MOVFF  5C5,5FE
6094:  MOVFF  5C4,5FD
6098:  MOVFF  5C3,5FC
609C:  MOVFF  5C2,5FB
60A0:  MOVLB  6
60A2:  CLRF   x02
60A4:  CLRF   x01
60A6:  CLRF   x00
60A8:  MOVLW  7F
60AA:  MOVLB  5
60AC:  MOVWF  xFF
60AE:  MOVLB  0
60B0:  CALL   18A6
60B4:  MOVFF  03,5C5
60B8:  MOVFF  02,5C4
60BC:  MOVFF  01,5C3
60C0:  MOVFF  00,5C2
60C4:  MOVLB  5
60C6:  BSF    x65.3
60C8:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
60CA:  BSF    F96.1
60CC:  BTFSS  F84.1
60CE:  BRA    60E2
....................          {   
....................             delay_ms(30);visual=1; 
60D0:  MOVLW  1E
60D2:  MOVLB  5
60D4:  MOVWF  xFC
60D6:  MOVLB  0
60D8:  CALL   0CF8
60DC:  MOVLB  5
60DE:  BSF    x65.3
60E0:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
60E2:  BSF    F96.2
60E4:  BTFSS  F84.2
60E6:  BRA    6158
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
60E8:  MOVLW  04
60EA:  MOVLB  5
60EC:  MOVWF  xF6
60EE:  MOVLW  AF
60F0:  MOVWF  xFC
60F2:  MOVLB  0
60F4:  CALL   0CF8
60F8:  MOVLB  5
60FA:  DECFSZ xF6,F
60FC:  BRA    60EE
60FE:  MOVLW  64
6100:  MOVWF  x6A
6102:  CLRF   xF7
6104:  MOVLB  0
6106:  CALL   0D62
610A:  MOVLW  01
610C:  MOVLB  5
610E:  MOVWF  x71
6110:  BSF    x65.3
....................             write_eeprom(20,(int8)Ganancia); 
6112:  MOVFF  5C5,5F9
6116:  MOVFF  5C4,5F8
611A:  MOVFF  5C3,5F7
611E:  MOVFF  5C2,5F6
6122:  MOVLB  0
6124:  CALL   275E
6128:  MOVFF  01,5F6
612C:  MOVLW  14
612E:  MOVWF  FA9
6130:  MOVFF  5F6,FA8
6134:  BCF    FA6.6
6136:  BCF    FA6.7
6138:  BSF    FA6.2
613A:  MOVF   FF2,W
613C:  MOVWF  00
613E:  BCF    FF2.7
6140:  MOVLB  F
6142:  MOVLW  55
6144:  MOVWF  FA7
6146:  MOVLW  AA
6148:  MOVWF  FA7
614A:  BSF    FA6.1
614C:  BTFSC  FA6.1
614E:  BRA    614C
6150:  BCF    FA6.2
6152:  MOVF   00,W
6154:  IORWF  FF2,F
6156:  MOVLB  0
6158:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==102){ // Menu de Ajuste de Ganancia2 
615A:  MOVF   x6A,W
615C:  SUBLW  66
615E:  BTFSS  FD8.2
6160:  BRA    63A6
....................        
....................       if(Tciclo>40) 
6162:  CLRF   xF9
6164:  CLRF   xF8
6166:  MOVLW  20
6168:  MOVWF  xF7
616A:  MOVLW  84
616C:  MOVWF  xF6
616E:  MOVFF  5AD,5FD
6172:  MOVFF  5AC,5FC
6176:  MOVFF  5AB,5FB
617A:  MOVFF  5AA,5FA
617E:  MOVLB  0
6180:  CALL   2676
6184:  BNC   6194
....................       { 
....................          Tciclo=40; 
6186:  MOVLB  5
6188:  CLRF   xAD
618A:  CLRF   xAC
618C:  MOVLW  20
618E:  MOVWF  xAB
6190:  MOVLW  84
6192:  MOVWF  xAA
....................       } 
....................        
....................       if(visual==1) 
6194:  MOVLB  5
6196:  BTFSS  x65.3
6198:  BRA    6216
....................       { 
....................          glcd_fillScreen(OFF); 
619A:  CLRF   xF7
619C:  MOVLB  0
619E:  CALL   0D62
....................          strcpy(Menus.Letra,"Tciclo"); 
61A2:  MOVLW  05
61A4:  MOVWF  FEA
61A6:  MOVLW  D6
61A8:  MOVWF  FE9
61AA:  MOVFF  FF2,5F6
61AE:  BCF    FF2.7
61B0:  MOVLW  00
61B2:  CALL   0B86
61B6:  TBLRD*-
61B8:  TBLRD*+
61BA:  MOVF   FF5,W
61BC:  MOVWF  FEE
61BE:  IORLW  00
61C0:  BNZ   61B8
61C2:  MOVLB  5
61C4:  BTFSC  xF6.7
61C6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
61C8:  MOVLW  05
61CA:  MOVWF  xF7
61CC:  MOVLW  D6
61CE:  MOVWF  xF6
61D0:  CLRF   xF8
61D2:  CLRF   xF9
61D4:  MOVLW  01
61D6:  MOVWF  xFA
61D8:  MOVLW  02
61DA:  MOVWF  xFB
61DC:  MOVLB  0
61DE:  CALL   1394
....................           
....................          displayTemperatura(Tciclo,30,30,0,3); 
61E2:  MOVFF  5AD,5F9
61E6:  MOVFF  5AC,5F8
61EA:  MOVFF  5AB,5F7
61EE:  MOVFF  5AA,5F6
61F2:  CALL   275E
61F6:  MOVFF  01,5F6
61FA:  MOVFF  01,5F7
61FE:  MOVLW  1E
6200:  MOVLB  5
6202:  MOVWF  xF8
6204:  MOVWF  xF9
6206:  CLRF   xFA
6208:  MOVLW  03
620A:  MOVWF  xFB
620C:  MOVLB  0
620E:  CALL   224C
....................           
....................          visual=0; 
6212:  MOVLB  5
6214:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
6216:  BSF    F92.5
6218:  BTFSS  F80.5
621A:  BRA    62A6
....................          {   
....................             if(Tciclo>40) 
621C:  CLRF   xF9
621E:  CLRF   xF8
6220:  MOVLW  20
6222:  MOVWF  xF7
6224:  MOVLW  84
6226:  MOVWF  xF6
6228:  MOVFF  5AD,5FD
622C:  MOVFF  5AC,5FC
6230:  MOVFF  5AB,5FB
6234:  MOVFF  5AA,5FA
6238:  MOVLB  0
623A:  CALL   2676
623E:  BNC   6260
....................             { 
....................                Tciclo=40;delay_ms(100);visual=1; 
6240:  MOVLB  5
6242:  CLRF   xAD
6244:  CLRF   xAC
6246:  MOVLW  20
6248:  MOVWF  xAB
624A:  MOVLW  84
624C:  MOVWF  xAA
624E:  MOVLW  64
6250:  MOVWF  xFC
6252:  MOVLB  0
6254:  CALL   0CF8
6258:  MOVLB  5
625A:  BSF    x65.3
....................             } 
....................             else 
625C:  BRA    62A6
625E:  MOVLB  0
....................             { 
....................                delay_ms(30);Tciclo+=1.0;visual=1; 
6260:  MOVLW  1E
6262:  MOVLB  5
6264:  MOVWF  xFC
6266:  MOVLB  0
6268:  CALL   0CF8
626C:  BCF    FD8.1
626E:  MOVFF  5AD,5FE
6272:  MOVFF  5AC,5FD
6276:  MOVFF  5AB,5FC
627A:  MOVFF  5AA,5FB
627E:  MOVLB  6
6280:  CLRF   x02
6282:  CLRF   x01
6284:  CLRF   x00
6286:  MOVLW  7F
6288:  MOVLB  5
628A:  MOVWF  xFF
628C:  MOVLB  0
628E:  CALL   18A6
6292:  MOVFF  03,5AD
6296:  MOVFF  02,5AC
629A:  MOVFF  01,5AB
629E:  MOVFF  00,5AA
62A2:  MOVLB  5
62A4:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
62A6:  BSF    F96.0
62A8:  BTFSS  F84.0
62AA:  BRA    6314
....................          {   
....................             if(Tciclo>1) 
62AC:  CLRF   xF9
62AE:  CLRF   xF8
62B0:  CLRF   xF7
62B2:  MOVLW  7F
62B4:  MOVWF  xF6
62B6:  MOVFF  5AD,5FD
62BA:  MOVFF  5AC,5FC
62BE:  MOVFF  5AB,5FB
62C2:  MOVFF  5AA,5FA
62C6:  MOVLB  0
62C8:  CALL   2676
62CC:  BNC   6316
....................             { 
....................                delay_ms(30);Tciclo-=1.0;visual=1;      
62CE:  MOVLW  1E
62D0:  MOVLB  5
62D2:  MOVWF  xFC
62D4:  MOVLB  0
62D6:  CALL   0CF8
62DA:  BSF    FD8.1
62DC:  MOVFF  5AD,5FE
62E0:  MOVFF  5AC,5FD
62E4:  MOVFF  5AB,5FC
62E8:  MOVFF  5AA,5FB
62EC:  MOVLB  6
62EE:  CLRF   x02
62F0:  CLRF   x01
62F2:  CLRF   x00
62F4:  MOVLW  7F
62F6:  MOVLB  5
62F8:  MOVWF  xFF
62FA:  MOVLB  0
62FC:  CALL   18A6
6300:  MOVFF  03,5AD
6304:  MOVFF  02,5AC
6308:  MOVFF  01,5AB
630C:  MOVFF  00,5AA
6310:  MOVLB  5
6312:  BSF    x65.3
6314:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
6316:  BSF    F96.1
6318:  BTFSS  F84.1
631A:  BRA    632E
....................          {   
....................             delay_ms(30);visual=1; 
631C:  MOVLW  1E
631E:  MOVLB  5
6320:  MOVWF  xFC
6322:  MOVLB  0
6324:  CALL   0CF8
6328:  MOVLB  5
632A:  BSF    x65.3
632C:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
632E:  BSF    F96.2
6330:  BTFSS  F84.2
6332:  BRA    63A4
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6334:  MOVLW  04
6336:  MOVLB  5
6338:  MOVWF  xF6
633A:  MOVLW  AF
633C:  MOVWF  xFC
633E:  MOVLB  0
6340:  CALL   0CF8
6344:  MOVLB  5
6346:  DECFSZ xF6,F
6348:  BRA    633A
634A:  MOVLW  64
634C:  MOVWF  x6A
634E:  CLRF   xF7
6350:  MOVLB  0
6352:  CALL   0D62
6356:  MOVLW  01
6358:  MOVLB  5
635A:  MOVWF  x71
635C:  BSF    x65.3
....................             write_eeprom(30,(int8)Tciclo); 
635E:  MOVFF  5AD,5F9
6362:  MOVFF  5AC,5F8
6366:  MOVFF  5AB,5F7
636A:  MOVFF  5AA,5F6
636E:  MOVLB  0
6370:  CALL   275E
6374:  MOVFF  01,5F6
6378:  MOVLW  1E
637A:  MOVWF  FA9
637C:  MOVFF  5F6,FA8
6380:  BCF    FA6.6
6382:  BCF    FA6.7
6384:  BSF    FA6.2
6386:  MOVF   FF2,W
6388:  MOVWF  00
638A:  BCF    FF2.7
638C:  MOVLB  F
638E:  MOVLW  55
6390:  MOVWF  FA7
6392:  MOVLW  AA
6394:  MOVWF  FA7
6396:  BSF    FA6.1
6398:  BTFSC  FA6.1
639A:  BRA    6398
639C:  BCF    FA6.2
639E:  MOVF   00,W
63A0:  IORWF  FF2,F
63A2:  MOVLB  0
63A4:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==103){ // Menu de Ajuste de Ajuste 
63A6:  MOVF   x6A,W
63A8:  SUBLW  67
63AA:  BTFSS  FD8.2
63AC:  BRA    6568
....................        
....................       if(Ajuste>100) 
63AE:  MOVF   x60,W
63B0:  SUBLW  64
63B2:  BC    63B6
....................       { 
....................          Ajuste=0; 
63B4:  CLRF   x60
....................       } 
....................        
....................       if(visual==1) 
63B6:  BTFSS  x65.3
63B8:  BRA    641E
....................       { 
....................          glcd_fillScreen(OFF); 
63BA:  CLRF   xF7
63BC:  MOVLB  0
63BE:  CALL   0D62
....................          strcpy(Menus.Letra,"Ajuste"); 
63C2:  MOVLW  05
63C4:  MOVWF  FEA
63C6:  MOVLW  D6
63C8:  MOVWF  FE9
63CA:  MOVFF  FF2,5F6
63CE:  BCF    FF2.7
63D0:  MOVLW  00
63D2:  CALL   0C3C
63D6:  TBLRD*-
63D8:  TBLRD*+
63DA:  MOVF   FF5,W
63DC:  MOVWF  FEE
63DE:  IORLW  00
63E0:  BNZ   63D8
63E2:  MOVLB  5
63E4:  BTFSC  xF6.7
63E6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
63E8:  MOVLW  05
63EA:  MOVWF  xF7
63EC:  MOVLW  D6
63EE:  MOVWF  xF6
63F0:  CLRF   xF8
63F2:  CLRF   xF9
63F4:  MOVLW  01
63F6:  MOVWF  xFA
63F8:  MOVLW  02
63FA:  MOVWF  xFB
63FC:  MOVLB  0
63FE:  CALL   1394
....................           
....................          displayTemperatura(Ajuste,30,30,0,3); 
6402:  MOVFF  560,5F7
6406:  MOVLW  1E
6408:  MOVLB  5
640A:  MOVWF  xF8
640C:  MOVWF  xF9
640E:  CLRF   xFA
6410:  MOVLW  03
6412:  MOVWF  xFB
6414:  MOVLB  0
6416:  CALL   224C
....................           
....................          visual=0; 
641A:  MOVLB  5
641C:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
641E:  BSF    F92.5
6420:  BTFSS  F80.5
6422:  BRA    6496
....................          {   
....................             if(Ajuste>100) 
6424:  MOVF   x60,W
6426:  SUBLW  64
6428:  BC    643C
....................             { 
....................                Ajuste=100;delay_ms(100);visual=1; 
642A:  MOVLW  64
642C:  MOVWF  x60
642E:  MOVWF  xFC
6430:  MOVLB  0
6432:  CALL   0CF8
6436:  MOVLB  5
6438:  BSF    x65.3
....................             } 
....................             else 
643A:  BRA    6496
....................             { 
....................                delay_ms(30);Ajuste+=1.0;visual=1; 
643C:  MOVLW  1E
643E:  MOVWF  xFC
6440:  MOVLB  0
6442:  CALL   0CF8
6446:  MOVLB  5
6448:  CLRF   xFD
644A:  MOVFF  560,5FC
644E:  MOVLB  0
6450:  CALL   169C
6454:  BCF    FD8.1
6456:  MOVFF  03,5FE
645A:  MOVFF  02,5FD
645E:  MOVFF  01,5FC
6462:  MOVFF  00,5FB
6466:  MOVLB  6
6468:  CLRF   x02
646A:  CLRF   x01
646C:  CLRF   x00
646E:  MOVLW  7F
6470:  MOVLB  5
6472:  MOVWF  xFF
6474:  MOVLB  0
6476:  CALL   18A6
647A:  MOVFF  03,5F9
647E:  MOVFF  02,5F8
6482:  MOVFF  01,5F7
6486:  MOVFF  00,5F6
648A:  CALL   275E
648E:  MOVFF  01,560
6492:  MOVLB  5
6494:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
6496:  BSF    F96.0
6498:  BTFSS  F84.0
649A:  BRA    64FA
....................          {   
....................             if(Ajuste>0) 
649C:  MOVF   x60,F
649E:  BZ    64FA
....................             { 
....................                delay_ms(30);Ajuste-=1.0;visual=1;      
64A0:  MOVLW  1E
64A2:  MOVWF  xFC
64A4:  MOVLB  0
64A6:  CALL   0CF8
64AA:  MOVLB  5
64AC:  CLRF   xFD
64AE:  MOVFF  560,5FC
64B2:  MOVLB  0
64B4:  CALL   169C
64B8:  BSF    FD8.1
64BA:  MOVFF  03,5FE
64BE:  MOVFF  02,5FD
64C2:  MOVFF  01,5FC
64C6:  MOVFF  00,5FB
64CA:  MOVLB  6
64CC:  CLRF   x02
64CE:  CLRF   x01
64D0:  CLRF   x00
64D2:  MOVLW  7F
64D4:  MOVLB  5
64D6:  MOVWF  xFF
64D8:  MOVLB  0
64DA:  CALL   18A6
64DE:  MOVFF  03,5F9
64E2:  MOVFF  02,5F8
64E6:  MOVFF  01,5F7
64EA:  MOVFF  00,5F6
64EE:  CALL   275E
64F2:  MOVFF  01,560
64F6:  MOVLB  5
64F8:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
64FA:  BSF    F96.1
64FC:  BTFSS  F84.1
64FE:  BRA    650E
....................          {   
....................             delay_ms(30);visual=1; 
6500:  MOVLW  1E
6502:  MOVWF  xFC
6504:  MOVLB  0
6506:  CALL   0CF8
650A:  MOVLB  5
650C:  BSF    x65.3
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
650E:  BSF    F96.2
6510:  BTFSS  F84.2
6512:  BRA    6568
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6514:  MOVLW  04
6516:  MOVWF  xF6
6518:  MOVLW  AF
651A:  MOVWF  xFC
651C:  MOVLB  0
651E:  CALL   0CF8
6522:  MOVLB  5
6524:  DECFSZ xF6,F
6526:  BRA    6518
6528:  MOVLW  64
652A:  MOVWF  x6A
652C:  CLRF   xF7
652E:  MOVLB  0
6530:  CALL   0D62
6534:  MOVLW  01
6536:  MOVLB  5
6538:  MOVWF  x71
653A:  BSF    x65.3
....................             write_eeprom(40,Ajuste); 
653C:  MOVLW  28
653E:  MOVWF  FA9
6540:  MOVFF  560,FA8
6544:  BCF    FA6.6
6546:  BCF    FA6.7
6548:  BSF    FA6.2
654A:  MOVF   FF2,W
654C:  MOVWF  00
654E:  BCF    FF2.7
6550:  MOVLB  F
6552:  MOVLW  55
6554:  MOVWF  FA7
6556:  MOVLW  AA
6558:  MOVWF  FA7
655A:  BSF    FA6.1
655C:  BTFSC  FA6.1
655E:  BRA    655C
6560:  BCF    FA6.2
6562:  MOVF   00,W
6564:  IORWF  FF2,F
6566:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==104){ // Menu de Ajuste de Ajusten 
6568:  MOVF   x6A,W
656A:  SUBLW  68
656C:  BTFSS  FD8.2
656E:  BRA    672A
....................        
....................       if(Ajusten>100) 
6570:  MOVF   x61,W
6572:  SUBLW  64
6574:  BC    6578
....................       { 
....................          Ajusten=0; 
6576:  CLRF   x61
....................       } 
....................        
....................       if(visual==1) 
6578:  BTFSS  x65.3
657A:  BRA    65E0
....................       { 
....................          glcd_fillScreen(OFF); 
657C:  CLRF   xF7
657E:  MOVLB  0
6580:  CALL   0D62
....................          strcpy(Menus.Letra,"Ajusten"); 
6584:  MOVLW  05
6586:  MOVWF  FEA
6588:  MOVLW  D6
658A:  MOVWF  FE9
658C:  MOVFF  FF2,5F6
6590:  BCF    FF2.7
6592:  MOVLW  00
6594:  CALL   0C5E
6598:  TBLRD*-
659A:  TBLRD*+
659C:  MOVF   FF5,W
659E:  MOVWF  FEE
65A0:  IORLW  00
65A2:  BNZ   659A
65A4:  MOVLB  5
65A6:  BTFSC  xF6.7
65A8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
65AA:  MOVLW  05
65AC:  MOVWF  xF7
65AE:  MOVLW  D6
65B0:  MOVWF  xF6
65B2:  CLRF   xF8
65B4:  CLRF   xF9
65B6:  MOVLW  01
65B8:  MOVWF  xFA
65BA:  MOVLW  02
65BC:  MOVWF  xFB
65BE:  MOVLB  0
65C0:  CALL   1394
....................           
....................          displayTemperatura(Ajusten,30,30,0,3); 
65C4:  MOVFF  561,5F7
65C8:  MOVLW  1E
65CA:  MOVLB  5
65CC:  MOVWF  xF8
65CE:  MOVWF  xF9
65D0:  CLRF   xFA
65D2:  MOVLW  03
65D4:  MOVWF  xFB
65D6:  MOVLB  0
65D8:  CALL   224C
....................           
....................          visual=0; 
65DC:  MOVLB  5
65DE:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
65E0:  BSF    F92.5
65E2:  BTFSS  F80.5
65E4:  BRA    6658
....................          {   
....................             if(Ajusten>100) 
65E6:  MOVF   x61,W
65E8:  SUBLW  64
65EA:  BC    65FE
....................             { 
....................                Ajusten=100;delay_ms(100);visual=1; 
65EC:  MOVLW  64
65EE:  MOVWF  x61
65F0:  MOVWF  xFC
65F2:  MOVLB  0
65F4:  CALL   0CF8
65F8:  MOVLB  5
65FA:  BSF    x65.3
....................             } 
....................             else 
65FC:  BRA    6658
....................             { 
....................                delay_ms(30);Ajusten+=1.0;visual=1; 
65FE:  MOVLW  1E
6600:  MOVWF  xFC
6602:  MOVLB  0
6604:  CALL   0CF8
6608:  MOVLB  5
660A:  CLRF   xFD
660C:  MOVFF  561,5FC
6610:  MOVLB  0
6612:  CALL   169C
6616:  BCF    FD8.1
6618:  MOVFF  03,5FE
661C:  MOVFF  02,5FD
6620:  MOVFF  01,5FC
6624:  MOVFF  00,5FB
6628:  MOVLB  6
662A:  CLRF   x02
662C:  CLRF   x01
662E:  CLRF   x00
6630:  MOVLW  7F
6632:  MOVLB  5
6634:  MOVWF  xFF
6636:  MOVLB  0
6638:  CALL   18A6
663C:  MOVFF  03,5F9
6640:  MOVFF  02,5F8
6644:  MOVFF  01,5F7
6648:  MOVFF  00,5F6
664C:  CALL   275E
6650:  MOVFF  01,561
6654:  MOVLB  5
6656:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
6658:  BSF    F96.0
665A:  BTFSS  F84.0
665C:  BRA    66BC
....................          {   
....................             if(Ajusten>0) 
665E:  MOVF   x61,F
6660:  BZ    66BC
....................             { 
....................                delay_ms(30);Ajusten-=1.0;visual=1;      
6662:  MOVLW  1E
6664:  MOVWF  xFC
6666:  MOVLB  0
6668:  CALL   0CF8
666C:  MOVLB  5
666E:  CLRF   xFD
6670:  MOVFF  561,5FC
6674:  MOVLB  0
6676:  CALL   169C
667A:  BSF    FD8.1
667C:  MOVFF  03,5FE
6680:  MOVFF  02,5FD
6684:  MOVFF  01,5FC
6688:  MOVFF  00,5FB
668C:  MOVLB  6
668E:  CLRF   x02
6690:  CLRF   x01
6692:  CLRF   x00
6694:  MOVLW  7F
6696:  MOVLB  5
6698:  MOVWF  xFF
669A:  MOVLB  0
669C:  CALL   18A6
66A0:  MOVFF  03,5F9
66A4:  MOVFF  02,5F8
66A8:  MOVFF  01,5F7
66AC:  MOVFF  00,5F6
66B0:  CALL   275E
66B4:  MOVFF  01,561
66B8:  MOVLB  5
66BA:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
66BC:  BSF    F96.1
66BE:  BTFSS  F84.1
66C0:  BRA    66D0
....................          {   
....................             delay_ms(30);visual=1; 
66C2:  MOVLW  1E
66C4:  MOVWF  xFC
66C6:  MOVLB  0
66C8:  CALL   0CF8
66CC:  MOVLB  5
66CE:  BSF    x65.3
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
66D0:  BSF    F96.2
66D2:  BTFSS  F84.2
66D4:  BRA    672A
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
66D6:  MOVLW  04
66D8:  MOVWF  xF6
66DA:  MOVLW  AF
66DC:  MOVWF  xFC
66DE:  MOVLB  0
66E0:  CALL   0CF8
66E4:  MOVLB  5
66E6:  DECFSZ xF6,F
66E8:  BRA    66DA
66EA:  MOVLW  64
66EC:  MOVWF  x6A
66EE:  CLRF   xF7
66F0:  MOVLB  0
66F2:  CALL   0D62
66F6:  MOVLW  01
66F8:  MOVLB  5
66FA:  MOVWF  x71
66FC:  BSF    x65.3
....................             write_eeprom(50,Ajusten); 
66FE:  MOVLW  32
6700:  MOVWF  FA9
6702:  MOVFF  561,FA8
6706:  BCF    FA6.6
6708:  BCF    FA6.7
670A:  BSF    FA6.2
670C:  MOVF   FF2,W
670E:  MOVWF  00
6710:  BCF    FF2.7
6712:  MOVLB  F
6714:  MOVLW  55
6716:  MOVWF  FA7
6718:  MOVLW  AA
671A:  MOVWF  FA7
671C:  BSF    FA6.1
671E:  BTFSC  FA6.1
6720:  BRA    671E
6722:  BCF    FA6.2
6724:  MOVF   00,W
6726:  IORWF  FF2,F
6728:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==105){ // Menu de Ajuste de Media Movil 
672A:  MOVF   x6A,W
672C:  SUBLW  69
672E:  BTFSS  FD8.2
6730:  BRA    68F2
....................        
....................       if(MediaMovil>80) 
6732:  MOVF   x62,W
6734:  SUBLW  50
6736:  BC    673C
....................       { 
....................          MediaMovil=80; 
6738:  MOVLW  50
673A:  MOVWF  x62
....................       } 
....................        
....................       if(visual==1) 
673C:  BTFSS  x65.3
673E:  BRA    67A4
....................       { 
....................          glcd_fillScreen(OFF); 
6740:  CLRF   xF7
6742:  MOVLB  0
6744:  CALL   0D62
....................          strcpy(Menus.Letra,"Media"); 
6748:  MOVLW  05
674A:  MOVWF  FEA
674C:  MOVLW  D6
674E:  MOVWF  FE9
6750:  MOVFF  FF2,5F6
6754:  BCF    FF2.7
6756:  MOVLW  00
6758:  CALL   0C80
675C:  TBLRD*-
675E:  TBLRD*+
6760:  MOVF   FF5,W
6762:  MOVWF  FEE
6764:  IORLW  00
6766:  BNZ   675E
6768:  MOVLB  5
676A:  BTFSC  xF6.7
676C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
676E:  MOVLW  05
6770:  MOVWF  xF7
6772:  MOVLW  D6
6774:  MOVWF  xF6
6776:  CLRF   xF8
6778:  CLRF   xF9
677A:  MOVLW  01
677C:  MOVWF  xFA
677E:  MOVLW  02
6780:  MOVWF  xFB
6782:  MOVLB  0
6784:  CALL   1394
....................           
....................          displayTemperatura(MediaMovil,30,30,0,3); 
6788:  MOVFF  562,5F7
678C:  MOVLW  1E
678E:  MOVLB  5
6790:  MOVWF  xF8
6792:  MOVWF  xF9
6794:  CLRF   xFA
6796:  MOVLW  03
6798:  MOVWF  xFB
679A:  MOVLB  0
679C:  CALL   224C
....................           
....................          visual=0; 
67A0:  MOVLB  5
67A2:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
67A4:  BSF    F92.5
67A6:  BTFSS  F80.5
67A8:  BRA    681E
....................          {   
....................             if(MediaMovil>80) 
67AA:  MOVF   x62,W
67AC:  SUBLW  50
67AE:  BC    67C4
....................             { 
....................                MediaMovil=80;delay_ms(100);visual=1; 
67B0:  MOVLW  50
67B2:  MOVWF  x62
67B4:  MOVLW  64
67B6:  MOVWF  xFC
67B8:  MOVLB  0
67BA:  CALL   0CF8
67BE:  MOVLB  5
67C0:  BSF    x65.3
....................             } 
....................             else 
67C2:  BRA    681E
....................             { 
....................                delay_ms(30);MediaMovil+=1.0;visual=1; 
67C4:  MOVLW  1E
67C6:  MOVWF  xFC
67C8:  MOVLB  0
67CA:  CALL   0CF8
67CE:  MOVLB  5
67D0:  CLRF   xFD
67D2:  MOVFF  562,5FC
67D6:  MOVLB  0
67D8:  CALL   169C
67DC:  BCF    FD8.1
67DE:  MOVFF  03,5FE
67E2:  MOVFF  02,5FD
67E6:  MOVFF  01,5FC
67EA:  MOVFF  00,5FB
67EE:  MOVLB  6
67F0:  CLRF   x02
67F2:  CLRF   x01
67F4:  CLRF   x00
67F6:  MOVLW  7F
67F8:  MOVLB  5
67FA:  MOVWF  xFF
67FC:  MOVLB  0
67FE:  CALL   18A6
6802:  MOVFF  03,5F9
6806:  MOVFF  02,5F8
680A:  MOVFF  01,5F7
680E:  MOVFF  00,5F6
6812:  CALL   275E
6816:  MOVFF  01,562
681A:  MOVLB  5
681C:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
681E:  BSF    F96.0
6820:  BTFSS  F84.0
6822:  BRA    6884
....................          {   
....................             if(MediaMovil>1) 
6824:  MOVF   x62,W
6826:  SUBLW  01
6828:  BC    6884
....................             { 
....................                delay_ms(30);MediaMovil-=1.0;visual=1;      
682A:  MOVLW  1E
682C:  MOVWF  xFC
682E:  MOVLB  0
6830:  CALL   0CF8
6834:  MOVLB  5
6836:  CLRF   xFD
6838:  MOVFF  562,5FC
683C:  MOVLB  0
683E:  CALL   169C
6842:  BSF    FD8.1
6844:  MOVFF  03,5FE
6848:  MOVFF  02,5FD
684C:  MOVFF  01,5FC
6850:  MOVFF  00,5FB
6854:  MOVLB  6
6856:  CLRF   x02
6858:  CLRF   x01
685A:  CLRF   x00
685C:  MOVLW  7F
685E:  MOVLB  5
6860:  MOVWF  xFF
6862:  MOVLB  0
6864:  CALL   18A6
6868:  MOVFF  03,5F9
686C:  MOVFF  02,5F8
6870:  MOVFF  01,5F7
6874:  MOVFF  00,5F6
6878:  CALL   275E
687C:  MOVFF  01,562
6880:  MOVLB  5
6882:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
6884:  BSF    F96.1
6886:  BTFSS  F84.1
6888:  BRA    6898
....................          {   
....................             delay_ms(30);visual=1; 
688A:  MOVLW  1E
688C:  MOVWF  xFC
688E:  MOVLB  0
6890:  CALL   0CF8
6894:  MOVLB  5
6896:  BSF    x65.3
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
6898:  BSF    F96.2
689A:  BTFSS  F84.2
689C:  BRA    68F2
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
689E:  MOVLW  04
68A0:  MOVWF  xF6
68A2:  MOVLW  AF
68A4:  MOVWF  xFC
68A6:  MOVLB  0
68A8:  CALL   0CF8
68AC:  MOVLB  5
68AE:  DECFSZ xF6,F
68B0:  BRA    68A2
68B2:  MOVLW  64
68B4:  MOVWF  x6A
68B6:  CLRF   xF7
68B8:  MOVLB  0
68BA:  CALL   0D62
68BE:  MOVLW  01
68C0:  MOVLB  5
68C2:  MOVWF  x71
68C4:  BSF    x65.3
....................             write_eeprom(60,MediaMovil); 
68C6:  MOVLW  3C
68C8:  MOVWF  FA9
68CA:  MOVFF  562,FA8
68CE:  BCF    FA6.6
68D0:  BCF    FA6.7
68D2:  BSF    FA6.2
68D4:  MOVF   FF2,W
68D6:  MOVWF  00
68D8:  BCF    FF2.7
68DA:  MOVLB  F
68DC:  MOVLW  55
68DE:  MOVWF  FA7
68E0:  MOVLW  AA
68E2:  MOVWF  FA7
68E4:  BSF    FA6.1
68E6:  BTFSC  FA6.1
68E8:  BRA    68E6
68EA:  BCF    FA6.2
68EC:  MOVF   00,W
68EE:  IORWF  FF2,F
68F0:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==106){ // Menu de Ajuste de Coeficiente Regulador 
68F2:  MOVF   x6A,W
68F4:  SUBLW  6A
68F6:  BTFSS  FD8.2
68F8:  BRA    6B3E
....................        
....................       if(Coeficiente>250) 
68FA:  CLRF   xF9
68FC:  CLRF   xF8
68FE:  MOVLW  7A
6900:  MOVWF  xF7
6902:  MOVLW  86
6904:  MOVWF  xF6
6906:  MOVFF  5CD,5FD
690A:  MOVFF  5CC,5FC
690E:  MOVFF  5CB,5FB
6912:  MOVFF  5CA,5FA
6916:  MOVLB  0
6918:  CALL   2676
691C:  BNC   692C
....................       { 
....................          Coeficiente=100; 
691E:  MOVLB  5
6920:  CLRF   xCD
6922:  CLRF   xCC
6924:  MOVLW  48
6926:  MOVWF  xCB
6928:  MOVLW  85
692A:  MOVWF  xCA
....................       } 
....................        
....................       if(visual==1) 
692C:  MOVLB  5
692E:  BTFSS  x65.3
6930:  BRA    69AE
....................       { 
....................          glcd_fillScreen(OFF); 
6932:  CLRF   xF7
6934:  MOVLB  0
6936:  CALL   0D62
....................          strcpy(Menus.Letra,"Coeficiente"); 
693A:  MOVLW  05
693C:  MOVWF  FEA
693E:  MOVLW  D6
6940:  MOVWF  FE9
6942:  MOVFF  FF2,5F6
6946:  BCF    FF2.7
6948:  MOVLW  00
694A:  CALL   0C16
694E:  TBLRD*-
6950:  TBLRD*+
6952:  MOVF   FF5,W
6954:  MOVWF  FEE
6956:  IORLW  00
6958:  BNZ   6950
695A:  MOVLB  5
695C:  BTFSC  xF6.7
695E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
6960:  MOVLW  05
6962:  MOVWF  xF7
6964:  MOVLW  D6
6966:  MOVWF  xF6
6968:  CLRF   xF8
696A:  CLRF   xF9
696C:  MOVLW  01
696E:  MOVWF  xFA
6970:  MOVLW  02
6972:  MOVWF  xFB
6974:  MOVLB  0
6976:  CALL   1394
....................           
....................          displayTemperatura(Coeficiente,30,30,0,3); 
697A:  MOVFF  5CD,5F9
697E:  MOVFF  5CC,5F8
6982:  MOVFF  5CB,5F7
6986:  MOVFF  5CA,5F6
698A:  CALL   275E
698E:  MOVFF  01,5F6
6992:  MOVFF  01,5F7
6996:  MOVLW  1E
6998:  MOVLB  5
699A:  MOVWF  xF8
699C:  MOVWF  xF9
699E:  CLRF   xFA
69A0:  MOVLW  03
69A2:  MOVWF  xFB
69A4:  MOVLB  0
69A6:  CALL   224C
....................           
....................          visual=0; 
69AA:  MOVLB  5
69AC:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
69AE:  BSF    F92.5
69B0:  BTFSS  F80.5
69B2:  BRA    6A3E
....................          {   
....................             if(Coeficiente>250) 
69B4:  CLRF   xF9
69B6:  CLRF   xF8
69B8:  MOVLW  7A
69BA:  MOVWF  xF7
69BC:  MOVLW  86
69BE:  MOVWF  xF6
69C0:  MOVFF  5CD,5FD
69C4:  MOVFF  5CC,5FC
69C8:  MOVFF  5CB,5FB
69CC:  MOVFF  5CA,5FA
69D0:  MOVLB  0
69D2:  CALL   2676
69D6:  BNC   69F8
....................             { 
....................                Coeficiente=250;delay_ms(100);visual=1; 
69D8:  MOVLB  5
69DA:  CLRF   xCD
69DC:  CLRF   xCC
69DE:  MOVLW  7A
69E0:  MOVWF  xCB
69E2:  MOVLW  86
69E4:  MOVWF  xCA
69E6:  MOVLW  64
69E8:  MOVWF  xFC
69EA:  MOVLB  0
69EC:  CALL   0CF8
69F0:  MOVLB  5
69F2:  BSF    x65.3
....................             } 
....................             else 
69F4:  BRA    6A3E
69F6:  MOVLB  0
....................             { 
....................                delay_ms(30);Coeficiente+=1.0;visual=1; 
69F8:  MOVLW  1E
69FA:  MOVLB  5
69FC:  MOVWF  xFC
69FE:  MOVLB  0
6A00:  CALL   0CF8
6A04:  BCF    FD8.1
6A06:  MOVFF  5CD,5FE
6A0A:  MOVFF  5CC,5FD
6A0E:  MOVFF  5CB,5FC
6A12:  MOVFF  5CA,5FB
6A16:  MOVLB  6
6A18:  CLRF   x02
6A1A:  CLRF   x01
6A1C:  CLRF   x00
6A1E:  MOVLW  7F
6A20:  MOVLB  5
6A22:  MOVWF  xFF
6A24:  MOVLB  0
6A26:  CALL   18A6
6A2A:  MOVFF  03,5CD
6A2E:  MOVFF  02,5CC
6A32:  MOVFF  01,5CB
6A36:  MOVFF  00,5CA
6A3A:  MOVLB  5
6A3C:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
6A3E:  BSF    F96.0
6A40:  BTFSS  F84.0
6A42:  BRA    6AAC
....................          {   
....................             if(Coeficiente>1) 
6A44:  CLRF   xF9
6A46:  CLRF   xF8
6A48:  CLRF   xF7
6A4A:  MOVLW  7F
6A4C:  MOVWF  xF6
6A4E:  MOVFF  5CD,5FD
6A52:  MOVFF  5CC,5FC
6A56:  MOVFF  5CB,5FB
6A5A:  MOVFF  5CA,5FA
6A5E:  MOVLB  0
6A60:  CALL   2676
6A64:  BNC   6AAE
....................             { 
....................                delay_ms(30);Coeficiente-=1.0;visual=1;      
6A66:  MOVLW  1E
6A68:  MOVLB  5
6A6A:  MOVWF  xFC
6A6C:  MOVLB  0
6A6E:  CALL   0CF8
6A72:  BSF    FD8.1
6A74:  MOVFF  5CD,5FE
6A78:  MOVFF  5CC,5FD
6A7C:  MOVFF  5CB,5FC
6A80:  MOVFF  5CA,5FB
6A84:  MOVLB  6
6A86:  CLRF   x02
6A88:  CLRF   x01
6A8A:  CLRF   x00
6A8C:  MOVLW  7F
6A8E:  MOVLB  5
6A90:  MOVWF  xFF
6A92:  MOVLB  0
6A94:  CALL   18A6
6A98:  MOVFF  03,5CD
6A9C:  MOVFF  02,5CC
6AA0:  MOVFF  01,5CB
6AA4:  MOVFF  00,5CA
6AA8:  MOVLB  5
6AAA:  BSF    x65.3
6AAC:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
6AAE:  BSF    F96.1
6AB0:  BTFSS  F84.1
6AB2:  BRA    6AC6
....................          {   
....................             delay_ms(30);visual=1; 
6AB4:  MOVLW  1E
6AB6:  MOVLB  5
6AB8:  MOVWF  xFC
6ABA:  MOVLB  0
6ABC:  CALL   0CF8
6AC0:  MOVLB  5
6AC2:  BSF    x65.3
6AC4:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
6AC6:  BSF    F96.2
6AC8:  BTFSS  F84.2
6ACA:  BRA    6B3C
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6ACC:  MOVLW  04
6ACE:  MOVLB  5
6AD0:  MOVWF  xF6
6AD2:  MOVLW  AF
6AD4:  MOVWF  xFC
6AD6:  MOVLB  0
6AD8:  CALL   0CF8
6ADC:  MOVLB  5
6ADE:  DECFSZ xF6,F
6AE0:  BRA    6AD2
6AE2:  MOVLW  64
6AE4:  MOVWF  x6A
6AE6:  CLRF   xF7
6AE8:  MOVLB  0
6AEA:  CALL   0D62
6AEE:  MOVLW  01
6AF0:  MOVLB  5
6AF2:  MOVWF  x71
6AF4:  BSF    x65.3
....................             write_eeprom(70,(int8)Coeficiente); 
6AF6:  MOVFF  5CD,5F9
6AFA:  MOVFF  5CC,5F8
6AFE:  MOVFF  5CB,5F7
6B02:  MOVFF  5CA,5F6
6B06:  MOVLB  0
6B08:  CALL   275E
6B0C:  MOVFF  01,5F6
6B10:  MOVLW  46
6B12:  MOVWF  FA9
6B14:  MOVFF  5F6,FA8
6B18:  BCF    FA6.6
6B1A:  BCF    FA6.7
6B1C:  BSF    FA6.2
6B1E:  MOVF   FF2,W
6B20:  MOVWF  00
6B22:  BCF    FF2.7
6B24:  MOVLB  F
6B26:  MOVLW  55
6B28:  MOVWF  FA7
6B2A:  MOVLW  AA
6B2C:  MOVWF  FA7
6B2E:  BSF    FA6.1
6B30:  BTFSC  FA6.1
6B32:  BRA    6B30
6B34:  BCF    FA6.2
6B36:  MOVF   00,W
6B38:  IORWF  FF2,F
6B3A:  MOVLB  0
6B3C:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................       if(tiemporeset>=60) 
6B3E:  MOVF   x68,W
6B40:  SUBLW  3B
6B42:  BC    6B6E
....................       { 
....................          glcd_init(ON); 
6B44:  MOVLW  01
6B46:  MOVWF  xF6
6B48:  MOVLB  0
6B4A:  CALL   0E74
....................          tiemporeset=0; 
6B4E:  MOVLB  5
6B50:  CLRF   x68
....................          if(tiempoventilador<2) 
6B52:  MOVF   x64,W
6B54:  SUBLW  01
6B56:  BNC   6B5E
....................          { 
....................             estado_ventilador=0; 
6B58:  BCF    x65.5
....................             tiempoventilador++; 
6B5A:  INCF   x64,F
....................          } 
....................          else 
6B5C:  BRA    6B6E
....................          { 
....................             if(tiempoventilador>2) 
6B5E:  MOVF   x64,W
6B60:  SUBLW  02
6B62:  BC    6B6A
....................             { 
....................                tiempoventilador=0; 
6B64:  CLRF   x64
....................                estado_ventilador=0; 
6B66:  BCF    x65.5
....................             } 
....................             else 
6B68:  BRA    6B6E
....................             { 
....................                estado_ventilador=1; 
6B6A:  BSF    x65.5
....................                tiempoventilador++; 
6B6C:  INCF   x64,F
....................             } 
....................          } 
....................          //estado_ventilador=!estado_ventilador; 
....................       }  
....................  
....................    } 
6B6E:  GOTO   3452
.................... } 
6B72:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
