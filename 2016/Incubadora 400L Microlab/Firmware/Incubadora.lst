CCS PCH C Compiler, Version 4.104, 5967               06-sep-16 17:37

               Filename: C:\Users\JP Electronica\Desktop\Incubadora 400L Microlab\Firmware\Incubadora.lst

               ROM used: 28618 bytes (87%)
                         Largest free fragment is 4146
               RAM used: 1530 (75%) at main() level
                         1591 (78%) worst case
               Stack:    5 worst case (4 in main + 1 for interrupts)

*
0000:  GOTO   2FFC
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0CA0
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... /// Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0CF8:  MOVLW  05
0CFA:  MOVWF  FEA
0CFC:  MOVLW  FC
0CFE:  MOVWF  FE9
0D00:  MOVF   FEF,W
0D02:  BZ    0D20
0D04:  MOVLW  0F
0D06:  MOVWF  01
0D08:  CLRF   00
0D0A:  DECFSZ 00,F
0D0C:  BRA    0D0A
0D0E:  DECFSZ 01,F
0D10:  BRA    0D08
0D12:  MOVLW  8F
0D14:  MOVWF  00
0D16:  DECFSZ 00,F
0D18:  BRA    0D16
0D1A:  NOP   
0D1C:  DECFSZ FEF,F
0D1E:  BRA    0D04
0D20:  RETLW  00
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
0EAA:  BCF    F93.2
0EAC:  BSF    F8A.2
....................    output_low(GLCD_E); 
0EAE:  BCF    F93.7
0EB0:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
0EB2:  BCF    F93.3
0EB4:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0EB6:  BCF    F93.4
0EB8:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
0EBA:  BCF    F93.5
0EBC:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
0EBE:  MOVLB  6
0EC0:  CLRF   x0C
0EC2:  MOVLW  C0
0EC4:  MOVWF  x0D
0EC6:  MOVLB  0
0EC8:  RCALL  0D58
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
0ECA:  MOVLW  01
0ECC:  MOVLB  6
0ECE:  MOVWF  x0C
0ED0:  MOVLW  C0
0ED2:  MOVWF  x0D
0ED4:  MOVLB  0
0ED6:  RCALL  0D58
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
0ED8:  MOVLB  6
0EDA:  CLRF   x0C
0EDC:  MOVLW  40
0EDE:  MOVWF  x0D
0EE0:  MOVLB  0
0EE2:  RCALL  0D58
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
0EE4:  MOVLW  01
0EE6:  MOVLB  6
0EE8:  MOVWF  x0C
0EEA:  MOVLW  40
0EEC:  MOVWF  x0D
0EEE:  MOVLB  0
0EF0:  RCALL  0D58
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
0EF2:  MOVLB  6
0EF4:  CLRF   x0C
0EF6:  MOVLW  B8
0EF8:  MOVWF  x0D
0EFA:  MOVLB  0
0EFC:  RCALL  0D58
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
0EFE:  MOVLW  01
0F00:  MOVLB  6
0F02:  MOVWF  x0C
0F04:  MOVLW  B8
0F06:  MOVWF  x0D
0F08:  MOVLB  0
0F0A:  RCALL  0D58
....................  
....................    if(mode == ON) 
0F0C:  MOVLB  5
0F0E:  DECFSZ xF6,W
0F10:  BRA    0F30
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
0F12:  MOVLB  6
0F14:  CLRF   x0C
0F16:  MOVLW  3F
0F18:  MOVWF  x0D
0F1A:  MOVLB  0
0F1C:  RCALL  0D58
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
0F1E:  MOVLW  01
0F20:  MOVLB  6
0F22:  MOVWF  x0C
0F24:  MOVLW  3F
0F26:  MOVWF  x0D
0F28:  MOVLB  0
0F2A:  RCALL  0D58
....................    } 
....................    else 
0F2C:  BRA    0F4A
0F2E:  MOVLB  5
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
0F30:  MOVLB  6
0F32:  CLRF   x0C
0F34:  MOVLW  3E
0F36:  MOVWF  x0D
0F38:  MOVLB  0
0F3A:  RCALL  0D58
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
0F3C:  MOVLW  01
0F3E:  MOVLB  6
0F40:  MOVWF  x0C
0F42:  MOVLW  3E
0F44:  MOVWF  x0D
0F46:  MOVLB  0
0F48:  RCALL  0D58
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
0F4A:  MOVLB  5
0F4C:  CLRF   xF7
0F4E:  MOVLB  0
0F50:  RCALL  0D98
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
0F52:  RCALL  0DF2
....................    #endif 
.................... } 
0F54:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
0DF2:  MOVLB  6
0DF4:  CLRF   x08
0DF6:  MOVLW  16
0DF8:  MOVWF  x07
....................    p2 = displayData.right; 
0DFA:  MOVLW  02
0DFC:  MOVWF  x0A
0DFE:  MOVLW  16
0E00:  MOVWF  x09
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
0E02:  CLRF   x05
0E04:  MOVF   x05,W
0E06:  SUBLW  07
0E08:  BNC   0EA6
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
0E0A:  BCF    F93.5
0E0C:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
0E0E:  CLRF   x0C
0E10:  MOVLW  40
0E12:  MOVWF  x0D
0E14:  MOVLB  0
0E16:  RCALL  0D58
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
0E18:  MOVLW  01
0E1A:  MOVLB  6
0E1C:  MOVWF  x0C
0E1E:  MOVLW  40
0E20:  MOVWF  x0D
0E22:  MOVLB  0
0E24:  RCALL  0D58
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
0E26:  MOVLB  6
0E28:  MOVF   x05,W
0E2A:  IORLW  B8
0E2C:  MOVWF  x0B
0E2E:  CLRF   x0C
0E30:  MOVWF  x0D
0E32:  MOVLB  0
0E34:  RCALL  0D58
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
0E36:  MOVLB  6
0E38:  MOVF   x05,W
0E3A:  IORLW  B8
0E3C:  MOVWF  x0B
0E3E:  MOVLW  01
0E40:  MOVWF  x0C
0E42:  MOVFF  60B,60D
0E46:  MOVLB  0
0E48:  RCALL  0D58
....................       output_high(GLCD_DI);                     // Set for data 
0E4A:  BCF    F93.5
0E4C:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
0E4E:  MOVLB  6
0E50:  CLRF   x06
0E52:  MOVF   x06,W
0E54:  SUBLW  3F
0E56:  BNC   0EA2
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
0E58:  MOVFF  608,03
0E5C:  MOVF   x07,W
0E5E:  INCF   x07,F
0E60:  BTFSC  FD8.2
0E62:  INCF   x08,F
0E64:  MOVWF  FE9
0E66:  MOVFF  03,FEA
0E6A:  MOVFF  FEF,60B
0E6E:  CLRF   x0C
0E70:  MOVFF  60B,60D
0E74:  MOVLB  0
0E76:  RCALL  0D58
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
0E78:  MOVLB  6
0E7A:  MOVFF  60A,03
0E7E:  MOVF   x09,W
0E80:  INCF   x09,F
0E82:  BTFSC  FD8.2
0E84:  INCF   x0A,F
0E86:  MOVWF  FE9
0E88:  MOVFF  03,FEA
0E8C:  MOVFF  FEF,60B
0E90:  MOVLW  01
0E92:  MOVWF  x0C
0E94:  MOVFF  60B,60D
0E98:  MOVLB  0
0E9A:  RCALL  0D58
....................       } 
0E9C:  MOVLB  6
0E9E:  INCF   x06,F
0EA0:  BRA    0E52
....................    } 
0EA2:  INCF   x05,F
0EA4:  BRA    0E04
.................... } 
0EA6:  MOVLB  0
0EA8:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
0F56:  MOVLB  6
0F58:  CLRF   x29
0F5A:  RRCF   x24,W
0F5C:  MOVWF  x28
0F5E:  RRCF   x28,F
0F60:  RRCF   x28,F
0F62:  MOVLW  1F
0F64:  ANDWF  x28,F
....................    temp *= 64; 
0F66:  RLCF   x28,F
0F68:  RLCF   x29,F
0F6A:  RLCF   x28,F
0F6C:  RLCF   x29,F
0F6E:  RLCF   x28,F
0F70:  RLCF   x29,F
0F72:  RLCF   x28,F
0F74:  RLCF   x29,F
0F76:  RLCF   x28,F
0F78:  RLCF   x29,F
0F7A:  RLCF   x28,F
0F7C:  RLCF   x29,F
0F7E:  MOVLW  C0
0F80:  ANDWF  x28,F
....................    temp += x; 
0F82:  MOVF   x23,W
0F84:  ADDWF  x28,F
0F86:  MOVLW  00
0F88:  ADDWFC x29,F
....................  
....................    if(x > 63) 
0F8A:  MOVF   x23,W
0F8C:  SUBLW  3F
0F8E:  BC    0FAA
....................    { 
....................       p = displayData.right + temp - 64; 
0F90:  MOVLW  16
0F92:  ADDWF  x28,W
0F94:  MOVWF  x2A
0F96:  MOVLW  02
0F98:  ADDWFC x29,W
0F9A:  MOVWF  x2B
0F9C:  MOVLW  40
0F9E:  SUBWF  x2A,W
0FA0:  MOVWF  x26
0FA2:  MOVLW  00
0FA4:  SUBWFB x2B,W
0FA6:  MOVWF  x27
....................    } 
....................    else 
0FA8:  BRA    0FB6
....................    { 
....................       p = displayData.left + temp; 
0FAA:  MOVLW  16
0FAC:  ADDWF  x28,W
0FAE:  MOVWF  x26
0FB0:  MOVLW  00
0FB2:  ADDWFC x29,W
0FB4:  MOVWF  x27
....................    } 
....................  
....................    if(color) 
0FB6:  MOVF   x25,F
0FB8:  BZ    0FE4
....................    { 
....................       bit_set(*p, y%8); 
0FBA:  MOVFF  627,03
0FBE:  MOVFF  626,FE9
0FC2:  MOVFF  627,FEA
0FC6:  MOVF   x24,W
0FC8:  ANDLW  07
0FCA:  MOVWF  x2A
0FCC:  MOVLW  01
0FCE:  MOVWF  00
0FD0:  MOVF   x2A,W
0FD2:  MOVWF  01
0FD4:  BZ    0FDE
0FD6:  BCF    FD8.0
0FD8:  RLCF   00,F
0FDA:  DECFSZ 01,F
0FDC:  BRA    0FD6
0FDE:  MOVF   00,W
0FE0:  IORWF  FEF,F
....................    } 
....................    else 
0FE2:  BRA    100E
....................    { 
....................       bit_clear(*p, y%8); 
0FE4:  MOVFF  627,03
0FE8:  MOVFF  626,FE9
0FEC:  MOVFF  627,FEA
0FF0:  MOVF   x24,W
0FF2:  ANDLW  07
0FF4:  MOVWF  x2A
0FF6:  MOVLW  01
0FF8:  MOVWF  00
0FFA:  MOVF   x2A,W
0FFC:  MOVWF  01
0FFE:  BZ    1008
1000:  BCF    FD8.0
1002:  RLCF   00,F
1004:  DECFSZ 01,F
1006:  BRA    1000
1008:  MOVF   00,W
100A:  XORLW  FF
100C:  ANDWF  FEF,F
....................    } 
.................... } 
100E:  MOVLB  0
1010:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
0D98:  MOVLB  5
0D9A:  CLRF   xFA
0D9C:  MOVLW  16
0D9E:  MOVWF  xF9
....................    p2 = displayData.right; 
0DA0:  MOVLW  02
0DA2:  MOVWF  xFC
0DA4:  MOVLW  16
0DA6:  MOVWF  xFB
....................    data = 0xFF * color; 
0DA8:  MOVF   xF7,W
0DAA:  MULLW  FF
0DAC:  MOVFF  FF3,5F8
....................  
....................    for(i=0; i<512; ++i) 
0DB0:  CLRF   xFE
0DB2:  CLRF   xFD
0DB4:  MOVF   xFE,W
0DB6:  SUBLW  01
0DB8:  BNC   0DEE
....................    { 
....................       *p1++ = data; 
0DBA:  MOVFF  5FA,03
0DBE:  MOVF   xF9,W
0DC0:  INCF   xF9,F
0DC2:  BTFSC  FD8.2
0DC4:  INCF   xFA,F
0DC6:  MOVWF  FE9
0DC8:  MOVFF  03,FEA
0DCC:  MOVFF  5F8,FEF
....................       *p2++ = data; 
0DD0:  MOVFF  5FC,03
0DD4:  MOVF   xFB,W
0DD6:  INCF   xFB,F
0DD8:  BTFSC  FD8.2
0DDA:  INCF   xFC,F
0DDC:  MOVWF  FE9
0DDE:  MOVFF  03,FEA
0DE2:  MOVFF  5F8,FEF
....................    } 
0DE6:  INCF   xFD,F
0DE8:  BTFSC  FD8.2
0DEA:  INCF   xFE,F
0DEC:  BRA    0DB4
.................... } 
0DEE:  MOVLB  0
0DF0:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0D58:  MOVLB  6
0D5A:  MOVF   x0C,F
0D5C:  BZ    0D64
....................       output_high(GLCD_CS2); 
0D5E:  BCF    F93.4
0D60:  BSF    F8A.4
....................    else 
0D62:  BRA    0D68
....................       output_high(GLCD_CS1); 
0D64:  BCF    F93.3
0D66:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0D68:  BCF    F93.6
0D6A:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
0D6C:  CLRF   F95
0D6E:  MOVFF  60D,F8C
....................    delay_cycles(50); 
0D72:  MOVLW  10
0D74:  MOVWF  00
0D76:  DECFSZ 00,F
0D78:  BRA    0D76
0D7A:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0D7C:  BCF    F93.7
0D7E:  BSF    F8A.7
....................    delay_cycles(250); 
0D80:  MOVLW  53
0D82:  MOVWF  00
0D84:  DECFSZ 00,F
0D86:  BRA    0D84
....................    output_low(GLCD_E); 
0D88:  BCF    F93.7
0D8A:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0D8C:  BCF    F93.3
0D8E:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
0D90:  BCF    F93.4
0D92:  BCF    F8A.4
.................... } 
0D94:  MOVLB  0
0D96:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
11CA:  MOVLW  01
11CC:  MOVLB  6
11CE:  MOVWF  x1C
11D0:  MOVWF  x1D
11D2:  CLRF   x22
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
11D4:  MOVF   x13,W
11D6:  SUBWF  x15,W
11D8:  MOVWF  x23
11DA:  MOVF   x23,W
11DC:  BTFSS  x23.7
11DE:  BRA    11E6
11E0:  MOVLW  00
11E2:  BSF    FD8.0
11E4:  SUBFWB x23,W
11E6:  CLRF   03
11E8:  MOVWF  x1A
11EA:  MOVFF  03,61B
....................    dy = abs((signed int8)(y2 - y1)); 
11EE:  MOVF   x14,W
11F0:  SUBWF  x16,W
11F2:  MOVWF  x23
11F4:  MOVF   x23,W
11F6:  BTFSS  x23.7
11F8:  BRA    1200
11FA:  MOVLW  00
11FC:  BSF    FD8.0
11FE:  SUBFWB x23,W
1200:  CLRF   03
1202:  MOVWF  x18
1204:  MOVFF  03,619
....................    #endif 
....................  
....................    if(x1 > x2) 
1208:  MOVF   x13,W
120A:  SUBWF  x15,W
120C:  BC    1212
....................       addx = -1; 
120E:  MOVLW  FF
1210:  MOVWF  x1C
....................    if(y1 > y2) 
1212:  MOVF   x14,W
1214:  SUBWF  x16,W
1216:  BC    121C
....................       addy = -1; 
1218:  MOVLW  FF
121A:  MOVWF  x1D
....................  
....................    if(dx >= dy) 
121C:  MOVF   x19,W
121E:  SUBWF  x1B,W
1220:  BNC   1298
1222:  BNZ   122A
1224:  MOVF   x18,W
1226:  SUBWF  x1A,W
1228:  BNC   1298
....................    { 
....................       dy *= 2; 
122A:  BCF    FD8.0
122C:  RLCF   x18,F
122E:  RLCF   x19,F
....................       P = dy - dx; 
1230:  MOVF   x1A,W
1232:  SUBWF  x18,W
1234:  MOVWF  00
1236:  MOVF   x1B,W
1238:  SUBWFB x19,W
123A:  MOVFF  00,61E
123E:  MOVWF  x1F
....................       diff = P - dx; 
1240:  MOVF   x1A,W
1242:  SUBWF  x1E,W
1244:  MOVWF  x20
1246:  MOVF   x1B,W
1248:  SUBWFB x1F,W
124A:  MOVWF  x21
....................  
....................       for(; i<=dx; ++i) 
124C:  MOVF   x1B,F
124E:  BNZ   1256
1250:  MOVF   x22,W
1252:  SUBWF  x1A,W
1254:  BNC   1296
....................       { 
....................          glcd_pixel(x1, y1, color); 
1256:  MOVFF  613,623
125A:  MOVFF  614,624
125E:  MOVFF  617,625
1262:  MOVLB  0
1264:  RCALL  0F56
....................  
....................          if(P < 0) 
1266:  MOVLB  6
1268:  BTFSC  x1F.7
126A:  BRA    126E
126C:  BRA    127E
....................          { 
....................             P  += dy; 
126E:  MOVF   x18,W
1270:  ADDWF  x1E,F
1272:  MOVF   x19,W
1274:  ADDWFC x1F,F
....................             x1 += addx; 
1276:  MOVF   x1C,W
1278:  ADDWF  x13,W
127A:  MOVWF  x13
....................          } 
....................          else 
127C:  BRA    1292
....................          { 
....................             P  += diff; 
127E:  MOVF   x20,W
1280:  ADDWF  x1E,F
1282:  MOVF   x21,W
1284:  ADDWFC x1F,F
....................             x1 += addx; 
1286:  MOVF   x1C,W
1288:  ADDWF  x13,W
128A:  MOVWF  x13
....................             y1 += addy; 
128C:  MOVF   x1D,W
128E:  ADDWF  x14,W
1290:  MOVWF  x14
....................          } 
....................       } 
1292:  INCF   x22,F
1294:  BRA    124C
....................    } 
....................    else 
1296:  BRA    1304
....................    { 
....................       dx *= 2; 
1298:  BCF    FD8.0
129A:  RLCF   x1A,F
129C:  RLCF   x1B,F
....................       P = dx - dy; 
129E:  MOVF   x18,W
12A0:  SUBWF  x1A,W
12A2:  MOVWF  00
12A4:  MOVF   x19,W
12A6:  SUBWFB x1B,W
12A8:  MOVFF  00,61E
12AC:  MOVWF  x1F
....................       diff = P - dy; 
12AE:  MOVF   x18,W
12B0:  SUBWF  x1E,W
12B2:  MOVWF  x20
12B4:  MOVF   x19,W
12B6:  SUBWFB x1F,W
12B8:  MOVWF  x21
....................  
....................       for(; i<=dy; ++i) 
12BA:  MOVF   x19,F
12BC:  BNZ   12C4
12BE:  MOVF   x22,W
12C0:  SUBWF  x18,W
12C2:  BNC   1304
....................       { 
....................          glcd_pixel(x1, y1, color); 
12C4:  MOVFF  613,623
12C8:  MOVFF  614,624
12CC:  MOVFF  617,625
12D0:  MOVLB  0
12D2:  RCALL  0F56
....................  
....................          if(P < 0) 
12D4:  MOVLB  6
12D6:  BTFSC  x1F.7
12D8:  BRA    12DC
12DA:  BRA    12EC
....................          { 
....................             P  += dx; 
12DC:  MOVF   x1A,W
12DE:  ADDWF  x1E,F
12E0:  MOVF   x1B,W
12E2:  ADDWFC x1F,F
....................             y1 += addy; 
12E4:  MOVF   x1D,W
12E6:  ADDWF  x14,W
12E8:  MOVWF  x14
....................          } 
....................          else 
12EA:  BRA    1300
....................          { 
....................             P  += diff; 
12EC:  MOVF   x20,W
12EE:  ADDWF  x1E,F
12F0:  MOVF   x21,W
12F2:  ADDWFC x1F,F
....................             x1 += addx; 
12F4:  MOVF   x1C,W
12F6:  ADDWF  x13,W
12F8:  MOVWF  x13
....................             y1 += addy; 
12FA:  MOVF   x1D,W
12FC:  ADDWF  x14,W
12FE:  MOVWF  x14
....................          } 
....................       } 
1300:  INCF   x22,F
1302:  BRA    12BA
....................    } 
.................... } 
1304:  MOVLB  0
1306:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
1308:  MOVLB  6
130A:  MOVF   x0C,F
130C:  BZ    136A
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
130E:  MOVF   x0A,W
1310:  SUBWF  x08,W
1312:  BC    131E
....................       { 
....................          xmin = x1; 
1314:  MOVFF  608,60F
....................          xmax = x2; 
1318:  MOVFF  60A,610
....................       } 
....................       else 
131C:  BRA    1326
....................       { 
....................          xmin = x2; 
131E:  MOVFF  60A,60F
....................          xmax = x1; 
1322:  MOVFF  608,610
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
1326:  MOVF   x0B,W
1328:  SUBWF  x09,W
132A:  BC    1336
....................       { 
....................          ymin = y1; 
132C:  MOVFF  609,611
....................          ymax = y2; 
1330:  MOVFF  60B,612
....................       } 
....................       else 
1334:  BRA    133E
....................       { 
....................          ymin = y2; 
1336:  MOVFF  60B,611
....................          ymax = y1; 
133A:  MOVFF  609,612
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
133E:  MOVF   x0F,W
1340:  SUBWF  x10,W
1342:  BNC   1368
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
1344:  MOVFF  611,60E
1348:  MOVF   x0E,W
134A:  SUBWF  x12,W
134C:  BNC   1364
....................          { 
....................             glcd_pixel(xmin, i, color); 
134E:  MOVFF  60F,623
1352:  MOVFF  60E,624
1356:  MOVFF  60D,625
135A:  MOVLB  0
135C:  RCALL  0F56
....................          } 
135E:  MOVLB  6
1360:  INCF   x0E,F
1362:  BRA    1348
....................       } 
1364:  INCF   x0F,F
1366:  BRA    133E
....................    } 
....................    else 
1368:  BRA    13C6
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
136A:  MOVFF  608,613
136E:  MOVFF  609,614
1372:  MOVFF  60A,615
1376:  MOVFF  609,616
137A:  MOVFF  60D,617
137E:  MOVLB  0
1380:  RCALL  11CA
....................       glcd_line(x1, y2, x2, y2, color); 
1382:  MOVFF  608,613
1386:  MOVFF  60B,614
138A:  MOVFF  60A,615
138E:  MOVFF  60B,616
1392:  MOVFF  60D,617
1396:  RCALL  11CA
....................       glcd_line(x1, y1, x1, y2, color); 
1398:  MOVFF  608,613
139C:  MOVFF  609,614
13A0:  MOVFF  608,615
13A4:  MOVFF  60B,616
13A8:  MOVFF  60D,617
13AC:  RCALL  11CA
....................       glcd_line(x2, y1, x2, y2, color); 
13AE:  MOVFF  60A,613
13B2:  MOVFF  609,614
13B6:  MOVFF  60A,615
13BA:  MOVFF  60B,616
13BE:  MOVFF  60D,617
13C2:  RCALL  11CA
13C4:  MOVLB  6
....................    } 
.................... } 
13C6:  MOVLB  0
13C8:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
1F7C:  MOVLB  5
1F7E:  CLRF   xFB
....................    b = radius; 
1F80:  MOVFF  5F8,5FC
....................    P = 1 - radius; 
1F84:  MOVLW  01
1F86:  BSF    FD8.0
1F88:  SUBFWB xF8,W
1F8A:  MOVWF  xFD
....................  
....................    do 
....................    { 
....................       if(fill) 
1F8C:  MOVF   xF9,F
1F8E:  BZ    2072
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
1F90:  MOVF   xFB,W
1F92:  SUBWF  xF6,W
1F94:  MOVWF  xFE
1F96:  MOVF   xFC,W
1F98:  ADDWF  xF7,W
1F9A:  MOVWF  xFF
1F9C:  MOVF   xFB,W
1F9E:  ADDWF  xF6,W
1FA0:  MOVLB  6
1FA2:  MOVWF  x00
1FA4:  MOVLB  5
1FA6:  MOVF   xFC,W
1FA8:  ADDWF  xF7,W
1FAA:  MOVLB  6
1FAC:  MOVWF  x01
1FAE:  MOVFF  5FE,613
1FB2:  MOVFF  5FF,614
1FB6:  MOVFF  600,615
1FBA:  MOVWF  x16
1FBC:  MOVFF  5FA,617
1FC0:  MOVLB  0
1FC2:  CALL   11CA
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
1FC6:  MOVLB  5
1FC8:  MOVF   xFB,W
1FCA:  SUBWF  xF6,W
1FCC:  MOVWF  xFE
1FCE:  MOVF   xFC,W
1FD0:  SUBWF  xF7,W
1FD2:  MOVWF  xFF
1FD4:  MOVF   xFB,W
1FD6:  ADDWF  xF6,W
1FD8:  MOVLB  6
1FDA:  MOVWF  x00
1FDC:  MOVLB  5
1FDE:  MOVF   xFC,W
1FE0:  SUBWF  xF7,W
1FE2:  MOVLB  6
1FE4:  MOVWF  x01
1FE6:  MOVFF  5FE,613
1FEA:  MOVFF  5FF,614
1FEE:  MOVFF  600,615
1FF2:  MOVWF  x16
1FF4:  MOVFF  5FA,617
1FF8:  MOVLB  0
1FFA:  CALL   11CA
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
1FFE:  MOVLB  5
2000:  MOVF   xFC,W
2002:  SUBWF  xF6,W
2004:  MOVWF  xFE
2006:  MOVF   xFB,W
2008:  ADDWF  xF7,W
200A:  MOVWF  xFF
200C:  MOVF   xFC,W
200E:  ADDWF  xF6,W
2010:  MOVLB  6
2012:  MOVWF  x00
2014:  MOVLB  5
2016:  MOVF   xFB,W
2018:  ADDWF  xF7,W
201A:  MOVLB  6
201C:  MOVWF  x01
201E:  MOVFF  5FE,613
2022:  MOVFF  5FF,614
2026:  MOVFF  600,615
202A:  MOVWF  x16
202C:  MOVFF  5FA,617
2030:  MOVLB  0
2032:  CALL   11CA
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
2036:  MOVLB  5
2038:  MOVF   xFC,W
203A:  SUBWF  xF6,W
203C:  MOVWF  xFE
203E:  MOVF   xFB,W
2040:  SUBWF  xF7,W
2042:  MOVWF  xFF
2044:  MOVF   xFC,W
2046:  ADDWF  xF6,W
2048:  MOVLB  6
204A:  MOVWF  x00
204C:  MOVLB  5
204E:  MOVF   xFB,W
2050:  SUBWF  xF7,W
2052:  MOVLB  6
2054:  MOVWF  x01
2056:  MOVFF  5FE,613
205A:  MOVFF  5FF,614
205E:  MOVFF  600,615
2062:  MOVWF  x16
2064:  MOVFF  5FA,617
2068:  MOVLB  0
206A:  CALL   11CA
....................       } 
....................       else 
206E:  BRA    2170
2070:  MOVLB  5
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2072:  MOVF   xF6,W
2074:  ADDWF  xFB,W
2076:  MOVWF  xFE
2078:  MOVF   xF7,W
207A:  ADDWF  xFC,W
207C:  MOVWF  xFF
207E:  MOVFF  5FE,623
2082:  MOVFF  FE8,624
2086:  MOVFF  5FA,625
208A:  MOVLB  0
208C:  CALL   0F56
....................          glcd_pixel(b+x, a+y, color); 
2090:  MOVLB  5
2092:  MOVF   xF6,W
2094:  ADDWF  xFC,W
2096:  MOVWF  xFE
2098:  MOVF   xF7,W
209A:  ADDWF  xFB,W
209C:  MOVWF  xFF
209E:  MOVFF  5FE,623
20A2:  MOVFF  FE8,624
20A6:  MOVFF  5FA,625
20AA:  MOVLB  0
20AC:  CALL   0F56
....................          glcd_pixel(x-a, b+y, color); 
20B0:  MOVLB  5
20B2:  MOVF   xFB,W
20B4:  SUBWF  xF6,W
20B6:  MOVWF  xFE
20B8:  MOVF   xF7,W
20BA:  ADDWF  xFC,W
20BC:  MOVWF  xFF
20BE:  MOVFF  5FE,623
20C2:  MOVFF  FE8,624
20C6:  MOVFF  5FA,625
20CA:  MOVLB  0
20CC:  CALL   0F56
....................          glcd_pixel(x-b, a+y, color); 
20D0:  MOVLB  5
20D2:  MOVF   xFC,W
20D4:  SUBWF  xF6,W
20D6:  MOVWF  xFE
20D8:  MOVF   xF7,W
20DA:  ADDWF  xFB,W
20DC:  MOVWF  xFF
20DE:  MOVFF  5FE,623
20E2:  MOVFF  FE8,624
20E6:  MOVFF  5FA,625
20EA:  MOVLB  0
20EC:  CALL   0F56
....................          glcd_pixel(b+x, y-a, color); 
20F0:  MOVLB  5
20F2:  MOVF   xF6,W
20F4:  ADDWF  xFC,W
20F6:  MOVWF  xFE
20F8:  MOVF   xFB,W
20FA:  SUBWF  xF7,W
20FC:  MOVWF  xFF
20FE:  MOVFF  5FE,623
2102:  MOVFF  FE8,624
2106:  MOVFF  5FA,625
210A:  MOVLB  0
210C:  CALL   0F56
....................          glcd_pixel(a+x, y-b, color); 
2110:  MOVLB  5
2112:  MOVF   xF6,W
2114:  ADDWF  xFB,W
2116:  MOVWF  xFE
2118:  MOVF   xFC,W
211A:  SUBWF  xF7,W
211C:  MOVWF  xFF
211E:  MOVFF  5FE,623
2122:  MOVFF  FE8,624
2126:  MOVFF  5FA,625
212A:  MOVLB  0
212C:  CALL   0F56
....................          glcd_pixel(x-a, y-b, color); 
2130:  MOVLB  5
2132:  MOVF   xFB,W
2134:  SUBWF  xF6,W
2136:  MOVWF  xFE
2138:  MOVF   xFC,W
213A:  SUBWF  xF7,W
213C:  MOVWF  xFF
213E:  MOVFF  5FE,623
2142:  MOVFF  FE8,624
2146:  MOVFF  5FA,625
214A:  MOVLB  0
214C:  CALL   0F56
....................          glcd_pixel(x-b, y-a, color); 
2150:  MOVLB  5
2152:  MOVF   xFC,W
2154:  SUBWF  xF6,W
2156:  MOVWF  xFE
2158:  MOVF   xFB,W
215A:  SUBWF  xF7,W
215C:  MOVWF  xFF
215E:  MOVFF  5FE,623
2162:  MOVFF  FE8,624
2166:  MOVFF  5FA,625
216A:  MOVLB  0
216C:  CALL   0F56
....................       } 
....................  
....................       if(P < 0) 
2170:  MOVLB  5
2172:  BTFSC  xFD.7
2174:  BRA    2178
2176:  BRA    2194
....................          P += 3 + 2 * a++; 
2178:  MOVF   xFB,W
217A:  INCF   xFB,F
217C:  MOVWF  xFE
217E:  MOVLW  02
2180:  MOVWF  xFF
2182:  MOVFF  5FE,600
2186:  MOVLB  0
2188:  RCALL  1F2C
218A:  MOVF   01,W
218C:  ADDLW  03
218E:  MOVLB  5
2190:  ADDWF  xFD,F
....................       else 
2192:  BRA    21B6
....................          P += 5 + 2 * (a++ - b--); 
2194:  MOVF   xFB,W
2196:  INCF   xFB,F
2198:  MOVWF  xFE
219A:  MOVF   xFC,W
219C:  DECF   xFC,F
219E:  SUBWF  xFE,W
21A0:  MOVWF  xFE
21A2:  MOVLW  02
21A4:  MOVWF  xFF
21A6:  MOVFF  5FE,600
21AA:  MOVLB  0
21AC:  RCALL  1F2C
21AE:  MOVF   01,W
21B0:  ADDLW  05
21B2:  MOVLB  5
21B4:  ADDWF  xFD,F
....................     } while(a <= b); 
21B6:  MOVF   xFB,W
21B8:  XORLW  80
21BA:  MOVWF  00
21BC:  MOVF   xFC,W
21BE:  XORLW  80
21C0:  SUBWF  00,W
21C2:  BTFSC  FD8.2
21C4:  BRA    1F8C
21C6:  BTFSS  FD8.0
21C8:  BRA    1F8C
.................... } 
21CA:  MOVLB  0
21CC:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
1012:  MOVFF  60A,03
1016:  MOVLB  6
1018:  MOVFF  609,FE9
101C:  MOVFF  60A,FEA
1020:  MOVF   FEF,F
1022:  BTFSC  FD8.2
1024:  BRA    11C6
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
1026:  MOVFF  60A,03
102A:  MOVFF  609,FE9
102E:  MOVFF  60A,FEA
1032:  MOVF   FEF,W
1034:  SUBLW  52
1036:  BNC   1086
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
1038:  MOVFF  60A,03
103C:  MOVFF  609,FE9
1040:  MOVFF  60A,FEA
1044:  MOVLW  20
1046:  SUBWF  FEF,W
1048:  MULLW  05
104A:  MOVF   FF3,W
104C:  CLRF   03
104E:  MOVWF  x16
1050:  MOVLW  06
1052:  MOVWF  FEA
1054:  MOVLW  11
1056:  MOVWF  FE9
1058:  CLRF   x1A
105A:  MOVFF  616,619
105E:  MOVFF  FF2,617
1062:  BCF    FF2.7
1064:  MOVLW  05
1066:  MOVWF  01
1068:  CLRF   FF7
106A:  MOVF   x16,W
106C:  MOVLB  0
106E:  CALL   0096
1072:  TBLRD*-
1074:  TBLRD*+
1076:  MOVFF  FF5,FEE
107A:  DECFSZ 01,F
107C:  BRA    1074
107E:  MOVLB  6
1080:  BTFSC  x17.7
1082:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
1084:  BRA    10F0
1086:  MOVFF  60A,03
108A:  MOVFF  609,FE9
108E:  MOVFF  60A,FEA
1092:  MOVF   FEF,W
1094:  SUBLW  7E
1096:  BNC   10E6
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
1098:  MOVFF  60A,03
109C:  MOVFF  609,FE9
10A0:  MOVFF  60A,FEA
10A4:  MOVLW  53
10A6:  SUBWF  FEF,W
10A8:  MULLW  05
10AA:  MOVF   FF3,W
10AC:  CLRF   03
10AE:  MOVWF  x16
10B0:  MOVLW  06
10B2:  MOVWF  FEA
10B4:  MOVLW  11
10B6:  MOVWF  FE9
10B8:  CLRF   x1A
10BA:  MOVFF  616,619
10BE:  MOVFF  FF2,617
10C2:  BCF    FF2.7
10C4:  MOVLW  05
10C6:  MOVWF  01
10C8:  CLRF   FF7
10CA:  MOVF   x16,W
10CC:  MOVLB  0
10CE:  CALL   01B0
10D2:  TBLRD*-
10D4:  TBLRD*+
10D6:  MOVFF  FF5,FEE
10DA:  DECFSZ 01,F
10DC:  BRA    10D4
10DE:  MOVLB  6
10E0:  BTFSC  x17.7
10E2:  BSF    FF2.7
....................       else 
10E4:  BRA    10F0
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
10E6:  CLRF   x11
10E8:  CLRF   x12
10EA:  CLRF   x13
10EC:  CLRF   x14
10EE:  CLRF   x15
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
10F0:  MOVFF  60A,03
10F4:  MOVF   x09,W
10F6:  MOVWF  FE9
10F8:  MOVFF  03,FEA
10FC:  MOVF   FEF,W
10FE:  XORLW  0A
1100:  MOVLB  0
1102:  BZ    110A
1104:  XORLW  07
1106:  BZ    111A
1108:  BRA    1120
....................          case '\n': 
....................             y += 7*size + 1; 
110A:  MOVLB  6
110C:  MOVF   x0B,W
110E:  MULLW  07
1110:  MOVF   FF3,W
1112:  ADDLW  01
1114:  ADDWF  x08,F
....................             continue; 
1116:  BRA    11B8
1118:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
111A:  MOVLB  6
111C:  CLRF   x07
....................             continue; 
111E:  BRA    11B8
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1120:  MOVLB  6
1122:  MOVF   x0B,W
1124:  MULLW  05
1126:  MOVF   FF3,W
1128:  ADDWF  x07,W
112A:  SUBLW  7F
112C:  BC    113A
....................       { 
....................          x = 0;                           // Set x at far left position 
112E:  CLRF   x07
....................          y += 7*size + 1;                 // Set y at next position down 
1130:  MOVF   x0B,W
1132:  MULLW  07
1134:  MOVF   FF3,W
1136:  ADDLW  01
1138:  ADDWF  x08,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
113A:  CLRF   x0D
113C:  MOVF   x0D,W
113E:  SUBLW  04
1140:  BNC   11B8
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
1142:  CLRF   x0E
1144:  MOVF   x0E,W
1146:  SUBLW  06
1148:  BNC   11B0
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
114A:  CLRF   03
114C:  MOVF   x0D,W
114E:  ADDLW  11
1150:  MOVWF  FE9
1152:  MOVLW  06
1154:  ADDWFC 03,W
1156:  MOVWF  FEA
1158:  MOVFF  FEF,616
115C:  MOVFF  616,00
1160:  MOVF   x0E,W
1162:  MOVWF  01
1164:  BZ    116E
1166:  BCF    FD8.0
1168:  RRCF   00,F
116A:  DECFSZ 01,F
116C:  BRA    1166
116E:  BTFSS  00.0
1170:  BRA    11AC
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
1172:  CLRF   x0F
1174:  MOVF   x0B,W
1176:  SUBWF  x0F,W
1178:  BC    11AC
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
117A:  CLRF   x10
117C:  MOVF   x0B,W
117E:  SUBWF  x10,W
1180:  BC    11A8
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
1182:  MOVF   x10,W
1184:  ADDWF  x07,W
1186:  MOVWF  x16
1188:  MOVF   x0E,W
118A:  MULWF  x0B
118C:  MOVF   FF3,W
118E:  ADDWF  x08,W
1190:  ADDWF  x0F,W
1192:  MOVWF  x17
1194:  MOVFF  616,623
1198:  MOVWF  x24
119A:  MOVFF  60C,625
119E:  MOVLB  0
11A0:  RCALL  0F56
....................                   } 
11A2:  MOVLB  6
11A4:  INCF   x10,F
11A6:  BRA    117C
....................                } 
11A8:  INCF   x0F,F
11AA:  BRA    1174
....................             } 
....................          } 
11AC:  INCF   x0E,F
11AE:  BRA    1144
....................       } 
11B0:  INCF   x0D,F
11B2:  MOVF   x0B,W
11B4:  ADDWF  x07,F
11B6:  BRA    113C
....................    } 
11B8:  INCF   x09,F
11BA:  BTFSC  FD8.2
11BC:  INCF   x0A,F
11BE:  INCF   x07,F
11C0:  MOVLB  0
11C2:  BRA    1012
11C4:  MOVLB  6
.................... } 
11C6:  MOVLB  0
11C8:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Horno [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x00, 0x00, 0x0E, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x02, 0x00, 0x0E, 
.................... 0x60, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x05, 0x00, 0x0E, 
.................... 0x70, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x02, 0x00, 0x0E, 
.................... 0x60, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xE1, 0xC0, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x01, 0x80, 0x60, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x78, 0x10, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x06, 0x7C, 0x18, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0x7C, 0x08, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x3C, 0x04, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x10, 0x04, 0x0E, 
.................... 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x0C, 0xE4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x2D, 0xF4, 0x0E, 
.................... 0x02, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x63, 0xF4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0xF1, 0xE4, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x70, 0x10, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x30, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xC0, 0xC0, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x7F, 0x80, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
.................... // Definición de teclado - NO 
.................... #define   UP            input(PIN_A5) 
.................... #define   DOWN          input(PIN_E0) 
.................... #define   RIGHT         input(PIN_E1) 
.................... #define   LEFT          input(PIN_E2) 
....................  
.................... //#define   DOOR          input(PIN_A3) 
.................... #define   TERM          input(PIN_A4) 
....................  
.................... // Definición de Salidas 
.................... #define   Resistencia_on     output_bit(PIN_C0,1) 
.................... #define   Resistencia_off    output_bit(PIN_C0,0) 
.................... #define   Resistencia2_on    output_bit(PIN_C2,1) 
.................... #define   Resistencia2_off   output_bit(PIN_C2,0) 
.................... #define   Ventilador_on      output_bit(PIN_C1,1) 
.................... #define   Ventilador_off     output_bit(PIN_C1,0) 
.................... #define   Libre1_on          output_bit(PIN_C6,1) 
.................... #define   Libre1_off         output_bit(PIN_C6,0) 
.................... #define   Libre2_on          output_bit(PIN_C7,1) 
.................... #define   Libre2_off         output_bit(PIN_C7,0) 
.................... #define   Libre3_on          output_bit(PIN_B0,1) 
.................... #define   Libre3_off         output_bit(PIN_B0,0) 
.................... #define   Libre4_on          output_bit(PIN_B1,1) 
.................... #define   Libre4_off         output_bit(PIN_B1,0) 
....................  
.................... float promedio[80]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float X[2]={0.0,0.0}; 
.................... int8 h=0,l=0,Ajuste=0,Ajusten=0,MediaMovil=10,tiemporecta=0,tiempoventilador=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,visual=1,Lectura=0,estado_ventilador=0; 
.................... short flag_clear=0,flag_clear2=0,flag_clear3=0,flag_clear4=0,flag_tiempocalentamiento=0,flag_display=0,flag_setpoint=0,flag_control=0; 
.................... int8 y=0,tiemporeset=0,flag_ventilador=0; 
.................... int8 Menu=0, unidad=1,i=0,Pausa=0,Pausa_ant=0,TiempoControl=0; 
.................... int8 Setpoint=0,Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,tinicio=0,tiempocalentamiento=0,tiemposetpoint=0,Puerta=0; 
.................... float Potencia=0.0,Tpulsomin=0.0,Gananciamax=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float V0=0.0,R1=10000.0,Pt,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=25.0,desvio=0.0,Coeficiente=100.0; 
.................... float Aumento=0.0,Temperatura=0.0; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void ActualizaRecta(){ 
....................    X[y]=Temperatura; 
*
26F8:  MOVLB  5
26FA:  MOVF   x67,W
26FC:  MULLW  04
26FE:  MOVF   FF3,W
2700:  CLRF   03
2702:  ADDLW  56
2704:  MOVWF  FE9
2706:  MOVLW  05
2708:  ADDWFC 03,W
270A:  MOVWF  FEA
270C:  MOVFF  5D2,FEF
2710:  MOVFF  5D3,FEC
2714:  MOVFF  5D4,FEC
2718:  MOVFF  5D5,FEC
....................    y++; 
271C:  INCF   x67,F
....................    if(y>=2) 
271E:  MOVF   x67,W
2720:  SUBLW  01
2722:  BC    2760
....................    { 
....................       y=0; 
2724:  CLRF   x67
....................       Aumento=X[1]-X[0]; 
2726:  BSF    FD8.1
2728:  MOVFF  55D,5FE
272C:  MOVFF  55C,5FD
2730:  MOVFF  55B,5FC
2734:  MOVFF  55A,5FB
2738:  MOVFF  559,602
273C:  MOVFF  558,601
2740:  MOVFF  557,600
2744:  MOVFF  556,5FF
2748:  MOVLB  0
274A:  CALL   18A8
274E:  MOVFF  03,5D1
2752:  MOVFF  02,5D0
2756:  MOVFF  01,5CF
275A:  MOVFF  00,5CE
275E:  MOVLB  5
....................    } 
.................... } 
2760:  MOVLB  0
2762:  GOTO   27AE (RETURN)
....................  
.................... // Funcion para conversor analogo-digital 
.................... float sensores(int x){ 
.................... float y;set_adc_channel(x);delay_ms(1);y=read_adc();return (y); 
*
16D2:  MOVLB  5
16D4:  RLCF   xF7,W
16D6:  MOVWF  00
16D8:  RLCF   00,F
16DA:  MOVLW  FC
16DC:  ANDWF  00,F
16DE:  MOVFF  00,01
16E2:  MOVF   FC2,W
16E4:  ANDLW  C3
16E6:  IORWF  00,W
16E8:  MOVWF  FC2
16EA:  MOVLW  01
16EC:  MOVWF  xFC
16EE:  MOVLB  0
16F0:  CALL   0CF8
16F4:  BSF    FC2.1
16F6:  BTFSC  FC2.1
16F8:  BRA    16F6
16FA:  MOVFF  FC4,5FD
16FE:  MOVFF  FC3,5FC
1702:  MOVLB  0
1704:  CALL   0D22
1708:  MOVFF  03,5FB
170C:  MOVFF  02,5FA
1710:  MOVFF  01,5F9
1714:  MOVFF  00,5F8
1718:  MOVFF  5F8,00
171C:  MOVFF  5F9,01
1720:  MOVFF  5FA,02
1724:  MOVFF  5FB,03
.................... } 
1728:  RETLW  00
.................... float Leer_Sensor(int media) 
.................... { 
....................    Prom=0.0; 
*
1B52:  MOVLB  5
1B54:  CLRF   xB9
1B56:  CLRF   xB8
1B58:  CLRF   xB7
1B5A:  CLRF   xB6
....................    V0 = sensores(0);   //Lectura de Divisor de Voltaje de PT100 con resistencia de 6.18k (+-2%) 
1B5C:  CLRF   xF7
1B5E:  MOVLB  0
1B60:  RCALL  16D2
1B62:  MOVFF  03,5A1
1B66:  MOVFF  02,5A0
1B6A:  MOVFF  01,59F
1B6E:  MOVFF  00,59E
....................    V0 = V0/49.9; // Se elimina la ganancia 
1B72:  MOVFF  5A1,5FE
1B76:  MOVFF  5A0,5FD
1B7A:  MOVFF  59F,5FC
1B7E:  MOVFF  59E,5FB
1B82:  MOVLW  9A
1B84:  MOVLB  6
1B86:  MOVWF  x02
1B88:  MOVLW  99
1B8A:  MOVWF  x01
1B8C:  MOVLW  47
1B8E:  MOVWF  x00
1B90:  MOVLW  84
1B92:  MOVLB  5
1B94:  MOVWF  xFF
1B96:  MOVLB  0
1B98:  RCALL  172A
1B9A:  MOVFF  03,5A1
1B9E:  MOVFF  02,5A0
1BA2:  MOVFF  01,59F
1BA6:  MOVFF  00,59E
....................    Pt=(R1)/((1023.0/V0)-1.0); // Se calcula el valor de la PT100 
1BAA:  MOVLB  5
1BAC:  CLRF   xFE
1BAE:  MOVLW  C0
1BB0:  MOVWF  xFD
1BB2:  MOVLW  7F
1BB4:  MOVWF  xFC
1BB6:  MOVLW  88
1BB8:  MOVWF  xFB
1BBA:  MOVFF  5A1,602
1BBE:  MOVFF  5A0,601
1BC2:  MOVFF  59F,600
1BC6:  MOVFF  59E,5FF
1BCA:  MOVLB  0
1BCC:  RCALL  172A
1BCE:  MOVFF  00,5F7
1BD2:  MOVFF  01,5F8
1BD6:  MOVFF  02,5F9
1BDA:  MOVFF  03,5FA
1BDE:  BSF    FD8.1
1BE0:  MOVFF  03,5FE
1BE4:  MOVFF  02,5FD
1BE8:  MOVFF  01,5FC
1BEC:  MOVFF  00,5FB
1BF0:  MOVLB  6
1BF2:  CLRF   x02
1BF4:  CLRF   x01
1BF6:  CLRF   x00
1BF8:  MOVLW  7F
1BFA:  MOVLB  5
1BFC:  MOVWF  xFF
1BFE:  MOVLB  0
1C00:  RCALL  18A8
1C02:  MOVFF  5A5,5FE
1C06:  MOVFF  5A4,5FD
1C0A:  MOVFF  5A3,5FC
1C0E:  MOVFF  5A2,5FB
1C12:  MOVFF  03,602
1C16:  MOVFF  02,601
1C1A:  MOVFF  01,600
1C1E:  MOVFF  00,5FF
1C22:  RCALL  172A
1C24:  MOVFF  03,5A9
1C28:  MOVFF  02,5A8
1C2C:  MOVFF  01,5A7
1C30:  MOVFF  00,5A6
....................    //Pt=R1/((1023.0/V0)-1.0); // Se calcula el valor de la PT100 
....................    //Pt=Pt-0.5; 
....................     
....................              
....................    if(l>(media-1)) 
1C34:  MOVLW  01
1C36:  MOVLB  5
1C38:  SUBWF  xF6,W
1C3A:  SUBWF  x5F,W
1C3C:  BZ    1C42
1C3E:  BNC   1C42
....................    {l=0;} 
1C40:  CLRF   x5F
....................    //promedio[l]=Temperature;l++; 
....................    promedio[l]=Pt;l++; 
1C42:  CLRF   xFB
1C44:  MOVFF  55F,5FA
1C48:  CLRF   xFD
1C4A:  MOVLW  04
1C4C:  MOVWF  xFC
1C4E:  MOVLB  0
1C50:  RCALL  1B30
1C52:  MOVF   01,W
1C54:  ADDLW  16
1C56:  MOVWF  FE9
1C58:  MOVLW  04
1C5A:  ADDWFC 02,W
1C5C:  MOVWF  FEA
1C5E:  MOVFF  5A6,FEF
1C62:  MOVFF  5A7,FEC
1C66:  MOVFF  5A8,FEC
1C6A:  MOVFF  5A9,FEC
1C6E:  MOVLB  5
1C70:  INCF   x5F,F
....................           
....................    for(h=0;h<media;h++) 
1C72:  CLRF   x5E
1C74:  MOVF   xF6,W
1C76:  SUBWF  x5E,W
1C78:  BC    1CF4
....................    { 
....................       Prom+=promedio[h]; 
1C7A:  CLRF   xFB
1C7C:  MOVFF  55E,5FA
1C80:  CLRF   xFD
1C82:  MOVLW  04
1C84:  MOVWF  xFC
1C86:  MOVLB  0
1C88:  RCALL  1B30
1C8A:  MOVFF  02,03
1C8E:  MOVF   01,W
1C90:  ADDLW  16
1C92:  MOVWF  FE9
1C94:  MOVLW  04
1C96:  ADDWFC 02,W
1C98:  MOVWF  FEA
1C9A:  MOVFF  FEF,00
1C9E:  MOVFF  FEC,01
1CA2:  MOVFF  FEC,02
1CA6:  MOVFF  FEC,03
1CAA:  MOVFF  FEA,5F8
1CAE:  MOVFF  FE9,5F7
1CB2:  BCF    FD8.1
1CB4:  MOVFF  5B9,5FE
1CB8:  MOVFF  5B8,5FD
1CBC:  MOVFF  5B7,5FC
1CC0:  MOVFF  5B6,5FB
1CC4:  MOVFF  03,602
1CC8:  MOVFF  02,601
1CCC:  MOVFF  01,600
1CD0:  MOVFF  00,5FF
1CD4:  RCALL  18A8
1CD6:  MOVFF  5F8,FEA
1CDA:  MOVFF  5F7,FE9
1CDE:  MOVFF  03,5B9
1CE2:  MOVFF  02,5B8
1CE6:  MOVFF  01,5B7
1CEA:  MOVFF  00,5B6
....................    }  
1CEE:  MOVLB  5
1CF0:  INCF   x5E,F
1CF2:  BRA    1C74
....................    Prom=Prom/media;    
1CF4:  CLRF   xFD
1CF6:  MOVFF  5F6,5FC
1CFA:  MOVLB  0
1CFC:  CALL   0D22
1D00:  MOVFF  5B9,5FE
1D04:  MOVFF  5B8,5FD
1D08:  MOVFF  5B7,5FC
1D0C:  MOVFF  5B6,5FB
1D10:  MOVFF  03,602
1D14:  MOVFF  02,601
1D18:  MOVFF  01,600
1D1C:  MOVFF  00,5FF
1D20:  RCALL  172A
1D22:  MOVFF  03,5B9
1D26:  MOVFF  02,5B8
1D2A:  MOVFF  01,5B7
1D2E:  MOVFF  00,5B6
....................    Temperature=(Prom-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
1D32:  BSF    FD8.1
1D34:  MOVFF  5B9,5FE
1D38:  MOVFF  5B8,5FD
1D3C:  MOVFF  5B7,5FC
1D40:  MOVFF  5B6,5FB
1D44:  MOVLB  6
1D46:  CLRF   x02
1D48:  CLRF   x01
1D4A:  MOVLW  48
1D4C:  MOVWF  x00
1D4E:  MOVLW  85
1D50:  MOVLB  5
1D52:  MOVWF  xFF
1D54:  MOVLB  0
1D56:  RCALL  18A8
1D58:  MOVFF  00,5F7
1D5C:  MOVFF  01,5F8
1D60:  MOVFF  02,5F9
1D64:  MOVFF  03,5FA
1D68:  MOVFF  03,5FE
1D6C:  MOVFF  02,5FD
1D70:  MOVFF  01,5FC
1D74:  MOVFF  00,5FB
1D78:  MOVLW  B8
1D7A:  MOVLB  6
1D7C:  MOVWF  x02
1D7E:  MOVLW  1E
1D80:  MOVWF  x01
1D82:  MOVLW  45
1D84:  MOVWF  x00
1D86:  MOVLW  7D
1D88:  MOVLB  5
1D8A:  MOVWF  xFF
1D8C:  MOVLB  0
1D8E:  RCALL  172A
1D90:  MOVFF  03,5BD
1D94:  MOVFF  02,5BC
1D98:  MOVFF  01,5BB
1D9C:  MOVFF  00,5BA
....................    //Temperature=(Pt-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio. 
....................     
....................    Temperature+=((float)Ajuste-(float)Ajusten); 
1DA0:  MOVLB  5
1DA2:  CLRF   xFD
1DA4:  MOVFF  560,5FC
1DA8:  MOVLB  0
1DAA:  CALL   0D22
1DAE:  MOVFF  00,5F7
1DB2:  MOVFF  01,5F8
1DB6:  MOVFF  02,5F9
1DBA:  MOVFF  03,5FA
1DBE:  MOVLB  5
1DC0:  CLRF   xFD
1DC2:  MOVFF  561,5FC
1DC6:  MOVLB  0
1DC8:  CALL   0D22
1DCC:  BSF    FD8.1
1DCE:  MOVFF  5FA,5FE
1DD2:  MOVFF  5F9,5FD
1DD6:  MOVFF  5F8,5FC
1DDA:  MOVFF  5F7,5FB
1DDE:  MOVFF  03,602
1DE2:  MOVFF  02,601
1DE6:  MOVFF  01,600
1DEA:  MOVFF  00,5FF
1DEE:  RCALL  18A8
1DF0:  BCF    FD8.1
1DF2:  MOVFF  5BD,5FE
1DF6:  MOVFF  5BC,5FD
1DFA:  MOVFF  5BB,5FC
1DFE:  MOVFF  5BA,5FB
1E02:  MOVFF  03,602
1E06:  MOVFF  02,601
1E0A:  MOVFF  01,600
1E0E:  MOVFF  00,5FF
1E12:  RCALL  18A8
1E14:  MOVFF  03,5BD
1E18:  MOVFF  02,5BC
1E1C:  MOVFF  01,5BB
1E20:  MOVFF  00,5BA
....................     
....................    //return Prom; 
....................    return Temperature; 
1E24:  MOVFF  5BA,00
1E28:  MOVFF  5BB,01
1E2C:  MOVFF  5BC,02
1E30:  MOVFF  5BD,03
.................... } 
1E34:  RETLW  00
....................  
.................... void Controla(){ 
.................... //-------------------------------Control de Calentamiento------------------------------------------------------------//          
....................    if(tiemporecta>=20) 
*
27A2:  MOVLB  5
27A4:  MOVF   x63,W
27A6:  SUBLW  13
27A8:  BC    27B2
....................    { 
....................       ActualizaRecta(); 
27AA:  MOVLB  0
27AC:  BRA    26F8
....................       tiemporecta=0; 
27AE:  MOVLB  5
27B0:  CLRF   x63
....................    } 
....................     
....................    if(tiemposetpoint>600) 
27B2:  MOVF   x7F,W
27B4:  SUBLW  01
27B6:  BC    27C4
27B8:  XORLW  FF
27BA:  BNZ   27C2
27BC:  MOVF   x7E,W
27BE:  SUBLW  58
27C0:  BC    27C4
....................    { 
....................       flag_control=1; 
27C2:  BSF    x66.5
....................    } 
....................     
....................    if(flag_ventilador==0) 
27C4:  MOVF   x69,F
27C6:  BNZ   27CE
....................    { 
....................       Ventilador_on; 
27C8:  BSF    F8B.1
27CA:  BCF    F94.1
....................    } 
....................    else 
27CC:  BRA    27DC
....................    { 
....................       if(estado_ventilador==1) 
27CE:  BTFSS  x65.5
27D0:  BRA    27D8
....................       { 
....................          Ventilador_on; 
27D2:  BSF    F8B.1
27D4:  BCF    F94.1
....................       } 
....................       else 
27D6:  BRA    27DC
....................       { 
....................          Ventilador_off; 
27D8:  BCF    F8B.1
27DA:  BCF    F94.1
....................       } 
....................    } 
....................    
....................    error=desvio+Setpoint-Temperatura;      // Cálculo del error ****** 
27DC:  CLRF   xFD
27DE:  MOVFF  570,5FC
27E2:  MOVLB  0
27E4:  CALL   0D22
27E8:  BCF    FD8.1
27EA:  MOVFF  5C9,5FE
27EE:  MOVFF  5C8,5FD
27F2:  MOVFF  5C7,5FC
27F6:  MOVFF  5C6,5FB
27FA:  MOVFF  03,602
27FE:  MOVFF  02,601
2802:  MOVFF  01,600
2806:  MOVFF  00,5FF
280A:  CALL   18A8
280E:  MOVFF  00,5F6
2812:  MOVFF  01,5F7
2816:  MOVFF  02,5F8
281A:  MOVFF  03,5F9
281E:  BSF    FD8.1
2820:  MOVFF  03,5FE
2824:  MOVFF  02,5FD
2828:  MOVFF  01,5FC
282C:  MOVFF  00,5FB
2830:  MOVFF  5D5,602
2834:  MOVFF  5D4,601
2838:  MOVFF  5D3,600
283C:  MOVFF  5D2,5FF
2840:  CALL   18A8
2844:  MOVFF  03,5B5
2848:  MOVFF  02,5B4
284C:  MOVFF  01,5B3
2850:  MOVFF  00,5B2
....................     
....................    if(error>1.0 && error<50 && Aumento<0.3 && flag_setpoint==0) 
2854:  MOVLB  5
2856:  CLRF   xF9
2858:  CLRF   xF8
285A:  CLRF   xF7
285C:  MOVLW  7F
285E:  MOVWF  xF6
2860:  MOVFF  5B5,5FD
2864:  MOVFF  5B4,5FC
2868:  MOVFF  5B3,5FB
286C:  MOVFF  5B2,5FA
2870:  MOVLB  0
2872:  RCALL  267E
2874:  BTFSS  FD8.0
2876:  BRA    29F0
2878:  MOVFF  5B5,5F9
287C:  MOVFF  5B4,5F8
2880:  MOVFF  5B3,5F7
2884:  MOVFF  5B2,5F6
2888:  MOVLB  5
288A:  CLRF   xFD
288C:  CLRF   xFC
288E:  MOVLW  48
2890:  MOVWF  xFB
2892:  MOVLW  84
2894:  MOVWF  xFA
2896:  MOVLB  0
2898:  RCALL  267E
289A:  BTFSS  FD8.0
289C:  BRA    29F0
289E:  MOVFF  5D1,5F9
28A2:  MOVFF  5D0,5F8
28A6:  MOVFF  5CF,5F7
28AA:  MOVFF  5CE,5F6
28AE:  MOVLW  9A
28B0:  MOVLB  5
28B2:  MOVWF  xFD
28B4:  MOVLW  99
28B6:  MOVWF  xFC
28B8:  MOVLW  19
28BA:  MOVWF  xFB
28BC:  MOVLW  7D
28BE:  MOVWF  xFA
28C0:  MOVLB  0
28C2:  RCALL  267E
28C4:  BTFSS  FD8.0
28C6:  BRA    29F0
28C8:  MOVLB  5
28CA:  BTFSS  x66.4
28CC:  BRA    28D2
28CE:  MOVLB  0
28D0:  BRA    29F0
....................    { 
....................       if(Potencia<90.0) 
28D2:  MOVFF  585,5F9
28D6:  MOVFF  584,5F8
28DA:  MOVFF  583,5F7
28DE:  MOVFF  582,5F6
28E2:  CLRF   xFD
28E4:  CLRF   xFC
28E6:  MOVLW  34
28E8:  MOVWF  xFB
28EA:  MOVLW  85
28EC:  MOVWF  xFA
28EE:  MOVLB  0
28F0:  RCALL  267E
28F2:  BTFSS  FD8.0
28F4:  BRA    29F0
....................       { 
....................          if(TiempoControl>=120) 
28F6:  MOVLB  5
28F8:  MOVF   x6F,W
28FA:  SUBLW  77
28FC:  BTFSC  FD8.0
28FE:  BRA    29F2
....................          { 
....................             TiempoControl=0; 
2900:  CLRF   x6F
....................             if(Aumento<-0.5) 
2902:  MOVFF  5D1,5F9
2906:  MOVFF  5D0,5F8
290A:  MOVFF  5CF,5F7
290E:  MOVFF  5CE,5F6
2912:  CLRF   xFD
2914:  CLRF   xFC
2916:  MOVLW  80
2918:  MOVWF  xFB
291A:  MOVLW  7E
291C:  MOVWF  xFA
291E:  MOVLB  0
2920:  RCALL  267E
2922:  BNC   295C
....................             { 
....................                Ganancia+=2; 
2924:  BCF    FD8.1
2926:  MOVFF  5C5,5FE
292A:  MOVFF  5C4,5FD
292E:  MOVFF  5C3,5FC
2932:  MOVFF  5C2,5FB
2936:  MOVLB  6
2938:  CLRF   x02
293A:  CLRF   x01
293C:  CLRF   x00
293E:  MOVLW  80
2940:  MOVLB  5
2942:  MOVWF  xFF
2944:  MOVLB  0
2946:  CALL   18A8
294A:  MOVFF  03,5C5
294E:  MOVFF  02,5C4
2952:  MOVFF  01,5C3
2956:  MOVFF  00,5C2
....................             } 
....................             else 
295A:  BRA    29F0
....................             { 
....................                if(Aumento<-0.1) 
295C:  MOVFF  5D1,5F9
2960:  MOVFF  5D0,5F8
2964:  MOVFF  5CF,5F7
2968:  MOVFF  5CE,5F6
296C:  MOVLW  CD
296E:  MOVLB  5
2970:  MOVWF  xFD
2972:  MOVLW  CC
2974:  MOVWF  xFC
2976:  MOVWF  xFB
2978:  MOVLW  7B
297A:  MOVWF  xFA
297C:  MOVLB  0
297E:  RCALL  267E
2980:  BNC   29BA
....................                { 
....................                   Ganancia+=1; 
2982:  BCF    FD8.1
2984:  MOVFF  5C5,5FE
2988:  MOVFF  5C4,5FD
298C:  MOVFF  5C3,5FC
2990:  MOVFF  5C2,5FB
2994:  MOVLB  6
2996:  CLRF   x02
2998:  CLRF   x01
299A:  CLRF   x00
299C:  MOVLW  7F
299E:  MOVLB  5
29A0:  MOVWF  xFF
29A2:  MOVLB  0
29A4:  CALL   18A8
29A8:  MOVFF  03,5C5
29AC:  MOVFF  02,5C4
29B0:  MOVFF  01,5C3
29B4:  MOVFF  00,5C2
....................                }    
....................                else 
29B8:  BRA    29F0
....................                { 
....................                   Ganancia+=0.5; 
29BA:  BCF    FD8.1
29BC:  MOVFF  5C5,5FE
29C0:  MOVFF  5C4,5FD
29C4:  MOVFF  5C3,5FC
29C8:  MOVFF  5C2,5FB
29CC:  MOVLB  6
29CE:  CLRF   x02
29D0:  CLRF   x01
29D2:  CLRF   x00
29D4:  MOVLW  7E
29D6:  MOVLB  5
29D8:  MOVWF  xFF
29DA:  MOVLB  0
29DC:  CALL   18A8
29E0:  MOVFF  03,5C5
29E4:  MOVFF  02,5C4
29E8:  MOVFF  01,5C3
29EC:  MOVFF  00,5C2
29F0:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................    } 
....................     
....................    if(error<-1.0) 
29F2:  MOVFF  5B5,5F9
29F6:  MOVFF  5B4,5F8
29FA:  MOVFF  5B3,5F7
29FE:  MOVFF  5B2,5F6
2A02:  CLRF   xFD
2A04:  CLRF   xFC
2A06:  MOVLW  80
2A08:  MOVWF  xFB
2A0A:  MOVLW  7F
2A0C:  MOVWF  xFA
2A0E:  MOVLB  0
2A10:  RCALL  267E
2A12:  BNC   2A5A
....................    { 
....................       if(TiempoControl>=120) 
2A14:  MOVLB  5
2A16:  MOVF   x6F,W
2A18:  SUBLW  77
2A1A:  BC    2A5C
....................       { 
....................          TiempoControl=0; 
2A1C:  CLRF   x6F
....................          Ganancia-=0.2; 
2A1E:  BSF    FD8.1
2A20:  MOVFF  5C5,5FE
2A24:  MOVFF  5C4,5FD
2A28:  MOVFF  5C3,5FC
2A2C:  MOVFF  5C2,5FB
2A30:  MOVLW  CD
2A32:  MOVLB  6
2A34:  MOVWF  x02
2A36:  MOVLW  CC
2A38:  MOVWF  x01
2A3A:  MOVLW  4C
2A3C:  MOVWF  x00
2A3E:  MOVLW  7C
2A40:  MOVLB  5
2A42:  MOVWF  xFF
2A44:  MOVLB  0
2A46:  CALL   18A8
2A4A:  MOVFF  03,5C5
2A4E:  MOVFF  02,5C4
2A52:  MOVFF  01,5C3
2A56:  MOVFF  00,5C2
2A5A:  MOVLB  5
....................       } 
....................    } 
....................     
....................    if(Ganancia<0.5) 
2A5C:  MOVFF  5C5,5F9
2A60:  MOVFF  5C4,5F8
2A64:  MOVFF  5C3,5F7
2A68:  MOVFF  5C2,5F6
2A6C:  CLRF   xFD
2A6E:  CLRF   xFC
2A70:  CLRF   xFB
2A72:  MOVLW  7E
2A74:  MOVWF  xFA
2A76:  MOVLB  0
2A78:  RCALL  267E
2A7A:  BNC   2A8A
....................    { 
....................       Ganancia=0.5; 
2A7C:  MOVLB  5
2A7E:  CLRF   xC5
2A80:  CLRF   xC4
2A82:  CLRF   xC3
2A84:  MOVLW  7E
2A86:  MOVWF  xC2
2A88:  MOVLB  0
....................    } 
....................    if(Ganancia>Gananciamax) 
2A8A:  MOVFF  58D,5F9
2A8E:  MOVFF  58C,5F8
2A92:  MOVFF  58B,5F7
2A96:  MOVFF  58A,5F6
2A9A:  MOVFF  5C5,5FD
2A9E:  MOVFF  5C4,5FC
2AA2:  MOVFF  5C3,5FB
2AA6:  MOVFF  5C2,5FA
2AAA:  RCALL  267E
2AAC:  BNC   2ABE
....................    { 
....................       Ganancia=Gananciamax; 
2AAE:  MOVFF  58D,5C5
2AB2:  MOVFF  58C,5C4
2AB6:  MOVFF  58B,5C3
2ABA:  MOVFF  58A,5C2
....................    } 
....................     
....................    if(error<0.0)     // Anti Wind_DOWN     
2ABE:  MOVFF  5B5,5F9
2AC2:  MOVFF  5B4,5F8
2AC6:  MOVFF  5B3,5F7
2ACA:  MOVFF  5B2,5F6
2ACE:  MOVLB  5
2AD0:  CLRF   xFD
2AD2:  CLRF   xFC
2AD4:  CLRF   xFB
2AD6:  CLRF   xFA
2AD8:  MOVLB  0
2ADA:  RCALL  267E
2ADC:  BNC   2AEA
....................    { 
....................       error=0.0; 
2ADE:  MOVLB  5
2AE0:  CLRF   xB5
2AE2:  CLRF   xB4
2AE4:  CLRF   xB3
2AE6:  CLRF   xB2
2AE8:  MOVLB  0
....................    } 
....................    //tmp=(Setpoint-Prom)*Ganancia;  // Control Proporcional. 
....................    tmp=error*Ganancia;  // Control Proporcional. 
2AEA:  MOVFF  5B5,616
2AEE:  MOVFF  5B4,615
2AF2:  MOVFF  5B3,614
2AF6:  MOVFF  5B2,613
2AFA:  MOVFF  5C5,61A
2AFE:  MOVFF  5C4,619
2B02:  MOVFF  5C3,618
2B06:  MOVFF  5C2,617
2B0A:  CALL   1E36
2B0E:  MOVFF  03,5C1
2B12:  MOVFF  02,5C0
2B16:  MOVFF  01,5BF
2B1A:  MOVFF  00,5BE
....................           
....................    if(tmp>Setpoint)   // Anti Wind-UP       
2B1E:  MOVLB  5
2B20:  CLRF   xFD
2B22:  MOVFF  570,5FC
2B26:  MOVLB  0
2B28:  CALL   0D22
2B2C:  MOVFF  03,5F9
2B30:  MOVFF  02,5F8
2B34:  MOVFF  01,5F7
2B38:  MOVFF  00,5F6
2B3C:  MOVFF  5C1,5FD
2B40:  MOVFF  5C0,5FC
2B44:  MOVFF  5BF,5FB
2B48:  MOVFF  5BE,5FA
2B4C:  RCALL  267E
2B4E:  BNC   2B6E
....................    { 
....................       tmp=Setpoint; 
2B50:  MOVLB  5
2B52:  CLRF   xFD
2B54:  MOVFF  570,5FC
2B58:  MOVLB  0
2B5A:  CALL   0D22
2B5E:  MOVFF  03,5C1
2B62:  MOVFF  02,5C0
2B66:  MOVFF  01,5BF
2B6A:  MOVFF  00,5BE
....................    } 
....................                 
....................    if(tmp<0.0)     // Anti Wind_DOWN     
2B6E:  MOVFF  5C1,5F9
2B72:  MOVFF  5C0,5F8
2B76:  MOVFF  5BF,5F7
2B7A:  MOVFF  5BE,5F6
2B7E:  MOVLB  5
2B80:  CLRF   xFD
2B82:  CLRF   xFC
2B84:  CLRF   xFB
2B86:  CLRF   xFA
2B88:  MOVLB  0
2B8A:  RCALL  267E
2B8C:  BNC   2B98
....................    { 
....................       tmp=0.0; 
2B8E:  MOVLB  5
2B90:  CLRF   xC1
2B92:  CLRF   xC0
2B94:  CLRF   xBF
2B96:  CLRF   xBE
....................    } 
....................     
....................    // Tpulso(t)= Tciclo*(y(t)-ymin)/(ymax - ymin); calculo de ciclo util para control de resistencia.ymax=140.ymin=0; 
....................    // Tpulso es float, hay que pasar ese ciclo a una salida de un puerto usando el TMR1. 
....................    Tpulso=(tmp/Setpoint)*Tciclo;   
2B98:  MOVLB  5
2B9A:  CLRF   xFD
2B9C:  MOVFF  570,5FC
2BA0:  MOVLB  0
2BA2:  CALL   0D22
2BA6:  MOVFF  5C1,5FE
2BAA:  MOVFF  5C0,5FD
2BAE:  MOVFF  5BF,5FC
2BB2:  MOVFF  5BE,5FB
2BB6:  MOVFF  03,602
2BBA:  MOVFF  02,601
2BBE:  MOVFF  01,600
2BC2:  MOVFF  00,5FF
2BC6:  CALL   172A
2BCA:  MOVFF  00,5F6
2BCE:  MOVFF  01,5F7
2BD2:  MOVFF  02,5F8
2BD6:  MOVFF  03,5F9
2BDA:  MOVFF  03,616
2BDE:  MOVFF  02,615
2BE2:  MOVFF  01,614
2BE6:  MOVFF  00,613
2BEA:  MOVFF  5AD,61A
2BEE:  MOVFF  5AC,619
2BF2:  MOVFF  5AB,618
2BF6:  MOVFF  5AA,617
2BFA:  CALL   1E36
2BFE:  MOVFF  03,5B1
2C02:  MOVFF  02,5B0
2C06:  MOVFF  01,5AF
2C0A:  MOVFF  00,5AE
....................     
....................    if(flag_control==1) 
2C0E:  MOVLB  5
2C10:  BTFSS  x66.5
2C12:  BRA    2C44
....................    { 
....................       if(Tpulso>5.0) 
2C14:  CLRF   xF9
2C16:  CLRF   xF8
2C18:  MOVLW  20
2C1A:  MOVWF  xF7
2C1C:  MOVLW  81
2C1E:  MOVWF  xF6
2C20:  MOVFF  5B1,5FD
2C24:  MOVFF  5B0,5FC
2C28:  MOVFF  5AF,5FB
2C2C:  MOVFF  5AE,5FA
2C30:  MOVLB  0
2C32:  RCALL  267E
2C34:  BNC   2C46
....................       { 
....................          Tpulso=5.0; 
2C36:  MOVLB  5
2C38:  CLRF   xB1
2C3A:  CLRF   xB0
2C3C:  MOVLW  20
2C3E:  MOVWF  xAF
2C40:  MOVLW  81
2C42:  MOVWF  xAE
2C44:  MOVLB  0
....................       } 
....................       /*if(Tpulso<Tpulsomin) 
....................       { 
....................          Tpulso=Tpulsomin; 
....................       }*/ 
....................    } 
....................     
....................    if(tiempoctrl<=(int16)(Tpulso/0.005)) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
2C46:  MOVFF  5B1,5FE
2C4A:  MOVFF  5B0,5FD
2C4E:  MOVFF  5AF,5FC
2C52:  MOVFF  5AE,5FB
2C56:  MOVLW  0A
2C58:  MOVLB  6
2C5A:  MOVWF  x02
2C5C:  MOVLW  D7
2C5E:  MOVWF  x01
2C60:  MOVLW  23
2C62:  MOVWF  x00
2C64:  MOVLW  77
2C66:  MOVLB  5
2C68:  MOVWF  xFF
2C6A:  MOVLB  0
2C6C:  CALL   172A
2C70:  MOVFF  03,5F9
2C74:  MOVFF  02,5F8
2C78:  MOVFF  01,5F7
2C7C:  MOVFF  00,5F6
2C80:  RCALL  2766
2C82:  MOVFF  02,03
2C86:  MOVF   01,W
2C88:  MOVLB  5
2C8A:  MOVF   x79,W
2C8C:  SUBWF  02,W
2C8E:  BNC   2CA2
2C90:  BNZ   2C98
2C92:  MOVF   x78,W
2C94:  SUBWF  01,W
2C96:  BNC   2CA2
....................    { 
....................       Resistencia_on; 
2C98:  BSF    F8B.0
2C9A:  BCF    F94.0
....................       Resistencia2_on; 
2C9C:  BSF    F8B.2
2C9E:  BCF    F94.2
....................    } 
....................    else          
2CA0:  BRA    2CAA
....................    { 
....................       Resistencia_off; 
2CA2:  BCF    F8B.0
2CA4:  BCF    F94.0
....................       Resistencia2_off; 
2CA6:  BCF    F8B.2
2CA8:  BCF    F94.2
....................    } 
....................           
....................    if(tiempoctrl>=(int16)(Tciclo/0.005)) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
2CAA:  MOVFF  5AD,5FE
2CAE:  MOVFF  5AC,5FD
2CB2:  MOVFF  5AB,5FC
2CB6:  MOVFF  5AA,5FB
2CBA:  MOVLW  0A
2CBC:  MOVLB  6
2CBE:  MOVWF  x02
2CC0:  MOVLW  D7
2CC2:  MOVWF  x01
2CC4:  MOVLW  23
2CC6:  MOVWF  x00
2CC8:  MOVLW  77
2CCA:  MOVLB  5
2CCC:  MOVWF  xFF
2CCE:  MOVLB  0
2CD0:  CALL   172A
2CD4:  MOVFF  03,5F9
2CD8:  MOVFF  02,5F8
2CDC:  MOVFF  01,5F7
2CE0:  MOVFF  00,5F6
2CE4:  RCALL  2766
2CE6:  MOVF   02,W
2CE8:  MOVWF  03
2CEA:  MOVLB  5
2CEC:  SUBWF  x79,W
2CEE:  BNC   2CFC
2CF0:  BNZ   2CF8
2CF2:  MOVF   01,W
2CF4:  SUBWF  x78,W
2CF6:  BNC   2CFC
....................    { 
....................       tiempoctrl=0; 
2CF8:  CLRF   x79
2CFA:  CLRF   x78
....................    } // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
....................                                        
.................... //--------------------------------------------------------------------------------------------------------------------//    
.................... } 
2CFC:  MOVLB  0
2CFE:  RETLW  00
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
13CA:  MOVLB  5
13CC:  MOVFF  5F6,01
13D0:  MOVFF  5F7,03
13D4:  MOVFF  5F6,5FC
13D8:  MOVFF  5F7,5FD
13DC:  MOVLW  05
13DE:  MOVWF  FEA
13E0:  MOVLW  D6
13E2:  MOVWF  FE9
13E4:  MOVFF  5F7,FE2
13E8:  MOVFF  5F6,FE1
13EC:  MOVF   FE7,F
13EE:  MOVFF  FE6,FEE
13F2:  BNZ   13EC
....................    if(sombreado==2) 
13F4:  MOVF   xFA,W
13F6:  SUBLW  02
13F8:  BNZ   1426
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
13FA:  MOVLW  01
13FC:  ADDWF  xF8,W
13FE:  MOVWF  xFC
1400:  MOVLW  01
1402:  ADDWF  xF9,W
1404:  MOVWF  xFD
1406:  MOVFF  5FC,607
140A:  MOVFF  FE8,608
140E:  MOVLW  05
1410:  MOVLB  6
1412:  MOVWF  x0A
1414:  MOVLW  D6
1416:  MOVWF  x09
1418:  MOVFF  5FB,60B
141C:  MOVLW  01
141E:  MOVWF  x0C
1420:  MOVLB  0
1422:  RCALL  1012
1424:  MOVLB  5
....................    if(sombreado==1) 
1426:  DECFSZ xFA,W
1428:  BRA    147A
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
142A:  MOVF   xFB,W
142C:  MULLW  08
142E:  MOVF   FF3,W
1430:  ADDWF  xF9,W
1432:  MOVWF  xFC
1434:  MOVLB  6
1436:  CLRF   x08
1438:  MOVFF  5F9,609
143C:  MOVLW  7F
143E:  MOVWF  x0A
1440:  MOVFF  5FC,60B
1444:  MOVLW  01
1446:  MOVWF  x0C
1448:  MOVWF  x0D
144A:  MOVLB  0
144C:  RCALL  1308
144E:  MOVLW  01
1450:  MOVLB  5
1452:  ADDWF  xF8,W
1454:  MOVWF  xFC
1456:  MOVLW  01
1458:  ADDWF  xF9,W
145A:  MOVWF  xFD
145C:  MOVFF  5FC,607
1460:  MOVFF  FE8,608
1464:  MOVLW  05
1466:  MOVLB  6
1468:  MOVWF  x0A
146A:  MOVLW  D6
146C:  MOVWF  x09
146E:  MOVFF  5FB,60B
1472:  CLRF   x0C
1474:  MOVLB  0
1476:  RCALL  1012
1478:  MOVLB  5
....................    if(sombreado==0) 
147A:  MOVF   xFA,F
147C:  BNZ   14CE
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
147E:  MOVF   xFB,W
1480:  MULLW  08
1482:  MOVF   FF3,W
1484:  ADDWF  xF9,W
1486:  MOVWF  xFC
1488:  MOVLB  6
148A:  CLRF   x08
148C:  MOVFF  5F9,609
1490:  MOVLW  7F
1492:  MOVWF  x0A
1494:  MOVFF  5FC,60B
1498:  MOVLW  01
149A:  MOVWF  x0C
149C:  CLRF   x0D
149E:  MOVLB  0
14A0:  RCALL  1308
14A2:  MOVLW  01
14A4:  MOVLB  5
14A6:  ADDWF  xF8,W
14A8:  MOVWF  xFC
14AA:  MOVLW  01
14AC:  ADDWF  xF9,W
14AE:  MOVWF  xFD
14B0:  MOVFF  5FC,607
14B4:  MOVFF  FE8,608
14B8:  MOVLW  05
14BA:  MOVLB  6
14BC:  MOVWF  x0A
14BE:  MOVLW  D6
14C0:  MOVWF  x09
14C2:  MOVFF  5FB,60B
14C6:  MOVLW  01
14C8:  MOVWF  x0C
14CA:  MOVLB  0
14CC:  RCALL  1012
....................    glcd_update(); 
14CE:  MOVLB  0
14D0:  RCALL  0DF2
.................... } 
14D2:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
23CC:  MOVLB  5
23CE:  MOVF   xFA,W
23D0:  SUBLW  02
23D2:  BNZ   2452
....................    { 
....................       sprintf(voltage, "%03u", digito); 
23D4:  MOVLW  05
23D6:  MOVWF  xF5
23D8:  MOVLW  FC
23DA:  MOVWF  xF4
23DC:  MOVFF  5F7,605
23E0:  MOVLW  03
23E2:  MOVLB  6
23E4:  MOVWF  x06
23E6:  MOVLB  0
23E8:  RCALL  21CE
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
23EA:  MOVLB  5
23EC:  MOVF   xFB,W
23EE:  MULLW  12
23F0:  MOVF   FF3,W
23F2:  ADDWF  xF8,W
23F4:  MOVLB  6
23F6:  MOVWF  x05
23F8:  MOVLB  5
23FA:  MOVF   xFB,W
23FC:  MULLW  08
23FE:  MOVF   FF3,W
2400:  ADDWF  xF9,W
2402:  MOVLB  6
2404:  MOVWF  x06
2406:  MOVFF  5F8,608
240A:  MOVFF  5F9,609
240E:  MOVFF  605,60A
2412:  MOVWF  x0B
2414:  MOVLW  01
2416:  MOVWF  x0C
2418:  MOVWF  x0D
241A:  MOVLB  0
241C:  CALL   1308
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
2420:  MOVLW  01
2422:  MOVLB  5
2424:  ADDWF  xF8,W
2426:  MOVLB  6
2428:  MOVWF  x05
242A:  MOVLW  01
242C:  MOVLB  5
242E:  ADDWF  xF9,W
2430:  MOVLB  6
2432:  MOVWF  x06
2434:  MOVFF  605,607
2438:  MOVWF  x08
243A:  MOVLW  05
243C:  MOVWF  x0A
243E:  MOVLW  FC
2440:  MOVWF  x09
2442:  MOVFF  5FB,60B
2446:  CLRF   x0C
2448:  MOVLB  0
244A:  CALL   1012
....................    } 
....................    else 
244E:  BRA    25BE
2450:  MOVLB  5
....................    { 
....................       if(sombreado==3) 
2452:  MOVF   xFA,W
2454:  SUBLW  03
2456:  BNZ   24D6
....................       { 
....................          sprintf(voltage, "%03u", digito); 
2458:  MOVLW  05
245A:  MOVWF  xF5
245C:  MOVLW  FC
245E:  MOVWF  xF4
2460:  MOVFF  5F7,605
2464:  MOVLW  03
2466:  MOVLB  6
2468:  MOVWF  x06
246A:  MOVLB  0
246C:  RCALL  21CE
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
246E:  MOVLB  5
2470:  MOVF   xFB,W
2472:  MULLW  12
2474:  MOVF   FF3,W
2476:  ADDWF  xF8,W
2478:  MOVLB  6
247A:  MOVWF  x05
247C:  MOVLB  5
247E:  MOVF   xFB,W
2480:  MULLW  08
2482:  MOVF   FF3,W
2484:  ADDWF  xF9,W
2486:  MOVLB  6
2488:  MOVWF  x06
248A:  MOVFF  5F8,608
248E:  MOVFF  5F9,609
2492:  MOVFF  605,60A
2496:  MOVWF  x0B
2498:  MOVLW  01
249A:  MOVWF  x0C
249C:  CLRF   x0D
249E:  MOVLB  0
24A0:  CALL   1308
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
24A4:  MOVLW  01
24A6:  MOVLB  5
24A8:  ADDWF  xF8,W
24AA:  MOVLB  6
24AC:  MOVWF  x05
24AE:  MOVLW  01
24B0:  MOVLB  5
24B2:  ADDWF  xF9,W
24B4:  MOVLB  6
24B6:  MOVWF  x06
24B8:  MOVFF  605,607
24BC:  MOVWF  x08
24BE:  MOVLW  05
24C0:  MOVWF  x0A
24C2:  MOVLW  FC
24C4:  MOVWF  x09
24C6:  MOVFF  5FB,60B
24CA:  MOVLW  01
24CC:  MOVWF  x0C
24CE:  MOVLB  0
24D0:  CALL   1012
24D4:  MOVLB  5
....................       } 
....................       sprintf(voltage, "%u", digito); 
24D6:  MOVLW  05
24D8:  MOVWF  xF5
24DA:  MOVLW  FC
24DC:  MOVWF  xF4
24DE:  MOVFF  5F7,605
24E2:  MOVLW  1B
24E4:  MOVLB  6
24E6:  MOVWF  x06
24E8:  MOVLB  0
24EA:  RCALL  21CE
....................       if(sombreado==1) 
24EC:  MOVLB  5
24EE:  DECFSZ xFA,W
24F0:  BRA    2556
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
24F2:  MOVF   xFB,W
24F4:  MULLW  05
24F6:  MOVF   FF3,W
24F8:  ADDWF  xF8,W
24FA:  MOVLB  6
24FC:  MOVWF  x05
24FE:  MOVLB  5
2500:  MOVF   xFB,W
2502:  MULLW  08
2504:  MOVF   FF3,W
2506:  ADDWF  xF9,W
2508:  MOVLB  6
250A:  MOVWF  x06
250C:  MOVFF  5F8,608
2510:  MOVFF  5F9,609
2514:  MOVFF  605,60A
2518:  MOVWF  x0B
251A:  MOVLW  01
251C:  MOVWF  x0C
251E:  MOVWF  x0D
2520:  MOVLB  0
2522:  CALL   1308
2526:  MOVLW  01
2528:  MOVLB  5
252A:  ADDWF  xF8,W
252C:  MOVLB  6
252E:  MOVWF  x05
2530:  MOVLW  01
2532:  MOVLB  5
2534:  ADDWF  xF9,W
2536:  MOVLB  6
2538:  MOVWF  x06
253A:  MOVFF  605,607
253E:  MOVWF  x08
2540:  MOVLW  05
2542:  MOVWF  x0A
2544:  MOVLW  FC
2546:  MOVWF  x09
2548:  MOVFF  5FB,60B
254C:  CLRF   x0C
254E:  MOVLB  0
2550:  CALL   1012
2554:  MOVLB  5
....................       if(sombreado==0) 
2556:  MOVF   xFA,F
2558:  BNZ   25C0
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
255A:  MOVF   xFB,W
255C:  MULLW  05
255E:  MOVF   FF3,W
2560:  ADDWF  xF8,W
2562:  MOVLB  6
2564:  MOVWF  x05
2566:  MOVLB  5
2568:  MOVF   xFB,W
256A:  MULLW  08
256C:  MOVF   FF3,W
256E:  ADDWF  xF9,W
2570:  MOVLB  6
2572:  MOVWF  x06
2574:  MOVFF  5F8,608
2578:  MOVFF  5F9,609
257C:  MOVFF  605,60A
2580:  MOVWF  x0B
2582:  MOVLW  01
2584:  MOVWF  x0C
2586:  CLRF   x0D
2588:  MOVLB  0
258A:  CALL   1308
258E:  MOVLW  01
2590:  MOVLB  5
2592:  ADDWF  xF8,W
2594:  MOVLB  6
2596:  MOVWF  x05
2598:  MOVLW  01
259A:  MOVLB  5
259C:  ADDWF  xF9,W
259E:  MOVLB  6
25A0:  MOVWF  x06
25A2:  MOVFF  605,607
25A6:  MOVWF  x08
25A8:  MOVLW  05
25AA:  MOVWF  x0A
25AC:  MOVLW  FC
25AE:  MOVWF  x09
25B0:  MOVFF  5FB,60B
25B4:  MOVLW  01
25B6:  MOVWF  x0C
25B8:  MOVLB  0
25BA:  CALL   1012
25BE:  MOVLB  5
....................    } 
....................    glcd_update(); 
25C0:  MOVLB  0
25C2:  CALL   0DF2
.................... } 
25C6:  RETLW  00
....................  
.................... void displayTemperatura(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
2254:  MOVLB  5
2256:  MOVF   xFA,W
2258:  SUBLW  02
225A:  BNZ   22DA
....................    { 
....................       sprintf(voltage, "%03u", digito); 
225C:  MOVLW  05
225E:  MOVWF  xF5
2260:  MOVLW  FC
2262:  MOVWF  xF4
2264:  MOVFF  5F7,605
2268:  MOVLW  03
226A:  MOVLB  6
226C:  MOVWF  x06
226E:  MOVLB  0
2270:  RCALL  21CE
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
2272:  MOVLB  5
2274:  MOVF   xFB,W
2276:  MULLW  12
2278:  MOVF   FF3,W
227A:  ADDWF  xF8,W
227C:  MOVLB  6
227E:  MOVWF  x05
2280:  MOVLB  5
2282:  MOVF   xFB,W
2284:  MULLW  08
2286:  MOVF   FF3,W
2288:  ADDWF  xF9,W
228A:  MOVLB  6
228C:  MOVWF  x06
228E:  MOVFF  5F8,608
2292:  MOVFF  5F9,609
2296:  MOVFF  605,60A
229A:  MOVWF  x0B
229C:  MOVLW  01
229E:  MOVWF  x0C
22A0:  MOVWF  x0D
22A2:  MOVLB  0
22A4:  CALL   1308
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
22A8:  MOVLW  01
22AA:  MOVLB  5
22AC:  ADDWF  xF8,W
22AE:  MOVLB  6
22B0:  MOVWF  x05
22B2:  MOVLW  01
22B4:  MOVLB  5
22B6:  ADDWF  xF9,W
22B8:  MOVLB  6
22BA:  MOVWF  x06
22BC:  MOVFF  605,607
22C0:  MOVWF  x08
22C2:  MOVLW  05
22C4:  MOVWF  x0A
22C6:  MOVLW  FC
22C8:  MOVWF  x09
22CA:  MOVFF  5FB,60B
22CE:  CLRF   x0C
22D0:  MOVLB  0
22D2:  CALL   1012
....................    } 
....................    else 
22D6:  BRA    23C2
22D8:  MOVLB  5
....................    { 
....................       sprintf(voltage, "%03u", digito); 
22DA:  MOVLW  05
22DC:  MOVWF  xF5
22DE:  MOVLW  FC
22E0:  MOVWF  xF4
22E2:  MOVFF  5F7,605
22E6:  MOVLW  03
22E8:  MOVLB  6
22EA:  MOVWF  x06
22EC:  MOVLB  0
22EE:  RCALL  21CE
....................     
....................       if(sombreado==1) 
22F0:  MOVLB  5
22F2:  DECFSZ xFA,W
22F4:  BRA    235A
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
22F6:  MOVF   xFB,W
22F8:  MULLW  05
22FA:  MOVF   FF3,W
22FC:  ADDWF  xF8,W
22FE:  MOVLB  6
2300:  MOVWF  x05
2302:  MOVLB  5
2304:  MOVF   xFB,W
2306:  MULLW  08
2308:  MOVF   FF3,W
230A:  ADDWF  xF9,W
230C:  MOVLB  6
230E:  MOVWF  x06
2310:  MOVFF  5F8,608
2314:  MOVFF  5F9,609
2318:  MOVFF  605,60A
231C:  MOVWF  x0B
231E:  MOVLW  01
2320:  MOVWF  x0C
2322:  MOVWF  x0D
2324:  MOVLB  0
2326:  CALL   1308
232A:  MOVLW  01
232C:  MOVLB  5
232E:  ADDWF  xF8,W
2330:  MOVLB  6
2332:  MOVWF  x05
2334:  MOVLW  01
2336:  MOVLB  5
2338:  ADDWF  xF9,W
233A:  MOVLB  6
233C:  MOVWF  x06
233E:  MOVFF  605,607
2342:  MOVWF  x08
2344:  MOVLW  05
2346:  MOVWF  x0A
2348:  MOVLW  FC
234A:  MOVWF  x09
234C:  MOVFF  5FB,60B
2350:  CLRF   x0C
2352:  MOVLB  0
2354:  CALL   1012
2358:  MOVLB  5
....................       if(sombreado==0) 
235A:  MOVF   xFA,F
235C:  BNZ   23C4
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
235E:  MOVF   xFB,W
2360:  MULLW  05
2362:  MOVF   FF3,W
2364:  ADDWF  xF8,W
2366:  MOVLB  6
2368:  MOVWF  x05
236A:  MOVLB  5
236C:  MOVF   xFB,W
236E:  MULLW  08
2370:  MOVF   FF3,W
2372:  ADDWF  xF9,W
2374:  MOVLB  6
2376:  MOVWF  x06
2378:  MOVFF  5F8,608
237C:  MOVFF  5F9,609
2380:  MOVFF  605,60A
2384:  MOVWF  x0B
2386:  MOVLW  01
2388:  MOVWF  x0C
238A:  CLRF   x0D
238C:  MOVLB  0
238E:  CALL   1308
2392:  MOVLW  01
2394:  MOVLB  5
2396:  ADDWF  xF8,W
2398:  MOVLB  6
239A:  MOVWF  x05
239C:  MOVLW  01
239E:  MOVLB  5
23A0:  ADDWF  xF9,W
23A2:  MOVLB  6
23A4:  MOVWF  x06
23A6:  MOVFF  605,607
23AA:  MOVWF  x08
23AC:  MOVLW  05
23AE:  MOVWF  x0A
23B0:  MOVLW  FC
23B2:  MOVWF  x09
23B4:  MOVFF  5FB,60B
23B8:  MOVLW  01
23BA:  MOVWF  x0C
23BC:  MOVLB  0
23BE:  CALL   1012
23C2:  MOVLB  5
....................    } 
....................    glcd_update(); 
23C4:  MOVLB  0
23C6:  CALL   0DF2
.................... } 
23CA:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
25C8:  MOVLB  5
25CA:  MOVF   xF6,W
25CC:  SUBLW  05
25CE:  BNZ   2678
....................    for( i = 0 ; i < 64 ; i ++ ) 
25D0:  CLRF   xF7
25D2:  MOVF   xF7,W
25D4:  SUBLW  3F
25D6:  BNC   2678
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
25D8:  CLRF   xF8
25DA:  MOVF   xF8,W
25DC:  SUBLW  0F
25DE:  BNC   2674
....................       {     
....................          for(k=7;k>-1;k--) 
25E0:  MOVLW  07
25E2:  MOVWF  xF9
25E4:  MOVF   xF9,W
25E6:  XORLW  80
25E8:  SUBLW  7F
25EA:  BC    2670
....................          {       
....................             if( bit_test(Horno[i][j] ,7-k ))  
25EC:  CLRF   xFB
25EE:  MOVFF  5F7,5FA
25F2:  CLRF   xFD
25F4:  MOVLW  10
25F6:  MOVWF  xFC
25F8:  MOVLB  0
25FA:  CALL   1B30
25FE:  MOVFF  02,5FB
2602:  MOVFF  01,5FA
2606:  MOVLB  5
2608:  MOVF   xF8,W
260A:  ADDWF  01,W
260C:  MOVWF  01
260E:  MOVLW  00
2610:  ADDWFC 02,W
2612:  MOVWF  03
2614:  MOVF   01,W
2616:  MOVFF  FF2,5FA
261A:  BCF    FF2.7
261C:  MOVFF  03,FF7
2620:  MOVLB  0
2622:  CALL   02A6
2626:  MOVLB  5
2628:  BTFSC  xFA.7
262A:  BSF    FF2.7
262C:  MOVWF  xFA
262E:  MOVLW  07
2630:  BSF    FD8.0
2632:  SUBFWB xF9,W
2634:  MOVWF  xFB
2636:  MOVFF  5FA,00
263A:  MOVF   xFB,W
263C:  MOVWF  01
263E:  BZ    2648
2640:  BCF    FD8.0
2642:  RRCF   00,F
2644:  DECFSZ 01,F
2646:  BRA    2640
2648:  BTFSS  00.0
264A:  BRA    266C
....................                glcd_pixel( j*8+k,i, ON ); 
264C:  MOVF   xF8,W
264E:  MULLW  08
2650:  MOVF   FF3,W
2652:  ADDWF  xF9,W
2654:  MOVWF  xFA
2656:  MOVFF  FE8,623
265A:  MOVFF  5F7,624
265E:  MOVLW  01
2660:  MOVLB  6
2662:  MOVWF  x25
2664:  MOVLB  0
2666:  CALL   0F56
266A:  MOVLB  5
....................          }   
266C:  DECF   xF9,F
266E:  BRA    25E4
....................       } 
2670:  INCF   xF8,F
2672:  BRA    25DA
....................    } 
2674:  INCF   xF7,F
2676:  BRA    25D2
....................    } 
....................     
.................... } 
2678:  MOVLB  0
267A:  GOTO   5118 (RETURN)
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0CA0:  MOVLW  15
0CA2:  MOVWF  FCF
0CA4:  MOVLW  A0
0CA6:  MOVWF  FCE
....................    tiempos++; 
0CA8:  MOVLB  5
0CAA:  INCF   x74,F
0CAC:  BTFSC  FD8.2
0CAE:  INCF   x75,F
....................    tiempos3++; 
0CB0:  INCF   x76,F
0CB2:  BTFSC  FD8.2
0CB4:  INCF   x77,F
....................    tiempoctrl++; 
0CB6:  INCF   x78,F
0CB8:  BTFSC  FD8.2
0CBA:  INCF   x79,F
....................     
....................    if(tiempos>=200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0CBC:  MOVF   x75,F
0CBE:  BNZ   0CC6
0CC0:  MOVF   x74,W
0CC2:  SUBLW  C7
0CC4:  BC    0CF0
....................    {tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++; 
0CC6:  CLRF   x75
0CC8:  CLRF   x74
0CCA:  BSF    x65.4
0CCC:  INCF   x68,F
0CCE:  INCF   x6F,F
0CD0:  INCF   x63,F
....................     
....................       if(flag_setpoint==1) 
0CD2:  BTFSS  x66.4
0CD4:  BRA    0CDC
....................          tiemposetpoint++; 
0CD6:  INCF   x7E,F
0CD8:  BTFSC  FD8.2
0CDA:  INCF   x7F,F
....................           
....................       if(tiempo_esterilizacion==1) 
0CDC:  DECFSZ x72,W
0CDE:  BRA    0CE6
....................       {                
....................          tinicio++; 
0CE0:  INCF   x7A,F
0CE2:  BTFSC  FD8.2
0CE4:  INCF   x7B,F
....................       } 
....................        
....................       if(flag_tiempocalentamiento==1) 
0CE6:  BTFSS  x66.2
0CE8:  BRA    0CF0
....................       { 
....................          tiempocalentamiento++; 
0CEA:  INCF   x7C,F
0CEC:  BTFSC  FD8.2
0CEE:  INCF   x7D,F
....................       } 
....................    }         
.................... } 
....................     
0CF0:  BCF    F9E.0
0CF2:  MOVLB  0
0CF4:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
.................... } 
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
2F7A:  MOVLW  05
2F7C:  MOVLB  5
2F7E:  MOVWF  xF5
2F80:  MOVLW  FD
2F82:  MOVWF  xF4
2F84:  MOVLW  42
2F86:  MOVWF  FE9
2F88:  MOVFF  5F9,609
2F8C:  MOVFF  5F8,608
2F90:  MOVFF  5F7,607
2F94:  MOVFF  5F6,606
2F98:  MOVLW  01
2F9A:  MOVLB  6
2F9C:  MOVWF  x0A
2F9E:  MOVLB  0
2FA0:  BRA    2DC4
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
2FA2:  MOVLB  5
2FA4:  MOVF   xFC,W
2FA6:  MULLW  1B
2FA8:  MOVF   FF3,W
2FAA:  ADDWF  xFA,W
2FAC:  MOVLB  6
2FAE:  MOVWF  x06
2FB0:  MOVLB  5
2FB2:  MOVF   xFC,W
2FB4:  MULLW  08
2FB6:  MOVF   FF3,W
2FB8:  ADDWF  xFB,W
2FBA:  MOVLB  6
2FBC:  MOVWF  x07
2FBE:  MOVFF  5FA,608
2FC2:  MOVFF  5FB,609
2FC6:  MOVFF  606,60A
2FCA:  MOVWF  x0B
2FCC:  MOVLW  01
2FCE:  MOVWF  x0C
2FD0:  CLRF   x0D
2FD2:  MOVLB  0
2FD4:  CALL   1308
....................    glcd_text57(x, y, voltage, w, ON); 
2FD8:  MOVFF  5FA,607
2FDC:  MOVFF  5FB,608
2FE0:  MOVLW  05
2FE2:  MOVLB  6
2FE4:  MOVWF  x0A
2FE6:  MOVLW  FD
2FE8:  MOVWF  x09
2FEA:  MOVFF  5FC,60B
2FEE:  MOVLW  01
2FF0:  MOVWF  x0C
2FF2:  MOVLB  0
2FF4:  CALL   1012
.................... } 
2FF8:  GOTO   57AA (RETURN)
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
1602:  MOVLW  05
1604:  MOVLB  5
1606:  MOVWF  xF5
1608:  MOVLW  FC
160A:  MOVWF  xF4
160C:  MOVFF  5F8,605
1610:  MOVLW  1F
1612:  MOVLB  6
1614:  MOVWF  x06
1616:  MOVLB  0
1618:  BRA    1522
....................     
....................    if(sombreado==1) 
161A:  MOVLB  5
161C:  DECFSZ xFB,W
161E:  BRA    167A
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1620:  MOVLW  12
1622:  ADDWF  xF9,W
1624:  MOVLB  6
1626:  MOVWF  x05
1628:  MOVLW  18
162A:  MOVLB  5
162C:  ADDWF  xFA,W
162E:  MOVLB  6
1630:  MOVWF  x06
1632:  MOVFF  5F9,608
1636:  MOVFF  5FA,609
163A:  MOVFF  605,60A
163E:  MOVWF  x0B
1640:  MOVLW  01
1642:  MOVWF  x0C
1644:  MOVWF  x0D
1646:  MOVLB  0
1648:  RCALL  1308
164A:  MOVLW  02
164C:  MOVLB  5
164E:  ADDWF  xF9,W
1650:  MOVLB  6
1652:  MOVWF  x05
1654:  MOVLW  01
1656:  MOVLB  5
1658:  ADDWF  xFA,W
165A:  MOVLB  6
165C:  MOVWF  x06
165E:  MOVFF  605,607
1662:  MOVWF  x08
1664:  MOVLW  05
1666:  MOVWF  x0A
1668:  MOVLW  FC
166A:  MOVWF  x09
166C:  MOVLW  02
166E:  MOVWF  x0B
1670:  CLRF   x0C
1672:  MOVLB  0
1674:  RCALL  1012
....................    else    
1676:  BRA    16D0
1678:  MOVLB  5
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
167A:  MOVLW  12
167C:  ADDWF  xF9,W
167E:  MOVLB  6
1680:  MOVWF  x05
1682:  MOVLW  18
1684:  MOVLB  5
1686:  ADDWF  xFA,W
1688:  MOVLB  6
168A:  MOVWF  x06
168C:  MOVFF  5F9,608
1690:  MOVFF  5FA,609
1694:  MOVFF  605,60A
1698:  MOVWF  x0B
169A:  CLRF   x0C
169C:  CLRF   x0D
169E:  MOVLB  0
16A0:  RCALL  1308
16A2:  MOVLW  02
16A4:  MOVLB  5
16A6:  ADDWF  xF9,W
16A8:  MOVLB  6
16AA:  MOVWF  x05
16AC:  MOVLW  01
16AE:  MOVLB  5
16B0:  ADDWF  xFA,W
16B2:  MOVLB  6
16B4:  MOVWF  x06
16B6:  MOVFF  605,607
16BA:  MOVWF  x08
16BC:  MOVLW  05
16BE:  MOVWF  x0A
16C0:  MOVLW  FC
16C2:  MOVWF  x09
16C4:  MOVLW  02
16C6:  MOVWF  x0B
16C8:  MOVLW  01
16CA:  MOVWF  x0C
16CC:  MOVLB  0
16CE:  RCALL  1012
....................  
.................... } 
16D0:  RETLW  00
....................  
....................  
.................... void main() 
.................... { 
*
2FFC:  CLRF   FF8
2FFE:  BCF    FD0.7
3000:  BSF    07.7
3002:  CLRF   FEA
3004:  CLRF   FE9
3006:  MOVLB  5
3008:  CLRF   x5E
300A:  CLRF   x5F
300C:  CLRF   x60
300E:  CLRF   x61
3010:  MOVLW  0A
3012:  MOVWF  x62
3014:  CLRF   x63
3016:  CLRF   x64
3018:  BCF    x65.0
301A:  BCF    x65.1
301C:  BCF    x65.2
301E:  BSF    x65.3
3020:  BCF    x65.4
3022:  BCF    x65.5
3024:  BCF    x65.6
3026:  BCF    x65.7
3028:  BCF    x66.0
302A:  BCF    x66.1
302C:  BCF    x66.2
302E:  BCF    x66.3
3030:  BCF    x66.4
3032:  BCF    x66.5
3034:  CLRF   x67
3036:  CLRF   x68
3038:  CLRF   x69
303A:  CLRF   x6A
303C:  MOVLW  01
303E:  MOVWF  x6B
3040:  CLRF   x6C
3042:  CLRF   x6D
3044:  CLRF   x6E
3046:  CLRF   x6F
3048:  CLRF   x70
304A:  MOVWF  x71
304C:  CLRF   x72
304E:  CLRF   x73
3050:  CLRF   x75
3052:  CLRF   x74
3054:  CLRF   x77
3056:  CLRF   x76
3058:  CLRF   x79
305A:  CLRF   x78
305C:  CLRF   x7B
305E:  CLRF   x7A
3060:  CLRF   x7D
3062:  CLRF   x7C
3064:  CLRF   x7F
3066:  CLRF   x7E
3068:  CLRF   x81
306A:  CLRF   x80
306C:  CLRF   x85
306E:  CLRF   x84
3070:  CLRF   x83
3072:  CLRF   x82
3074:  CLRF   x89
3076:  CLRF   x88
3078:  CLRF   x87
307A:  CLRF   x86
307C:  CLRF   x8D
307E:  CLRF   x8C
3080:  CLRF   x8B
3082:  CLRF   x8A
3084:  CLRF   xA1
3086:  CLRF   xA0
3088:  CLRF   x9F
308A:  CLRF   x9E
308C:  CLRF   xA5
308E:  MOVLW  40
3090:  MOVWF  xA4
3092:  MOVLW  1C
3094:  MOVWF  xA3
3096:  MOVLW  8C
3098:  MOVWF  xA2
309A:  CLRF   xAD
309C:  CLRF   xAC
309E:  MOVLW  20
30A0:  MOVWF  xAB
30A2:  MOVLW  82
30A4:  MOVWF  xAA
30A6:  CLRF   xB1
30A8:  CLRF   xB0
30AA:  CLRF   xAF
30AC:  CLRF   xAE
30AE:  CLRF   xB5
30B0:  CLRF   xB4
30B2:  CLRF   xB3
30B4:  CLRF   xB2
30B6:  CLRF   xB9
30B8:  CLRF   xB8
30BA:  CLRF   xB7
30BC:  CLRF   xB6
30BE:  CLRF   xBD
30C0:  CLRF   xBC
30C2:  CLRF   xBB
30C4:  CLRF   xBA
30C6:  CLRF   xC1
30C8:  CLRF   xC0
30CA:  CLRF   xBF
30CC:  CLRF   xBE
30CE:  CLRF   xC5
30D0:  CLRF   xC4
30D2:  MOVLW  48
30D4:  MOVWF  xC3
30D6:  MOVLW  83
30D8:  MOVWF  xC2
30DA:  CLRF   xC9
30DC:  CLRF   xC8
30DE:  CLRF   xC7
30E0:  CLRF   xC6
30E2:  CLRF   xCD
30E4:  CLRF   xCC
30E6:  MOVLW  48
30E8:  MOVWF  xCB
30EA:  MOVLW  85
30EC:  MOVWF  xCA
30EE:  CLRF   xD1
30F0:  CLRF   xD0
30F2:  CLRF   xCF
30F4:  CLRF   xCE
30F6:  CLRF   xD5
30F8:  CLRF   xD4
30FA:  CLRF   xD3
30FC:  CLRF   xD2
30FE:  MOVF   FC1,W
3100:  ANDLW  C0
3102:  IORLW  0F
3104:  MOVWF  FC1
3106:  MOVLW  07
3108:  MOVWF  FB4
310A:  MOVLB  4
310C:  CLRF   x16
310E:  CLRF   x17
3110:  CLRF   x18
3112:  CLRF   x19
3114:  CLRF   x1A
3116:  CLRF   x1B
3118:  CLRF   x1C
311A:  CLRF   x1D
311C:  CLRF   x1E
311E:  CLRF   x1F
3120:  CLRF   x20
3122:  CLRF   x21
3124:  CLRF   x22
3126:  CLRF   x23
3128:  CLRF   x24
312A:  CLRF   x25
312C:  CLRF   x26
312E:  CLRF   x27
3130:  CLRF   x28
3132:  CLRF   x29
3134:  CLRF   x2A
3136:  CLRF   x2B
3138:  CLRF   x2C
313A:  CLRF   x2D
313C:  CLRF   x2E
313E:  CLRF   x2F
3140:  CLRF   x30
3142:  CLRF   x31
3144:  CLRF   x32
3146:  CLRF   x33
3148:  CLRF   x34
314A:  CLRF   x35
314C:  CLRF   x36
314E:  CLRF   x37
3150:  CLRF   x38
3152:  CLRF   x39
3154:  CLRF   x3A
3156:  CLRF   x3B
3158:  CLRF   x3C
315A:  CLRF   x3D
315C:  CLRF   x3E
315E:  CLRF   x3F
3160:  CLRF   x40
3162:  CLRF   x41
3164:  CLRF   x42
3166:  CLRF   x43
3168:  CLRF   x44
316A:  CLRF   x45
316C:  CLRF   x46
316E:  CLRF   x47
3170:  CLRF   x48
3172:  CLRF   x49
3174:  CLRF   x4A
3176:  CLRF   x4B
3178:  CLRF   x4C
317A:  CLRF   x4D
317C:  CLRF   x4E
317E:  CLRF   x4F
3180:  CLRF   x50
3182:  CLRF   x51
3184:  CLRF   x52
3186:  CLRF   x53
3188:  CLRF   x54
318A:  CLRF   x55
318C:  CLRF   x56
318E:  CLRF   x57
3190:  CLRF   x58
3192:  CLRF   x59
3194:  CLRF   x5A
3196:  CLRF   x5B
3198:  CLRF   x5C
319A:  CLRF   x5D
319C:  CLRF   x5E
319E:  CLRF   x5F
31A0:  CLRF   x60
31A2:  CLRF   x61
31A4:  CLRF   x62
31A6:  CLRF   x63
31A8:  CLRF   x64
31AA:  CLRF   x65
31AC:  CLRF   x66
31AE:  CLRF   x67
31B0:  CLRF   x68
31B2:  CLRF   x69
31B4:  CLRF   x6A
31B6:  CLRF   x6B
31B8:  CLRF   x6C
31BA:  CLRF   x6D
31BC:  CLRF   x6E
31BE:  CLRF   x6F
31C0:  CLRF   x70
31C2:  CLRF   x71
31C4:  CLRF   x72
31C6:  CLRF   x73
31C8:  CLRF   x74
31CA:  CLRF   x75
31CC:  CLRF   x76
31CE:  CLRF   x77
31D0:  CLRF   x78
31D2:  CLRF   x79
31D4:  CLRF   x7A
31D6:  CLRF   x7B
31D8:  CLRF   x7C
31DA:  CLRF   x7D
31DC:  CLRF   x7E
31DE:  CLRF   x7F
31E0:  CLRF   x80
31E2:  CLRF   x81
31E4:  CLRF   x82
31E6:  CLRF   x83
31E8:  CLRF   x84
31EA:  CLRF   x85
31EC:  CLRF   x86
31EE:  CLRF   x87
31F0:  CLRF   x88
31F2:  CLRF   x89
31F4:  CLRF   x8A
31F6:  CLRF   x8B
31F8:  CLRF   x8C
31FA:  CLRF   x8D
31FC:  CLRF   x8E
31FE:  CLRF   x8F
3200:  CLRF   x90
3202:  CLRF   x91
3204:  CLRF   x92
3206:  CLRF   x93
3208:  CLRF   x94
320A:  CLRF   x95
320C:  CLRF   x96
320E:  CLRF   x97
3210:  CLRF   x98
3212:  CLRF   x99
3214:  CLRF   x9A
3216:  CLRF   x9B
3218:  CLRF   x9C
321A:  CLRF   x9D
321C:  CLRF   x9E
321E:  CLRF   x9F
3220:  CLRF   xA0
3222:  CLRF   xA1
3224:  CLRF   xA2
3226:  CLRF   xA3
3228:  CLRF   xA4
322A:  CLRF   xA5
322C:  CLRF   xA6
322E:  CLRF   xA7
3230:  CLRF   xA8
3232:  CLRF   xA9
3234:  CLRF   xAA
3236:  CLRF   xAB
3238:  CLRF   xAC
323A:  CLRF   xAD
323C:  CLRF   xAE
323E:  CLRF   xAF
3240:  CLRF   xB0
3242:  CLRF   xB1
3244:  CLRF   xB2
3246:  CLRF   xB3
3248:  CLRF   xB4
324A:  CLRF   xB5
324C:  CLRF   xB6
324E:  CLRF   xB7
3250:  CLRF   xB8
3252:  CLRF   xB9
3254:  CLRF   xBA
3256:  CLRF   xBB
3258:  CLRF   xBC
325A:  CLRF   xBD
325C:  CLRF   xBE
325E:  CLRF   xBF
3260:  CLRF   xC0
3262:  CLRF   xC1
3264:  CLRF   xC2
3266:  CLRF   xC3
3268:  CLRF   xC4
326A:  CLRF   xC5
326C:  CLRF   xC6
326E:  CLRF   xC7
3270:  CLRF   xC8
3272:  CLRF   xC9
3274:  CLRF   xCA
3276:  CLRF   xCB
3278:  CLRF   xCC
327A:  CLRF   xCD
327C:  CLRF   xCE
327E:  CLRF   xCF
3280:  CLRF   xD0
3282:  CLRF   xD1
3284:  CLRF   xD2
3286:  CLRF   xD3
3288:  CLRF   xD4
328A:  CLRF   xD5
328C:  CLRF   xD6
328E:  CLRF   xD7
3290:  CLRF   xD8
3292:  CLRF   xD9
3294:  CLRF   xDA
3296:  CLRF   xDB
3298:  CLRF   xDC
329A:  CLRF   xDD
329C:  CLRF   xDE
329E:  CLRF   xDF
32A0:  CLRF   xE0
32A2:  CLRF   xE1
32A4:  CLRF   xE2
32A6:  CLRF   xE3
32A8:  CLRF   xE4
32AA:  CLRF   xE5
32AC:  CLRF   xE6
32AE:  CLRF   xE7
32B0:  CLRF   xE8
32B2:  CLRF   xE9
32B4:  CLRF   xEA
32B6:  CLRF   xEB
32B8:  CLRF   xEC
32BA:  CLRF   xED
32BC:  CLRF   xEE
32BE:  CLRF   xEF
32C0:  CLRF   xF0
32C2:  CLRF   xF1
32C4:  CLRF   xF2
32C6:  CLRF   xF3
32C8:  CLRF   xF4
32CA:  CLRF   xF5
32CC:  CLRF   xF6
32CE:  CLRF   xF7
32D0:  CLRF   xF8
32D2:  CLRF   xF9
32D4:  CLRF   xFA
32D6:  CLRF   xFB
32D8:  CLRF   xFC
32DA:  CLRF   xFD
32DC:  CLRF   xFE
32DE:  CLRF   xFF
32E0:  MOVLB  5
32E2:  CLRF   x00
32E4:  CLRF   x01
32E6:  CLRF   x02
32E8:  CLRF   x03
32EA:  CLRF   x04
32EC:  CLRF   x05
32EE:  CLRF   x06
32F0:  CLRF   x07
32F2:  CLRF   x08
32F4:  CLRF   x09
32F6:  CLRF   x0A
32F8:  CLRF   x0B
32FA:  CLRF   x0C
32FC:  CLRF   x0D
32FE:  CLRF   x0E
3300:  CLRF   x0F
3302:  CLRF   x10
3304:  CLRF   x11
3306:  CLRF   x12
3308:  CLRF   x13
330A:  CLRF   x14
330C:  CLRF   x15
330E:  CLRF   x16
3310:  CLRF   x17
3312:  CLRF   x18
3314:  CLRF   x19
3316:  CLRF   x1A
3318:  CLRF   x1B
331A:  CLRF   x1C
331C:  CLRF   x1D
331E:  CLRF   x1E
3320:  CLRF   x1F
3322:  CLRF   x20
3324:  CLRF   x21
3326:  CLRF   x22
3328:  CLRF   x23
332A:  CLRF   x24
332C:  CLRF   x25
332E:  CLRF   x26
3330:  CLRF   x27
3332:  CLRF   x28
3334:  CLRF   x29
3336:  CLRF   x2A
3338:  CLRF   x2B
333A:  CLRF   x2C
333C:  CLRF   x2D
333E:  CLRF   x2E
3340:  CLRF   x2F
3342:  CLRF   x30
3344:  CLRF   x31
3346:  CLRF   x32
3348:  CLRF   x33
334A:  CLRF   x34
334C:  CLRF   x35
334E:  CLRF   x36
3350:  CLRF   x37
3352:  CLRF   x38
3354:  CLRF   x39
3356:  CLRF   x3A
3358:  CLRF   x3B
335A:  CLRF   x3C
335C:  CLRF   x3D
335E:  CLRF   x3E
3360:  CLRF   x3F
3362:  CLRF   x40
3364:  CLRF   x41
3366:  CLRF   x42
3368:  CLRF   x43
336A:  CLRF   x44
336C:  CLRF   x45
336E:  CLRF   x46
3370:  CLRF   x47
3372:  CLRF   x48
3374:  CLRF   x49
3376:  CLRF   x4A
3378:  CLRF   x4B
337A:  CLRF   x4C
337C:  CLRF   x4D
337E:  CLRF   x4E
3380:  CLRF   x4F
3382:  CLRF   x50
3384:  CLRF   x51
3386:  CLRF   x52
3388:  CLRF   x53
338A:  CLRF   x54
338C:  CLRF   x55
338E:  CLRF   x56
3390:  CLRF   x57
3392:  CLRF   x58
3394:  CLRF   x59
3396:  CLRF   x5A
3398:  CLRF   x5B
339A:  CLRF   x5C
339C:  CLRF   x5D
339E:  CLRF   x8E
33A0:  CLRF   x8F
33A2:  CLRF   x90
33A4:  CLRF   x91
33A6:  CLRF   x92
33A8:  CLRF   x93
33AA:  CLRF   x94
33AC:  CLRF   x95
33AE:  CLRF   x96
33B0:  CLRF   x97
33B2:  CLRF   x98
33B4:  CLRF   x99
33B6:  CLRF   x9A
33B8:  CLRF   x9B
33BA:  CLRF   x9C
33BC:  CLRF   x9D
33BE:  CLRF   xF4
33C0:  CLRF   xF5
....................    delay_ms(1000);    
33C2:  MOVLW  04
33C4:  MOVWF  xF6
33C6:  MOVLW  FA
33C8:  MOVWF  xFC
33CA:  MOVLB  0
33CC:  CALL   0CF8
33D0:  MOVLB  5
33D2:  DECFSZ xF6,F
33D4:  BRA    33C6
....................    Libre1_on;Libre2_on;Libre3_on;Libre4_on; 
33D6:  BSF    F8B.6
33D8:  BCF    F94.6
33DA:  BSF    F8B.7
33DC:  BCF    F94.7
33DE:  BSF    F8A.0
33E0:  BCF    F93.0
33E2:  BSF    F8A.1
33E4:  BCF    F93.1
....................    Ventilador_off;Resistencia_off;Resistencia2_off; 
33E6:  BCF    F8B.1
33E8:  BCF    F94.1
33EA:  BCF    F8B.0
33EC:  BCF    F94.0
33EE:  BCF    F8B.2
33F0:  BCF    F94.2
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
33F2:  MOVLW  85
33F4:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
33F6:  BSF    F9D.0
....................    setup_adc_ports(AN0_TO_AN3); 
33F8:  MOVF   FC1,W
33FA:  ANDLW  C0
33FC:  IORLW  0B
33FE:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_64); 
3400:  BCF    FC0.0
3402:  BSF    FC0.1
3404:  BSF    FC0.2
3406:  BSF    FC0.7
3408:  BSF    FC2.0
....................    /*setup_ccp1 (CCP_PWM); 
....................    setup_timer_2(T2_DIV_BY_4, 255, 1);    
....................    set_pwm1_duty(0);*/ 
....................    enable_interrupts(global); 
340A:  MOVLW  C0
340C:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0);Testerilizacionp[1]=read_eeprom(1);Testerilizacionp[2]=read_eeprom(2);Testerilizacionp[3]=read_eeprom(3); 
340E:  MOVFF  FF2,5F6
3412:  BCF    FF2.7
3414:  CLRF   FA9
3416:  BCF    FA6.6
3418:  BCF    FA6.7
341A:  BSF    FA6.0
341C:  MOVF   FA8,W
341E:  BTFSC  xF6.7
3420:  BSF    FF2.7
3422:  MOVWF  x92
3424:  MOVFF  FF2,5F6
3428:  BCF    FF2.7
342A:  MOVLW  01
342C:  MOVWF  FA9
342E:  BCF    FA6.6
3430:  BCF    FA6.7
3432:  BSF    FA6.0
3434:  MOVF   FA8,W
3436:  BTFSC  xF6.7
3438:  BSF    FF2.7
343A:  MOVWF  x93
343C:  MOVFF  FF2,5F6
3440:  BCF    FF2.7
3442:  MOVLW  02
3444:  MOVWF  FA9
3446:  BCF    FA6.6
3448:  BCF    FA6.7
344A:  BSF    FA6.0
344C:  MOVF   FA8,W
344E:  BTFSC  xF6.7
3450:  BSF    FF2.7
3452:  MOVWF  x94
3454:  MOVFF  FF2,5F6
3458:  BCF    FF2.7
345A:  MOVLW  03
345C:  MOVWF  FA9
345E:  BCF    FA6.6
3460:  BCF    FA6.7
3462:  BSF    FA6.0
3464:  MOVF   FA8,W
3466:  BTFSC  xF6.7
3468:  BSF    FF2.7
346A:  MOVWF  x95
....................    Setpoint=read_eeprom(8); 
346C:  MOVFF  FF2,5F6
3470:  BCF    FF2.7
3472:  MOVLW  08
3474:  MOVWF  FA9
3476:  BCF    FA6.6
3478:  BCF    FA6.7
347A:  BSF    FA6.0
347C:  MOVF   FA8,W
347E:  BTFSC  xF6.7
3480:  BSF    FF2.7
3482:  MOVWF  x70
....................    Password[0]=read_eeprom(10);Password[1]=read_eeprom(11);Password[2]=read_eeprom(12);Password[3]=read_eeprom(13); 
3484:  MOVFF  FF2,5F6
3488:  BCF    FF2.7
348A:  MOVLW  0A
348C:  MOVWF  FA9
348E:  BCF    FA6.6
3490:  BCF    FA6.7
3492:  BSF    FA6.0
3494:  MOVF   FA8,W
3496:  BTFSC  xF6.7
3498:  BSF    FF2.7
349A:  MOVWF  x9A
349C:  MOVFF  FF2,5F6
34A0:  BCF    FF2.7
34A2:  MOVLW  0B
34A4:  MOVWF  FA9
34A6:  BCF    FA6.6
34A8:  BCF    FA6.7
34AA:  BSF    FA6.0
34AC:  MOVF   FA8,W
34AE:  BTFSC  xF6.7
34B0:  BSF    FF2.7
34B2:  MOVWF  x9B
34B4:  MOVFF  FF2,5F6
34B8:  BCF    FF2.7
34BA:  MOVLW  0C
34BC:  MOVWF  FA9
34BE:  BCF    FA6.6
34C0:  BCF    FA6.7
34C2:  BSF    FA6.0
34C4:  MOVF   FA8,W
34C6:  BTFSC  xF6.7
34C8:  BSF    FF2.7
34CA:  MOVWF  x9C
34CC:  MOVFF  FF2,5F6
34D0:  BCF    FF2.7
34D2:  MOVLW  0D
34D4:  MOVWF  FA9
34D6:  BCF    FA6.6
34D8:  BCF    FA6.7
34DA:  BSF    FA6.0
34DC:  MOVF   FA8,W
34DE:  BTFSC  xF6.7
34E0:  BSF    FF2.7
34E2:  MOVWF  x9D
....................    Ganancia=read_eeprom(20); 
34E4:  MOVFF  FF2,5F6
34E8:  BCF    FF2.7
34EA:  MOVLW  14
34EC:  MOVWF  FA9
34EE:  BCF    FA6.6
34F0:  BCF    FA6.7
34F2:  BSF    FA6.0
34F4:  MOVF   FA8,W
34F6:  BTFSC  xF6.7
34F8:  BSF    FF2.7
34FA:  CLRF   xFD
34FC:  MOVWF  xFC
34FE:  MOVLB  0
3500:  CALL   0D22
3504:  MOVFF  03,5C5
3508:  MOVFF  02,5C4
350C:  MOVFF  01,5C3
3510:  MOVFF  00,5C2
....................    Tciclo=read_eeprom(30); 
3514:  MOVFF  FF2,5F6
3518:  BCF    FF2.7
351A:  MOVLW  1E
351C:  MOVWF  FA9
351E:  BCF    FA6.6
3520:  BCF    FA6.7
3522:  BSF    FA6.0
3524:  MOVF   FA8,W
3526:  MOVLB  5
3528:  BTFSC  xF6.7
352A:  BSF    FF2.7
352C:  CLRF   xFD
352E:  MOVWF  xFC
3530:  MOVLB  0
3532:  CALL   0D22
3536:  MOVFF  03,5AD
353A:  MOVFF  02,5AC
353E:  MOVFF  01,5AB
3542:  MOVFF  00,5AA
....................    Ajuste=read_eeprom(40); 
3546:  MOVFF  FF2,5F6
354A:  BCF    FF2.7
354C:  MOVLW  28
354E:  MOVWF  FA9
3550:  BCF    FA6.6
3552:  BCF    FA6.7
3554:  BSF    FA6.0
3556:  MOVF   FA8,W
3558:  MOVLB  5
355A:  BTFSC  xF6.7
355C:  BSF    FF2.7
355E:  MOVWF  x60
....................    Ajusten=read_eeprom(50); 
3560:  MOVFF  FF2,5F6
3564:  BCF    FF2.7
3566:  MOVLW  32
3568:  MOVWF  FA9
356A:  BCF    FA6.6
356C:  BCF    FA6.7
356E:  BSF    FA6.0
3570:  MOVF   FA8,W
3572:  BTFSC  xF6.7
3574:  BSF    FF2.7
3576:  MOVWF  x61
....................    MediaMovil=read_eeprom(60); 
3578:  MOVFF  FF2,5F6
357C:  BCF    FF2.7
357E:  MOVLW  3C
3580:  MOVWF  FA9
3582:  BCF    FA6.6
3584:  BCF    FA6.7
3586:  BSF    FA6.0
3588:  MOVF   FA8,W
358A:  BTFSC  xF6.7
358C:  BSF    FF2.7
358E:  MOVWF  x62
....................    Coeficiente=read_eeprom(70); 
3590:  MOVFF  FF2,5F6
3594:  BCF    FF2.7
3596:  MOVLW  46
3598:  MOVWF  FA9
359A:  BCF    FA6.6
359C:  BCF    FA6.7
359E:  BSF    FA6.0
35A0:  MOVF   FA8,W
35A2:  BTFSC  xF6.7
35A4:  BSF    FF2.7
35A6:  CLRF   xFD
35A8:  MOVWF  xFC
35AA:  MOVLB  0
35AC:  CALL   0D22
35B0:  MOVFF  03,5CD
35B4:  MOVFF  02,5CC
35B8:  MOVFF  01,5CB
35BC:  MOVFF  00,5CA
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
35C0:  MOVLW  01
35C2:  MOVLB  5
35C4:  MOVWF  xF6
35C6:  MOVLB  0
35C8:  CALL   0EAA
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
35CC:  MOVLB  5
35CE:  CLRF   xF7
35D0:  MOVLB  0
35D2:  CALL   0D98
....................    strcpy(Menus.Letra,"JP Inglobal"); 
35D6:  MOVLW  05
35D8:  MOVWF  FEA
35DA:  MOVLW  D6
35DC:  MOVWF  FE9
35DE:  MOVFF  FF2,5F6
35E2:  BCF    FF2.7
35E4:  MOVLW  00
35E6:  CALL   06BE
35EA:  TBLRD*-
35EC:  TBLRD*+
35EE:  MOVF   FF5,W
35F0:  MOVWF  FEE
35F2:  IORLW  00
35F4:  BNZ   35EC
35F6:  MOVLB  5
35F8:  BTFSC  xF6.7
35FA:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
35FC:  MOVLW  05
35FE:  MOVWF  xF7
3600:  MOVLW  D6
3602:  MOVWF  xF6
3604:  CLRF   xF8
3606:  CLRF   xF9
3608:  CLRF   xFA
360A:  MOVLW  02
360C:  MOVWF  xFB
360E:  MOVLB  0
3610:  CALL   13CA
....................    strcpy(Menus.Letra,"     Incubadora"); 
3614:  MOVLW  05
3616:  MOVWF  FEA
3618:  MOVLW  D6
361A:  MOVWF  FE9
361C:  MOVFF  FF2,5F6
3620:  BCF    FF2.7
3622:  MOVLW  00
3624:  CALL   06E4
3628:  TBLRD*-
362A:  TBLRD*+
362C:  MOVF   FF5,W
362E:  MOVWF  FEE
3630:  IORLW  00
3632:  BNZ   362A
3634:  MOVLB  5
3636:  BTFSC  xF6.7
3638:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
363A:  MOVLW  05
363C:  MOVWF  xF7
363E:  MOVLW  D6
3640:  MOVWF  xF6
3642:  CLRF   xF8
3644:  MOVLW  14
3646:  MOVWF  xF9
3648:  CLRF   xFA
364A:  MOVLW  01
364C:  MOVWF  xFB
364E:  MOVLB  0
3650:  CALL   13CA
....................    strcpy(Menus.Letra,"   Digital" ); 
3654:  MOVLW  05
3656:  MOVWF  FEA
3658:  MOVLW  D6
365A:  MOVWF  FE9
365C:  MOVFF  FF2,5F6
3660:  BCF    FF2.7
3662:  MOVLW  00
3664:  CALL   070E
3668:  TBLRD*-
366A:  TBLRD*+
366C:  MOVF   FF5,W
366E:  MOVWF  FEE
3670:  IORLW  00
3672:  BNZ   366A
3674:  MOVLB  5
3676:  BTFSC  xF6.7
3678:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,1); 
367A:  MOVLW  05
367C:  MOVWF  xF7
367E:  MOVLW  D6
3680:  MOVWF  xF6
3682:  CLRF   xF8
3684:  MOVLW  1E
3686:  MOVWF  xF9
3688:  CLRF   xFA
368A:  MOVLW  01
368C:  MOVWF  xFB
368E:  MOVLB  0
3690:  CALL   13CA
....................    strcpy(Menus.Letra,"  400 Lts"); 
3694:  MOVLW  05
3696:  MOVWF  FEA
3698:  MOVLW  D6
369A:  MOVWF  FE9
369C:  MOVFF  FF2,5F6
36A0:  BCF    FF2.7
36A2:  MOVLW  00
36A4:  CALL   0734
36A8:  TBLRD*-
36AA:  TBLRD*+
36AC:  MOVF   FF5,W
36AE:  MOVWF  FEE
36B0:  IORLW  00
36B2:  BNZ   36AA
36B4:  MOVLB  5
36B6:  BTFSC  xF6.7
36B8:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,45,0,2); 
36BA:  MOVLW  05
36BC:  MOVWF  xF7
36BE:  MOVLW  D6
36C0:  MOVWF  xF6
36C2:  CLRF   xF8
36C4:  MOVLW  2D
36C6:  MOVWF  xF9
36C8:  CLRF   xFA
36CA:  MOVLW  02
36CC:  MOVWF  xFB
36CE:  MOVLB  0
36D0:  CALL   13CA
....................    delay_ms(1000); 
36D4:  MOVLW  04
36D6:  MOVLB  5
36D8:  MOVWF  xF6
36DA:  MOVLW  FA
36DC:  MOVWF  xFC
36DE:  MOVLB  0
36E0:  CALL   0CF8
36E4:  MOVLB  5
36E6:  DECFSZ xF6,F
36E8:  BRA    36DA
....................     
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
36EA:  CLRF   xF7
36EC:  MOVLB  0
36EE:  CALL   0D98
....................    displayContrasena(Contrasena[0],20,30,1); 
36F2:  MOVFF  596,5F8
36F6:  MOVLW  14
36F8:  MOVLB  5
36FA:  MOVWF  xF9
36FC:  MOVLW  1E
36FE:  MOVWF  xFA
3700:  MOVLW  01
3702:  MOVWF  xFB
3704:  MOVLB  0
3706:  CALL   1602
....................    displayContrasena(Contrasena[1],40,30,0); 
370A:  MOVFF  597,5F8
370E:  MOVLW  28
3710:  MOVLB  5
3712:  MOVWF  xF9
3714:  MOVLW  1E
3716:  MOVWF  xFA
3718:  CLRF   xFB
371A:  MOVLB  0
371C:  CALL   1602
....................    displayContrasena(Contrasena[2],60,30,0); 
3720:  MOVFF  598,5F8
3724:  MOVLW  3C
3726:  MOVLB  5
3728:  MOVWF  xF9
372A:  MOVLW  1E
372C:  MOVWF  xFA
372E:  CLRF   xFB
3730:  MOVLB  0
3732:  CALL   1602
....................    displayContrasena(Contrasena[3],80,30,0); 
3736:  MOVFF  599,5F8
373A:  MOVLW  50
373C:  MOVLB  5
373E:  MOVWF  xF9
3740:  MOVLW  1E
3742:  MOVWF  xFA
3744:  CLRF   xFB
3746:  MOVLB  0
3748:  CALL   1602
....................     
....................    for(i=0;i<80;i++) 
374C:  MOVLB  5
374E:  CLRF   x6C
3750:  MOVF   x6C,W
3752:  SUBLW  4F
3754:  BNC   3776
....................    { 
....................       Temperatura=Leer_Sensor(MediaMovil); 
3756:  MOVFF  562,5F6
375A:  MOVLB  0
375C:  CALL   1B52
3760:  MOVFF  03,5D5
3764:  MOVFF  02,5D4
3768:  MOVFF  01,5D3
376C:  MOVFF  00,5D2
....................    } 
3770:  MOVLB  5
3772:  INCF   x6C,F
3774:  BRA    3750
....................    /*Menu=20; 
....................    glcd_fillScreen(OFF); 
....................    Ajuste=0; 
....................    Ajusten=0;*/ 
....................    while(true) 
....................    { 
....................     
....................       if(UP && DOWN && RIGHT && LEFT) 
3776:  BSF    F92.5
3778:  BTFSS  F80.5
377A:  BRA    3806
377C:  BSF    F96.0
377E:  BTFSS  F84.0
3780:  BRA    3806
3782:  BSF    F96.1
3784:  BTFSS  F84.1
3786:  BRA    3806
3788:  BSF    F96.2
378A:  BTFSS  F84.2
378C:  BRA    3806
....................       { 
....................          delay_ms(500); 
378E:  MOVLW  02
3790:  MOVWF  xF6
3792:  MOVLW  FA
3794:  MOVWF  xFC
3796:  MOVLB  0
3798:  CALL   0CF8
379C:  MOVLB  5
379E:  DECFSZ xF6,F
37A0:  BRA    3792
....................          strcpy(Menus.Letra,"Cargando.."); 
37A2:  MOVLW  05
37A4:  MOVWF  FEA
37A6:  MOVLW  D6
37A8:  MOVWF  FE9
37AA:  MOVFF  FF2,5F6
37AE:  BCF    FF2.7
37B0:  MOVLW  00
37B2:  MOVLB  0
37B4:  CALL   0758
37B8:  TBLRD*-
37BA:  TBLRD*+
37BC:  MOVF   FF5,W
37BE:  MOVWF  FEE
37C0:  IORLW  00
37C2:  BNZ   37BA
37C4:  MOVLB  5
37C6:  BTFSC  xF6.7
37C8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,30,1,1); 
37CA:  MOVLW  05
37CC:  MOVWF  xF7
37CE:  MOVLW  D6
37D0:  MOVWF  xF6
37D2:  CLRF   xF8
37D4:  MOVLW  1E
37D6:  MOVWF  xF9
37D8:  MOVLW  01
37DA:  MOVWF  xFA
37DC:  MOVWF  xFB
37DE:  MOVLB  0
37E0:  CALL   13CA
....................          delay_ms(2000); 
37E4:  MOVLW  08
37E6:  MOVLB  5
37E8:  MOVWF  xF6
37EA:  MOVLW  FA
37EC:  MOVWF  xFC
37EE:  MOVLB  0
37F0:  CALL   0CF8
37F4:  MOVLB  5
37F6:  DECFSZ xF6,F
37F8:  BRA    37EA
....................          Menu=100; 
37FA:  MOVLW  64
37FC:  MOVWF  x6A
....................          glcd_fillScreen(OFF); 
37FE:  CLRF   xF7
3800:  MOVLB  0
3802:  CALL   0D98
....................       } 
....................     
....................       glcd_update();             
3806:  MOVLB  0
3808:  CALL   0DF2
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
380C:  MOVLB  5
380E:  MOVF   x6A,F
3810:  BTFSS  FD8.2
3812:  BRA    3D8E
....................        
....................       strcpy(Menus.Letra,"Clave"); 
3814:  MOVLW  05
3816:  MOVWF  FEA
3818:  MOVLW  D6
381A:  MOVWF  FE9
381C:  MOVFF  FF2,5F6
3820:  BCF    FF2.7
3822:  MOVLW  00
3824:  MOVLB  0
3826:  CALL   077E
382A:  TBLRD*-
382C:  TBLRD*+
382E:  MOVF   FF5,W
3830:  MOVWF  FEE
3832:  IORLW  00
3834:  BNZ   382C
3836:  MOVLB  5
3838:  BTFSC  xF6.7
383A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
383C:  MOVLW  05
383E:  MOVWF  xF7
3840:  MOVLW  D6
3842:  MOVWF  xF6
3844:  MOVLW  1E
3846:  MOVWF  xF8
3848:  CLRF   xF9
384A:  MOVLW  01
384C:  MOVWF  xFA
384E:  MOVLW  02
3850:  MOVWF  xFB
3852:  MOVLB  0
3854:  CALL   13CA
....................        
....................        
....................        
....................       if(UP)//Si oprime hacia arriba 
3858:  BSF    F92.5
385A:  BTFSS  F80.5
385C:  BRA    392E
....................       { 
....................          if(Flanco == 0) 
385E:  MOVLB  5
3860:  BTFSC  x65.0
3862:  BRA    392C
....................          { 
....................             Flanco = 1;delay_ms(30); 
3864:  BSF    x65.0
3866:  MOVLW  1E
3868:  MOVWF  xFC
386A:  MOVLB  0
386C:  CALL   0CF8
....................             for(i=1;i<=4;i++) 
3870:  MOVLW  01
3872:  MOVLB  5
3874:  MOVWF  x6C
3876:  MOVF   x6C,W
3878:  SUBLW  04
387A:  BNC   392C
....................             { 
....................                if(unidad==i) 
387C:  MOVF   x6C,W
387E:  SUBWF  x6B,W
3880:  BNZ   38F6
....................                { 
....................                   Contrasena[i-1]++; 
3882:  MOVLW  01
3884:  SUBWF  x6C,W
3886:  CLRF   03
3888:  ADDLW  96
388A:  MOVWF  FE9
388C:  MOVLW  05
388E:  ADDWFC 03,W
3890:  MOVWF  FEA
3892:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
3894:  MOVLW  01
3896:  SUBWF  x6C,W
3898:  CLRF   03
389A:  ADDLW  96
389C:  MOVWF  FE9
389E:  MOVLW  05
38A0:  ADDWFC 03,W
38A2:  MOVWF  FEA
38A4:  BTFSC  FEF.7
38A6:  BRA    38C0
38A8:  MOVF   FEF,W
38AA:  SUBLW  09
38AC:  BC    38C0
....................                   { 
....................                      Contrasena[i-1]=0; 
38AE:  MOVLW  01
38B0:  SUBWF  x6C,W
38B2:  CLRF   03
38B4:  ADDLW  96
38B6:  MOVWF  FE9
38B8:  MOVLW  05
38BA:  ADDWFC 03,W
38BC:  MOVWF  FEA
38BE:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
38C0:  MOVLW  01
38C2:  SUBWF  x6C,W
38C4:  CLRF   03
38C6:  ADDLW  96
38C8:  MOVWF  FE9
38CA:  MOVLW  05
38CC:  ADDWFC 03,W
38CE:  MOVWF  FEA
38D0:  MOVFF  FEF,5F6
38D4:  MOVF   x6C,W
38D6:  MULLW  14
38D8:  MOVFF  FF3,5F7
38DC:  MOVFF  5F6,5F8
38E0:  MOVFF  5F7,5F9
38E4:  MOVLW  1E
38E6:  MOVWF  xFA
38E8:  MOVLW  01
38EA:  MOVWF  xFB
38EC:  MOVLB  0
38EE:  CALL   1602
....................                } 
....................                else 
38F2:  BRA    3926
38F4:  MOVLB  5
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
38F6:  MOVLW  01
38F8:  SUBWF  x6C,W
38FA:  CLRF   03
38FC:  ADDLW  96
38FE:  MOVWF  FE9
3900:  MOVLW  05
3902:  ADDWFC 03,W
3904:  MOVWF  FEA
3906:  MOVFF  FEF,5F6
390A:  MOVF   x6C,W
390C:  MULLW  14
390E:  MOVFF  FF3,5F7
3912:  MOVFF  5F6,5F8
3916:  MOVFF  5F7,5F9
391A:  MOVLW  1E
391C:  MOVWF  xFA
391E:  CLRF   xFB
3920:  MOVLB  0
3922:  CALL   1602
....................                } 
....................             } 
3926:  MOVLB  5
3928:  INCF   x6C,F
392A:  BRA    3876
....................          } 
....................       } 
....................          else 
392C:  BRA    3932
....................             {Flanco = 0;} 
392E:  MOVLB  5
3930:  BCF    x65.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
3932:  BSF    F96.0
3934:  BTFSS  F84.0
3936:  BRA    3A04
....................       { 
....................          if(Flanco2 == 0) 
3938:  BTFSC  x65.2
393A:  BRA    3A02
....................             {Flanco2 = 1;delay_ms(30); 
393C:  BSF    x65.2
393E:  MOVLW  1E
3940:  MOVWF  xFC
3942:  MOVLB  0
3944:  CALL   0CF8
....................                for(i=1;i<=4;i++) 
3948:  MOVLW  01
394A:  MOVLB  5
394C:  MOVWF  x6C
394E:  MOVF   x6C,W
3950:  SUBLW  04
3952:  BNC   3A02
....................                { 
....................                   if(unidad==i) 
3954:  MOVF   x6C,W
3956:  SUBWF  x6B,W
3958:  BNZ   39CC
....................                   {Contrasena[i-1]--;  
395A:  MOVLW  01
395C:  SUBWF  x6C,W
395E:  CLRF   03
3960:  ADDLW  96
3962:  MOVWF  FE9
3964:  MOVLW  05
3966:  ADDWFC 03,W
3968:  MOVWF  FEA
396A:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
396C:  MOVLW  01
396E:  SUBWF  x6C,W
3970:  CLRF   03
3972:  ADDLW  96
3974:  MOVWF  FE9
3976:  MOVLW  05
3978:  ADDWFC 03,W
397A:  MOVWF  FEA
397C:  BTFSC  FEF.7
397E:  BRA    3982
3980:  BRA    3996
....................                         {Contrasena[i-1]=9;} 
3982:  MOVLW  01
3984:  SUBWF  x6C,W
3986:  CLRF   03
3988:  ADDLW  96
398A:  MOVWF  FE9
398C:  MOVLW  05
398E:  ADDWFC 03,W
3990:  MOVWF  FEA
3992:  MOVLW  09
3994:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
3996:  MOVLW  01
3998:  SUBWF  x6C,W
399A:  CLRF   03
399C:  ADDLW  96
399E:  MOVWF  FE9
39A0:  MOVLW  05
39A2:  ADDWFC 03,W
39A4:  MOVWF  FEA
39A6:  MOVFF  FEF,5F6
39AA:  MOVF   x6C,W
39AC:  MULLW  14
39AE:  MOVFF  FF3,5F7
39B2:  MOVFF  5F6,5F8
39B6:  MOVFF  5F7,5F9
39BA:  MOVLW  1E
39BC:  MOVWF  xFA
39BE:  MOVLW  01
39C0:  MOVWF  xFB
39C2:  MOVLB  0
39C4:  CALL   1602
....................                   else 
39C8:  BRA    39FC
39CA:  MOVLB  5
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
39CC:  MOVLW  01
39CE:  SUBWF  x6C,W
39D0:  CLRF   03
39D2:  ADDLW  96
39D4:  MOVWF  FE9
39D6:  MOVLW  05
39D8:  ADDWFC 03,W
39DA:  MOVWF  FEA
39DC:  MOVFF  FEF,5F6
39E0:  MOVF   x6C,W
39E2:  MULLW  14
39E4:  MOVFF  FF3,5F7
39E8:  MOVFF  5F6,5F8
39EC:  MOVFF  5F7,5F9
39F0:  MOVLW  1E
39F2:  MOVWF  xFA
39F4:  CLRF   xFB
39F6:  MOVLB  0
39F8:  CALL   1602
....................                }       
39FC:  MOVLB  5
39FE:  INCF   x6C,F
3A00:  BRA    394E
....................             }      
....................       } 
....................          else 
3A02:  BRA    3A06
....................             {Flanco2 = 0;}   
3A04:  BCF    x65.2
....................              
....................       if(RIGHT)//Si oprime RIGHT 
3A06:  BSF    F96.1
3A08:  BTFSS  F84.1
3A0A:  BRA    3A9E
....................       { 
....................          if(Flanco1 == 0) 
3A0C:  BTFSC  x65.1
3A0E:  BRA    3A9C
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
3A10:  BSF    x65.1
3A12:  MOVLW  1E
3A14:  MOVWF  xFC
3A16:  MOVLB  0
3A18:  CALL   0CF8
3A1C:  MOVLB  5
3A1E:  INCF   x6B,F
....................                for(i=1;i<=4;i++) 
3A20:  MOVLW  01
3A22:  MOVWF  x6C
3A24:  MOVF   x6C,W
3A26:  SUBLW  04
3A28:  BNC   3A9C
....................                { 
....................                   if(unidad==i) 
3A2A:  MOVF   x6C,W
3A2C:  SUBWF  x6B,W
3A2E:  BNZ   3A66
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
3A30:  MOVLW  01
3A32:  SUBWF  x6C,W
3A34:  CLRF   03
3A36:  ADDLW  96
3A38:  MOVWF  FE9
3A3A:  MOVLW  05
3A3C:  ADDWFC 03,W
3A3E:  MOVWF  FEA
3A40:  MOVFF  FEF,5F6
3A44:  MOVF   x6C,W
3A46:  MULLW  14
3A48:  MOVFF  FF3,5F7
3A4C:  MOVFF  5F6,5F8
3A50:  MOVFF  5F7,5F9
3A54:  MOVLW  1E
3A56:  MOVWF  xFA
3A58:  MOVLW  01
3A5A:  MOVWF  xFB
3A5C:  MOVLB  0
3A5E:  CALL   1602
....................                   else 
3A62:  BRA    3A96
3A64:  MOVLB  5
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
3A66:  MOVLW  01
3A68:  SUBWF  x6C,W
3A6A:  CLRF   03
3A6C:  ADDLW  96
3A6E:  MOVWF  FE9
3A70:  MOVLW  05
3A72:  ADDWFC 03,W
3A74:  MOVWF  FEA
3A76:  MOVFF  FEF,5F6
3A7A:  MOVF   x6C,W
3A7C:  MULLW  14
3A7E:  MOVFF  FF3,5F7
3A82:  MOVFF  5F6,5F8
3A86:  MOVFF  5F7,5F9
3A8A:  MOVLW  1E
3A8C:  MOVWF  xFA
3A8E:  CLRF   xFB
3A90:  MOVLB  0
3A92:  CALL   1602
....................                } 
3A96:  MOVLB  5
3A98:  INCF   x6C,F
3A9A:  BRA    3A24
....................             } 
....................       } 
....................          else 
3A9C:  BRA    3AA0
....................             {Flanco1 = 0;}   
3A9E:  BCF    x65.1
....................      
....................       if(unidad>4) 
3AA0:  MOVF   x6B,W
3AA2:  SUBLW  04
3AA4:  BTFSC  FD8.0
3AA6:  BRA    3D8E
....................       {glcd_fillScreen(OFF);unidad=4; 
3AA8:  CLRF   xF7
3AAA:  MOVLB  0
3AAC:  CALL   0D98
3AB0:  MOVLW  04
3AB2:  MOVLB  5
3AB4:  MOVWF  x6B
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
3AB6:  MOVF   x96,W
3AB8:  SUBLW  03
3ABA:  BNZ   3BA2
3ABC:  MOVF   x97,W
3ABE:  SUBLW  08
3AC0:  BNZ   3BA2
3AC2:  MOVF   x98,W
3AC4:  SUBLW  09
3AC6:  BNZ   3BA2
3AC8:  MOVF   x99,W
3ACA:  SUBLW  02
3ACC:  BNZ   3BA2
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
3ACE:  MOVLW  0A
3AD0:  MOVWF  FA9
3AD2:  CLRF   FA8
3AD4:  BCF    FA6.6
3AD6:  BCF    FA6.7
3AD8:  BSF    FA6.2
3ADA:  MOVF   FF2,W
3ADC:  MOVWF  00
3ADE:  BCF    FF2.7
3AE0:  MOVLB  F
3AE2:  MOVLW  55
3AE4:  MOVWF  FA7
3AE6:  MOVLW  AA
3AE8:  MOVWF  FA7
3AEA:  BSF    FA6.1
3AEC:  BTFSC  FA6.1
3AEE:  BRA    3AEC
3AF0:  BCF    FA6.2
3AF2:  MOVF   00,W
3AF4:  IORWF  FF2,F
3AF6:  MOVLW  14
3AF8:  MOVLB  5
3AFA:  MOVWF  xFC
3AFC:  MOVLB  0
3AFE:  CALL   0CF8
3B02:  MOVLW  0B
3B04:  MOVWF  FA9
3B06:  CLRF   FA8
3B08:  BCF    FA6.6
3B0A:  BCF    FA6.7
3B0C:  BSF    FA6.2
3B0E:  MOVF   FF2,W
3B10:  MOVWF  00
3B12:  BCF    FF2.7
3B14:  MOVLB  F
3B16:  MOVLW  55
3B18:  MOVWF  FA7
3B1A:  MOVLW  AA
3B1C:  MOVWF  FA7
3B1E:  BSF    FA6.1
3B20:  BTFSC  FA6.1
3B22:  BRA    3B20
3B24:  BCF    FA6.2
3B26:  MOVF   00,W
3B28:  IORWF  FF2,F
3B2A:  MOVLW  14
3B2C:  MOVLB  5
3B2E:  MOVWF  xFC
3B30:  MOVLB  0
3B32:  CALL   0CF8
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
3B36:  MOVLW  0C
3B38:  MOVWF  FA9
3B3A:  CLRF   FA8
3B3C:  BCF    FA6.6
3B3E:  BCF    FA6.7
3B40:  BSF    FA6.2
3B42:  MOVF   FF2,W
3B44:  MOVWF  00
3B46:  BCF    FF2.7
3B48:  MOVLB  F
3B4A:  MOVLW  55
3B4C:  MOVWF  FA7
3B4E:  MOVLW  AA
3B50:  MOVWF  FA7
3B52:  BSF    FA6.1
3B54:  BTFSC  FA6.1
3B56:  BRA    3B54
3B58:  BCF    FA6.2
3B5A:  MOVF   00,W
3B5C:  IORWF  FF2,F
3B5E:  MOVLW  14
3B60:  MOVLB  5
3B62:  MOVWF  xFC
3B64:  MOVLB  0
3B66:  CALL   0CF8
3B6A:  MOVLW  0D
3B6C:  MOVWF  FA9
3B6E:  CLRF   FA8
3B70:  BCF    FA6.6
3B72:  BCF    FA6.7
3B74:  BSF    FA6.2
3B76:  MOVF   FF2,W
3B78:  MOVWF  00
3B7A:  BCF    FF2.7
3B7C:  MOVLB  F
3B7E:  MOVLW  55
3B80:  MOVWF  FA7
3B82:  MOVLW  AA
3B84:  MOVWF  FA7
3B86:  BSF    FA6.1
3B88:  BTFSC  FA6.1
3B8A:  BRA    3B88
3B8C:  BCF    FA6.2
3B8E:  MOVF   00,W
3B90:  IORWF  FF2,F
3B92:  MOVLW  14
3B94:  MOVLB  5
3B96:  MOVWF  xFC
3B98:  MOVLB  0
3B9A:  CALL   0CF8
....................              reset_cpu();}         
3B9E:  RESET
3BA0:  MOVLB  5
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
3BA2:  MOVF   x9A,W
3BA4:  SUBWF  x96,W
3BA6:  BNZ   3C76
3BA8:  MOVF   x9B,W
3BAA:  SUBWF  x97,W
3BAC:  BNZ   3C76
3BAE:  MOVF   x9C,W
3BB0:  SUBWF  x98,W
3BB2:  BNZ   3C76
3BB4:  MOVF   x9D,W
3BB6:  SUBWF  x99,W
3BB8:  BNZ   3C76
....................          { 
....................             glcd_fillScreen(OFF); 
3BBA:  CLRF   xF7
3BBC:  MOVLB  0
3BBE:  CALL   0D98
....................             strcpy(Menus.Letra,"Clave"); 
3BC2:  MOVLW  05
3BC4:  MOVWF  FEA
3BC6:  MOVLW  D6
3BC8:  MOVWF  FE9
3BCA:  MOVFF  FF2,5F6
3BCE:  BCF    FF2.7
3BD0:  MOVLW  00
3BD2:  CALL   077E
3BD6:  TBLRD*-
3BD8:  TBLRD*+
3BDA:  MOVF   FF5,W
3BDC:  MOVWF  FEE
3BDE:  IORLW  00
3BE0:  BNZ   3BD8
3BE2:  MOVLB  5
3BE4:  BTFSC  xF6.7
3BE6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3BE8:  MOVLW  05
3BEA:  MOVWF  xF7
3BEC:  MOVLW  D6
3BEE:  MOVWF  xF6
3BF0:  MOVLW  1E
3BF2:  MOVWF  xF8
3BF4:  CLRF   xF9
3BF6:  CLRF   xFA
3BF8:  MOVLW  02
3BFA:  MOVWF  xFB
3BFC:  MOVLB  0
3BFE:  CALL   13CA
....................             strcpy(Menus.Letra,"Correcta"); 
3C02:  MOVLW  05
3C04:  MOVWF  FEA
3C06:  MOVLW  D6
3C08:  MOVWF  FE9
3C0A:  MOVFF  FF2,5F6
3C0E:  BCF    FF2.7
3C10:  MOVLW  00
3C12:  CALL   079E
3C16:  TBLRD*-
3C18:  TBLRD*+
3C1A:  MOVF   FF5,W
3C1C:  MOVWF  FEE
3C1E:  IORLW  00
3C20:  BNZ   3C18
3C22:  MOVLB  5
3C24:  BTFSC  xF6.7
3C26:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
3C28:  MOVLW  05
3C2A:  MOVWF  xF7
3C2C:  MOVLW  D6
3C2E:  MOVWF  xF6
3C30:  MOVLW  0F
3C32:  MOVWF  xF8
3C34:  MOVLW  1E
3C36:  MOVWF  xF9
3C38:  CLRF   xFA
3C3A:  MOVLW  02
3C3C:  MOVWF  xFB
3C3E:  MOVLB  0
3C40:  CALL   13CA
....................             Menu=1;glcd_update();delay_ms(1000); 
3C44:  MOVLW  01
3C46:  MOVLB  5
3C48:  MOVWF  x6A
3C4A:  MOVLB  0
3C4C:  CALL   0DF2
3C50:  MOVLW  04
3C52:  MOVLB  5
3C54:  MOVWF  xF6
3C56:  MOVLW  FA
3C58:  MOVWF  xFC
3C5A:  MOVLB  0
3C5C:  CALL   0CF8
3C60:  MOVLB  5
3C62:  DECFSZ xF6,F
3C64:  BRA    3C56
....................             glcd_fillScreen(OFF);unidad=1; 
3C66:  CLRF   xF7
3C68:  MOVLB  0
3C6A:  CALL   0D98
3C6E:  MOVLW  01
3C70:  MOVLB  5
3C72:  MOVWF  x6B
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
3C74:  BRA    3D8E
....................          { 
....................             glcd_fillScreen(OFF); 
3C76:  CLRF   xF7
3C78:  MOVLB  0
3C7A:  CALL   0D98
....................             strcpy(Menus.Letra,"Clave"); 
3C7E:  MOVLW  05
3C80:  MOVWF  FEA
3C82:  MOVLW  D6
3C84:  MOVWF  FE9
3C86:  MOVFF  FF2,5F6
3C8A:  BCF    FF2.7
3C8C:  MOVLW  00
3C8E:  CALL   077E
3C92:  TBLRD*-
3C94:  TBLRD*+
3C96:  MOVF   FF5,W
3C98:  MOVWF  FEE
3C9A:  IORLW  00
3C9C:  BNZ   3C94
3C9E:  MOVLB  5
3CA0:  BTFSC  xF6.7
3CA2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
3CA4:  MOVLW  05
3CA6:  MOVWF  xF7
3CA8:  MOVLW  D6
3CAA:  MOVWF  xF6
3CAC:  MOVLW  1E
3CAE:  MOVWF  xF8
3CB0:  CLRF   xF9
3CB2:  CLRF   xFA
3CB4:  MOVLW  02
3CB6:  MOVWF  xFB
3CB8:  MOVLB  0
3CBA:  CALL   13CA
....................             strcpy(Menus.Letra,"Incorrecta"); 
3CBE:  MOVLW  05
3CC0:  MOVWF  FEA
3CC2:  MOVLW  D6
3CC4:  MOVWF  FE9
3CC6:  MOVFF  FF2,5F6
3CCA:  BCF    FF2.7
3CCC:  MOVLW  00
3CCE:  CALL   07C2
3CD2:  TBLRD*-
3CD4:  TBLRD*+
3CD6:  MOVF   FF5,W
3CD8:  MOVWF  FEE
3CDA:  IORLW  00
3CDC:  BNZ   3CD4
3CDE:  MOVLB  5
3CE0:  BTFSC  xF6.7
3CE2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
3CE4:  MOVLW  05
3CE6:  MOVWF  xF7
3CE8:  MOVLW  D6
3CEA:  MOVWF  xF6
3CEC:  CLRF   xF8
3CEE:  MOVLW  1E
3CF0:  MOVWF  xF9
3CF2:  CLRF   xFA
3CF4:  MOVLW  02
3CF6:  MOVWF  xFB
3CF8:  MOVLB  0
3CFA:  CALL   13CA
....................             Menu=0;glcd_update();delay_ms(1000); 
3CFE:  MOVLB  5
3D00:  CLRF   x6A
3D02:  MOVLB  0
3D04:  CALL   0DF2
3D08:  MOVLW  04
3D0A:  MOVLB  5
3D0C:  MOVWF  xF6
3D0E:  MOVLW  FA
3D10:  MOVWF  xFC
3D12:  MOVLB  0
3D14:  CALL   0CF8
3D18:  MOVLB  5
3D1A:  DECFSZ xF6,F
3D1C:  BRA    3D0E
....................             glcd_fillScreen(OFF);unidad=1; 
3D1E:  CLRF   xF7
3D20:  MOVLB  0
3D22:  CALL   0D98
3D26:  MOVLW  01
3D28:  MOVLB  5
3D2A:  MOVWF  x6B
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
3D2C:  CLRF   x96
3D2E:  CLRF   x97
3D30:  CLRF   x98
3D32:  CLRF   x99
....................             displayContrasena(Contrasena[0],20,30,1); 
3D34:  MOVFF  596,5F8
3D38:  MOVLW  14
3D3A:  MOVWF  xF9
3D3C:  MOVLW  1E
3D3E:  MOVWF  xFA
3D40:  MOVLW  01
3D42:  MOVWF  xFB
3D44:  MOVLB  0
3D46:  CALL   1602
....................             displayContrasena(Contrasena[1],40,30,0); 
3D4A:  MOVFF  597,5F8
3D4E:  MOVLW  28
3D50:  MOVLB  5
3D52:  MOVWF  xF9
3D54:  MOVLW  1E
3D56:  MOVWF  xFA
3D58:  CLRF   xFB
3D5A:  MOVLB  0
3D5C:  CALL   1602
....................             displayContrasena(Contrasena[2],60,30,0); 
3D60:  MOVFF  598,5F8
3D64:  MOVLW  3C
3D66:  MOVLB  5
3D68:  MOVWF  xF9
3D6A:  MOVLW  1E
3D6C:  MOVWF  xFA
3D6E:  CLRF   xFB
3D70:  MOVLB  0
3D72:  CALL   1602
....................             displayContrasena(Contrasena[3],80,30,0); 
3D76:  MOVFF  599,5F8
3D7A:  MOVLW  50
3D7C:  MOVLB  5
3D7E:  MOVWF  xF9
3D80:  MOVLW  1E
3D82:  MOVWF  xFA
3D84:  CLRF   xFB
3D86:  MOVLB  0
3D88:  CALL   1602
3D8C:  MOVLB  5
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
3D8E:  DECFSZ x6A,W
3D90:  BRA    40A4
....................        
....................          if(Opcion>4) 
3D92:  MOVF   x71,W
3D94:  SUBLW  04
3D96:  BC    3D9C
....................          {Opcion=1;} 
3D98:  MOVLW  01
3D9A:  MOVWF  x71
....................          if(Opcion<1) 
3D9C:  MOVF   x71,F
3D9E:  BNZ   3DA4
....................          {Opcion=4;} 
3DA0:  MOVLW  04
3DA2:  MOVWF  x71
....................           
....................          strcpy(Menus.Letra,"Menu"); 
3DA4:  MOVLW  05
3DA6:  MOVWF  FEA
3DA8:  MOVLW  D6
3DAA:  MOVWF  FE9
3DAC:  MOVFF  FF2,5F6
3DB0:  BCF    FF2.7
3DB2:  MOVLW  00
3DB4:  MOVLB  0
3DB6:  CALL   07E8
3DBA:  TBLRD*-
3DBC:  TBLRD*+
3DBE:  MOVF   FF5,W
3DC0:  MOVWF  FEE
3DC2:  IORLW  00
3DC4:  BNZ   3DBC
3DC6:  MOVLB  5
3DC8:  BTFSC  xF6.7
3DCA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
3DCC:  MOVLW  05
3DCE:  MOVWF  xF7
3DD0:  MOVLW  D6
3DD2:  MOVWF  xF6
3DD4:  MOVLW  1E
3DD6:  MOVWF  xF8
3DD8:  CLRF   xF9
3DDA:  MOVLW  01
3DDC:  MOVWF  xFA
3DDE:  MOVLW  02
3DE0:  MOVWF  xFB
3DE2:  MOVLB  0
3DE4:  CALL   13CA
....................        
....................          if(Opcion==1)    
3DE8:  MOVLB  5
3DEA:  DECFSZ x71,W
3DEC:  BRA    3E34
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
3DEE:  MOVLW  05
3DF0:  MOVWF  FEA
3DF2:  MOVLW  D6
3DF4:  MOVWF  FE9
3DF6:  MOVFF  FF2,5F6
3DFA:  BCF    FF2.7
3DFC:  MOVLW  00
3DFE:  MOVLB  0
3E00:  CALL   0808
3E04:  TBLRD*-
3E06:  TBLRD*+
3E08:  MOVF   FF5,W
3E0A:  MOVWF  FEE
3E0C:  IORLW  00
3E0E:  BNZ   3E06
3E10:  MOVLB  5
3E12:  BTFSC  xF6.7
3E14:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
3E16:  MOVLW  05
3E18:  MOVWF  xF7
3E1A:  MOVLW  D6
3E1C:  MOVWF  xF6
3E1E:  CLRF   xF8
3E20:  MOVLW  14
3E22:  MOVWF  xF9
3E24:  MOVLW  01
3E26:  MOVWF  xFA
3E28:  MOVWF  xFB
3E2A:  MOVLB  0
3E2C:  CALL   13CA
....................          else 
3E30:  BRA    3E76
3E32:  MOVLB  5
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
3E34:  MOVLW  05
3E36:  MOVWF  FEA
3E38:  MOVLW  D6
3E3A:  MOVWF  FE9
3E3C:  MOVFF  FF2,5F6
3E40:  BCF    FF2.7
3E42:  MOVLW  00
3E44:  MOVLB  0
3E46:  CALL   0808
3E4A:  TBLRD*-
3E4C:  TBLRD*+
3E4E:  MOVF   FF5,W
3E50:  MOVWF  FEE
3E52:  IORLW  00
3E54:  BNZ   3E4C
3E56:  MOVLB  5
3E58:  BTFSC  xF6.7
3E5A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);} 
3E5C:  MOVLW  05
3E5E:  MOVWF  xF7
3E60:  MOVLW  D6
3E62:  MOVWF  xF6
3E64:  CLRF   xF8
3E66:  MOVLW  14
3E68:  MOVWF  xF9
3E6A:  CLRF   xFA
3E6C:  MOVLW  01
3E6E:  MOVWF  xFB
3E70:  MOVLB  0
3E72:  CALL   13CA
....................           
....................          if(Opcion==2)    
3E76:  MOVLB  5
3E78:  MOVF   x71,W
3E7A:  SUBLW  02
3E7C:  BNZ   3EC4
....................             {strcpy(Menus.Letra,"Temperatura"); 
3E7E:  MOVLW  05
3E80:  MOVWF  FEA
3E82:  MOVLW  D6
3E84:  MOVWF  FE9
3E86:  MOVFF  FF2,5F6
3E8A:  BCF    FF2.7
3E8C:  MOVLW  00
3E8E:  MOVLB  0
3E90:  CALL   0832
3E94:  TBLRD*-
3E96:  TBLRD*+
3E98:  MOVF   FF5,W
3E9A:  MOVWF  FEE
3E9C:  IORLW  00
3E9E:  BNZ   3E96
3EA0:  MOVLB  5
3EA2:  BTFSC  xF6.7
3EA4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
3EA6:  MOVLW  05
3EA8:  MOVWF  xF7
3EAA:  MOVLW  D6
3EAC:  MOVWF  xF6
3EAE:  CLRF   xF8
3EB0:  MOVLW  1E
3EB2:  MOVWF  xF9
3EB4:  MOVLW  01
3EB6:  MOVWF  xFA
3EB8:  MOVWF  xFB
3EBA:  MOVLB  0
3EBC:  CALL   13CA
....................          else 
3EC0:  BRA    3F06
3EC2:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temperatura"); 
3EC4:  MOVLW  05
3EC6:  MOVWF  FEA
3EC8:  MOVLW  D6
3ECA:  MOVWF  FE9
3ECC:  MOVFF  FF2,5F6
3ED0:  BCF    FF2.7
3ED2:  MOVLW  00
3ED4:  MOVLB  0
3ED6:  CALL   0832
3EDA:  TBLRD*-
3EDC:  TBLRD*+
3EDE:  MOVF   FF5,W
3EE0:  MOVWF  FEE
3EE2:  IORLW  00
3EE4:  BNZ   3EDC
3EE6:  MOVLB  5
3EE8:  BTFSC  xF6.7
3EEA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);} 
3EEC:  MOVLW  05
3EEE:  MOVWF  xF7
3EF0:  MOVLW  D6
3EF2:  MOVWF  xF6
3EF4:  CLRF   xF8
3EF6:  MOVLW  1E
3EF8:  MOVWF  xF9
3EFA:  CLRF   xFA
3EFC:  MOVLW  01
3EFE:  MOVWF  xFB
3F00:  MOVLB  0
3F02:  CALL   13CA
....................              
....................          if(Opcion==3)    
3F06:  MOVLB  5
3F08:  MOVF   x71,W
3F0A:  SUBLW  03
3F0C:  BNZ   3F54
....................             {strcpy(Menus.Letra,"Temporizador"); 
3F0E:  MOVLW  05
3F10:  MOVWF  FEA
3F12:  MOVLW  D6
3F14:  MOVWF  FE9
3F16:  MOVFF  FF2,5F6
3F1A:  BCF    FF2.7
3F1C:  MOVLW  00
3F1E:  MOVLB  0
3F20:  CALL   0858
3F24:  TBLRD*-
3F26:  TBLRD*+
3F28:  MOVF   FF5,W
3F2A:  MOVWF  FEE
3F2C:  IORLW  00
3F2E:  BNZ   3F26
3F30:  MOVLB  5
3F32:  BTFSC  xF6.7
3F34:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
3F36:  MOVLW  05
3F38:  MOVWF  xF7
3F3A:  MOVLW  D6
3F3C:  MOVWF  xF6
3F3E:  CLRF   xF8
3F40:  MOVLW  28
3F42:  MOVWF  xF9
3F44:  MOVLW  01
3F46:  MOVWF  xFA
3F48:  MOVWF  xFB
3F4A:  MOVLB  0
3F4C:  CALL   13CA
....................          else 
3F50:  BRA    3F96
3F52:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temporizador"); 
3F54:  MOVLW  05
3F56:  MOVWF  FEA
3F58:  MOVLW  D6
3F5A:  MOVWF  FE9
3F5C:  MOVFF  FF2,5F6
3F60:  BCF    FF2.7
3F62:  MOVLW  00
3F64:  MOVLB  0
3F66:  CALL   0858
3F6A:  TBLRD*-
3F6C:  TBLRD*+
3F6E:  MOVF   FF5,W
3F70:  MOVWF  FEE
3F72:  IORLW  00
3F74:  BNZ   3F6C
3F76:  MOVLB  5
3F78:  BTFSC  xF6.7
3F7A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}    
3F7C:  MOVLW  05
3F7E:  MOVWF  xF7
3F80:  MOVLW  D6
3F82:  MOVWF  xF6
3F84:  CLRF   xF8
3F86:  MOVLW  28
3F88:  MOVWF  xF9
3F8A:  CLRF   xFA
3F8C:  MOVLW  01
3F8E:  MOVWF  xFB
3F90:  MOVLB  0
3F92:  CALL   13CA
....................                          
....................          if(Opcion==4)    
3F96:  MOVLB  5
3F98:  MOVF   x71,W
3F9A:  SUBLW  04
3F9C:  BNZ   3FE4
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3F9E:  MOVLW  05
3FA0:  MOVWF  FEA
3FA2:  MOVLW  D6
3FA4:  MOVWF  FE9
3FA6:  MOVFF  FF2,5F6
3FAA:  BCF    FF2.7
3FAC:  MOVLW  00
3FAE:  MOVLB  0
3FB0:  CALL   0880
3FB4:  TBLRD*-
3FB6:  TBLRD*+
3FB8:  MOVF   FF5,W
3FBA:  MOVWF  FEE
3FBC:  IORLW  00
3FBE:  BNZ   3FB6
3FC0:  MOVLB  5
3FC2:  BTFSC  xF6.7
3FC4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
3FC6:  MOVLW  05
3FC8:  MOVWF  xF7
3FCA:  MOVLW  D6
3FCC:  MOVWF  xF6
3FCE:  CLRF   xF8
3FD0:  MOVLW  32
3FD2:  MOVWF  xF9
3FD4:  MOVLW  01
3FD6:  MOVWF  xFA
3FD8:  MOVWF  xFB
3FDA:  MOVLB  0
3FDC:  CALL   13CA
....................          else 
3FE0:  BRA    4026
3FE2:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
3FE4:  MOVLW  05
3FE6:  MOVWF  FEA
3FE8:  MOVLW  D6
3FEA:  MOVWF  FE9
3FEC:  MOVFF  FF2,5F6
3FF0:  BCF    FF2.7
3FF2:  MOVLW  00
3FF4:  MOVLB  0
3FF6:  CALL   0880
3FFA:  TBLRD*-
3FFC:  TBLRD*+
3FFE:  MOVF   FF5,W
4000:  MOVWF  FEE
4002:  IORLW  00
4004:  BNZ   3FFC
4006:  MOVLB  5
4008:  BTFSC  xF6.7
400A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}      
400C:  MOVLW  05
400E:  MOVWF  xF7
4010:  MOVLW  D6
4012:  MOVWF  xF6
4014:  CLRF   xF8
4016:  MOVLW  32
4018:  MOVWF  xF9
401A:  CLRF   xFA
401C:  MOVLW  01
401E:  MOVWF  xFB
4020:  MOVLB  0
4022:  CALL   13CA
....................              
....................       if(UP)//Si oprime hacia arriba 
4026:  BSF    F92.5
4028:  BTFSS  F80.5
402A:  BRA    4046
....................          {  if(Flanco == 0)  
402C:  MOVLB  5
402E:  BTFSC  x65.0
4030:  BRA    4044
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
4032:  BSF    x65.0
4034:  MOVLW  1E
4036:  MOVWF  xFC
4038:  MOVLB  0
403A:  CALL   0CF8
403E:  MOVLB  5
4040:  DECF   x71,F
4042:  BSF    x65.3
....................                } 
....................          } 
....................             else 
4044:  BRA    404A
....................                {Flanco = 0;} 
4046:  MOVLB  5
4048:  BCF    x65.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
404A:  BSF    F96.0
404C:  BTFSS  F84.0
404E:  BRA    4068
....................          {  if(Flanco2 == 0)  
4050:  BTFSC  x65.2
4052:  BRA    4066
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
4054:  BSF    x65.2
4056:  MOVLW  1E
4058:  MOVWF  xFC
405A:  MOVLB  0
405C:  CALL   0CF8
4060:  MOVLB  5
4062:  INCF   x71,F
4064:  BSF    x65.3
....................                }      
....................          } 
....................             else 
4066:  BRA    406A
....................                {Flanco2 = 0;}   
4068:  BCF    x65.2
....................                 
....................        if(RIGHT)//Si oprime SET 
406A:  BSF    F96.1
406C:  BTFSS  F84.1
406E:  BRA    40A2
....................          {  if(Flanco1 == 0)  
4070:  BTFSC  x65.1
4072:  BRA    40A0
....................                {Flanco1 = 1;delay_ms(500);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4074:  BSF    x65.1
4076:  MOVLW  02
4078:  MOVWF  xF6
407A:  MOVLW  FA
407C:  MOVWF  xFC
407E:  MOVLB  0
4080:  CALL   0CF8
4084:  MOVLB  5
4086:  DECFSZ xF6,F
4088:  BRA    407A
408A:  MOVLW  03
408C:  ADDWF  x71,W
408E:  MOVWF  x6A
4090:  MOVLW  01
4092:  MOVWF  x71
4094:  CLRF   xF7
4096:  MOVLB  0
4098:  CALL   0D98
409C:  MOVLB  5
409E:  BSF    x65.3
....................                } 
....................          } 
....................             else 
40A0:  BRA    40A4
....................                {Flanco1 = 0;}   
40A2:  BCF    x65.1
....................          /*       
....................          if(LEFT)//Si oprime boton de Toma. 
....................          {delay_ms(700);Menu=2;glcd_fillscreen(OFF);}*/ 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Continuar 
40A4:  MOVF   x6A,W
40A6:  SUBLW  04
40A8:  BTFSS  FD8.2
40AA:  BRA    43DC
....................        
....................       if(Opcion>2) 
40AC:  MOVF   x71,W
40AE:  SUBLW  02
40B0:  BC    40B6
....................          Opcion=1; 
40B2:  MOVLW  01
40B4:  MOVWF  x71
....................           
....................       if(Opcion<1) 
40B6:  MOVF   x71,F
40B8:  BNZ   40BE
....................          Opcion=2; 
40BA:  MOVLW  02
40BC:  MOVWF  x71
....................        
....................          strcpy(Menus.Letra,"Continuar"); 
40BE:  MOVLW  05
40C0:  MOVWF  FEA
40C2:  MOVLW  D6
40C4:  MOVWF  FE9
40C6:  MOVFF  FF2,5F6
40CA:  BCF    FF2.7
40CC:  MOVLW  00
40CE:  MOVLB  0
40D0:  CALL   08A8
40D4:  TBLRD*-
40D6:  TBLRD*+
40D8:  MOVF   FF5,W
40DA:  MOVWF  FEE
40DC:  IORLW  00
40DE:  BNZ   40D6
40E0:  MOVLB  5
40E2:  BTFSC  xF6.7
40E4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
40E6:  MOVLW  05
40E8:  MOVWF  xF7
40EA:  MOVLW  D6
40EC:  MOVWF  xF6
40EE:  CLRF   xF8
40F0:  CLRF   xF9
40F2:  MOVLW  01
40F4:  MOVWF  xFA
40F6:  MOVLW  02
40F8:  MOVWF  xFB
40FA:  MOVLB  0
40FC:  CALL   13CA
....................           
....................          if(Opcion==2) 
4100:  MOVLB  5
4102:  MOVF   x71,W
4104:  SUBLW  02
4106:  BNZ   4192
....................          {strcpy(Menus.Letra,"SI"); 
4108:  MOVLW  05
410A:  MOVWF  FEA
410C:  MOVLW  D6
410E:  MOVWF  FE9
4110:  MOVFF  FF2,5F6
4114:  BCF    FF2.7
4116:  MOVLW  00
4118:  MOVLB  0
411A:  CALL   08CC
411E:  TBLRD*-
4120:  TBLRD*+
4122:  MOVF   FF5,W
4124:  MOVWF  FEE
4126:  IORLW  00
4128:  BNZ   4120
412A:  MOVLB  5
412C:  BTFSC  xF6.7
412E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,1,2); 
4130:  MOVLW  05
4132:  MOVWF  xF7
4134:  MOVLW  D6
4136:  MOVWF  xF6
4138:  MOVLW  32
413A:  MOVWF  xF8
413C:  MOVLW  19
413E:  MOVWF  xF9
4140:  MOVLW  01
4142:  MOVWF  xFA
4144:  MOVLW  02
4146:  MOVWF  xFB
4148:  MOVLB  0
414A:  CALL   13CA
....................          strcpy(Menus.Letra,"NO"); 
414E:  MOVLW  05
4150:  MOVWF  FEA
4152:  MOVLW  D6
4154:  MOVWF  FE9
4156:  MOVFF  FF2,5F6
415A:  BCF    FF2.7
415C:  MOVLW  00
415E:  CALL   08EA
4162:  TBLRD*-
4164:  TBLRD*+
4166:  MOVF   FF5,W
4168:  MOVWF  FEE
416A:  IORLW  00
416C:  BNZ   4164
416E:  MOVLB  5
4170:  BTFSC  xF6.7
4172:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,0,2); 
4174:  MOVLW  05
4176:  MOVWF  xF7
4178:  MOVLW  D6
417A:  MOVWF  xF6
417C:  MOVLW  32
417E:  MOVWF  xF8
4180:  MOVLW  2D
4182:  MOVWF  xF9
4184:  CLRF   xFA
4186:  MOVLW  02
4188:  MOVWF  xFB
418A:  MOVLB  0
418C:  CALL   13CA
4190:  MOVLB  5
....................          } 
....................          if(Opcion==1) 
4192:  DECFSZ x71,W
4194:  BRA    4220
....................          {strcpy(Menus.Letra,"SI"); 
4196:  MOVLW  05
4198:  MOVWF  FEA
419A:  MOVLW  D6
419C:  MOVWF  FE9
419E:  MOVFF  FF2,5F6
41A2:  BCF    FF2.7
41A4:  MOVLW  00
41A6:  MOVLB  0
41A8:  CALL   08CC
41AC:  TBLRD*-
41AE:  TBLRD*+
41B0:  MOVF   FF5,W
41B2:  MOVWF  FEE
41B4:  IORLW  00
41B6:  BNZ   41AE
41B8:  MOVLB  5
41BA:  BTFSC  xF6.7
41BC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,25,0,2); 
41BE:  MOVLW  05
41C0:  MOVWF  xF7
41C2:  MOVLW  D6
41C4:  MOVWF  xF6
41C6:  MOVLW  32
41C8:  MOVWF  xF8
41CA:  MOVLW  19
41CC:  MOVWF  xF9
41CE:  CLRF   xFA
41D0:  MOVLW  02
41D2:  MOVWF  xFB
41D4:  MOVLB  0
41D6:  CALL   13CA
....................          strcpy(Menus.Letra,"NO"); 
41DA:  MOVLW  05
41DC:  MOVWF  FEA
41DE:  MOVLW  D6
41E0:  MOVWF  FE9
41E2:  MOVFF  FF2,5F6
41E6:  BCF    FF2.7
41E8:  MOVLW  00
41EA:  CALL   08EA
41EE:  TBLRD*-
41F0:  TBLRD*+
41F2:  MOVF   FF5,W
41F4:  MOVWF  FEE
41F6:  IORLW  00
41F8:  BNZ   41F0
41FA:  MOVLB  5
41FC:  BTFSC  xF6.7
41FE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,50,45,1,2); 
4200:  MOVLW  05
4202:  MOVWF  xF7
4204:  MOVLW  D6
4206:  MOVWF  xF6
4208:  MOVLW  32
420A:  MOVWF  xF8
420C:  MOVLW  2D
420E:  MOVWF  xF9
4210:  MOVLW  01
4212:  MOVWF  xFA
4214:  MOVLW  02
4216:  MOVWF  xFB
4218:  MOVLB  0
421A:  CALL   13CA
421E:  MOVLB  5
....................          } 
....................         
....................        
....................          
....................       if(UP)//Si oprime hacia arriba 
4220:  BSF    F92.5
4222:  BTFSS  F80.5
4224:  BRA    422E
....................       { 
....................          if(Opcion<2) 
4226:  MOVF   x71,W
4228:  SUBLW  01
422A:  BNC   422E
....................          { 
....................             Opcion++; 
422C:  INCF   x71,F
....................          } 
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
422E:  BSF    F96.0
4230:  BTFSS  F84.0
4232:  BRA    423C
....................       {   
....................          if(Opcion>1) 
4234:  MOVF   x71,W
4236:  SUBLW  01
4238:  BC    423C
....................          { 
....................             Opcion--; 
423A:  DECF   x71,F
....................          }   
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
423C:  BSF    F96.1
423E:  BTFSS  F84.1
4240:  BRA    43AA
....................       {   
....................          if(Opcion==2) 
4242:  MOVF   x71,W
4244:  SUBLW  02
4246:  BTFSS  FD8.2
4248:  BRA    4382
....................          { 
....................             Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;glcd_fillScreen(OFF);pausa=0; 
424A:  MOVLW  14
424C:  MOVWF  x6A
424E:  MOVLW  0F
4250:  MOVLB  6
4252:  MOVWF  x08
4254:  MOVLW  12
4256:  MOVWF  x09
4258:  MOVLW  1E
425A:  MOVWF  x0A
425C:  MOVLW  35
425E:  MOVWF  x0B
4260:  CLRF   x0C
4262:  MOVLW  01
4264:  MOVWF  x0D
4266:  MOVLB  0
4268:  CALL   1308
426C:  MOVLB  5
426E:  CLRF   x73
4270:  CLRF   xF7
4272:  MOVLB  0
4274:  CALL   0D98
4278:  MOVLB  5
427A:  CLRF   x6D
....................             Ganancia=Setpoint*(Ganancia/Coeficiente); 
427C:  MOVFF  5C5,5FE
4280:  MOVFF  5C4,5FD
4284:  MOVFF  5C3,5FC
4288:  MOVFF  5C2,5FB
428C:  MOVFF  5CD,602
4290:  MOVFF  5CC,601
4294:  MOVFF  5CB,600
4298:  MOVFF  5CA,5FF
429C:  MOVLB  0
429E:  CALL   172A
42A2:  MOVFF  00,5F6
42A6:  MOVFF  01,5F7
42AA:  MOVFF  02,5F8
42AE:  MOVFF  03,5F9
42B2:  MOVLB  5
42B4:  CLRF   xFD
42B6:  MOVFF  570,5FC
42BA:  MOVLB  0
42BC:  CALL   0D22
42C0:  MOVFF  03,616
42C4:  MOVFF  02,615
42C8:  MOVFF  01,614
42CC:  MOVFF  00,613
42D0:  MOVFF  5F9,61A
42D4:  MOVFF  5F8,619
42D8:  MOVFF  5F7,618
42DC:  MOVFF  5F6,617
42E0:  CALL   1E36
42E4:  MOVFF  03,5C5
42E8:  MOVFF  02,5C4
42EC:  MOVFF  01,5C3
42F0:  MOVFF  00,5C2
....................             Tpulsomin=(Setpoint/150.0); 
42F4:  MOVLB  5
42F6:  CLRF   xFD
42F8:  MOVFF  570,5FC
42FC:  MOVLB  0
42FE:  CALL   0D22
4302:  MOVFF  03,5FE
4306:  MOVFF  02,5FD
430A:  MOVFF  01,5FC
430E:  MOVFF  00,5FB
4312:  MOVLB  6
4314:  CLRF   x02
4316:  CLRF   x01
4318:  MOVLW  16
431A:  MOVWF  x00
431C:  MOVLW  86
431E:  MOVLB  5
4320:  MOVWF  xFF
4322:  MOVLB  0
4324:  CALL   172A
4328:  MOVFF  03,589
432C:  MOVFF  02,588
4330:  MOVFF  01,587
4334:  MOVFF  00,586
....................             Gananciamax=(0.27)*Setpoint; 
4338:  MOVLB  5
433A:  CLRF   xFD
433C:  MOVFF  570,5FC
4340:  MOVLB  0
4342:  CALL   0D22
4346:  MOVLW  71
4348:  MOVLB  6
434A:  MOVWF  x16
434C:  MOVLW  3D
434E:  MOVWF  x15
4350:  MOVLW  0A
4352:  MOVWF  x14
4354:  MOVLW  7D
4356:  MOVWF  x13
4358:  MOVFF  03,61A
435C:  MOVFF  02,619
4360:  MOVFF  01,618
4364:  MOVFF  00,617
4368:  MOVLB  0
436A:  CALL   1E36
436E:  MOVFF  03,58D
4372:  MOVFF  02,58C
4376:  MOVFF  01,58B
437A:  MOVFF  00,58A
....................          } 
....................          else 
437E:  BRA    43AC
4380:  MOVLB  5
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
4382:  MOVLW  04
4384:  MOVWF  xF6
4386:  MOVLW  AF
4388:  MOVWF  xFC
438A:  MOVLB  0
438C:  CALL   0CF8
4390:  MOVLB  5
4392:  DECFSZ xF6,F
4394:  BRA    4386
4396:  MOVLW  01
4398:  MOVWF  x6A
439A:  CLRF   xF7
439C:  MOVLB  0
439E:  CALL   0D98
43A2:  MOVLW  01
43A4:  MOVLB  5
43A6:  MOVWF  x71
43A8:  BSF    x65.3
43AA:  MOVLB  0
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
43AC:  BSF    F96.2
43AE:  BTFSS  F84.2
43B0:  BRA    43DE
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
43B2:  MOVLW  04
43B4:  MOVLB  5
43B6:  MOVWF  xF6
43B8:  MOVLW  AF
43BA:  MOVWF  xFC
43BC:  MOVLB  0
43BE:  CALL   0CF8
43C2:  MOVLB  5
43C4:  DECFSZ xF6,F
43C6:  BRA    43B8
43C8:  MOVLW  01
43CA:  MOVWF  x6A
43CC:  CLRF   xF7
43CE:  MOVLB  0
43D0:  CALL   0D98
43D4:  MOVLW  01
43D6:  MOVLB  5
43D8:  MOVWF  x71
43DA:  BSF    x65.3
43DC:  MOVLB  0
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Temperatura 
43DE:  MOVLB  5
43E0:  MOVF   x6A,W
43E2:  SUBLW  05
43E4:  BTFSS  FD8.2
43E6:  BRA    459E
....................       glcd_circle(85,30,3,NO,ON); 
43E8:  MOVLW  55
43EA:  MOVWF  xF6
43EC:  MOVLW  1E
43EE:  MOVWF  xF7
43F0:  MOVLW  03
43F2:  MOVWF  xF8
43F4:  CLRF   xF9
43F6:  MOVLW  01
43F8:  MOVWF  xFA
43FA:  MOVLB  0
43FC:  CALL   1F7C
....................       strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,92,30,2,3); 
4400:  MOVLW  05
4402:  MOVWF  FEA
4404:  MOVLW  D6
4406:  MOVWF  FE9
4408:  MOVFF  FF2,5F6
440C:  BCF    FF2.7
440E:  MOVLW  00
4410:  CALL   0908
4414:  TBLRD*-
4416:  TBLRD*+
4418:  MOVF   FF5,W
441A:  MOVWF  FEE
441C:  IORLW  00
441E:  BNZ   4416
4420:  MOVLB  5
4422:  BTFSC  xF6.7
4424:  BSF    FF2.7
4426:  MOVLW  05
4428:  MOVWF  xF7
442A:  MOVLW  D6
442C:  MOVWF  xF6
442E:  MOVLW  5C
4430:  MOVWF  xF8
4432:  MOVLW  1E
4434:  MOVWF  xF9
4436:  MOVLW  02
4438:  MOVWF  xFA
443A:  MOVLW  03
443C:  MOVWF  xFB
443E:  MOVLB  0
4440:  CALL   13CA
....................        
....................          //glcd_fillScreen(OFF); 
....................          strcpy(Menus.Letra,"Temperatura"); 
4444:  MOVLW  05
4446:  MOVWF  FEA
4448:  MOVLW  D6
444A:  MOVWF  FE9
444C:  MOVFF  FF2,5F6
4450:  BCF    FF2.7
4452:  MOVLW  00
4454:  CALL   0832
4458:  TBLRD*-
445A:  TBLRD*+
445C:  MOVF   FF5,W
445E:  MOVWF  FEE
4460:  IORLW  00
4462:  BNZ   445A
4464:  MOVLB  5
4466:  BTFSC  xF6.7
4468:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
446A:  MOVLW  05
446C:  MOVWF  xF7
446E:  MOVLW  D6
4470:  MOVWF  xF6
4472:  CLRF   xF8
4474:  CLRF   xF9
4476:  MOVLW  01
4478:  MOVWF  xFA
447A:  MOVLW  02
447C:  MOVWF  xFB
447E:  MOVLB  0
4480:  CALL   13CA
....................           
....................          displayTemperatura(Setpoint,30,30,0,3); 
4484:  MOVFF  570,5F7
4488:  MOVLW  1E
448A:  MOVLB  5
448C:  MOVWF  xF8
448E:  MOVWF  xF9
4490:  CLRF   xFA
4492:  MOVLW  03
4494:  MOVWF  xFB
4496:  MOVLB  0
4498:  CALL   2254
....................        
....................          if(UP)//Si oprime hacia arriba 
449C:  BSF    F92.5
449E:  BTFSS  F80.5
44A0:  BRA    44EC
....................          {   
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(30, 30, 80, 55, YES, OFF); 
44A2:  MOVLW  1E
44A4:  MOVLB  6
44A6:  MOVWF  x08
44A8:  MOVWF  x09
44AA:  MOVLW  50
44AC:  MOVWF  x0A
44AE:  MOVLW  37
44B0:  MOVWF  x0B
44B2:  MOVLW  01
44B4:  MOVWF  x0C
44B6:  CLRF   x0D
44B8:  MOVLB  0
44BA:  CALL   1308
....................                if(Setpoint>60) 
44BE:  MOVLB  5
44C0:  MOVF   x70,W
44C2:  SUBLW  3C
44C4:  BC    44DA
....................                { 
....................                   Setpoint=60;delay_ms(100);visual=1; 
44C6:  MOVLW  3C
44C8:  MOVWF  x70
44CA:  MOVLW  64
44CC:  MOVWF  xFC
44CE:  MOVLB  0
44D0:  CALL   0CF8
44D4:  MOVLB  5
44D6:  BSF    x65.3
....................                } 
....................                else 
44D8:  BRA    44EA
....................                { 
....................                   delay_ms(30);Setpoint++;visual=1; 
44DA:  MOVLW  1E
44DC:  MOVWF  xFC
44DE:  MOVLB  0
44E0:  CALL   0CF8
44E4:  MOVLB  5
44E6:  INCF   x70,F
44E8:  BSF    x65.3
44EA:  MOVLB  0
....................                } 
....................              
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
44EC:  BSF    F96.0
44EE:  BTFSS  F84.0
44F0:  BRA    4528
....................          {   
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(30, 30, 80, 55, YES, OFF); 
44F2:  MOVLW  1E
44F4:  MOVLB  6
44F6:  MOVWF  x08
44F8:  MOVWF  x09
44FA:  MOVLW  50
44FC:  MOVWF  x0A
44FE:  MOVLW  37
4500:  MOVWF  x0B
4502:  MOVLW  01
4504:  MOVWF  x0C
4506:  CLRF   x0D
4508:  MOVLB  0
450A:  CALL   1308
....................             if(Setpoint>20) 
450E:  MOVLB  5
4510:  MOVF   x70,W
4512:  SUBLW  14
4514:  BC    4526
....................             { 
....................                delay_ms(30);Setpoint--;visual=1;      
4516:  MOVLW  1E
4518:  MOVWF  xFC
451A:  MOVLB  0
451C:  CALL   0CF8
4520:  MOVLB  5
4522:  DECF   x70,F
4524:  BSF    x65.3
4526:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
4528:  BSF    F96.1
452A:  BTFSS  F84.1
452C:  BRA    4540
....................          {   
....................             delay_ms(30);visual=1; 
452E:  MOVLW  1E
4530:  MOVLB  5
4532:  MOVWF  xFC
4534:  MOVLB  0
4536:  CALL   0CF8
453A:  MOVLB  5
453C:  BSF    x65.3
453E:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
4540:  BSF    F96.2
4542:  BTFSS  F84.2
4544:  BRA    459C
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
4546:  MOVLW  04
4548:  MOVLB  5
454A:  MOVWF  xF6
454C:  MOVLW  AF
454E:  MOVWF  xFC
4550:  MOVLB  0
4552:  CALL   0CF8
4556:  MOVLB  5
4558:  DECFSZ xF6,F
455A:  BRA    454C
455C:  MOVLW  01
455E:  MOVWF  x6A
4560:  CLRF   xF7
4562:  MOVLB  0
4564:  CALL   0D98
4568:  MOVLW  01
456A:  MOVLB  5
456C:  MOVWF  x71
456E:  BSF    x65.3
....................             write_eeprom(8,Setpoint); 
4570:  MOVLW  08
4572:  MOVWF  FA9
4574:  MOVFF  570,FA8
4578:  BCF    FA6.6
457A:  BCF    FA6.7
457C:  BSF    FA6.2
457E:  MOVF   FF2,W
4580:  MOVWF  00
4582:  BCF    FF2.7
4584:  MOVLB  F
4586:  MOVLW  55
4588:  MOVWF  FA7
458A:  MOVLW  AA
458C:  MOVWF  FA7
458E:  BSF    FA6.1
4590:  BTFSC  FA6.1
4592:  BRA    4590
4594:  BCF    FA6.2
4596:  MOVF   00,W
4598:  IORWF  FF2,F
459A:  MOVLB  0
459C:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Temporizador 
459E:  MOVF   x6A,W
45A0:  SUBLW  06
45A2:  BTFSS  FD8.2
45A4:  BRA    489A
....................       
....................        
....................          if(unidad<1) 
45A6:  MOVF   x6B,F
45A8:  BNZ   45AE
....................          {unidad=4;} 
45AA:  MOVLW  04
45AC:  MOVWF  x6B
....................           
....................          strcpy(Menus.Letra,"Temporiza"); 
45AE:  MOVLW  05
45B0:  MOVWF  FEA
45B2:  MOVLW  D6
45B4:  MOVWF  FE9
45B6:  MOVFF  FF2,5F6
45BA:  BCF    FF2.7
45BC:  MOVLW  00
45BE:  MOVLB  0
45C0:  CALL   0924
45C4:  TBLRD*-
45C6:  TBLRD*+
45C8:  MOVF   FF5,W
45CA:  MOVWF  FEE
45CC:  IORLW  00
45CE:  BNZ   45C6
45D0:  MOVLB  5
45D2:  BTFSC  xF6.7
45D4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
45D6:  MOVLW  05
45D8:  MOVWF  xF7
45DA:  MOVLW  D6
45DC:  MOVWF  xF6
45DE:  CLRF   xF8
45E0:  CLRF   xF9
45E2:  MOVLW  01
45E4:  MOVWF  xFA
45E6:  MOVLW  02
45E8:  MOVWF  xFB
45EA:  MOVLB  0
45EC:  CALL   13CA
....................           
....................          if(unidad==4) 
45F0:  MOVLB  5
45F2:  MOVF   x6B,W
45F4:  SUBLW  04
45F6:  BNZ   4616
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
45F8:  MOVFF  595,5F7
45FC:  MOVLW  14
45FE:  MOVWF  xF8
4600:  MOVLW  28
4602:  MOVWF  xF9
4604:  MOVLW  01
4606:  MOVWF  xFA
4608:  MOVLW  02
460A:  MOVWF  xFB
460C:  MOVLB  0
460E:  CALL   23CC
....................          else 
4612:  BRA    462E
4614:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
4616:  MOVFF  595,5F7
461A:  MOVLW  14
461C:  MOVWF  xF8
461E:  MOVLW  28
4620:  MOVWF  xF9
4622:  CLRF   xFA
4624:  MOVLW  02
4626:  MOVWF  xFB
4628:  MOVLB  0
462A:  CALL   23CC
....................           
....................          if(unidad==3) 
462E:  MOVLB  5
4630:  MOVF   x6B,W
4632:  SUBLW  03
4634:  BNZ   4652
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
4636:  MOVFF  594,5F7
463A:  MOVLW  28
463C:  MOVWF  xF8
463E:  MOVWF  xF9
4640:  MOVLW  01
4642:  MOVWF  xFA
4644:  MOVLW  02
4646:  MOVWF  xFB
4648:  MOVLB  0
464A:  CALL   23CC
....................          else 
464E:  BRA    4668
4650:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
4652:  MOVFF  594,5F7
4656:  MOVLW  28
4658:  MOVWF  xF8
465A:  MOVWF  xF9
465C:  CLRF   xFA
465E:  MOVLW  02
4660:  MOVWF  xFB
4662:  MOVLB  0
4664:  CALL   23CC
....................           
....................          if(unidad==2) 
4668:  MOVLB  5
466A:  MOVF   x6B,W
466C:  SUBLW  02
466E:  BNZ   468E
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
4670:  MOVFF  593,5F7
4674:  MOVLW  46
4676:  MOVWF  xF8
4678:  MOVLW  28
467A:  MOVWF  xF9
467C:  MOVLW  01
467E:  MOVWF  xFA
4680:  MOVLW  02
4682:  MOVWF  xFB
4684:  MOVLB  0
4686:  CALL   23CC
....................          else 
468A:  BRA    46A6
468C:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
468E:  MOVFF  593,5F7
4692:  MOVLW  46
4694:  MOVWF  xF8
4696:  MOVLW  28
4698:  MOVWF  xF9
469A:  CLRF   xFA
469C:  MOVLW  02
469E:  MOVWF  xFB
46A0:  MOVLB  0
46A2:  CALL   23CC
....................           
....................          if(unidad==1) 
46A6:  MOVLB  5
46A8:  DECFSZ x6B,W
46AA:  BRA    46CA
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
46AC:  MOVFF  592,5F7
46B0:  MOVLW  5A
46B2:  MOVWF  xF8
46B4:  MOVLW  28
46B6:  MOVWF  xF9
46B8:  MOVLW  01
46BA:  MOVWF  xFA
46BC:  MOVLW  02
46BE:  MOVWF  xFB
46C0:  MOVLB  0
46C2:  CALL   23CC
....................          else 
46C6:  BRA    46E2
46C8:  MOVLB  5
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
46CA:  MOVFF  592,5F7
46CE:  MOVLW  5A
46D0:  MOVWF  xF8
46D2:  MOVLW  28
46D4:  MOVWF  xF9
46D6:  CLRF   xFA
46D8:  MOVLW  02
46DA:  MOVWF  xFB
46DC:  MOVLB  0
46DE:  CALL   23CC
....................           
....................          strcpy(Menus.Letra,":"); 
46E2:  MOVLW  05
46E4:  MOVWF  FEA
46E6:  MOVLW  D6
46E8:  MOVWF  FE9
46EA:  MOVFF  FF2,5F6
46EE:  BCF    FF2.7
46F0:  MOVLW  00
46F2:  CALL   0948
46F6:  TBLRD*-
46F8:  TBLRD*+
46FA:  MOVF   FF5,W
46FC:  MOVWF  FEE
46FE:  IORLW  00
4700:  BNZ   46F8
4702:  MOVLB  5
4704:  BTFSC  xF6.7
4706:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);            
4708:  MOVLW  05
470A:  MOVWF  xF7
470C:  MOVLW  D6
470E:  MOVWF  xF6
4710:  MOVLW  3C
4712:  MOVWF  xF8
4714:  MOVLW  2A
4716:  MOVWF  xF9
4718:  MOVLW  02
471A:  MOVWF  xFA
471C:  MOVWF  xFB
471E:  MOVLB  0
4720:  CALL   13CA
....................        
....................          if(UP)//Si oprime hacia arriba 
4724:  BSF    F92.5
4726:  BTFSS  F80.5
4728:  BRA    4768
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
472A:  MOVLW  01
472C:  MOVLB  5
472E:  SUBWF  x6B,W
4730:  CLRF   03
4732:  ADDLW  92
4734:  MOVWF  FE9
4736:  MOVLW  05
4738:  ADDWFC 03,W
473A:  MOVWF  FEA
473C:  BTFSC  FEF.7
473E:  BRA    4746
4740:  MOVF   FEF,W
4742:  SUBLW  08
4744:  BNC   4766
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
4746:  MOVLW  1E
4748:  MOVWF  xFC
474A:  MOVLB  0
474C:  CALL   0CF8
4750:  MOVLW  01
4752:  MOVLB  5
4754:  SUBWF  x6B,W
4756:  CLRF   03
4758:  ADDLW  92
475A:  MOVWF  FE9
475C:  MOVLW  05
475E:  ADDWFC 03,W
4760:  MOVWF  FEA
4762:  INCF   FEF,F
4764:  BSF    x65.3
4766:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
4768:  BSF    F96.0
476A:  BTFSS  F84.0
476C:  BRA    47AC
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
476E:  MOVLW  01
4770:  MOVLB  5
4772:  SUBWF  x6B,W
4774:  CLRF   03
4776:  ADDLW  92
4778:  MOVWF  FE9
477A:  MOVLW  05
477C:  ADDWFC 03,W
477E:  MOVWF  FEA
4780:  BTFSC  FEF.7
4782:  BRA    47AA
4784:  MOVF   FEF,W
4786:  SUBLW  00
4788:  BC    47AA
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
478A:  MOVLW  1E
478C:  MOVWF  xFC
478E:  MOVLB  0
4790:  CALL   0CF8
4794:  MOVLW  01
4796:  MOVLB  5
4798:  SUBWF  x6B,W
479A:  CLRF   03
479C:  ADDLW  92
479E:  MOVWF  FE9
47A0:  MOVLW  05
47A2:  ADDWFC 03,W
47A4:  MOVWF  FEA
47A6:  DECF   FEF,F
47A8:  BSF    x65.3
47AA:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
47AC:  BSF    F96.1
47AE:  BTFSS  F84.1
47B0:  BRA    47C6
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
47B2:  MOVLW  1E
47B4:  MOVLB  5
47B6:  MOVWF  xFC
47B8:  MOVLB  0
47BA:  CALL   0CF8
47BE:  MOVLB  5
47C0:  DECF   x6B,F
47C2:  BSF    x65.3
47C4:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
47C6:  BSF    F96.2
47C8:  BTFSS  F84.2
47CA:  BRA    4898
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
47CC:  MOVLW  04
47CE:  MOVLB  5
47D0:  MOVWF  xF6
47D2:  MOVLW  AF
47D4:  MOVWF  xFC
47D6:  MOVLB  0
47D8:  CALL   0CF8
47DC:  MOVLB  5
47DE:  DECFSZ xF6,F
47E0:  BRA    47D2
47E2:  MOVLW  01
47E4:  MOVWF  x6A
47E6:  CLRF   xF7
47E8:  MOVLB  0
47EA:  CALL   0D98
47EE:  MOVLW  01
47F0:  MOVLB  5
47F2:  MOVWF  x71
47F4:  BSF    x65.3
....................             write_eeprom(0,Testerilizacionp[0]);write_eeprom(1,Testerilizacionp[1]); 
47F6:  CLRF   FA9
47F8:  MOVFF  592,FA8
47FC:  BCF    FA6.6
47FE:  BCF    FA6.7
4800:  BSF    FA6.2
4802:  MOVF   FF2,W
4804:  MOVWF  00
4806:  BCF    FF2.7
4808:  MOVLB  F
480A:  MOVLW  55
480C:  MOVWF  FA7
480E:  MOVLW  AA
4810:  MOVWF  FA7
4812:  BSF    FA6.1
4814:  BTFSC  FA6.1
4816:  BRA    4814
4818:  BCF    FA6.2
481A:  MOVF   00,W
481C:  IORWF  FF2,F
481E:  MOVLW  01
4820:  MOVWF  FA9
4822:  MOVFF  593,FA8
4826:  BCF    FA6.6
4828:  BCF    FA6.7
482A:  BSF    FA6.2
482C:  MOVF   FF2,W
482E:  MOVWF  00
4830:  BCF    FF2.7
4832:  MOVLW  55
4834:  MOVWF  FA7
4836:  MOVLW  AA
4838:  MOVWF  FA7
483A:  BSF    FA6.1
483C:  BTFSC  FA6.1
483E:  BRA    483C
4840:  BCF    FA6.2
4842:  MOVF   00,W
4844:  IORWF  FF2,F
....................             write_eeprom(2,Testerilizacionp[2]);write_eeprom(3,Testerilizacionp[3]); 
4846:  MOVLW  02
4848:  MOVWF  FA9
484A:  MOVFF  594,FA8
484E:  BCF    FA6.6
4850:  BCF    FA6.7
4852:  BSF    FA6.2
4854:  MOVFF  FF2,00
4858:  BCF    FF2.7
485A:  MOVLW  55
485C:  MOVWF  FA7
485E:  MOVLW  AA
4860:  MOVWF  FA7
4862:  BSF    FA6.1
4864:  BTFSC  FA6.1
4866:  BRA    4864
4868:  BCF    FA6.2
486A:  MOVF   00,W
486C:  IORWF  FF2,F
486E:  MOVLW  03
4870:  MOVWF  FA9
4872:  MOVFF  595,FA8
4876:  BCF    FA6.6
4878:  BCF    FA6.7
487A:  BSF    FA6.2
487C:  MOVFF  FF2,00
4880:  BCF    FF2.7
4882:  MOVLW  55
4884:  MOVWF  FA7
4886:  MOVLW  AA
4888:  MOVWF  FA7
488A:  BSF    FA6.1
488C:  BTFSC  FA6.1
488E:  BRA    488C
4890:  BCF    FA6.2
4892:  MOVF   00,W
4894:  IORWF  FF2,F
4896:  MOVLB  0
4898:  MOVLB  5
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==7){ // Menu de Cambio de Contraseña 
489A:  MOVF   x6A,W
489C:  SUBLW  07
489E:  BTFSS  FD8.2
48A0:  BRA    4D3A
....................          
....................       strcpy(Menus.Letra,"Clave"); 
48A2:  MOVLW  05
48A4:  MOVWF  FEA
48A6:  MOVLW  D6
48A8:  MOVWF  FE9
48AA:  MOVFF  FF2,5F6
48AE:  BCF    FF2.7
48B0:  MOVLW  00
48B2:  MOVLB  0
48B4:  CALL   077E
48B8:  TBLRD*-
48BA:  TBLRD*+
48BC:  MOVF   FF5,W
48BE:  MOVWF  FEE
48C0:  IORLW  00
48C2:  BNZ   48BA
48C4:  MOVLB  5
48C6:  BTFSC  xF6.7
48C8:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
48CA:  MOVLW  05
48CC:  MOVWF  xF7
48CE:  MOVLW  D6
48D0:  MOVWF  xF6
48D2:  MOVLW  1E
48D4:  MOVWF  xF8
48D6:  CLRF   xF9
48D8:  MOVLW  01
48DA:  MOVWF  xFA
48DC:  MOVLW  02
48DE:  MOVWF  xFB
48E0:  MOVLB  0
48E2:  CALL   13CA
....................        
....................       if(unidad==1) 
48E6:  MOVLB  5
48E8:  DECFSZ x6B,W
48EA:  BRA    4948
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
48EC:  MOVFF  596,5F8
48F0:  MOVLW  14
48F2:  MOVWF  xF9
48F4:  MOVLW  1E
48F6:  MOVWF  xFA
48F8:  MOVLW  01
48FA:  MOVWF  xFB
48FC:  MOVLB  0
48FE:  CALL   1602
....................          displayContrasena(Contrasena[1],40,30,0); 
4902:  MOVFF  597,5F8
4906:  MOVLW  28
4908:  MOVLB  5
490A:  MOVWF  xF9
490C:  MOVLW  1E
490E:  MOVWF  xFA
4910:  CLRF   xFB
4912:  MOVLB  0
4914:  CALL   1602
....................          displayContrasena(Contrasena[2],60,30,0); 
4918:  MOVFF  598,5F8
491C:  MOVLW  3C
491E:  MOVLB  5
4920:  MOVWF  xF9
4922:  MOVLW  1E
4924:  MOVWF  xFA
4926:  CLRF   xFB
4928:  MOVLB  0
492A:  CALL   1602
....................          displayContrasena(Contrasena[3],80,30,0); 
492E:  MOVFF  599,5F8
4932:  MOVLW  50
4934:  MOVLB  5
4936:  MOVWF  xF9
4938:  MOVLW  1E
493A:  MOVWF  xFA
493C:  CLRF   xFB
493E:  MOVLB  0
4940:  CALL   1602
....................       } 
....................       else 
4944:  BRA    4A6A
4946:  MOVLB  5
....................       { 
....................          if(unidad==2) 
4948:  MOVF   x6B,W
494A:  SUBLW  02
494C:  BNZ   49AA
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
494E:  MOVFF  596,5F8
4952:  MOVLW  14
4954:  MOVWF  xF9
4956:  MOVLW  1E
4958:  MOVWF  xFA
495A:  CLRF   xFB
495C:  MOVLB  0
495E:  CALL   1602
....................             displayContrasena(Contrasena[1],40,30,1); 
4962:  MOVFF  597,5F8
4966:  MOVLW  28
4968:  MOVLB  5
496A:  MOVWF  xF9
496C:  MOVLW  1E
496E:  MOVWF  xFA
4970:  MOVLW  01
4972:  MOVWF  xFB
4974:  MOVLB  0
4976:  CALL   1602
....................             displayContrasena(Contrasena[2],60,30,0); 
497A:  MOVFF  598,5F8
497E:  MOVLW  3C
4980:  MOVLB  5
4982:  MOVWF  xF9
4984:  MOVLW  1E
4986:  MOVWF  xFA
4988:  CLRF   xFB
498A:  MOVLB  0
498C:  CALL   1602
....................             displayContrasena(Contrasena[3],80,30,0); 
4990:  MOVFF  599,5F8
4994:  MOVLW  50
4996:  MOVLB  5
4998:  MOVWF  xF9
499A:  MOVLW  1E
499C:  MOVWF  xFA
499E:  CLRF   xFB
49A0:  MOVLB  0
49A2:  CALL   1602
....................          } 
....................          else 
49A6:  BRA    4A6A
49A8:  MOVLB  5
....................          { 
....................             if(unidad==3) 
49AA:  MOVF   x6B,W
49AC:  SUBLW  03
49AE:  BNZ   4A0C
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
49B0:  MOVFF  596,5F8
49B4:  MOVLW  14
49B6:  MOVWF  xF9
49B8:  MOVLW  1E
49BA:  MOVWF  xFA
49BC:  CLRF   xFB
49BE:  MOVLB  0
49C0:  CALL   1602
....................                displayContrasena(Contrasena[1],40,30,0); 
49C4:  MOVFF  597,5F8
49C8:  MOVLW  28
49CA:  MOVLB  5
49CC:  MOVWF  xF9
49CE:  MOVLW  1E
49D0:  MOVWF  xFA
49D2:  CLRF   xFB
49D4:  MOVLB  0
49D6:  CALL   1602
....................                displayContrasena(Contrasena[2],60,30,1); 
49DA:  MOVFF  598,5F8
49DE:  MOVLW  3C
49E0:  MOVLB  5
49E2:  MOVWF  xF9
49E4:  MOVLW  1E
49E6:  MOVWF  xFA
49E8:  MOVLW  01
49EA:  MOVWF  xFB
49EC:  MOVLB  0
49EE:  CALL   1602
....................                displayContrasena(Contrasena[3],80,30,0); 
49F2:  MOVFF  599,5F8
49F6:  MOVLW  50
49F8:  MOVLB  5
49FA:  MOVWF  xF9
49FC:  MOVLW  1E
49FE:  MOVWF  xFA
4A00:  CLRF   xFB
4A02:  MOVLB  0
4A04:  CALL   1602
....................             } 
....................             else 
4A08:  BRA    4A6A
4A0A:  MOVLB  5
....................             { 
....................                if(unidad==4) 
4A0C:  MOVF   x6B,W
4A0E:  SUBLW  04
4A10:  BNZ   4A6C
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
4A12:  MOVFF  596,5F8
4A16:  MOVLW  14
4A18:  MOVWF  xF9
4A1A:  MOVLW  1E
4A1C:  MOVWF  xFA
4A1E:  CLRF   xFB
4A20:  MOVLB  0
4A22:  CALL   1602
....................                   displayContrasena(Contrasena[1],40,30,0); 
4A26:  MOVFF  597,5F8
4A2A:  MOVLW  28
4A2C:  MOVLB  5
4A2E:  MOVWF  xF9
4A30:  MOVLW  1E
4A32:  MOVWF  xFA
4A34:  CLRF   xFB
4A36:  MOVLB  0
4A38:  CALL   1602
....................                   displayContrasena(Contrasena[2],60,30,0); 
4A3C:  MOVFF  598,5F8
4A40:  MOVLW  3C
4A42:  MOVLB  5
4A44:  MOVWF  xF9
4A46:  MOVLW  1E
4A48:  MOVWF  xFA
4A4A:  CLRF   xFB
4A4C:  MOVLB  0
4A4E:  CALL   1602
....................                   displayContrasena(Contrasena[3],80,30,1); 
4A52:  MOVFF  599,5F8
4A56:  MOVLW  50
4A58:  MOVLB  5
4A5A:  MOVWF  xF9
4A5C:  MOVLW  1E
4A5E:  MOVWF  xFA
4A60:  MOVLW  01
4A62:  MOVWF  xFB
4A64:  MOVLB  0
4A66:  CALL   1602
4A6A:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4A6C:  BSF    F92.5
4A6E:  BTFSS  F80.5
4A70:  BRA    4AD8
....................       { 
....................          if(Flanco == 0) 
4A72:  BTFSC  x65.0
4A74:  BRA    4AD6
....................          { 
....................             Flanco = 1;delay_ms(30); 
4A76:  BSF    x65.0
4A78:  MOVLW  1E
4A7A:  MOVWF  xFC
4A7C:  MOVLB  0
4A7E:  CALL   0CF8
....................             for(i=1;i<=4;i++) 
4A82:  MOVLW  01
4A84:  MOVLB  5
4A86:  MOVWF  x6C
4A88:  MOVF   x6C,W
4A8A:  SUBLW  04
4A8C:  BNC   4AD6
....................             { 
....................                if(unidad==i) 
4A8E:  MOVF   x6C,W
4A90:  SUBWF  x6B,W
4A92:  BNZ   4AD2
....................                { 
....................                   Contrasena[i-1]++; 
4A94:  MOVLW  01
4A96:  SUBWF  x6C,W
4A98:  CLRF   03
4A9A:  ADDLW  96
4A9C:  MOVWF  FE9
4A9E:  MOVLW  05
4AA0:  ADDWFC 03,W
4AA2:  MOVWF  FEA
4AA4:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9)    
4AA6:  MOVLW  01
4AA8:  SUBWF  x6C,W
4AAA:  CLRF   03
4AAC:  ADDLW  96
4AAE:  MOVWF  FE9
4AB0:  MOVLW  05
4AB2:  ADDWFC 03,W
4AB4:  MOVWF  FEA
4AB6:  BTFSC  FEF.7
4AB8:  BRA    4AD2
4ABA:  MOVF   FEF,W
4ABC:  SUBLW  09
4ABE:  BC    4AD2
....................                   { 
....................                      Contrasena[i-1]=0; 
4AC0:  MOVLW  01
4AC2:  SUBWF  x6C,W
4AC4:  CLRF   03
4AC6:  ADDLW  96
4AC8:  MOVWF  FE9
4ACA:  MOVLW  05
4ACC:  ADDWFC 03,W
4ACE:  MOVWF  FEA
4AD0:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4AD2:  INCF   x6C,F
4AD4:  BRA    4A88
....................          } 
....................       } 
....................       else 
4AD6:  BRA    4ADA
....................       { 
....................          Flanco = 0; 
4AD8:  BCF    x65.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4ADA:  BSF    F96.0
4ADC:  BTFSS  F84.0
4ADE:  BRA    4B44
....................       { 
....................          if(Flanco2 == 0) 
4AE0:  BTFSC  x65.2
4AE2:  BRA    4B42
....................             {Flanco2 = 1;delay_ms(30); 
4AE4:  BSF    x65.2
4AE6:  MOVLW  1E
4AE8:  MOVWF  xFC
4AEA:  MOVLB  0
4AEC:  CALL   0CF8
....................                for(i=1;i<=4;i++) 
4AF0:  MOVLW  01
4AF2:  MOVLB  5
4AF4:  MOVWF  x6C
4AF6:  MOVF   x6C,W
4AF8:  SUBLW  04
4AFA:  BNC   4B42
....................                { 
....................                   if(unidad==i) 
4AFC:  MOVF   x6C,W
4AFE:  SUBWF  x6B,W
4B00:  BNZ   4B3E
....................                   {Contrasena[i-1]--;  
4B02:  MOVLW  01
4B04:  SUBWF  x6C,W
4B06:  CLRF   03
4B08:  ADDLW  96
4B0A:  MOVWF  FE9
4B0C:  MOVLW  05
4B0E:  ADDWFC 03,W
4B10:  MOVWF  FEA
4B12:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
4B14:  MOVLW  01
4B16:  SUBWF  x6C,W
4B18:  CLRF   03
4B1A:  ADDLW  96
4B1C:  MOVWF  FE9
4B1E:  MOVLW  05
4B20:  ADDWFC 03,W
4B22:  MOVWF  FEA
4B24:  BTFSC  FEF.7
4B26:  BRA    4B2A
4B28:  BRA    4B3E
....................                         {Contrasena[i-1]=9;} 
4B2A:  MOVLW  01
4B2C:  SUBWF  x6C,W
4B2E:  CLRF   03
4B30:  ADDLW  96
4B32:  MOVWF  FE9
4B34:  MOVLW  05
4B36:  ADDWFC 03,W
4B38:  MOVWF  FEA
4B3A:  MOVLW  09
4B3C:  MOVWF  FEF
....................                   } 
....................                }       
4B3E:  INCF   x6C,F
4B40:  BRA    4AF6
....................             }      
....................       } 
....................       else 
4B42:  BRA    4B46
....................       { 
....................          Flanco2 = 0; 
4B44:  BCF    x65.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4B46:  BSF    F96.1
4B48:  BTFSS  F84.1
4B4A:  BRA    4B6A
....................       { 
....................          if(Flanco1 == 0) 
4B4C:  BTFSC  x65.1
4B4E:  BRA    4B68
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4B50:  BSF    x65.1
4B52:  MOVLW  02
4B54:  MOVWF  xF6
4B56:  MOVLW  96
4B58:  MOVWF  xFC
4B5A:  MOVLB  0
4B5C:  CALL   0CF8
4B60:  MOVLB  5
4B62:  DECFSZ xF6,F
4B64:  BRA    4B56
4B66:  INCF   x6B,F
....................       } 
....................       else 
4B68:  BRA    4B6C
....................       { 
....................          Flanco1 = 0; 
4B6A:  BCF    x65.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
4B6C:  BSF    F96.2
4B6E:  BTFSS  F84.2
4B70:  BRA    4B94
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
4B72:  MOVLW  04
4B74:  MOVWF  xF6
4B76:  MOVLW  AF
4B78:  MOVWF  xFC
4B7A:  MOVLB  0
4B7C:  CALL   0CF8
4B80:  MOVLB  5
4B82:  DECFSZ xF6,F
4B84:  BRA    4B76
4B86:  MOVLW  01
4B88:  MOVWF  x6A
4B8A:  CLRF   xF7
4B8C:  MOVLB  0
4B8E:  CALL   0D98
4B92:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
4B94:  MOVF   x6B,W
4B96:  SUBLW  04
4B98:  BTFSC  FD8.0
4B9A:  BRA    4D3A
....................       {glcd_fillScreen(OFF); 
4B9C:  CLRF   xF7
4B9E:  MOVLB  0
4BA0:  CALL   0D98
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4BA4:  MOVLB  5
4BA6:  MOVF   x9A,W
4BA8:  SUBWF  x96,W
4BAA:  BNZ   4C7A
4BAC:  MOVF   x9B,W
4BAE:  SUBWF  x97,W
4BB0:  BNZ   4C7A
4BB2:  MOVF   x9C,W
4BB4:  SUBWF  x98,W
4BB6:  BNZ   4C7A
4BB8:  MOVF   x9D,W
4BBA:  SUBWF  x99,W
4BBC:  BNZ   4C7A
....................          { 
....................             glcd_fillScreen(OFF); 
4BBE:  CLRF   xF7
4BC0:  MOVLB  0
4BC2:  CALL   0D98
....................             strcpy(Menus.Letra,"Clave"); 
4BC6:  MOVLW  05
4BC8:  MOVWF  FEA
4BCA:  MOVLW  D6
4BCC:  MOVWF  FE9
4BCE:  MOVFF  FF2,5F6
4BD2:  BCF    FF2.7
4BD4:  MOVLW  00
4BD6:  CALL   077E
4BDA:  TBLRD*-
4BDC:  TBLRD*+
4BDE:  MOVF   FF5,W
4BE0:  MOVWF  FEE
4BE2:  IORLW  00
4BE4:  BNZ   4BDC
4BE6:  MOVLB  5
4BE8:  BTFSC  xF6.7
4BEA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4BEC:  MOVLW  05
4BEE:  MOVWF  xF7
4BF0:  MOVLW  D6
4BF2:  MOVWF  xF6
4BF4:  MOVLW  1E
4BF6:  MOVWF  xF8
4BF8:  CLRF   xF9
4BFA:  CLRF   xFA
4BFC:  MOVLW  02
4BFE:  MOVWF  xFB
4C00:  MOVLB  0
4C02:  CALL   13CA
....................             strcpy(Menus.Letra,"Correcta"); 
4C06:  MOVLW  05
4C08:  MOVWF  FEA
4C0A:  MOVLW  D6
4C0C:  MOVWF  FE9
4C0E:  MOVFF  FF2,5F6
4C12:  BCF    FF2.7
4C14:  MOVLW  00
4C16:  CALL   079E
4C1A:  TBLRD*-
4C1C:  TBLRD*+
4C1E:  MOVF   FF5,W
4C20:  MOVWF  FEE
4C22:  IORLW  00
4C24:  BNZ   4C1C
4C26:  MOVLB  5
4C28:  BTFSC  xF6.7
4C2A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4C2C:  MOVLW  05
4C2E:  MOVWF  xF7
4C30:  MOVLW  D6
4C32:  MOVWF  xF6
4C34:  MOVLW  0F
4C36:  MOVWF  xF8
4C38:  MOVLW  1E
4C3A:  MOVWF  xF9
4C3C:  CLRF   xFA
4C3E:  MOVLW  02
4C40:  MOVWF  xFB
4C42:  MOVLB  0
4C44:  CALL   13CA
....................             Menu=91;glcd_update();delay_ms(1000); 
4C48:  MOVLW  5B
4C4A:  MOVLB  5
4C4C:  MOVWF  x6A
4C4E:  MOVLB  0
4C50:  CALL   0DF2
4C54:  MOVLW  04
4C56:  MOVLB  5
4C58:  MOVWF  xF6
4C5A:  MOVLW  FA
4C5C:  MOVWF  xFC
4C5E:  MOVLB  0
4C60:  CALL   0CF8
4C64:  MOVLB  5
4C66:  DECFSZ xF6,F
4C68:  BRA    4C5A
....................             glcd_fillScreen(OFF);unidad=1; 
4C6A:  CLRF   xF7
4C6C:  MOVLB  0
4C6E:  CALL   0D98
4C72:  MOVLW  01
4C74:  MOVLB  5
4C76:  MOVWF  x6B
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4C78:  BRA    4D3A
....................          { 
....................             glcd_fillScreen(OFF); 
4C7A:  CLRF   xF7
4C7C:  MOVLB  0
4C7E:  CALL   0D98
....................             strcpy(Menus.Letra,"Clave"); 
4C82:  MOVLW  05
4C84:  MOVWF  FEA
4C86:  MOVLW  D6
4C88:  MOVWF  FE9
4C8A:  MOVFF  FF2,5F6
4C8E:  BCF    FF2.7
4C90:  MOVLW  00
4C92:  CALL   077E
4C96:  TBLRD*-
4C98:  TBLRD*+
4C9A:  MOVF   FF5,W
4C9C:  MOVWF  FEE
4C9E:  IORLW  00
4CA0:  BNZ   4C98
4CA2:  MOVLB  5
4CA4:  BTFSC  xF6.7
4CA6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4CA8:  MOVLW  05
4CAA:  MOVWF  xF7
4CAC:  MOVLW  D6
4CAE:  MOVWF  xF6
4CB0:  MOVLW  1E
4CB2:  MOVWF  xF8
4CB4:  CLRF   xF9
4CB6:  CLRF   xFA
4CB8:  MOVLW  02
4CBA:  MOVWF  xFB
4CBC:  MOVLB  0
4CBE:  CALL   13CA
....................             strcpy(Menus.Letra,"Incorrecta"); 
4CC2:  MOVLW  05
4CC4:  MOVWF  FEA
4CC6:  MOVLW  D6
4CC8:  MOVWF  FE9
4CCA:  MOVFF  FF2,5F6
4CCE:  BCF    FF2.7
4CD0:  MOVLW  00
4CD2:  CALL   07C2
4CD6:  TBLRD*-
4CD8:  TBLRD*+
4CDA:  MOVF   FF5,W
4CDC:  MOVWF  FEE
4CDE:  IORLW  00
4CE0:  BNZ   4CD8
4CE2:  MOVLB  5
4CE4:  BTFSC  xF6.7
4CE6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4CE8:  MOVLW  05
4CEA:  MOVWF  xF7
4CEC:  MOVLW  D6
4CEE:  MOVWF  xF6
4CF0:  CLRF   xF8
4CF2:  MOVLW  1E
4CF4:  MOVWF  xF9
4CF6:  CLRF   xFA
4CF8:  MOVLW  02
4CFA:  MOVWF  xFB
4CFC:  MOVLB  0
4CFE:  CALL   13CA
....................             Menu=1;glcd_update();delay_ms(1000); 
4D02:  MOVLW  01
4D04:  MOVLB  5
4D06:  MOVWF  x6A
4D08:  MOVLB  0
4D0A:  CALL   0DF2
4D0E:  MOVLW  04
4D10:  MOVLB  5
4D12:  MOVWF  xF6
4D14:  MOVLW  FA
4D16:  MOVWF  xFC
4D18:  MOVLB  0
4D1A:  CALL   0CF8
4D1E:  MOVLB  5
4D20:  DECFSZ xF6,F
4D22:  BRA    4D14
....................             glcd_fillScreen(OFF);unidad=1; 
4D24:  CLRF   xF7
4D26:  MOVLB  0
4D28:  CALL   0D98
4D2C:  MOVLW  01
4D2E:  MOVLB  5
4D30:  MOVWF  x6B
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4D32:  CLRF   x96
4D34:  CLRF   x97
4D36:  CLRF   x98
4D38:  CLRF   x99
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
4D3A:  MOVF   x6A,W
4D3C:  SUBLW  5B
4D3E:  BTFSS  FD8.2
4D40:  BRA    5104
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
4D42:  MOVLW  05
4D44:  MOVWF  FEA
4D46:  MOVLW  D6
4D48:  MOVWF  FE9
4D4A:  MOVFF  FF2,5F6
4D4E:  BCF    FF2.7
4D50:  MOVLW  00
4D52:  MOVLB  0
4D54:  CALL   0964
4D58:  TBLRD*-
4D5A:  TBLRD*+
4D5C:  MOVF   FF5,W
4D5E:  MOVWF  FEE
4D60:  IORLW  00
4D62:  BNZ   4D5A
4D64:  MOVLB  5
4D66:  BTFSC  xF6.7
4D68:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
4D6A:  MOVLW  05
4D6C:  MOVWF  xF7
4D6E:  MOVLW  D6
4D70:  MOVWF  xF6
4D72:  CLRF   xF8
4D74:  CLRF   xF9
4D76:  MOVLW  01
4D78:  MOVWF  xFA
4D7A:  MOVLW  02
4D7C:  MOVWF  xFB
4D7E:  MOVLB  0
4D80:  CALL   13CA
....................        
....................       if(unidad==1) 
4D84:  MOVLB  5
4D86:  DECFSZ x6B,W
4D88:  BRA    4DE6
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
4D8A:  MOVFF  59A,5F8
4D8E:  MOVLW  14
4D90:  MOVWF  xF9
4D92:  MOVLW  1E
4D94:  MOVWF  xFA
4D96:  MOVLW  01
4D98:  MOVWF  xFB
4D9A:  MOVLB  0
4D9C:  CALL   1602
....................          displayContrasena(Password[1],40,30,0); 
4DA0:  MOVFF  59B,5F8
4DA4:  MOVLW  28
4DA6:  MOVLB  5
4DA8:  MOVWF  xF9
4DAA:  MOVLW  1E
4DAC:  MOVWF  xFA
4DAE:  CLRF   xFB
4DB0:  MOVLB  0
4DB2:  CALL   1602
....................          displayContrasena(Password[2],60,30,0); 
4DB6:  MOVFF  59C,5F8
4DBA:  MOVLW  3C
4DBC:  MOVLB  5
4DBE:  MOVWF  xF9
4DC0:  MOVLW  1E
4DC2:  MOVWF  xFA
4DC4:  CLRF   xFB
4DC6:  MOVLB  0
4DC8:  CALL   1602
....................          displayContrasena(Password[3],80,30,0); 
4DCC:  MOVFF  59D,5F8
4DD0:  MOVLW  50
4DD2:  MOVLB  5
4DD4:  MOVWF  xF9
4DD6:  MOVLW  1E
4DD8:  MOVWF  xFA
4DDA:  CLRF   xFB
4DDC:  MOVLB  0
4DDE:  CALL   1602
....................       } 
....................       else 
4DE2:  BRA    4F08
4DE4:  MOVLB  5
....................       { 
....................          if(unidad==2) 
4DE6:  MOVF   x6B,W
4DE8:  SUBLW  02
4DEA:  BNZ   4E48
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
4DEC:  MOVFF  59A,5F8
4DF0:  MOVLW  14
4DF2:  MOVWF  xF9
4DF4:  MOVLW  1E
4DF6:  MOVWF  xFA
4DF8:  CLRF   xFB
4DFA:  MOVLB  0
4DFC:  CALL   1602
....................             displayContrasena(Password[1],40,30,1); 
4E00:  MOVFF  59B,5F8
4E04:  MOVLW  28
4E06:  MOVLB  5
4E08:  MOVWF  xF9
4E0A:  MOVLW  1E
4E0C:  MOVWF  xFA
4E0E:  MOVLW  01
4E10:  MOVWF  xFB
4E12:  MOVLB  0
4E14:  CALL   1602
....................             displayContrasena(Password[2],60,30,0); 
4E18:  MOVFF  59C,5F8
4E1C:  MOVLW  3C
4E1E:  MOVLB  5
4E20:  MOVWF  xF9
4E22:  MOVLW  1E
4E24:  MOVWF  xFA
4E26:  CLRF   xFB
4E28:  MOVLB  0
4E2A:  CALL   1602
....................             displayContrasena(Password[3],80,30,0); 
4E2E:  MOVFF  59D,5F8
4E32:  MOVLW  50
4E34:  MOVLB  5
4E36:  MOVWF  xF9
4E38:  MOVLW  1E
4E3A:  MOVWF  xFA
4E3C:  CLRF   xFB
4E3E:  MOVLB  0
4E40:  CALL   1602
....................          } 
....................          else 
4E44:  BRA    4F08
4E46:  MOVLB  5
....................          { 
....................             if(unidad==3) 
4E48:  MOVF   x6B,W
4E4A:  SUBLW  03
4E4C:  BNZ   4EAA
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
4E4E:  MOVFF  59A,5F8
4E52:  MOVLW  14
4E54:  MOVWF  xF9
4E56:  MOVLW  1E
4E58:  MOVWF  xFA
4E5A:  CLRF   xFB
4E5C:  MOVLB  0
4E5E:  CALL   1602
....................                displayContrasena(Password[1],40,30,0); 
4E62:  MOVFF  59B,5F8
4E66:  MOVLW  28
4E68:  MOVLB  5
4E6A:  MOVWF  xF9
4E6C:  MOVLW  1E
4E6E:  MOVWF  xFA
4E70:  CLRF   xFB
4E72:  MOVLB  0
4E74:  CALL   1602
....................                displayContrasena(Password[2],60,30,1); 
4E78:  MOVFF  59C,5F8
4E7C:  MOVLW  3C
4E7E:  MOVLB  5
4E80:  MOVWF  xF9
4E82:  MOVLW  1E
4E84:  MOVWF  xFA
4E86:  MOVLW  01
4E88:  MOVWF  xFB
4E8A:  MOVLB  0
4E8C:  CALL   1602
....................                displayContrasena(Password[3],80,30,0); 
4E90:  MOVFF  59D,5F8
4E94:  MOVLW  50
4E96:  MOVLB  5
4E98:  MOVWF  xF9
4E9A:  MOVLW  1E
4E9C:  MOVWF  xFA
4E9E:  CLRF   xFB
4EA0:  MOVLB  0
4EA2:  CALL   1602
....................             } 
....................             else 
4EA6:  BRA    4F08
4EA8:  MOVLB  5
....................             { 
....................                if(unidad==4) 
4EAA:  MOVF   x6B,W
4EAC:  SUBLW  04
4EAE:  BNZ   4F0A
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
4EB0:  MOVFF  59A,5F8
4EB4:  MOVLW  14
4EB6:  MOVWF  xF9
4EB8:  MOVLW  1E
4EBA:  MOVWF  xFA
4EBC:  CLRF   xFB
4EBE:  MOVLB  0
4EC0:  CALL   1602
....................                   displayContrasena(Password[1],40,30,0); 
4EC4:  MOVFF  59B,5F8
4EC8:  MOVLW  28
4ECA:  MOVLB  5
4ECC:  MOVWF  xF9
4ECE:  MOVLW  1E
4ED0:  MOVWF  xFA
4ED2:  CLRF   xFB
4ED4:  MOVLB  0
4ED6:  CALL   1602
....................                   displayContrasena(Password[2],60,30,0); 
4EDA:  MOVFF  59C,5F8
4EDE:  MOVLW  3C
4EE0:  MOVLB  5
4EE2:  MOVWF  xF9
4EE4:  MOVLW  1E
4EE6:  MOVWF  xFA
4EE8:  CLRF   xFB
4EEA:  MOVLB  0
4EEC:  CALL   1602
....................                   displayContrasena(Password[3],80,30,1); 
4EF0:  MOVFF  59D,5F8
4EF4:  MOVLW  50
4EF6:  MOVLB  5
4EF8:  MOVWF  xF9
4EFA:  MOVLW  1E
4EFC:  MOVWF  xFA
4EFE:  MOVLW  01
4F00:  MOVWF  xFB
4F02:  MOVLB  0
4F04:  CALL   1602
4F08:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
4F0A:  BSF    F92.5
4F0C:  BTFSS  F80.5
4F0E:  BRA    4F76
....................       { 
....................          if(Flanco == 0) 
4F10:  BTFSC  x65.0
4F12:  BRA    4F74
....................          { 
....................             Flanco = 1;delay_ms(30); 
4F14:  BSF    x65.0
4F16:  MOVLW  1E
4F18:  MOVWF  xFC
4F1A:  MOVLB  0
4F1C:  CALL   0CF8
....................             for(i=1;i<=4;i++) 
4F20:  MOVLW  01
4F22:  MOVLB  5
4F24:  MOVWF  x6C
4F26:  MOVF   x6C,W
4F28:  SUBLW  04
4F2A:  BNC   4F74
....................             { 
....................                if(unidad==i) 
4F2C:  MOVF   x6C,W
4F2E:  SUBWF  x6B,W
4F30:  BNZ   4F70
....................                { 
....................                   Password[i-1]++; 
4F32:  MOVLW  01
4F34:  SUBWF  x6C,W
4F36:  CLRF   03
4F38:  ADDLW  9A
4F3A:  MOVWF  FE9
4F3C:  MOVLW  05
4F3E:  ADDWFC 03,W
4F40:  MOVWF  FEA
4F42:  INCF   FEF,F
....................                   if(Password[i-1]>9)    
4F44:  MOVLW  01
4F46:  SUBWF  x6C,W
4F48:  CLRF   03
4F4A:  ADDLW  9A
4F4C:  MOVWF  FE9
4F4E:  MOVLW  05
4F50:  ADDWFC 03,W
4F52:  MOVWF  FEA
4F54:  BTFSC  FEF.7
4F56:  BRA    4F70
4F58:  MOVF   FEF,W
4F5A:  SUBLW  09
4F5C:  BC    4F70
....................                   { 
....................                      Password[i-1]=0; 
4F5E:  MOVLW  01
4F60:  SUBWF  x6C,W
4F62:  CLRF   03
4F64:  ADDLW  9A
4F66:  MOVWF  FE9
4F68:  MOVLW  05
4F6A:  ADDWFC 03,W
4F6C:  MOVWF  FEA
4F6E:  CLRF   FEF
....................                   } 
....................                } 
....................             } 
4F70:  INCF   x6C,F
4F72:  BRA    4F26
....................          } 
....................       } 
....................       else 
4F74:  BRA    4F78
....................       { 
....................          Flanco = 0; 
4F76:  BCF    x65.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4F78:  BSF    F96.0
4F7A:  BTFSS  F84.0
4F7C:  BRA    4FE2
....................       { 
....................          if(Flanco2 == 0) 
4F7E:  BTFSC  x65.2
4F80:  BRA    4FE0
....................             {Flanco2 = 1;delay_ms(30); 
4F82:  BSF    x65.2
4F84:  MOVLW  1E
4F86:  MOVWF  xFC
4F88:  MOVLB  0
4F8A:  CALL   0CF8
....................                for(i=1;i<=4;i++) 
4F8E:  MOVLW  01
4F90:  MOVLB  5
4F92:  MOVWF  x6C
4F94:  MOVF   x6C,W
4F96:  SUBLW  04
4F98:  BNC   4FE0
....................                { 
....................                   if(unidad==i) 
4F9A:  MOVF   x6C,W
4F9C:  SUBWF  x6B,W
4F9E:  BNZ   4FDC
....................                   { 
....................                      Password[i-1]--; 
4FA0:  MOVLW  01
4FA2:  SUBWF  x6C,W
4FA4:  CLRF   03
4FA6:  ADDLW  9A
4FA8:  MOVWF  FE9
4FAA:  MOVLW  05
4FAC:  ADDWFC 03,W
4FAE:  MOVWF  FEA
4FB0:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
4FB2:  MOVLW  01
4FB4:  SUBWF  x6C,W
4FB6:  CLRF   03
4FB8:  ADDLW  9A
4FBA:  MOVWF  FE9
4FBC:  MOVLW  05
4FBE:  ADDWFC 03,W
4FC0:  MOVWF  FEA
4FC2:  BTFSC  FEF.7
4FC4:  BRA    4FC8
4FC6:  BRA    4FDC
....................                      { 
....................                         Password[i-1]=9; 
4FC8:  MOVLW  01
4FCA:  SUBWF  x6C,W
4FCC:  CLRF   03
4FCE:  ADDLW  9A
4FD0:  MOVWF  FE9
4FD2:  MOVLW  05
4FD4:  ADDWFC 03,W
4FD6:  MOVWF  FEA
4FD8:  MOVLW  09
4FDA:  MOVWF  FEF
....................                      } 
....................                   } 
....................                }       
4FDC:  INCF   x6C,F
4FDE:  BRA    4F94
....................             }      
....................       } 
....................       else 
4FE0:  BRA    4FE4
....................       { 
....................          Flanco2 = 0; 
4FE2:  BCF    x65.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4FE4:  BSF    F96.1
4FE6:  BTFSS  F84.1
4FE8:  BRA    5008
....................       { 
....................          if(Flanco1 == 0) 
4FEA:  BTFSC  x65.1
4FEC:  BRA    5006
....................             {Flanco1 = 1;delay_ms(300);unidad++;} 
4FEE:  BSF    x65.1
4FF0:  MOVLW  02
4FF2:  MOVWF  xF6
4FF4:  MOVLW  96
4FF6:  MOVWF  xFC
4FF8:  MOVLB  0
4FFA:  CALL   0CF8
4FFE:  MOVLB  5
5000:  DECFSZ xF6,F
5002:  BRA    4FF4
5004:  INCF   x6B,F
....................       } 
....................       else 
5006:  BRA    500A
....................       { 
....................          Flanco1 = 0; 
5008:  BCF    x65.1
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
500A:  BSF    F96.2
500C:  BTFSS  F84.2
500E:  BRA    5032
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
5010:  MOVLW  04
5012:  MOVWF  xF6
5014:  MOVLW  AF
5016:  MOVWF  xFC
5018:  MOVLB  0
501A:  CALL   0CF8
501E:  MOVLB  5
5020:  DECFSZ xF6,F
5022:  BRA    5014
5024:  MOVLW  01
5026:  MOVWF  x6A
5028:  CLRF   xF7
502A:  MOVLB  0
502C:  CALL   0D98
5030:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
5032:  MOVF   x6B,W
5034:  SUBLW  04
5036:  BC    5104
....................       { 
....................          Opcion=1;unidad=1; 
5038:  MOVLW  01
503A:  MOVWF  x71
503C:  MOVWF  x6B
....................          write_eeprom(10,Password[0]);write_eeprom(11,Password[1]);write_eeprom(12,Password[2]);write_eeprom(13,Password[3]); 
503E:  MOVLW  0A
5040:  MOVWF  FA9
5042:  MOVFF  59A,FA8
5046:  BCF    FA6.6
5048:  BCF    FA6.7
504A:  BSF    FA6.2
504C:  MOVF   FF2,W
504E:  MOVWF  00
5050:  BCF    FF2.7
5052:  MOVLB  F
5054:  MOVLW  55
5056:  MOVWF  FA7
5058:  MOVLW  AA
505A:  MOVWF  FA7
505C:  BSF    FA6.1
505E:  BTFSC  FA6.1
5060:  BRA    505E
5062:  BCF    FA6.2
5064:  MOVF   00,W
5066:  IORWF  FF2,F
5068:  MOVLW  0B
506A:  MOVWF  FA9
506C:  MOVFF  59B,FA8
5070:  BCF    FA6.6
5072:  BCF    FA6.7
5074:  BSF    FA6.2
5076:  MOVF   FF2,W
5078:  MOVWF  00
507A:  BCF    FF2.7
507C:  MOVLW  55
507E:  MOVWF  FA7
5080:  MOVLW  AA
5082:  MOVWF  FA7
5084:  BSF    FA6.1
5086:  BTFSC  FA6.1
5088:  BRA    5086
508A:  BCF    FA6.2
508C:  MOVF   00,W
508E:  IORWF  FF2,F
5090:  MOVLW  0C
5092:  MOVWF  FA9
5094:  MOVFF  59C,FA8
5098:  BCF    FA6.6
509A:  BCF    FA6.7
509C:  BSF    FA6.2
509E:  MOVF   FF2,W
50A0:  MOVWF  00
50A2:  BCF    FF2.7
50A4:  MOVLW  55
50A6:  MOVWF  FA7
50A8:  MOVLW  AA
50AA:  MOVWF  FA7
50AC:  BSF    FA6.1
50AE:  BTFSC  FA6.1
50B0:  BRA    50AE
50B2:  BCF    FA6.2
50B4:  MOVF   00,W
50B6:  IORWF  FF2,F
50B8:  MOVLW  0D
50BA:  MOVWF  FA9
50BC:  MOVFF  59D,FA8
50C0:  BCF    FA6.6
50C2:  BCF    FA6.7
50C4:  BSF    FA6.2
50C6:  MOVF   FF2,W
50C8:  MOVWF  00
50CA:  BCF    FF2.7
50CC:  MOVLW  55
50CE:  MOVWF  FA7
50D0:  MOVLW  AA
50D2:  MOVWF  FA7
50D4:  BSF    FA6.1
50D6:  BTFSC  FA6.1
50D8:  BRA    50D6
50DA:  BCF    FA6.2
50DC:  MOVF   00,W
50DE:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
50E0:  MOVLW  04
50E2:  MOVLB  5
50E4:  MOVWF  xF6
50E6:  MOVLW  FA
50E8:  MOVWF  xFC
50EA:  MOVLB  0
50EC:  CALL   0CF8
50F0:  MOVLB  5
50F2:  DECFSZ xF6,F
50F4:  BRA    50E6
50F6:  CLRF   xF7
50F8:  MOVLB  0
50FA:  CALL   0D98
50FE:  MOVLW  01
5100:  MOVLB  5
5102:  MOVWF  x6A
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==20){ //Menu de Funcionamiento 
5104:  MOVF   x6A,W
5106:  SUBLW  14
5108:  BTFSS  FD8.2
510A:  GOTO   5D66
....................        
....................       // Muestra imagen de fondo en Display GLCD 
....................       glcd_imagen(5); 
510E:  MOVLW  05
5110:  MOVWF  xF6
5112:  MOVLB  0
5114:  GOTO   25C8
....................        
....................        
....................       if(Pausa==0 && Puerta<770 && !TERM) 
5118:  MOVLB  5
511A:  MOVF   x6D,F
511C:  BTFSS  FD8.2
511E:  BRA    53A0
5120:  MOVF   x81,W
5122:  SUBLW  03
5124:  BTFSS  FD8.0
5126:  BRA    53A0
5128:  BNZ   5132
512A:  MOVF   x80,W
512C:  SUBLW  01
512E:  BTFSS  FD8.0
5130:  BRA    53A0
5132:  BSF    F92.4
5134:  BTFSC  F80.4
5136:  BRA    53A0
....................       { 
....................          if(Temperatura>=Setpoint-0.5) 
5138:  CLRF   xFD
513A:  MOVFF  570,5FC
513E:  MOVLB  0
5140:  CALL   0D22
5144:  BSF    FD8.1
5146:  MOVFF  03,5FE
514A:  MOVFF  02,5FD
514E:  MOVFF  01,5FC
5152:  MOVFF  00,5FB
5156:  MOVLB  6
5158:  CLRF   x02
515A:  CLRF   x01
515C:  CLRF   x00
515E:  MOVLW  7E
5160:  MOVLB  5
5162:  MOVWF  xFF
5164:  MOVLB  0
5166:  CALL   18A8
516A:  MOVFF  03,5F9
516E:  MOVFF  02,5F8
5172:  MOVFF  01,5F7
5176:  MOVFF  00,5F6
517A:  MOVFF  5D5,5FD
517E:  MOVFF  5D4,5FC
5182:  MOVFF  5D3,5FB
5186:  MOVFF  5D2,5FA
518A:  CALL   267E
518E:  BC    5192
5190:  BNZ   519A
....................          { 
....................             flag_setpoint=1; 
5192:  MOVLB  5
5194:  BSF    x66.4
....................             flag_ventilador=1; 
5196:  MOVLW  01
5198:  MOVWF  x69
....................          } 
....................           
....................          if(Temperatura<Setpoint-0.8) 
519A:  MOVLB  5
519C:  CLRF   xFD
519E:  MOVFF  570,5FC
51A2:  MOVLB  0
51A4:  CALL   0D22
51A8:  BSF    FD8.1
51AA:  MOVFF  03,5FE
51AE:  MOVFF  02,5FD
51B2:  MOVFF  01,5FC
51B6:  MOVFF  00,5FB
51BA:  MOVLW  CD
51BC:  MOVLB  6
51BE:  MOVWF  x02
51C0:  MOVLW  CC
51C2:  MOVWF  x01
51C4:  MOVLW  4C
51C6:  MOVWF  x00
51C8:  MOVLW  7E
51CA:  MOVLB  5
51CC:  MOVWF  xFF
51CE:  MOVLB  0
51D0:  CALL   18A8
51D4:  MOVFF  5D5,5F9
51D8:  MOVFF  5D4,5F8
51DC:  MOVFF  5D3,5F7
51E0:  MOVFF  5D2,5F6
51E4:  MOVFF  03,5FD
51E8:  MOVFF  02,5FC
51EC:  MOVFF  01,5FB
51F0:  MOVFF  00,5FA
51F4:  CALL   267E
51F8:  BNC   51FE
....................          { 
....................             flag_ventilador=0; 
51FA:  MOVLB  5
51FC:  CLRF   x69
....................          } 
....................           
....................          if(Temperatura<Setpoint-1.2) 
51FE:  MOVLB  5
5200:  CLRF   xFD
5202:  MOVFF  570,5FC
5206:  MOVLB  0
5208:  CALL   0D22
520C:  BSF    FD8.1
520E:  MOVFF  03,5FE
5212:  MOVFF  02,5FD
5216:  MOVFF  01,5FC
521A:  MOVFF  00,5FB
521E:  MOVLW  9A
5220:  MOVLB  6
5222:  MOVWF  x02
5224:  MOVLW  99
5226:  MOVWF  x01
5228:  MOVLW  19
522A:  MOVWF  x00
522C:  MOVLW  7F
522E:  MOVLB  5
5230:  MOVWF  xFF
5232:  MOVLB  0
5234:  CALL   18A8
5238:  MOVFF  5D5,5F9
523C:  MOVFF  5D4,5F8
5240:  MOVFF  5D3,5F7
5244:  MOVFF  5D2,5F6
5248:  MOVFF  03,5FD
524C:  MOVFF  02,5FC
5250:  MOVFF  01,5FB
5254:  MOVFF  00,5FA
5258:  CALL   267E
525C:  BNC   5262
....................          { 
....................             flag_setpoint=0; 
525E:  MOVLB  5
5260:  BCF    x66.4
....................          } 
....................          if(Temperatura>=Setpoint-5.0) 
5262:  MOVLB  5
5264:  CLRF   xFD
5266:  MOVFF  570,5FC
526A:  MOVLB  0
526C:  CALL   0D22
5270:  BSF    FD8.1
5272:  MOVFF  03,5FE
5276:  MOVFF  02,5FD
527A:  MOVFF  01,5FC
527E:  MOVFF  00,5FB
5282:  MOVLB  6
5284:  CLRF   x02
5286:  CLRF   x01
5288:  MOVLW  20
528A:  MOVWF  x00
528C:  MOVLW  81
528E:  MOVLB  5
5290:  MOVWF  xFF
5292:  MOVLB  0
5294:  CALL   18A8
5298:  MOVFF  03,5F9
529C:  MOVFF  02,5F8
52A0:  MOVFF  01,5F7
52A4:  MOVFF  00,5F6
52A8:  MOVFF  5D5,5FD
52AC:  MOVFF  5D4,5FC
52B0:  MOVFF  5D3,5FB
52B4:  MOVFF  5D2,5FA
52B8:  CALL   267E
52BC:  BC    52C0
52BE:  BNZ   5332
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
52C0:  MOVLB  6
52C2:  CLRF   x08
52C4:  MOVLW  37
52C6:  MOVWF  x09
52C8:  MOVLW  7F
52CA:  MOVWF  x0A
52CC:  MOVLW  3F
52CE:  MOVWF  x0B
52D0:  MOVLW  01
52D2:  MOVWF  x0C
52D4:  CLRF   x0D
52D6:  MOVLB  0
52D8:  CALL   1308
....................             strcpy(Menus.Letra,"Status:Controlando"); 
52DC:  MOVLW  05
52DE:  MOVWF  FEA
52E0:  MOVLW  D6
52E2:  MOVWF  FE9
52E4:  MOVFF  FF2,5F6
52E8:  BCF    FF2.7
52EA:  MOVLW  00
52EC:  CALL   098A
52F0:  TBLRD*-
52F2:  TBLRD*+
52F4:  MOVF   FF5,W
52F6:  MOVWF  FEE
52F8:  IORLW  00
52FA:  BNZ   52F2
52FC:  MOVLB  5
52FE:  BTFSC  xF6.7
5300:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5302:  MOVLW  05
5304:  MOVWF  xF7
5306:  MOVLW  D6
5308:  MOVWF  xF6
530A:  CLRF   xF8
530C:  MOVLW  37
530E:  MOVWF  xF9
5310:  MOVLW  02
5312:  MOVWF  xFA
5314:  MOVLW  01
5316:  MOVWF  xFB
5318:  MOVLB  0
531A:  CALL   13CA
....................             tiempo_esterilizacion=1; 
531E:  MOVLW  01
5320:  MOVLB  5
5322:  MOVWF  x72
....................             Controla(); 
5324:  MOVLB  0
5326:  CALL   27A2
....................             flag_tiempocalentamiento=0; 
532A:  MOVLB  5
532C:  BCF    x66.2
....................          } 
....................          else 
532E:  BRA    53A0
5330:  MOVLB  0
....................          { 
....................             flag_tiempocalentamiento=1; 
5332:  MOVLB  5
5334:  BSF    x66.2
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
5336:  MOVLB  6
5338:  CLRF   x08
533A:  MOVLW  37
533C:  MOVWF  x09
533E:  MOVLW  7F
5340:  MOVWF  x0A
5342:  MOVLW  3F
5344:  MOVWF  x0B
5346:  MOVLW  01
5348:  MOVWF  x0C
534A:  CLRF   x0D
534C:  MOVLB  0
534E:  CALL   1308
....................             strcpy(Menus.Letra,"Status:Calentando"); 
5352:  MOVLW  05
5354:  MOVWF  FEA
5356:  MOVLW  D6
5358:  MOVWF  FE9
535A:  MOVFF  FF2,5F6
535E:  BCF    FF2.7
5360:  MOVLW  00
5362:  CALL   09B8
5366:  TBLRD*-
5368:  TBLRD*+
536A:  MOVF   FF5,W
536C:  MOVWF  FEE
536E:  IORLW  00
5370:  BNZ   5368
5372:  MOVLB  5
5374:  BTFSC  xF6.7
5376:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
5378:  MOVLW  05
537A:  MOVWF  xF7
537C:  MOVLW  D6
537E:  MOVWF  xF6
5380:  CLRF   xF8
5382:  MOVLW  37
5384:  MOVWF  xF9
5386:  MOVLW  02
5388:  MOVWF  xFA
538A:  MOVLW  01
538C:  MOVWF  xFB
538E:  MOVLB  0
5390:  CALL   13CA
....................             tiempo_esterilizacion=0; 
5394:  MOVLB  5
5396:  CLRF   x72
....................             Controla(); 
5398:  MOVLB  0
539A:  CALL   27A2
539E:  MOVLB  5
....................          } 
....................       } 
....................        
....................       if(Pausa==1 && Puerta<770 && !TERM) 
53A0:  DECFSZ x6D,W
53A2:  BRA    5416
53A4:  MOVF   x81,W
53A6:  SUBLW  03
53A8:  BNC   5416
53AA:  BNZ   53B2
53AC:  MOVF   x80,W
53AE:  SUBLW  01
53B0:  BNC   5416
53B2:  BSF    F92.4
53B4:  BTFSC  F80.4
53B6:  BRA    5416
....................       { 
....................          flag_tiempocalentamiento=0; 
53B8:  BCF    x66.2
....................          strcpy(Menus.Letra,"Status:Pausado"); 
53BA:  MOVLW  05
53BC:  MOVWF  FEA
53BE:  MOVLW  D6
53C0:  MOVWF  FE9
53C2:  MOVFF  FF2,5F6
53C6:  BCF    FF2.7
53C8:  MOVLW  00
53CA:  MOVLB  0
53CC:  CALL   09E4
53D0:  TBLRD*-
53D2:  TBLRD*+
53D4:  MOVF   FF5,W
53D6:  MOVWF  FEE
53D8:  IORLW  00
53DA:  BNZ   53D2
53DC:  MOVLB  5
53DE:  BTFSC  xF6.7
53E0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
53E2:  MOVLW  05
53E4:  MOVWF  xF7
53E6:  MOVLW  D6
53E8:  MOVWF  xF6
53EA:  CLRF   xF8
53EC:  MOVLW  37
53EE:  MOVWF  xF9
53F0:  MOVLW  02
53F2:  MOVWF  xFA
53F4:  MOVLW  01
53F6:  MOVWF  xFB
53F8:  MOVLB  0
53FA:  CALL   13CA
....................          tiempo_esterilizacion=0; 
53FE:  MOVLB  5
5400:  CLRF   x72
....................          Resistencia_off; 
5402:  BCF    F8B.0
5404:  BCF    F94.0
....................          Resistencia2_off; 
5406:  BCF    F8B.2
5408:  BCF    F94.2
....................          Ventilador_off; 
540A:  BCF    F8B.1
540C:  BCF    F94.1
....................          Tpulso=0.0; 
540E:  CLRF   xB1
5410:  CLRF   xB0
5412:  CLRF   xAF
5414:  CLRF   xAE
....................       } 
....................        
....................       if(Puerta>770) 
5416:  MOVF   x81,W
5418:  SUBLW  02
541A:  BTFSC  FD8.0
541C:  BRA    555C
541E:  XORLW  FF
5420:  BNZ   542A
5422:  MOVF   x80,W
5424:  SUBLW  02
5426:  BTFSC  FD8.0
5428:  BRA    555C
....................       { 
....................          flag_tiempocalentamiento=0; 
542A:  BCF    x66.2
....................          if(flag_clear2==0) 
542C:  BTFSC  x65.7
542E:  BRA    5514
....................          { 
....................             Ganancia=read_eeprom(20); 
5430:  MOVFF  FF2,5F6
5434:  BCF    FF2.7
5436:  MOVLW  14
5438:  MOVWF  FA9
543A:  BCF    FA6.6
543C:  BCF    FA6.7
543E:  BSF    FA6.0
5440:  MOVF   FA8,W
5442:  BTFSC  xF6.7
5444:  BSF    FF2.7
5446:  CLRF   xFD
5448:  MOVWF  xFC
544A:  MOVLB  0
544C:  CALL   0D22
5450:  MOVFF  03,5C5
5454:  MOVFF  02,5C4
5458:  MOVFF  01,5C3
545C:  MOVFF  00,5C2
....................             Ganancia=Setpoint*(Ganancia/Coeficiente); 
5460:  MOVFF  5C5,5FE
5464:  MOVFF  5C4,5FD
5468:  MOVFF  5C3,5FC
546C:  MOVFF  5C2,5FB
5470:  MOVFF  5CD,602
5474:  MOVFF  5CC,601
5478:  MOVFF  5CB,600
547C:  MOVFF  5CA,5FF
5480:  CALL   172A
5484:  MOVFF  00,5F6
5488:  MOVFF  01,5F7
548C:  MOVFF  02,5F8
5490:  MOVFF  03,5F9
5494:  MOVLB  5
5496:  CLRF   xFD
5498:  MOVFF  570,5FC
549C:  MOVLB  0
549E:  CALL   0D22
54A2:  MOVFF  03,616
54A6:  MOVFF  02,615
54AA:  MOVFF  01,614
54AE:  MOVFF  00,613
54B2:  MOVFF  5F9,61A
54B6:  MOVFF  5F8,619
54BA:  MOVFF  5F7,618
54BE:  MOVFF  5F6,617
54C2:  CALL   1E36
54C6:  MOVFF  03,5C5
54CA:  MOVFF  02,5C4
54CE:  MOVFF  01,5C3
54D2:  MOVFF  00,5C2
....................             Pausa_ant=Pausa; 
54D6:  MOVFF  56D,56E
....................             Pausa=0; 
54DA:  MOVLB  5
54DC:  CLRF   x6D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
54DE:  MOVLB  6
54E0:  CLRF   x08
54E2:  MOVLW  37
54E4:  MOVWF  x09
54E6:  MOVLW  7F
54E8:  MOVWF  x0A
54EA:  MOVLW  3F
54EC:  MOVWF  x0B
54EE:  MOVLW  01
54F0:  MOVWF  x0C
54F2:  CLRF   x0D
54F4:  MOVLB  0
54F6:  CALL   1308
....................             tiempo_esterilizacion=0; 
54FA:  MOVLB  5
54FC:  CLRF   x72
....................             Resistencia_off; 
54FE:  BCF    F8B.0
5500:  BCF    F94.0
....................             Resistencia2_off; 
5502:  BCF    F8B.2
5504:  BCF    F94.2
....................             Ventilador_off; 
5506:  BCF    F8B.1
5508:  BCF    F94.1
....................             Tpulso=0.0; 
550A:  CLRF   xB1
550C:  CLRF   xB0
550E:  CLRF   xAF
5510:  CLRF   xAE
....................             flag_clear2=1; 
5512:  BSF    x65.7
....................          } 
....................          strcpy(Menus.Letra,"Status:Puerta Abierta"); 
5514:  MOVLW  05
5516:  MOVWF  FEA
5518:  MOVLW  D6
551A:  MOVWF  FE9
551C:  MOVFF  FF2,5F6
5520:  BCF    FF2.7
5522:  MOVLW  00
5524:  MOVLB  0
5526:  CALL   0A0E
552A:  TBLRD*-
552C:  TBLRD*+
552E:  MOVF   FF5,W
5530:  MOVWF  FEE
5532:  IORLW  00
5534:  BNZ   552C
5536:  MOVLB  5
5538:  BTFSC  xF6.7
553A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
553C:  MOVLW  05
553E:  MOVWF  xF7
5540:  MOVLW  D6
5542:  MOVWF  xF6
5544:  CLRF   xF8
5546:  MOVLW  37
5548:  MOVWF  xF9
554A:  MOVLW  02
554C:  MOVWF  xFA
554E:  MOVLW  01
5550:  MOVWF  xFB
5552:  MOVLB  0
5554:  CALL   13CA
....................       } 
....................       else 
5558:  BRA    5586
555A:  MOVLB  5
....................       { 
....................          if(flag_clear2==1) 
555C:  BTFSS  x65.7
555E:  BRA    5584
....................          { 
....................             Pausa=Pausa_ant; 
5560:  MOVFF  56E,56D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
5564:  MOVLB  6
5566:  CLRF   x08
5568:  MOVLW  37
556A:  MOVWF  x09
556C:  MOVLW  7F
556E:  MOVWF  x0A
5570:  MOVLW  3F
5572:  MOVWF  x0B
5574:  MOVLW  01
5576:  MOVWF  x0C
5578:  CLRF   x0D
557A:  MOVLB  0
557C:  CALL   1308
....................             flag_clear2=0; 
5580:  MOVLB  5
5582:  BCF    x65.7
5584:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(TERM) 
5586:  BSF    F92.4
5588:  BTFSS  F80.4
558A:  BRA    5616
....................       { 
....................          flag_tiempocalentamiento=0; 
558C:  MOVLB  5
558E:  BCF    x66.2
....................          if(flag_clear3==0) 
5590:  BTFSC  x66.0
5592:  BRA    55D0
....................          { 
....................             Pausa_ant=Pausa; 
5594:  MOVFF  56D,56E
....................             Pausa=0; 
5598:  CLRF   x6D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
559A:  MOVLB  6
559C:  CLRF   x08
559E:  MOVLW  37
55A0:  MOVWF  x09
55A2:  MOVLW  7F
55A4:  MOVWF  x0A
55A6:  MOVLW  3F
55A8:  MOVWF  x0B
55AA:  MOVLW  01
55AC:  MOVWF  x0C
55AE:  CLRF   x0D
55B0:  MOVLB  0
55B2:  CALL   1308
....................             tiempo_esterilizacion=0; 
55B6:  MOVLB  5
55B8:  CLRF   x72
....................             Resistencia_off; 
55BA:  BCF    F8B.0
55BC:  BCF    F94.0
....................             Resistencia2_off; 
55BE:  BCF    F8B.2
55C0:  BCF    F94.2
....................             Ventilador_off; 
55C2:  BCF    F8B.1
55C4:  BCF    F94.1
....................             Tpulso=0.0; 
55C6:  CLRF   xB1
55C8:  CLRF   xB0
55CA:  CLRF   xAF
55CC:  CLRF   xAE
....................             flag_clear3=1; 
55CE:  BSF    x66.0
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 01"); 
55D0:  MOVLW  05
55D2:  MOVWF  FEA
55D4:  MOVLW  D6
55D6:  MOVWF  FE9
55D8:  MOVFF  FF2,5F6
55DC:  BCF    FF2.7
55DE:  MOVLW  00
55E0:  MOVLB  0
55E2:  CALL   0A3E
55E6:  TBLRD*-
55E8:  TBLRD*+
55EA:  MOVF   FF5,W
55EC:  MOVWF  FEE
55EE:  IORLW  00
55F0:  BNZ   55E8
55F2:  MOVLB  5
55F4:  BTFSC  xF6.7
55F6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
55F8:  MOVLW  05
55FA:  MOVWF  xF7
55FC:  MOVLW  D6
55FE:  MOVWF  xF6
5600:  CLRF   xF8
5602:  MOVLW  37
5604:  MOVWF  xF9
5606:  MOVLW  02
5608:  MOVWF  xFA
560A:  MOVLW  01
560C:  MOVWF  xFB
560E:  MOVLB  0
5610:  CALL   13CA
....................       } 
....................       else 
5614:  BRA    5642
....................       { 
....................          if(flag_clear3==1) 
5616:  MOVLB  5
5618:  BTFSS  x66.0
561A:  BRA    5640
....................          { 
....................             Pausa=Pausa_ant; 
561C:  MOVFF  56E,56D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
5620:  MOVLB  6
5622:  CLRF   x08
5624:  MOVLW  37
5626:  MOVWF  x09
5628:  MOVLW  7F
562A:  MOVWF  x0A
562C:  MOVLW  3F
562E:  MOVWF  x0B
5630:  MOVLW  01
5632:  MOVWF  x0C
5634:  CLRF   x0D
5636:  MOVLB  0
5638:  CALL   1308
....................             flag_clear3=0; 
563C:  MOVLB  5
563E:  BCF    x66.0
5640:  MOVLB  0
....................          } 
....................       }   
....................        
....................       if(UP)//Si oprime hacia arriba 
5642:  BSF    F92.5
5644:  BTFSS  F80.5
5646:  BRA    5682
....................       { 
....................          if(Pausa!=2) 
5648:  MOVLB  5
564A:  MOVF   x6D,W
564C:  SUBLW  02
564E:  BZ    5684
....................          { 
....................             delay_ms(500);Pausa=0; 
5650:  MOVLW  02
5652:  MOVWF  xF6
5654:  MOVLW  FA
5656:  MOVWF  xFC
5658:  MOVLB  0
565A:  CALL   0CF8
565E:  MOVLB  5
5660:  DECFSZ xF6,F
5662:  BRA    5654
5664:  CLRF   x6D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
5666:  MOVLB  6
5668:  CLRF   x08
566A:  MOVLW  37
566C:  MOVWF  x09
566E:  MOVLW  7F
5670:  MOVWF  x0A
5672:  MOVLW  3F
5674:  MOVWF  x0B
5676:  MOVLW  01
5678:  MOVWF  x0C
567A:  CLRF   x0D
567C:  MOVLB  0
567E:  CALL   1308
5682:  MOVLB  5
....................          } 
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5684:  BSF    F96.0
5686:  BTFSS  F84.0
5688:  BRA    56C6
....................       {   
....................          if(Pausa!=2) 
568A:  MOVF   x6D,W
568C:  SUBLW  02
568E:  BZ    56C6
....................          { 
....................             delay_ms(500);Pausa=1; 
5690:  MOVLW  02
5692:  MOVWF  xF6
5694:  MOVLW  FA
5696:  MOVWF  xFC
5698:  MOVLB  0
569A:  CALL   0CF8
569E:  MOVLB  5
56A0:  DECFSZ xF6,F
56A2:  BRA    5694
56A4:  MOVLW  01
56A6:  MOVWF  x6D
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
56A8:  MOVLB  6
56AA:  CLRF   x08
56AC:  MOVLW  37
56AE:  MOVWF  x09
56B0:  MOVLW  7F
56B2:  MOVWF  x0A
56B4:  MOVLW  3F
56B6:  MOVWF  x0B
56B8:  MOVLW  01
56BA:  MOVWF  x0C
56BC:  CLRF   x0D
56BE:  MOVLB  0
56C0:  CALL   1308
56C4:  MOVLB  5
....................          } 
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
56C6:  BSF    F96.1
56C8:  BTFSS  F84.1
56CA:  BRA    56DA
....................       {   
....................          glcd_init(ON);flag_display=!flag_display; 
56CC:  MOVLW  01
56CE:  MOVWF  xF6
56D0:  MOVLB  0
56D2:  CALL   0EAA
56D6:  MOVLB  5
56D8:  BTG    x66.3
....................       }  
....................          
....................       if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
56DA:  BTFSS  x65.4
56DC:  BRA    5B9E
....................       {                  
....................           
....................          Lectura=0; 
56DE:  BCF    x65.4
....................          Potencia=(100.0/Tciclo)*Tpulso; 
56E0:  CLRF   xFE
56E2:  CLRF   xFD
56E4:  MOVLW  48
56E6:  MOVWF  xFC
56E8:  MOVLW  85
56EA:  MOVWF  xFB
56EC:  MOVFF  5AD,602
56F0:  MOVFF  5AC,601
56F4:  MOVFF  5AB,600
56F8:  MOVFF  5AA,5FF
56FC:  MOVLB  0
56FE:  CALL   172A
5702:  MOVFF  00,5F6
5706:  MOVFF  01,5F7
570A:  MOVFF  02,5F8
570E:  MOVFF  03,5F9
5712:  MOVFF  03,616
5716:  MOVFF  02,615
571A:  MOVFF  01,614
571E:  MOVFF  00,613
5722:  MOVFF  5B1,61A
5726:  MOVFF  5B0,619
572A:  MOVFF  5AF,618
572E:  MOVFF  5AE,617
5732:  CALL   1E36
5736:  MOVFF  03,585
573A:  MOVFF  02,584
573E:  MOVFF  01,583
5742:  MOVFF  00,582
....................          Temperatura=Leer_Sensor(MediaMovil); 
5746:  MOVFF  562,5F6
574A:  CALL   1B52
574E:  MOVFF  03,5D5
5752:  MOVFF  02,5D4
5756:  MOVFF  01,5D3
575A:  MOVFF  00,5D2
....................          Puerta=sensores(3); 
575E:  MOVLW  03
5760:  MOVLB  5
5762:  MOVWF  xF7
5764:  MOVLB  0
5766:  CALL   16D2
576A:  MOVFF  03,5F9
576E:  MOVFF  02,5F8
5772:  MOVFF  01,5F7
5776:  MOVFF  00,5F6
577A:  CALL   2766
577E:  MOVFF  02,581
5782:  MOVFF  01,580
....................          displayT(Temperatura,15,29,2); 
5786:  MOVFF  5D5,5F9
578A:  MOVFF  5D4,5F8
578E:  MOVFF  5D3,5F7
5792:  MOVFF  5D2,5F6
5796:  MOVLW  0F
5798:  MOVLB  5
579A:  MOVWF  xFA
579C:  MOVLW  1D
579E:  MOVWF  xFB
57A0:  MOVLW  02
57A2:  MOVWF  xFC
57A4:  MOVLB  0
57A6:  GOTO   2F7A
....................          glcd_circle(74,30,2,NO,ON); 
57AA:  MOVLW  4A
57AC:  MOVLB  5
57AE:  MOVWF  xF6
57B0:  MOVLW  1E
57B2:  MOVWF  xF7
57B4:  MOVLW  02
57B6:  MOVWF  xF8
57B8:  CLRF   xF9
57BA:  MOVLW  01
57BC:  MOVWF  xFA
57BE:  MOVLB  0
57C0:  CALL   1F7C
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,75,30,2,2); 
57C4:  MOVLW  05
57C6:  MOVWF  FEA
57C8:  MOVLW  D6
57CA:  MOVWF  FE9
57CC:  MOVFF  FF2,5F6
57D0:  BCF    FF2.7
57D2:  MOVLW  00
57D4:  CALL   0908
57D8:  TBLRD*-
57DA:  TBLRD*+
57DC:  MOVF   FF5,W
57DE:  MOVWF  FEE
57E0:  IORLW  00
57E2:  BNZ   57DA
57E4:  MOVLB  5
57E6:  BTFSC  xF6.7
57E8:  BSF    FF2.7
57EA:  MOVLW  05
57EC:  MOVWF  xF7
57EE:  MOVLW  D6
57F0:  MOVWF  xF6
57F2:  MOVLW  4B
57F4:  MOVWF  xF8
57F6:  MOVLW  1E
57F8:  MOVWF  xF9
57FA:  MOVLW  02
57FC:  MOVWF  xFA
57FE:  MOVWF  xFB
5800:  MOVLB  0
5802:  CALL   13CA
....................           
....................          displayTiempo(Setpoint,30,45,3,1); 
5806:  MOVFF  570,5F7
580A:  MOVLW  1E
580C:  MOVLB  5
580E:  MOVWF  xF8
5810:  MOVLW  2D
5812:  MOVWF  xF9
5814:  MOVLW  03
5816:  MOVWF  xFA
5818:  MOVLW  01
581A:  MOVWF  xFB
581C:  MOVLB  0
581E:  CALL   23CC
....................          glcd_circle(50,47,1,NO,ON); 
5822:  MOVLW  32
5824:  MOVLB  5
5826:  MOVWF  xF6
5828:  MOVLW  2F
582A:  MOVWF  xF7
582C:  MOVLW  01
582E:  MOVWF  xF8
5830:  CLRF   xF9
5832:  MOVWF  xFA
5834:  MOVLB  0
5836:  CALL   1F7C
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,53,45,2,1); 
583A:  MOVLW  05
583C:  MOVWF  FEA
583E:  MOVLW  D6
5840:  MOVWF  FE9
5842:  MOVFF  FF2,5F6
5846:  BCF    FF2.7
5848:  MOVLW  00
584A:  CALL   0908
584E:  TBLRD*-
5850:  TBLRD*+
5852:  MOVF   FF5,W
5854:  MOVWF  FEE
5856:  IORLW  00
5858:  BNZ   5850
585A:  MOVLB  5
585C:  BTFSC  xF6.7
585E:  BSF    FF2.7
5860:  MOVLW  05
5862:  MOVWF  xF7
5864:  MOVLW  D6
5866:  MOVWF  xF6
5868:  MOVLW  35
586A:  MOVWF  xF8
586C:  MOVLW  2D
586E:  MOVWF  xF9
5870:  MOVLW  02
5872:  MOVWF  xFA
5874:  MOVLW  01
5876:  MOVWF  xFB
5878:  MOVLB  0
587A:  CALL   13CA
....................          strcpy(Menus.Letra,"Temp:");displayMenu(Menus.Letra,0,45,2,1);  
587E:  MOVLW  05
5880:  MOVWF  FEA
5882:  MOVLW  D6
5884:  MOVWF  FE9
5886:  MOVFF  FF2,5F6
588A:  BCF    FF2.7
588C:  MOVLW  00
588E:  CALL   0A6A
5892:  TBLRD*-
5894:  TBLRD*+
5896:  MOVF   FF5,W
5898:  MOVWF  FEE
589A:  IORLW  00
589C:  BNZ   5894
589E:  MOVLB  5
58A0:  BTFSC  xF6.7
58A2:  BSF    FF2.7
58A4:  MOVLW  05
58A6:  MOVWF  xF7
58A8:  MOVLW  D6
58AA:  MOVWF  xF6
58AC:  CLRF   xF8
58AE:  MOVLW  2D
58B0:  MOVWF  xF9
58B2:  MOVLW  02
58B4:  MOVWF  xFA
58B6:  MOVLW  01
58B8:  MOVWF  xFB
58BA:  MOVLB  0
58BC:  CALL   13CA
....................           
....................          displayTiempo(Potencia,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
58C0:  MOVFF  585,5F9
58C4:  MOVFF  584,5F8
58C8:  MOVFF  583,5F7
58CC:  MOVFF  582,5F6
58D0:  CALL   2766
58D4:  MOVFF  01,5F6
58D8:  MOVFF  01,5F7
58DC:  MOVLW  61
58DE:  MOVLB  5
58E0:  MOVWF  xF8
58E2:  MOVLW  2A
58E4:  MOVWF  xF9
58E6:  MOVLW  03
58E8:  MOVWF  xFA
58EA:  MOVLW  01
58EC:  MOVWF  xFB
58EE:  MOVLB  0
58F0:  CALL   23CC
58F4:  MOVLW  05
58F6:  MOVWF  FEA
58F8:  MOVLW  D6
58FA:  MOVWF  FE9
58FC:  MOVFF  FF2,5F6
5900:  BCF    FF2.7
5902:  MOVLW  00
5904:  CALL   0A8A
5908:  TBLRD*-
590A:  TBLRD*+
590C:  MOVF   FF5,W
590E:  MOVWF  FEE
5910:  IORLW  00
5912:  BNZ   590A
5914:  MOVLB  5
5916:  BTFSC  xF6.7
5918:  BSF    FF2.7
591A:  MOVLW  05
591C:  MOVWF  xF7
591E:  MOVLW  D6
5920:  MOVWF  xF6
5922:  MOVLW  73
5924:  MOVWF  xF8
5926:  MOVLW  2A
5928:  MOVWF  xF9
592A:  MOVLW  02
592C:  MOVWF  xFA
592E:  MOVLW  01
5930:  MOVWF  xFB
5932:  MOVLB  0
5934:  CALL   13CA
....................          //displayTiempo(Tpulsomin*10,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
....................           
....................          if(flag_display==1) 
5938:  MOVLB  5
593A:  BTFSS  x66.3
593C:  BRA    5976
....................             displayTiempo(Ganancia,97,13,3,1); 
593E:  MOVFF  5C5,5F9
5942:  MOVFF  5C4,5F8
5946:  MOVFF  5C3,5F7
594A:  MOVFF  5C2,5F6
594E:  MOVLB  0
5950:  CALL   2766
5954:  MOVFF  01,5F6
5958:  MOVFF  01,5F7
595C:  MOVLW  61
595E:  MOVLB  5
5960:  MOVWF  xF8
5962:  MOVLW  0D
5964:  MOVWF  xF9
5966:  MOVLW  03
5968:  MOVWF  xFA
596A:  MOVLW  01
596C:  MOVWF  xFB
596E:  MOVLB  0
5970:  CALL   23CC
....................             //displayTiempo(Gananciamax,97,13,3,1); 
....................          else 
5974:  BRA    5994
....................             glcd_rect(97, 13, 115, 18, YES, OFF); 
5976:  MOVLW  61
5978:  MOVLB  6
597A:  MOVWF  x08
597C:  MOVLW  0D
597E:  MOVWF  x09
5980:  MOVLW  73
5982:  MOVWF  x0A
5984:  MOVLW  12
5986:  MOVWF  x0B
5988:  MOVLW  01
598A:  MOVWF  x0C
598C:  CLRF   x0D
598E:  MOVLB  0
5990:  CALL   1308
....................           
....................          // Muestra Valor de esterilizacion Programado. 
....................          displayTiempo(Testerilizacion[3],20,2,0,2);displayTiempo(Testerilizacion[2],33,2,0,2); 
5994:  MOVFF  591,5F7
5998:  MOVLW  14
599A:  MOVLB  5
599C:  MOVWF  xF8
599E:  MOVLW  02
59A0:  MOVWF  xF9
59A2:  CLRF   xFA
59A4:  MOVWF  xFB
59A6:  MOVLB  0
59A8:  CALL   23CC
59AC:  MOVFF  590,5F7
59B0:  MOVLW  21
59B2:  MOVLB  5
59B4:  MOVWF  xF8
59B6:  MOVLW  02
59B8:  MOVWF  xF9
59BA:  CLRF   xFA
59BC:  MOVWF  xFB
59BE:  MOVLB  0
59C0:  CALL   23CC
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,46,2,2,2);  
59C4:  MOVLW  05
59C6:  MOVWF  FEA
59C8:  MOVLW  D6
59CA:  MOVWF  FE9
59CC:  MOVFF  FF2,5F6
59D0:  BCF    FF2.7
59D2:  MOVLW  00
59D4:  CALL   0948
59D8:  TBLRD*-
59DA:  TBLRD*+
59DC:  MOVF   FF5,W
59DE:  MOVWF  FEE
59E0:  IORLW  00
59E2:  BNZ   59DA
59E4:  MOVLB  5
59E6:  BTFSC  xF6.7
59E8:  BSF    FF2.7
59EA:  MOVLW  05
59EC:  MOVWF  xF7
59EE:  MOVLW  D6
59F0:  MOVWF  xF6
59F2:  MOVLW  2E
59F4:  MOVWF  xF8
59F6:  MOVLW  02
59F8:  MOVWF  xF9
59FA:  MOVWF  xFA
59FC:  MOVWF  xFB
59FE:  MOVLB  0
5A00:  CALL   13CA
....................          displayTiempo(Testerilizacion[1],55,2,0,2);displayTiempo(Testerilizacion[0],68,2,0,2); 
5A04:  MOVFF  58F,5F7
5A08:  MOVLW  37
5A0A:  MOVLB  5
5A0C:  MOVWF  xF8
5A0E:  MOVLW  02
5A10:  MOVWF  xF9
5A12:  CLRF   xFA
5A14:  MOVWF  xFB
5A16:  MOVLB  0
5A18:  CALL   23CC
5A1C:  MOVFF  58E,5F7
5A20:  MOVLW  44
5A22:  MOVLB  5
5A24:  MOVWF  xF8
5A26:  MOVLW  02
5A28:  MOVWF  xF9
5A2A:  CLRF   xFA
5A2C:  MOVWF  xFB
5A2E:  MOVLB  0
5A30:  CALL   23CC
....................           
....................          // Muestra Valor de esterilizacion actual. 
....................          strcpy(Menus.Letra,"Time:");displayMenu(Menus.Letra,0,18,2,1);  
5A34:  MOVLW  05
5A36:  MOVWF  FEA
5A38:  MOVLW  D6
5A3A:  MOVWF  FE9
5A3C:  MOVFF  FF2,5F6
5A40:  BCF    FF2.7
5A42:  MOVLW  00
5A44:  CALL   0AA6
5A48:  TBLRD*-
5A4A:  TBLRD*+
5A4C:  MOVF   FF5,W
5A4E:  MOVWF  FEE
5A50:  IORLW  00
5A52:  BNZ   5A4A
5A54:  MOVLB  5
5A56:  BTFSC  xF6.7
5A58:  BSF    FF2.7
5A5A:  MOVLW  05
5A5C:  MOVWF  xF7
5A5E:  MOVLW  D6
5A60:  MOVWF  xF6
5A62:  CLRF   xF8
5A64:  MOVLW  12
5A66:  MOVWF  xF9
5A68:  MOVLW  02
5A6A:  MOVWF  xFA
5A6C:  MOVLW  01
5A6E:  MOVWF  xFB
5A70:  MOVLB  0
5A72:  CALL   13CA
....................          displayTiempo(Testerilizacionp[3],30,18,0,1);displayTiempo(Testerilizacionp[2],36,18,0,1); 
5A76:  MOVFF  595,5F7
5A7A:  MOVLW  1E
5A7C:  MOVLB  5
5A7E:  MOVWF  xF8
5A80:  MOVLW  12
5A82:  MOVWF  xF9
5A84:  CLRF   xFA
5A86:  MOVLW  01
5A88:  MOVWF  xFB
5A8A:  MOVLB  0
5A8C:  CALL   23CC
5A90:  MOVFF  594,5F7
5A94:  MOVLW  24
5A96:  MOVLB  5
5A98:  MOVWF  xF8
5A9A:  MOVLW  12
5A9C:  MOVWF  xF9
5A9E:  CLRF   xFA
5AA0:  MOVLW  01
5AA2:  MOVWF  xFB
5AA4:  MOVLB  0
5AA6:  CALL   23CC
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,42,18,2,1);  
5AAA:  MOVLW  05
5AAC:  MOVWF  FEA
5AAE:  MOVLW  D6
5AB0:  MOVWF  FE9
5AB2:  MOVFF  FF2,5F6
5AB6:  BCF    FF2.7
5AB8:  MOVLW  00
5ABA:  CALL   0948
5ABE:  TBLRD*-
5AC0:  TBLRD*+
5AC2:  MOVF   FF5,W
5AC4:  MOVWF  FEE
5AC6:  IORLW  00
5AC8:  BNZ   5AC0
5ACA:  MOVLB  5
5ACC:  BTFSC  xF6.7
5ACE:  BSF    FF2.7
5AD0:  MOVLW  05
5AD2:  MOVWF  xF7
5AD4:  MOVLW  D6
5AD6:  MOVWF  xF6
5AD8:  MOVLW  2A
5ADA:  MOVWF  xF8
5ADC:  MOVLW  12
5ADE:  MOVWF  xF9
5AE0:  MOVLW  02
5AE2:  MOVWF  xFA
5AE4:  MOVLW  01
5AE6:  MOVWF  xFB
5AE8:  MOVLB  0
5AEA:  CALL   13CA
....................          displayTiempo(Testerilizacionp[1],48,18,0,1);displayTiempo(Testerilizacionp[0],54,18,0,1); 
5AEE:  MOVFF  593,5F7
5AF2:  MOVLW  30
5AF4:  MOVLB  5
5AF6:  MOVWF  xF8
5AF8:  MOVLW  12
5AFA:  MOVWF  xF9
5AFC:  CLRF   xFA
5AFE:  MOVLW  01
5B00:  MOVWF  xFB
5B02:  MOVLB  0
5B04:  CALL   23CC
5B08:  MOVFF  592,5F7
5B0C:  MOVLW  36
5B0E:  MOVLB  5
5B10:  MOVWF  xF8
5B12:  MOVLW  12
5B14:  MOVWF  xF9
5B16:  CLRF   xFA
5B18:  MOVLW  01
5B1A:  MOVWF  xFB
5B1C:  MOVLB  0
5B1E:  CALL   23CC
....................          strcpy(Menus.Letra,"(H:M)");displayMenu(Menus.Letra,60,18,2,1);  
5B22:  MOVLW  05
5B24:  MOVWF  FEA
5B26:  MOVLW  D6
5B28:  MOVWF  FE9
5B2A:  MOVFF  FF2,5F6
5B2E:  BCF    FF2.7
5B30:  MOVLW  00
5B32:  CALL   0AC6
5B36:  TBLRD*-
5B38:  TBLRD*+
5B3A:  MOVF   FF5,W
5B3C:  MOVWF  FEE
5B3E:  IORLW  00
5B40:  BNZ   5B38
5B42:  MOVLB  5
5B44:  BTFSC  xF6.7
5B46:  BSF    FF2.7
5B48:  MOVLW  05
5B4A:  MOVWF  xF7
5B4C:  MOVLW  D6
5B4E:  MOVWF  xF6
5B50:  MOVLW  3C
5B52:  MOVWF  xF8
5B54:  MOVLW  12
5B56:  MOVWF  xF9
5B58:  MOVLW  02
5B5A:  MOVWF  xFA
5B5C:  MOVLW  01
5B5E:  MOVWF  xFB
5B60:  MOVLB  0
5B62:  CALL   13CA
....................           
....................          glcd_rect(0, 0, 89, 27, NO, ON); 
5B66:  MOVLB  6
5B68:  CLRF   x08
5B6A:  CLRF   x09
5B6C:  MOVLW  59
5B6E:  MOVWF  x0A
5B70:  MOVLW  1B
5B72:  MOVWF  x0B
5B74:  CLRF   x0C
5B76:  MOVLW  01
5B78:  MOVWF  x0D
5B7A:  MOVLB  0
5B7C:  CALL   1308
....................          glcd_rect(0, 27, 89, 54, NO, ON); 
5B80:  MOVLB  6
5B82:  CLRF   x08
5B84:  MOVLW  1B
5B86:  MOVWF  x09
5B88:  MOVLW  59
5B8A:  MOVWF  x0A
5B8C:  MOVLW  36
5B8E:  MOVWF  x0B
5B90:  CLRF   x0C
5B92:  MOVLW  01
5B94:  MOVWF  x0D
5B96:  MOVLB  0
5B98:  CALL   1308
5B9C:  MOVLB  5
....................       }  
....................        
....................       // Si cumplio el tiempo de esterilización, Muestre ciclo finalizado y detenga control de temperatura. 
....................       if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1) 
5B9E:  MOVF   x92,W
5BA0:  XORLW  80
5BA2:  MOVWF  00
5BA4:  MOVF   x8E,W
5BA6:  XORLW  80
5BA8:  SUBWF  00,W
5BAA:  BZ    5BAE
5BAC:  BC    5C52
5BAE:  MOVF   x93,W
5BB0:  XORLW  80
5BB2:  MOVWF  00
5BB4:  MOVF   x8F,W
5BB6:  XORLW  80
5BB8:  SUBWF  00,W
5BBA:  BZ    5BBE
5BBC:  BC    5C52
5BBE:  MOVF   x94,W
5BC0:  XORLW  80
5BC2:  MOVWF  00
5BC4:  MOVF   x90,W
5BC6:  XORLW  80
5BC8:  SUBWF  00,W
5BCA:  BZ    5BCE
5BCC:  BC    5C52
5BCE:  MOVF   x95,W
5BD0:  XORLW  80
5BD2:  MOVWF  00
5BD4:  MOVF   x91,W
5BD6:  XORLW  80
5BD8:  SUBWF  00,W
5BDA:  BZ    5BDE
5BDC:  BC    5C52
5BDE:  DECFSZ x72,W
5BE0:  BRA    5C52
....................       { 
....................          if(flag_clear==0) 
5BE2:  BTFSC  x65.6
5BE4:  BRA    5C0C
....................          { 
....................             glcd_fillScreen(OFF); 
5BE6:  CLRF   xF7
5BE8:  MOVLB  0
5BEA:  CALL   0D98
....................             //glcd_rect(0, 55, 127, 63, YES, OFF); 
....................             tiempo_esterilizacion=0; 
5BEE:  MOVLB  5
5BF0:  CLRF   x72
....................             Pausa=2; 
5BF2:  MOVLW  02
5BF4:  MOVWF  x6D
....................             flag_clear=1; 
5BF6:  BSF    x65.6
....................             Resistencia_off; 
5BF8:  BCF    F8B.0
5BFA:  BCF    F94.0
....................             Resistencia2_off; 
5BFC:  BCF    F8B.2
5BFE:  BCF    F94.2
....................             Ventilador_off; 
5C00:  BCF    F8B.1
5C02:  BCF    F94.1
....................             Tpulso=0.0; 
5C04:  CLRF   xB1
5C06:  CLRF   xB0
5C08:  CLRF   xAF
5C0A:  CLRF   xAE
....................          } 
....................          strcpy(Menus.Letra,"Status:Finalizado"); 
5C0C:  MOVLW  05
5C0E:  MOVWF  FEA
5C10:  MOVLW  D6
5C12:  MOVWF  FE9
5C14:  MOVFF  FF2,5F6
5C18:  BCF    FF2.7
5C1A:  MOVLW  00
5C1C:  MOVLB  0
5C1E:  CALL   0AE6
5C22:  TBLRD*-
5C24:  TBLRD*+
5C26:  MOVF   FF5,W
5C28:  MOVWF  FEE
5C2A:  IORLW  00
5C2C:  BNZ   5C24
5C2E:  MOVLB  5
5C30:  BTFSC  xF6.7
5C32:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
5C34:  MOVLW  05
5C36:  MOVWF  xF7
5C38:  MOVLW  D6
5C3A:  MOVWF  xF6
5C3C:  CLRF   xF8
5C3E:  MOVLW  37
5C40:  MOVWF  xF9
5C42:  MOVLW  02
5C44:  MOVWF  xFA
5C46:  MOVLW  01
5C48:  MOVWF  xFB
5C4A:  MOVLB  0
5C4C:  CALL   13CA
5C50:  MOVLB  5
....................       }  
....................        
....................       // Si ha pasado un tiempo x y no ha llegado al setpoint 
....................       if(tiempocalentamiento>3600 && tiempo_esterilizacion==0) 
5C52:  MOVF   x7D,W
5C54:  SUBLW  0D
5C56:  BC    5CEA
5C58:  XORLW  FF
5C5A:  BNZ   5C62
5C5C:  MOVF   x7C,W
5C5E:  SUBLW  10
5C60:  BC    5CEA
5C62:  MOVF   x72,F
5C64:  BNZ   5CEA
....................       { 
....................          if(flag_clear4==0) 
5C66:  BTFSC  x66.1
5C68:  BRA    5CA4
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
5C6A:  MOVLB  6
5C6C:  CLRF   x08
5C6E:  MOVLW  37
5C70:  MOVWF  x09
5C72:  MOVLW  7F
5C74:  MOVWF  x0A
5C76:  MOVLW  3F
5C78:  MOVWF  x0B
5C7A:  MOVLW  01
5C7C:  MOVWF  x0C
5C7E:  CLRF   x0D
5C80:  MOVLB  0
5C82:  CALL   1308
....................             tiempo_esterilizacion=0; 
5C86:  MOVLB  5
5C88:  CLRF   x72
....................             Pausa=2; 
5C8A:  MOVLW  02
5C8C:  MOVWF  x6D
....................             flag_clear4=1; 
5C8E:  BSF    x66.1
....................             Resistencia_off; 
5C90:  BCF    F8B.0
5C92:  BCF    F94.0
....................             Resistencia2_off; 
5C94:  BCF    F8B.2
5C96:  BCF    F94.2
....................             Ventilador_off; 
5C98:  BCF    F8B.1
5C9A:  BCF    F94.1
....................             Tpulso=0.0; 
5C9C:  CLRF   xB1
5C9E:  CLRF   xB0
5CA0:  CLRF   xAF
5CA2:  CLRF   xAE
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 02"); 
5CA4:  MOVLW  05
5CA6:  MOVWF  FEA
5CA8:  MOVLW  D6
5CAA:  MOVWF  FE9
5CAC:  MOVFF  FF2,5F6
5CB0:  BCF    FF2.7
5CB2:  MOVLW  00
5CB4:  MOVLB  0
5CB6:  CALL   0B12
5CBA:  TBLRD*-
5CBC:  TBLRD*+
5CBE:  MOVF   FF5,W
5CC0:  MOVWF  FEE
5CC2:  IORLW  00
5CC4:  BNZ   5CBC
5CC6:  MOVLB  5
5CC8:  BTFSC  xF6.7
5CCA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
5CCC:  MOVLW  05
5CCE:  MOVWF  xF7
5CD0:  MOVLW  D6
5CD2:  MOVWF  xF6
5CD4:  CLRF   xF8
5CD6:  MOVLW  37
5CD8:  MOVWF  xF9
5CDA:  MOVLW  02
5CDC:  MOVWF  xFA
5CDE:  MOVLW  01
5CE0:  MOVWF  xFB
5CE2:  MOVLB  0
5CE4:  CALL   13CA
5CE8:  MOVLB  5
....................       } 
....................        
....................       if(tinicio>=60) 
5CEA:  MOVF   x7B,F
5CEC:  BNZ   5CF4
5CEE:  MOVF   x7A,W
5CF0:  SUBLW  3B
5CF2:  BC    5D30
....................       { 
....................          tinicio=0; 
5CF4:  CLRF   x7B
5CF6:  CLRF   x7A
....................          Testerilizacion[0]++; 
5CF8:  INCF   x8E,F
....................          if(Testerilizacion[0]>9) 
5CFA:  BTFSC  x8E.7
5CFC:  BRA    5D08
5CFE:  MOVF   x8E,W
5D00:  SUBLW  09
5D02:  BC    5D08
....................          { 
....................             Testerilizacion[0]=0; 
5D04:  CLRF   x8E
....................             Testerilizacion[1]++; 
5D06:  INCF   x8F,F
....................          } 
....................          if(Testerilizacion[1]>5) 
5D08:  BTFSC  x8F.7
5D0A:  BRA    5D16
5D0C:  MOVF   x8F,W
5D0E:  SUBLW  05
5D10:  BC    5D16
....................          { 
....................             Testerilizacion[1]=0; 
5D12:  CLRF   x8F
....................             Testerilizacion[2]++; 
5D14:  INCF   x90,F
....................          } 
....................          if(Testerilizacion[2]>9) 
5D16:  BTFSC  x90.7
5D18:  BRA    5D24
5D1A:  MOVF   x90,W
5D1C:  SUBLW  09
5D1E:  BC    5D24
....................          { 
....................             Testerilizacion[2]=0; 
5D20:  CLRF   x90
....................             Testerilizacion[3]++; 
5D22:  INCF   x91,F
....................          } 
....................          if(Testerilizacion[3]>9) 
5D24:  BTFSC  x91.7
5D26:  BRA    5D30
5D28:  MOVF   x91,W
5D2A:  SUBLW  09
5D2C:  BC    5D30
....................          { 
....................             Testerilizacion[3]=0; 
5D2E:  CLRF   x91
....................          } 
....................       } 
....................        
....................       if(LEFT)//Si oprime boton de Toma. 
5D30:  BSF    F96.2
5D32:  BTFSS  F84.2
5D34:  BRA    5D66
....................       { 
....................          if(Pausa!=2) 
5D36:  MOVF   x6D,W
5D38:  SUBLW  02
5D3A:  BZ    5D66
....................          { 
....................             delay_ms(500);Menu=30;glcd_fillscreen(OFF);Opcion=1;visual=1;Pausa=1; 
5D3C:  MOVLW  02
5D3E:  MOVWF  xF6
5D40:  MOVLW  FA
5D42:  MOVWF  xFC
5D44:  MOVLB  0
5D46:  CALL   0CF8
5D4A:  MOVLB  5
5D4C:  DECFSZ xF6,F
5D4E:  BRA    5D40
5D50:  MOVLW  1E
5D52:  MOVWF  x6A
5D54:  CLRF   xF7
5D56:  MOVLB  0
5D58:  CALL   0D98
5D5C:  MOVLW  01
5D5E:  MOVLB  5
5D60:  MOVWF  x71
5D62:  BSF    x65.3
5D64:  MOVWF  x6D
....................          } 
....................       } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==30){ //Menu de Retroceso 
5D66:  MOVF   x6A,W
5D68:  SUBLW  1E
5D6A:  BTFSS  FD8.2
5D6C:  BRA    5F82
....................        
....................       strcpy(Menus.Letra,"Regresar"); 
5D6E:  MOVLW  05
5D70:  MOVWF  FEA
5D72:  MOVLW  D6
5D74:  MOVWF  FE9
5D76:  MOVFF  FF2,5F6
5D7A:  BCF    FF2.7
5D7C:  MOVLW  00
5D7E:  MOVLB  0
5D80:  CALL   0B3E
5D84:  TBLRD*-
5D86:  TBLRD*+
5D88:  MOVF   FF5,W
5D8A:  MOVWF  FEE
5D8C:  IORLW  00
5D8E:  BNZ   5D86
5D90:  MOVLB  5
5D92:  BTFSC  xF6.7
5D94:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2); 
5D96:  MOVLW  05
5D98:  MOVWF  xF7
5D9A:  MOVLW  D6
5D9C:  MOVWF  xF6
5D9E:  CLRF   xF8
5DA0:  CLRF   xF9
5DA2:  MOVLW  01
5DA4:  MOVWF  xFA
5DA6:  MOVLW  02
5DA8:  MOVWF  xFB
5DAA:  MOVLB  0
5DAC:  CALL   13CA
....................           
....................       if(Opcion==2) 
5DB0:  MOVLB  5
5DB2:  MOVF   x71,W
5DB4:  SUBLW  02
5DB6:  BNZ   5E42
....................       {strcpy(Menus.Letra,"SI"); 
5DB8:  MOVLW  05
5DBA:  MOVWF  FEA
5DBC:  MOVLW  D6
5DBE:  MOVWF  FE9
5DC0:  MOVFF  FF2,5F6
5DC4:  BCF    FF2.7
5DC6:  MOVLW  00
5DC8:  MOVLB  0
5DCA:  CALL   08CC
5DCE:  TBLRD*-
5DD0:  TBLRD*+
5DD2:  MOVF   FF5,W
5DD4:  MOVWF  FEE
5DD6:  IORLW  00
5DD8:  BNZ   5DD0
5DDA:  MOVLB  5
5DDC:  BTFSC  xF6.7
5DDE:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,25,1,2); 
5DE0:  MOVLW  05
5DE2:  MOVWF  xF7
5DE4:  MOVLW  D6
5DE6:  MOVWF  xF6
5DE8:  MOVLW  32
5DEA:  MOVWF  xF8
5DEC:  MOVLW  19
5DEE:  MOVWF  xF9
5DF0:  MOVLW  01
5DF2:  MOVWF  xFA
5DF4:  MOVLW  02
5DF6:  MOVWF  xFB
5DF8:  MOVLB  0
5DFA:  CALL   13CA
....................       strcpy(Menus.Letra,"NO"); 
5DFE:  MOVLW  05
5E00:  MOVWF  FEA
5E02:  MOVLW  D6
5E04:  MOVWF  FE9
5E06:  MOVFF  FF2,5F6
5E0A:  BCF    FF2.7
5E0C:  MOVLW  00
5E0E:  CALL   08EA
5E12:  TBLRD*-
5E14:  TBLRD*+
5E16:  MOVF   FF5,W
5E18:  MOVWF  FEE
5E1A:  IORLW  00
5E1C:  BNZ   5E14
5E1E:  MOVLB  5
5E20:  BTFSC  xF6.7
5E22:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,45,0,2); 
5E24:  MOVLW  05
5E26:  MOVWF  xF7
5E28:  MOVLW  D6
5E2A:  MOVWF  xF6
5E2C:  MOVLW  32
5E2E:  MOVWF  xF8
5E30:  MOVLW  2D
5E32:  MOVWF  xF9
5E34:  CLRF   xFA
5E36:  MOVLW  02
5E38:  MOVWF  xFB
5E3A:  MOVLB  0
5E3C:  CALL   13CA
5E40:  MOVLB  5
....................       } 
....................       if(Opcion==1) 
5E42:  DECFSZ x71,W
5E44:  BRA    5ED0
....................       {strcpy(Menus.Letra,"SI"); 
5E46:  MOVLW  05
5E48:  MOVWF  FEA
5E4A:  MOVLW  D6
5E4C:  MOVWF  FE9
5E4E:  MOVFF  FF2,5F6
5E52:  BCF    FF2.7
5E54:  MOVLW  00
5E56:  MOVLB  0
5E58:  CALL   08CC
5E5C:  TBLRD*-
5E5E:  TBLRD*+
5E60:  MOVF   FF5,W
5E62:  MOVWF  FEE
5E64:  IORLW  00
5E66:  BNZ   5E5E
5E68:  MOVLB  5
5E6A:  BTFSC  xF6.7
5E6C:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,25,0,2); 
5E6E:  MOVLW  05
5E70:  MOVWF  xF7
5E72:  MOVLW  D6
5E74:  MOVWF  xF6
5E76:  MOVLW  32
5E78:  MOVWF  xF8
5E7A:  MOVLW  19
5E7C:  MOVWF  xF9
5E7E:  CLRF   xFA
5E80:  MOVLW  02
5E82:  MOVWF  xFB
5E84:  MOVLB  0
5E86:  CALL   13CA
....................       strcpy(Menus.Letra,"NO"); 
5E8A:  MOVLW  05
5E8C:  MOVWF  FEA
5E8E:  MOVLW  D6
5E90:  MOVWF  FE9
5E92:  MOVFF  FF2,5F6
5E96:  BCF    FF2.7
5E98:  MOVLW  00
5E9A:  CALL   08EA
5E9E:  TBLRD*-
5EA0:  TBLRD*+
5EA2:  MOVF   FF5,W
5EA4:  MOVWF  FEE
5EA6:  IORLW  00
5EA8:  BNZ   5EA0
5EAA:  MOVLB  5
5EAC:  BTFSC  xF6.7
5EAE:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,45,1,2); 
5EB0:  MOVLW  05
5EB2:  MOVWF  xF7
5EB4:  MOVLW  D6
5EB6:  MOVWF  xF6
5EB8:  MOVLW  32
5EBA:  MOVWF  xF8
5EBC:  MOVLW  2D
5EBE:  MOVWF  xF9
5EC0:  MOVLW  01
5EC2:  MOVWF  xFA
5EC4:  MOVLW  02
5EC6:  MOVWF  xFB
5EC8:  MOVLB  0
5ECA:  CALL   13CA
5ECE:  MOVLB  5
....................       }   
....................          
....................       if(UP)//Si oprime hacia arriba 
5ED0:  BSF    F92.5
5ED2:  BTFSS  F80.5
5ED4:  BRA    5EE0
....................       { 
....................          if(Opcion<2) 
5ED6:  MOVF   x71,W
5ED8:  SUBLW  01
5EDA:  BNC   5EDE
....................          { 
....................             Opcion++; 
5EDC:  INCF   x71,F
....................          } 
....................          visual=1; 
5EDE:  BSF    x65.3
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5EE0:  BSF    F96.0
5EE2:  BTFSS  F84.0
5EE4:  BRA    5EF0
....................       {   
....................          if(Opcion>1) 
5EE6:  MOVF   x71,W
5EE8:  SUBLW  01
5EEA:  BC    5EEE
....................          { 
....................             Opcion--; 
5EEC:  DECF   x71,F
....................          }   
....................          visual=1; 
5EEE:  BSF    x65.3
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
5EF0:  BSF    F96.1
5EF2:  BTFSS  F84.1
5EF4:  BRA    5F54
....................       {   
....................          if(Opcion==2) 
5EF6:  MOVF   x71,W
5EF8:  SUBLW  02
5EFA:  BNZ   5F2C
....................          { 
....................             Menu=1;glcd_fillScreen(OFF);Testerilizacion[0]=0;Testerilizacion[1]=0;Testerilizacion[2]=0;Testerilizacion[3]=0; 
5EFC:  MOVLW  01
5EFE:  MOVWF  x6A
5F00:  CLRF   xF7
5F02:  MOVLB  0
5F04:  CALL   0D98
5F08:  MOVLB  5
5F0A:  CLRF   x8E
5F0C:  CLRF   x8F
5F0E:  CLRF   x90
5F10:  CLRF   x91
....................             Resistencia_off; 
5F12:  BCF    F8B.0
5F14:  BCF    F94.0
....................             Resistencia2_off; 
5F16:  BCF    F8B.2
5F18:  BCF    F94.2
....................             Ventilador_off; 
5F1A:  BCF    F8B.1
5F1C:  BCF    F94.1
....................             Tpulso=0.0; 
5F1E:  CLRF   xB1
5F20:  CLRF   xB0
5F22:  CLRF   xAF
5F24:  CLRF   xAE
....................             Opcion=1; 
5F26:  MOVLW  01
5F28:  MOVWF  x71
....................          } 
....................          else 
5F2A:  BRA    5F54
....................          { 
....................             delay_ms(700);Menu=20;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5F2C:  MOVLW  04
5F2E:  MOVWF  xF6
5F30:  MOVLW  AF
5F32:  MOVWF  xFC
5F34:  MOVLB  0
5F36:  CALL   0CF8
5F3A:  MOVLB  5
5F3C:  DECFSZ xF6,F
5F3E:  BRA    5F30
5F40:  MOVLW  14
5F42:  MOVWF  x6A
5F44:  CLRF   xF7
5F46:  MOVLB  0
5F48:  CALL   0D98
5F4C:  MOVLW  01
5F4E:  MOVLB  5
5F50:  MOVWF  x71
5F52:  BSF    x65.3
....................          } 
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
5F54:  BSF    F96.2
5F56:  BTFSS  F84.2
5F58:  BRA    5F82
....................       { 
....................          delay_ms(700);Menu=20;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5F5A:  MOVLW  04
5F5C:  MOVWF  xF6
5F5E:  MOVLW  AF
5F60:  MOVWF  xFC
5F62:  MOVLB  0
5F64:  CALL   0CF8
5F68:  MOVLB  5
5F6A:  DECFSZ xF6,F
5F6C:  BRA    5F5E
5F6E:  MOVLW  14
5F70:  MOVWF  x6A
5F72:  CLRF   xF7
5F74:  MOVLB  0
5F76:  CALL   0D98
5F7A:  MOVLW  01
5F7C:  MOVLB  5
5F7E:  MOVWF  x71
5F80:  BSF    x65.3
....................       } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==100){ //Menu de Configuración de Parametros de Control 
5F82:  MOVF   x6A,W
5F84:  SUBLW  64
5F86:  BTFSS  FD8.2
5F88:  BRA    636A
....................        
....................       if(Opcion>6) 
5F8A:  MOVF   x71,W
5F8C:  SUBLW  06
5F8E:  BC    5F94
....................       {Opcion=1;} 
5F90:  MOVLW  01
5F92:  MOVWF  x71
....................       if(Opcion<1) 
5F94:  MOVF   x71,F
5F96:  BNZ   5F9C
....................       {Opcion=6;} 
5F98:  MOVLW  06
5F9A:  MOVWF  x71
....................        
....................          if(Opcion==1)    
5F9C:  DECFSZ x71,W
5F9E:  BRA    5FE4
....................             {strcpy(Menus.Letra,"Ganancia"); 
5FA0:  MOVLW  05
5FA2:  MOVWF  FEA
5FA4:  MOVLW  D6
5FA6:  MOVWF  FE9
5FA8:  MOVFF  FF2,5F6
5FAC:  BCF    FF2.7
5FAE:  MOVLW  00
5FB0:  MOVLB  0
5FB2:  CALL   0B62
5FB6:  TBLRD*-
5FB8:  TBLRD*+
5FBA:  MOVF   FF5,W
5FBC:  MOVWF  FEE
5FBE:  IORLW  00
5FC0:  BNZ   5FB8
5FC2:  MOVLB  5
5FC4:  BTFSC  xF6.7
5FC6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
5FC8:  MOVLW  05
5FCA:  MOVWF  xF7
5FCC:  MOVLW  D6
5FCE:  MOVWF  xF6
5FD0:  CLRF   xF8
5FD2:  CLRF   xF9
5FD4:  MOVLW  01
5FD6:  MOVWF  xFA
5FD8:  MOVWF  xFB
5FDA:  MOVLB  0
5FDC:  CALL   13CA
....................          else 
5FE0:  BRA    6024
5FE2:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ganancia"); 
5FE4:  MOVLW  05
5FE6:  MOVWF  FEA
5FE8:  MOVLW  D6
5FEA:  MOVWF  FE9
5FEC:  MOVFF  FF2,5F6
5FF0:  BCF    FF2.7
5FF2:  MOVLW  00
5FF4:  MOVLB  0
5FF6:  CALL   0B62
5FFA:  TBLRD*-
5FFC:  TBLRD*+
5FFE:  MOVF   FF5,W
6000:  MOVWF  FEE
6002:  IORLW  00
6004:  BNZ   5FFC
6006:  MOVLB  5
6008:  BTFSC  xF6.7
600A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);} 
600C:  MOVLW  05
600E:  MOVWF  xF7
6010:  MOVLW  D6
6012:  MOVWF  xF6
6014:  CLRF   xF8
6016:  CLRF   xF9
6018:  CLRF   xFA
601A:  MOVLW  01
601C:  MOVWF  xFB
601E:  MOVLB  0
6020:  CALL   13CA
....................           
....................          if(Opcion==2)    
6024:  MOVLB  5
6026:  MOVF   x71,W
6028:  SUBLW  02
602A:  BNZ   6072
....................             {strcpy(Menus.Letra,"Tciclo"); 
602C:  MOVLW  05
602E:  MOVWF  FEA
6030:  MOVLW  D6
6032:  MOVWF  FE9
6034:  MOVFF  FF2,5F6
6038:  BCF    FF2.7
603A:  MOVLW  00
603C:  MOVLB  0
603E:  CALL   0B86
6042:  TBLRD*-
6044:  TBLRD*+
6046:  MOVF   FF5,W
6048:  MOVWF  FEE
604A:  IORLW  00
604C:  BNZ   6044
604E:  MOVLB  5
6050:  BTFSC  xF6.7
6052:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,1,1);} 
6054:  MOVLW  05
6056:  MOVWF  xF7
6058:  MOVLW  D6
605A:  MOVWF  xF6
605C:  CLRF   xF8
605E:  MOVLW  0A
6060:  MOVWF  xF9
6062:  MOVLW  01
6064:  MOVWF  xFA
6066:  MOVWF  xFB
6068:  MOVLB  0
606A:  CALL   13CA
....................          else 
606E:  BRA    60B4
6070:  MOVLB  5
....................             {strcpy(Menus.Letra,"Tciclo"); 
6072:  MOVLW  05
6074:  MOVWF  FEA
6076:  MOVLW  D6
6078:  MOVWF  FE9
607A:  MOVFF  FF2,5F6
607E:  BCF    FF2.7
6080:  MOVLW  00
6082:  MOVLB  0
6084:  CALL   0B86
6088:  TBLRD*-
608A:  TBLRD*+
608C:  MOVF   FF5,W
608E:  MOVWF  FEE
6090:  IORLW  00
6092:  BNZ   608A
6094:  MOVLB  5
6096:  BTFSC  xF6.7
6098:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,10,0,1);} 
609A:  MOVLW  05
609C:  MOVWF  xF7
609E:  MOVLW  D6
60A0:  MOVWF  xF6
60A2:  CLRF   xF8
60A4:  MOVLW  0A
60A6:  MOVWF  xF9
60A8:  CLRF   xFA
60AA:  MOVLW  01
60AC:  MOVWF  xFB
60AE:  MOVLB  0
60B0:  CALL   13CA
....................              
....................          if(Opcion==3)    
60B4:  MOVLB  5
60B6:  MOVF   x71,W
60B8:  SUBLW  03
60BA:  BNZ   6102
....................             {strcpy(Menus.Letra,"Ajuste +"); 
60BC:  MOVLW  05
60BE:  MOVWF  FEA
60C0:  MOVLW  D6
60C2:  MOVWF  FE9
60C4:  MOVFF  FF2,5F6
60C8:  BCF    FF2.7
60CA:  MOVLW  00
60CC:  MOVLB  0
60CE:  CALL   0BA8
60D2:  TBLRD*-
60D4:  TBLRD*+
60D6:  MOVF   FF5,W
60D8:  MOVWF  FEE
60DA:  IORLW  00
60DC:  BNZ   60D4
60DE:  MOVLB  5
60E0:  BTFSC  xF6.7
60E2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
60E4:  MOVLW  05
60E6:  MOVWF  xF7
60E8:  MOVLW  D6
60EA:  MOVWF  xF6
60EC:  CLRF   xF8
60EE:  MOVLW  14
60F0:  MOVWF  xF9
60F2:  MOVLW  01
60F4:  MOVWF  xFA
60F6:  MOVWF  xFB
60F8:  MOVLB  0
60FA:  CALL   13CA
....................          else 
60FE:  BRA    6144
6100:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste +"); 
6102:  MOVLW  05
6104:  MOVWF  FEA
6106:  MOVLW  D6
6108:  MOVWF  FE9
610A:  MOVFF  FF2,5F6
610E:  BCF    FF2.7
6110:  MOVLW  00
6112:  MOVLB  0
6114:  CALL   0BA8
6118:  TBLRD*-
611A:  TBLRD*+
611C:  MOVF   FF5,W
611E:  MOVWF  FEE
6120:  IORLW  00
6122:  BNZ   611A
6124:  MOVLB  5
6126:  BTFSC  xF6.7
6128:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);}    
612A:  MOVLW  05
612C:  MOVWF  xF7
612E:  MOVLW  D6
6130:  MOVWF  xF6
6132:  CLRF   xF8
6134:  MOVLW  14
6136:  MOVWF  xF9
6138:  CLRF   xFA
613A:  MOVLW  01
613C:  MOVWF  xFB
613E:  MOVLB  0
6140:  CALL   13CA
....................                          
....................          if(Opcion==4)    
6144:  MOVLB  5
6146:  MOVF   x71,W
6148:  SUBLW  04
614A:  BNZ   6192
....................             {strcpy(Menus.Letra,"Ajuste -"); 
614C:  MOVLW  05
614E:  MOVWF  FEA
6150:  MOVLW  D6
6152:  MOVWF  FE9
6154:  MOVFF  FF2,5F6
6158:  BCF    FF2.7
615A:  MOVLW  00
615C:  MOVLB  0
615E:  CALL   0BCC
6162:  TBLRD*-
6164:  TBLRD*+
6166:  MOVF   FF5,W
6168:  MOVWF  FEE
616A:  IORLW  00
616C:  BNZ   6164
616E:  MOVLB  5
6170:  BTFSC  xF6.7
6172:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
6174:  MOVLW  05
6176:  MOVWF  xF7
6178:  MOVLW  D6
617A:  MOVWF  xF6
617C:  CLRF   xF8
617E:  MOVLW  1E
6180:  MOVWF  xF9
6182:  MOVLW  01
6184:  MOVWF  xFA
6186:  MOVWF  xFB
6188:  MOVLB  0
618A:  CALL   13CA
....................          else 
618E:  BRA    61D4
6190:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste -"); 
6192:  MOVLW  05
6194:  MOVWF  FEA
6196:  MOVLW  D6
6198:  MOVWF  FE9
619A:  MOVFF  FF2,5F6
619E:  BCF    FF2.7
61A0:  MOVLW  00
61A2:  MOVLB  0
61A4:  CALL   0BCC
61A8:  TBLRD*-
61AA:  TBLRD*+
61AC:  MOVF   FF5,W
61AE:  MOVWF  FEE
61B0:  IORLW  00
61B2:  BNZ   61AA
61B4:  MOVLB  5
61B6:  BTFSC  xF6.7
61B8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);}      
61BA:  MOVLW  05
61BC:  MOVWF  xF7
61BE:  MOVLW  D6
61C0:  MOVWF  xF6
61C2:  CLRF   xF8
61C4:  MOVLW  1E
61C6:  MOVWF  xF9
61C8:  CLRF   xFA
61CA:  MOVLW  01
61CC:  MOVWF  xFB
61CE:  MOVLB  0
61D0:  CALL   13CA
....................              
....................          if(Opcion==5)    
61D4:  MOVLB  5
61D6:  MOVF   x71,W
61D8:  SUBLW  05
61DA:  BNZ   6222
....................             {strcpy(Menus.Letra,"Media Movil"); 
61DC:  MOVLW  05
61DE:  MOVWF  FEA
61E0:  MOVLW  D6
61E2:  MOVWF  FE9
61E4:  MOVFF  FF2,5F6
61E8:  BCF    FF2.7
61EA:  MOVLW  00
61EC:  MOVLB  0
61EE:  CALL   0BF0
61F2:  TBLRD*-
61F4:  TBLRD*+
61F6:  MOVF   FF5,W
61F8:  MOVWF  FEE
61FA:  IORLW  00
61FC:  BNZ   61F4
61FE:  MOVLB  5
6200:  BTFSC  xF6.7
6202:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
6204:  MOVLW  05
6206:  MOVWF  xF7
6208:  MOVLW  D6
620A:  MOVWF  xF6
620C:  CLRF   xF8
620E:  MOVLW  28
6210:  MOVWF  xF9
6212:  MOVLW  01
6214:  MOVWF  xFA
6216:  MOVWF  xFB
6218:  MOVLB  0
621A:  CALL   13CA
....................          else 
621E:  BRA    6264
6220:  MOVLB  5
....................             {strcpy(Menus.Letra,"Media Movil"); 
6222:  MOVLW  05
6224:  MOVWF  FEA
6226:  MOVLW  D6
6228:  MOVWF  FE9
622A:  MOVFF  FF2,5F6
622E:  BCF    FF2.7
6230:  MOVLW  00
6232:  MOVLB  0
6234:  CALL   0BF0
6238:  TBLRD*-
623A:  TBLRD*+
623C:  MOVF   FF5,W
623E:  MOVWF  FEE
6240:  IORLW  00
6242:  BNZ   623A
6244:  MOVLB  5
6246:  BTFSC  xF6.7
6248:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}      
624A:  MOVLW  05
624C:  MOVWF  xF7
624E:  MOVLW  D6
6250:  MOVWF  xF6
6252:  CLRF   xF8
6254:  MOVLW  28
6256:  MOVWF  xF9
6258:  CLRF   xFA
625A:  MOVLW  01
625C:  MOVWF  xFB
625E:  MOVLB  0
6260:  CALL   13CA
....................              
....................          if(Opcion==6)    
6264:  MOVLB  5
6266:  MOVF   x71,W
6268:  SUBLW  06
626A:  BNZ   62B2
....................             {strcpy(Menus.Letra,"Coeficiente"); 
626C:  MOVLW  05
626E:  MOVWF  FEA
6270:  MOVLW  D6
6272:  MOVWF  FE9
6274:  MOVFF  FF2,5F6
6278:  BCF    FF2.7
627A:  MOVLW  00
627C:  MOVLB  0
627E:  CALL   0C16
6282:  TBLRD*-
6284:  TBLRD*+
6286:  MOVF   FF5,W
6288:  MOVWF  FEE
628A:  IORLW  00
628C:  BNZ   6284
628E:  MOVLB  5
6290:  BTFSC  xF6.7
6292:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
6294:  MOVLW  05
6296:  MOVWF  xF7
6298:  MOVLW  D6
629A:  MOVWF  xF6
629C:  CLRF   xF8
629E:  MOVLW  32
62A0:  MOVWF  xF9
62A2:  MOVLW  01
62A4:  MOVWF  xFA
62A6:  MOVWF  xFB
62A8:  MOVLB  0
62AA:  CALL   13CA
....................          else 
62AE:  BRA    62F4
62B0:  MOVLB  5
....................             {strcpy(Menus.Letra,"Coeficiente"); 
62B2:  MOVLW  05
62B4:  MOVWF  FEA
62B6:  MOVLW  D6
62B8:  MOVWF  FE9
62BA:  MOVFF  FF2,5F6
62BE:  BCF    FF2.7
62C0:  MOVLW  00
62C2:  MOVLB  0
62C4:  CALL   0C16
62C8:  TBLRD*-
62CA:  TBLRD*+
62CC:  MOVF   FF5,W
62CE:  MOVWF  FEE
62D0:  IORLW  00
62D2:  BNZ   62CA
62D4:  MOVLB  5
62D6:  BTFSC  xF6.7
62D8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}         
62DA:  MOVLW  05
62DC:  MOVWF  xF7
62DE:  MOVLW  D6
62E0:  MOVWF  xF6
62E2:  CLRF   xF8
62E4:  MOVLW  32
62E6:  MOVWF  xF9
62E8:  CLRF   xFA
62EA:  MOVLW  01
62EC:  MOVWF  xFB
62EE:  MOVLB  0
62F0:  CALL   13CA
....................        
....................       if(UP)//Si oprime hacia arriba 
62F4:  BSF    F92.5
62F6:  BTFSS  F80.5
62F8:  BRA    6314
....................          {  if(Flanco == 0)  
62FA:  MOVLB  5
62FC:  BTFSC  x65.0
62FE:  BRA    6312
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
6300:  BSF    x65.0
6302:  MOVLW  1E
6304:  MOVWF  xFC
6306:  MOVLB  0
6308:  CALL   0CF8
630C:  MOVLB  5
630E:  DECF   x71,F
6310:  BSF    x65.3
....................                } 
....................          } 
....................             else 
6312:  BRA    6318
....................                {Flanco = 0;} 
6314:  MOVLB  5
6316:  BCF    x65.0
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
6318:  BSF    F96.0
631A:  BTFSS  F84.0
631C:  BRA    6336
....................          {  if(Flanco2 == 0)  
631E:  BTFSC  x65.2
6320:  BRA    6334
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
6322:  BSF    x65.2
6324:  MOVLW  1E
6326:  MOVWF  xFC
6328:  MOVLB  0
632A:  CALL   0CF8
632E:  MOVLB  5
6330:  INCF   x71,F
6332:  BSF    x65.3
....................                }      
....................          } 
....................             else 
6334:  BRA    6338
....................                {Flanco2 = 0;}   
6336:  BCF    x65.2
....................                 
....................        if(RIGHT)//Si oprime SET 
6338:  BSF    F96.1
633A:  BTFSS  F84.1
633C:  BRA    6368
....................          {  if(Flanco1 == 0)  
633E:  BTFSC  x65.1
6340:  BRA    6366
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
6342:  BSF    x65.1
6344:  MOVLW  1E
6346:  MOVWF  xFC
6348:  MOVLB  0
634A:  CALL   0CF8
634E:  MOVLW  64
6350:  MOVLB  5
6352:  ADDWF  x71,W
6354:  MOVWF  x6A
6356:  MOVLW  01
6358:  MOVWF  x71
635A:  CLRF   xF7
635C:  MOVLB  0
635E:  CALL   0D98
6362:  MOVLB  5
6364:  BSF    x65.3
....................                } 
....................          } 
....................             else 
6366:  BRA    636A
....................                {Flanco1 = 0;}   
6368:  BCF    x65.1
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==101){ // Menu de Ajuste de Ganancia 
636A:  MOVF   x6A,W
636C:  SUBLW  65
636E:  BTFSS  FD8.2
6370:  BRA    65B4
....................        
....................       if(Ganancia>40) 
6372:  CLRF   xF9
6374:  CLRF   xF8
6376:  MOVLW  20
6378:  MOVWF  xF7
637A:  MOVLW  84
637C:  MOVWF  xF6
637E:  MOVFF  5C5,5FD
6382:  MOVFF  5C4,5FC
6386:  MOVFF  5C3,5FB
638A:  MOVFF  5C2,5FA
638E:  MOVLB  0
6390:  CALL   267E
6394:  BNC   63A2
....................       { 
....................          Ganancia=1; 
6396:  MOVLB  5
6398:  CLRF   xC5
639A:  CLRF   xC4
639C:  CLRF   xC3
639E:  MOVLW  7F
63A0:  MOVWF  xC2
....................       } 
....................        
....................       if(visual==1) 
63A2:  MOVLB  5
63A4:  BTFSS  x65.3
63A6:  BRA    6424
....................       { 
....................          glcd_fillScreen(OFF); 
63A8:  CLRF   xF7
63AA:  MOVLB  0
63AC:  CALL   0D98
....................          strcpy(Menus.Letra,"Ganancia"); 
63B0:  MOVLW  05
63B2:  MOVWF  FEA
63B4:  MOVLW  D6
63B6:  MOVWF  FE9
63B8:  MOVFF  FF2,5F6
63BC:  BCF    FF2.7
63BE:  MOVLW  00
63C0:  CALL   0B62
63C4:  TBLRD*-
63C6:  TBLRD*+
63C8:  MOVF   FF5,W
63CA:  MOVWF  FEE
63CC:  IORLW  00
63CE:  BNZ   63C6
63D0:  MOVLB  5
63D2:  BTFSC  xF6.7
63D4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
63D6:  MOVLW  05
63D8:  MOVWF  xF7
63DA:  MOVLW  D6
63DC:  MOVWF  xF6
63DE:  CLRF   xF8
63E0:  CLRF   xF9
63E2:  MOVLW  01
63E4:  MOVWF  xFA
63E6:  MOVLW  02
63E8:  MOVWF  xFB
63EA:  MOVLB  0
63EC:  CALL   13CA
....................           
....................          displayTemperatura(Ganancia,30,30,0,3); 
63F0:  MOVFF  5C5,5F9
63F4:  MOVFF  5C4,5F8
63F8:  MOVFF  5C3,5F7
63FC:  MOVFF  5C2,5F6
6400:  CALL   2766
6404:  MOVFF  01,5F6
6408:  MOVFF  01,5F7
640C:  MOVLW  1E
640E:  MOVLB  5
6410:  MOVWF  xF8
6412:  MOVWF  xF9
6414:  CLRF   xFA
6416:  MOVLW  03
6418:  MOVWF  xFB
641A:  MOVLB  0
641C:  CALL   2254
....................           
....................          visual=0; 
6420:  MOVLB  5
6422:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
6424:  BSF    F92.5
6426:  BTFSS  F80.5
6428:  BRA    64B4
....................          {   
....................             if(Ganancia>40) 
642A:  CLRF   xF9
642C:  CLRF   xF8
642E:  MOVLW  20
6430:  MOVWF  xF7
6432:  MOVLW  84
6434:  MOVWF  xF6
6436:  MOVFF  5C5,5FD
643A:  MOVFF  5C4,5FC
643E:  MOVFF  5C3,5FB
6442:  MOVFF  5C2,5FA
6446:  MOVLB  0
6448:  CALL   267E
644C:  BNC   646E
....................             { 
....................                Ganancia=40;delay_ms(100);visual=1; 
644E:  MOVLB  5
6450:  CLRF   xC5
6452:  CLRF   xC4
6454:  MOVLW  20
6456:  MOVWF  xC3
6458:  MOVLW  84
645A:  MOVWF  xC2
645C:  MOVLW  64
645E:  MOVWF  xFC
6460:  MOVLB  0
6462:  CALL   0CF8
6466:  MOVLB  5
6468:  BSF    x65.3
....................             } 
....................             else 
646A:  BRA    64B4
646C:  MOVLB  0
....................             { 
....................                delay_ms(30);Ganancia+=1.0;visual=1; 
646E:  MOVLW  1E
6470:  MOVLB  5
6472:  MOVWF  xFC
6474:  MOVLB  0
6476:  CALL   0CF8
647A:  BCF    FD8.1
647C:  MOVFF  5C5,5FE
6480:  MOVFF  5C4,5FD
6484:  MOVFF  5C3,5FC
6488:  MOVFF  5C2,5FB
648C:  MOVLB  6
648E:  CLRF   x02
6490:  CLRF   x01
6492:  CLRF   x00
6494:  MOVLW  7F
6496:  MOVLB  5
6498:  MOVWF  xFF
649A:  MOVLB  0
649C:  CALL   18A8
64A0:  MOVFF  03,5C5
64A4:  MOVFF  02,5C4
64A8:  MOVFF  01,5C3
64AC:  MOVFF  00,5C2
64B0:  MOVLB  5
64B2:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
64B4:  BSF    F96.0
64B6:  BTFSS  F84.0
64B8:  BRA    6522
....................          {   
....................             if(Ganancia>1) 
64BA:  CLRF   xF9
64BC:  CLRF   xF8
64BE:  CLRF   xF7
64C0:  MOVLW  7F
64C2:  MOVWF  xF6
64C4:  MOVFF  5C5,5FD
64C8:  MOVFF  5C4,5FC
64CC:  MOVFF  5C3,5FB
64D0:  MOVFF  5C2,5FA
64D4:  MOVLB  0
64D6:  CALL   267E
64DA:  BNC   6524
....................             { 
....................                delay_ms(30);Ganancia-=1.0;visual=1;      
64DC:  MOVLW  1E
64DE:  MOVLB  5
64E0:  MOVWF  xFC
64E2:  MOVLB  0
64E4:  CALL   0CF8
64E8:  BSF    FD8.1
64EA:  MOVFF  5C5,5FE
64EE:  MOVFF  5C4,5FD
64F2:  MOVFF  5C3,5FC
64F6:  MOVFF  5C2,5FB
64FA:  MOVLB  6
64FC:  CLRF   x02
64FE:  CLRF   x01
6500:  CLRF   x00
6502:  MOVLW  7F
6504:  MOVLB  5
6506:  MOVWF  xFF
6508:  MOVLB  0
650A:  CALL   18A8
650E:  MOVFF  03,5C5
6512:  MOVFF  02,5C4
6516:  MOVFF  01,5C3
651A:  MOVFF  00,5C2
651E:  MOVLB  5
6520:  BSF    x65.3
6522:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
6524:  BSF    F96.1
6526:  BTFSS  F84.1
6528:  BRA    653C
....................          {   
....................             delay_ms(30);visual=1; 
652A:  MOVLW  1E
652C:  MOVLB  5
652E:  MOVWF  xFC
6530:  MOVLB  0
6532:  CALL   0CF8
6536:  MOVLB  5
6538:  BSF    x65.3
653A:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
653C:  BSF    F96.2
653E:  BTFSS  F84.2
6540:  BRA    65B2
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6542:  MOVLW  04
6544:  MOVLB  5
6546:  MOVWF  xF6
6548:  MOVLW  AF
654A:  MOVWF  xFC
654C:  MOVLB  0
654E:  CALL   0CF8
6552:  MOVLB  5
6554:  DECFSZ xF6,F
6556:  BRA    6548
6558:  MOVLW  64
655A:  MOVWF  x6A
655C:  CLRF   xF7
655E:  MOVLB  0
6560:  CALL   0D98
6564:  MOVLW  01
6566:  MOVLB  5
6568:  MOVWF  x71
656A:  BSF    x65.3
....................             write_eeprom(20,(int8)Ganancia); 
656C:  MOVFF  5C5,5F9
6570:  MOVFF  5C4,5F8
6574:  MOVFF  5C3,5F7
6578:  MOVFF  5C2,5F6
657C:  MOVLB  0
657E:  CALL   2766
6582:  MOVFF  01,5F6
6586:  MOVLW  14
6588:  MOVWF  FA9
658A:  MOVFF  5F6,FA8
658E:  BCF    FA6.6
6590:  BCF    FA6.7
6592:  BSF    FA6.2
6594:  MOVF   FF2,W
6596:  MOVWF  00
6598:  BCF    FF2.7
659A:  MOVLB  F
659C:  MOVLW  55
659E:  MOVWF  FA7
65A0:  MOVLW  AA
65A2:  MOVWF  FA7
65A4:  BSF    FA6.1
65A6:  BTFSC  FA6.1
65A8:  BRA    65A6
65AA:  BCF    FA6.2
65AC:  MOVF   00,W
65AE:  IORWF  FF2,F
65B0:  MOVLB  0
65B2:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==102){ // Menu de Ajuste de Ganancia2 
65B4:  MOVF   x6A,W
65B6:  SUBLW  66
65B8:  BTFSS  FD8.2
65BA:  BRA    6800
....................        
....................       if(Tciclo>40) 
65BC:  CLRF   xF9
65BE:  CLRF   xF8
65C0:  MOVLW  20
65C2:  MOVWF  xF7
65C4:  MOVLW  84
65C6:  MOVWF  xF6
65C8:  MOVFF  5AD,5FD
65CC:  MOVFF  5AC,5FC
65D0:  MOVFF  5AB,5FB
65D4:  MOVFF  5AA,5FA
65D8:  MOVLB  0
65DA:  CALL   267E
65DE:  BNC   65EE
....................       { 
....................          Tciclo=40; 
65E0:  MOVLB  5
65E2:  CLRF   xAD
65E4:  CLRF   xAC
65E6:  MOVLW  20
65E8:  MOVWF  xAB
65EA:  MOVLW  84
65EC:  MOVWF  xAA
....................       } 
....................        
....................       if(visual==1) 
65EE:  MOVLB  5
65F0:  BTFSS  x65.3
65F2:  BRA    6670
....................       { 
....................          glcd_fillScreen(OFF); 
65F4:  CLRF   xF7
65F6:  MOVLB  0
65F8:  CALL   0D98
....................          strcpy(Menus.Letra,"Tciclo"); 
65FC:  MOVLW  05
65FE:  MOVWF  FEA
6600:  MOVLW  D6
6602:  MOVWF  FE9
6604:  MOVFF  FF2,5F6
6608:  BCF    FF2.7
660A:  MOVLW  00
660C:  CALL   0B86
6610:  TBLRD*-
6612:  TBLRD*+
6614:  MOVF   FF5,W
6616:  MOVWF  FEE
6618:  IORLW  00
661A:  BNZ   6612
661C:  MOVLB  5
661E:  BTFSC  xF6.7
6620:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
6622:  MOVLW  05
6624:  MOVWF  xF7
6626:  MOVLW  D6
6628:  MOVWF  xF6
662A:  CLRF   xF8
662C:  CLRF   xF9
662E:  MOVLW  01
6630:  MOVWF  xFA
6632:  MOVLW  02
6634:  MOVWF  xFB
6636:  MOVLB  0
6638:  CALL   13CA
....................           
....................          displayTemperatura(Tciclo,30,30,0,3); 
663C:  MOVFF  5AD,5F9
6640:  MOVFF  5AC,5F8
6644:  MOVFF  5AB,5F7
6648:  MOVFF  5AA,5F6
664C:  CALL   2766
6650:  MOVFF  01,5F6
6654:  MOVFF  01,5F7
6658:  MOVLW  1E
665A:  MOVLB  5
665C:  MOVWF  xF8
665E:  MOVWF  xF9
6660:  CLRF   xFA
6662:  MOVLW  03
6664:  MOVWF  xFB
6666:  MOVLB  0
6668:  CALL   2254
....................           
....................          visual=0; 
666C:  MOVLB  5
666E:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
6670:  BSF    F92.5
6672:  BTFSS  F80.5
6674:  BRA    6700
....................          {   
....................             if(Tciclo>40) 
6676:  CLRF   xF9
6678:  CLRF   xF8
667A:  MOVLW  20
667C:  MOVWF  xF7
667E:  MOVLW  84
6680:  MOVWF  xF6
6682:  MOVFF  5AD,5FD
6686:  MOVFF  5AC,5FC
668A:  MOVFF  5AB,5FB
668E:  MOVFF  5AA,5FA
6692:  MOVLB  0
6694:  CALL   267E
6698:  BNC   66BA
....................             { 
....................                Tciclo=40;delay_ms(100);visual=1; 
669A:  MOVLB  5
669C:  CLRF   xAD
669E:  CLRF   xAC
66A0:  MOVLW  20
66A2:  MOVWF  xAB
66A4:  MOVLW  84
66A6:  MOVWF  xAA
66A8:  MOVLW  64
66AA:  MOVWF  xFC
66AC:  MOVLB  0
66AE:  CALL   0CF8
66B2:  MOVLB  5
66B4:  BSF    x65.3
....................             } 
....................             else 
66B6:  BRA    6700
66B8:  MOVLB  0
....................             { 
....................                delay_ms(30);Tciclo+=1.0;visual=1; 
66BA:  MOVLW  1E
66BC:  MOVLB  5
66BE:  MOVWF  xFC
66C0:  MOVLB  0
66C2:  CALL   0CF8
66C6:  BCF    FD8.1
66C8:  MOVFF  5AD,5FE
66CC:  MOVFF  5AC,5FD
66D0:  MOVFF  5AB,5FC
66D4:  MOVFF  5AA,5FB
66D8:  MOVLB  6
66DA:  CLRF   x02
66DC:  CLRF   x01
66DE:  CLRF   x00
66E0:  MOVLW  7F
66E2:  MOVLB  5
66E4:  MOVWF  xFF
66E6:  MOVLB  0
66E8:  CALL   18A8
66EC:  MOVFF  03,5AD
66F0:  MOVFF  02,5AC
66F4:  MOVFF  01,5AB
66F8:  MOVFF  00,5AA
66FC:  MOVLB  5
66FE:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
6700:  BSF    F96.0
6702:  BTFSS  F84.0
6704:  BRA    676E
....................          {   
....................             if(Tciclo>1) 
6706:  CLRF   xF9
6708:  CLRF   xF8
670A:  CLRF   xF7
670C:  MOVLW  7F
670E:  MOVWF  xF6
6710:  MOVFF  5AD,5FD
6714:  MOVFF  5AC,5FC
6718:  MOVFF  5AB,5FB
671C:  MOVFF  5AA,5FA
6720:  MOVLB  0
6722:  CALL   267E
6726:  BNC   6770
....................             { 
....................                delay_ms(30);Tciclo-=1.0;visual=1;      
6728:  MOVLW  1E
672A:  MOVLB  5
672C:  MOVWF  xFC
672E:  MOVLB  0
6730:  CALL   0CF8
6734:  BSF    FD8.1
6736:  MOVFF  5AD,5FE
673A:  MOVFF  5AC,5FD
673E:  MOVFF  5AB,5FC
6742:  MOVFF  5AA,5FB
6746:  MOVLB  6
6748:  CLRF   x02
674A:  CLRF   x01
674C:  CLRF   x00
674E:  MOVLW  7F
6750:  MOVLB  5
6752:  MOVWF  xFF
6754:  MOVLB  0
6756:  CALL   18A8
675A:  MOVFF  03,5AD
675E:  MOVFF  02,5AC
6762:  MOVFF  01,5AB
6766:  MOVFF  00,5AA
676A:  MOVLB  5
676C:  BSF    x65.3
676E:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
6770:  BSF    F96.1
6772:  BTFSS  F84.1
6774:  BRA    6788
....................          {   
....................             delay_ms(30);visual=1; 
6776:  MOVLW  1E
6778:  MOVLB  5
677A:  MOVWF  xFC
677C:  MOVLB  0
677E:  CALL   0CF8
6782:  MOVLB  5
6784:  BSF    x65.3
6786:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
6788:  BSF    F96.2
678A:  BTFSS  F84.2
678C:  BRA    67FE
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
678E:  MOVLW  04
6790:  MOVLB  5
6792:  MOVWF  xF6
6794:  MOVLW  AF
6796:  MOVWF  xFC
6798:  MOVLB  0
679A:  CALL   0CF8
679E:  MOVLB  5
67A0:  DECFSZ xF6,F
67A2:  BRA    6794
67A4:  MOVLW  64
67A6:  MOVWF  x6A
67A8:  CLRF   xF7
67AA:  MOVLB  0
67AC:  CALL   0D98
67B0:  MOVLW  01
67B2:  MOVLB  5
67B4:  MOVWF  x71
67B6:  BSF    x65.3
....................             write_eeprom(30,(int8)Tciclo); 
67B8:  MOVFF  5AD,5F9
67BC:  MOVFF  5AC,5F8
67C0:  MOVFF  5AB,5F7
67C4:  MOVFF  5AA,5F6
67C8:  MOVLB  0
67CA:  CALL   2766
67CE:  MOVFF  01,5F6
67D2:  MOVLW  1E
67D4:  MOVWF  FA9
67D6:  MOVFF  5F6,FA8
67DA:  BCF    FA6.6
67DC:  BCF    FA6.7
67DE:  BSF    FA6.2
67E0:  MOVF   FF2,W
67E2:  MOVWF  00
67E4:  BCF    FF2.7
67E6:  MOVLB  F
67E8:  MOVLW  55
67EA:  MOVWF  FA7
67EC:  MOVLW  AA
67EE:  MOVWF  FA7
67F0:  BSF    FA6.1
67F2:  BTFSC  FA6.1
67F4:  BRA    67F2
67F6:  BCF    FA6.2
67F8:  MOVF   00,W
67FA:  IORWF  FF2,F
67FC:  MOVLB  0
67FE:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==103){ // Menu de Ajuste de Ajuste 
6800:  MOVF   x6A,W
6802:  SUBLW  67
6804:  BTFSS  FD8.2
6806:  BRA    69C2
....................        
....................       if(Ajuste>100) 
6808:  MOVF   x60,W
680A:  SUBLW  64
680C:  BC    6810
....................       { 
....................          Ajuste=0; 
680E:  CLRF   x60
....................       } 
....................        
....................       if(visual==1) 
6810:  BTFSS  x65.3
6812:  BRA    6878
....................       { 
....................          glcd_fillScreen(OFF); 
6814:  CLRF   xF7
6816:  MOVLB  0
6818:  CALL   0D98
....................          strcpy(Menus.Letra,"Ajuste"); 
681C:  MOVLW  05
681E:  MOVWF  FEA
6820:  MOVLW  D6
6822:  MOVWF  FE9
6824:  MOVFF  FF2,5F6
6828:  BCF    FF2.7
682A:  MOVLW  00
682C:  CALL   0C3C
6830:  TBLRD*-
6832:  TBLRD*+
6834:  MOVF   FF5,W
6836:  MOVWF  FEE
6838:  IORLW  00
683A:  BNZ   6832
683C:  MOVLB  5
683E:  BTFSC  xF6.7
6840:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
6842:  MOVLW  05
6844:  MOVWF  xF7
6846:  MOVLW  D6
6848:  MOVWF  xF6
684A:  CLRF   xF8
684C:  CLRF   xF9
684E:  MOVLW  01
6850:  MOVWF  xFA
6852:  MOVLW  02
6854:  MOVWF  xFB
6856:  MOVLB  0
6858:  CALL   13CA
....................           
....................          displayTemperatura(Ajuste,30,30,0,3); 
685C:  MOVFF  560,5F7
6860:  MOVLW  1E
6862:  MOVLB  5
6864:  MOVWF  xF8
6866:  MOVWF  xF9
6868:  CLRF   xFA
686A:  MOVLW  03
686C:  MOVWF  xFB
686E:  MOVLB  0
6870:  CALL   2254
....................           
....................          visual=0; 
6874:  MOVLB  5
6876:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
6878:  BSF    F92.5
687A:  BTFSS  F80.5
687C:  BRA    68F0
....................          {   
....................             if(Ajuste>100) 
687E:  MOVF   x60,W
6880:  SUBLW  64
6882:  BC    6896
....................             { 
....................                Ajuste=100;delay_ms(100);visual=1; 
6884:  MOVLW  64
6886:  MOVWF  x60
6888:  MOVWF  xFC
688A:  MOVLB  0
688C:  CALL   0CF8
6890:  MOVLB  5
6892:  BSF    x65.3
....................             } 
....................             else 
6894:  BRA    68F0
....................             { 
....................                delay_ms(30);Ajuste+=1.0;visual=1; 
6896:  MOVLW  1E
6898:  MOVWF  xFC
689A:  MOVLB  0
689C:  CALL   0CF8
68A0:  MOVLB  5
68A2:  CLRF   xFD
68A4:  MOVFF  560,5FC
68A8:  MOVLB  0
68AA:  CALL   0D22
68AE:  BCF    FD8.1
68B0:  MOVFF  03,5FE
68B4:  MOVFF  02,5FD
68B8:  MOVFF  01,5FC
68BC:  MOVFF  00,5FB
68C0:  MOVLB  6
68C2:  CLRF   x02
68C4:  CLRF   x01
68C6:  CLRF   x00
68C8:  MOVLW  7F
68CA:  MOVLB  5
68CC:  MOVWF  xFF
68CE:  MOVLB  0
68D0:  CALL   18A8
68D4:  MOVFF  03,5F9
68D8:  MOVFF  02,5F8
68DC:  MOVFF  01,5F7
68E0:  MOVFF  00,5F6
68E4:  CALL   2766
68E8:  MOVFF  01,560
68EC:  MOVLB  5
68EE:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
68F0:  BSF    F96.0
68F2:  BTFSS  F84.0
68F4:  BRA    6954
....................          {   
....................             if(Ajuste>0) 
68F6:  MOVF   x60,F
68F8:  BZ    6954
....................             { 
....................                delay_ms(30);Ajuste-=1.0;visual=1;      
68FA:  MOVLW  1E
68FC:  MOVWF  xFC
68FE:  MOVLB  0
6900:  CALL   0CF8
6904:  MOVLB  5
6906:  CLRF   xFD
6908:  MOVFF  560,5FC
690C:  MOVLB  0
690E:  CALL   0D22
6912:  BSF    FD8.1
6914:  MOVFF  03,5FE
6918:  MOVFF  02,5FD
691C:  MOVFF  01,5FC
6920:  MOVFF  00,5FB
6924:  MOVLB  6
6926:  CLRF   x02
6928:  CLRF   x01
692A:  CLRF   x00
692C:  MOVLW  7F
692E:  MOVLB  5
6930:  MOVWF  xFF
6932:  MOVLB  0
6934:  CALL   18A8
6938:  MOVFF  03,5F9
693C:  MOVFF  02,5F8
6940:  MOVFF  01,5F7
6944:  MOVFF  00,5F6
6948:  CALL   2766
694C:  MOVFF  01,560
6950:  MOVLB  5
6952:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
6954:  BSF    F96.1
6956:  BTFSS  F84.1
6958:  BRA    6968
....................          {   
....................             delay_ms(30);visual=1; 
695A:  MOVLW  1E
695C:  MOVWF  xFC
695E:  MOVLB  0
6960:  CALL   0CF8
6964:  MOVLB  5
6966:  BSF    x65.3
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
6968:  BSF    F96.2
696A:  BTFSS  F84.2
696C:  BRA    69C2
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
696E:  MOVLW  04
6970:  MOVWF  xF6
6972:  MOVLW  AF
6974:  MOVWF  xFC
6976:  MOVLB  0
6978:  CALL   0CF8
697C:  MOVLB  5
697E:  DECFSZ xF6,F
6980:  BRA    6972
6982:  MOVLW  64
6984:  MOVWF  x6A
6986:  CLRF   xF7
6988:  MOVLB  0
698A:  CALL   0D98
698E:  MOVLW  01
6990:  MOVLB  5
6992:  MOVWF  x71
6994:  BSF    x65.3
....................             write_eeprom(40,Ajuste); 
6996:  MOVLW  28
6998:  MOVWF  FA9
699A:  MOVFF  560,FA8
699E:  BCF    FA6.6
69A0:  BCF    FA6.7
69A2:  BSF    FA6.2
69A4:  MOVF   FF2,W
69A6:  MOVWF  00
69A8:  BCF    FF2.7
69AA:  MOVLB  F
69AC:  MOVLW  55
69AE:  MOVWF  FA7
69B0:  MOVLW  AA
69B2:  MOVWF  FA7
69B4:  BSF    FA6.1
69B6:  BTFSC  FA6.1
69B8:  BRA    69B6
69BA:  BCF    FA6.2
69BC:  MOVF   00,W
69BE:  IORWF  FF2,F
69C0:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==104){ // Menu de Ajuste de Ajusten 
69C2:  MOVF   x6A,W
69C4:  SUBLW  68
69C6:  BTFSS  FD8.2
69C8:  BRA    6B84
....................        
....................       if(Ajusten>100) 
69CA:  MOVF   x61,W
69CC:  SUBLW  64
69CE:  BC    69D2
....................       { 
....................          Ajusten=0; 
69D0:  CLRF   x61
....................       } 
....................        
....................       if(visual==1) 
69D2:  BTFSS  x65.3
69D4:  BRA    6A3A
....................       { 
....................          glcd_fillScreen(OFF); 
69D6:  CLRF   xF7
69D8:  MOVLB  0
69DA:  CALL   0D98
....................          strcpy(Menus.Letra,"Ajusten"); 
69DE:  MOVLW  05
69E0:  MOVWF  FEA
69E2:  MOVLW  D6
69E4:  MOVWF  FE9
69E6:  MOVFF  FF2,5F6
69EA:  BCF    FF2.7
69EC:  MOVLW  00
69EE:  CALL   0C5E
69F2:  TBLRD*-
69F4:  TBLRD*+
69F6:  MOVF   FF5,W
69F8:  MOVWF  FEE
69FA:  IORLW  00
69FC:  BNZ   69F4
69FE:  MOVLB  5
6A00:  BTFSC  xF6.7
6A02:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
6A04:  MOVLW  05
6A06:  MOVWF  xF7
6A08:  MOVLW  D6
6A0A:  MOVWF  xF6
6A0C:  CLRF   xF8
6A0E:  CLRF   xF9
6A10:  MOVLW  01
6A12:  MOVWF  xFA
6A14:  MOVLW  02
6A16:  MOVWF  xFB
6A18:  MOVLB  0
6A1A:  CALL   13CA
....................           
....................          displayTemperatura(Ajusten,30,30,0,3); 
6A1E:  MOVFF  561,5F7
6A22:  MOVLW  1E
6A24:  MOVLB  5
6A26:  MOVWF  xF8
6A28:  MOVWF  xF9
6A2A:  CLRF   xFA
6A2C:  MOVLW  03
6A2E:  MOVWF  xFB
6A30:  MOVLB  0
6A32:  CALL   2254
....................           
....................          visual=0; 
6A36:  MOVLB  5
6A38:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
6A3A:  BSF    F92.5
6A3C:  BTFSS  F80.5
6A3E:  BRA    6AB2
....................          {   
....................             if(Ajusten>100) 
6A40:  MOVF   x61,W
6A42:  SUBLW  64
6A44:  BC    6A58
....................             { 
....................                Ajusten=100;delay_ms(100);visual=1; 
6A46:  MOVLW  64
6A48:  MOVWF  x61
6A4A:  MOVWF  xFC
6A4C:  MOVLB  0
6A4E:  CALL   0CF8
6A52:  MOVLB  5
6A54:  BSF    x65.3
....................             } 
....................             else 
6A56:  BRA    6AB2
....................             { 
....................                delay_ms(30);Ajusten+=1.0;visual=1; 
6A58:  MOVLW  1E
6A5A:  MOVWF  xFC
6A5C:  MOVLB  0
6A5E:  CALL   0CF8
6A62:  MOVLB  5
6A64:  CLRF   xFD
6A66:  MOVFF  561,5FC
6A6A:  MOVLB  0
6A6C:  CALL   0D22
6A70:  BCF    FD8.1
6A72:  MOVFF  03,5FE
6A76:  MOVFF  02,5FD
6A7A:  MOVFF  01,5FC
6A7E:  MOVFF  00,5FB
6A82:  MOVLB  6
6A84:  CLRF   x02
6A86:  CLRF   x01
6A88:  CLRF   x00
6A8A:  MOVLW  7F
6A8C:  MOVLB  5
6A8E:  MOVWF  xFF
6A90:  MOVLB  0
6A92:  CALL   18A8
6A96:  MOVFF  03,5F9
6A9A:  MOVFF  02,5F8
6A9E:  MOVFF  01,5F7
6AA2:  MOVFF  00,5F6
6AA6:  CALL   2766
6AAA:  MOVFF  01,561
6AAE:  MOVLB  5
6AB0:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
6AB2:  BSF    F96.0
6AB4:  BTFSS  F84.0
6AB6:  BRA    6B16
....................          {   
....................             if(Ajusten>0) 
6AB8:  MOVF   x61,F
6ABA:  BZ    6B16
....................             { 
....................                delay_ms(30);Ajusten-=1.0;visual=1;      
6ABC:  MOVLW  1E
6ABE:  MOVWF  xFC
6AC0:  MOVLB  0
6AC2:  CALL   0CF8
6AC6:  MOVLB  5
6AC8:  CLRF   xFD
6ACA:  MOVFF  561,5FC
6ACE:  MOVLB  0
6AD0:  CALL   0D22
6AD4:  BSF    FD8.1
6AD6:  MOVFF  03,5FE
6ADA:  MOVFF  02,5FD
6ADE:  MOVFF  01,5FC
6AE2:  MOVFF  00,5FB
6AE6:  MOVLB  6
6AE8:  CLRF   x02
6AEA:  CLRF   x01
6AEC:  CLRF   x00
6AEE:  MOVLW  7F
6AF0:  MOVLB  5
6AF2:  MOVWF  xFF
6AF4:  MOVLB  0
6AF6:  CALL   18A8
6AFA:  MOVFF  03,5F9
6AFE:  MOVFF  02,5F8
6B02:  MOVFF  01,5F7
6B06:  MOVFF  00,5F6
6B0A:  CALL   2766
6B0E:  MOVFF  01,561
6B12:  MOVLB  5
6B14:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
6B16:  BSF    F96.1
6B18:  BTFSS  F84.1
6B1A:  BRA    6B2A
....................          {   
....................             delay_ms(30);visual=1; 
6B1C:  MOVLW  1E
6B1E:  MOVWF  xFC
6B20:  MOVLB  0
6B22:  CALL   0CF8
6B26:  MOVLB  5
6B28:  BSF    x65.3
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
6B2A:  BSF    F96.2
6B2C:  BTFSS  F84.2
6B2E:  BRA    6B84
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6B30:  MOVLW  04
6B32:  MOVWF  xF6
6B34:  MOVLW  AF
6B36:  MOVWF  xFC
6B38:  MOVLB  0
6B3A:  CALL   0CF8
6B3E:  MOVLB  5
6B40:  DECFSZ xF6,F
6B42:  BRA    6B34
6B44:  MOVLW  64
6B46:  MOVWF  x6A
6B48:  CLRF   xF7
6B4A:  MOVLB  0
6B4C:  CALL   0D98
6B50:  MOVLW  01
6B52:  MOVLB  5
6B54:  MOVWF  x71
6B56:  BSF    x65.3
....................             write_eeprom(50,Ajusten); 
6B58:  MOVLW  32
6B5A:  MOVWF  FA9
6B5C:  MOVFF  561,FA8
6B60:  BCF    FA6.6
6B62:  BCF    FA6.7
6B64:  BSF    FA6.2
6B66:  MOVF   FF2,W
6B68:  MOVWF  00
6B6A:  BCF    FF2.7
6B6C:  MOVLB  F
6B6E:  MOVLW  55
6B70:  MOVWF  FA7
6B72:  MOVLW  AA
6B74:  MOVWF  FA7
6B76:  BSF    FA6.1
6B78:  BTFSC  FA6.1
6B7A:  BRA    6B78
6B7C:  BCF    FA6.2
6B7E:  MOVF   00,W
6B80:  IORWF  FF2,F
6B82:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==105){ // Menu de Ajuste de Media Movil 
6B84:  MOVF   x6A,W
6B86:  SUBLW  69
6B88:  BTFSS  FD8.2
6B8A:  BRA    6D4C
....................        
....................       if(MediaMovil>80) 
6B8C:  MOVF   x62,W
6B8E:  SUBLW  50
6B90:  BC    6B96
....................       { 
....................          MediaMovil=80; 
6B92:  MOVLW  50
6B94:  MOVWF  x62
....................       } 
....................        
....................       if(visual==1) 
6B96:  BTFSS  x65.3
6B98:  BRA    6BFE
....................       { 
....................          glcd_fillScreen(OFF); 
6B9A:  CLRF   xF7
6B9C:  MOVLB  0
6B9E:  CALL   0D98
....................          strcpy(Menus.Letra,"Media"); 
6BA2:  MOVLW  05
6BA4:  MOVWF  FEA
6BA6:  MOVLW  D6
6BA8:  MOVWF  FE9
6BAA:  MOVFF  FF2,5F6
6BAE:  BCF    FF2.7
6BB0:  MOVLW  00
6BB2:  CALL   0C80
6BB6:  TBLRD*-
6BB8:  TBLRD*+
6BBA:  MOVF   FF5,W
6BBC:  MOVWF  FEE
6BBE:  IORLW  00
6BC0:  BNZ   6BB8
6BC2:  MOVLB  5
6BC4:  BTFSC  xF6.7
6BC6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
6BC8:  MOVLW  05
6BCA:  MOVWF  xF7
6BCC:  MOVLW  D6
6BCE:  MOVWF  xF6
6BD0:  CLRF   xF8
6BD2:  CLRF   xF9
6BD4:  MOVLW  01
6BD6:  MOVWF  xFA
6BD8:  MOVLW  02
6BDA:  MOVWF  xFB
6BDC:  MOVLB  0
6BDE:  CALL   13CA
....................           
....................          displayTemperatura(MediaMovil,30,30,0,3); 
6BE2:  MOVFF  562,5F7
6BE6:  MOVLW  1E
6BE8:  MOVLB  5
6BEA:  MOVWF  xF8
6BEC:  MOVWF  xF9
6BEE:  CLRF   xFA
6BF0:  MOVLW  03
6BF2:  MOVWF  xFB
6BF4:  MOVLB  0
6BF6:  CALL   2254
....................           
....................          visual=0; 
6BFA:  MOVLB  5
6BFC:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
6BFE:  BSF    F92.5
6C00:  BTFSS  F80.5
6C02:  BRA    6C78
....................          {   
....................             if(MediaMovil>80) 
6C04:  MOVF   x62,W
6C06:  SUBLW  50
6C08:  BC    6C1E
....................             { 
....................                MediaMovil=80;delay_ms(100);visual=1; 
6C0A:  MOVLW  50
6C0C:  MOVWF  x62
6C0E:  MOVLW  64
6C10:  MOVWF  xFC
6C12:  MOVLB  0
6C14:  CALL   0CF8
6C18:  MOVLB  5
6C1A:  BSF    x65.3
....................             } 
....................             else 
6C1C:  BRA    6C78
....................             { 
....................                delay_ms(30);MediaMovil+=1.0;visual=1; 
6C1E:  MOVLW  1E
6C20:  MOVWF  xFC
6C22:  MOVLB  0
6C24:  CALL   0CF8
6C28:  MOVLB  5
6C2A:  CLRF   xFD
6C2C:  MOVFF  562,5FC
6C30:  MOVLB  0
6C32:  CALL   0D22
6C36:  BCF    FD8.1
6C38:  MOVFF  03,5FE
6C3C:  MOVFF  02,5FD
6C40:  MOVFF  01,5FC
6C44:  MOVFF  00,5FB
6C48:  MOVLB  6
6C4A:  CLRF   x02
6C4C:  CLRF   x01
6C4E:  CLRF   x00
6C50:  MOVLW  7F
6C52:  MOVLB  5
6C54:  MOVWF  xFF
6C56:  MOVLB  0
6C58:  CALL   18A8
6C5C:  MOVFF  03,5F9
6C60:  MOVFF  02,5F8
6C64:  MOVFF  01,5F7
6C68:  MOVFF  00,5F6
6C6C:  CALL   2766
6C70:  MOVFF  01,562
6C74:  MOVLB  5
6C76:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
6C78:  BSF    F96.0
6C7A:  BTFSS  F84.0
6C7C:  BRA    6CDE
....................          {   
....................             if(MediaMovil>1) 
6C7E:  MOVF   x62,W
6C80:  SUBLW  01
6C82:  BC    6CDE
....................             { 
....................                delay_ms(30);MediaMovil-=1.0;visual=1;      
6C84:  MOVLW  1E
6C86:  MOVWF  xFC
6C88:  MOVLB  0
6C8A:  CALL   0CF8
6C8E:  MOVLB  5
6C90:  CLRF   xFD
6C92:  MOVFF  562,5FC
6C96:  MOVLB  0
6C98:  CALL   0D22
6C9C:  BSF    FD8.1
6C9E:  MOVFF  03,5FE
6CA2:  MOVFF  02,5FD
6CA6:  MOVFF  01,5FC
6CAA:  MOVFF  00,5FB
6CAE:  MOVLB  6
6CB0:  CLRF   x02
6CB2:  CLRF   x01
6CB4:  CLRF   x00
6CB6:  MOVLW  7F
6CB8:  MOVLB  5
6CBA:  MOVWF  xFF
6CBC:  MOVLB  0
6CBE:  CALL   18A8
6CC2:  MOVFF  03,5F9
6CC6:  MOVFF  02,5F8
6CCA:  MOVFF  01,5F7
6CCE:  MOVFF  00,5F6
6CD2:  CALL   2766
6CD6:  MOVFF  01,562
6CDA:  MOVLB  5
6CDC:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
6CDE:  BSF    F96.1
6CE0:  BTFSS  F84.1
6CE2:  BRA    6CF2
....................          {   
....................             delay_ms(30);visual=1; 
6CE4:  MOVLW  1E
6CE6:  MOVWF  xFC
6CE8:  MOVLB  0
6CEA:  CALL   0CF8
6CEE:  MOVLB  5
6CF0:  BSF    x65.3
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
6CF2:  BSF    F96.2
6CF4:  BTFSS  F84.2
6CF6:  BRA    6D4C
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6CF8:  MOVLW  04
6CFA:  MOVWF  xF6
6CFC:  MOVLW  AF
6CFE:  MOVWF  xFC
6D00:  MOVLB  0
6D02:  CALL   0CF8
6D06:  MOVLB  5
6D08:  DECFSZ xF6,F
6D0A:  BRA    6CFC
6D0C:  MOVLW  64
6D0E:  MOVWF  x6A
6D10:  CLRF   xF7
6D12:  MOVLB  0
6D14:  CALL   0D98
6D18:  MOVLW  01
6D1A:  MOVLB  5
6D1C:  MOVWF  x71
6D1E:  BSF    x65.3
....................             write_eeprom(60,MediaMovil); 
6D20:  MOVLW  3C
6D22:  MOVWF  FA9
6D24:  MOVFF  562,FA8
6D28:  BCF    FA6.6
6D2A:  BCF    FA6.7
6D2C:  BSF    FA6.2
6D2E:  MOVF   FF2,W
6D30:  MOVWF  00
6D32:  BCF    FF2.7
6D34:  MOVLB  F
6D36:  MOVLW  55
6D38:  MOVWF  FA7
6D3A:  MOVLW  AA
6D3C:  MOVWF  FA7
6D3E:  BSF    FA6.1
6D40:  BTFSC  FA6.1
6D42:  BRA    6D40
6D44:  BCF    FA6.2
6D46:  MOVF   00,W
6D48:  IORWF  FF2,F
6D4A:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==106){ // Menu de Ajuste de Coeficiente Regulador 
6D4C:  MOVF   x6A,W
6D4E:  SUBLW  6A
6D50:  BTFSS  FD8.2
6D52:  BRA    6F98
....................        
....................       if(Coeficiente>250) 
6D54:  CLRF   xF9
6D56:  CLRF   xF8
6D58:  MOVLW  7A
6D5A:  MOVWF  xF7
6D5C:  MOVLW  86
6D5E:  MOVWF  xF6
6D60:  MOVFF  5CD,5FD
6D64:  MOVFF  5CC,5FC
6D68:  MOVFF  5CB,5FB
6D6C:  MOVFF  5CA,5FA
6D70:  MOVLB  0
6D72:  CALL   267E
6D76:  BNC   6D86
....................       { 
....................          Coeficiente=100; 
6D78:  MOVLB  5
6D7A:  CLRF   xCD
6D7C:  CLRF   xCC
6D7E:  MOVLW  48
6D80:  MOVWF  xCB
6D82:  MOVLW  85
6D84:  MOVWF  xCA
....................       } 
....................        
....................       if(visual==1) 
6D86:  MOVLB  5
6D88:  BTFSS  x65.3
6D8A:  BRA    6E08
....................       { 
....................          glcd_fillScreen(OFF); 
6D8C:  CLRF   xF7
6D8E:  MOVLB  0
6D90:  CALL   0D98
....................          strcpy(Menus.Letra,"Coeficiente"); 
6D94:  MOVLW  05
6D96:  MOVWF  FEA
6D98:  MOVLW  D6
6D9A:  MOVWF  FE9
6D9C:  MOVFF  FF2,5F6
6DA0:  BCF    FF2.7
6DA2:  MOVLW  00
6DA4:  CALL   0C16
6DA8:  TBLRD*-
6DAA:  TBLRD*+
6DAC:  MOVF   FF5,W
6DAE:  MOVWF  FEE
6DB0:  IORLW  00
6DB2:  BNZ   6DAA
6DB4:  MOVLB  5
6DB6:  BTFSC  xF6.7
6DB8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
6DBA:  MOVLW  05
6DBC:  MOVWF  xF7
6DBE:  MOVLW  D6
6DC0:  MOVWF  xF6
6DC2:  CLRF   xF8
6DC4:  CLRF   xF9
6DC6:  MOVLW  01
6DC8:  MOVWF  xFA
6DCA:  MOVLW  02
6DCC:  MOVWF  xFB
6DCE:  MOVLB  0
6DD0:  CALL   13CA
....................           
....................          displayTemperatura(Coeficiente,30,30,0,3); 
6DD4:  MOVFF  5CD,5F9
6DD8:  MOVFF  5CC,5F8
6DDC:  MOVFF  5CB,5F7
6DE0:  MOVFF  5CA,5F6
6DE4:  CALL   2766
6DE8:  MOVFF  01,5F6
6DEC:  MOVFF  01,5F7
6DF0:  MOVLW  1E
6DF2:  MOVLB  5
6DF4:  MOVWF  xF8
6DF6:  MOVWF  xF9
6DF8:  CLRF   xFA
6DFA:  MOVLW  03
6DFC:  MOVWF  xFB
6DFE:  MOVLB  0
6E00:  CALL   2254
....................           
....................          visual=0; 
6E04:  MOVLB  5
6E06:  BCF    x65.3
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
6E08:  BSF    F92.5
6E0A:  BTFSS  F80.5
6E0C:  BRA    6E98
....................          {   
....................             if(Coeficiente>250) 
6E0E:  CLRF   xF9
6E10:  CLRF   xF8
6E12:  MOVLW  7A
6E14:  MOVWF  xF7
6E16:  MOVLW  86
6E18:  MOVWF  xF6
6E1A:  MOVFF  5CD,5FD
6E1E:  MOVFF  5CC,5FC
6E22:  MOVFF  5CB,5FB
6E26:  MOVFF  5CA,5FA
6E2A:  MOVLB  0
6E2C:  CALL   267E
6E30:  BNC   6E52
....................             { 
....................                Coeficiente=250;delay_ms(100);visual=1; 
6E32:  MOVLB  5
6E34:  CLRF   xCD
6E36:  CLRF   xCC
6E38:  MOVLW  7A
6E3A:  MOVWF  xCB
6E3C:  MOVLW  86
6E3E:  MOVWF  xCA
6E40:  MOVLW  64
6E42:  MOVWF  xFC
6E44:  MOVLB  0
6E46:  CALL   0CF8
6E4A:  MOVLB  5
6E4C:  BSF    x65.3
....................             } 
....................             else 
6E4E:  BRA    6E98
6E50:  MOVLB  0
....................             { 
....................                delay_ms(30);Coeficiente+=1.0;visual=1; 
6E52:  MOVLW  1E
6E54:  MOVLB  5
6E56:  MOVWF  xFC
6E58:  MOVLB  0
6E5A:  CALL   0CF8
6E5E:  BCF    FD8.1
6E60:  MOVFF  5CD,5FE
6E64:  MOVFF  5CC,5FD
6E68:  MOVFF  5CB,5FC
6E6C:  MOVFF  5CA,5FB
6E70:  MOVLB  6
6E72:  CLRF   x02
6E74:  CLRF   x01
6E76:  CLRF   x00
6E78:  MOVLW  7F
6E7A:  MOVLB  5
6E7C:  MOVWF  xFF
6E7E:  MOVLB  0
6E80:  CALL   18A8
6E84:  MOVFF  03,5CD
6E88:  MOVFF  02,5CC
6E8C:  MOVFF  01,5CB
6E90:  MOVFF  00,5CA
6E94:  MOVLB  5
6E96:  BSF    x65.3
....................             } 
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
6E98:  BSF    F96.0
6E9A:  BTFSS  F84.0
6E9C:  BRA    6F06
....................          {   
....................             if(Coeficiente>1) 
6E9E:  CLRF   xF9
6EA0:  CLRF   xF8
6EA2:  CLRF   xF7
6EA4:  MOVLW  7F
6EA6:  MOVWF  xF6
6EA8:  MOVFF  5CD,5FD
6EAC:  MOVFF  5CC,5FC
6EB0:  MOVFF  5CB,5FB
6EB4:  MOVFF  5CA,5FA
6EB8:  MOVLB  0
6EBA:  CALL   267E
6EBE:  BNC   6F08
....................             { 
....................                delay_ms(30);Coeficiente-=1.0;visual=1;      
6EC0:  MOVLW  1E
6EC2:  MOVLB  5
6EC4:  MOVWF  xFC
6EC6:  MOVLB  0
6EC8:  CALL   0CF8
6ECC:  BSF    FD8.1
6ECE:  MOVFF  5CD,5FE
6ED2:  MOVFF  5CC,5FD
6ED6:  MOVFF  5CB,5FC
6EDA:  MOVFF  5CA,5FB
6EDE:  MOVLB  6
6EE0:  CLRF   x02
6EE2:  CLRF   x01
6EE4:  CLRF   x00
6EE6:  MOVLW  7F
6EE8:  MOVLB  5
6EEA:  MOVWF  xFF
6EEC:  MOVLB  0
6EEE:  CALL   18A8
6EF2:  MOVFF  03,5CD
6EF6:  MOVFF  02,5CC
6EFA:  MOVFF  01,5CB
6EFE:  MOVFF  00,5CA
6F02:  MOVLB  5
6F04:  BSF    x65.3
6F06:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
6F08:  BSF    F96.1
6F0A:  BTFSS  F84.1
6F0C:  BRA    6F20
....................          {   
....................             delay_ms(30);visual=1; 
6F0E:  MOVLW  1E
6F10:  MOVLB  5
6F12:  MOVWF  xFC
6F14:  MOVLB  0
6F16:  CALL   0CF8
6F1A:  MOVLB  5
6F1C:  BSF    x65.3
6F1E:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
6F20:  BSF    F96.2
6F22:  BTFSS  F84.2
6F24:  BRA    6F96
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6F26:  MOVLW  04
6F28:  MOVLB  5
6F2A:  MOVWF  xF6
6F2C:  MOVLW  AF
6F2E:  MOVWF  xFC
6F30:  MOVLB  0
6F32:  CALL   0CF8
6F36:  MOVLB  5
6F38:  DECFSZ xF6,F
6F3A:  BRA    6F2C
6F3C:  MOVLW  64
6F3E:  MOVWF  x6A
6F40:  CLRF   xF7
6F42:  MOVLB  0
6F44:  CALL   0D98
6F48:  MOVLW  01
6F4A:  MOVLB  5
6F4C:  MOVWF  x71
6F4E:  BSF    x65.3
....................             write_eeprom(70,(int8)Coeficiente); 
6F50:  MOVFF  5CD,5F9
6F54:  MOVFF  5CC,5F8
6F58:  MOVFF  5CB,5F7
6F5C:  MOVFF  5CA,5F6
6F60:  MOVLB  0
6F62:  CALL   2766
6F66:  MOVFF  01,5F6
6F6A:  MOVLW  46
6F6C:  MOVWF  FA9
6F6E:  MOVFF  5F6,FA8
6F72:  BCF    FA6.6
6F74:  BCF    FA6.7
6F76:  BSF    FA6.2
6F78:  MOVF   FF2,W
6F7A:  MOVWF  00
6F7C:  BCF    FF2.7
6F7E:  MOVLB  F
6F80:  MOVLW  55
6F82:  MOVWF  FA7
6F84:  MOVLW  AA
6F86:  MOVWF  FA7
6F88:  BSF    FA6.1
6F8A:  BTFSC  FA6.1
6F8C:  BRA    6F8A
6F8E:  BCF    FA6.2
6F90:  MOVF   00,W
6F92:  IORWF  FF2,F
6F94:  MOVLB  0
6F96:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................       if(tiemporeset>=60) 
6F98:  MOVF   x68,W
6F9A:  SUBLW  3B
6F9C:  BC    6FC8
....................       { 
....................          glcd_init(ON); 
6F9E:  MOVLW  01
6FA0:  MOVWF  xF6
6FA2:  MOVLB  0
6FA4:  CALL   0EAA
....................          tiemporeset=0; 
6FA8:  MOVLB  5
6FAA:  CLRF   x68
....................          if(tiempoventilador<2) 
6FAC:  MOVF   x64,W
6FAE:  SUBLW  01
6FB0:  BNC   6FB8
....................          { 
....................             estado_ventilador=0; 
6FB2:  BCF    x65.5
....................             tiempoventilador++; 
6FB4:  INCF   x64,F
....................          } 
....................          else 
6FB6:  BRA    6FC8
....................          { 
....................             if(tiempoventilador>2) 
6FB8:  MOVF   x64,W
6FBA:  SUBLW  02
6FBC:  BC    6FC4
....................             { 
....................                tiempoventilador=0; 
6FBE:  CLRF   x64
....................                estado_ventilador=0; 
6FC0:  BCF    x65.5
....................             } 
....................             else 
6FC2:  BRA    6FC8
....................             { 
....................                estado_ventilador=1; 
6FC4:  BSF    x65.5
....................                tiempoventilador++; 
6FC6:  INCF   x64,F
....................             } 
....................          } 
....................          //estado_ventilador=!estado_ventilador; 
....................       }  
....................  
....................    } 
6FC8:  GOTO   3776
.................... } 
6FCC:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
