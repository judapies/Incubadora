CCS PCH C Compiler, Version 4.104, 5967               26-feb.-18 13:19

               Filename: H:\JP\JP\Laboratorio\Incubadora\2017\Incubadora Refrigerada 115L Avantika #00458774\Firmware Mantenimiento 10-02-2018 Incubadora 115L V1.1\Horno.lst

               ROM used: 31800 bytes (97%)
                         Largest free fragment is 964
               RAM used: 1617 (79%) at main() level
                         1672 (82%) worst case
               Stack:    5 worst case (4 in main + 1 for interrupts)

*
0000:  GOTO   36A6
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0CB4
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... /// Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,NOVREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0D48:  MOVLW  06
0D4A:  MOVWF  FEA
0D4C:  MOVLW  53
0D4E:  MOVWF  FE9
0D50:  MOVF   FEF,W
0D52:  BZ    0D70
0D54:  MOVLW  0F
0D56:  MOVWF  01
0D58:  CLRF   00
0D5A:  DECFSZ 00,F
0D5C:  BRA    0D5A
0D5E:  DECFSZ 01,F
0D60:  BRA    0D58
0D62:  MOVLW  8F
0D64:  MOVWF  00
0D66:  DECFSZ 00,F
0D68:  BRA    0D66
0D6A:  NOP   
0D6C:  DECFSZ FEF,F
0D6E:  BRA    0D54
0D70:  RETLW  00
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B0   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B1   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B4   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B3   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
1372:  BCF    F93.2
1374:  BSF    F8A.2
....................    output_low(GLCD_E); 
1376:  BCF    F93.3
1378:  BCF    F8A.3
....................    output_low(GLCD_CS1); 
137A:  BCF    F93.0
137C:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
137E:  BCF    F93.1
1380:  BCF    F8A.1
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
1382:  BCF    F93.5
1384:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
1386:  MOVLB  6
1388:  CLRF   x67
138A:  MOVLW  C0
138C:  MOVWF  x68
138E:  MOVLB  0
1390:  RCALL  1220
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
1392:  MOVLW  01
1394:  MOVLB  6
1396:  MOVWF  x67
1398:  MOVLW  C0
139A:  MOVWF  x68
139C:  MOVLB  0
139E:  RCALL  1220
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
13A0:  MOVLB  6
13A2:  CLRF   x67
13A4:  MOVLW  40
13A6:  MOVWF  x68
13A8:  MOVLB  0
13AA:  RCALL  1220
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
13AC:  MOVLW  01
13AE:  MOVLB  6
13B0:  MOVWF  x67
13B2:  MOVLW  40
13B4:  MOVWF  x68
13B6:  MOVLB  0
13B8:  RCALL  1220
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
13BA:  MOVLB  6
13BC:  CLRF   x67
13BE:  MOVLW  B8
13C0:  MOVWF  x68
13C2:  MOVLB  0
13C4:  RCALL  1220
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
13C6:  MOVLW  01
13C8:  MOVLB  6
13CA:  MOVWF  x67
13CC:  MOVLW  B8
13CE:  MOVWF  x68
13D0:  MOVLB  0
13D2:  RCALL  1220
....................  
....................    if(mode == ON) 
13D4:  MOVLB  6
13D6:  DECFSZ x4D,W
13D8:  BRA    13F6
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
13DA:  CLRF   x67
13DC:  MOVLW  3F
13DE:  MOVWF  x68
13E0:  MOVLB  0
13E2:  RCALL  1220
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
13E4:  MOVLW  01
13E6:  MOVLB  6
13E8:  MOVWF  x67
13EA:  MOVLW  3F
13EC:  MOVWF  x68
13EE:  MOVLB  0
13F0:  RCALL  1220
....................    } 
....................    else 
13F2:  BRA    140E
13F4:  MOVLB  6
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
13F6:  CLRF   x67
13F8:  MOVLW  3E
13FA:  MOVWF  x68
13FC:  MOVLB  0
13FE:  RCALL  1220
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
1400:  MOVLW  01
1402:  MOVLB  6
1404:  MOVWF  x67
1406:  MOVLW  3E
1408:  MOVWF  x68
140A:  MOVLB  0
140C:  RCALL  1220
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
140E:  MOVLB  6
1410:  CLRF   x4E
1412:  MOVLB  0
1414:  RCALL  1260
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
1416:  RCALL  12BA
....................    #endif 
.................... } 
1418:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
12BA:  MOVLB  6
12BC:  CLRF   x63
12BE:  MOVLW  16
12C0:  MOVWF  x62
....................    p2 = displayData.right; 
12C2:  MOVLW  02
12C4:  MOVWF  x65
12C6:  MOVLW  16
12C8:  MOVWF  x64
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
12CA:  CLRF   x60
12CC:  MOVF   x60,W
12CE:  SUBLW  07
12D0:  BNC   136E
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
12D2:  BCF    F93.5
12D4:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
12D6:  CLRF   x67
12D8:  MOVLW  40
12DA:  MOVWF  x68
12DC:  MOVLB  0
12DE:  RCALL  1220
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
12E0:  MOVLW  01
12E2:  MOVLB  6
12E4:  MOVWF  x67
12E6:  MOVLW  40
12E8:  MOVWF  x68
12EA:  MOVLB  0
12EC:  RCALL  1220
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
12EE:  MOVLB  6
12F0:  MOVF   x60,W
12F2:  IORLW  B8
12F4:  MOVWF  x66
12F6:  CLRF   x67
12F8:  MOVWF  x68
12FA:  MOVLB  0
12FC:  RCALL  1220
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
12FE:  MOVLB  6
1300:  MOVF   x60,W
1302:  IORLW  B8
1304:  MOVWF  x66
1306:  MOVLW  01
1308:  MOVWF  x67
130A:  MOVFF  666,668
130E:  MOVLB  0
1310:  RCALL  1220
....................       output_high(GLCD_DI);                     // Set for data 
1312:  BCF    F93.5
1314:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
1316:  MOVLB  6
1318:  CLRF   x61
131A:  MOVF   x61,W
131C:  SUBLW  3F
131E:  BNC   136A
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
1320:  MOVFF  663,03
1324:  MOVF   x62,W
1326:  INCF   x62,F
1328:  BTFSC  FD8.2
132A:  INCF   x63,F
132C:  MOVWF  FE9
132E:  MOVFF  03,FEA
1332:  MOVFF  FEF,666
1336:  CLRF   x67
1338:  MOVFF  666,668
133C:  MOVLB  0
133E:  RCALL  1220
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
1340:  MOVLB  6
1342:  MOVFF  665,03
1346:  MOVF   x64,W
1348:  INCF   x64,F
134A:  BTFSC  FD8.2
134C:  INCF   x65,F
134E:  MOVWF  FE9
1350:  MOVFF  03,FEA
1354:  MOVFF  FEF,666
1358:  MOVLW  01
135A:  MOVWF  x67
135C:  MOVFF  666,668
1360:  MOVLB  0
1362:  RCALL  1220
....................       } 
1364:  MOVLB  6
1366:  INCF   x61,F
1368:  BRA    131A
....................    } 
136A:  INCF   x60,F
136C:  BRA    12CC
.................... } 
136E:  MOVLB  0
1370:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
141A:  MOVLB  6
141C:  CLRF   x84
141E:  RRCF   x7F,W
1420:  MOVWF  x83
1422:  RRCF   x83,F
1424:  RRCF   x83,F
1426:  MOVLW  1F
1428:  ANDWF  x83,F
....................    temp *= 64; 
142A:  RLCF   x83,F
142C:  RLCF   x84,F
142E:  RLCF   x83,F
1430:  RLCF   x84,F
1432:  RLCF   x83,F
1434:  RLCF   x84,F
1436:  RLCF   x83,F
1438:  RLCF   x84,F
143A:  RLCF   x83,F
143C:  RLCF   x84,F
143E:  RLCF   x83,F
1440:  RLCF   x84,F
1442:  MOVLW  C0
1444:  ANDWF  x83,F
....................    temp += x; 
1446:  MOVF   x7E,W
1448:  ADDWF  x83,F
144A:  MOVLW  00
144C:  ADDWFC x84,F
....................  
....................    if(x > 63) 
144E:  MOVF   x7E,W
1450:  SUBLW  3F
1452:  BC    146E
....................    { 
....................       p = displayData.right + temp - 64; 
1454:  MOVLW  16
1456:  ADDWF  x83,W
1458:  MOVWF  x85
145A:  MOVLW  02
145C:  ADDWFC x84,W
145E:  MOVWF  x86
1460:  MOVLW  40
1462:  SUBWF  x85,W
1464:  MOVWF  x81
1466:  MOVLW  00
1468:  SUBWFB x86,W
146A:  MOVWF  x82
....................    } 
....................    else 
146C:  BRA    147A
....................    { 
....................       p = displayData.left + temp; 
146E:  MOVLW  16
1470:  ADDWF  x83,W
1472:  MOVWF  x81
1474:  MOVLW  00
1476:  ADDWFC x84,W
1478:  MOVWF  x82
....................    } 
....................  
....................    if(color) 
147A:  MOVF   x80,F
147C:  BZ    14A8
....................    { 
....................       bit_set(*p, y%8); 
147E:  MOVFF  682,03
1482:  MOVFF  681,FE9
1486:  MOVFF  682,FEA
148A:  MOVF   x7F,W
148C:  ANDLW  07
148E:  MOVWF  x85
1490:  MOVLW  01
1492:  MOVWF  00
1494:  MOVF   x85,W
1496:  MOVWF  01
1498:  BZ    14A2
149A:  BCF    FD8.0
149C:  RLCF   00,F
149E:  DECFSZ 01,F
14A0:  BRA    149A
14A2:  MOVF   00,W
14A4:  IORWF  FEF,F
....................    } 
....................    else 
14A6:  BRA    14D2
....................    { 
....................       bit_clear(*p, y%8); 
14A8:  MOVFF  682,03
14AC:  MOVFF  681,FE9
14B0:  MOVFF  682,FEA
14B4:  MOVF   x7F,W
14B6:  ANDLW  07
14B8:  MOVWF  x85
14BA:  MOVLW  01
14BC:  MOVWF  00
14BE:  MOVF   x85,W
14C0:  MOVWF  01
14C2:  BZ    14CC
14C4:  BCF    FD8.0
14C6:  RLCF   00,F
14C8:  DECFSZ 01,F
14CA:  BRA    14C4
14CC:  MOVF   00,W
14CE:  XORLW  FF
14D0:  ANDWF  FEF,F
....................    } 
.................... } 
14D2:  MOVLB  0
14D4:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
1260:  MOVLB  6
1262:  CLRF   x51
1264:  MOVLW  16
1266:  MOVWF  x50
....................    p2 = displayData.right; 
1268:  MOVLW  02
126A:  MOVWF  x53
126C:  MOVLW  16
126E:  MOVWF  x52
....................    data = 0xFF * color; 
1270:  MOVF   x4E,W
1272:  MULLW  FF
1274:  MOVFF  FF3,64F
....................  
....................    for(i=0; i<512; ++i) 
1278:  CLRF   x55
127A:  CLRF   x54
127C:  MOVF   x55,W
127E:  SUBLW  01
1280:  BNC   12B6
....................    { 
....................       *p1++ = data; 
1282:  MOVFF  651,03
1286:  MOVF   x50,W
1288:  INCF   x50,F
128A:  BTFSC  FD8.2
128C:  INCF   x51,F
128E:  MOVWF  FE9
1290:  MOVFF  03,FEA
1294:  MOVFF  64F,FEF
....................       *p2++ = data; 
1298:  MOVFF  653,03
129C:  MOVF   x52,W
129E:  INCF   x52,F
12A0:  BTFSC  FD8.2
12A2:  INCF   x53,F
12A4:  MOVWF  FE9
12A6:  MOVFF  03,FEA
12AA:  MOVFF  64F,FEF
....................    } 
12AE:  INCF   x54,F
12B0:  BTFSC  FD8.2
12B2:  INCF   x55,F
12B4:  BRA    127C
.................... } 
12B6:  MOVLB  0
12B8:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
1220:  MOVLB  6
1222:  MOVF   x67,F
1224:  BZ    122C
....................       output_high(GLCD_CS2); 
1226:  BCF    F93.1
1228:  BSF    F8A.1
....................    else 
122A:  BRA    1230
....................       output_high(GLCD_CS1); 
122C:  BCF    F93.0
122E:  BSF    F8A.0
....................  
....................    output_low(GLCD_RW);       // Set for writing 
1230:  BCF    F93.4
1232:  BCF    F8A.4
....................    output_d(data);            // Put the data on the port 
1234:  CLRF   F95
1236:  MOVFF  668,F8C
....................    delay_cycles(50); 
123A:  MOVLW  10
123C:  MOVWF  00
123E:  DECFSZ 00,F
1240:  BRA    123E
1242:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
1244:  BCF    F93.3
1246:  BSF    F8A.3
....................    delay_cycles(250); 
1248:  MOVLW  53
124A:  MOVWF  00
124C:  DECFSZ 00,F
124E:  BRA    124C
....................    output_low(GLCD_E); 
1250:  BCF    F93.3
1252:  BCF    F8A.3
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
1254:  BCF    F93.0
1256:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
1258:  BCF    F93.1
125A:  BCF    F8A.1
.................... } 
125C:  MOVLB  0
125E:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
168E:  MOVLW  01
1690:  MOVLB  6
1692:  MOVWF  x77
1694:  MOVWF  x78
1696:  CLRF   x7D
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
1698:  MOVF   x6E,W
169A:  SUBWF  x70,W
169C:  MOVWF  x7E
169E:  MOVF   x7E,W
16A0:  BTFSS  x7E.7
16A2:  BRA    16AA
16A4:  MOVLW  00
16A6:  BSF    FD8.0
16A8:  SUBFWB x7E,W
16AA:  CLRF   03
16AC:  MOVWF  x75
16AE:  MOVFF  03,676
....................    dy = abs((signed int8)(y2 - y1)); 
16B2:  MOVF   x6F,W
16B4:  SUBWF  x71,W
16B6:  MOVWF  x7E
16B8:  MOVF   x7E,W
16BA:  BTFSS  x7E.7
16BC:  BRA    16C4
16BE:  MOVLW  00
16C0:  BSF    FD8.0
16C2:  SUBFWB x7E,W
16C4:  CLRF   03
16C6:  MOVWF  x73
16C8:  MOVFF  03,674
....................    #endif 
....................  
....................    if(x1 > x2) 
16CC:  MOVF   x6E,W
16CE:  SUBWF  x70,W
16D0:  BC    16D6
....................       addx = -1; 
16D2:  MOVLW  FF
16D4:  MOVWF  x77
....................    if(y1 > y2) 
16D6:  MOVF   x6F,W
16D8:  SUBWF  x71,W
16DA:  BC    16E0
....................       addy = -1; 
16DC:  MOVLW  FF
16DE:  MOVWF  x78
....................  
....................    if(dx >= dy) 
16E0:  MOVF   x74,W
16E2:  SUBWF  x76,W
16E4:  BNC   175C
16E6:  BNZ   16EE
16E8:  MOVF   x73,W
16EA:  SUBWF  x75,W
16EC:  BNC   175C
....................    { 
....................       dy *= 2; 
16EE:  BCF    FD8.0
16F0:  RLCF   x73,F
16F2:  RLCF   x74,F
....................       P = dy - dx; 
16F4:  MOVF   x75,W
16F6:  SUBWF  x73,W
16F8:  MOVWF  00
16FA:  MOVF   x76,W
16FC:  SUBWFB x74,W
16FE:  MOVFF  00,679
1702:  MOVWF  x7A
....................       diff = P - dx; 
1704:  MOVF   x75,W
1706:  SUBWF  x79,W
1708:  MOVWF  x7B
170A:  MOVF   x76,W
170C:  SUBWFB x7A,W
170E:  MOVWF  x7C
....................  
....................       for(; i<=dx; ++i) 
1710:  MOVF   x76,F
1712:  BNZ   171A
1714:  MOVF   x7D,W
1716:  SUBWF  x75,W
1718:  BNC   175A
....................       { 
....................          glcd_pixel(x1, y1, color); 
171A:  MOVFF  66E,67E
171E:  MOVFF  66F,67F
1722:  MOVFF  672,680
1726:  MOVLB  0
1728:  RCALL  141A
....................  
....................          if(P < 0) 
172A:  MOVLB  6
172C:  BTFSC  x7A.7
172E:  BRA    1732
1730:  BRA    1742
....................          { 
....................             P  += dy; 
1732:  MOVF   x73,W
1734:  ADDWF  x79,F
1736:  MOVF   x74,W
1738:  ADDWFC x7A,F
....................             x1 += addx; 
173A:  MOVF   x77,W
173C:  ADDWF  x6E,W
173E:  MOVWF  x6E
....................          } 
....................          else 
1740:  BRA    1756
....................          { 
....................             P  += diff; 
1742:  MOVF   x7B,W
1744:  ADDWF  x79,F
1746:  MOVF   x7C,W
1748:  ADDWFC x7A,F
....................             x1 += addx; 
174A:  MOVF   x77,W
174C:  ADDWF  x6E,W
174E:  MOVWF  x6E
....................             y1 += addy; 
1750:  MOVF   x78,W
1752:  ADDWF  x6F,W
1754:  MOVWF  x6F
....................          } 
....................       } 
1756:  INCF   x7D,F
1758:  BRA    1710
....................    } 
....................    else 
175A:  BRA    17C8
....................    { 
....................       dx *= 2; 
175C:  BCF    FD8.0
175E:  RLCF   x75,F
1760:  RLCF   x76,F
....................       P = dx - dy; 
1762:  MOVF   x73,W
1764:  SUBWF  x75,W
1766:  MOVWF  00
1768:  MOVF   x74,W
176A:  SUBWFB x76,W
176C:  MOVFF  00,679
1770:  MOVWF  x7A
....................       diff = P - dy; 
1772:  MOVF   x73,W
1774:  SUBWF  x79,W
1776:  MOVWF  x7B
1778:  MOVF   x74,W
177A:  SUBWFB x7A,W
177C:  MOVWF  x7C
....................  
....................       for(; i<=dy; ++i) 
177E:  MOVF   x74,F
1780:  BNZ   1788
1782:  MOVF   x7D,W
1784:  SUBWF  x73,W
1786:  BNC   17C8
....................       { 
....................          glcd_pixel(x1, y1, color); 
1788:  MOVFF  66E,67E
178C:  MOVFF  66F,67F
1790:  MOVFF  672,680
1794:  MOVLB  0
1796:  RCALL  141A
....................  
....................          if(P < 0) 
1798:  MOVLB  6
179A:  BTFSC  x7A.7
179C:  BRA    17A0
179E:  BRA    17B0
....................          { 
....................             P  += dx; 
17A0:  MOVF   x75,W
17A2:  ADDWF  x79,F
17A4:  MOVF   x76,W
17A6:  ADDWFC x7A,F
....................             y1 += addy; 
17A8:  MOVF   x78,W
17AA:  ADDWF  x6F,W
17AC:  MOVWF  x6F
....................          } 
....................          else 
17AE:  BRA    17C4
....................          { 
....................             P  += diff; 
17B0:  MOVF   x7B,W
17B2:  ADDWF  x79,F
17B4:  MOVF   x7C,W
17B6:  ADDWFC x7A,F
....................             x1 += addx; 
17B8:  MOVF   x77,W
17BA:  ADDWF  x6E,W
17BC:  MOVWF  x6E
....................             y1 += addy; 
17BE:  MOVF   x78,W
17C0:  ADDWF  x6F,W
17C2:  MOVWF  x6F
....................          } 
....................       } 
17C4:  INCF   x7D,F
17C6:  BRA    177E
....................    } 
.................... } 
17C8:  MOVLB  0
17CA:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
17CC:  MOVLB  6
17CE:  MOVF   x66,F
17D0:  BZ    182E
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
17D2:  MOVF   x64,W
17D4:  SUBWF  x62,W
17D6:  BC    17E2
....................       { 
....................          xmin = x1; 
17D8:  MOVFF  662,669
....................          xmax = x2; 
17DC:  MOVFF  664,66A
....................       } 
....................       else 
17E0:  BRA    17EA
....................       { 
....................          xmin = x2; 
17E2:  MOVFF  664,669
....................          xmax = x1; 
17E6:  MOVFF  662,66A
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
17EA:  MOVF   x65,W
17EC:  SUBWF  x63,W
17EE:  BC    17FA
....................       { 
....................          ymin = y1; 
17F0:  MOVFF  663,66B
....................          ymax = y2; 
17F4:  MOVFF  665,66C
....................       } 
....................       else 
17F8:  BRA    1802
....................       { 
....................          ymin = y2; 
17FA:  MOVFF  665,66B
....................          ymax = y1; 
17FE:  MOVFF  663,66C
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
1802:  MOVF   x69,W
1804:  SUBWF  x6A,W
1806:  BNC   182C
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
1808:  MOVFF  66B,668
180C:  MOVF   x68,W
180E:  SUBWF  x6C,W
1810:  BNC   1828
....................          { 
....................             glcd_pixel(xmin, i, color); 
1812:  MOVFF  669,67E
1816:  MOVFF  668,67F
181A:  MOVFF  667,680
181E:  MOVLB  0
1820:  RCALL  141A
....................          } 
1822:  MOVLB  6
1824:  INCF   x68,F
1826:  BRA    180C
....................       } 
1828:  INCF   x69,F
182A:  BRA    1802
....................    } 
....................    else 
182C:  BRA    188A
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
182E:  MOVFF  662,66E
1832:  MOVFF  663,66F
1836:  MOVFF  664,670
183A:  MOVFF  663,671
183E:  MOVFF  667,672
1842:  MOVLB  0
1844:  RCALL  168E
....................       glcd_line(x1, y2, x2, y2, color); 
1846:  MOVFF  662,66E
184A:  MOVFF  665,66F
184E:  MOVFF  664,670
1852:  MOVFF  665,671
1856:  MOVFF  667,672
185A:  RCALL  168E
....................       glcd_line(x1, y1, x1, y2, color); 
185C:  MOVFF  662,66E
1860:  MOVFF  663,66F
1864:  MOVFF  662,670
1868:  MOVFF  665,671
186C:  MOVFF  667,672
1870:  RCALL  168E
....................       glcd_line(x2, y1, x2, y2, color); 
1872:  MOVFF  664,66E
1876:  MOVFF  663,66F
187A:  MOVFF  664,670
187E:  MOVFF  665,671
1882:  MOVFF  667,672
1886:  RCALL  168E
1888:  MOVLB  6
....................    } 
.................... } 
188A:  MOVLB  0
188C:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
1F6E:  MOVLB  6
1F70:  CLRF   x67
....................    b = radius; 
1F72:  MOVFF  664,668
....................    P = 1 - radius; 
1F76:  MOVLW  01
1F78:  BSF    FD8.0
1F7A:  SUBFWB x64,W
1F7C:  MOVWF  x69
....................  
....................    do 
....................    { 
....................       if(fill) 
1F7E:  MOVF   x65,F
1F80:  BZ    204C
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
1F82:  MOVF   x67,W
1F84:  SUBWF  x62,W
1F86:  MOVWF  x6A
1F88:  MOVF   x68,W
1F8A:  ADDWF  x63,W
1F8C:  MOVWF  x6B
1F8E:  MOVF   x67,W
1F90:  ADDWF  x62,W
1F92:  MOVWF  x6C
1F94:  MOVF   x68,W
1F96:  ADDWF  x63,W
1F98:  MOVWF  x6D
1F9A:  MOVFF  66A,66E
1F9E:  MOVFF  66B,66F
1FA2:  MOVFF  66C,670
1FA6:  MOVWF  x71
1FA8:  MOVFF  666,672
1FAC:  MOVLB  0
1FAE:  CALL   168E
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
1FB2:  MOVLB  6
1FB4:  MOVF   x67,W
1FB6:  SUBWF  x62,W
1FB8:  MOVWF  x6A
1FBA:  MOVF   x68,W
1FBC:  SUBWF  x63,W
1FBE:  MOVWF  x6B
1FC0:  MOVF   x67,W
1FC2:  ADDWF  x62,W
1FC4:  MOVWF  x6C
1FC6:  MOVF   x68,W
1FC8:  SUBWF  x63,W
1FCA:  MOVWF  x6D
1FCC:  MOVFF  66A,66E
1FD0:  MOVFF  66B,66F
1FD4:  MOVFF  66C,670
1FD8:  MOVWF  x71
1FDA:  MOVFF  666,672
1FDE:  MOVLB  0
1FE0:  CALL   168E
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
1FE4:  MOVLB  6
1FE6:  MOVF   x68,W
1FE8:  SUBWF  x62,W
1FEA:  MOVWF  x6A
1FEC:  MOVF   x67,W
1FEE:  ADDWF  x63,W
1FF0:  MOVWF  x6B
1FF2:  MOVF   x68,W
1FF4:  ADDWF  x62,W
1FF6:  MOVWF  x6C
1FF8:  MOVF   x67,W
1FFA:  ADDWF  x63,W
1FFC:  MOVWF  x6D
1FFE:  MOVFF  66A,66E
2002:  MOVFF  66B,66F
2006:  MOVFF  66C,670
200A:  MOVWF  x71
200C:  MOVFF  666,672
2010:  MOVLB  0
2012:  CALL   168E
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
2016:  MOVLB  6
2018:  MOVF   x68,W
201A:  SUBWF  x62,W
201C:  MOVWF  x6A
201E:  MOVF   x67,W
2020:  SUBWF  x63,W
2022:  MOVWF  x6B
2024:  MOVF   x68,W
2026:  ADDWF  x62,W
2028:  MOVWF  x6C
202A:  MOVF   x67,W
202C:  SUBWF  x63,W
202E:  MOVWF  x6D
2030:  MOVFF  66A,66E
2034:  MOVFF  66B,66F
2038:  MOVFF  66C,670
203C:  MOVWF  x71
203E:  MOVFF  666,672
2042:  MOVLB  0
2044:  CALL   168E
....................       } 
....................       else 
2048:  BRA    213A
204A:  MOVLB  6
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
204C:  MOVF   x62,W
204E:  ADDWF  x67,W
2050:  MOVWF  x6A
2052:  MOVF   x63,W
2054:  ADDWF  x68,W
2056:  MOVWF  x6B
2058:  MOVFF  66A,67E
205C:  MOVWF  x7F
205E:  MOVFF  666,680
2062:  MOVLB  0
2064:  CALL   141A
....................          glcd_pixel(b+x, a+y, color); 
2068:  MOVLB  6
206A:  MOVF   x62,W
206C:  ADDWF  x68,W
206E:  MOVWF  x6A
2070:  MOVF   x63,W
2072:  ADDWF  x67,W
2074:  MOVWF  x6B
2076:  MOVFF  66A,67E
207A:  MOVWF  x7F
207C:  MOVFF  666,680
2080:  MOVLB  0
2082:  CALL   141A
....................          glcd_pixel(x-a, b+y, color); 
2086:  MOVLB  6
2088:  MOVF   x67,W
208A:  SUBWF  x62,W
208C:  MOVWF  x6A
208E:  MOVF   x63,W
2090:  ADDWF  x68,W
2092:  MOVWF  x6B
2094:  MOVFF  66A,67E
2098:  MOVWF  x7F
209A:  MOVFF  666,680
209E:  MOVLB  0
20A0:  CALL   141A
....................          glcd_pixel(x-b, a+y, color); 
20A4:  MOVLB  6
20A6:  MOVF   x68,W
20A8:  SUBWF  x62,W
20AA:  MOVWF  x6A
20AC:  MOVF   x63,W
20AE:  ADDWF  x67,W
20B0:  MOVWF  x6B
20B2:  MOVFF  66A,67E
20B6:  MOVWF  x7F
20B8:  MOVFF  666,680
20BC:  MOVLB  0
20BE:  CALL   141A
....................          glcd_pixel(b+x, y-a, color); 
20C2:  MOVLB  6
20C4:  MOVF   x62,W
20C6:  ADDWF  x68,W
20C8:  MOVWF  x6A
20CA:  MOVF   x67,W
20CC:  SUBWF  x63,W
20CE:  MOVWF  x6B
20D0:  MOVFF  66A,67E
20D4:  MOVWF  x7F
20D6:  MOVFF  666,680
20DA:  MOVLB  0
20DC:  CALL   141A
....................          glcd_pixel(a+x, y-b, color); 
20E0:  MOVLB  6
20E2:  MOVF   x62,W
20E4:  ADDWF  x67,W
20E6:  MOVWF  x6A
20E8:  MOVF   x68,W
20EA:  SUBWF  x63,W
20EC:  MOVWF  x6B
20EE:  MOVFF  66A,67E
20F2:  MOVWF  x7F
20F4:  MOVFF  666,680
20F8:  MOVLB  0
20FA:  CALL   141A
....................          glcd_pixel(x-a, y-b, color); 
20FE:  MOVLB  6
2100:  MOVF   x67,W
2102:  SUBWF  x62,W
2104:  MOVWF  x6A
2106:  MOVF   x68,W
2108:  SUBWF  x63,W
210A:  MOVWF  x6B
210C:  MOVFF  66A,67E
2110:  MOVWF  x7F
2112:  MOVFF  666,680
2116:  MOVLB  0
2118:  CALL   141A
....................          glcd_pixel(x-b, y-a, color); 
211C:  MOVLB  6
211E:  MOVF   x68,W
2120:  SUBWF  x62,W
2122:  MOVWF  x6A
2124:  MOVF   x67,W
2126:  SUBWF  x63,W
2128:  MOVWF  x6B
212A:  MOVFF  66A,67E
212E:  MOVWF  x7F
2130:  MOVFF  666,680
2134:  MOVLB  0
2136:  CALL   141A
....................       } 
....................  
....................       if(P < 0) 
213A:  MOVLB  6
213C:  BTFSC  x69.7
213E:  BRA    2142
2140:  BRA    215E
....................          P += 3 + 2 * a++; 
2142:  MOVF   x67,W
2144:  INCF   x67,F
2146:  MOVWF  x6A
2148:  MOVLW  02
214A:  MOVWF  x6B
214C:  MOVFF  66A,66C
2150:  MOVLB  0
2152:  RCALL  1F20
2154:  MOVF   01,W
2156:  ADDLW  03
2158:  MOVLB  6
215A:  ADDWF  x69,F
....................       else 
215C:  BRA    2180
....................          P += 5 + 2 * (a++ - b--); 
215E:  MOVF   x67,W
2160:  INCF   x67,F
2162:  MOVWF  x6A
2164:  MOVF   x68,W
2166:  DECF   x68,F
2168:  SUBWF  x6A,W
216A:  MOVWF  x6A
216C:  MOVLW  02
216E:  MOVWF  x6B
2170:  MOVFF  66A,66C
2174:  MOVLB  0
2176:  RCALL  1F20
2178:  MOVF   01,W
217A:  ADDLW  05
217C:  MOVLB  6
217E:  ADDWF  x69,F
....................     } while(a <= b); 
2180:  MOVF   x67,W
2182:  XORLW  80
2184:  MOVWF  00
2186:  MOVF   x68,W
2188:  XORLW  80
218A:  SUBWF  00,W
218C:  BTFSC  FD8.2
218E:  BRA    1F7E
2190:  BTFSS  FD8.0
2192:  BRA    1F7E
.................... } 
2194:  MOVLB  0
2196:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
14D6:  MOVFF  665,03
14DA:  MOVLB  6
14DC:  MOVFF  664,FE9
14E0:  MOVFF  665,FEA
14E4:  MOVF   FEF,F
14E6:  BTFSC  FD8.2
14E8:  BRA    168A
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
14EA:  MOVFF  665,03
14EE:  MOVFF  664,FE9
14F2:  MOVFF  665,FEA
14F6:  MOVF   FEF,W
14F8:  SUBLW  52
14FA:  BNC   154A
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
14FC:  MOVFF  665,03
1500:  MOVFF  664,FE9
1504:  MOVFF  665,FEA
1508:  MOVLW  20
150A:  SUBWF  FEF,W
150C:  MULLW  05
150E:  MOVF   FF3,W
1510:  CLRF   03
1512:  MOVWF  x71
1514:  MOVLW  06
1516:  MOVWF  FEA
1518:  MOVLW  6C
151A:  MOVWF  FE9
151C:  CLRF   x75
151E:  MOVFF  671,674
1522:  MOVFF  FF2,672
1526:  BCF    FF2.7
1528:  MOVLW  05
152A:  MOVWF  01
152C:  CLRF   FF7
152E:  MOVF   x71,W
1530:  MOVLB  0
1532:  CALL   0096
1536:  TBLRD*-
1538:  TBLRD*+
153A:  MOVFF  FF5,FEE
153E:  DECFSZ 01,F
1540:  BRA    1538
1542:  MOVLB  6
1544:  BTFSC  x72.7
1546:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
1548:  BRA    15B4
154A:  MOVFF  665,03
154E:  MOVFF  664,FE9
1552:  MOVFF  665,FEA
1556:  MOVF   FEF,W
1558:  SUBLW  7E
155A:  BNC   15AA
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
155C:  MOVFF  665,03
1560:  MOVFF  664,FE9
1564:  MOVFF  665,FEA
1568:  MOVLW  53
156A:  SUBWF  FEF,W
156C:  MULLW  05
156E:  MOVF   FF3,W
1570:  CLRF   03
1572:  MOVWF  x71
1574:  MOVLW  06
1576:  MOVWF  FEA
1578:  MOVLW  6C
157A:  MOVWF  FE9
157C:  CLRF   x75
157E:  MOVFF  671,674
1582:  MOVFF  FF2,672
1586:  BCF    FF2.7
1588:  MOVLW  05
158A:  MOVWF  01
158C:  CLRF   FF7
158E:  MOVF   x71,W
1590:  MOVLB  0
1592:  CALL   01B0
1596:  TBLRD*-
1598:  TBLRD*+
159A:  MOVFF  FF5,FEE
159E:  DECFSZ 01,F
15A0:  BRA    1598
15A2:  MOVLB  6
15A4:  BTFSC  x72.7
15A6:  BSF    FF2.7
....................       else 
15A8:  BRA    15B4
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
15AA:  CLRF   x6C
15AC:  CLRF   x6D
15AE:  CLRF   x6E
15B0:  CLRF   x6F
15B2:  CLRF   x70
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
15B4:  MOVFF  665,03
15B8:  MOVF   x64,W
15BA:  MOVWF  FE9
15BC:  MOVFF  03,FEA
15C0:  MOVF   FEF,W
15C2:  XORLW  0A
15C4:  MOVLB  0
15C6:  BZ    15CE
15C8:  XORLW  07
15CA:  BZ    15DE
15CC:  BRA    15E4
....................          case '\n': 
....................             y += 7*size + 1; 
15CE:  MOVLB  6
15D0:  MOVF   x66,W
15D2:  MULLW  07
15D4:  MOVF   FF3,W
15D6:  ADDLW  01
15D8:  ADDWF  x63,F
....................             continue; 
15DA:  BRA    167C
15DC:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
15DE:  MOVLB  6
15E0:  CLRF   x62
....................             continue; 
15E2:  BRA    167C
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
15E4:  MOVLB  6
15E6:  MOVF   x66,W
15E8:  MULLW  05
15EA:  MOVF   FF3,W
15EC:  ADDWF  x62,W
15EE:  SUBLW  7F
15F0:  BC    15FE
....................       { 
....................          x = 0;                           // Set x at far left position 
15F2:  CLRF   x62
....................          y += 7*size + 1;                 // Set y at next position down 
15F4:  MOVF   x66,W
15F6:  MULLW  07
15F8:  MOVF   FF3,W
15FA:  ADDLW  01
15FC:  ADDWF  x63,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
15FE:  CLRF   x68
1600:  MOVF   x68,W
1602:  SUBLW  04
1604:  BNC   167C
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
1606:  CLRF   x69
1608:  MOVF   x69,W
160A:  SUBLW  06
160C:  BNC   1674
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
160E:  CLRF   03
1610:  MOVF   x68,W
1612:  ADDLW  6C
1614:  MOVWF  FE9
1616:  MOVLW  06
1618:  ADDWFC 03,W
161A:  MOVWF  FEA
161C:  MOVFF  FEF,671
1620:  MOVFF  671,00
1624:  MOVF   x69,W
1626:  MOVWF  01
1628:  BZ    1632
162A:  BCF    FD8.0
162C:  RRCF   00,F
162E:  DECFSZ 01,F
1630:  BRA    162A
1632:  BTFSS  00.0
1634:  BRA    1670
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
1636:  CLRF   x6A
1638:  MOVF   x66,W
163A:  SUBWF  x6A,W
163C:  BC    1670
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
163E:  CLRF   x6B
1640:  MOVF   x66,W
1642:  SUBWF  x6B,W
1644:  BC    166C
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
1646:  MOVF   x6B,W
1648:  ADDWF  x62,W
164A:  MOVWF  x71
164C:  MOVF   x69,W
164E:  MULWF  x66
1650:  MOVF   FF3,W
1652:  ADDWF  x63,W
1654:  ADDWF  x6A,W
1656:  MOVWF  x72
1658:  MOVFF  671,67E
165C:  MOVWF  x7F
165E:  MOVFF  667,680
1662:  MOVLB  0
1664:  RCALL  141A
....................                   } 
1666:  MOVLB  6
1668:  INCF   x6B,F
166A:  BRA    1640
....................                } 
166C:  INCF   x6A,F
166E:  BRA    1638
....................             } 
....................          } 
1670:  INCF   x69,F
1672:  BRA    1608
....................       } 
1674:  INCF   x68,F
1676:  MOVF   x66,W
1678:  ADDWF  x62,F
167A:  BRA    1600
....................    } 
167C:  INCF   x64,F
167E:  BTFSC  FD8.2
1680:  INCF   x65,F
1682:  INCF   x62,F
1684:  MOVLB  0
1686:  BRA    14D6
1688:  MOVLB  6
.................... } 
168A:  MOVLB  0
168C:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Horno [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x00, 0x00, 0x0E, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x02, 0x00, 0x0E, 
.................... 0x60, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x05, 0x00, 0x0E, 
.................... 0x70, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x02, 0x00, 0x0E, 
.................... 0x60, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xE1, 0xC0, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x01, 0x80, 0x60, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x78, 0x10, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x06, 0x7C, 0x18, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0x7C, 0x08, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x3C, 0x04, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x10, 0x04, 0x0E, 
.................... 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x0C, 0xE4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x2D, 0xF4, 0x0E, 
.................... 0x02, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x63, 0xF4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0xF1, 0xE4, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x70, 0x10, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x30, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xC0, 0xC0, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x7F, 0x80, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
.................... // Definición de teclado - NO 
.................... #define   ARRIBA        input(PIN_A5) 
.................... #define   ABAJO         input(PIN_E0) 
.................... #define   DERECHA       input(PIN_E1) 
.................... #define   IZQUIERDA     input(PIN_E2) 
....................  
.................... #define   DOOR          input(PIN_A4) 
.................... #define   TERM          input(PIN_A3) 
....................  
....................  
.................... // Definición de Salidas 
.................... #define   Rele1_on          output_bit(PIN_C0,1) 
.................... #define   Rele1_off         output_bit(PIN_C0,0) 
.................... //#define   Vent_on           output_bit(PIN_C1,1) 
.................... //#define   Vent_off          output_bit(PIN_C1,0) 
.................... #define   SSR_on            output_bit(PIN_C2,1) 
.................... #define   SSR_off           output_bit(PIN_C2,0) 
.................... #define   Buzzer_on         output_bit(PIN_B7,1) 
.................... #define   Buzzer_off        output_bit(PIN_B7,0) 
.................... #define   Rele2_on          output_bit(PIN_C6,1) 
.................... #define   Rele2_off         output_bit(PIN_C6,0) 
.................... #define   Rele3_on          output_bit(PIN_C7,1) 
.................... #define   Rele3_off         output_bit(PIN_C7,0) 
....................  
.................... float promedio[90]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float X[2]={0.0,0.0}; 
.................... short UP=0,DOWN=0,RIGHT=0,LEFT=0,flagup=0,flagdn=0,flagrt=0,flaglt=0,Desconectado=0; 
.................... int8 h=0,l=0,Ajuste=0,Ajusten=0,MediaMovil=10,tiemporecta=0,flag_ganancia=0,Velocidad=3,Lectura2=0,Enfria=0,Controlando=0,Ajusto=10; 
.................... short visual=1,Lectura=0,flag_ajuste=0,flag_ajuste2=0; 
.................... short flag_clear2=0,flag_clear3=0,flag_tiempocalentamiento=0,flag_display=0,flag_setpoint=0; 
.................... int8 y=0,tiemporeset=0; 
.................... int8 Menu=0, unidad=1,i=0,Pausa=0,TiempoControl=0; 
.................... int8 Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,decimal=0,entero=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,tinicio=0,tiempocalentamiento=0,tiemposetpoint=0,Tp=0,Tc=0; 
.................... float Potencia=0.0,Tpulsomin=0.0,Gananciamax=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float V0=0.0,R1=10000.0,Pt,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=2.0,desvio=1.0,Coeficiente=44.5; 
.................... float Aumento=0.0,Temperatura=0.0,Saturacion=10.0,TpulsoMax=0.0,Setpoint=0,Temperatura1=0,Temperatura2=0,Temperatura3=0,Temporal=0.0; 
.................... float a=0.0011,b=2.3302,c=-244.0723; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void ActualizaRecta(){ 
....................    X[y]=Temperatura; 
*
2C48:  MOVLB  5
2C4A:  MOVF   x95,W
2C4C:  MULLW  04
2C4E:  MOVF   FF3,W
2C50:  CLRF   03
2C52:  ADDLW  7E
2C54:  MOVWF  FE9
2C56:  MOVLW  05
2C58:  ADDWFC 03,W
2C5A:  MOVWF  FEA
2C5C:  MOVFF  601,FEF
2C60:  MOVFF  602,FEC
2C64:  MOVFF  603,FEC
2C68:  MOVFF  604,FEC
....................    y++; 
2C6C:  INCF   x95,F
....................    if(y>=2) 
2C6E:  MOVF   x95,W
2C70:  SUBLW  01
2C72:  BC    2CB0
....................    { 
....................       y=0; 
2C74:  CLRF   x95
....................       Aumento=X[1]-X[0]; 
2C76:  BSF    FD8.1
2C78:  MOVFF  585,655
2C7C:  MOVFF  584,654
2C80:  MOVFF  583,653
2C84:  MOVFF  582,652
2C88:  MOVFF  581,659
2C8C:  MOVFF  580,658
2C90:  MOVFF  57F,657
2C94:  MOVFF  57E,656
2C98:  MOVLB  0
2C9A:  CALL   0F2E
2C9E:  MOVFF  03,600
2CA2:  MOVFF  02,5FF
2CA6:  MOVFF  01,5FE
2CAA:  MOVFF  00,5FD
2CAE:  MOVLB  5
....................    } 
.................... } 
2CB0:  MOVLB  0
2CB2:  GOTO   2CC2 (RETURN)
....................  
.................... void Velocidades(int x){ 
....................  
.................... if(x==0) 
*
0D72:  MOVLB  6
0D74:  MOVF   x4D,F
0D76:  BNZ   0D7A
.................... { 
....................    set_pwm2_duty(0); 
0D78:  CLRF   FBB
.................... } 
....................  
.................... if(x==1) 
0D7A:  DECFSZ x4D,W
0D7C:  BRA    0D82
.................... { 
....................    set_pwm2_duty(128); 
0D7E:  MOVLW  80
0D80:  MOVWF  FBB
.................... } 
....................  
.................... if(x==2) 
0D82:  MOVF   x4D,W
0D84:  SUBLW  02
0D86:  BNZ   0D8C
.................... { 
....................    set_pwm2_duty(180); 
0D88:  MOVLW  B4
0D8A:  MOVWF  FBB
.................... } 
....................  
.................... if(x==3) 
0D8C:  MOVF   x4D,W
0D8E:  SUBLW  03
0D90:  BNZ   0D96
.................... { 
....................    set_pwm2_duty(255); 
0D92:  MOVLW  FF
0D94:  MOVWF  FBB
.................... } 
....................  
.................... } 
0D96:  MOVLB  0
0D98:  RETLW  00
....................  
.................... void Teclado(void){ 
....................  
....................    if(ARRIBA) 
*
1E8E:  BSF    F92.5
1E90:  BTFSS  F80.5
1E92:  BRA    1EA0
....................    { 
....................       if(!flagup) 
1E94:  MOVLB  5
1E96:  BTFSC  x86.4
1E98:  BRA    1E9E
....................       { 
....................          UP=1; 
1E9A:  BSF    x86.0
....................          flagup=1; 
1E9C:  BSF    x86.4
1E9E:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!ARRIBA) 
1EA0:  BSF    F92.5
1EA2:  BTFSC  F80.5
1EA4:  BRA    1EB2
....................    { 
....................       if(flagup) 
1EA6:  MOVLB  5
1EA8:  BTFSS  x86.4
1EAA:  BRA    1EB0
....................       { 
....................          UP=1; 
1EAC:  BSF    x86.0
....................          flagup=0; 
1EAE:  BCF    x86.4
1EB0:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(ABAJO) 
1EB2:  BSF    F96.0
1EB4:  BTFSS  F84.0
1EB6:  BRA    1EC4
....................    { 
....................       if(!flagdn) 
1EB8:  MOVLB  5
1EBA:  BTFSC  x86.5
1EBC:  BRA    1EC2
....................       { 
....................          DOWN=1; 
1EBE:  BSF    x86.1
....................          flagdn=1; 
1EC0:  BSF    x86.5
1EC2:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!ABAJO) 
1EC4:  BSF    F96.0
1EC6:  BTFSC  F84.0
1EC8:  BRA    1ED6
....................    { 
....................       if(flagdn) 
1ECA:  MOVLB  5
1ECC:  BTFSS  x86.5
1ECE:  BRA    1ED4
....................       { 
....................          DOWN=1; 
1ED0:  BSF    x86.1
....................          flagdn=0; 
1ED2:  BCF    x86.5
1ED4:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(DERECHA) 
1ED6:  BSF    F96.1
1ED8:  BTFSS  F84.1
1EDA:  BRA    1EE8
....................    { 
....................       if(!flagrt) 
1EDC:  MOVLB  5
1EDE:  BTFSC  x86.6
1EE0:  BRA    1EE6
....................       { 
....................          RIGHT=1; 
1EE2:  BSF    x86.2
....................          flagrt=1; 
1EE4:  BSF    x86.6
1EE6:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!DERECHA) 
1EE8:  BSF    F96.1
1EEA:  BTFSC  F84.1
1EEC:  BRA    1EFA
....................    { 
....................       if(flagrt) 
1EEE:  MOVLB  5
1EF0:  BTFSS  x86.6
1EF2:  BRA    1EF8
....................       { 
....................          RIGHT=1; 
1EF4:  BSF    x86.2
....................          flagrt=0; 
1EF6:  BCF    x86.6
1EF8:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(IZQUIERDA) 
1EFA:  BSF    F96.2
1EFC:  BTFSS  F84.2
1EFE:  BRA    1F0C
....................    { 
....................       if(!flaglt) 
1F00:  MOVLB  5
1F02:  BTFSC  x86.7
1F04:  BRA    1F0A
....................       { 
....................          LEFT=1; 
1F06:  BSF    x86.3
....................          flaglt=1; 
1F08:  BSF    x86.7
1F0A:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!IZQUIERDA) 
1F0C:  BSF    F96.2
1F0E:  BTFSC  F84.2
1F10:  BRA    1F1C
....................    { 
....................       if(flaglt) 
1F12:  MOVLB  5
1F14:  BTFSS  x86.7
1F16:  BRA    1F1C
....................       { 
....................          LEFT=1; 
1F18:  BSF    x86.3
....................          flaglt=0; 
1F1A:  BCF    x86.7
1F1C:  MOVLB  0
....................       } 
....................    } 
.................... } 
1F1E:  RETLW  00
....................  
.................... // Funcion para conversor analogo-digital 
.................... float sensores(int x){ 
.................... float y;set_adc_channel(x);delay_ms(1);y=read_adc();return (y); 
*
1B6A:  MOVLB  6
1B6C:  RLCF   x4E,W
1B6E:  MOVWF  00
1B70:  RLCF   00,F
1B72:  MOVLW  FC
1B74:  ANDWF  00,F
1B76:  MOVFF  00,01
1B7A:  MOVF   FC2,W
1B7C:  ANDLW  C3
1B7E:  IORWF  00,W
1B80:  MOVWF  FC2
1B82:  MOVLW  01
1B84:  MOVWF  x53
1B86:  MOVLB  0
1B88:  CALL   0D48
1B8C:  BSF    FC2.1
1B8E:  BTFSC  FC2.1
1B90:  BRA    1B8E
1B92:  MOVFF  FC4,654
1B96:  MOVFF  FC3,653
1B9A:  MOVLB  0
1B9C:  CALL   0D9A
1BA0:  MOVFF  03,652
1BA4:  MOVFF  02,651
1BA8:  MOVFF  01,650
1BAC:  MOVFF  00,64F
1BB0:  MOVFF  64F,00
1BB4:  MOVFF  650,01
1BB8:  MOVFF  651,02
1BBC:  MOVFF  652,03
.................... } 
1BC0:  GOTO   1CEE (RETURN)
.................... float Leer_Sensor(int media) 
.................... { 
....................    Prom=0.0; 
*
1CDC:  MOVLB  5
1CDE:  CLRF   xE8
1CE0:  CLRF   xE7
1CE2:  CLRF   xE6
1CE4:  CLRF   xE5
....................    V0 = sensores(0);   //Lectura de Divisor de Voltaje de PT100 con resistencia de 6.18k (+-2%) 
1CE6:  MOVLB  6
1CE8:  CLRF   x4E
1CEA:  MOVLB  0
1CEC:  BRA    1B6A
1CEE:  MOVFF  03,5D0
1CF2:  MOVFF  02,5CF
1CF6:  MOVFF  01,5CE
1CFA:  MOVFF  00,5CD
....................    Temperature=(0.1272*V0)-25.002; 
1CFE:  MOVLW  B8
1D00:  MOVLB  6
1D02:  MOVWF  x70
1D04:  MOVLW  40
1D06:  MOVWF  x6F
1D08:  MOVLW  02
1D0A:  MOVWF  x6E
1D0C:  MOVLW  7C
1D0E:  MOVWF  x6D
1D10:  MOVFF  5D0,674
1D14:  MOVFF  5CF,673
1D18:  MOVFF  5CE,672
1D1C:  MOVFF  5CD,671
1D20:  MOVLB  0
1D22:  RCALL  1BC4
1D24:  MOVFF  00,64E
1D28:  MOVFF  01,64F
1D2C:  MOVFF  02,650
1D30:  MOVFF  03,651
1D34:  BSF    FD8.1
1D36:  MOVFF  03,655
1D3A:  MOVFF  02,654
1D3E:  MOVFF  01,653
1D42:  MOVFF  00,652
1D46:  MOVLW  19
1D48:  MOVLB  6
1D4A:  MOVWF  x59
1D4C:  MOVLW  04
1D4E:  MOVWF  x58
1D50:  MOVLW  48
1D52:  MOVWF  x57
1D54:  MOVLW  83
1D56:  MOVWF  x56
1D58:  MOVLB  0
1D5A:  CALL   0F2E
1D5E:  MOVFF  03,5EC
1D62:  MOVFF  02,5EB
1D66:  MOVFF  01,5EA
1D6A:  MOVFF  00,5E9
....................     
....................    if(l>(media-1)) 
1D6E:  MOVLW  01
1D70:  MOVLB  6
1D72:  SUBWF  x4D,W
1D74:  MOVLB  5
1D76:  SUBWF  x89,W
1D78:  BZ    1D7E
1D7A:  BNC   1D7E
....................    {l=0;} 
1D7C:  CLRF   x89
....................    promedio[l]=Temperature;l++; 
1D7E:  MOVLB  6
1D80:  CLRF   x52
1D82:  MOVFF  589,651
1D86:  CLRF   x54
1D88:  MOVLW  04
1D8A:  MOVWF  x53
1D8C:  MOVLB  0
1D8E:  RCALL  1CBA
1D90:  MOVF   01,W
1D92:  ADDLW  16
1D94:  MOVWF  FE9
1D96:  MOVLW  04
1D98:  ADDWFC 02,W
1D9A:  MOVWF  FEA
1D9C:  MOVFF  5E9,FEF
1DA0:  MOVFF  5EA,FEC
1DA4:  MOVFF  5EB,FEC
1DA8:  MOVFF  5EC,FEC
1DAC:  MOVLB  5
1DAE:  INCF   x89,F
....................    //promedio[l]=V0;l++; 
....................           
....................    for(h=0;h<media;h++) 
1DB0:  CLRF   x88
1DB2:  MOVLB  6
1DB4:  MOVF   x4D,W
1DB6:  MOVLB  5
1DB8:  SUBWF  x88,W
1DBA:  BC    1E3A
....................    { 
....................       Prom+=promedio[h]; 
1DBC:  MOVLB  6
1DBE:  CLRF   x52
1DC0:  MOVFF  588,651
1DC4:  CLRF   x54
1DC6:  MOVLW  04
1DC8:  MOVWF  x53
1DCA:  MOVLB  0
1DCC:  RCALL  1CBA
1DCE:  MOVFF  02,03
1DD2:  MOVF   01,W
1DD4:  ADDLW  16
1DD6:  MOVWF  FE9
1DD8:  MOVLW  04
1DDA:  ADDWFC 02,W
1DDC:  MOVWF  FEA
1DDE:  MOVFF  FEF,00
1DE2:  MOVFF  FEC,01
1DE6:  MOVFF  FEC,02
1DEA:  MOVFF  FEC,03
1DEE:  MOVFF  FEA,64F
1DF2:  MOVFF  FE9,64E
1DF6:  BCF    FD8.1
1DF8:  MOVFF  5E8,655
1DFC:  MOVFF  5E7,654
1E00:  MOVFF  5E6,653
1E04:  MOVFF  5E5,652
1E08:  MOVFF  03,659
1E0C:  MOVFF  02,658
1E10:  MOVFF  01,657
1E14:  MOVFF  00,656
1E18:  CALL   0F2E
1E1C:  MOVFF  64F,FEA
1E20:  MOVFF  64E,FE9
1E24:  MOVFF  03,5E8
1E28:  MOVFF  02,5E7
1E2C:  MOVFF  01,5E6
1E30:  MOVFF  00,5E5
....................    }  
1E34:  MOVLB  5
1E36:  INCF   x88,F
1E38:  BRA    1DB2
....................    Prom=Prom/media;    
1E3A:  MOVLB  6
1E3C:  CLRF   x54
1E3E:  MOVFF  64D,653
1E42:  MOVLB  0
1E44:  CALL   0D9A
1E48:  MOVFF  5E8,651
1E4C:  MOVFF  5E7,650
1E50:  MOVFF  5E6,64F
1E54:  MOVFF  5E5,64E
1E58:  MOVFF  03,655
1E5C:  MOVFF  02,654
1E60:  MOVFF  01,653
1E64:  MOVFF  00,652
1E68:  CALL   0DD0
1E6C:  MOVFF  03,5E8
1E70:  MOVFF  02,5E7
1E74:  MOVFF  01,5E6
1E78:  MOVFF  00,5E5
....................    return Prom; 
1E7C:  MOVFF  5E5,00
1E80:  MOVFF  5E6,01
1E84:  MOVFF  5E7,02
1E88:  MOVFF  5E8,03
....................    //return Temperature; 
.................... } 
1E8C:  RETLW  00
....................  
.................... void Controla(){ 
.................... //-------------------------------Control de Calentamiento------------------------------------------------------------//          
....................    if(tiemporecta>=40) 
*
2CB6:  MOVLB  5
2CB8:  MOVF   x8D,W
2CBA:  SUBLW  27
2CBC:  BC    2CC6
....................    { 
....................       ActualizaRecta(); 
2CBE:  MOVLB  0
2CC0:  BRA    2C48
....................       tiemporecta=0; 
2CC2:  MOVLB  5
2CC4:  CLRF   x8D
....................    }  
....................    
....................    if(Enfria==1) 
2CC6:  DECFSZ x91,W
2CC8:  BRA    302E
....................    { 
....................       error=Setpoint-desvio-Temperatura;      // Cálculo del error ****** 
2CCA:  BSF    FD8.1
2CCC:  MOVFF  610,655
2CD0:  MOVFF  60F,654
2CD4:  MOVFF  60E,653
2CD8:  MOVFF  60D,652
2CDC:  MOVFF  5F8,659
2CE0:  MOVFF  5F7,658
2CE4:  MOVFF  5F6,657
2CE8:  MOVFF  5F5,656
2CEC:  MOVLB  0
2CEE:  CALL   0F2E
2CF2:  MOVFF  00,64D
2CF6:  MOVFF  01,64E
2CFA:  MOVFF  02,64F
2CFE:  MOVFF  03,650
2D02:  BSF    FD8.1
2D04:  MOVFF  03,655
2D08:  MOVFF  02,654
2D0C:  MOVFF  01,653
2D10:  MOVFF  00,652
2D14:  MOVFF  604,659
2D18:  MOVFF  603,658
2D1C:  MOVFF  602,657
2D20:  MOVFF  601,656
2D24:  CALL   0F2E
2D28:  MOVFF  03,5E4
2D2C:  MOVFF  02,5E3
2D30:  MOVFF  01,5E2
2D34:  MOVFF  00,5E1
....................        
....................       if(error>-1.0 && Aumento>-0.2) 
2D38:  MOVLB  6
2D3A:  CLRF   x50
2D3C:  CLRF   x4F
2D3E:  MOVLW  80
2D40:  MOVWF  x4E
2D42:  MOVLW  7F
2D44:  MOVWF  x4D
2D46:  MOVFF  5E4,654
2D4A:  MOVFF  5E3,653
2D4E:  MOVFF  5E2,652
2D52:  MOVFF  5E1,651
2D56:  MOVLB  0
2D58:  CALL   11A6
2D5C:  BNC   2DEA
2D5E:  MOVLW  CD
2D60:  MOVLB  6
2D62:  MOVWF  x50
2D64:  MOVLW  CC
2D66:  MOVWF  x4F
2D68:  MOVWF  x4E
2D6A:  MOVLW  7C
2D6C:  MOVWF  x4D
2D6E:  MOVFF  600,654
2D72:  MOVFF  5FF,653
2D76:  MOVFF  5FE,652
2D7A:  MOVFF  5FD,651
2D7E:  MOVLB  0
2D80:  CALL   11A6
2D84:  BNC   2DEA
....................       { 
....................          if(Potencia<90.0) 
2D86:  MOVFF  5B4,650
2D8A:  MOVFF  5B3,64F
2D8E:  MOVFF  5B2,64E
2D92:  MOVFF  5B1,64D
2D96:  MOVLB  6
2D98:  CLRF   x54
2D9A:  CLRF   x53
2D9C:  MOVLW  34
2D9E:  MOVWF  x52
2DA0:  MOVLW  85
2DA2:  MOVWF  x51
2DA4:  MOVLB  0
2DA6:  CALL   11A6
2DAA:  BNC   2DEA
....................          { 
....................             if(TiempoControl>=80) 
2DAC:  MOVLB  5
2DAE:  MOVF   x9B,W
2DB0:  SUBLW  4F
2DB2:  BC    2DEC
....................             { 
....................                TiempoControl=0; 
2DB4:  CLRF   x9B
....................                Ganancia+=0.5; 
2DB6:  BCF    FD8.1
2DB8:  MOVFF  5F4,655
2DBC:  MOVFF  5F3,654
2DC0:  MOVFF  5F2,653
2DC4:  MOVFF  5F1,652
2DC8:  MOVLB  6
2DCA:  CLRF   x59
2DCC:  CLRF   x58
2DCE:  CLRF   x57
2DD0:  MOVLW  7E
2DD2:  MOVWF  x56
2DD4:  MOVLB  0
2DD6:  CALL   0F2E
2DDA:  MOVFF  03,5F4
2DDE:  MOVFF  02,5F3
2DE2:  MOVFF  01,5F2
2DE6:  MOVFF  00,5F1
2DEA:  MOVLB  5
....................             } 
....................          } 
....................       } 
....................     
....................       if(error>0.0)     // Anti Wind_DOWN 
2DEC:  MOVLB  6
2DEE:  CLRF   x50
2DF0:  CLRF   x4F
2DF2:  CLRF   x4E
2DF4:  CLRF   x4D
2DF6:  MOVFF  5E4,654
2DFA:  MOVFF  5E3,653
2DFE:  MOVFF  5E2,652
2E02:  MOVFF  5E1,651
2E06:  MOVLB  0
2E08:  CALL   11A6
2E0C:  BNC   2E18
....................       { 
....................          error=0.0; 
2E0E:  MOVLB  5
2E10:  CLRF   xE4
2E12:  CLRF   xE3
2E14:  CLRF   xE2
2E16:  CLRF   xE1
....................       } 
....................       error=error*-1.0; 
2E18:  MOVFF  5E4,670
2E1C:  MOVFF  5E3,66F
2E20:  MOVFF  5E2,66E
2E24:  MOVFF  5E1,66D
2E28:  MOVLB  6
2E2A:  CLRF   x74
2E2C:  CLRF   x73
2E2E:  MOVLW  80
2E30:  MOVWF  x72
2E32:  MOVLW  7F
2E34:  MOVWF  x71
2E36:  MOVLB  0
2E38:  CALL   1BC4
2E3C:  MOVFF  03,5E4
2E40:  MOVFF  02,5E3
2E44:  MOVFF  01,5E2
2E48:  MOVFF  00,5E1
....................        
....................       if(Ganancia<0.5) 
2E4C:  MOVFF  5F4,650
2E50:  MOVFF  5F3,64F
2E54:  MOVFF  5F2,64E
2E58:  MOVFF  5F1,64D
2E5C:  MOVLB  6
2E5E:  CLRF   x54
2E60:  CLRF   x53
2E62:  CLRF   x52
2E64:  MOVLW  7E
2E66:  MOVWF  x51
2E68:  MOVLB  0
2E6A:  CALL   11A6
2E6E:  BNC   2E7E
....................       { 
....................          Ganancia=0.5; 
2E70:  MOVLB  5
2E72:  CLRF   xF4
2E74:  CLRF   xF3
2E76:  CLRF   xF2
2E78:  MOVLW  7E
2E7A:  MOVWF  xF1
2E7C:  MOVLB  0
....................       } 
....................     
....................       tmp=error*Ganancia;  // Control Proporcional. 
2E7E:  MOVFF  5E4,670
2E82:  MOVFF  5E3,66F
2E86:  MOVFF  5E2,66E
2E8A:  MOVFF  5E1,66D
2E8E:  MOVFF  5F4,674
2E92:  MOVFF  5F3,673
2E96:  MOVFF  5F2,672
2E9A:  MOVFF  5F1,671
2E9E:  CALL   1BC4
2EA2:  MOVFF  03,5F0
2EA6:  MOVFF  02,5EF
2EAA:  MOVFF  01,5EE
2EAE:  MOVFF  00,5ED
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
2EB2:  MOVFF  610,650
2EB6:  MOVFF  60F,64F
2EBA:  MOVFF  60E,64E
2EBE:  MOVFF  60D,64D
2EC2:  MOVFF  5F0,654
2EC6:  MOVFF  5EF,653
2ECA:  MOVFF  5EE,652
2ECE:  MOVFF  5ED,651
2ED2:  CALL   11A6
2ED6:  BNC   2EE8
....................       { 
....................          tmp=Setpoint; 
2ED8:  MOVFF  610,5F0
2EDC:  MOVFF  60F,5EF
2EE0:  MOVFF  60E,5EE
2EE4:  MOVFF  60D,5ED
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
2EE8:  MOVFF  5F0,650
2EEC:  MOVFF  5EF,64F
2EF0:  MOVFF  5EE,64E
2EF4:  MOVFF  5ED,64D
2EF8:  MOVLB  6
2EFA:  CLRF   x54
2EFC:  CLRF   x53
2EFE:  CLRF   x52
2F00:  CLRF   x51
2F02:  MOVLB  0
2F04:  CALL   11A6
2F08:  BNC   2F16
....................       { 
....................          tmp=0.0; 
2F0A:  MOVLB  5
2F0C:  CLRF   xF0
2F0E:  CLRF   xEF
2F10:  CLRF   xEE
2F12:  CLRF   xED
2F14:  MOVLB  0
....................       } 
....................        
....................       // Tpulso(t)= Tciclo*(y(t)-ymin)/(ymax - ymin); calculo de ciclo util para control de resistencia.ymax=140.ymin=0; 
....................       // Tpulso es float, hay que pasar ese ciclo a una salida de un puerto usando el TMR1. 
....................       Tpulso=(tmp/Setpoint)*Tciclo;   
2F16:  MOVFF  5F0,651
2F1A:  MOVFF  5EF,650
2F1E:  MOVFF  5EE,64F
2F22:  MOVFF  5ED,64E
2F26:  MOVFF  610,655
2F2A:  MOVFF  60F,654
2F2E:  MOVFF  60E,653
2F32:  MOVFF  60D,652
2F36:  CALL   0DD0
2F3A:  MOVFF  00,64D
2F3E:  MOVFF  01,64E
2F42:  MOVFF  02,64F
2F46:  MOVFF  03,650
2F4A:  MOVFF  03,670
2F4E:  MOVFF  02,66F
2F52:  MOVFF  01,66E
2F56:  MOVFF  00,66D
2F5A:  MOVFF  5DC,674
2F5E:  MOVFF  5DB,673
2F62:  MOVFF  5DA,672
2F66:  MOVFF  5D9,671
2F6A:  CALL   1BC4
2F6E:  MOVFF  03,5E0
2F72:  MOVFF  02,5DF
2F76:  MOVFF  01,5DE
2F7A:  MOVFF  00,5DD
....................        
....................       if(tiempoctrl>=(int16)(Tciclo/0.005)) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
2F7E:  MOVFF  5DC,651
2F82:  MOVFF  5DB,650
2F86:  MOVFF  5DA,64F
2F8A:  MOVFF  5D9,64E
2F8E:  MOVLW  0A
2F90:  MOVLB  6
2F92:  MOVWF  x55
2F94:  MOVLW  D7
2F96:  MOVWF  x54
2F98:  MOVLW  23
2F9A:  MOVWF  x53
2F9C:  MOVLW  77
2F9E:  MOVWF  x52
2FA0:  MOVLB  0
2FA2:  CALL   0DD0
2FA6:  MOVFF  03,650
2FAA:  MOVFF  02,64F
2FAE:  MOVFF  01,64E
2FB2:  MOVFF  00,64D
2FB6:  CALL   2198
2FBA:  MOVF   02,W
2FBC:  MOVWF  03
2FBE:  MOVLB  5
2FC0:  SUBWF  xA6,W
2FC2:  BNC   2FD0
2FC4:  BNZ   2FCC
2FC6:  MOVF   01,W
2FC8:  SUBWF  xA5,W
2FCA:  BNC   2FD0
....................       { 
....................          tiempoctrl=0; 
2FCC:  CLRF   xA6
2FCE:  CLRF   xA5
....................       } // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
....................        
....................       if(tiempoctrl<(int16)(Tpulso/0.005)) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
2FD0:  MOVFF  5E0,651
2FD4:  MOVFF  5DF,650
2FD8:  MOVFF  5DE,64F
2FDC:  MOVFF  5DD,64E
2FE0:  MOVLW  0A
2FE2:  MOVLB  6
2FE4:  MOVWF  x55
2FE6:  MOVLW  D7
2FE8:  MOVWF  x54
2FEA:  MOVLW  23
2FEC:  MOVWF  x53
2FEE:  MOVLW  77
2FF0:  MOVWF  x52
2FF2:  MOVLB  0
2FF4:  CALL   0DD0
2FF8:  MOVFF  03,650
2FFC:  MOVFF  02,64F
3000:  MOVFF  01,64E
3004:  MOVFF  00,64D
3008:  CALL   2198
300C:  MOVFF  02,03
3010:  MOVF   01,W
3012:  MOVLB  5
3014:  MOVF   xA6,W
3016:  SUBWF  02,W
3018:  BNC   3028
301A:  BNZ   3022
301C:  MOVF   01,W
301E:  SUBWF  xA5,W
3020:  BC    3028
....................       { 
....................          SSR_on; 
3022:  BSF    F8B.2
3024:  BCF    F94.2
....................          //Peltiern_off; 
....................          //Peltierp_on; 
....................       } 
....................       else          
3026:  BRA    302C
....................       { 
....................          SSR_off; 
3028:  BCF    F8B.2
302A:  BCF    F94.2
....................          //Peltiern_off; 
....................          //Peltierp_off; 
....................       } 
....................              
....................    } 
....................    else 
302C:  BRA    3628
....................    { 
....................       error=desvio+Setpoint-Temperatura;      // Cálculo del error ****** 
302E:  BCF    FD8.1
3030:  MOVFF  5F8,655
3034:  MOVFF  5F7,654
3038:  MOVFF  5F6,653
303C:  MOVFF  5F5,652
3040:  MOVFF  610,659
3044:  MOVFF  60F,658
3048:  MOVFF  60E,657
304C:  MOVFF  60D,656
3050:  MOVLB  0
3052:  CALL   0F2E
3056:  MOVFF  00,64D
305A:  MOVFF  01,64E
305E:  MOVFF  02,64F
3062:  MOVFF  03,650
3066:  BSF    FD8.1
3068:  MOVFF  03,655
306C:  MOVFF  02,654
3070:  MOVFF  01,653
3074:  MOVFF  00,652
3078:  MOVFF  604,659
307C:  MOVFF  603,658
3080:  MOVFF  602,657
3084:  MOVFF  601,656
3088:  CALL   0F2E
308C:  MOVFF  03,5E4
3090:  MOVFF  02,5E3
3094:  MOVFF  01,5E2
3098:  MOVFF  00,5E1
....................     
....................       if(error>1.6 && error<30 && Aumento<0.3 && flag_setpoint==0) 
309C:  MOVLW  CD
309E:  MOVLB  6
30A0:  MOVWF  x50
30A2:  MOVLW  CC
30A4:  MOVWF  x4F
30A6:  MOVLW  4C
30A8:  MOVWF  x4E
30AA:  MOVLW  7F
30AC:  MOVWF  x4D
30AE:  MOVFF  5E4,654
30B2:  MOVFF  5E3,653
30B6:  MOVFF  5E2,652
30BA:  MOVFF  5E1,651
30BE:  MOVLB  0
30C0:  CALL   11A6
30C4:  BTFSS  FD8.0
30C6:  BRA    3250
30C8:  MOVFF  5E4,650
30CC:  MOVFF  5E3,64F
30D0:  MOVFF  5E2,64E
30D4:  MOVFF  5E1,64D
30D8:  MOVLB  6
30DA:  CLRF   x54
30DC:  CLRF   x53
30DE:  MOVLW  70
30E0:  MOVWF  x52
30E2:  MOVLW  83
30E4:  MOVWF  x51
30E6:  MOVLB  0
30E8:  CALL   11A6
30EC:  BTFSS  FD8.0
30EE:  BRA    3250
30F0:  MOVFF  600,650
30F4:  MOVFF  5FF,64F
30F8:  MOVFF  5FE,64E
30FC:  MOVFF  5FD,64D
3100:  MOVLW  9A
3102:  MOVLB  6
3104:  MOVWF  x54
3106:  MOVLW  99
3108:  MOVWF  x53
310A:  MOVLW  19
310C:  MOVWF  x52
310E:  MOVLW  7D
3110:  MOVWF  x51
3112:  MOVLB  0
3114:  CALL   11A6
3118:  BTFSS  FD8.0
311A:  BRA    3250
311C:  MOVLB  5
311E:  BTFSS  x94.1
3120:  BRA    3126
3122:  MOVLB  0
3124:  BRA    3250
....................       { 
....................          flag_ajuste=0; 
3126:  BCF    x87.3
....................          flag_ajuste2=0; 
3128:  BCF    x87.4
....................          Ajusto=10; 
312A:  MOVLW  0A
312C:  MOVWF  x93
....................          if(Potencia<90.0) 
312E:  MOVFF  5B4,650
3132:  MOVFF  5B3,64F
3136:  MOVFF  5B2,64E
313A:  MOVFF  5B1,64D
313E:  MOVLB  6
3140:  CLRF   x54
3142:  CLRF   x53
3144:  MOVLW  34
3146:  MOVWF  x52
3148:  MOVLW  85
314A:  MOVWF  x51
314C:  MOVLB  0
314E:  CALL   11A6
3152:  BTFSS  FD8.0
3154:  BRA    3250
....................          { 
....................             if(TiempoControl>=80) 
3156:  MOVLB  5
3158:  MOVF   x9B,W
315A:  SUBLW  4F
315C:  BTFSC  FD8.0
315E:  BRA    3252
....................             { 
....................                TiempoControl=0; 
3160:  CLRF   x9B
....................                if(Aumento<-0.5) 
3162:  MOVFF  600,650
3166:  MOVFF  5FF,64F
316A:  MOVFF  5FE,64E
316E:  MOVFF  5FD,64D
3172:  MOVLB  6
3174:  CLRF   x54
3176:  CLRF   x53
3178:  MOVLW  80
317A:  MOVWF  x52
317C:  MOVLW  7E
317E:  MOVWF  x51
3180:  MOVLB  0
3182:  CALL   11A6
3186:  BNC   31BE
....................                { 
....................                   Ganancia+=2; 
3188:  BCF    FD8.1
318A:  MOVFF  5F4,655
318E:  MOVFF  5F3,654
3192:  MOVFF  5F2,653
3196:  MOVFF  5F1,652
319A:  MOVLB  6
319C:  CLRF   x59
319E:  CLRF   x58
31A0:  CLRF   x57
31A2:  MOVLW  80
31A4:  MOVWF  x56
31A6:  MOVLB  0
31A8:  CALL   0F2E
31AC:  MOVFF  03,5F4
31B0:  MOVFF  02,5F3
31B4:  MOVFF  01,5F2
31B8:  MOVFF  00,5F1
....................                } 
....................                else 
31BC:  BRA    3250
....................                { 
....................                   if(Aumento<-0.1) 
31BE:  MOVFF  600,650
31C2:  MOVFF  5FF,64F
31C6:  MOVFF  5FE,64E
31CA:  MOVFF  5FD,64D
31CE:  MOVLW  CD
31D0:  MOVLB  6
31D2:  MOVWF  x54
31D4:  MOVLW  CC
31D6:  MOVWF  x53
31D8:  MOVWF  x52
31DA:  MOVLW  7B
31DC:  MOVWF  x51
31DE:  MOVLB  0
31E0:  CALL   11A6
31E4:  BNC   321C
....................                   { 
....................                      Ganancia+=1; 
31E6:  BCF    FD8.1
31E8:  MOVFF  5F4,655
31EC:  MOVFF  5F3,654
31F0:  MOVFF  5F2,653
31F4:  MOVFF  5F1,652
31F8:  MOVLB  6
31FA:  CLRF   x59
31FC:  CLRF   x58
31FE:  CLRF   x57
3200:  MOVLW  7F
3202:  MOVWF  x56
3204:  MOVLB  0
3206:  CALL   0F2E
320A:  MOVFF  03,5F4
320E:  MOVFF  02,5F3
3212:  MOVFF  01,5F2
3216:  MOVFF  00,5F1
....................                   }    
....................                   else 
321A:  BRA    3250
....................                   { 
....................                      Ganancia+=0.5; 
321C:  BCF    FD8.1
321E:  MOVFF  5F4,655
3222:  MOVFF  5F3,654
3226:  MOVFF  5F2,653
322A:  MOVFF  5F1,652
322E:  MOVLB  6
3230:  CLRF   x59
3232:  CLRF   x58
3234:  CLRF   x57
3236:  MOVLW  7E
3238:  MOVWF  x56
323A:  MOVLB  0
323C:  CALL   0F2E
3240:  MOVFF  03,5F4
3244:  MOVFF  02,5F3
3248:  MOVFF  01,5F2
324C:  MOVFF  00,5F1
3250:  MOVLB  5
....................                   } 
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(error<0.0) 
3252:  MOVFF  5E4,650
3256:  MOVFF  5E3,64F
325A:  MOVFF  5E2,64E
325E:  MOVFF  5E1,64D
3262:  MOVLB  6
3264:  CLRF   x54
3266:  CLRF   x53
3268:  CLRF   x52
326A:  CLRF   x51
326C:  MOVLB  0
326E:  CALL   11A6
3272:  BNC   32D0
....................       { 
....................          Ganancia=2*(Setpoint/44.5); 
3274:  MOVFF  610,651
3278:  MOVFF  60F,650
327C:  MOVFF  60E,64F
3280:  MOVFF  60D,64E
3284:  MOVLB  6
3286:  CLRF   x55
3288:  CLRF   x54
328A:  MOVLW  32
328C:  MOVWF  x53
328E:  MOVLW  84
3290:  MOVWF  x52
3292:  MOVLB  0
3294:  CALL   0DD0
3298:  MOVLB  6
329A:  CLRF   x70
329C:  CLRF   x6F
329E:  CLRF   x6E
32A0:  MOVLW  80
32A2:  MOVWF  x6D
32A4:  MOVFF  03,674
32A8:  MOVFF  02,673
32AC:  MOVFF  01,672
32B0:  MOVFF  00,671
32B4:  MOVLB  0
32B6:  CALL   1BC4
32BA:  MOVFF  03,5F4
32BE:  MOVFF  02,5F3
32C2:  MOVFF  01,5F2
32C6:  MOVFF  00,5F1
....................          flag_ajuste=0; 
32CA:  MOVLB  5
32CC:  BCF    x87.3
....................          flag_ajuste2=0; 
32CE:  BCF    x87.4
....................       } 
....................        
....................       if(Ganancia<0.5) 
32D0:  MOVFF  5F4,650
32D4:  MOVFF  5F3,64F
32D8:  MOVFF  5F2,64E
32DC:  MOVFF  5F1,64D
32E0:  MOVLB  6
32E2:  CLRF   x54
32E4:  CLRF   x53
32E6:  CLRF   x52
32E8:  MOVLW  7E
32EA:  MOVWF  x51
32EC:  MOVLB  0
32EE:  CALL   11A6
32F2:  BNC   3302
....................       { 
....................          Ganancia=0.5; 
32F4:  MOVLB  5
32F6:  CLRF   xF4
32F8:  CLRF   xF3
32FA:  CLRF   xF2
32FC:  MOVLW  7E
32FE:  MOVWF  xF1
3300:  MOVLB  0
....................       } 
....................       if(Ganancia>Gananciamax) 
3302:  MOVFF  5BC,650
3306:  MOVFF  5BB,64F
330A:  MOVFF  5BA,64E
330E:  MOVFF  5B9,64D
3312:  MOVFF  5F4,654
3316:  MOVFF  5F3,653
331A:  MOVFF  5F2,652
331E:  MOVFF  5F1,651
3322:  CALL   11A6
3326:  BNC   3338
....................       { 
....................          Ganancia=Gananciamax; 
3328:  MOVFF  5BC,5F4
332C:  MOVFF  5BB,5F3
3330:  MOVFF  5BA,5F2
3334:  MOVFF  5B9,5F1
....................       } 
....................     
....................       if(error<0.0)     // Anti Wind_DOWN     
3338:  MOVFF  5E4,650
333C:  MOVFF  5E3,64F
3340:  MOVFF  5E2,64E
3344:  MOVFF  5E1,64D
3348:  MOVLB  6
334A:  CLRF   x54
334C:  CLRF   x53
334E:  CLRF   x52
3350:  CLRF   x51
3352:  MOVLB  0
3354:  CALL   11A6
3358:  BNC   3366
....................       { 
....................          error=0.0; 
335A:  MOVLB  5
335C:  CLRF   xE4
335E:  CLRF   xE3
3360:  CLRF   xE2
3362:  CLRF   xE1
3364:  MOVLB  0
....................       } 
....................       //tmp=(Setpoint-Prom)*Ganancia;  // Control Proporcional. 
....................       tmp=error*Ganancia;  // Control Proporcional. 
3366:  MOVFF  5E4,670
336A:  MOVFF  5E3,66F
336E:  MOVFF  5E2,66E
3372:  MOVFF  5E1,66D
3376:  MOVFF  5F4,674
337A:  MOVFF  5F3,673
337E:  MOVFF  5F2,672
3382:  MOVFF  5F1,671
3386:  CALL   1BC4
338A:  MOVFF  03,5F0
338E:  MOVFF  02,5EF
3392:  MOVFF  01,5EE
3396:  MOVFF  00,5ED
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
339A:  MOVFF  610,650
339E:  MOVFF  60F,64F
33A2:  MOVFF  60E,64E
33A6:  MOVFF  60D,64D
33AA:  MOVFF  5F0,654
33AE:  MOVFF  5EF,653
33B2:  MOVFF  5EE,652
33B6:  MOVFF  5ED,651
33BA:  CALL   11A6
33BE:  BNC   33D0
....................       { 
....................          tmp=Setpoint; 
33C0:  MOVFF  610,5F0
33C4:  MOVFF  60F,5EF
33C8:  MOVFF  60E,5EE
33CC:  MOVFF  60D,5ED
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
33D0:  MOVFF  5F0,650
33D4:  MOVFF  5EF,64F
33D8:  MOVFF  5EE,64E
33DC:  MOVFF  5ED,64D
33E0:  MOVLB  6
33E2:  CLRF   x54
33E4:  CLRF   x53
33E6:  CLRF   x52
33E8:  CLRF   x51
33EA:  MOVLB  0
33EC:  CALL   11A6
33F0:  BNC   33FE
....................       { 
....................          tmp=0.0; 
33F2:  MOVLB  5
33F4:  CLRF   xF0
33F6:  CLRF   xEF
33F8:  CLRF   xEE
33FA:  CLRF   xED
33FC:  MOVLB  0
....................       } 
....................     
....................       Tpulso=(tmp/Setpoint)*Tciclo; 
33FE:  MOVFF  5F0,651
3402:  MOVFF  5EF,650
3406:  MOVFF  5EE,64F
340A:  MOVFF  5ED,64E
340E:  MOVFF  610,655
3412:  MOVFF  60F,654
3416:  MOVFF  60E,653
341A:  MOVFF  60D,652
341E:  CALL   0DD0
3422:  MOVFF  00,64D
3426:  MOVFF  01,64E
342A:  MOVFF  02,64F
342E:  MOVFF  03,650
3432:  MOVFF  03,670
3436:  MOVFF  02,66F
343A:  MOVFF  01,66E
343E:  MOVFF  00,66D
3442:  MOVFF  5DC,674
3446:  MOVFF  5DB,673
344A:  MOVFF  5DA,672
344E:  MOVFF  5D9,671
3452:  CALL   1BC4
3456:  MOVFF  03,5E0
345A:  MOVFF  02,5DF
345E:  MOVFF  01,5DE
3462:  MOVFF  00,5DD
....................        
....................       if(error<1.6) 
3466:  MOVFF  5E4,650
346A:  MOVFF  5E3,64F
346E:  MOVFF  5E2,64E
3472:  MOVFF  5E1,64D
3476:  MOVLW  CD
3478:  MOVLB  6
347A:  MOVWF  x54
347C:  MOVLW  CC
347E:  MOVWF  x53
3480:  MOVLW  4C
3482:  MOVWF  x52
3484:  MOVLW  7F
3486:  MOVWF  x51
3488:  MOVLB  0
348A:  CALL   11A6
348E:  BTFSS  FD8.0
3490:  BRA    3598
....................       { 
....................          if(error<=1.3){    
3492:  MOVFF  5E4,650
3496:  MOVFF  5E3,64F
349A:  MOVFF  5E2,64E
349E:  MOVFF  5E1,64D
34A2:  MOVLW  66
34A4:  MOVLB  6
34A6:  MOVWF  x54
34A8:  MOVWF  x53
34AA:  MOVLW  26
34AC:  MOVWF  x52
34AE:  MOVLW  7F
34B0:  MOVWF  x51
34B2:  MOVLB  0
34B4:  CALL   11A6
34B8:  BC    34BC
34BA:  BNZ   34D8
....................             if(flag_ajuste==0){ 
34BC:  MOVLB  5
34BE:  BTFSC  x87.3
34C0:  BRA    34D8
....................                TpulsoMax=Tpulso; 
34C2:  MOVFF  5E0,60C
34C6:  MOVFF  5DF,60B
34CA:  MOVFF  5DE,60A
34CE:  MOVFF  5DD,609
....................                flag_ajuste=1;   
34D2:  BSF    x87.3
....................                Ajusto=5; 
34D4:  MOVLW  05
34D6:  MOVWF  x93
....................             } 
....................          } 
....................           
....................          if(error<=0.9){    
34D8:  MOVFF  5E4,650
34DC:  MOVFF  5E3,64F
34E0:  MOVFF  5E2,64E
34E4:  MOVFF  5E1,64D
34E8:  MOVLW  66
34EA:  MOVLB  6
34EC:  MOVWF  x54
34EE:  MOVWF  x53
34F0:  MOVWF  x52
34F2:  MOVLW  7E
34F4:  MOVWF  x51
34F6:  MOVLB  0
34F8:  CALL   11A6
34FC:  BC    3500
34FE:  BNZ   351C
....................             if(flag_ajuste2==0){ 
3500:  MOVLB  5
3502:  BTFSC  x87.4
3504:  BRA    351C
....................                Tpulsomin=Tpulso; 
3506:  MOVFF  5E0,5B8
350A:  MOVFF  5DF,5B7
350E:  MOVFF  5DE,5B6
3512:  MOVFF  5DD,5B5
....................                flag_ajuste2=1;            
3516:  BSF    x87.4
....................                Ajusto=5; 
3518:  MOVLW  05
351A:  MOVWF  x93
....................             } 
....................          } 
....................           
....................          if(flag_ajuste2==1){ 
351C:  MOVLB  5
351E:  BTFSS  x87.4
3520:  BRA    355C
....................             if(Tpulso<Tpulsomin){ 
3522:  MOVFF  5E0,650
3526:  MOVFF  5DF,64F
352A:  MOVFF  5DE,64E
352E:  MOVFF  5DD,64D
3532:  MOVFF  5B8,654
3536:  MOVFF  5B7,653
353A:  MOVFF  5B6,652
353E:  MOVFF  5B5,651
3542:  MOVLB  0
3544:  CALL   11A6
3548:  BNC   355A
....................                Tpulso=Tpulsomin; 
354A:  MOVFF  5B8,5E0
354E:  MOVFF  5B7,5DF
3552:  MOVFF  5B6,5DE
3556:  MOVFF  5B5,5DD
355A:  MOVLB  5
....................             } 
....................          } 
....................          if(flag_ajuste==1){    
355C:  BTFSS  x87.3
355E:  BRA    359A
....................             if(Tpulso>TpulsoMax){ 
3560:  MOVFF  60C,650
3564:  MOVFF  60B,64F
3568:  MOVFF  60A,64E
356C:  MOVFF  609,64D
3570:  MOVFF  5E0,654
3574:  MOVFF  5DF,653
3578:  MOVFF  5DE,652
357C:  MOVFF  5DD,651
3580:  MOVLB  0
3582:  CALL   11A6
3586:  BNC   3598
....................                Tpulso=TpulsoMax; 
3588:  MOVFF  60C,5E0
358C:  MOVFF  60B,5DF
3590:  MOVFF  60A,5DE
3594:  MOVFF  609,5DD
3598:  MOVLB  5
....................             }  
....................          } 
....................       } 
....................       Tp=(Tpulso/0.005); 
359A:  MOVFF  5E0,651
359E:  MOVFF  5DF,650
35A2:  MOVFF  5DE,64F
35A6:  MOVFF  5DD,64E
35AA:  MOVLW  0A
35AC:  MOVLB  6
35AE:  MOVWF  x55
35B0:  MOVLW  D7
35B2:  MOVWF  x54
35B4:  MOVLW  23
35B6:  MOVWF  x53
35B8:  MOVLW  77
35BA:  MOVWF  x52
35BC:  MOVLB  0
35BE:  CALL   0DD0
35C2:  MOVFF  03,650
35C6:  MOVFF  02,64F
35CA:  MOVFF  01,64E
35CE:  MOVFF  00,64D
35D2:  CALL   2198
35D6:  MOVFF  02,5AE
35DA:  MOVFF  01,5AD
....................       Tc=(Tciclo/0.005); 
35DE:  MOVFF  5DC,651
35E2:  MOVFF  5DB,650
35E6:  MOVFF  5DA,64F
35EA:  MOVFF  5D9,64E
35EE:  MOVLW  0A
35F0:  MOVLB  6
35F2:  MOVWF  x55
35F4:  MOVLW  D7
35F6:  MOVWF  x54
35F8:  MOVLW  23
35FA:  MOVWF  x53
35FC:  MOVLW  77
35FE:  MOVWF  x52
3600:  MOVLB  0
3602:  CALL   0DD0
3606:  MOVFF  03,650
360A:  MOVFF  02,64F
360E:  MOVFF  01,64E
3612:  MOVFF  00,64D
3616:  CALL   2198
361A:  MOVFF  02,5B0
361E:  MOVFF  01,5AF
....................       Controlando=1;      
3622:  MOVLW  01
3624:  MOVLB  5
3626:  MOVWF  x92
....................    } 
....................     
.................... //--------------------------------------------------------------------------------------------------------------------//    
....................    
.................... } 
3628:  MOVLB  0
362A:  RETLW  00
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
188E:  MOVLB  6
1890:  MOVFF  64D,01
1894:  MOVFF  64E,03
1898:  MOVFF  64D,653
189C:  MOVFF  64E,654
18A0:  MOVLW  06
18A2:  MOVWF  FEA
18A4:  MOVLW  2D
18A6:  MOVWF  FE9
18A8:  MOVFF  64E,FE2
18AC:  MOVFF  64D,FE1
18B0:  MOVF   FE7,F
18B2:  MOVFF  FE6,FEE
18B6:  BNZ   18B0
....................    if(sombreado==2) 
18B8:  MOVF   x51,W
18BA:  SUBLW  02
18BC:  BNZ   18E6
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
18BE:  MOVLW  01
18C0:  ADDWF  x4F,W
18C2:  MOVWF  x53
18C4:  MOVLW  01
18C6:  ADDWF  x50,W
18C8:  MOVWF  x54
18CA:  MOVFF  653,662
18CE:  MOVWF  x63
18D0:  MOVLW  06
18D2:  MOVWF  x65
18D4:  MOVLW  2D
18D6:  MOVWF  x64
18D8:  MOVFF  652,666
18DC:  MOVLW  01
18DE:  MOVWF  x67
18E0:  MOVLB  0
18E2:  RCALL  14D6
18E4:  MOVLB  6
....................    if(sombreado==1) 
18E6:  DECFSZ x51,W
18E8:  BRA    1934
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
18EA:  MOVF   x52,W
18EC:  MULLW  08
18EE:  MOVF   FF3,W
18F0:  ADDWF  x50,W
18F2:  MOVWF  x53
18F4:  CLRF   x62
18F6:  MOVFF  650,663
18FA:  MOVLW  7F
18FC:  MOVWF  x64
18FE:  MOVFF  653,665
1902:  MOVLW  01
1904:  MOVWF  x66
1906:  MOVWF  x67
1908:  MOVLB  0
190A:  RCALL  17CC
190C:  MOVLW  01
190E:  MOVLB  6
1910:  ADDWF  x4F,W
1912:  MOVWF  x53
1914:  MOVLW  01
1916:  ADDWF  x50,W
1918:  MOVWF  x54
191A:  MOVFF  653,662
191E:  MOVWF  x63
1920:  MOVLW  06
1922:  MOVWF  x65
1924:  MOVLW  2D
1926:  MOVWF  x64
1928:  MOVFF  652,666
192C:  CLRF   x67
192E:  MOVLB  0
1930:  RCALL  14D6
1932:  MOVLB  6
....................    if(sombreado==0) 
1934:  MOVF   x51,F
1936:  BNZ   1982
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1938:  MOVF   x52,W
193A:  MULLW  08
193C:  MOVF   FF3,W
193E:  ADDWF  x50,W
1940:  MOVWF  x53
1942:  CLRF   x62
1944:  MOVFF  650,663
1948:  MOVLW  7F
194A:  MOVWF  x64
194C:  MOVFF  653,665
1950:  MOVLW  01
1952:  MOVWF  x66
1954:  CLRF   x67
1956:  MOVLB  0
1958:  RCALL  17CC
195A:  MOVLW  01
195C:  MOVLB  6
195E:  ADDWF  x4F,W
1960:  MOVWF  x53
1962:  MOVLW  01
1964:  ADDWF  x50,W
1966:  MOVWF  x54
1968:  MOVFF  653,662
196C:  MOVWF  x63
196E:  MOVLW  06
1970:  MOVWF  x65
1972:  MOVLW  2D
1974:  MOVWF  x64
1976:  MOVFF  652,666
197A:  MOVLW  01
197C:  MOVWF  x67
197E:  MOVLB  0
1980:  RCALL  14D6
....................    glcd_update(); 
1982:  MOVLB  0
1984:  RCALL  12BA
.................... } 
1986:  RETLW  00
....................  
.................... void displayTemps(char palabra[30], float digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==1) 
*
26C2:  MOVLB  6
26C4:  DECFSZ x55,W
26C6:  BRA    2800
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
26C8:  MOVLW  06
26CA:  MOVWF  x4C
26CC:  MOVLW  57
26CE:  MOVWF  x4B
26D0:  MOVLW  42
26D2:  MOVWF  FE9
26D4:  MOVFF  652,663
26D8:  MOVFF  651,662
26DC:  MOVFF  650,661
26E0:  MOVFF  64F,660
26E4:  MOVLW  01
26E6:  MOVWF  x64
26E8:  MOVLB  0
26EA:  RCALL  250E
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, ON); 
26EC:  MOVLW  02
26EE:  MOVLB  6
26F0:  SUBWF  x54,W
26F2:  MOVWF  x60
26F4:  MOVF   x56,W
26F6:  MULLW  08
26F8:  MOVF   FF3,W
26FA:  ADDWF  x54,W
26FC:  MOVWF  x61
26FE:  CLRF   x62
2700:  MOVFF  660,663
2704:  MOVLW  7F
2706:  MOVWF  x64
2708:  MOVFF  661,665
270C:  MOVLW  01
270E:  MOVWF  x66
2710:  MOVWF  x67
2712:  MOVLB  0
2714:  CALL   17CC
....................       strcpy(Menus.Letra,palabra); 
2718:  MOVLB  6
271A:  MOVFF  64D,01
271E:  MOVFF  64E,03
2722:  MOVFF  64D,660
2726:  MOVFF  64E,661
272A:  MOVLW  06
272C:  MOVWF  FEA
272E:  MOVLW  2D
2730:  MOVWF  FE9
2732:  MOVFF  64E,FE2
2736:  MOVFF  64D,FE1
273A:  MOVF   FE7,F
273C:  MOVFF  FE6,FEE
2740:  BNZ   273A
....................       glcd_text57(x+90, y+1, voltage, tamano, OFF); 
2742:  MOVLW  5A
2744:  ADDWF  x53,W
2746:  MOVWF  x60
2748:  MOVLW  01
274A:  ADDWF  x54,W
274C:  MOVWF  x61
274E:  MOVFF  660,662
2752:  MOVWF  x63
2754:  MOVLW  06
2756:  MOVWF  x65
2758:  MOVLW  57
275A:  MOVWF  x64
275C:  MOVFF  656,666
2760:  CLRF   x67
2762:  MOVLB  0
2764:  CALL   14D6
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF); 
2768:  MOVLW  01
276A:  MOVLB  6
276C:  ADDWF  x53,W
276E:  MOVWF  x60
2770:  MOVLW  01
2772:  ADDWF  x54,W
2774:  MOVWF  x61
2776:  MOVFF  660,662
277A:  MOVWF  x63
277C:  MOVLW  06
277E:  MOVWF  x65
2780:  MOVLW  2D
2782:  MOVWF  x64
2784:  MOVFF  656,666
2788:  CLRF   x67
278A:  MOVLB  0
278C:  CALL   14D6
....................       strcpy(Menus.Letra,"C"); 
2790:  MOVLW  06
2792:  MOVWF  FEA
2794:  MOVLW  2D
2796:  MOVWF  FE9
2798:  MOVFF  FF2,660
279C:  BCF    FF2.7
279E:  MOVLW  00
27A0:  CALL   06BE
27A4:  TBLRD*-
27A6:  TBLRD*+
27A8:  MOVF   FF5,W
27AA:  MOVWF  FEE
27AC:  IORLW  00
27AE:  BNZ   27A6
27B0:  MOVLB  6
27B2:  BTFSC  x60.7
27B4:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, OFF); 
27B6:  MOVLW  78
27B8:  ADDWF  x53,W
27BA:  MOVWF  x60
27BC:  MOVLW  01
27BE:  ADDWF  x54,W
27C0:  MOVWF  x61
27C2:  MOVFF  660,662
27C6:  MOVWF  x63
27C8:  MOVLW  06
27CA:  MOVWF  x65
27CC:  MOVLW  2D
27CE:  MOVWF  x64
27D0:  MOVFF  656,666
27D4:  CLRF   x67
27D6:  MOVLB  0
27D8:  CALL   14D6
....................       glcd_circle(x+115,y-1,1,NO,OFF); 
27DC:  MOVLW  73
27DE:  MOVLB  6
27E0:  ADDWF  x53,W
27E2:  MOVWF  x60
27E4:  MOVLW  01
27E6:  SUBWF  x54,W
27E8:  MOVWF  x61
27EA:  MOVFF  660,662
27EE:  MOVWF  x63
27F0:  MOVLW  01
27F2:  MOVWF  x64
27F4:  CLRF   x65
27F6:  CLRF   x66
27F8:  MOVLB  0
27FA:  CALL   1F6E
27FE:  MOVLB  6
....................    } 
....................    if(sombreado==0) 
2800:  MOVF   x55,F
2802:  BTFSS  FD8.2
2804:  BRA    2942
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
2806:  MOVLW  06
2808:  MOVWF  x4C
280A:  MOVLW  57
280C:  MOVWF  x4B
280E:  MOVLW  42
2810:  MOVWF  FE9
2812:  MOVFF  652,663
2816:  MOVFF  651,662
281A:  MOVFF  650,661
281E:  MOVFF  64F,660
2822:  MOVLW  01
2824:  MOVWF  x64
2826:  MOVLB  0
2828:  RCALL  250E
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, OFF); 
282A:  MOVLW  02
282C:  MOVLB  6
282E:  SUBWF  x54,W
2830:  MOVWF  x60
2832:  MOVF   x56,W
2834:  MULLW  08
2836:  MOVF   FF3,W
2838:  ADDWF  x54,W
283A:  MOVWF  x61
283C:  CLRF   x62
283E:  MOVFF  660,663
2842:  MOVLW  7F
2844:  MOVWF  x64
2846:  MOVFF  661,665
284A:  MOVLW  01
284C:  MOVWF  x66
284E:  CLRF   x67
2850:  MOVLB  0
2852:  CALL   17CC
....................       strcpy(Menus.Letra,palabra); 
2856:  MOVLB  6
2858:  MOVFF  64D,01
285C:  MOVFF  64E,03
2860:  MOVFF  64D,660
2864:  MOVFF  64E,661
2868:  MOVLW  06
286A:  MOVWF  FEA
286C:  MOVLW  2D
286E:  MOVWF  FE9
2870:  MOVFF  64E,FE2
2874:  MOVFF  64D,FE1
2878:  MOVF   FE7,F
287A:  MOVFF  FE6,FEE
287E:  BNZ   2878
....................       glcd_text57(x+90, y+1, voltage, tamano, ON); 
2880:  MOVLW  5A
2882:  ADDWF  x53,W
2884:  MOVWF  x60
2886:  MOVLW  01
2888:  ADDWF  x54,W
288A:  MOVWF  x61
288C:  MOVFF  660,662
2890:  MOVWF  x63
2892:  MOVLW  06
2894:  MOVWF  x65
2896:  MOVLW  57
2898:  MOVWF  x64
289A:  MOVFF  656,666
289E:  MOVLW  01
28A0:  MOVWF  x67
28A2:  MOVLB  0
28A4:  CALL   14D6
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, ON); 
28A8:  MOVLW  01
28AA:  MOVLB  6
28AC:  ADDWF  x53,W
28AE:  MOVWF  x60
28B0:  MOVLW  01
28B2:  ADDWF  x54,W
28B4:  MOVWF  x61
28B6:  MOVFF  660,662
28BA:  MOVWF  x63
28BC:  MOVLW  06
28BE:  MOVWF  x65
28C0:  MOVLW  2D
28C2:  MOVWF  x64
28C4:  MOVFF  656,666
28C8:  MOVLW  01
28CA:  MOVWF  x67
28CC:  MOVLB  0
28CE:  CALL   14D6
....................       strcpy(Menus.Letra,"C"); 
28D2:  MOVLW  06
28D4:  MOVWF  FEA
28D6:  MOVLW  2D
28D8:  MOVWF  FE9
28DA:  MOVFF  FF2,660
28DE:  BCF    FF2.7
28E0:  MOVLW  00
28E2:  CALL   06BE
28E6:  TBLRD*-
28E8:  TBLRD*+
28EA:  MOVF   FF5,W
28EC:  MOVWF  FEE
28EE:  IORLW  00
28F0:  BNZ   28E8
28F2:  MOVLB  6
28F4:  BTFSC  x60.7
28F6:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, ON); 
28F8:  MOVLW  78
28FA:  ADDWF  x53,W
28FC:  MOVWF  x60
28FE:  MOVLW  01
2900:  ADDWF  x54,W
2902:  MOVWF  x61
2904:  MOVFF  660,662
2908:  MOVWF  x63
290A:  MOVLW  06
290C:  MOVWF  x65
290E:  MOVLW  2D
2910:  MOVWF  x64
2912:  MOVFF  656,666
2916:  MOVLW  01
2918:  MOVWF  x67
291A:  MOVLB  0
291C:  CALL   14D6
....................       glcd_circle(x+115,y-1,1,NO,ON); 
2920:  MOVLW  73
2922:  MOVLB  6
2924:  ADDWF  x53,W
2926:  MOVWF  x60
2928:  MOVLW  01
292A:  SUBWF  x54,W
292C:  MOVWF  x61
292E:  MOVFF  660,662
2932:  MOVWF  x63
2934:  MOVLW  01
2936:  MOVWF  x64
2938:  CLRF   x65
293A:  MOVWF  x66
293C:  MOVLB  0
293E:  CALL   1F6E
....................    } 
....................    glcd_update(); 
2942:  MOVLB  0
2944:  CALL   12BA
.................... } 
2948:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
29D0:  MOVLB  6
29D2:  MOVF   x51,W
29D4:  SUBLW  02
29D6:  BNZ   2A48
....................    { 
....................       sprintf(voltage, "%03u", digito); 
29D8:  MOVLW  06
29DA:  MOVWF  x4C
29DC:  MOVLW  53
29DE:  MOVWF  x4B
29E0:  MOVFF  64E,65C
29E4:  MOVLW  03
29E6:  MOVWF  x5D
29E8:  MOVLB  0
29EA:  RCALL  294A
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
29EC:  MOVLB  6
29EE:  MOVF   x52,W
29F0:  MULLW  12
29F2:  MOVF   FF3,W
29F4:  ADDWF  x4F,W
29F6:  MOVWF  x5C
29F8:  MOVF   x52,W
29FA:  MULLW  08
29FC:  MOVF   FF3,W
29FE:  ADDWF  x50,W
2A00:  MOVWF  x5D
2A02:  MOVFF  64F,662
2A06:  MOVFF  650,663
2A0A:  MOVFF  65C,664
2A0E:  MOVWF  x65
2A10:  MOVLW  01
2A12:  MOVWF  x66
2A14:  MOVWF  x67
2A16:  MOVLB  0
2A18:  CALL   17CC
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
2A1C:  MOVLW  01
2A1E:  MOVLB  6
2A20:  ADDWF  x4F,W
2A22:  MOVWF  x5C
2A24:  MOVLW  01
2A26:  ADDWF  x50,W
2A28:  MOVWF  x5D
2A2A:  MOVFF  65C,662
2A2E:  MOVWF  x63
2A30:  MOVLW  06
2A32:  MOVWF  x65
2A34:  MOVLW  53
2A36:  MOVWF  x64
2A38:  MOVFF  652,666
2A3C:  CLRF   x67
2A3E:  MOVLB  0
2A40:  CALL   14D6
....................    } 
....................    else 
2A44:  BRA    2B8C
2A46:  MOVLB  6
....................    { 
....................       if(sombreado==3) 
2A48:  MOVF   x51,W
2A4A:  SUBLW  03
2A4C:  BNZ   2ABE
....................       { 
....................          sprintf(voltage, "%03u", digito); 
2A4E:  MOVLW  06
2A50:  MOVWF  x4C
2A52:  MOVLW  53
2A54:  MOVWF  x4B
2A56:  MOVFF  64E,65C
2A5A:  MOVLW  03
2A5C:  MOVWF  x5D
2A5E:  MOVLB  0
2A60:  RCALL  294A
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
2A62:  MOVLB  6
2A64:  MOVF   x52,W
2A66:  MULLW  12
2A68:  MOVF   FF3,W
2A6A:  ADDWF  x4F,W
2A6C:  MOVWF  x5C
2A6E:  MOVF   x52,W
2A70:  MULLW  08
2A72:  MOVF   FF3,W
2A74:  ADDWF  x50,W
2A76:  MOVWF  x5D
2A78:  MOVFF  64F,662
2A7C:  MOVFF  650,663
2A80:  MOVFF  65C,664
2A84:  MOVWF  x65
2A86:  MOVLW  01
2A88:  MOVWF  x66
2A8A:  CLRF   x67
2A8C:  MOVLB  0
2A8E:  CALL   17CC
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
2A92:  MOVLW  01
2A94:  MOVLB  6
2A96:  ADDWF  x4F,W
2A98:  MOVWF  x5C
2A9A:  MOVLW  01
2A9C:  ADDWF  x50,W
2A9E:  MOVWF  x5D
2AA0:  MOVFF  65C,662
2AA4:  MOVWF  x63
2AA6:  MOVLW  06
2AA8:  MOVWF  x65
2AAA:  MOVLW  53
2AAC:  MOVWF  x64
2AAE:  MOVFF  652,666
2AB2:  MOVLW  01
2AB4:  MOVWF  x67
2AB6:  MOVLB  0
2AB8:  CALL   14D6
2ABC:  MOVLB  6
....................       } 
....................       sprintf(voltage, "%u", digito); 
2ABE:  MOVLW  06
2AC0:  MOVWF  x4C
2AC2:  MOVLW  53
2AC4:  MOVWF  x4B
2AC6:  MOVFF  64E,65C
2ACA:  MOVLW  1B
2ACC:  MOVWF  x5D
2ACE:  MOVLB  0
2AD0:  RCALL  294A
....................       if(sombreado==1) 
2AD2:  MOVLB  6
2AD4:  DECFSZ x51,W
2AD6:  BRA    2B30
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
2AD8:  MOVF   x52,W
2ADA:  MULLW  05
2ADC:  MOVF   FF3,W
2ADE:  ADDWF  x4F,W
2AE0:  MOVWF  x5C
2AE2:  MOVF   x52,W
2AE4:  MULLW  08
2AE6:  MOVF   FF3,W
2AE8:  ADDWF  x50,W
2AEA:  MOVWF  x5D
2AEC:  MOVFF  64F,662
2AF0:  MOVFF  650,663
2AF4:  MOVFF  65C,664
2AF8:  MOVWF  x65
2AFA:  MOVLW  01
2AFC:  MOVWF  x66
2AFE:  MOVWF  x67
2B00:  MOVLB  0
2B02:  CALL   17CC
2B06:  MOVLW  01
2B08:  MOVLB  6
2B0A:  ADDWF  x4F,W
2B0C:  MOVWF  x5C
2B0E:  MOVLW  01
2B10:  ADDWF  x50,W
2B12:  MOVWF  x5D
2B14:  MOVFF  65C,662
2B18:  MOVWF  x63
2B1A:  MOVLW  06
2B1C:  MOVWF  x65
2B1E:  MOVLW  53
2B20:  MOVWF  x64
2B22:  MOVFF  652,666
2B26:  CLRF   x67
2B28:  MOVLB  0
2B2A:  CALL   14D6
2B2E:  MOVLB  6
....................       if(sombreado==0) 
2B30:  MOVF   x51,F
2B32:  BNZ   2B8E
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
2B34:  MOVF   x52,W
2B36:  MULLW  05
2B38:  MOVF   FF3,W
2B3A:  ADDWF  x4F,W
2B3C:  MOVWF  x5C
2B3E:  MOVF   x52,W
2B40:  MULLW  08
2B42:  MOVF   FF3,W
2B44:  ADDWF  x50,W
2B46:  MOVWF  x5D
2B48:  MOVFF  64F,662
2B4C:  MOVFF  650,663
2B50:  MOVFF  65C,664
2B54:  MOVWF  x65
2B56:  MOVLW  01
2B58:  MOVWF  x66
2B5A:  CLRF   x67
2B5C:  MOVLB  0
2B5E:  CALL   17CC
2B62:  MOVLW  01
2B64:  MOVLB  6
2B66:  ADDWF  x4F,W
2B68:  MOVWF  x5C
2B6A:  MOVLW  01
2B6C:  ADDWF  x50,W
2B6E:  MOVWF  x5D
2B70:  MOVFF  65C,662
2B74:  MOVWF  x63
2B76:  MOVLW  06
2B78:  MOVWF  x65
2B7A:  MOVLW  53
2B7C:  MOVWF  x64
2B7E:  MOVFF  652,666
2B82:  MOVLW  01
2B84:  MOVWF  x67
2B86:  MOVLB  0
2B88:  CALL   14D6
2B8C:  MOVLB  6
....................    } 
....................    glcd_update(); 
2B8E:  MOVLB  0
2B90:  CALL   12BA
.................... } 
2B94:  RETLW  00
....................  
.................... void displayTemperatura(int16 digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
2292:  MOVLB  6
2294:  MOVF   x53,W
2296:  SUBLW  02
2298:  BNZ   230E
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
229A:  MOVLW  06
229C:  MOVWF  x4C
229E:  MOVLW  55
22A0:  MOVWF  x4B
22A2:  MOVLW  0A
22A4:  MOVWF  FE9
22A6:  MOVFF  650,65F
22AA:  MOVFF  64F,65E
22AE:  MOVLB  0
22B0:  RCALL  21D4
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
22B2:  MOVLB  6
22B4:  MOVF   x54,W
22B6:  MULLW  12
22B8:  MOVF   FF3,W
22BA:  ADDWF  x51,W
22BC:  MOVWF  x5E
22BE:  MOVF   x54,W
22C0:  MULLW  08
22C2:  MOVF   FF3,W
22C4:  ADDWF  x52,W
22C6:  MOVWF  x5F
22C8:  MOVFF  651,662
22CC:  MOVFF  652,663
22D0:  MOVFF  65E,664
22D4:  MOVWF  x65
22D6:  MOVLW  01
22D8:  MOVWF  x66
22DA:  MOVWF  x67
22DC:  MOVLB  0
22DE:  CALL   17CC
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
22E2:  MOVLW  01
22E4:  MOVLB  6
22E6:  ADDWF  x51,W
22E8:  MOVWF  x5E
22EA:  MOVLW  01
22EC:  ADDWF  x52,W
22EE:  MOVWF  x5F
22F0:  MOVFF  65E,662
22F4:  MOVWF  x63
22F6:  MOVLW  06
22F8:  MOVWF  x65
22FA:  MOVLW  55
22FC:  MOVWF  x64
22FE:  MOVFF  654,666
2302:  CLRF   x67
2304:  MOVLB  0
2306:  CALL   14D6
....................    } 
....................    else 
230A:  BRA    2440
230C:  MOVLB  6
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
230E:  MOVLW  06
2310:  MOVWF  x4C
2312:  MOVLW  55
2314:  MOVWF  x4B
2316:  MOVLW  0A
2318:  MOVWF  FE9
231A:  MOVFF  650,65F
231E:  MOVFF  64F,65E
2322:  MOVLB  0
2324:  RCALL  21D4
....................     
....................       if(sombreado==4) 
2326:  MOVLB  6
2328:  MOVF   x53,W
232A:  SUBLW  04
232C:  BNZ   2388
....................       { 
....................          glcd_rect(x, y, x+(tamano*16), y+(tamano*8), YES, OFF); 
232E:  MOVF   x54,W
2330:  MULLW  10
2332:  MOVF   FF3,W
2334:  ADDWF  x51,W
2336:  MOVWF  x5E
2338:  MOVF   x54,W
233A:  MULLW  08
233C:  MOVF   FF3,W
233E:  ADDWF  x52,W
2340:  MOVWF  x5F
2342:  MOVFF  651,662
2346:  MOVFF  652,663
234A:  MOVFF  65E,664
234E:  MOVWF  x65
2350:  MOVLW  01
2352:  MOVWF  x66
2354:  CLRF   x67
2356:  MOVLB  0
2358:  CALL   17CC
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
235C:  MOVLW  01
235E:  MOVLB  6
2360:  ADDWF  x51,W
2362:  MOVWF  x5E
2364:  MOVLW  01
2366:  ADDWF  x52,W
2368:  MOVWF  x5F
236A:  MOVFF  65E,662
236E:  MOVWF  x63
2370:  MOVLW  06
2372:  MOVWF  x65
2374:  MOVLW  55
2376:  MOVWF  x64
2378:  MOVFF  654,666
237C:  MOVLW  01
237E:  MOVWF  x67
2380:  MOVLB  0
2382:  CALL   14D6
2386:  MOVLB  6
....................       } 
....................       if(sombreado==1) 
2388:  DECFSZ x53,W
238A:  BRA    23E4
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
238C:  MOVF   x54,W
238E:  MULLW  05
2390:  MOVF   FF3,W
2392:  ADDWF  x51,W
2394:  MOVWF  x5E
2396:  MOVF   x54,W
2398:  MULLW  08
239A:  MOVF   FF3,W
239C:  ADDWF  x52,W
239E:  MOVWF  x5F
23A0:  MOVFF  651,662
23A4:  MOVFF  652,663
23A8:  MOVFF  65E,664
23AC:  MOVWF  x65
23AE:  MOVLW  01
23B0:  MOVWF  x66
23B2:  MOVWF  x67
23B4:  MOVLB  0
23B6:  CALL   17CC
23BA:  MOVLW  01
23BC:  MOVLB  6
23BE:  ADDWF  x51,W
23C0:  MOVWF  x5E
23C2:  MOVLW  01
23C4:  ADDWF  x52,W
23C6:  MOVWF  x5F
23C8:  MOVFF  65E,662
23CC:  MOVWF  x63
23CE:  MOVLW  06
23D0:  MOVWF  x65
23D2:  MOVLW  55
23D4:  MOVWF  x64
23D6:  MOVFF  654,666
23DA:  CLRF   x67
23DC:  MOVLB  0
23DE:  CALL   14D6
23E2:  MOVLB  6
....................       if(sombreado==0) 
23E4:  MOVF   x53,F
23E6:  BNZ   2442
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
23E8:  MOVF   x54,W
23EA:  MULLW  05
23EC:  MOVF   FF3,W
23EE:  ADDWF  x51,W
23F0:  MOVWF  x5E
23F2:  MOVF   x54,W
23F4:  MULLW  08
23F6:  MOVF   FF3,W
23F8:  ADDWF  x52,W
23FA:  MOVWF  x5F
23FC:  MOVFF  651,662
2400:  MOVFF  652,663
2404:  MOVFF  65E,664
2408:  MOVWF  x65
240A:  MOVLW  01
240C:  MOVWF  x66
240E:  CLRF   x67
2410:  MOVLB  0
2412:  CALL   17CC
2416:  MOVLW  01
2418:  MOVLB  6
241A:  ADDWF  x51,W
241C:  MOVWF  x5E
241E:  MOVLW  01
2420:  ADDWF  x52,W
2422:  MOVWF  x5F
2424:  MOVFF  65E,662
2428:  MOVWF  x63
242A:  MOVLW  06
242C:  MOVWF  x65
242E:  MOVLW  55
2430:  MOVWF  x64
2432:  MOVFF  654,666
2436:  MOVLW  01
2438:  MOVWF  x67
243A:  MOVLB  0
243C:  CALL   14D6
2440:  MOVLB  6
....................    } 
....................    glcd_update(); 
2442:  MOVLB  0
2444:  CALL   12BA
.................... } 
2448:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2B96:  MOVLB  6
2B98:  MOVF   x4D,W
2B9A:  SUBLW  05
2B9C:  BNZ   2C42
....................    for( i = 0 ; i < 64 ; i ++ ) 
2B9E:  CLRF   x4E
2BA0:  MOVF   x4E,W
2BA2:  SUBLW  3F
2BA4:  BNC   2C42
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2BA6:  CLRF   x4F
2BA8:  MOVF   x4F,W
2BAA:  SUBLW  0F
2BAC:  BNC   2C3E
....................       {     
....................          for(k=7;k>-1;k--) 
2BAE:  MOVLW  07
2BB0:  MOVWF  x50
2BB2:  MOVF   x50,W
2BB4:  XORLW  80
2BB6:  SUBLW  7F
2BB8:  BC    2C3A
....................          {       
....................             if( bit_test(Horno[i][j] ,7-k ))  
2BBA:  CLRF   x52
2BBC:  MOVFF  64E,651
2BC0:  CLRF   x54
2BC2:  MOVLW  10
2BC4:  MOVWF  x53
2BC6:  MOVLB  0
2BC8:  CALL   1CBA
2BCC:  MOVFF  02,652
2BD0:  MOVFF  01,651
2BD4:  MOVLB  6
2BD6:  MOVF   x4F,W
2BD8:  ADDWF  01,W
2BDA:  MOVWF  01
2BDC:  MOVLW  00
2BDE:  ADDWFC 02,W
2BE0:  MOVWF  03
2BE2:  MOVF   01,W
2BE4:  MOVFF  FF2,651
2BE8:  BCF    FF2.7
2BEA:  MOVFF  03,FF7
2BEE:  MOVLB  0
2BF0:  CALL   02A6
2BF4:  MOVLB  6
2BF6:  BTFSC  x51.7
2BF8:  BSF    FF2.7
2BFA:  MOVWF  x51
2BFC:  MOVLW  07
2BFE:  BSF    FD8.0
2C00:  SUBFWB x50,W
2C02:  MOVWF  x52
2C04:  MOVFF  651,00
2C08:  MOVF   x52,W
2C0A:  MOVWF  01
2C0C:  BZ    2C16
2C0E:  BCF    FD8.0
2C10:  RRCF   00,F
2C12:  DECFSZ 01,F
2C14:  BRA    2C0E
2C16:  BTFSS  00.0
2C18:  BRA    2C36
....................                glcd_pixel( j*8+k,i, ON ); 
2C1A:  MOVF   x4F,W
2C1C:  MULLW  08
2C1E:  MOVF   FF3,W
2C20:  ADDWF  x50,W
2C22:  MOVWF  x51
2C24:  MOVWF  x7E
2C26:  MOVFF  64E,67F
2C2A:  MOVLW  01
2C2C:  MOVWF  x80
2C2E:  MOVLB  0
2C30:  CALL   141A
2C34:  MOVLB  6
....................          }   
2C36:  DECF   x50,F
2C38:  BRA    2BB2
....................       } 
2C3A:  INCF   x4F,F
2C3C:  BRA    2BA8
....................    } 
2C3E:  INCF   x4E,F
2C40:  BRA    2BA0
....................    } 
....................     
.................... } 
2C42:  MOVLB  0
2C44:  GOTO   63EE (RETURN)
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0CB4:  MOVLW  15
0CB6:  MOVWF  FCF
0CB8:  MOVLW  A0
0CBA:  MOVWF  FCE
....................    tiempos++; 
0CBC:  MOVLB  5
0CBE:  INCF   xA1,F
0CC0:  BTFSC  FD8.2
0CC2:  INCF   xA2,F
....................    tiempos3++; 
0CC4:  INCF   xA3,F
0CC6:  BTFSC  FD8.2
0CC8:  INCF   xA4,F
....................    tiempoctrl++; 
0CCA:  INCF   xA5,F
0CCC:  BTFSC  FD8.2
0CCE:  INCF   xA6,F
....................     
....................    if(tiempos3>=200) 
0CD0:  MOVF   xA4,F
0CD2:  BNZ   0CDA
0CD4:  MOVF   xA3,W
0CD6:  SUBLW  C7
0CD8:  BC    0CDE
....................    { 
....................       Lectura2=1; 
0CDA:  MOVLW  01
0CDC:  MOVWF  x90
....................    } 
....................     
....................    if(Controlando==1){ 
0CDE:  DECFSZ x92,W
0CE0:  BRA    0D0C
....................       if(tiempoctrl<Tp) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
0CE2:  MOVF   xA6,W
0CE4:  SUBWF  xAE,W
0CE6:  BNC   0CF6
0CE8:  BNZ   0CF0
0CEA:  MOVF   xAD,W
0CEC:  SUBWF  xA5,W
0CEE:  BC    0CF6
....................       { 
....................          Rele2_on; 
0CF0:  BSF    F8B.6
0CF2:  BCF    F94.6
....................       } 
....................       else          
0CF4:  BRA    0CFA
....................       { 
....................          Rele2_off; 
0CF6:  BCF    F8B.6
0CF8:  BCF    F94.6
....................       } 
....................        
....................       if(tiempoctrl>=Tc) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
0CFA:  MOVF   xB0,W
0CFC:  SUBWF  xA6,W
0CFE:  BNC   0D0C
0D00:  BNZ   0D08
0D02:  MOVF   xAF,W
0D04:  SUBWF  xA5,W
0D06:  BNC   0D0C
....................       { 
....................          tiempoctrl=0; 
0D08:  CLRF   xA6
0D0A:  CLRF   xA5
....................       } // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
....................    } 
....................      
....................    if(tiempos>=200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0D0C:  MOVF   xA2,F
0D0E:  BNZ   0D16
0D10:  MOVF   xA1,W
0D12:  SUBLW  C7
0D14:  BC    0D40
....................    {tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++; 
0D16:  CLRF   xA2
0D18:  CLRF   xA1
0D1A:  BSF    x87.2
0D1C:  INCF   x96,F
0D1E:  INCF   x9B,F
0D20:  INCF   x8D,F
....................     
....................       if(flag_setpoint==1) 
0D22:  BTFSS  x94.1
0D24:  BRA    0D2C
....................          tiemposetpoint++; 
0D26:  INCF   xAB,F
0D28:  BTFSC  FD8.2
0D2A:  INCF   xAC,F
....................           
....................       if(tiempo_esterilizacion==1) 
0D2C:  DECFSZ x9D,W
0D2E:  BRA    0D36
....................       {                
....................          tinicio++; 
0D30:  INCF   xA7,F
0D32:  BTFSC  FD8.2
0D34:  INCF   xA8,F
....................       } 
....................        
....................       if(flag_tiempocalentamiento==1) 
0D36:  BTFSS  x87.7
0D38:  BRA    0D40
....................       { 
....................          tiempocalentamiento++; 
0D3A:  INCF   xA9,F
0D3C:  BTFSC  FD8.2
0D3E:  INCF   xAA,F
....................       } 
....................    }         
.................... } 
....................     
0D40:  BCF    F9E.0
0D42:  MOVLB  0
0D44:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
.................... } 
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
362C:  MOVLW  06
362E:  MOVLB  6
3630:  MOVWF  x4C
3632:  MOVLW  54
3634:  MOVWF  x4B
3636:  MOVLW  42
3638:  MOVWF  FE9
363A:  MOVFF  650,663
363E:  MOVFF  64F,662
3642:  MOVFF  64E,661
3646:  MOVFF  64D,660
364A:  MOVLW  01
364C:  MOVWF  x64
364E:  MOVLB  0
3650:  CALL   250E
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
3654:  MOVLB  6
3656:  MOVF   x53,W
3658:  MULLW  1B
365A:  MOVF   FF3,W
365C:  ADDWF  x51,W
365E:  MOVWF  x5D
3660:  MOVF   x53,W
3662:  MULLW  08
3664:  MOVF   FF3,W
3666:  ADDWF  x52,W
3668:  MOVWF  x5E
366A:  MOVFF  651,662
366E:  MOVFF  652,663
3672:  MOVFF  65D,664
3676:  MOVWF  x65
3678:  MOVLW  01
367A:  MOVWF  x66
367C:  CLRF   x67
367E:  MOVLB  0
3680:  CALL   17CC
....................    glcd_text57(x, y, voltage, w, ON); 
3684:  MOVFF  651,662
3688:  MOVFF  652,663
368C:  MOVLW  06
368E:  MOVLB  6
3690:  MOVWF  x65
3692:  MOVLW  54
3694:  MOVWF  x64
3696:  MOVFF  653,666
369A:  MOVLW  01
369C:  MOVWF  x67
369E:  MOVLB  0
36A0:  CALL   14D6
.................... } 
36A4:  RETLW  00
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
1AB4:  MOVLW  06
1AB6:  MOVLB  6
1AB8:  MOVWF  x4C
1ABA:  MOVLW  53
1ABC:  MOVWF  x4B
1ABE:  MOVFF  64F,65C
1AC2:  MOVLW  1F
1AC4:  MOVWF  x5D
1AC6:  MOVLB  0
1AC8:  BRA    19D4
....................     
....................    if(sombreado==1) 
1ACA:  MOVLB  6
1ACC:  DECFSZ x52,W
1ACE:  BRA    1B1E
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1AD0:  MOVLW  12
1AD2:  ADDWF  x50,W
1AD4:  MOVWF  x5C
1AD6:  MOVLW  18
1AD8:  ADDWF  x51,W
1ADA:  MOVWF  x5D
1ADC:  MOVFF  650,662
1AE0:  MOVFF  651,663
1AE4:  MOVFF  65C,664
1AE8:  MOVWF  x65
1AEA:  MOVLW  01
1AEC:  MOVWF  x66
1AEE:  MOVWF  x67
1AF0:  MOVLB  0
1AF2:  RCALL  17CC
1AF4:  MOVLW  02
1AF6:  MOVLB  6
1AF8:  ADDWF  x50,W
1AFA:  MOVWF  x5C
1AFC:  MOVLW  01
1AFE:  ADDWF  x51,W
1B00:  MOVWF  x5D
1B02:  MOVFF  65C,662
1B06:  MOVWF  x63
1B08:  MOVLW  06
1B0A:  MOVWF  x65
1B0C:  MOVLW  53
1B0E:  MOVWF  x64
1B10:  MOVLW  02
1B12:  MOVWF  x66
1B14:  CLRF   x67
1B16:  MOVLB  0
1B18:  RCALL  14D6
....................    else    
1B1A:  BRA    1B68
1B1C:  MOVLB  6
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
1B1E:  MOVLW  12
1B20:  ADDWF  x50,W
1B22:  MOVWF  x5C
1B24:  MOVLW  18
1B26:  ADDWF  x51,W
1B28:  MOVWF  x5D
1B2A:  MOVFF  650,662
1B2E:  MOVFF  651,663
1B32:  MOVFF  65C,664
1B36:  MOVWF  x65
1B38:  CLRF   x66
1B3A:  CLRF   x67
1B3C:  MOVLB  0
1B3E:  RCALL  17CC
1B40:  MOVLW  02
1B42:  MOVLB  6
1B44:  ADDWF  x50,W
1B46:  MOVWF  x5C
1B48:  MOVLW  01
1B4A:  ADDWF  x51,W
1B4C:  MOVWF  x5D
1B4E:  MOVFF  65C,662
1B52:  MOVWF  x63
1B54:  MOVLW  06
1B56:  MOVWF  x65
1B58:  MOVLW  53
1B5A:  MOVWF  x64
1B5C:  MOVLW  02
1B5E:  MOVWF  x66
1B60:  MOVLW  01
1B62:  MOVWF  x67
1B64:  MOVLB  0
1B66:  RCALL  14D6
....................  
.................... } 
1B68:  RETLW  00
....................  
....................  
.................... void main() 
.................... { 
*
36A6:  CLRF   FF8
36A8:  BCF    FD0.7
36AA:  BSF    07.7
36AC:  CLRF   FEA
36AE:  CLRF   FE9
36B0:  MOVLB  5
36B2:  BCF    x86.0
36B4:  BCF    x86.1
36B6:  BCF    x86.2
36B8:  BCF    x86.3
36BA:  BCF    x86.4
36BC:  BCF    x86.5
36BE:  BCF    x86.6
36C0:  BCF    x86.7
36C2:  BCF    x87.0
36C4:  CLRF   x88
36C6:  CLRF   x89
36C8:  CLRF   x8A
36CA:  CLRF   x8B
36CC:  MOVLW  0A
36CE:  MOVWF  x8C
36D0:  CLRF   x8D
36D2:  CLRF   x8E
36D4:  MOVLW  03
36D6:  MOVWF  x8F
36D8:  CLRF   x90
36DA:  CLRF   x91
36DC:  CLRF   x92
36DE:  MOVLW  0A
36E0:  MOVWF  x93
36E2:  BSF    x87.1
36E4:  BCF    x87.2
36E6:  BCF    x87.3
36E8:  BCF    x87.4
36EA:  BCF    x87.5
36EC:  BCF    x87.6
36EE:  BCF    x87.7
36F0:  BCF    x94.0
36F2:  BCF    x94.1
36F4:  CLRF   x95
36F6:  CLRF   x96
36F8:  CLRF   x97
36FA:  MOVLW  01
36FC:  MOVWF  x98
36FE:  CLRF   x99
3700:  CLRF   x9A
3702:  CLRF   x9B
3704:  MOVWF  x9C
3706:  CLRF   x9D
3708:  CLRF   x9E
370A:  CLRF   x9F
370C:  CLRF   xA0
370E:  CLRF   xA2
3710:  CLRF   xA1
3712:  CLRF   xA4
3714:  CLRF   xA3
3716:  CLRF   xA6
3718:  CLRF   xA5
371A:  CLRF   xA8
371C:  CLRF   xA7
371E:  CLRF   xAA
3720:  CLRF   xA9
3722:  CLRF   xAC
3724:  CLRF   xAB
3726:  CLRF   xAE
3728:  CLRF   xAD
372A:  CLRF   xB0
372C:  CLRF   xAF
372E:  CLRF   xB4
3730:  CLRF   xB3
3732:  CLRF   xB2
3734:  CLRF   xB1
3736:  CLRF   xB8
3738:  CLRF   xB7
373A:  CLRF   xB6
373C:  CLRF   xB5
373E:  CLRF   xBC
3740:  CLRF   xBB
3742:  CLRF   xBA
3744:  CLRF   xB9
3746:  CLRF   xD0
3748:  CLRF   xCF
374A:  CLRF   xCE
374C:  CLRF   xCD
374E:  CLRF   xD4
3750:  MOVLW  40
3752:  MOVWF  xD3
3754:  MOVLW  1C
3756:  MOVWF  xD2
3758:  MOVLW  8C
375A:  MOVWF  xD1
375C:  CLRF   xDC
375E:  CLRF   xDB
3760:  MOVLW  20
3762:  MOVWF  xDA
3764:  MOVLW  82
3766:  MOVWF  xD9
3768:  CLRF   xE0
376A:  CLRF   xDF
376C:  CLRF   xDE
376E:  CLRF   xDD
3770:  CLRF   xE4
3772:  CLRF   xE3
3774:  CLRF   xE2
3776:  CLRF   xE1
3778:  CLRF   xE8
377A:  CLRF   xE7
377C:  CLRF   xE6
377E:  CLRF   xE5
3780:  CLRF   xEC
3782:  CLRF   xEB
3784:  CLRF   xEA
3786:  CLRF   xE9
3788:  CLRF   xF0
378A:  CLRF   xEF
378C:  CLRF   xEE
378E:  CLRF   xED
3790:  CLRF   xF4
3792:  CLRF   xF3
3794:  CLRF   xF2
3796:  MOVLW  80
3798:  MOVWF  xF1
379A:  CLRF   xF8
379C:  CLRF   xF7
379E:  CLRF   xF6
37A0:  MOVLW  7F
37A2:  MOVWF  xF5
37A4:  CLRF   xFC
37A6:  CLRF   xFB
37A8:  MOVLW  32
37AA:  MOVWF  xFA
37AC:  MOVLW  84
37AE:  MOVWF  xF9
37B0:  MOVLB  6
37B2:  CLRF   x00
37B4:  MOVLB  5
37B6:  CLRF   xFF
37B8:  CLRF   xFE
37BA:  CLRF   xFD
37BC:  MOVLB  6
37BE:  CLRF   x04
37C0:  CLRF   x03
37C2:  CLRF   x02
37C4:  CLRF   x01
37C6:  CLRF   x08
37C8:  CLRF   x07
37CA:  MOVLW  20
37CC:  MOVWF  x06
37CE:  MOVLW  82
37D0:  MOVWF  x05
37D2:  CLRF   x0C
37D4:  CLRF   x0B
37D6:  CLRF   x0A
37D8:  CLRF   x09
37DA:  CLRF   x10
37DC:  CLRF   x0F
37DE:  CLRF   x0E
37E0:  CLRF   x0D
37E2:  CLRF   x14
37E4:  CLRF   x13
37E6:  CLRF   x12
37E8:  CLRF   x11
37EA:  CLRF   x18
37EC:  CLRF   x17
37EE:  CLRF   x16
37F0:  CLRF   x15
37F2:  CLRF   x1C
37F4:  CLRF   x1B
37F6:  CLRF   x1A
37F8:  CLRF   x19
37FA:  CLRF   x20
37FC:  CLRF   x1F
37FE:  CLRF   x1E
3800:  CLRF   x1D
3802:  MOVLW  E0
3804:  MOVWF  x24
3806:  MOVLW  2D
3808:  MOVWF  x23
380A:  MOVLW  10
380C:  MOVWF  x22
380E:  MOVLW  75
3810:  MOVWF  x21
3812:  MOVLW  FF
3814:  MOVWF  x28
3816:  MOVLW  21
3818:  MOVWF  x27
381A:  MOVLW  15
381C:  MOVWF  x26
381E:  MOVLW  80
3820:  MOVWF  x25
3822:  MOVLW  82
3824:  MOVWF  x2C
3826:  MOVLW  12
3828:  MOVWF  x2B
382A:  MOVLW  F4
382C:  MOVWF  x2A
382E:  MOVLW  86
3830:  MOVWF  x29
3832:  MOVF   FC1,W
3834:  ANDLW  C0
3836:  IORLW  0F
3838:  MOVWF  FC1
383A:  MOVLW  07
383C:  MOVWF  FB4
383E:  MOVLB  4
3840:  CLRF   x16
3842:  CLRF   x17
3844:  CLRF   x18
3846:  CLRF   x19
3848:  CLRF   x1A
384A:  CLRF   x1B
384C:  CLRF   x1C
384E:  CLRF   x1D
3850:  CLRF   x1E
3852:  CLRF   x1F
3854:  CLRF   x20
3856:  CLRF   x21
3858:  CLRF   x22
385A:  CLRF   x23
385C:  CLRF   x24
385E:  CLRF   x25
3860:  CLRF   x26
3862:  CLRF   x27
3864:  CLRF   x28
3866:  CLRF   x29
3868:  CLRF   x2A
386A:  CLRF   x2B
386C:  CLRF   x2C
386E:  CLRF   x2D
3870:  CLRF   x2E
3872:  CLRF   x2F
3874:  CLRF   x30
3876:  CLRF   x31
3878:  CLRF   x32
387A:  CLRF   x33
387C:  CLRF   x34
387E:  CLRF   x35
3880:  CLRF   x36
3882:  CLRF   x37
3884:  CLRF   x38
3886:  CLRF   x39
3888:  CLRF   x3A
388A:  CLRF   x3B
388C:  CLRF   x3C
388E:  CLRF   x3D
3890:  CLRF   x3E
3892:  CLRF   x3F
3894:  CLRF   x40
3896:  CLRF   x41
3898:  CLRF   x42
389A:  CLRF   x43
389C:  CLRF   x44
389E:  CLRF   x45
38A0:  CLRF   x46
38A2:  CLRF   x47
38A4:  CLRF   x48
38A6:  CLRF   x49
38A8:  CLRF   x4A
38AA:  CLRF   x4B
38AC:  CLRF   x4C
38AE:  CLRF   x4D
38B0:  CLRF   x4E
38B2:  CLRF   x4F
38B4:  CLRF   x50
38B6:  CLRF   x51
38B8:  CLRF   x52
38BA:  CLRF   x53
38BC:  CLRF   x54
38BE:  CLRF   x55
38C0:  CLRF   x56
38C2:  CLRF   x57
38C4:  CLRF   x58
38C6:  CLRF   x59
38C8:  CLRF   x5A
38CA:  CLRF   x5B
38CC:  CLRF   x5C
38CE:  CLRF   x5D
38D0:  CLRF   x5E
38D2:  CLRF   x5F
38D4:  CLRF   x60
38D6:  CLRF   x61
38D8:  CLRF   x62
38DA:  CLRF   x63
38DC:  CLRF   x64
38DE:  CLRF   x65
38E0:  CLRF   x66
38E2:  CLRF   x67
38E4:  CLRF   x68
38E6:  CLRF   x69
38E8:  CLRF   x6A
38EA:  CLRF   x6B
38EC:  CLRF   x6C
38EE:  CLRF   x6D
38F0:  CLRF   x6E
38F2:  CLRF   x6F
38F4:  CLRF   x70
38F6:  CLRF   x71
38F8:  CLRF   x72
38FA:  CLRF   x73
38FC:  CLRF   x74
38FE:  CLRF   x75
3900:  CLRF   x76
3902:  CLRF   x77
3904:  CLRF   x78
3906:  CLRF   x79
3908:  CLRF   x7A
390A:  CLRF   x7B
390C:  CLRF   x7C
390E:  CLRF   x7D
3910:  CLRF   x7E
3912:  CLRF   x7F
3914:  CLRF   x80
3916:  CLRF   x81
3918:  CLRF   x82
391A:  CLRF   x83
391C:  CLRF   x84
391E:  CLRF   x85
3920:  CLRF   x86
3922:  CLRF   x87
3924:  CLRF   x88
3926:  CLRF   x89
3928:  CLRF   x8A
392A:  CLRF   x8B
392C:  CLRF   x8C
392E:  CLRF   x8D
3930:  CLRF   x8E
3932:  CLRF   x8F
3934:  CLRF   x90
3936:  CLRF   x91
3938:  CLRF   x92
393A:  CLRF   x93
393C:  CLRF   x94
393E:  CLRF   x95
3940:  CLRF   x96
3942:  CLRF   x97
3944:  CLRF   x98
3946:  CLRF   x99
3948:  CLRF   x9A
394A:  CLRF   x9B
394C:  CLRF   x9C
394E:  CLRF   x9D
3950:  CLRF   x9E
3952:  CLRF   x9F
3954:  CLRF   xA0
3956:  CLRF   xA1
3958:  CLRF   xA2
395A:  CLRF   xA3
395C:  CLRF   xA4
395E:  CLRF   xA5
3960:  CLRF   xA6
3962:  CLRF   xA7
3964:  CLRF   xA8
3966:  CLRF   xA9
3968:  CLRF   xAA
396A:  CLRF   xAB
396C:  CLRF   xAC
396E:  CLRF   xAD
3970:  CLRF   xAE
3972:  CLRF   xAF
3974:  CLRF   xB0
3976:  CLRF   xB1
3978:  CLRF   xB2
397A:  CLRF   xB3
397C:  CLRF   xB4
397E:  CLRF   xB5
3980:  CLRF   xB6
3982:  CLRF   xB7
3984:  CLRF   xB8
3986:  CLRF   xB9
3988:  CLRF   xBA
398A:  CLRF   xBB
398C:  CLRF   xBC
398E:  CLRF   xBD
3990:  CLRF   xBE
3992:  CLRF   xBF
3994:  CLRF   xC0
3996:  CLRF   xC1
3998:  CLRF   xC2
399A:  CLRF   xC3
399C:  CLRF   xC4
399E:  CLRF   xC5
39A0:  CLRF   xC6
39A2:  CLRF   xC7
39A4:  CLRF   xC8
39A6:  CLRF   xC9
39A8:  CLRF   xCA
39AA:  CLRF   xCB
39AC:  CLRF   xCC
39AE:  CLRF   xCD
39B0:  CLRF   xCE
39B2:  CLRF   xCF
39B4:  CLRF   xD0
39B6:  CLRF   xD1
39B8:  CLRF   xD2
39BA:  CLRF   xD3
39BC:  CLRF   xD4
39BE:  CLRF   xD5
39C0:  CLRF   xD6
39C2:  CLRF   xD7
39C4:  CLRF   xD8
39C6:  CLRF   xD9
39C8:  CLRF   xDA
39CA:  CLRF   xDB
39CC:  CLRF   xDC
39CE:  CLRF   xDD
39D0:  CLRF   xDE
39D2:  CLRF   xDF
39D4:  CLRF   xE0
39D6:  CLRF   xE1
39D8:  CLRF   xE2
39DA:  CLRF   xE3
39DC:  CLRF   xE4
39DE:  CLRF   xE5
39E0:  CLRF   xE6
39E2:  CLRF   xE7
39E4:  CLRF   xE8
39E6:  CLRF   xE9
39E8:  CLRF   xEA
39EA:  CLRF   xEB
39EC:  CLRF   xEC
39EE:  CLRF   xED
39F0:  CLRF   xEE
39F2:  CLRF   xEF
39F4:  CLRF   xF0
39F6:  CLRF   xF1
39F8:  CLRF   xF2
39FA:  CLRF   xF3
39FC:  CLRF   xF4
39FE:  CLRF   xF5
3A00:  CLRF   xF6
3A02:  CLRF   xF7
3A04:  CLRF   xF8
3A06:  CLRF   xF9
3A08:  CLRF   xFA
3A0A:  CLRF   xFB
3A0C:  CLRF   xFC
3A0E:  CLRF   xFD
3A10:  CLRF   xFE
3A12:  CLRF   xFF
3A14:  MOVLB  5
3A16:  CLRF   x00
3A18:  CLRF   x01
3A1A:  CLRF   x02
3A1C:  CLRF   x03
3A1E:  CLRF   x04
3A20:  CLRF   x05
3A22:  CLRF   x06
3A24:  CLRF   x07
3A26:  CLRF   x08
3A28:  CLRF   x09
3A2A:  CLRF   x0A
3A2C:  CLRF   x0B
3A2E:  CLRF   x0C
3A30:  CLRF   x0D
3A32:  CLRF   x0E
3A34:  CLRF   x0F
3A36:  CLRF   x10
3A38:  CLRF   x11
3A3A:  CLRF   x12
3A3C:  CLRF   x13
3A3E:  CLRF   x14
3A40:  CLRF   x15
3A42:  CLRF   x16
3A44:  CLRF   x17
3A46:  CLRF   x18
3A48:  CLRF   x19
3A4A:  CLRF   x1A
3A4C:  CLRF   x1B
3A4E:  CLRF   x1C
3A50:  CLRF   x1D
3A52:  CLRF   x1E
3A54:  CLRF   x1F
3A56:  CLRF   x20
3A58:  CLRF   x21
3A5A:  CLRF   x22
3A5C:  CLRF   x23
3A5E:  CLRF   x24
3A60:  CLRF   x25
3A62:  CLRF   x26
3A64:  CLRF   x27
3A66:  CLRF   x28
3A68:  CLRF   x29
3A6A:  CLRF   x2A
3A6C:  CLRF   x2B
3A6E:  CLRF   x2C
3A70:  CLRF   x2D
3A72:  CLRF   x2E
3A74:  CLRF   x2F
3A76:  CLRF   x30
3A78:  CLRF   x31
3A7A:  CLRF   x32
3A7C:  CLRF   x33
3A7E:  CLRF   x34
3A80:  CLRF   x35
3A82:  CLRF   x36
3A84:  CLRF   x37
3A86:  CLRF   x38
3A88:  CLRF   x39
3A8A:  CLRF   x3A
3A8C:  CLRF   x3B
3A8E:  CLRF   x3C
3A90:  CLRF   x3D
3A92:  CLRF   x3E
3A94:  CLRF   x3F
3A96:  CLRF   x40
3A98:  CLRF   x41
3A9A:  CLRF   x42
3A9C:  CLRF   x43
3A9E:  CLRF   x44
3AA0:  CLRF   x45
3AA2:  CLRF   x46
3AA4:  CLRF   x47
3AA6:  CLRF   x48
3AA8:  CLRF   x49
3AAA:  CLRF   x4A
3AAC:  CLRF   x4B
3AAE:  CLRF   x4C
3AB0:  CLRF   x4D
3AB2:  CLRF   x4E
3AB4:  CLRF   x4F
3AB6:  CLRF   x50
3AB8:  CLRF   x51
3ABA:  CLRF   x52
3ABC:  CLRF   x53
3ABE:  CLRF   x54
3AC0:  CLRF   x55
3AC2:  CLRF   x56
3AC4:  CLRF   x57
3AC6:  CLRF   x58
3AC8:  CLRF   x59
3ACA:  CLRF   x5A
3ACC:  CLRF   x5B
3ACE:  CLRF   x5C
3AD0:  CLRF   x5D
3AD2:  CLRF   x5E
3AD4:  CLRF   x5F
3AD6:  CLRF   x60
3AD8:  CLRF   x61
3ADA:  CLRF   x62
3ADC:  CLRF   x63
3ADE:  CLRF   x64
3AE0:  CLRF   x65
3AE2:  CLRF   x66
3AE4:  CLRF   x67
3AE6:  CLRF   x68
3AE8:  CLRF   x69
3AEA:  CLRF   x6A
3AEC:  CLRF   x6B
3AEE:  CLRF   x6C
3AF0:  CLRF   x6D
3AF2:  CLRF   x6E
3AF4:  CLRF   x6F
3AF6:  CLRF   x70
3AF8:  CLRF   x71
3AFA:  CLRF   x72
3AFC:  CLRF   x73
3AFE:  CLRF   x74
3B00:  CLRF   x75
3B02:  CLRF   x76
3B04:  CLRF   x77
3B06:  CLRF   x78
3B08:  CLRF   x79
3B0A:  CLRF   x7A
3B0C:  CLRF   x7B
3B0E:  CLRF   x7C
3B10:  CLRF   x7D
3B12:  CLRF   x7E
3B14:  CLRF   x7F
3B16:  CLRF   x80
3B18:  CLRF   x81
3B1A:  CLRF   x82
3B1C:  CLRF   x83
3B1E:  CLRF   x84
3B20:  CLRF   x85
3B22:  CLRF   xBD
3B24:  CLRF   xBE
3B26:  CLRF   xBF
3B28:  CLRF   xC0
3B2A:  CLRF   xC1
3B2C:  CLRF   xC2
3B2E:  CLRF   xC3
3B30:  CLRF   xC4
3B32:  CLRF   xC5
3B34:  CLRF   xC6
3B36:  CLRF   xC7
3B38:  CLRF   xC8
3B3A:  CLRF   xC9
3B3C:  CLRF   xCA
3B3E:  CLRF   xCB
3B40:  CLRF   xCC
3B42:  MOVLB  6
3B44:  CLRF   x4B
3B46:  CLRF   x4C
....................    delay_ms(1000);    
3B48:  MOVLW  04
3B4A:  MOVWF  x4D
3B4C:  MOVLW  FA
3B4E:  MOVWF  x53
3B50:  MOVLB  0
3B52:  CALL   0D48
3B56:  MOVLB  6
3B58:  DECFSZ x4D,F
3B5A:  BRA    3B4C
....................    Buzzer_off; 
3B5C:  BCF    F8A.7
3B5E:  BCF    F93.7
....................    Velocidades(0); 
3B60:  CLRF   x4D
3B62:  MOVLB  0
3B64:  CALL   0D72
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
3B68:  MOVLW  85
3B6A:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
3B6C:  BSF    F9D.0
....................    setup_adc_ports(AN0_TO_AN1); 
3B6E:  MOVF   FC1,W
3B70:  ANDLW  C0
3B72:  IORLW  0D
3B74:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_64); 
3B76:  BCF    FC0.0
3B78:  BSF    FC0.1
3B7A:  BSF    FC0.2
3B7C:  BSF    FC0.7
3B7E:  BSF    FC2.0
....................    setup_ccp2 (CCP_PWM); 
3B80:  BCF    F94.1
3B82:  BCF    F8B.1
3B84:  MOVLW  0C
3B86:  MOVWF  FBA
....................    setup_timer_2(T2_DIV_BY_16, 255, 1);    
3B88:  MOVLW  00
3B8A:  IORLW  06
3B8C:  MOVWF  FCA
3B8E:  MOVLW  FF
3B90:  MOVWF  FCB
....................    set_pwm2_duty(0); 
3B92:  CLRF   FBB
....................    enable_interrupts(global); 
3B94:  MOVLW  C0
3B96:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0); 
3B98:  MOVFF  FF2,64D
3B9C:  BCF    FF2.7
3B9E:  CLRF   FA9
3BA0:  BCF    FA6.6
3BA2:  BCF    FA6.7
3BA4:  BSF    FA6.0
3BA6:  MOVF   FA8,W
3BA8:  MOVLB  6
3BAA:  BTFSC  x4D.7
3BAC:  BSF    FF2.7
3BAE:  MOVLB  5
3BB0:  MOVWF  xC1
....................    delay_ms(50);    
3BB2:  MOVLW  32
3BB4:  MOVLB  6
3BB6:  MOVWF  x53
3BB8:  MOVLB  0
3BBA:  CALL   0D48
....................    Testerilizacionp[1]=read_eeprom(1); 
3BBE:  MOVFF  FF2,64D
3BC2:  BCF    FF2.7
3BC4:  MOVLW  01
3BC6:  MOVWF  FA9
3BC8:  BCF    FA6.6
3BCA:  BCF    FA6.7
3BCC:  BSF    FA6.0
3BCE:  MOVF   FA8,W
3BD0:  MOVLB  6
3BD2:  BTFSC  x4D.7
3BD4:  BSF    FF2.7
3BD6:  MOVLB  5
3BD8:  MOVWF  xC2
....................    delay_ms(50);    
3BDA:  MOVLW  32
3BDC:  MOVLB  6
3BDE:  MOVWF  x53
3BE0:  MOVLB  0
3BE2:  CALL   0D48
....................    Testerilizacionp[2]=read_eeprom(2); 
3BE6:  MOVFF  FF2,64D
3BEA:  BCF    FF2.7
3BEC:  MOVLW  02
3BEE:  MOVWF  FA9
3BF0:  BCF    FA6.6
3BF2:  BCF    FA6.7
3BF4:  BSF    FA6.0
3BF6:  MOVF   FA8,W
3BF8:  MOVLB  6
3BFA:  BTFSC  x4D.7
3BFC:  BSF    FF2.7
3BFE:  MOVLB  5
3C00:  MOVWF  xC3
....................    delay_ms(50); 
3C02:  MOVLW  32
3C04:  MOVLB  6
3C06:  MOVWF  x53
3C08:  MOVLB  0
3C0A:  CALL   0D48
....................    Testerilizacionp[3]=read_eeprom(3); 
3C0E:  MOVFF  FF2,64D
3C12:  BCF    FF2.7
3C14:  MOVLW  03
3C16:  MOVWF  FA9
3C18:  BCF    FA6.6
3C1A:  BCF    FA6.7
3C1C:  BSF    FA6.0
3C1E:  MOVF   FA8,W
3C20:  MOVLB  6
3C22:  BTFSC  x4D.7
3C24:  BSF    FF2.7
3C26:  MOVLB  5
3C28:  MOVWF  xC4
....................    delay_ms(50);    
3C2A:  MOVLW  32
3C2C:  MOVLB  6
3C2E:  MOVWF  x53
3C30:  MOVLB  0
3C32:  CALL   0D48
....................     
....................    entero=read_eeprom(80); 
3C36:  MOVFF  FF2,64D
3C3A:  BCF    FF2.7
3C3C:  MOVLW  50
3C3E:  MOVWF  FA9
3C40:  BCF    FA6.6
3C42:  BCF    FA6.7
3C44:  BSF    FA6.0
3C46:  MOVF   FA8,W
3C48:  MOVLB  6
3C4A:  BTFSC  x4D.7
3C4C:  BSF    FF2.7
3C4E:  MOVLB  5
3C50:  MOVWF  xA0
....................    delay_ms(50);    
3C52:  MOVLW  32
3C54:  MOVLB  6
3C56:  MOVWF  x53
3C58:  MOVLB  0
3C5A:  CALL   0D48
....................    Temporal=read_eeprom(81); 
3C5E:  MOVFF  FF2,64D
3C62:  BCF    FF2.7
3C64:  MOVLW  51
3C66:  MOVWF  FA9
3C68:  BCF    FA6.6
3C6A:  BCF    FA6.7
3C6C:  BSF    FA6.0
3C6E:  MOVF   FA8,W
3C70:  MOVLB  6
3C72:  BTFSC  x4D.7
3C74:  BSF    FF2.7
3C76:  CLRF   x54
3C78:  MOVWF  x53
3C7A:  MOVLB  0
3C7C:  CALL   0D9A
3C80:  MOVFF  03,620
3C84:  MOVFF  02,61F
3C88:  MOVFF  01,61E
3C8C:  MOVFF  00,61D
....................    Temporal=Temporal/10.0; 
3C90:  MOVFF  620,651
3C94:  MOVFF  61F,650
3C98:  MOVFF  61E,64F
3C9C:  MOVFF  61D,64E
3CA0:  MOVLB  6
3CA2:  CLRF   x55
3CA4:  CLRF   x54
3CA6:  MOVLW  20
3CA8:  MOVWF  x53
3CAA:  MOVLW  82
3CAC:  MOVWF  x52
3CAE:  MOVLB  0
3CB0:  CALL   0DD0
3CB4:  MOVFF  03,620
3CB8:  MOVFF  02,61F
3CBC:  MOVFF  01,61E
3CC0:  MOVFF  00,61D
....................    Temperatura1=entero+Temporal; 
3CC4:  MOVLB  6
3CC6:  CLRF   x54
3CC8:  MOVFF  5A0,653
3CCC:  MOVLB  0
3CCE:  CALL   0D9A
3CD2:  BCF    FD8.1
3CD4:  MOVFF  03,655
3CD8:  MOVFF  02,654
3CDC:  MOVFF  01,653
3CE0:  MOVFF  00,652
3CE4:  MOVFF  620,659
3CE8:  MOVFF  61F,658
3CEC:  MOVFF  61E,657
3CF0:  MOVFF  61D,656
3CF4:  CALL   0F2E
3CF8:  MOVFF  03,614
3CFC:  MOVFF  02,613
3D00:  MOVFF  01,612
3D04:  MOVFF  00,611
....................    delay_ms(50);    
3D08:  MOVLW  32
3D0A:  MOVLB  6
3D0C:  MOVWF  x53
3D0E:  MOVLB  0
3D10:  CALL   0D48
....................     
....................    entero=read_eeprom(83); 
3D14:  MOVFF  FF2,64D
3D18:  BCF    FF2.7
3D1A:  MOVLW  53
3D1C:  MOVWF  FA9
3D1E:  BCF    FA6.6
3D20:  BCF    FA6.7
3D22:  BSF    FA6.0
3D24:  MOVF   FA8,W
3D26:  MOVLB  6
3D28:  BTFSC  x4D.7
3D2A:  BSF    FF2.7
3D2C:  MOVLB  5
3D2E:  MOVWF  xA0
....................    delay_ms(50);    
3D30:  MOVLW  32
3D32:  MOVLB  6
3D34:  MOVWF  x53
3D36:  MOVLB  0
3D38:  CALL   0D48
....................    Temporal=read_eeprom(84); 
3D3C:  MOVFF  FF2,64D
3D40:  BCF    FF2.7
3D42:  MOVLW  54
3D44:  MOVWF  FA9
3D46:  BCF    FA6.6
3D48:  BCF    FA6.7
3D4A:  BSF    FA6.0
3D4C:  MOVF   FA8,W
3D4E:  MOVLB  6
3D50:  BTFSC  x4D.7
3D52:  BSF    FF2.7
3D54:  CLRF   x54
3D56:  MOVWF  x53
3D58:  MOVLB  0
3D5A:  CALL   0D9A
3D5E:  MOVFF  03,620
3D62:  MOVFF  02,61F
3D66:  MOVFF  01,61E
3D6A:  MOVFF  00,61D
....................    Temporal=Temporal/10.0; 
3D6E:  MOVFF  620,651
3D72:  MOVFF  61F,650
3D76:  MOVFF  61E,64F
3D7A:  MOVFF  61D,64E
3D7E:  MOVLB  6
3D80:  CLRF   x55
3D82:  CLRF   x54
3D84:  MOVLW  20
3D86:  MOVWF  x53
3D88:  MOVLW  82
3D8A:  MOVWF  x52
3D8C:  MOVLB  0
3D8E:  CALL   0DD0
3D92:  MOVFF  03,620
3D96:  MOVFF  02,61F
3D9A:  MOVFF  01,61E
3D9E:  MOVFF  00,61D
....................    Temperatura2=entero+Temporal; 
3DA2:  MOVLB  6
3DA4:  CLRF   x54
3DA6:  MOVFF  5A0,653
3DAA:  MOVLB  0
3DAC:  CALL   0D9A
3DB0:  BCF    FD8.1
3DB2:  MOVFF  03,655
3DB6:  MOVFF  02,654
3DBA:  MOVFF  01,653
3DBE:  MOVFF  00,652
3DC2:  MOVFF  620,659
3DC6:  MOVFF  61F,658
3DCA:  MOVFF  61E,657
3DCE:  MOVFF  61D,656
3DD2:  CALL   0F2E
3DD6:  MOVFF  03,618
3DDA:  MOVFF  02,617
3DDE:  MOVFF  01,616
3DE2:  MOVFF  00,615
....................    delay_ms(50);    
3DE6:  MOVLW  32
3DE8:  MOVLB  6
3DEA:  MOVWF  x53
3DEC:  MOVLB  0
3DEE:  CALL   0D48
....................     
....................    entero=read_eeprom(86); 
3DF2:  MOVFF  FF2,64D
3DF6:  BCF    FF2.7
3DF8:  MOVLW  56
3DFA:  MOVWF  FA9
3DFC:  BCF    FA6.6
3DFE:  BCF    FA6.7
3E00:  BSF    FA6.0
3E02:  MOVF   FA8,W
3E04:  MOVLB  6
3E06:  BTFSC  x4D.7
3E08:  BSF    FF2.7
3E0A:  MOVLB  5
3E0C:  MOVWF  xA0
....................    delay_ms(50);    
3E0E:  MOVLW  32
3E10:  MOVLB  6
3E12:  MOVWF  x53
3E14:  MOVLB  0
3E16:  CALL   0D48
....................    Temporal=read_eeprom(87); 
3E1A:  MOVFF  FF2,64D
3E1E:  BCF    FF2.7
3E20:  MOVLW  57
3E22:  MOVWF  FA9
3E24:  BCF    FA6.6
3E26:  BCF    FA6.7
3E28:  BSF    FA6.0
3E2A:  MOVF   FA8,W
3E2C:  MOVLB  6
3E2E:  BTFSC  x4D.7
3E30:  BSF    FF2.7
3E32:  CLRF   x54
3E34:  MOVWF  x53
3E36:  MOVLB  0
3E38:  CALL   0D9A
3E3C:  MOVFF  03,620
3E40:  MOVFF  02,61F
3E44:  MOVFF  01,61E
3E48:  MOVFF  00,61D
....................    Temporal=Temporal/10.0; 
3E4C:  MOVFF  620,651
3E50:  MOVFF  61F,650
3E54:  MOVFF  61E,64F
3E58:  MOVFF  61D,64E
3E5C:  MOVLB  6
3E5E:  CLRF   x55
3E60:  CLRF   x54
3E62:  MOVLW  20
3E64:  MOVWF  x53
3E66:  MOVLW  82
3E68:  MOVWF  x52
3E6A:  MOVLB  0
3E6C:  CALL   0DD0
3E70:  MOVFF  03,620
3E74:  MOVFF  02,61F
3E78:  MOVFF  01,61E
3E7C:  MOVFF  00,61D
....................    Temperatura3=entero+Temporal; 
3E80:  MOVLB  6
3E82:  CLRF   x54
3E84:  MOVFF  5A0,653
3E88:  MOVLB  0
3E8A:  CALL   0D9A
3E8E:  BCF    FD8.1
3E90:  MOVFF  03,655
3E94:  MOVFF  02,654
3E98:  MOVFF  01,653
3E9C:  MOVFF  00,652
3EA0:  MOVFF  620,659
3EA4:  MOVFF  61F,658
3EA8:  MOVFF  61E,657
3EAC:  MOVFF  61D,656
3EB0:  CALL   0F2E
3EB4:  MOVFF  03,61C
3EB8:  MOVFF  02,61B
3EBC:  MOVFF  01,61A
3EC0:  MOVFF  00,619
....................    delay_ms(50);    
3EC4:  MOVLW  32
3EC6:  MOVLB  6
3EC8:  MOVWF  x53
3ECA:  MOVLB  0
3ECC:  CALL   0D48
....................     
....................    Password[0]=read_eeprom(10); 
3ED0:  MOVFF  FF2,64D
3ED4:  BCF    FF2.7
3ED6:  MOVLW  0A
3ED8:  MOVWF  FA9
3EDA:  BCF    FA6.6
3EDC:  BCF    FA6.7
3EDE:  BSF    FA6.0
3EE0:  MOVF   FA8,W
3EE2:  MOVLB  6
3EE4:  BTFSC  x4D.7
3EE6:  BSF    FF2.7
3EE8:  MOVLB  5
3EEA:  MOVWF  xC9
....................    delay_ms(50);    
3EEC:  MOVLW  32
3EEE:  MOVLB  6
3EF0:  MOVWF  x53
3EF2:  MOVLB  0
3EF4:  CALL   0D48
....................    Password[1]=read_eeprom(11); 
3EF8:  MOVFF  FF2,64D
3EFC:  BCF    FF2.7
3EFE:  MOVLW  0B
3F00:  MOVWF  FA9
3F02:  BCF    FA6.6
3F04:  BCF    FA6.7
3F06:  BSF    FA6.0
3F08:  MOVF   FA8,W
3F0A:  MOVLB  6
3F0C:  BTFSC  x4D.7
3F0E:  BSF    FF2.7
3F10:  MOVLB  5
3F12:  MOVWF  xCA
....................    delay_ms(50);    
3F14:  MOVLW  32
3F16:  MOVLB  6
3F18:  MOVWF  x53
3F1A:  MOVLB  0
3F1C:  CALL   0D48
....................    Password[2]=read_eeprom(12); 
3F20:  MOVFF  FF2,64D
3F24:  BCF    FF2.7
3F26:  MOVLW  0C
3F28:  MOVWF  FA9
3F2A:  BCF    FA6.6
3F2C:  BCF    FA6.7
3F2E:  BSF    FA6.0
3F30:  MOVF   FA8,W
3F32:  MOVLB  6
3F34:  BTFSC  x4D.7
3F36:  BSF    FF2.7
3F38:  MOVLB  5
3F3A:  MOVWF  xCB
....................    delay_ms(50);    
3F3C:  MOVLW  32
3F3E:  MOVLB  6
3F40:  MOVWF  x53
3F42:  MOVLB  0
3F44:  CALL   0D48
....................    Password[3]=read_eeprom(13); 
3F48:  MOVFF  FF2,64D
3F4C:  BCF    FF2.7
3F4E:  MOVLW  0D
3F50:  MOVWF  FA9
3F52:  BCF    FA6.6
3F54:  BCF    FA6.7
3F56:  BSF    FA6.0
3F58:  MOVF   FA8,W
3F5A:  MOVLB  6
3F5C:  BTFSC  x4D.7
3F5E:  BSF    FF2.7
3F60:  MOVLB  5
3F62:  MOVWF  xCC
....................    delay_ms(50);    
3F64:  MOVLW  32
3F66:  MOVLB  6
3F68:  MOVWF  x53
3F6A:  MOVLB  0
3F6C:  CALL   0D48
....................    Ganancia=read_eeprom(90); 
3F70:  MOVFF  FF2,64D
3F74:  BCF    FF2.7
3F76:  MOVLW  5A
3F78:  MOVWF  FA9
3F7A:  BCF    FA6.6
3F7C:  BCF    FA6.7
3F7E:  BSF    FA6.0
3F80:  MOVF   FA8,W
3F82:  MOVLB  6
3F84:  BTFSC  x4D.7
3F86:  BSF    FF2.7
3F88:  CLRF   x54
3F8A:  MOVWF  x53
3F8C:  MOVLB  0
3F8E:  CALL   0D9A
3F92:  MOVFF  03,5F4
3F96:  MOVFF  02,5F3
3F9A:  MOVFF  01,5F2
3F9E:  MOVFF  00,5F1
....................    delay_ms(50);    
3FA2:  MOVLW  32
3FA4:  MOVLB  6
3FA6:  MOVWF  x53
3FA8:  MOVLB  0
3FAA:  CALL   0D48
....................    Tciclo=read_eeprom(30); 
3FAE:  MOVFF  FF2,64D
3FB2:  BCF    FF2.7
3FB4:  MOVLW  1E
3FB6:  MOVWF  FA9
3FB8:  BCF    FA6.6
3FBA:  BCF    FA6.7
3FBC:  BSF    FA6.0
3FBE:  MOVF   FA8,W
3FC0:  MOVLB  6
3FC2:  BTFSC  x4D.7
3FC4:  BSF    FF2.7
3FC6:  CLRF   x54
3FC8:  MOVWF  x53
3FCA:  MOVLB  0
3FCC:  CALL   0D9A
3FD0:  MOVFF  03,5DC
3FD4:  MOVFF  02,5DB
3FD8:  MOVFF  01,5DA
3FDC:  MOVFF  00,5D9
....................    delay_ms(50);    
3FE0:  MOVLW  32
3FE2:  MOVLB  6
3FE4:  MOVWF  x53
3FE6:  MOVLB  0
3FE8:  CALL   0D48
....................    Ajuste=read_eeprom(40); 
3FEC:  MOVFF  FF2,64D
3FF0:  BCF    FF2.7
3FF2:  MOVLW  28
3FF4:  MOVWF  FA9
3FF6:  BCF    FA6.6
3FF8:  BCF    FA6.7
3FFA:  BSF    FA6.0
3FFC:  MOVF   FA8,W
3FFE:  MOVLB  6
4000:  BTFSC  x4D.7
4002:  BSF    FF2.7
4004:  MOVLB  5
4006:  MOVWF  x8A
....................    delay_ms(50);    
4008:  MOVLW  32
400A:  MOVLB  6
400C:  MOVWF  x53
400E:  MOVLB  0
4010:  CALL   0D48
....................    Ajusten=read_eeprom(50); 
4014:  MOVFF  FF2,64D
4018:  BCF    FF2.7
401A:  MOVLW  32
401C:  MOVWF  FA9
401E:  BCF    FA6.6
4020:  BCF    FA6.7
4022:  BSF    FA6.0
4024:  MOVF   FA8,W
4026:  MOVLB  6
4028:  BTFSC  x4D.7
402A:  BSF    FF2.7
402C:  MOVLB  5
402E:  MOVWF  x8B
....................    delay_ms(50);    
4030:  MOVLW  32
4032:  MOVLB  6
4034:  MOVWF  x53
4036:  MOVLB  0
4038:  CALL   0D48
....................    MediaMovil=read_eeprom(60); 
403C:  MOVFF  FF2,64D
4040:  BCF    FF2.7
4042:  MOVLW  3C
4044:  MOVWF  FA9
4046:  BCF    FA6.6
4048:  BCF    FA6.7
404A:  BSF    FA6.0
404C:  MOVF   FA8,W
404E:  MOVLB  6
4050:  BTFSC  x4D.7
4052:  BSF    FF2.7
4054:  MOVLB  5
4056:  MOVWF  x8C
....................    delay_ms(50);    
4058:  MOVLW  32
405A:  MOVLB  6
405C:  MOVWF  x53
405E:  MOVLB  0
4060:  CALL   0D48
....................    Coeficiente=read_eeprom(70); 
4064:  MOVFF  FF2,64D
4068:  BCF    FF2.7
406A:  MOVLW  46
406C:  MOVWF  FA9
406E:  BCF    FA6.6
4070:  BCF    FA6.7
4072:  BSF    FA6.0
4074:  MOVF   FA8,W
4076:  MOVLB  6
4078:  BTFSC  x4D.7
407A:  BSF    FF2.7
407C:  CLRF   x54
407E:  MOVWF  x53
4080:  MOVLB  0
4082:  CALL   0D9A
4086:  MOVFF  03,5FC
408A:  MOVFF  02,5FB
408E:  MOVFF  01,5FA
4092:  MOVFF  00,5F9
....................    delay_ms(50);    
4096:  MOVLW  32
4098:  MOVLB  6
409A:  MOVWF  x53
409C:  MOVLB  0
409E:  CALL   0D48
....................    Saturacion=read_eeprom(100); 
40A2:  MOVFF  FF2,64D
40A6:  BCF    FF2.7
40A8:  MOVLW  64
40AA:  MOVWF  FA9
40AC:  BCF    FA6.6
40AE:  BCF    FA6.7
40B0:  BSF    FA6.0
40B2:  MOVF   FA8,W
40B4:  MOVLB  6
40B6:  BTFSC  x4D.7
40B8:  BSF    FF2.7
40BA:  CLRF   x54
40BC:  MOVWF  x53
40BE:  MOVLB  0
40C0:  CALL   0D9A
40C4:  MOVFF  03,608
40C8:  MOVFF  02,607
40CC:  MOVFF  01,606
40D0:  MOVFF  00,605
....................     
....................    if(Ganancia>10.0) 
40D4:  MOVLB  6
40D6:  CLRF   x50
40D8:  CLRF   x4F
40DA:  MOVLW  20
40DC:  MOVWF  x4E
40DE:  MOVLW  82
40E0:  MOVWF  x4D
40E2:  MOVFF  5F4,654
40E6:  MOVFF  5F3,653
40EA:  MOVFF  5F2,652
40EE:  MOVFF  5F1,651
40F2:  MOVLB  0
40F4:  CALL   11A6
40F8:  BNC   4106
....................    { 
....................       Ganancia=2.0; 
40FA:  MOVLB  5
40FC:  CLRF   xF4
40FE:  CLRF   xF3
4100:  CLRF   xF2
4102:  MOVLW  80
4104:  MOVWF  xF1
....................    } 
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
4106:  MOVLW  01
4108:  MOVLB  6
410A:  MOVWF  x4D
410C:  MOVLB  0
410E:  CALL   1372
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
4112:  MOVLB  6
4114:  CLRF   x4E
4116:  MOVLB  0
4118:  CALL   1260
....................    strcpy(Menus.Letra,"JP Inglobal"); 
411C:  MOVLW  06
411E:  MOVWF  FEA
4120:  MOVLW  2D
4122:  MOVWF  FE9
4124:  MOVFF  FF2,64D
4128:  BCF    FF2.7
412A:  MOVLW  00
412C:  CALL   06DA
4130:  TBLRD*-
4132:  TBLRD*+
4134:  MOVF   FF5,W
4136:  MOVWF  FEE
4138:  IORLW  00
413A:  BNZ   4132
413C:  MOVLB  6
413E:  BTFSC  x4D.7
4140:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
4142:  MOVLW  06
4144:  MOVWF  x4E
4146:  MOVLW  2D
4148:  MOVWF  x4D
414A:  CLRF   x4F
414C:  CLRF   x50
414E:  CLRF   x51
4150:  MOVLW  02
4152:  MOVWF  x52
4154:  MOVLB  0
4156:  CALL   188E
....................    strcpy(Menus.Letra,"    Incubadora"); 
415A:  MOVLW  06
415C:  MOVWF  FEA
415E:  MOVLW  2D
4160:  MOVWF  FE9
4162:  MOVFF  FF2,64D
4166:  BCF    FF2.7
4168:  MOVLW  00
416A:  CALL   0700
416E:  TBLRD*-
4170:  TBLRD*+
4172:  MOVF   FF5,W
4174:  MOVWF  FEE
4176:  IORLW  00
4178:  BNZ   4170
417A:  MOVLB  6
417C:  BTFSC  x4D.7
417E:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
4180:  MOVLW  06
4182:  MOVWF  x4E
4184:  MOVLW  2D
4186:  MOVWF  x4D
4188:  CLRF   x4F
418A:  MOVLW  14
418C:  MOVWF  x50
418E:  CLRF   x51
4190:  MOVLW  01
4192:  MOVWF  x52
4194:  MOVLB  0
4196:  CALL   188E
....................    strcpy(Menus.Letra,"    Refrigerada"); 
419A:  MOVLW  06
419C:  MOVWF  FEA
419E:  MOVLW  2D
41A0:  MOVWF  FE9
41A2:  MOVFF  FF2,64D
41A6:  BCF    FF2.7
41A8:  MOVLW  00
41AA:  CALL   072A
41AE:  TBLRD*-
41B0:  TBLRD*+
41B2:  MOVF   FF5,W
41B4:  MOVWF  FEE
41B6:  IORLW  00
41B8:  BNZ   41B0
41BA:  MOVLB  6
41BC:  BTFSC  x4D.7
41BE:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,1); 
41C0:  MOVLW  06
41C2:  MOVWF  x4E
41C4:  MOVLW  2D
41C6:  MOVWF  x4D
41C8:  CLRF   x4F
41CA:  MOVLW  1E
41CC:  MOVWF  x50
41CE:  CLRF   x51
41D0:  MOVLW  01
41D2:  MOVWF  x52
41D4:  MOVLB  0
41D6:  CALL   188E
....................    strcpy(Menus.Letra,"   115 Lts"); 
41DA:  MOVLW  06
41DC:  MOVWF  FEA
41DE:  MOVLW  2D
41E0:  MOVWF  FE9
41E2:  MOVFF  FF2,64D
41E6:  BCF    FF2.7
41E8:  MOVLW  00
41EA:  CALL   0754
41EE:  TBLRD*-
41F0:  TBLRD*+
41F2:  MOVF   FF5,W
41F4:  MOVWF  FEE
41F6:  IORLW  00
41F8:  BNZ   41F0
41FA:  MOVLB  6
41FC:  BTFSC  x4D.7
41FE:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,45,0,2); 
4200:  MOVLW  06
4202:  MOVWF  x4E
4204:  MOVLW  2D
4206:  MOVWF  x4D
4208:  CLRF   x4F
420A:  MOVWF  x50
420C:  CLRF   x51
420E:  MOVLW  02
4210:  MOVWF  x52
4212:  MOVLB  0
4214:  CALL   188E
....................    delay_ms(1000); 
4218:  MOVLW  04
421A:  MOVLB  6
421C:  MOVWF  x4D
421E:  MOVLW  FA
4220:  MOVWF  x53
4222:  MOVLB  0
4224:  CALL   0D48
4228:  MOVLB  6
422A:  DECFSZ x4D,F
422C:  BRA    421E
....................  
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
422E:  CLRF   x4E
4230:  MOVLB  0
4232:  CALL   1260
....................    displayContrasena(Contrasena[0],20,30,1); 
4236:  MOVFF  5C5,64F
423A:  MOVLW  14
423C:  MOVLB  6
423E:  MOVWF  x50
4240:  MOVLW  1E
4242:  MOVWF  x51
4244:  MOVLW  01
4246:  MOVWF  x52
4248:  MOVLB  0
424A:  CALL   1AB4
....................    displayContrasena(Contrasena[1],40,30,0); 
424E:  MOVFF  5C6,64F
4252:  MOVLW  28
4254:  MOVLB  6
4256:  MOVWF  x50
4258:  MOVLW  1E
425A:  MOVWF  x51
425C:  CLRF   x52
425E:  MOVLB  0
4260:  CALL   1AB4
....................    displayContrasena(Contrasena[2],60,30,0); 
4264:  MOVFF  5C7,64F
4268:  MOVLW  3C
426A:  MOVLB  6
426C:  MOVWF  x50
426E:  MOVLW  1E
4270:  MOVWF  x51
4272:  CLRF   x52
4274:  MOVLB  0
4276:  CALL   1AB4
....................    displayContrasena(Contrasena[3],80,30,0); 
427A:  MOVFF  5C8,64F
427E:  MOVLW  50
4280:  MOVLB  6
4282:  MOVWF  x50
4284:  MOVLW  1E
4286:  MOVWF  x51
4288:  CLRF   x52
428A:  MOVLB  0
428C:  CALL   1AB4
....................     
....................    for(i=0;i<80;i++) 
4290:  MOVLB  5
4292:  CLRF   x99
4294:  MOVF   x99,W
4296:  SUBLW  4F
4298:  BNC   42BA
....................    { 
....................       Temperatura=Leer_Sensor(MediaMovil); 
429A:  MOVFF  58C,64D
429E:  MOVLB  0
42A0:  CALL   1CDC
42A4:  MOVFF  03,604
42A8:  MOVFF  02,603
42AC:  MOVFF  01,602
42B0:  MOVFF  00,601
....................    } 
42B4:  MOVLB  5
42B6:  INCF   x99,F
42B8:  BRA    4294
....................    Teclado(); 
42BA:  MOVLB  0
42BC:  CALL   1E8E
....................    if(UP && DOWN)// && RIGHT && LEFT) 
42C0:  MOVLB  5
42C2:  BTFSS  x86.0
42C4:  BRA    4352
42C6:  BTFSS  x86.1
42C8:  BRA    4352
....................    { 
....................       delay_ms(500); 
42CA:  MOVLW  02
42CC:  MOVLB  6
42CE:  MOVWF  x4D
42D0:  MOVLW  FA
42D2:  MOVWF  x53
42D4:  MOVLB  0
42D6:  CALL   0D48
42DA:  MOVLB  6
42DC:  DECFSZ x4D,F
42DE:  BRA    42D0
....................       strcpy(Menus.Letra,"Cargando.."); 
42E0:  MOVLW  06
42E2:  MOVWF  FEA
42E4:  MOVLW  2D
42E6:  MOVWF  FE9
42E8:  MOVFF  FF2,64D
42EC:  BCF    FF2.7
42EE:  MOVLW  00
42F0:  MOVLB  0
42F2:  CALL   077A
42F6:  TBLRD*-
42F8:  TBLRD*+
42FA:  MOVF   FF5,W
42FC:  MOVWF  FEE
42FE:  IORLW  00
4300:  BNZ   42F8
4302:  MOVLB  6
4304:  BTFSC  x4D.7
4306:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,30,1,1); 
4308:  MOVLW  06
430A:  MOVWF  x4E
430C:  MOVLW  2D
430E:  MOVWF  x4D
4310:  CLRF   x4F
4312:  MOVLW  1E
4314:  MOVWF  x50
4316:  MOVLW  01
4318:  MOVWF  x51
431A:  MOVWF  x52
431C:  MOVLB  0
431E:  CALL   188E
....................       delay_ms(2000); 
4322:  MOVLW  08
4324:  MOVLB  6
4326:  MOVWF  x4D
4328:  MOVLW  FA
432A:  MOVWF  x53
432C:  MOVLB  0
432E:  CALL   0D48
4332:  MOVLB  6
4334:  DECFSZ x4D,F
4336:  BRA    4328
....................       Menu=100; 
4338:  MOVLW  64
433A:  MOVLB  5
433C:  MOVWF  x97
....................       glcd_fillScreen(OFF); 
433E:  MOVLB  6
4340:  CLRF   x4E
4342:  MOVLB  0
4344:  CALL   1260
....................       UP=0;DOWN=0;RIGHT=0;LEFT=0; 
4348:  MOVLB  5
434A:  BCF    x86.0
434C:  BCF    x86.1
434E:  BCF    x86.2
4350:  BCF    x86.3
....................    } 
....................    while(true) 
....................    { 
....................  
....................       if(Lectura2==1) 
4352:  DECFSZ x90,W
4354:  BRA    4374
....................       { 
....................          Temperatura=Leer_Sensor(MediaMovil); 
4356:  MOVFF  58C,64D
435A:  MOVLB  0
435C:  CALL   1CDC
4360:  MOVFF  03,604
4364:  MOVFF  02,603
4368:  MOVFF  01,602
436C:  MOVFF  00,601
....................          Lectura2=0; 
4370:  MOVLB  5
4372:  CLRF   x90
....................       } 
....................  
....................       Teclado(); 
4374:  MOVLB  0
4376:  CALL   1E8E
....................     
....................       glcd_update();             
437A:  CALL   12BA
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
437E:  MOVLB  5
4380:  MOVF   x97,F
4382:  BTFSS  FD8.2
4384:  BRA    48FA
....................        
....................       strcpy(Menus.Letra,"Clave"); 
4386:  MOVLW  06
4388:  MOVWF  FEA
438A:  MOVLW  2D
438C:  MOVWF  FE9
438E:  MOVFF  FF2,64D
4392:  BCF    FF2.7
4394:  MOVLW  00
4396:  MOVLB  0
4398:  CALL   07A0
439C:  TBLRD*-
439E:  TBLRD*+
43A0:  MOVF   FF5,W
43A2:  MOVWF  FEE
43A4:  IORLW  00
43A6:  BNZ   439E
43A8:  MOVLB  6
43AA:  BTFSC  x4D.7
43AC:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
43AE:  MOVLW  06
43B0:  MOVWF  x4E
43B2:  MOVLW  2D
43B4:  MOVWF  x4D
43B6:  MOVLW  1E
43B8:  MOVWF  x4F
43BA:  CLRF   x50
43BC:  MOVLW  01
43BE:  MOVWF  x51
43C0:  MOVLW  02
43C2:  MOVWF  x52
43C4:  MOVLB  0
43C6:  CALL   188E
....................        
....................       if(UP)//Si oprime hacia arriba 
43CA:  MOVLB  5
43CC:  BTFSS  x86.0
43CE:  BRA    449E
....................       { 
....................          UP=0;delay_ms(30); 
43D0:  BCF    x86.0
43D2:  MOVLW  1E
43D4:  MOVLB  6
43D6:  MOVWF  x53
43D8:  MOVLB  0
43DA:  CALL   0D48
....................          for(i=1;i<=4;i++) 
43DE:  MOVLW  01
43E0:  MOVLB  5
43E2:  MOVWF  x99
43E4:  MOVF   x99,W
43E6:  SUBLW  04
43E8:  BNC   449E
....................          { 
....................             if(unidad==i) 
43EA:  MOVF   x99,W
43EC:  SUBWF  x98,W
43EE:  BNZ   4466
....................             { 
....................                Contrasena[i-1]++; 
43F0:  MOVLW  01
43F2:  SUBWF  x99,W
43F4:  CLRF   03
43F6:  ADDLW  C5
43F8:  MOVWF  FE9
43FA:  MOVLW  05
43FC:  ADDWFC 03,W
43FE:  MOVWF  FEA
4400:  INCF   FEF,F
....................                if(Contrasena[i-1]>9)    
4402:  MOVLW  01
4404:  SUBWF  x99,W
4406:  CLRF   03
4408:  ADDLW  C5
440A:  MOVWF  FE9
440C:  MOVLW  05
440E:  ADDWFC 03,W
4410:  MOVWF  FEA
4412:  BTFSC  FEF.7
4414:  BRA    442E
4416:  MOVF   FEF,W
4418:  SUBLW  09
441A:  BC    442E
....................                { 
....................                   Contrasena[i-1]=0; 
441C:  MOVLW  01
441E:  SUBWF  x99,W
4420:  CLRF   03
4422:  ADDLW  C5
4424:  MOVWF  FE9
4426:  MOVLW  05
4428:  ADDWFC 03,W
442A:  MOVWF  FEA
442C:  CLRF   FEF
....................                } 
....................                displayContrasena(Contrasena[i-1],i*20,30,1); 
442E:  MOVLW  01
4430:  SUBWF  x99,W
4432:  CLRF   03
4434:  ADDLW  C5
4436:  MOVWF  FE9
4438:  MOVLW  05
443A:  ADDWFC 03,W
443C:  MOVWF  FEA
443E:  MOVFF  FEF,64D
4442:  MOVF   x99,W
4444:  MULLW  14
4446:  MOVFF  FF3,64E
444A:  MOVLB  6
444C:  MOVFF  64D,64F
4450:  MOVFF  64E,650
4454:  MOVLW  1E
4456:  MOVWF  x51
4458:  MOVLW  01
445A:  MOVWF  x52
445C:  MOVLB  0
445E:  CALL   1AB4
....................             } 
....................             else 
4462:  BRA    4498
4464:  MOVLB  5
....................             { 
....................                displayContrasena(Contrasena[i-1],i*20,30,0); 
4466:  MOVLW  01
4468:  SUBWF  x99,W
446A:  CLRF   03
446C:  ADDLW  C5
446E:  MOVWF  FE9
4470:  MOVLW  05
4472:  ADDWFC 03,W
4474:  MOVWF  FEA
4476:  MOVFF  FEF,64D
447A:  MOVF   x99,W
447C:  MULLW  14
447E:  MOVFF  FF3,64E
4482:  MOVLB  6
4484:  MOVFF  64D,64F
4488:  MOVFF  64E,650
448C:  MOVLW  1E
448E:  MOVWF  x51
4490:  CLRF   x52
4492:  MOVLB  0
4494:  CALL   1AB4
....................             } 
....................          } 
4498:  MOVLB  5
449A:  INCF   x99,F
449C:  BRA    43E4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
449E:  BTFSS  x86.1
44A0:  BRA    456E
....................       { 
....................          DOWN=0;delay_ms(30); 
44A2:  BCF    x86.1
44A4:  MOVLW  1E
44A6:  MOVLB  6
44A8:  MOVWF  x53
44AA:  MOVLB  0
44AC:  CALL   0D48
....................          for(i=1;i<=4;i++) 
44B0:  MOVLW  01
44B2:  MOVLB  5
44B4:  MOVWF  x99
44B6:  MOVF   x99,W
44B8:  SUBLW  04
44BA:  BNC   456E
....................          { 
....................             if(unidad==i) 
44BC:  MOVF   x99,W
44BE:  SUBWF  x98,W
44C0:  BNZ   4536
....................             { 
....................                Contrasena[i-1]--; 
44C2:  MOVLW  01
44C4:  SUBWF  x99,W
44C6:  CLRF   03
44C8:  ADDLW  C5
44CA:  MOVWF  FE9
44CC:  MOVLW  05
44CE:  ADDWFC 03,W
44D0:  MOVWF  FEA
44D2:  DECF   FEF,F
....................                if(Contrasena[i-1]<0) 
44D4:  MOVLW  01
44D6:  SUBWF  x99,W
44D8:  CLRF   03
44DA:  ADDLW  C5
44DC:  MOVWF  FE9
44DE:  MOVLW  05
44E0:  ADDWFC 03,W
44E2:  MOVWF  FEA
44E4:  BTFSC  FEF.7
44E6:  BRA    44EA
44E8:  BRA    44FE
....................                   {Contrasena[i-1]=9;} 
44EA:  MOVLW  01
44EC:  SUBWF  x99,W
44EE:  CLRF   03
44F0:  ADDLW  C5
44F2:  MOVWF  FE9
44F4:  MOVLW  05
44F6:  ADDWFC 03,W
44F8:  MOVWF  FEA
44FA:  MOVLW  09
44FC:  MOVWF  FEF
....................                displayContrasena(Contrasena[i-1],i*20,30,1);} 
44FE:  MOVLW  01
4500:  SUBWF  x99,W
4502:  CLRF   03
4504:  ADDLW  C5
4506:  MOVWF  FE9
4508:  MOVLW  05
450A:  ADDWFC 03,W
450C:  MOVWF  FEA
450E:  MOVFF  FEF,64D
4512:  MOVF   x99,W
4514:  MULLW  14
4516:  MOVFF  FF3,64E
451A:  MOVLB  6
451C:  MOVFF  64D,64F
4520:  MOVFF  64E,650
4524:  MOVLW  1E
4526:  MOVWF  x51
4528:  MOVLW  01
452A:  MOVWF  x52
452C:  MOVLB  0
452E:  CALL   1AB4
....................             else 
4532:  BRA    4568
4534:  MOVLB  5
....................             {displayContrasena(Contrasena[i-1],i*20,30,0);} 
4536:  MOVLW  01
4538:  SUBWF  x99,W
453A:  CLRF   03
453C:  ADDLW  C5
453E:  MOVWF  FE9
4540:  MOVLW  05
4542:  ADDWFC 03,W
4544:  MOVWF  FEA
4546:  MOVFF  FEF,64D
454A:  MOVF   x99,W
454C:  MULLW  14
454E:  MOVFF  FF3,64E
4552:  MOVLB  6
4554:  MOVFF  64D,64F
4558:  MOVFF  64E,650
455C:  MOVLW  1E
455E:  MOVWF  x51
4560:  CLRF   x52
4562:  MOVLB  0
4564:  CALL   1AB4
....................          }         
4568:  MOVLB  5
456A:  INCF   x99,F
456C:  BRA    44B6
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
456E:  BTFSS  x86.2
4570:  BRA    4604
....................       { 
....................          RIGHT=0;delay_ms(30);unidad++; 
4572:  BCF    x86.2
4574:  MOVLW  1E
4576:  MOVLB  6
4578:  MOVWF  x53
457A:  MOVLB  0
457C:  CALL   0D48
4580:  MOVLB  5
4582:  INCF   x98,F
....................          for(i=1;i<=4;i++) 
4584:  MOVLW  01
4586:  MOVWF  x99
4588:  MOVF   x99,W
458A:  SUBLW  04
458C:  BNC   4604
....................          { 
....................             if(unidad==i) 
458E:  MOVF   x99,W
4590:  SUBWF  x98,W
4592:  BNZ   45CC
....................             {displayContrasena(Contrasena[i-1],i*20,30,1);} 
4594:  MOVLW  01
4596:  SUBWF  x99,W
4598:  CLRF   03
459A:  ADDLW  C5
459C:  MOVWF  FE9
459E:  MOVLW  05
45A0:  ADDWFC 03,W
45A2:  MOVWF  FEA
45A4:  MOVFF  FEF,64D
45A8:  MOVF   x99,W
45AA:  MULLW  14
45AC:  MOVFF  FF3,64E
45B0:  MOVLB  6
45B2:  MOVFF  64D,64F
45B6:  MOVFF  64E,650
45BA:  MOVLW  1E
45BC:  MOVWF  x51
45BE:  MOVLW  01
45C0:  MOVWF  x52
45C2:  MOVLB  0
45C4:  CALL   1AB4
....................             else 
45C8:  BRA    45FE
45CA:  MOVLB  5
....................             {displayContrasena(Contrasena[i-1],i*20,30,0);} 
45CC:  MOVLW  01
45CE:  SUBWF  x99,W
45D0:  CLRF   03
45D2:  ADDLW  C5
45D4:  MOVWF  FE9
45D6:  MOVLW  05
45D8:  ADDWFC 03,W
45DA:  MOVWF  FEA
45DC:  MOVFF  FEF,64D
45E0:  MOVF   x99,W
45E2:  MULLW  14
45E4:  MOVFF  FF3,64E
45E8:  MOVLB  6
45EA:  MOVFF  64D,64F
45EE:  MOVFF  64E,650
45F2:  MOVLW  1E
45F4:  MOVWF  x51
45F6:  CLRF   x52
45F8:  MOVLB  0
45FA:  CALL   1AB4
....................          } 
45FE:  MOVLB  5
4600:  INCF   x99,F
4602:  BRA    4588
....................       } 
....................      
....................       if(unidad>4) 
4604:  MOVF   x98,W
4606:  SUBLW  04
4608:  BTFSC  FD8.0
460A:  BRA    48FA
....................       {glcd_fillScreen(OFF);unidad=4; 
460C:  MOVLB  6
460E:  CLRF   x4E
4610:  MOVLB  0
4612:  CALL   1260
4616:  MOVLW  04
4618:  MOVLB  5
461A:  MOVWF  x98
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
461C:  MOVF   xC5,W
461E:  SUBLW  03
4620:  BNZ   4708
4622:  MOVF   xC6,W
4624:  SUBLW  08
4626:  BNZ   4708
4628:  MOVF   xC7,W
462A:  SUBLW  09
462C:  BNZ   4708
462E:  MOVF   xC8,W
4630:  SUBLW  02
4632:  BNZ   4708
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
4634:  MOVLW  0A
4636:  MOVWF  FA9
4638:  CLRF   FA8
463A:  BCF    FA6.6
463C:  BCF    FA6.7
463E:  BSF    FA6.2
4640:  MOVF   FF2,W
4642:  MOVWF  00
4644:  BCF    FF2.7
4646:  MOVLB  F
4648:  MOVLW  55
464A:  MOVWF  FA7
464C:  MOVLW  AA
464E:  MOVWF  FA7
4650:  BSF    FA6.1
4652:  BTFSC  FA6.1
4654:  BRA    4652
4656:  BCF    FA6.2
4658:  MOVF   00,W
465A:  IORWF  FF2,F
465C:  MOVLW  14
465E:  MOVLB  6
4660:  MOVWF  x53
4662:  MOVLB  0
4664:  CALL   0D48
4668:  MOVLW  0B
466A:  MOVWF  FA9
466C:  CLRF   FA8
466E:  BCF    FA6.6
4670:  BCF    FA6.7
4672:  BSF    FA6.2
4674:  MOVF   FF2,W
4676:  MOVWF  00
4678:  BCF    FF2.7
467A:  MOVLB  F
467C:  MOVLW  55
467E:  MOVWF  FA7
4680:  MOVLW  AA
4682:  MOVWF  FA7
4684:  BSF    FA6.1
4686:  BTFSC  FA6.1
4688:  BRA    4686
468A:  BCF    FA6.2
468C:  MOVF   00,W
468E:  IORWF  FF2,F
4690:  MOVLW  14
4692:  MOVLB  6
4694:  MOVWF  x53
4696:  MOVLB  0
4698:  CALL   0D48
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
469C:  MOVLW  0C
469E:  MOVWF  FA9
46A0:  CLRF   FA8
46A2:  BCF    FA6.6
46A4:  BCF    FA6.7
46A6:  BSF    FA6.2
46A8:  MOVF   FF2,W
46AA:  MOVWF  00
46AC:  BCF    FF2.7
46AE:  MOVLB  F
46B0:  MOVLW  55
46B2:  MOVWF  FA7
46B4:  MOVLW  AA
46B6:  MOVWF  FA7
46B8:  BSF    FA6.1
46BA:  BTFSC  FA6.1
46BC:  BRA    46BA
46BE:  BCF    FA6.2
46C0:  MOVF   00,W
46C2:  IORWF  FF2,F
46C4:  MOVLW  14
46C6:  MOVLB  6
46C8:  MOVWF  x53
46CA:  MOVLB  0
46CC:  CALL   0D48
46D0:  MOVLW  0D
46D2:  MOVWF  FA9
46D4:  CLRF   FA8
46D6:  BCF    FA6.6
46D8:  BCF    FA6.7
46DA:  BSF    FA6.2
46DC:  MOVF   FF2,W
46DE:  MOVWF  00
46E0:  BCF    FF2.7
46E2:  MOVLB  F
46E4:  MOVLW  55
46E6:  MOVWF  FA7
46E8:  MOVLW  AA
46EA:  MOVWF  FA7
46EC:  BSF    FA6.1
46EE:  BTFSC  FA6.1
46F0:  BRA    46EE
46F2:  BCF    FA6.2
46F4:  MOVF   00,W
46F6:  IORWF  FF2,F
46F8:  MOVLW  14
46FA:  MOVLB  6
46FC:  MOVWF  x53
46FE:  MOVLB  0
4700:  CALL   0D48
....................              reset_cpu();}         
4704:  RESET
4706:  MOVLB  5
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4708:  MOVF   xC9,W
470A:  SUBWF  xC5,W
470C:  BNZ   47DE
470E:  MOVF   xCA,W
4710:  SUBWF  xC6,W
4712:  BNZ   47DE
4714:  MOVF   xCB,W
4716:  SUBWF  xC7,W
4718:  BNZ   47DE
471A:  MOVF   xCC,W
471C:  SUBWF  xC8,W
471E:  BNZ   47DE
....................          { 
....................             glcd_fillScreen(OFF); 
4720:  MOVLB  6
4722:  CLRF   x4E
4724:  MOVLB  0
4726:  CALL   1260
....................             strcpy(Menus.Letra,"Clave"); 
472A:  MOVLW  06
472C:  MOVWF  FEA
472E:  MOVLW  2D
4730:  MOVWF  FE9
4732:  MOVFF  FF2,64D
4736:  BCF    FF2.7
4738:  MOVLW  00
473A:  CALL   07A0
473E:  TBLRD*-
4740:  TBLRD*+
4742:  MOVF   FF5,W
4744:  MOVWF  FEE
4746:  IORLW  00
4748:  BNZ   4740
474A:  MOVLB  6
474C:  BTFSC  x4D.7
474E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4750:  MOVLW  06
4752:  MOVWF  x4E
4754:  MOVLW  2D
4756:  MOVWF  x4D
4758:  MOVLW  1E
475A:  MOVWF  x4F
475C:  CLRF   x50
475E:  CLRF   x51
4760:  MOVLW  02
4762:  MOVWF  x52
4764:  MOVLB  0
4766:  CALL   188E
....................             strcpy(Menus.Letra,"Correcta"); 
476A:  MOVLW  06
476C:  MOVWF  FEA
476E:  MOVLW  2D
4770:  MOVWF  FE9
4772:  MOVFF  FF2,64D
4776:  BCF    FF2.7
4778:  MOVLW  00
477A:  CALL   07C0
477E:  TBLRD*-
4780:  TBLRD*+
4782:  MOVF   FF5,W
4784:  MOVWF  FEE
4786:  IORLW  00
4788:  BNZ   4780
478A:  MOVLB  6
478C:  BTFSC  x4D.7
478E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
4790:  MOVLW  06
4792:  MOVWF  x4E
4794:  MOVLW  2D
4796:  MOVWF  x4D
4798:  MOVLW  0F
479A:  MOVWF  x4F
479C:  MOVLW  1E
479E:  MOVWF  x50
47A0:  CLRF   x51
47A2:  MOVLW  02
47A4:  MOVWF  x52
47A6:  MOVLB  0
47A8:  CALL   188E
....................             Menu=1;glcd_update();delay_ms(1000); 
47AC:  MOVLW  01
47AE:  MOVLB  5
47B0:  MOVWF  x97
47B2:  MOVLB  0
47B4:  CALL   12BA
47B8:  MOVLW  04
47BA:  MOVLB  6
47BC:  MOVWF  x4D
47BE:  MOVLW  FA
47C0:  MOVWF  x53
47C2:  MOVLB  0
47C4:  CALL   0D48
47C8:  MOVLB  6
47CA:  DECFSZ x4D,F
47CC:  BRA    47BE
....................             glcd_fillScreen(OFF);unidad=1; 
47CE:  CLRF   x4E
47D0:  MOVLB  0
47D2:  CALL   1260
47D6:  MOVLW  01
47D8:  MOVLB  5
47DA:  MOVWF  x98
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
47DC:  BRA    48FA
....................          { 
....................             glcd_fillScreen(OFF); 
47DE:  MOVLB  6
47E0:  CLRF   x4E
47E2:  MOVLB  0
47E4:  CALL   1260
....................             strcpy(Menus.Letra,"Clave"); 
47E8:  MOVLW  06
47EA:  MOVWF  FEA
47EC:  MOVLW  2D
47EE:  MOVWF  FE9
47F0:  MOVFF  FF2,64D
47F4:  BCF    FF2.7
47F6:  MOVLW  00
47F8:  CALL   07A0
47FC:  TBLRD*-
47FE:  TBLRD*+
4800:  MOVF   FF5,W
4802:  MOVWF  FEE
4804:  IORLW  00
4806:  BNZ   47FE
4808:  MOVLB  6
480A:  BTFSC  x4D.7
480C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
480E:  MOVLW  06
4810:  MOVWF  x4E
4812:  MOVLW  2D
4814:  MOVWF  x4D
4816:  MOVLW  1E
4818:  MOVWF  x4F
481A:  CLRF   x50
481C:  CLRF   x51
481E:  MOVLW  02
4820:  MOVWF  x52
4822:  MOVLB  0
4824:  CALL   188E
....................             strcpy(Menus.Letra,"Incorrecta"); 
4828:  MOVLW  06
482A:  MOVWF  FEA
482C:  MOVLW  2D
482E:  MOVWF  FE9
4830:  MOVFF  FF2,64D
4834:  BCF    FF2.7
4836:  MOVLW  00
4838:  CALL   07E4
483C:  TBLRD*-
483E:  TBLRD*+
4840:  MOVF   FF5,W
4842:  MOVWF  FEE
4844:  IORLW  00
4846:  BNZ   483E
4848:  MOVLB  6
484A:  BTFSC  x4D.7
484C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
484E:  MOVLW  06
4850:  MOVWF  x4E
4852:  MOVLW  2D
4854:  MOVWF  x4D
4856:  CLRF   x4F
4858:  MOVLW  1E
485A:  MOVWF  x50
485C:  CLRF   x51
485E:  MOVLW  02
4860:  MOVWF  x52
4862:  MOVLB  0
4864:  CALL   188E
....................             Menu=0;glcd_update();delay_ms(1000); 
4868:  MOVLB  5
486A:  CLRF   x97
486C:  MOVLB  0
486E:  CALL   12BA
4872:  MOVLW  04
4874:  MOVLB  6
4876:  MOVWF  x4D
4878:  MOVLW  FA
487A:  MOVWF  x53
487C:  MOVLB  0
487E:  CALL   0D48
4882:  MOVLB  6
4884:  DECFSZ x4D,F
4886:  BRA    4878
....................             glcd_fillScreen(OFF);unidad=1; 
4888:  CLRF   x4E
488A:  MOVLB  0
488C:  CALL   1260
4890:  MOVLW  01
4892:  MOVLB  5
4894:  MOVWF  x98
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4896:  CLRF   xC5
4898:  CLRF   xC6
489A:  CLRF   xC7
489C:  CLRF   xC8
....................             displayContrasena(Contrasena[0],20,30,1); 
489E:  MOVFF  5C5,64F
48A2:  MOVLW  14
48A4:  MOVLB  6
48A6:  MOVWF  x50
48A8:  MOVLW  1E
48AA:  MOVWF  x51
48AC:  MOVLW  01
48AE:  MOVWF  x52
48B0:  MOVLB  0
48B2:  CALL   1AB4
....................             displayContrasena(Contrasena[1],40,30,0); 
48B6:  MOVFF  5C6,64F
48BA:  MOVLW  28
48BC:  MOVLB  6
48BE:  MOVWF  x50
48C0:  MOVLW  1E
48C2:  MOVWF  x51
48C4:  CLRF   x52
48C6:  MOVLB  0
48C8:  CALL   1AB4
....................             displayContrasena(Contrasena[2],60,30,0); 
48CC:  MOVFF  5C7,64F
48D0:  MOVLW  3C
48D2:  MOVLB  6
48D4:  MOVWF  x50
48D6:  MOVLW  1E
48D8:  MOVWF  x51
48DA:  CLRF   x52
48DC:  MOVLB  0
48DE:  CALL   1AB4
....................             displayContrasena(Contrasena[3],80,30,0); 
48E2:  MOVFF  5C8,64F
48E6:  MOVLW  50
48E8:  MOVLB  6
48EA:  MOVWF  x50
48EC:  MOVLW  1E
48EE:  MOVWF  x51
48F0:  CLRF   x52
48F2:  MOVLB  0
48F4:  CALL   1AB4
48F8:  MOVLB  5
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
48FA:  DECFSZ x97,W
48FC:  BRA    4BFA
....................        
....................          if(Opcion>4) 
48FE:  MOVF   x9C,W
4900:  SUBLW  04
4902:  BC    4908
....................          {Opcion=1;} 
4904:  MOVLW  01
4906:  MOVWF  x9C
....................          if(Opcion<1) 
4908:  MOVF   x9C,F
490A:  BNZ   4910
....................          {Opcion=4;} 
490C:  MOVLW  04
490E:  MOVWF  x9C
....................           
....................          strcpy(Menus.Letra,"Menu"); 
4910:  MOVLW  06
4912:  MOVWF  FEA
4914:  MOVLW  2D
4916:  MOVWF  FE9
4918:  MOVFF  FF2,64D
491C:  BCF    FF2.7
491E:  MOVLW  00
4920:  MOVLB  0
4922:  CALL   080A
4926:  TBLRD*-
4928:  TBLRD*+
492A:  MOVF   FF5,W
492C:  MOVWF  FEE
492E:  IORLW  00
4930:  BNZ   4928
4932:  MOVLB  6
4934:  BTFSC  x4D.7
4936:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
4938:  MOVLW  06
493A:  MOVWF  x4E
493C:  MOVLW  2D
493E:  MOVWF  x4D
4940:  MOVLW  1E
4942:  MOVWF  x4F
4944:  CLRF   x50
4946:  MOVLW  01
4948:  MOVWF  x51
494A:  MOVLW  02
494C:  MOVWF  x52
494E:  MOVLB  0
4950:  CALL   188E
....................        
....................          if(Opcion==1)    
4954:  MOVLB  5
4956:  DECFSZ x9C,W
4958:  BRA    49A0
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
495A:  MOVLW  06
495C:  MOVWF  FEA
495E:  MOVLW  2D
4960:  MOVWF  FE9
4962:  MOVFF  FF2,64D
4966:  BCF    FF2.7
4968:  MOVLW  00
496A:  MOVLB  0
496C:  CALL   082A
4970:  TBLRD*-
4972:  TBLRD*+
4974:  MOVF   FF5,W
4976:  MOVWF  FEE
4978:  IORLW  00
497A:  BNZ   4972
497C:  MOVLB  6
497E:  BTFSC  x4D.7
4980:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
4982:  MOVLW  06
4984:  MOVWF  x4E
4986:  MOVLW  2D
4988:  MOVWF  x4D
498A:  CLRF   x4F
498C:  MOVLW  14
498E:  MOVWF  x50
4990:  MOVLW  01
4992:  MOVWF  x51
4994:  MOVWF  x52
4996:  MOVLB  0
4998:  CALL   188E
....................          else 
499C:  BRA    49E2
499E:  MOVLB  5
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
49A0:  MOVLW  06
49A2:  MOVWF  FEA
49A4:  MOVLW  2D
49A6:  MOVWF  FE9
49A8:  MOVFF  FF2,64D
49AC:  BCF    FF2.7
49AE:  MOVLW  00
49B0:  MOVLB  0
49B2:  CALL   082A
49B6:  TBLRD*-
49B8:  TBLRD*+
49BA:  MOVF   FF5,W
49BC:  MOVWF  FEE
49BE:  IORLW  00
49C0:  BNZ   49B8
49C2:  MOVLB  6
49C4:  BTFSC  x4D.7
49C6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);} 
49C8:  MOVLW  06
49CA:  MOVWF  x4E
49CC:  MOVLW  2D
49CE:  MOVWF  x4D
49D0:  CLRF   x4F
49D2:  MOVLW  14
49D4:  MOVWF  x50
49D6:  CLRF   x51
49D8:  MOVLW  01
49DA:  MOVWF  x52
49DC:  MOVLB  0
49DE:  CALL   188E
....................           
....................          if(Opcion==2)    
49E2:  MOVLB  5
49E4:  MOVF   x9C,W
49E6:  SUBLW  02
49E8:  BNZ   4A30
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
49EA:  MOVLW  06
49EC:  MOVWF  FEA
49EE:  MOVLW  2D
49F0:  MOVWF  FE9
49F2:  MOVFF  FF2,64D
49F6:  BCF    FF2.7
49F8:  MOVLW  00
49FA:  MOVLB  0
49FC:  CALL   0854
4A00:  TBLRD*-
4A02:  TBLRD*+
4A04:  MOVF   FF5,W
4A06:  MOVWF  FEE
4A08:  IORLW  00
4A0A:  BNZ   4A02
4A0C:  MOVLB  6
4A0E:  BTFSC  x4D.7
4A10:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
4A12:  MOVLW  06
4A14:  MOVWF  x4E
4A16:  MOVLW  2D
4A18:  MOVWF  x4D
4A1A:  CLRF   x4F
4A1C:  MOVLW  1E
4A1E:  MOVWF  x50
4A20:  MOVLW  01
4A22:  MOVWF  x51
4A24:  MOVWF  x52
4A26:  MOVLB  0
4A28:  CALL   188E
....................          else 
4A2C:  BRA    4A72
4A2E:  MOVLB  5
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
4A30:  MOVLW  06
4A32:  MOVWF  FEA
4A34:  MOVLW  2D
4A36:  MOVWF  FE9
4A38:  MOVFF  FF2,64D
4A3C:  BCF    FF2.7
4A3E:  MOVLW  00
4A40:  MOVLB  0
4A42:  CALL   0854
4A46:  TBLRD*-
4A48:  TBLRD*+
4A4A:  MOVF   FF5,W
4A4C:  MOVWF  FEE
4A4E:  IORLW  00
4A50:  BNZ   4A48
4A52:  MOVLB  6
4A54:  BTFSC  x4D.7
4A56:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);} 
4A58:  MOVLW  06
4A5A:  MOVWF  x4E
4A5C:  MOVLW  2D
4A5E:  MOVWF  x4D
4A60:  CLRF   x4F
4A62:  MOVLW  1E
4A64:  MOVWF  x50
4A66:  CLRF   x51
4A68:  MOVLW  01
4A6A:  MOVWF  x52
4A6C:  MOVLB  0
4A6E:  CALL   188E
....................              
....................          if(Opcion==3)    
4A72:  MOVLB  5
4A74:  MOVF   x9C,W
4A76:  SUBLW  03
4A78:  BNZ   4AC0
....................             {strcpy(Menus.Letra,"Temporizador"); 
4A7A:  MOVLW  06
4A7C:  MOVWF  FEA
4A7E:  MOVLW  2D
4A80:  MOVWF  FE9
4A82:  MOVFF  FF2,64D
4A86:  BCF    FF2.7
4A88:  MOVLW  00
4A8A:  MOVLB  0
4A8C:  CALL   0884
4A90:  TBLRD*-
4A92:  TBLRD*+
4A94:  MOVF   FF5,W
4A96:  MOVWF  FEE
4A98:  IORLW  00
4A9A:  BNZ   4A92
4A9C:  MOVLB  6
4A9E:  BTFSC  x4D.7
4AA0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
4AA2:  MOVLW  06
4AA4:  MOVWF  x4E
4AA6:  MOVLW  2D
4AA8:  MOVWF  x4D
4AAA:  CLRF   x4F
4AAC:  MOVLW  28
4AAE:  MOVWF  x50
4AB0:  MOVLW  01
4AB2:  MOVWF  x51
4AB4:  MOVWF  x52
4AB6:  MOVLB  0
4AB8:  CALL   188E
....................          else 
4ABC:  BRA    4B02
4ABE:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temporizador"); 
4AC0:  MOVLW  06
4AC2:  MOVWF  FEA
4AC4:  MOVLW  2D
4AC6:  MOVWF  FE9
4AC8:  MOVFF  FF2,64D
4ACC:  BCF    FF2.7
4ACE:  MOVLW  00
4AD0:  MOVLB  0
4AD2:  CALL   0884
4AD6:  TBLRD*-
4AD8:  TBLRD*+
4ADA:  MOVF   FF5,W
4ADC:  MOVWF  FEE
4ADE:  IORLW  00
4AE0:  BNZ   4AD8
4AE2:  MOVLB  6
4AE4:  BTFSC  x4D.7
4AE6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}    
4AE8:  MOVLW  06
4AEA:  MOVWF  x4E
4AEC:  MOVLW  2D
4AEE:  MOVWF  x4D
4AF0:  CLRF   x4F
4AF2:  MOVLW  28
4AF4:  MOVWF  x50
4AF6:  CLRF   x51
4AF8:  MOVLW  01
4AFA:  MOVWF  x52
4AFC:  MOVLB  0
4AFE:  CALL   188E
....................                          
....................          if(Opcion==4)    
4B02:  MOVLB  5
4B04:  MOVF   x9C,W
4B06:  SUBLW  04
4B08:  BNZ   4B50
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
4B0A:  MOVLW  06
4B0C:  MOVWF  FEA
4B0E:  MOVLW  2D
4B10:  MOVWF  FE9
4B12:  MOVFF  FF2,64D
4B16:  BCF    FF2.7
4B18:  MOVLW  00
4B1A:  MOVLB  0
4B1C:  CALL   08AC
4B20:  TBLRD*-
4B22:  TBLRD*+
4B24:  MOVF   FF5,W
4B26:  MOVWF  FEE
4B28:  IORLW  00
4B2A:  BNZ   4B22
4B2C:  MOVLB  6
4B2E:  BTFSC  x4D.7
4B30:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
4B32:  MOVLW  06
4B34:  MOVWF  x4E
4B36:  MOVLW  2D
4B38:  MOVWF  x4D
4B3A:  CLRF   x4F
4B3C:  MOVLW  32
4B3E:  MOVWF  x50
4B40:  MOVLW  01
4B42:  MOVWF  x51
4B44:  MOVWF  x52
4B46:  MOVLB  0
4B48:  CALL   188E
....................          else 
4B4C:  BRA    4B92
4B4E:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
4B50:  MOVLW  06
4B52:  MOVWF  FEA
4B54:  MOVLW  2D
4B56:  MOVWF  FE9
4B58:  MOVFF  FF2,64D
4B5C:  BCF    FF2.7
4B5E:  MOVLW  00
4B60:  MOVLB  0
4B62:  CALL   08AC
4B66:  TBLRD*-
4B68:  TBLRD*+
4B6A:  MOVF   FF5,W
4B6C:  MOVWF  FEE
4B6E:  IORLW  00
4B70:  BNZ   4B68
4B72:  MOVLB  6
4B74:  BTFSC  x4D.7
4B76:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}      
4B78:  MOVLW  06
4B7A:  MOVWF  x4E
4B7C:  MOVLW  2D
4B7E:  MOVWF  x4D
4B80:  CLRF   x4F
4B82:  MOVLW  32
4B84:  MOVWF  x50
4B86:  CLRF   x51
4B88:  MOVLW  01
4B8A:  MOVWF  x52
4B8C:  MOVLB  0
4B8E:  CALL   188E
....................              
....................          if(UP)//Si oprime hacia arriba 
4B92:  MOVLB  5
4B94:  BTFSS  x86.0
4B96:  BRA    4BAC
....................          { 
....................             UP=0;delay_ms(30);Opcion--;visual=1; 
4B98:  BCF    x86.0
4B9A:  MOVLW  1E
4B9C:  MOVLB  6
4B9E:  MOVWF  x53
4BA0:  MOVLB  0
4BA2:  CALL   0D48
4BA6:  MOVLB  5
4BA8:  DECF   x9C,F
4BAA:  BSF    x87.1
....................          } 
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
4BAC:  BTFSS  x86.1
4BAE:  BRA    4BC4
....................          { 
....................             DOWN=0;delay_ms(30);Opcion++;visual=1;    
4BB0:  BCF    x86.1
4BB2:  MOVLW  1E
4BB4:  MOVLB  6
4BB6:  MOVWF  x53
4BB8:  MOVLB  0
4BBA:  CALL   0D48
4BBE:  MOVLB  5
4BC0:  INCF   x9C,F
4BC2:  BSF    x87.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
4BC4:  BTFSS  x86.2
4BC6:  BRA    4BFA
....................          {  
....................             RIGHT=0;delay_ms(500);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4BC8:  BCF    x86.2
4BCA:  MOVLW  02
4BCC:  MOVLB  6
4BCE:  MOVWF  x4D
4BD0:  MOVLW  FA
4BD2:  MOVWF  x53
4BD4:  MOVLB  0
4BD6:  CALL   0D48
4BDA:  MOVLB  6
4BDC:  DECFSZ x4D,F
4BDE:  BRA    4BD0
4BE0:  MOVLW  03
4BE2:  MOVLB  5
4BE4:  ADDWF  x9C,W
4BE6:  MOVWF  x97
4BE8:  MOVLW  01
4BEA:  MOVWF  x9C
4BEC:  MOVLB  6
4BEE:  CLRF   x4E
4BF0:  MOVLB  0
4BF2:  CALL   1260
4BF6:  MOVLB  5
4BF8:  BSF    x87.1
....................          } 
....................        
....................  
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Continuar 
4BFA:  MOVF   x97,W
4BFC:  SUBLW  04
4BFE:  BTFSS  FD8.2
4C00:  BRA    4FAA
....................        
....................       if(Opcion>3) 
4C02:  MOVF   x9C,W
4C04:  SUBLW  03
4C06:  BC    4C0C
....................          Opcion=1; 
4C08:  MOVLW  01
4C0A:  MOVWF  x9C
....................           
....................       if(Opcion<1) 
4C0C:  MOVF   x9C,F
4C0E:  BNZ   4C14
....................          Opcion=3; 
4C10:  MOVLW  03
4C12:  MOVWF  x9C
....................        
....................          strcpy(Menus.Letra,"Seleccione"); 
4C14:  MOVLW  06
4C16:  MOVWF  FEA
4C18:  MOVLW  2D
4C1A:  MOVWF  FE9
4C1C:  MOVFF  FF2,64D
4C20:  BCF    FF2.7
4C22:  MOVLW  00
4C24:  MOVLB  0
4C26:  CALL   08D4
4C2A:  TBLRD*-
4C2C:  TBLRD*+
4C2E:  MOVF   FF5,W
4C30:  MOVWF  FEE
4C32:  IORLW  00
4C34:  BNZ   4C2C
4C36:  MOVLB  6
4C38:  BTFSC  x4D.7
4C3A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4C3C:  MOVLW  06
4C3E:  MOVWF  x4E
4C40:  MOVLW  2D
4C42:  MOVWF  x4D
4C44:  CLRF   x4F
4C46:  CLRF   x50
4C48:  MOVLW  01
4C4A:  MOVWF  x51
4C4C:  MOVLW  02
4C4E:  MOVWF  x52
4C50:  MOVLB  0
4C52:  CALL   188E
....................           
....................          strcpy(Menus.Letra,"Temperatura"); 
4C56:  MOVLW  06
4C58:  MOVWF  FEA
4C5A:  MOVLW  2D
4C5C:  MOVWF  FE9
4C5E:  MOVFF  FF2,64D
4C62:  BCF    FF2.7
4C64:  MOVLW  00
4C66:  CALL   08FA
4C6A:  TBLRD*-
4C6C:  TBLRD*+
4C6E:  MOVF   FF5,W
4C70:  MOVWF  FEE
4C72:  IORLW  00
4C74:  BNZ   4C6C
4C76:  MOVLB  6
4C78:  BTFSC  x4D.7
4C7A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,16,1,2); 
4C7C:  MOVLW  06
4C7E:  MOVWF  x4E
4C80:  MOVLW  2D
4C82:  MOVWF  x4D
4C84:  CLRF   x4F
4C86:  MOVLW  10
4C88:  MOVWF  x50
4C8A:  MOVLW  01
4C8C:  MOVWF  x51
4C8E:  MOVLW  02
4C90:  MOVWF  x52
4C92:  MOVLB  0
4C94:  CALL   188E
....................           
....................          displayContrasena(Opcion,10,38,1); 
4C98:  MOVFF  59C,64F
4C9C:  MOVLW  0A
4C9E:  MOVLB  6
4CA0:  MOVWF  x50
4CA2:  MOVLW  26
4CA4:  MOVWF  x51
4CA6:  MOVLW  01
4CA8:  MOVWF  x52
4CAA:  MOVLB  0
4CAC:  CALL   1AB4
....................          glcd_circle(90,38,2,NO,ON); 
4CB0:  MOVLW  5A
4CB2:  MOVLB  6
4CB4:  MOVWF  x62
4CB6:  MOVLW  26
4CB8:  MOVWF  x63
4CBA:  MOVLW  02
4CBC:  MOVWF  x64
4CBE:  CLRF   x65
4CC0:  MOVLW  01
4CC2:  MOVWF  x66
4CC4:  MOVLB  0
4CC6:  CALL   1F6E
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,97,35,2,2);          
4CCA:  MOVLW  06
4CCC:  MOVWF  FEA
4CCE:  MOVLW  2D
4CD0:  MOVWF  FE9
4CD2:  MOVFF  FF2,64D
4CD6:  BCF    FF2.7
4CD8:  MOVLW  00
4CDA:  CALL   06BE
4CDE:  TBLRD*-
4CE0:  TBLRD*+
4CE2:  MOVF   FF5,W
4CE4:  MOVWF  FEE
4CE6:  IORLW  00
4CE8:  BNZ   4CE0
4CEA:  MOVLB  6
4CEC:  BTFSC  x4D.7
4CEE:  BSF    FF2.7
4CF0:  MOVLW  06
4CF2:  MOVWF  x4E
4CF4:  MOVLW  2D
4CF6:  MOVWF  x4D
4CF8:  MOVLW  61
4CFA:  MOVWF  x4F
4CFC:  MOVLW  23
4CFE:  MOVWF  x50
4D00:  MOVLW  02
4D02:  MOVWF  x51
4D04:  MOVWF  x52
4D06:  MOVLB  0
4D08:  CALL   188E
....................           
....................          if(Opcion==1) 
4D0C:  MOVLB  5
4D0E:  DECFSZ x9C,W
4D10:  BRA    4D50
....................          { 
....................             displayTemperatura(Temperatura1,50,38,0,2); 
4D12:  MOVFF  614,650
4D16:  MOVFF  613,64F
4D1A:  MOVFF  612,64E
4D1E:  MOVFF  611,64D
4D22:  MOVLB  0
4D24:  CALL   2198
4D28:  MOVFF  02,64E
4D2C:  MOVFF  01,64D
4D30:  MOVFF  02,650
4D34:  MOVFF  01,64F
4D38:  MOVLW  32
4D3A:  MOVLB  6
4D3C:  MOVWF  x51
4D3E:  MOVLW  26
4D40:  MOVWF  x52
4D42:  CLRF   x53
4D44:  MOVLW  02
4D46:  MOVWF  x54
4D48:  MOVLB  0
4D4A:  CALL   2292
4D4E:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==2) 
4D50:  MOVF   x9C,W
4D52:  SUBLW  02
4D54:  BNZ   4D94
....................          { 
....................             displayTemperatura(Temperatura2,50,38,0,2); 
4D56:  MOVFF  618,650
4D5A:  MOVFF  617,64F
4D5E:  MOVFF  616,64E
4D62:  MOVFF  615,64D
4D66:  MOVLB  0
4D68:  CALL   2198
4D6C:  MOVFF  02,64E
4D70:  MOVFF  01,64D
4D74:  MOVFF  02,650
4D78:  MOVFF  01,64F
4D7C:  MOVLW  32
4D7E:  MOVLB  6
4D80:  MOVWF  x51
4D82:  MOVLW  26
4D84:  MOVWF  x52
4D86:  CLRF   x53
4D88:  MOVLW  02
4D8A:  MOVWF  x54
4D8C:  MOVLB  0
4D8E:  CALL   2292
4D92:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==3) 
4D94:  MOVF   x9C,W
4D96:  SUBLW  03
4D98:  BNZ   4DD8
....................          { 
....................             displayTemperatura(Temperatura3,50,38,0,2); 
4D9A:  MOVFF  61C,650
4D9E:  MOVFF  61B,64F
4DA2:  MOVFF  61A,64E
4DA6:  MOVFF  619,64D
4DAA:  MOVLB  0
4DAC:  CALL   2198
4DB0:  MOVFF  02,64E
4DB4:  MOVFF  01,64D
4DB8:  MOVFF  02,650
4DBC:  MOVFF  01,64F
4DC0:  MOVLW  32
4DC2:  MOVLB  6
4DC4:  MOVWF  x51
4DC6:  MOVLW  26
4DC8:  MOVWF  x52
4DCA:  CLRF   x53
4DCC:  MOVLW  02
4DCE:  MOVWF  x54
4DD0:  MOVLB  0
4DD2:  CALL   2292
4DD6:  MOVLB  5
....................          } 
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
4DD8:  BTFSS  x86.0
4DDA:  BRA    4E00
....................       { 
....................          Opcion++; 
4DDC:  INCF   x9C,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
4DDE:  MOVLW  28
4DE0:  MOVLB  6
4DE2:  MOVWF  x62
4DE4:  MOVLW  23
4DE6:  MOVWF  x63
4DE8:  MOVLW  55
4DEA:  MOVWF  x64
4DEC:  MOVLW  3C
4DEE:  MOVWF  x65
4DF0:  MOVLW  01
4DF2:  MOVWF  x66
4DF4:  CLRF   x67
4DF6:  MOVLB  0
4DF8:  CALL   17CC
....................          UP=0; 
4DFC:  MOVLB  5
4DFE:  BCF    x86.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4E00:  BTFSS  x86.1
4E02:  BRA    4E28
....................       {   
....................          Opcion--;   
4E04:  DECF   x9C,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
4E06:  MOVLW  28
4E08:  MOVLB  6
4E0A:  MOVWF  x62
4E0C:  MOVLW  23
4E0E:  MOVWF  x63
4E10:  MOVLW  55
4E12:  MOVWF  x64
4E14:  MOVLW  3C
4E16:  MOVWF  x65
4E18:  MOVLW  01
4E1A:  MOVWF  x66
4E1C:  CLRF   x67
4E1E:  MOVLB  0
4E20:  CALL   17CC
....................          DOWN=0; 
4E24:  MOVLB  5
4E26:  BCF    x86.1
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
4E28:  BTFSS  x86.2
4E2A:  BRA    4F76
....................       {   
....................          if(Opcion==1) 
4E2C:  DECFSZ x9C,W
4E2E:  BRA    4E40
....................          { 
....................             Setpoint=Temperatura1; 
4E30:  MOVFF  614,610
4E34:  MOVFF  613,60F
4E38:  MOVFF  612,60E
4E3C:  MOVFF  611,60D
....................          } 
....................           
....................          if(Opcion==2) 
4E40:  MOVF   x9C,W
4E42:  SUBLW  02
4E44:  BNZ   4E56
....................          { 
....................             Setpoint=Temperatura2; 
4E46:  MOVFF  618,610
4E4A:  MOVFF  617,60F
4E4E:  MOVFF  616,60E
4E52:  MOVFF  615,60D
....................          } 
....................           
....................          if(Opcion==3) 
4E56:  MOVF   x9C,W
4E58:  SUBLW  03
4E5A:  BNZ   4E6C
....................          { 
....................             Setpoint=Temperatura3; 
4E5C:  MOVFF  61C,610
4E60:  MOVFF  61B,60F
4E64:  MOVFF  61A,60E
4E68:  MOVFF  619,60D
....................          } 
....................           
....................          if(Setpoint<Temperatura) 
4E6C:  MOVFF  610,650
4E70:  MOVFF  60F,64F
4E74:  MOVFF  60E,64E
4E78:  MOVFF  60D,64D
4E7C:  MOVFF  604,654
4E80:  MOVFF  603,653
4E84:  MOVFF  602,652
4E88:  MOVFF  601,651
4E8C:  MOVLB  0
4E8E:  CALL   11A6
4E92:  BNC   4EAA
....................          { 
....................             Enfria=1; 
4E94:  MOVLW  01
4E96:  MOVLB  5
4E98:  MOVWF  x91
....................             Ganancia=10; 
4E9A:  CLRF   xF4
4E9C:  CLRF   xF3
4E9E:  MOVLW  20
4EA0:  MOVWF  xF2
4EA2:  MOVLW  82
4EA4:  MOVWF  xF1
....................             //Rele1_on;Rele2_on;Rele3_on; 
....................          } 
....................          else 
4EA6:  BRA    4F3E
4EA8:  MOVLB  0
....................          { 
....................             Enfria=0; 
4EAA:  MOVLB  5
4EAC:  CLRF   x91
....................             Ganancia=2*(Setpoint/44.5); 
4EAE:  MOVFF  610,651
4EB2:  MOVFF  60F,650
4EB6:  MOVFF  60E,64F
4EBA:  MOVFF  60D,64E
4EBE:  MOVLB  6
4EC0:  CLRF   x55
4EC2:  CLRF   x54
4EC4:  MOVLW  32
4EC6:  MOVWF  x53
4EC8:  MOVLW  84
4ECA:  MOVWF  x52
4ECC:  MOVLB  0
4ECE:  CALL   0DD0
4ED2:  MOVLB  6
4ED4:  CLRF   x70
4ED6:  CLRF   x6F
4ED8:  CLRF   x6E
4EDA:  MOVLW  80
4EDC:  MOVWF  x6D
4EDE:  MOVFF  03,674
4EE2:  MOVFF  02,673
4EE6:  MOVFF  01,672
4EEA:  MOVFF  00,671
4EEE:  MOVLB  0
4EF0:  CALL   1BC4
4EF4:  MOVFF  03,5F4
4EF8:  MOVFF  02,5F3
4EFC:  MOVFF  01,5F2
4F00:  MOVFF  00,5F1
....................             Gananciamax=(0.21)*Setpoint; 
4F04:  MOVLW  3D
4F06:  MOVLB  6
4F08:  MOVWF  x70
4F0A:  MOVLW  0A
4F0C:  MOVWF  x6F
4F0E:  MOVLW  57
4F10:  MOVWF  x6E
4F12:  MOVLW  7C
4F14:  MOVWF  x6D
4F16:  MOVFF  610,674
4F1A:  MOVFF  60F,673
4F1E:  MOVFF  60E,672
4F22:  MOVFF  60D,671
4F26:  MOVLB  0
4F28:  CALL   1BC4
4F2C:  MOVFF  03,5BC
4F30:  MOVFF  02,5BB
4F34:  MOVFF  01,5BA
4F38:  MOVFF  00,5B9
4F3C:  MOVLB  5
....................             //Rele1_off;Rele2_off;Rele3_off; 
....................          } 
....................           
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;glcd_fillScreen(OFF);pausa=0; 
4F3E:  MOVLW  14
4F40:  MOVWF  x97
4F42:  MOVLW  0F
4F44:  MOVLB  6
4F46:  MOVWF  x62
4F48:  MOVLW  12
4F4A:  MOVWF  x63
4F4C:  MOVLW  1E
4F4E:  MOVWF  x64
4F50:  MOVLW  35
4F52:  MOVWF  x65
4F54:  CLRF   x66
4F56:  MOVLW  01
4F58:  MOVWF  x67
4F5A:  MOVLB  0
4F5C:  CALL   17CC
4F60:  MOVLB  5
4F62:  CLRF   x9E
4F64:  MOVLB  6
4F66:  CLRF   x4E
4F68:  MOVLB  0
4F6A:  CALL   1260
4F6E:  MOVLB  5
4F70:  CLRF   x9A
....................          //Ganancia=2*(Setpoint/44.5); 
....................          //Gananciamax=(0.21)*Setpoint; 
....................          //Tpulsomin=0.9; 
....................          //TpulsoMax=1.1; 
....................          RIGHT=0;LEFT=0; 
4F72:  BCF    x86.2
4F74:  BCF    x86.3
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
4F76:  BTFSS  x86.3
4F78:  BRA    4FAA
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
4F7A:  MOVLW  04
4F7C:  MOVLB  6
4F7E:  MOVWF  x4D
4F80:  MOVLW  AF
4F82:  MOVWF  x53
4F84:  MOVLB  0
4F86:  CALL   0D48
4F8A:  MOVLB  6
4F8C:  DECFSZ x4D,F
4F8E:  BRA    4F80
4F90:  MOVLW  01
4F92:  MOVLB  5
4F94:  MOVWF  x97
4F96:  MOVLB  6
4F98:  CLRF   x4E
4F9A:  MOVLB  0
4F9C:  CALL   1260
4FA0:  MOVLW  01
4FA2:  MOVLB  5
4FA4:  MOVWF  x9C
4FA6:  BSF    x87.1
....................          LEFT=0; 
4FA8:  BCF    x86.3
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Temperatura 
4FAA:  MOVF   x97,W
4FAC:  SUBLW  05
4FAE:  BTFSS  FD8.2
4FB0:  GOTO   5828
....................       
....................          if(Opcion>3) 
4FB4:  MOVF   x9C,W
4FB6:  SUBLW  03
4FB8:  BC    4FBE
....................          {Opcion=1;} 
4FBA:  MOVLW  01
4FBC:  MOVWF  x9C
....................          if(Opcion<1) 
4FBE:  MOVF   x9C,F
4FC0:  BNZ   4FC6
....................          {Opcion=3;} 
4FC2:  MOVLW  03
4FC4:  MOVWF  x9C
....................           
....................        
....................          if(Opcion==1)    
4FC6:  DECFSZ x9C,W
4FC8:  BRA    5020
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 1"); 
4FCA:  MOVLW  06
4FCC:  MOVWF  FEA
4FCE:  MOVLW  2D
4FD0:  MOVWF  FE9
4FD2:  MOVFF  FF2,64D
4FD6:  BCF    FF2.7
4FD8:  MOVLW  00
4FDA:  MOVLB  0
4FDC:  CALL   0920
4FE0:  TBLRD*-
4FE2:  TBLRD*+
4FE4:  MOVF   FF5,W
4FE6:  MOVWF  FEE
4FE8:  IORLW  00
4FEA:  BNZ   4FE2
4FEC:  MOVLB  6
4FEE:  BTFSC  x4D.7
4FF0:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,1,1); 
4FF2:  MOVLW  06
4FF4:  MOVWF  x4E
4FF6:  MOVLW  2D
4FF8:  MOVWF  x4D
4FFA:  MOVFF  614,652
4FFE:  MOVFF  613,651
5002:  MOVFF  612,650
5006:  MOVFF  611,64F
500A:  CLRF   x53
500C:  MOVLW  14
500E:  MOVWF  x54
5010:  MOVLW  01
5012:  MOVWF  x55
5014:  MOVWF  x56
5016:  MOVLB  0
5018:  CALL   26C2
....................          } 
....................          else 
501C:  BRA    5072
501E:  MOVLB  5
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 1"); 
5020:  MOVLW  06
5022:  MOVWF  FEA
5024:  MOVLW  2D
5026:  MOVWF  FE9
5028:  MOVFF  FF2,64D
502C:  BCF    FF2.7
502E:  MOVLW  00
5030:  MOVLB  0
5032:  CALL   0920
5036:  TBLRD*-
5038:  TBLRD*+
503A:  MOVF   FF5,W
503C:  MOVWF  FEE
503E:  IORLW  00
5040:  BNZ   5038
5042:  MOVLB  6
5044:  BTFSC  x4D.7
5046:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,0,1); 
5048:  MOVLW  06
504A:  MOVWF  x4E
504C:  MOVLW  2D
504E:  MOVWF  x4D
5050:  MOVFF  614,652
5054:  MOVFF  613,651
5058:  MOVFF  612,650
505C:  MOVFF  611,64F
5060:  CLRF   x53
5062:  MOVLW  14
5064:  MOVWF  x54
5066:  CLRF   x55
5068:  MOVLW  01
506A:  MOVWF  x56
506C:  MOVLB  0
506E:  CALL   26C2
....................          } 
....................           
....................          if(Opcion==2)    
5072:  MOVLB  5
5074:  MOVF   x9C,W
5076:  SUBLW  02
5078:  BNZ   50D0
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 2"); 
507A:  MOVLW  06
507C:  MOVWF  FEA
507E:  MOVLW  2D
5080:  MOVWF  FE9
5082:  MOVFF  FF2,64D
5086:  BCF    FF2.7
5088:  MOVLW  00
508A:  MOVLB  0
508C:  CALL   0948
5090:  TBLRD*-
5092:  TBLRD*+
5094:  MOVF   FF5,W
5096:  MOVWF  FEE
5098:  IORLW  00
509A:  BNZ   5092
509C:  MOVLB  6
509E:  BTFSC  x4D.7
50A0:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,1,1); 
50A2:  MOVLW  06
50A4:  MOVWF  x4E
50A6:  MOVLW  2D
50A8:  MOVWF  x4D
50AA:  MOVFF  618,652
50AE:  MOVFF  617,651
50B2:  MOVFF  616,650
50B6:  MOVFF  615,64F
50BA:  CLRF   x53
50BC:  MOVLW  23
50BE:  MOVWF  x54
50C0:  MOVLW  01
50C2:  MOVWF  x55
50C4:  MOVWF  x56
50C6:  MOVLB  0
50C8:  CALL   26C2
....................          } 
....................          else 
50CC:  BRA    5122
50CE:  MOVLB  5
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 2"); 
50D0:  MOVLW  06
50D2:  MOVWF  FEA
50D4:  MOVLW  2D
50D6:  MOVWF  FE9
50D8:  MOVFF  FF2,64D
50DC:  BCF    FF2.7
50DE:  MOVLW  00
50E0:  MOVLB  0
50E2:  CALL   0948
50E6:  TBLRD*-
50E8:  TBLRD*+
50EA:  MOVF   FF5,W
50EC:  MOVWF  FEE
50EE:  IORLW  00
50F0:  BNZ   50E8
50F2:  MOVLB  6
50F4:  BTFSC  x4D.7
50F6:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,0,1); 
50F8:  MOVLW  06
50FA:  MOVWF  x4E
50FC:  MOVLW  2D
50FE:  MOVWF  x4D
5100:  MOVFF  618,652
5104:  MOVFF  617,651
5108:  MOVFF  616,650
510C:  MOVFF  615,64F
5110:  CLRF   x53
5112:  MOVLW  23
5114:  MOVWF  x54
5116:  CLRF   x55
5118:  MOVLW  01
511A:  MOVWF  x56
511C:  MOVLB  0
511E:  CALL   26C2
....................          } 
....................              
....................          if(Opcion==3)    
5122:  MOVLB  5
5124:  MOVF   x9C,W
5126:  SUBLW  03
5128:  BNZ   5180
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 3"); 
512A:  MOVLW  06
512C:  MOVWF  FEA
512E:  MOVLW  2D
5130:  MOVWF  FE9
5132:  MOVFF  FF2,64D
5136:  BCF    FF2.7
5138:  MOVLW  00
513A:  MOVLB  0
513C:  CALL   0970
5140:  TBLRD*-
5142:  TBLRD*+
5144:  MOVF   FF5,W
5146:  MOVWF  FEE
5148:  IORLW  00
514A:  BNZ   5142
514C:  MOVLB  6
514E:  BTFSC  x4D.7
5150:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,1,1); 
5152:  MOVLW  06
5154:  MOVWF  x4E
5156:  MOVLW  2D
5158:  MOVWF  x4D
515A:  MOVFF  61C,652
515E:  MOVFF  61B,651
5162:  MOVFF  61A,650
5166:  MOVFF  619,64F
516A:  CLRF   x53
516C:  MOVLW  32
516E:  MOVWF  x54
5170:  MOVLW  01
5172:  MOVWF  x55
5174:  MOVWF  x56
5176:  MOVLB  0
5178:  CALL   26C2
....................          } 
....................          else 
517C:  BRA    51D2
517E:  MOVLB  5
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 3"); 
5180:  MOVLW  06
5182:  MOVWF  FEA
5184:  MOVLW  2D
5186:  MOVWF  FE9
5188:  MOVFF  FF2,64D
518C:  BCF    FF2.7
518E:  MOVLW  00
5190:  MOVLB  0
5192:  CALL   0970
5196:  TBLRD*-
5198:  TBLRD*+
519A:  MOVF   FF5,W
519C:  MOVWF  FEE
519E:  IORLW  00
51A0:  BNZ   5198
51A2:  MOVLB  6
51A4:  BTFSC  x4D.7
51A6:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,0,1); 
51A8:  MOVLW  06
51AA:  MOVWF  x4E
51AC:  MOVLW  2D
51AE:  MOVWF  x4D
51B0:  MOVFF  61C,652
51B4:  MOVFF  61B,651
51B8:  MOVFF  61A,650
51BC:  MOVFF  619,64F
51C0:  CLRF   x53
51C2:  MOVLW  32
51C4:  MOVWF  x54
51C6:  CLRF   x55
51C8:  MOVLW  01
51CA:  MOVWF  x56
51CC:  MOVLB  0
51CE:  CALL   26C2
....................          } 
....................                
....................                 
....................          if(RIGHT)//Si oprime SET 
51D2:  MOVLB  5
51D4:  BTFSS  x86.2
51D6:  BRA    51DC
....................          {  
....................             RIGHT=0;Opcion++; 
51D8:  BCF    x86.2
51DA:  INCF   x9C,F
....................          } 
....................        
....................          strcpy(Menus.Letra,"Temperatura"); 
51DC:  MOVLW  06
51DE:  MOVWF  FEA
51E0:  MOVLW  2D
51E2:  MOVWF  FE9
51E4:  MOVFF  FF2,64D
51E8:  BCF    FF2.7
51EA:  MOVLW  00
51EC:  MOVLB  0
51EE:  CALL   08FA
51F2:  TBLRD*-
51F4:  TBLRD*+
51F6:  MOVF   FF5,W
51F8:  MOVWF  FEE
51FA:  IORLW  00
51FC:  BNZ   51F4
51FE:  MOVLB  6
5200:  BTFSC  x4D.7
5202:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5204:  MOVLW  06
5206:  MOVWF  x4E
5208:  MOVLW  2D
520A:  MOVWF  x4D
520C:  CLRF   x4F
520E:  CLRF   x50
5210:  MOVLW  01
5212:  MOVWF  x51
5214:  MOVLW  02
5216:  MOVWF  x52
5218:  MOVLB  0
521A:  CALL   188E
....................           
....................        
....................          if(UP)//Si oprime hacia arriba 
521E:  MOVLB  5
5220:  BTFSS  x86.0
5222:  BRA    52EA
....................          {   
....................             if(Opcion==1) 
5224:  DECFSZ x9C,W
5226:  BRA    5264
....................                Temperatura1+=0.1; 
5228:  BCF    FD8.1
522A:  MOVFF  614,655
522E:  MOVFF  613,654
5232:  MOVFF  612,653
5236:  MOVFF  611,652
523A:  MOVLW  CD
523C:  MOVLB  6
523E:  MOVWF  x59
5240:  MOVLW  CC
5242:  MOVWF  x58
5244:  MOVLW  4C
5246:  MOVWF  x57
5248:  MOVLW  7B
524A:  MOVWF  x56
524C:  MOVLB  0
524E:  CALL   0F2E
5252:  MOVFF  03,614
5256:  MOVFF  02,613
525A:  MOVFF  01,612
525E:  MOVFF  00,611
5262:  MOVLB  5
....................              
....................             if(Opcion==2) 
5264:  MOVF   x9C,W
5266:  SUBLW  02
5268:  BNZ   52A6
....................                Temperatura2+=0.1; 
526A:  BCF    FD8.1
526C:  MOVFF  618,655
5270:  MOVFF  617,654
5274:  MOVFF  616,653
5278:  MOVFF  615,652
527C:  MOVLW  CD
527E:  MOVLB  6
5280:  MOVWF  x59
5282:  MOVLW  CC
5284:  MOVWF  x58
5286:  MOVLW  4C
5288:  MOVWF  x57
528A:  MOVLW  7B
528C:  MOVWF  x56
528E:  MOVLB  0
5290:  CALL   0F2E
5294:  MOVFF  03,618
5298:  MOVFF  02,617
529C:  MOVFF  01,616
52A0:  MOVFF  00,615
52A4:  MOVLB  5
....................                 
....................             if(Opcion==3) 
52A6:  MOVF   x9C,W
52A8:  SUBLW  03
52AA:  BNZ   52E8
....................                Temperatura3+=0.1;    
52AC:  BCF    FD8.1
52AE:  MOVFF  61C,655
52B2:  MOVFF  61B,654
52B6:  MOVFF  61A,653
52BA:  MOVFF  619,652
52BE:  MOVLW  CD
52C0:  MOVLB  6
52C2:  MOVWF  x59
52C4:  MOVLW  CC
52C6:  MOVWF  x58
52C8:  MOVLW  4C
52CA:  MOVWF  x57
52CC:  MOVLW  7B
52CE:  MOVWF  x56
52D0:  MOVLB  0
52D2:  CALL   0F2E
52D6:  MOVFF  03,61C
52DA:  MOVFF  02,61B
52DE:  MOVFF  01,61A
52E2:  MOVFF  00,619
52E6:  MOVLB  5
....................             UP=0; 
52E8:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
52EA:  BTFSS  x86.1
52EC:  BRA    53B4
....................          {   
....................             if(Opcion==1) 
52EE:  DECFSZ x9C,W
52F0:  BRA    532E
....................                Temperatura1-=0.1; 
52F2:  BSF    FD8.1
52F4:  MOVFF  614,655
52F8:  MOVFF  613,654
52FC:  MOVFF  612,653
5300:  MOVFF  611,652
5304:  MOVLW  CD
5306:  MOVLB  6
5308:  MOVWF  x59
530A:  MOVLW  CC
530C:  MOVWF  x58
530E:  MOVLW  4C
5310:  MOVWF  x57
5312:  MOVLW  7B
5314:  MOVWF  x56
5316:  MOVLB  0
5318:  CALL   0F2E
531C:  MOVFF  03,614
5320:  MOVFF  02,613
5324:  MOVFF  01,612
5328:  MOVFF  00,611
532C:  MOVLB  5
....................              
....................             if(Opcion==2) 
532E:  MOVF   x9C,W
5330:  SUBLW  02
5332:  BNZ   5370
....................                Temperatura2-=0.1; 
5334:  BSF    FD8.1
5336:  MOVFF  618,655
533A:  MOVFF  617,654
533E:  MOVFF  616,653
5342:  MOVFF  615,652
5346:  MOVLW  CD
5348:  MOVLB  6
534A:  MOVWF  x59
534C:  MOVLW  CC
534E:  MOVWF  x58
5350:  MOVLW  4C
5352:  MOVWF  x57
5354:  MOVLW  7B
5356:  MOVWF  x56
5358:  MOVLB  0
535A:  CALL   0F2E
535E:  MOVFF  03,618
5362:  MOVFF  02,617
5366:  MOVFF  01,616
536A:  MOVFF  00,615
536E:  MOVLB  5
....................                 
....................             if(Opcion==3) 
5370:  MOVF   x9C,W
5372:  SUBLW  03
5374:  BNZ   53B2
....................                Temperatura3-=0.1;    
5376:  BSF    FD8.1
5378:  MOVFF  61C,655
537C:  MOVFF  61B,654
5380:  MOVFF  61A,653
5384:  MOVFF  619,652
5388:  MOVLW  CD
538A:  MOVLB  6
538C:  MOVWF  x59
538E:  MOVLW  CC
5390:  MOVWF  x58
5392:  MOVLW  4C
5394:  MOVWF  x57
5396:  MOVLW  7B
5398:  MOVWF  x56
539A:  MOVLB  0
539C:  CALL   0F2E
53A0:  MOVFF  03,61C
53A4:  MOVFF  02,61B
53A8:  MOVFF  01,61A
53AC:  MOVFF  00,619
53B0:  MOVLB  5
....................             DOWN=0; 
53B2:  BCF    x86.1
....................          } 
....................                            
....................          if(LEFT)//Si oprime boton de Toma. 
53B4:  BTFSS  x86.3
53B6:  BRA    56F8
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
53B8:  MOVLW  04
53BA:  MOVLB  6
53BC:  MOVWF  x4D
53BE:  MOVLW  AF
53C0:  MOVWF  x53
53C2:  MOVLB  0
53C4:  CALL   0D48
53C8:  MOVLB  6
53CA:  DECFSZ x4D,F
53CC:  BRA    53BE
53CE:  MOVLW  01
53D0:  MOVLB  5
53D2:  MOVWF  x97
53D4:  MOVLB  6
53D6:  CLRF   x4E
53D8:  MOVLB  0
53DA:  CALL   1260
53DE:  MOVLW  01
53E0:  MOVLB  5
53E2:  MOVWF  x9C
53E4:  BSF    x87.1
....................              
....................             entero=(int8)Temperatura1; 
53E6:  MOVFF  614,650
53EA:  MOVFF  613,64F
53EE:  MOVFF  612,64E
53F2:  MOVFF  611,64D
53F6:  MOVLB  0
53F8:  CALL   2198
53FC:  MOVFF  01,5A0
....................             decimal=(Temperatura1-entero)*10; 
5400:  MOVLB  6
5402:  CLRF   x54
5404:  MOVFF  5A0,653
5408:  MOVLB  0
540A:  CALL   0D9A
540E:  BSF    FD8.1
5410:  MOVFF  614,655
5414:  MOVFF  613,654
5418:  MOVFF  612,653
541C:  MOVFF  611,652
5420:  MOVFF  03,659
5424:  MOVFF  02,658
5428:  MOVFF  01,657
542C:  MOVFF  00,656
5430:  CALL   0F2E
5434:  MOVFF  00,64D
5438:  MOVFF  01,64E
543C:  MOVFF  02,64F
5440:  MOVFF  03,650
5444:  MOVFF  03,670
5448:  MOVFF  02,66F
544C:  MOVFF  01,66E
5450:  MOVFF  00,66D
5454:  MOVLB  6
5456:  CLRF   x74
5458:  CLRF   x73
545A:  MOVLW  20
545C:  MOVWF  x72
545E:  MOVLW  82
5460:  MOVWF  x71
5462:  MOVLB  0
5464:  CALL   1BC4
5468:  MOVFF  03,650
546C:  MOVFF  02,64F
5470:  MOVFF  01,64E
5474:  MOVFF  00,64D
5478:  CALL   2198
547C:  MOVFF  01,59F
....................             write_eeprom(80,entero); 
5480:  MOVLW  50
5482:  MOVWF  FA9
5484:  MOVFF  5A0,FA8
5488:  BCF    FA6.6
548A:  BCF    FA6.7
548C:  BSF    FA6.2
548E:  MOVF   FF2,W
5490:  MOVWF  00
5492:  BCF    FF2.7
5494:  MOVLB  F
5496:  MOVLW  55
5498:  MOVWF  FA7
549A:  MOVLW  AA
549C:  MOVWF  FA7
549E:  BSF    FA6.1
54A0:  BTFSC  FA6.1
54A2:  BRA    54A0
54A4:  BCF    FA6.2
54A6:  MOVF   00,W
54A8:  IORWF  FF2,F
....................             delay_ms(50);    
54AA:  MOVLW  32
54AC:  MOVLB  6
54AE:  MOVWF  x53
54B0:  MOVLB  0
54B2:  CALL   0D48
....................             write_eeprom(81,decimal);//Guardar valor de Setpoint en eeprom 
54B6:  MOVLW  51
54B8:  MOVWF  FA9
54BA:  MOVFF  59F,FA8
54BE:  BCF    FA6.6
54C0:  BCF    FA6.7
54C2:  BSF    FA6.2
54C4:  MOVF   FF2,W
54C6:  MOVWF  00
54C8:  BCF    FF2.7
54CA:  MOVLB  F
54CC:  MOVLW  55
54CE:  MOVWF  FA7
54D0:  MOVLW  AA
54D2:  MOVWF  FA7
54D4:  BSF    FA6.1
54D6:  BTFSC  FA6.1
54D8:  BRA    54D6
54DA:  BCF    FA6.2
54DC:  MOVF   00,W
54DE:  IORWF  FF2,F
....................             delay_ms(50);   
54E0:  MOVLW  32
54E2:  MOVLB  6
54E4:  MOVWF  x53
54E6:  MOVLB  0
54E8:  CALL   0D48
....................              
....................             entero=(int8)Temperatura2; 
54EC:  MOVFF  618,650
54F0:  MOVFF  617,64F
54F4:  MOVFF  616,64E
54F8:  MOVFF  615,64D
54FC:  CALL   2198
5500:  MOVFF  01,5A0
....................             decimal=(Temperatura2-entero)*10; 
5504:  MOVLB  6
5506:  CLRF   x54
5508:  MOVFF  5A0,653
550C:  MOVLB  0
550E:  CALL   0D9A
5512:  BSF    FD8.1
5514:  MOVFF  618,655
5518:  MOVFF  617,654
551C:  MOVFF  616,653
5520:  MOVFF  615,652
5524:  MOVFF  03,659
5528:  MOVFF  02,658
552C:  MOVFF  01,657
5530:  MOVFF  00,656
5534:  CALL   0F2E
5538:  MOVFF  00,64D
553C:  MOVFF  01,64E
5540:  MOVFF  02,64F
5544:  MOVFF  03,650
5548:  MOVFF  03,670
554C:  MOVFF  02,66F
5550:  MOVFF  01,66E
5554:  MOVFF  00,66D
5558:  MOVLB  6
555A:  CLRF   x74
555C:  CLRF   x73
555E:  MOVLW  20
5560:  MOVWF  x72
5562:  MOVLW  82
5564:  MOVWF  x71
5566:  MOVLB  0
5568:  CALL   1BC4
556C:  MOVFF  03,650
5570:  MOVFF  02,64F
5574:  MOVFF  01,64E
5578:  MOVFF  00,64D
557C:  CALL   2198
5580:  MOVFF  01,59F
....................             write_eeprom(83,entero); 
5584:  MOVLW  53
5586:  MOVWF  FA9
5588:  MOVFF  5A0,FA8
558C:  BCF    FA6.6
558E:  BCF    FA6.7
5590:  BSF    FA6.2
5592:  MOVF   FF2,W
5594:  MOVWF  00
5596:  BCF    FF2.7
5598:  MOVLB  F
559A:  MOVLW  55
559C:  MOVWF  FA7
559E:  MOVLW  AA
55A0:  MOVWF  FA7
55A2:  BSF    FA6.1
55A4:  BTFSC  FA6.1
55A6:  BRA    55A4
55A8:  BCF    FA6.2
55AA:  MOVF   00,W
55AC:  IORWF  FF2,F
....................             delay_ms(50);    
55AE:  MOVLW  32
55B0:  MOVLB  6
55B2:  MOVWF  x53
55B4:  MOVLB  0
55B6:  CALL   0D48
....................             write_eeprom(84,decimal);//Guardar valor de Setpoint en eeprom 
55BA:  MOVLW  54
55BC:  MOVWF  FA9
55BE:  MOVFF  59F,FA8
55C2:  BCF    FA6.6
55C4:  BCF    FA6.7
55C6:  BSF    FA6.2
55C8:  MOVF   FF2,W
55CA:  MOVWF  00
55CC:  BCF    FF2.7
55CE:  MOVLB  F
55D0:  MOVLW  55
55D2:  MOVWF  FA7
55D4:  MOVLW  AA
55D6:  MOVWF  FA7
55D8:  BSF    FA6.1
55DA:  BTFSC  FA6.1
55DC:  BRA    55DA
55DE:  BCF    FA6.2
55E0:  MOVF   00,W
55E2:  IORWF  FF2,F
....................             delay_ms(50);    
55E4:  MOVLW  32
55E6:  MOVLB  6
55E8:  MOVWF  x53
55EA:  MOVLB  0
55EC:  CALL   0D48
....................              
....................             entero=(int8)Temperatura3; 
55F0:  MOVFF  61C,650
55F4:  MOVFF  61B,64F
55F8:  MOVFF  61A,64E
55FC:  MOVFF  619,64D
5600:  CALL   2198
5604:  MOVFF  01,5A0
....................             decimal=(Temperatura3-entero)*10; 
5608:  MOVLB  6
560A:  CLRF   x54
560C:  MOVFF  5A0,653
5610:  MOVLB  0
5612:  CALL   0D9A
5616:  BSF    FD8.1
5618:  MOVFF  61C,655
561C:  MOVFF  61B,654
5620:  MOVFF  61A,653
5624:  MOVFF  619,652
5628:  MOVFF  03,659
562C:  MOVFF  02,658
5630:  MOVFF  01,657
5634:  MOVFF  00,656
5638:  CALL   0F2E
563C:  MOVFF  00,64D
5640:  MOVFF  01,64E
5644:  MOVFF  02,64F
5648:  MOVFF  03,650
564C:  MOVFF  03,670
5650:  MOVFF  02,66F
5654:  MOVFF  01,66E
5658:  MOVFF  00,66D
565C:  MOVLB  6
565E:  CLRF   x74
5660:  CLRF   x73
5662:  MOVLW  20
5664:  MOVWF  x72
5666:  MOVLW  82
5668:  MOVWF  x71
566A:  MOVLB  0
566C:  CALL   1BC4
5670:  MOVFF  03,650
5674:  MOVFF  02,64F
5678:  MOVFF  01,64E
567C:  MOVFF  00,64D
5680:  CALL   2198
5684:  MOVFF  01,59F
....................             write_eeprom(86,entero); 
5688:  MOVLW  56
568A:  MOVWF  FA9
568C:  MOVFF  5A0,FA8
5690:  BCF    FA6.6
5692:  BCF    FA6.7
5694:  BSF    FA6.2
5696:  MOVF   FF2,W
5698:  MOVWF  00
569A:  BCF    FF2.7
569C:  MOVLB  F
569E:  MOVLW  55
56A0:  MOVWF  FA7
56A2:  MOVLW  AA
56A4:  MOVWF  FA7
56A6:  BSF    FA6.1
56A8:  BTFSC  FA6.1
56AA:  BRA    56A8
56AC:  BCF    FA6.2
56AE:  MOVF   00,W
56B0:  IORWF  FF2,F
....................             delay_ms(50);    
56B2:  MOVLW  32
56B4:  MOVLB  6
56B6:  MOVWF  x53
56B8:  MOVLB  0
56BA:  CALL   0D48
....................             write_eeprom(87,decimal);//Guardar valor de Setpoint en eeprom 
56BE:  MOVLW  57
56C0:  MOVWF  FA9
56C2:  MOVFF  59F,FA8
56C6:  BCF    FA6.6
56C8:  BCF    FA6.7
56CA:  BSF    FA6.2
56CC:  MOVF   FF2,W
56CE:  MOVWF  00
56D0:  BCF    FF2.7
56D2:  MOVLB  F
56D4:  MOVLW  55
56D6:  MOVWF  FA7
56D8:  MOVLW  AA
56DA:  MOVWF  FA7
56DC:  BSF    FA6.1
56DE:  BTFSC  FA6.1
56E0:  BRA    56DE
56E2:  BCF    FA6.2
56E4:  MOVF   00,W
56E6:  IORWF  FF2,F
....................             delay_ms(50);    
56E8:  MOVLW  32
56EA:  MOVLB  6
56EC:  MOVWF  x53
56EE:  MOVLB  0
56F0:  CALL   0D48
....................             LEFT=0; 
56F4:  MOVLB  5
56F6:  BCF    x86.3
....................          } 
....................           
....................          if(Temperatura1<1) 
56F8:  MOVFF  614,650
56FC:  MOVFF  613,64F
5700:  MOVFF  612,64E
5704:  MOVFF  611,64D
5708:  MOVLB  6
570A:  CLRF   x54
570C:  CLRF   x53
570E:  CLRF   x52
5710:  MOVLW  7F
5712:  MOVWF  x51
5714:  MOVLB  0
5716:  CALL   11A6
571A:  BNC   572A
....................             Temperatura1=60; 
571C:  MOVLB  6
571E:  CLRF   x14
5720:  CLRF   x13
5722:  MOVLW  70
5724:  MOVWF  x12
5726:  MOVLW  84
5728:  MOVWF  x11
....................              
....................          if(Temperatura2<1) 
572A:  MOVFF  618,650
572E:  MOVFF  617,64F
5732:  MOVFF  616,64E
5736:  MOVFF  615,64D
573A:  MOVLB  6
573C:  CLRF   x54
573E:  CLRF   x53
5740:  CLRF   x52
5742:  MOVLW  7F
5744:  MOVWF  x51
5746:  MOVLB  0
5748:  CALL   11A6
574C:  BNC   575C
....................             Temperatura2=60; 
574E:  MOVLB  6
5750:  CLRF   x18
5752:  CLRF   x17
5754:  MOVLW  70
5756:  MOVWF  x16
5758:  MOVLW  84
575A:  MOVWF  x15
....................              
....................          if(Temperatura3<1) 
575C:  MOVFF  61C,650
5760:  MOVFF  61B,64F
5764:  MOVFF  61A,64E
5768:  MOVFF  619,64D
576C:  MOVLB  6
576E:  CLRF   x54
5770:  CLRF   x53
5772:  CLRF   x52
5774:  MOVLW  7F
5776:  MOVWF  x51
5778:  MOVLB  0
577A:  CALL   11A6
577E:  BNC   578E
....................             Temperatura3=60; 
5780:  MOVLB  6
5782:  CLRF   x1C
5784:  CLRF   x1B
5786:  MOVLW  70
5788:  MOVWF  x1A
578A:  MOVLW  84
578C:  MOVWF  x19
....................              
....................          if(Temperatura1>60) 
578E:  MOVLB  6
5790:  CLRF   x50
5792:  CLRF   x4F
5794:  MOVLW  70
5796:  MOVWF  x4E
5798:  MOVLW  84
579A:  MOVWF  x4D
579C:  MOVFF  614,654
57A0:  MOVFF  613,653
57A4:  MOVFF  612,652
57A8:  MOVFF  611,651
57AC:  MOVLB  0
57AE:  CALL   11A6
57B2:  BNC   57C0
....................             Temperatura1=1;    
57B4:  MOVLB  6
57B6:  CLRF   x14
57B8:  CLRF   x13
57BA:  CLRF   x12
57BC:  MOVLW  7F
57BE:  MOVWF  x11
....................              
....................          if(Temperatura2>60) 
57C0:  MOVLB  6
57C2:  CLRF   x50
57C4:  CLRF   x4F
57C6:  MOVLW  70
57C8:  MOVWF  x4E
57CA:  MOVLW  84
57CC:  MOVWF  x4D
57CE:  MOVFF  618,654
57D2:  MOVFF  617,653
57D6:  MOVFF  616,652
57DA:  MOVFF  615,651
57DE:  MOVLB  0
57E0:  CALL   11A6
57E4:  BNC   57F2
....................             Temperatura2=1;    
57E6:  MOVLB  6
57E8:  CLRF   x18
57EA:  CLRF   x17
57EC:  CLRF   x16
57EE:  MOVLW  7F
57F0:  MOVWF  x15
....................              
....................          if(Temperatura3>60) 
57F2:  MOVLB  6
57F4:  CLRF   x50
57F6:  CLRF   x4F
57F8:  MOVLW  70
57FA:  MOVWF  x4E
57FC:  MOVLW  84
57FE:  MOVWF  x4D
5800:  MOVFF  61C,654
5804:  MOVFF  61B,653
5808:  MOVFF  61A,652
580C:  MOVFF  619,651
5810:  MOVLB  0
5812:  CALL   11A6
5816:  BNC   5826
....................             Temperatura3=1;    
5818:  MOVLB  6
581A:  CLRF   x1C
581C:  CLRF   x1B
581E:  CLRF   x1A
5820:  MOVLW  7F
5822:  MOVWF  x19
5824:  MOVLB  0
5826:  MOVLB  5
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Temporizador 
5828:  MOVF   x97,W
582A:  SUBLW  06
582C:  BTFSS  FD8.2
582E:  BRA    5B60
....................       
....................        
....................          if(unidad<1) 
5830:  MOVF   x98,F
5832:  BNZ   5838
....................          {unidad=4;} 
5834:  MOVLW  04
5836:  MOVWF  x98
....................           
....................          strcpy(Menus.Letra,"Temporiza"); 
5838:  MOVLW  06
583A:  MOVWF  FEA
583C:  MOVLW  2D
583E:  MOVWF  FE9
5840:  MOVFF  FF2,64D
5844:  BCF    FF2.7
5846:  MOVLW  00
5848:  MOVLB  0
584A:  CALL   0998
584E:  TBLRD*-
5850:  TBLRD*+
5852:  MOVF   FF5,W
5854:  MOVWF  FEE
5856:  IORLW  00
5858:  BNZ   5850
585A:  MOVLB  6
585C:  BTFSC  x4D.7
585E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5860:  MOVLW  06
5862:  MOVWF  x4E
5864:  MOVLW  2D
5866:  MOVWF  x4D
5868:  CLRF   x4F
586A:  CLRF   x50
586C:  MOVLW  01
586E:  MOVWF  x51
5870:  MOVLW  02
5872:  MOVWF  x52
5874:  MOVLB  0
5876:  CALL   188E
....................           
....................          if(unidad==4) 
587A:  MOVLB  5
587C:  MOVF   x98,W
587E:  SUBLW  04
5880:  BNZ   58A0
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
5882:  MOVFF  5C4,64E
5886:  MOVLW  14
5888:  MOVLB  6
588A:  MOVWF  x4F
588C:  MOVLW  28
588E:  MOVWF  x50
5890:  MOVLW  01
5892:  MOVWF  x51
5894:  MOVLW  02
5896:  MOVWF  x52
5898:  MOVLB  0
589A:  CALL   29D0
....................          else 
589E:  BRA    58BA
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
58A0:  MOVFF  5C4,64E
58A4:  MOVLW  14
58A6:  MOVLB  6
58A8:  MOVWF  x4F
58AA:  MOVLW  28
58AC:  MOVWF  x50
58AE:  CLRF   x51
58B0:  MOVLW  02
58B2:  MOVWF  x52
58B4:  MOVLB  0
58B6:  CALL   29D0
....................           
....................          if(unidad==3) 
58BA:  MOVLB  5
58BC:  MOVF   x98,W
58BE:  SUBLW  03
58C0:  BNZ   58DE
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
58C2:  MOVFF  5C3,64E
58C6:  MOVLW  28
58C8:  MOVLB  6
58CA:  MOVWF  x4F
58CC:  MOVWF  x50
58CE:  MOVLW  01
58D0:  MOVWF  x51
58D2:  MOVLW  02
58D4:  MOVWF  x52
58D6:  MOVLB  0
58D8:  CALL   29D0
....................          else 
58DC:  BRA    58F6
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
58DE:  MOVFF  5C3,64E
58E2:  MOVLW  28
58E4:  MOVLB  6
58E6:  MOVWF  x4F
58E8:  MOVWF  x50
58EA:  CLRF   x51
58EC:  MOVLW  02
58EE:  MOVWF  x52
58F0:  MOVLB  0
58F2:  CALL   29D0
....................           
....................          if(unidad==2) 
58F6:  MOVLB  5
58F8:  MOVF   x98,W
58FA:  SUBLW  02
58FC:  BNZ   591C
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
58FE:  MOVFF  5C2,64E
5902:  MOVLW  46
5904:  MOVLB  6
5906:  MOVWF  x4F
5908:  MOVLW  28
590A:  MOVWF  x50
590C:  MOVLW  01
590E:  MOVWF  x51
5910:  MOVLW  02
5912:  MOVWF  x52
5914:  MOVLB  0
5916:  CALL   29D0
....................          else 
591A:  BRA    5936
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
591C:  MOVFF  5C2,64E
5920:  MOVLW  46
5922:  MOVLB  6
5924:  MOVWF  x4F
5926:  MOVLW  28
5928:  MOVWF  x50
592A:  CLRF   x51
592C:  MOVLW  02
592E:  MOVWF  x52
5930:  MOVLB  0
5932:  CALL   29D0
....................           
....................          if(unidad==1) 
5936:  MOVLB  5
5938:  DECFSZ x98,W
593A:  BRA    595A
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
593C:  MOVFF  5C1,64E
5940:  MOVLW  5A
5942:  MOVLB  6
5944:  MOVWF  x4F
5946:  MOVLW  28
5948:  MOVWF  x50
594A:  MOVLW  01
594C:  MOVWF  x51
594E:  MOVLW  02
5950:  MOVWF  x52
5952:  MOVLB  0
5954:  CALL   29D0
....................          else 
5958:  BRA    5974
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
595A:  MOVFF  5C1,64E
595E:  MOVLW  5A
5960:  MOVLB  6
5962:  MOVWF  x4F
5964:  MOVLW  28
5966:  MOVWF  x50
5968:  CLRF   x51
596A:  MOVLW  02
596C:  MOVWF  x52
596E:  MOVLB  0
5970:  CALL   29D0
....................           
....................          strcpy(Menus.Letra,":"); 
5974:  MOVLW  06
5976:  MOVWF  FEA
5978:  MOVLW  2D
597A:  MOVWF  FE9
597C:  MOVFF  FF2,64D
5980:  BCF    FF2.7
5982:  MOVLW  00
5984:  CALL   09BC
5988:  TBLRD*-
598A:  TBLRD*+
598C:  MOVF   FF5,W
598E:  MOVWF  FEE
5990:  IORLW  00
5992:  BNZ   598A
5994:  MOVLB  6
5996:  BTFSC  x4D.7
5998:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);            
599A:  MOVLW  06
599C:  MOVWF  x4E
599E:  MOVLW  2D
59A0:  MOVWF  x4D
59A2:  MOVLW  3C
59A4:  MOVWF  x4F
59A6:  MOVLW  2A
59A8:  MOVWF  x50
59AA:  MOVLW  02
59AC:  MOVWF  x51
59AE:  MOVWF  x52
59B0:  MOVLB  0
59B2:  CALL   188E
....................        
....................          if(UP)//Si oprime hacia arriba 
59B6:  MOVLB  5
59B8:  BTFSS  x86.0
59BA:  BRA    59FA
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
59BC:  MOVLW  01
59BE:  SUBWF  x98,W
59C0:  CLRF   03
59C2:  ADDLW  C1
59C4:  MOVWF  FE9
59C6:  MOVLW  05
59C8:  ADDWFC 03,W
59CA:  MOVWF  FEA
59CC:  BTFSC  FEF.7
59CE:  BRA    59D6
59D0:  MOVF   FEF,W
59D2:  SUBLW  08
59D4:  BNC   59F8
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
59D6:  MOVLW  1E
59D8:  MOVLB  6
59DA:  MOVWF  x53
59DC:  MOVLB  0
59DE:  CALL   0D48
59E2:  MOVLW  01
59E4:  MOVLB  5
59E6:  SUBWF  x98,W
59E8:  CLRF   03
59EA:  ADDLW  C1
59EC:  MOVWF  FE9
59EE:  MOVLW  05
59F0:  ADDWFC 03,W
59F2:  MOVWF  FEA
59F4:  INCF   FEF,F
59F6:  BSF    x87.1
....................             } 
....................             UP=0; 
59F8:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
59FA:  BTFSS  x86.1
59FC:  BRA    5A3C
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
59FE:  MOVLW  01
5A00:  SUBWF  x98,W
5A02:  CLRF   03
5A04:  ADDLW  C1
5A06:  MOVWF  FE9
5A08:  MOVLW  05
5A0A:  ADDWFC 03,W
5A0C:  MOVWF  FEA
5A0E:  BTFSC  FEF.7
5A10:  BRA    5A3A
5A12:  MOVF   FEF,W
5A14:  SUBLW  00
5A16:  BC    5A3A
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
5A18:  MOVLW  1E
5A1A:  MOVLB  6
5A1C:  MOVWF  x53
5A1E:  MOVLB  0
5A20:  CALL   0D48
5A24:  MOVLW  01
5A26:  MOVLB  5
5A28:  SUBWF  x98,W
5A2A:  CLRF   03
5A2C:  ADDLW  C1
5A2E:  MOVWF  FE9
5A30:  MOVLW  05
5A32:  ADDWFC 03,W
5A34:  MOVWF  FEA
5A36:  DECF   FEF,F
5A38:  BSF    x87.1
....................             } 
....................             DOWN=0; 
5A3A:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5A3C:  BTFSS  x86.2
5A3E:  BRA    5A54
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5A40:  MOVLW  1E
5A42:  MOVLB  6
5A44:  MOVWF  x53
5A46:  MOVLB  0
5A48:  CALL   0D48
5A4C:  MOVLB  5
5A4E:  DECF   x98,F
5A50:  BSF    x87.1
....................             RIGHT=0; 
5A52:  BCF    x86.2
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5A54:  BTFSS  x86.3
5A56:  BRA    5B60
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5A58:  MOVLW  04
5A5A:  MOVLB  6
5A5C:  MOVWF  x4D
5A5E:  MOVLW  AF
5A60:  MOVWF  x53
5A62:  MOVLB  0
5A64:  CALL   0D48
5A68:  MOVLB  6
5A6A:  DECFSZ x4D,F
5A6C:  BRA    5A5E
5A6E:  MOVLW  01
5A70:  MOVLB  5
5A72:  MOVWF  x97
5A74:  MOVLB  6
5A76:  CLRF   x4E
5A78:  MOVLB  0
5A7A:  CALL   1260
5A7E:  MOVLW  01
5A80:  MOVLB  5
5A82:  MOVWF  x9C
5A84:  BSF    x87.1
....................             write_eeprom(0,Testerilizacionp[0]); 
5A86:  CLRF   FA9
5A88:  MOVFF  5C1,FA8
5A8C:  BCF    FA6.6
5A8E:  BCF    FA6.7
5A90:  BSF    FA6.2
5A92:  MOVF   FF2,W
5A94:  MOVWF  00
5A96:  BCF    FF2.7
5A98:  MOVLB  F
5A9A:  MOVLW  55
5A9C:  MOVWF  FA7
5A9E:  MOVLW  AA
5AA0:  MOVWF  FA7
5AA2:  BSF    FA6.1
5AA4:  BTFSC  FA6.1
5AA6:  BRA    5AA4
5AA8:  BCF    FA6.2
5AAA:  MOVF   00,W
5AAC:  IORWF  FF2,F
....................             delay_ms(50);    
5AAE:  MOVLW  32
5AB0:  MOVLB  6
5AB2:  MOVWF  x53
5AB4:  MOVLB  0
5AB6:  CALL   0D48
....................             write_eeprom(1,Testerilizacionp[1]); 
5ABA:  MOVLW  01
5ABC:  MOVWF  FA9
5ABE:  MOVFF  5C2,FA8
5AC2:  BCF    FA6.6
5AC4:  BCF    FA6.7
5AC6:  BSF    FA6.2
5AC8:  MOVF   FF2,W
5ACA:  MOVWF  00
5ACC:  BCF    FF2.7
5ACE:  MOVLB  F
5AD0:  MOVLW  55
5AD2:  MOVWF  FA7
5AD4:  MOVLW  AA
5AD6:  MOVWF  FA7
5AD8:  BSF    FA6.1
5ADA:  BTFSC  FA6.1
5ADC:  BRA    5ADA
5ADE:  BCF    FA6.2
5AE0:  MOVF   00,W
5AE2:  IORWF  FF2,F
....................             delay_ms(50);    
5AE4:  MOVLW  32
5AE6:  MOVLB  6
5AE8:  MOVWF  x53
5AEA:  MOVLB  0
5AEC:  CALL   0D48
....................             write_eeprom(2,Testerilizacionp[2]); 
5AF0:  MOVLW  02
5AF2:  MOVWF  FA9
5AF4:  MOVFF  5C3,FA8
5AF8:  BCF    FA6.6
5AFA:  BCF    FA6.7
5AFC:  BSF    FA6.2
5AFE:  MOVF   FF2,W
5B00:  MOVWF  00
5B02:  BCF    FF2.7
5B04:  MOVLB  F
5B06:  MOVLW  55
5B08:  MOVWF  FA7
5B0A:  MOVLW  AA
5B0C:  MOVWF  FA7
5B0E:  BSF    FA6.1
5B10:  BTFSC  FA6.1
5B12:  BRA    5B10
5B14:  BCF    FA6.2
5B16:  MOVF   00,W
5B18:  IORWF  FF2,F
....................             delay_ms(50);    
5B1A:  MOVLW  32
5B1C:  MOVLB  6
5B1E:  MOVWF  x53
5B20:  MOVLB  0
5B22:  CALL   0D48
....................             write_eeprom(3,Testerilizacionp[3]); 
5B26:  MOVLW  03
5B28:  MOVWF  FA9
5B2A:  MOVFF  5C4,FA8
5B2E:  BCF    FA6.6
5B30:  BCF    FA6.7
5B32:  BSF    FA6.2
5B34:  MOVF   FF2,W
5B36:  MOVWF  00
5B38:  BCF    FF2.7
5B3A:  MOVLB  F
5B3C:  MOVLW  55
5B3E:  MOVWF  FA7
5B40:  MOVLW  AA
5B42:  MOVWF  FA7
5B44:  BSF    FA6.1
5B46:  BTFSC  FA6.1
5B48:  BRA    5B46
5B4A:  BCF    FA6.2
5B4C:  MOVF   00,W
5B4E:  IORWF  FF2,F
....................             delay_ms(50);    
5B50:  MOVLW  32
5B52:  MOVLB  6
5B54:  MOVWF  x53
5B56:  MOVLB  0
5B58:  CALL   0D48
....................             LEFT=0; 
5B5C:  MOVLB  5
5B5E:  BCF    x86.3
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==7){ // Menu de Cambio de Contraseña 
5B60:  MOVF   x97,W
5B62:  SUBLW  07
5B64:  BTFSS  FD8.2
5B66:  BRA    5FF4
....................          
....................       strcpy(Menus.Letra,"Clave"); 
5B68:  MOVLW  06
5B6A:  MOVWF  FEA
5B6C:  MOVLW  2D
5B6E:  MOVWF  FE9
5B70:  MOVFF  FF2,64D
5B74:  BCF    FF2.7
5B76:  MOVLW  00
5B78:  MOVLB  0
5B7A:  CALL   07A0
5B7E:  TBLRD*-
5B80:  TBLRD*+
5B82:  MOVF   FF5,W
5B84:  MOVWF  FEE
5B86:  IORLW  00
5B88:  BNZ   5B80
5B8A:  MOVLB  6
5B8C:  BTFSC  x4D.7
5B8E:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
5B90:  MOVLW  06
5B92:  MOVWF  x4E
5B94:  MOVLW  2D
5B96:  MOVWF  x4D
5B98:  MOVLW  1E
5B9A:  MOVWF  x4F
5B9C:  CLRF   x50
5B9E:  MOVLW  01
5BA0:  MOVWF  x51
5BA2:  MOVLW  02
5BA4:  MOVWF  x52
5BA6:  MOVLB  0
5BA8:  CALL   188E
....................        
....................       if(unidad==1) 
5BAC:  MOVLB  5
5BAE:  DECFSZ x98,W
5BB0:  BRA    5C10
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
5BB2:  MOVFF  5C5,64F
5BB6:  MOVLW  14
5BB8:  MOVLB  6
5BBA:  MOVWF  x50
5BBC:  MOVLW  1E
5BBE:  MOVWF  x51
5BC0:  MOVLW  01
5BC2:  MOVWF  x52
5BC4:  MOVLB  0
5BC6:  CALL   1AB4
....................          displayContrasena(Contrasena[1],40,30,0); 
5BCA:  MOVFF  5C6,64F
5BCE:  MOVLW  28
5BD0:  MOVLB  6
5BD2:  MOVWF  x50
5BD4:  MOVLW  1E
5BD6:  MOVWF  x51
5BD8:  CLRF   x52
5BDA:  MOVLB  0
5BDC:  CALL   1AB4
....................          displayContrasena(Contrasena[2],60,30,0); 
5BE0:  MOVFF  5C7,64F
5BE4:  MOVLW  3C
5BE6:  MOVLB  6
5BE8:  MOVWF  x50
5BEA:  MOVLW  1E
5BEC:  MOVWF  x51
5BEE:  CLRF   x52
5BF0:  MOVLB  0
5BF2:  CALL   1AB4
....................          displayContrasena(Contrasena[3],80,30,0); 
5BF6:  MOVFF  5C8,64F
5BFA:  MOVLW  50
5BFC:  MOVLB  6
5BFE:  MOVWF  x50
5C00:  MOVLW  1E
5C02:  MOVWF  x51
5C04:  CLRF   x52
5C06:  MOVLB  0
5C08:  CALL   1AB4
....................       } 
....................       else 
5C0C:  BRA    5D38
5C0E:  MOVLB  5
....................       { 
....................          if(unidad==2) 
5C10:  MOVF   x98,W
5C12:  SUBLW  02
5C14:  BNZ   5C74
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
5C16:  MOVFF  5C5,64F
5C1A:  MOVLW  14
5C1C:  MOVLB  6
5C1E:  MOVWF  x50
5C20:  MOVLW  1E
5C22:  MOVWF  x51
5C24:  CLRF   x52
5C26:  MOVLB  0
5C28:  CALL   1AB4
....................             displayContrasena(Contrasena[1],40,30,1); 
5C2C:  MOVFF  5C6,64F
5C30:  MOVLW  28
5C32:  MOVLB  6
5C34:  MOVWF  x50
5C36:  MOVLW  1E
5C38:  MOVWF  x51
5C3A:  MOVLW  01
5C3C:  MOVWF  x52
5C3E:  MOVLB  0
5C40:  CALL   1AB4
....................             displayContrasena(Contrasena[2],60,30,0); 
5C44:  MOVFF  5C7,64F
5C48:  MOVLW  3C
5C4A:  MOVLB  6
5C4C:  MOVWF  x50
5C4E:  MOVLW  1E
5C50:  MOVWF  x51
5C52:  CLRF   x52
5C54:  MOVLB  0
5C56:  CALL   1AB4
....................             displayContrasena(Contrasena[3],80,30,0); 
5C5A:  MOVFF  5C8,64F
5C5E:  MOVLW  50
5C60:  MOVLB  6
5C62:  MOVWF  x50
5C64:  MOVLW  1E
5C66:  MOVWF  x51
5C68:  CLRF   x52
5C6A:  MOVLB  0
5C6C:  CALL   1AB4
....................          } 
....................          else 
5C70:  BRA    5D38
5C72:  MOVLB  5
....................          { 
....................             if(unidad==3) 
5C74:  MOVF   x98,W
5C76:  SUBLW  03
5C78:  BNZ   5CD8
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
5C7A:  MOVFF  5C5,64F
5C7E:  MOVLW  14
5C80:  MOVLB  6
5C82:  MOVWF  x50
5C84:  MOVLW  1E
5C86:  MOVWF  x51
5C88:  CLRF   x52
5C8A:  MOVLB  0
5C8C:  CALL   1AB4
....................                displayContrasena(Contrasena[1],40,30,0); 
5C90:  MOVFF  5C6,64F
5C94:  MOVLW  28
5C96:  MOVLB  6
5C98:  MOVWF  x50
5C9A:  MOVLW  1E
5C9C:  MOVWF  x51
5C9E:  CLRF   x52
5CA0:  MOVLB  0
5CA2:  CALL   1AB4
....................                displayContrasena(Contrasena[2],60,30,1); 
5CA6:  MOVFF  5C7,64F
5CAA:  MOVLW  3C
5CAC:  MOVLB  6
5CAE:  MOVWF  x50
5CB0:  MOVLW  1E
5CB2:  MOVWF  x51
5CB4:  MOVLW  01
5CB6:  MOVWF  x52
5CB8:  MOVLB  0
5CBA:  CALL   1AB4
....................                displayContrasena(Contrasena[3],80,30,0); 
5CBE:  MOVFF  5C8,64F
5CC2:  MOVLW  50
5CC4:  MOVLB  6
5CC6:  MOVWF  x50
5CC8:  MOVLW  1E
5CCA:  MOVWF  x51
5CCC:  CLRF   x52
5CCE:  MOVLB  0
5CD0:  CALL   1AB4
....................             } 
....................             else 
5CD4:  BRA    5D38
5CD6:  MOVLB  5
....................             { 
....................                if(unidad==4) 
5CD8:  MOVF   x98,W
5CDA:  SUBLW  04
5CDC:  BNZ   5D3A
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
5CDE:  MOVFF  5C5,64F
5CE2:  MOVLW  14
5CE4:  MOVLB  6
5CE6:  MOVWF  x50
5CE8:  MOVLW  1E
5CEA:  MOVWF  x51
5CEC:  CLRF   x52
5CEE:  MOVLB  0
5CF0:  CALL   1AB4
....................                   displayContrasena(Contrasena[1],40,30,0); 
5CF4:  MOVFF  5C6,64F
5CF8:  MOVLW  28
5CFA:  MOVLB  6
5CFC:  MOVWF  x50
5CFE:  MOVLW  1E
5D00:  MOVWF  x51
5D02:  CLRF   x52
5D04:  MOVLB  0
5D06:  CALL   1AB4
....................                   displayContrasena(Contrasena[2],60,30,0); 
5D0A:  MOVFF  5C7,64F
5D0E:  MOVLW  3C
5D10:  MOVLB  6
5D12:  MOVWF  x50
5D14:  MOVLW  1E
5D16:  MOVWF  x51
5D18:  CLRF   x52
5D1A:  MOVLB  0
5D1C:  CALL   1AB4
....................                   displayContrasena(Contrasena[3],80,30,1); 
5D20:  MOVFF  5C8,64F
5D24:  MOVLW  50
5D26:  MOVLB  6
5D28:  MOVWF  x50
5D2A:  MOVLW  1E
5D2C:  MOVWF  x51
5D2E:  MOVLW  01
5D30:  MOVWF  x52
5D32:  MOVLB  0
5D34:  CALL   1AB4
5D38:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
5D3A:  BTFSS  x86.0
5D3C:  BRA    5DA0
....................       { 
....................          UP=0;delay_ms(30); 
5D3E:  BCF    x86.0
5D40:  MOVLW  1E
5D42:  MOVLB  6
5D44:  MOVWF  x53
5D46:  MOVLB  0
5D48:  CALL   0D48
....................          for(i=1;i<=4;i++) 
5D4C:  MOVLW  01
5D4E:  MOVLB  5
5D50:  MOVWF  x99
5D52:  MOVF   x99,W
5D54:  SUBLW  04
5D56:  BNC   5DA0
....................          { 
....................             if(unidad==i) 
5D58:  MOVF   x99,W
5D5A:  SUBWF  x98,W
5D5C:  BNZ   5D9C
....................             { 
....................                Contrasena[i-1]++; 
5D5E:  MOVLW  01
5D60:  SUBWF  x99,W
5D62:  CLRF   03
5D64:  ADDLW  C5
5D66:  MOVWF  FE9
5D68:  MOVLW  05
5D6A:  ADDWFC 03,W
5D6C:  MOVWF  FEA
5D6E:  INCF   FEF,F
....................                if(Contrasena[i-1]>9)    
5D70:  MOVLW  01
5D72:  SUBWF  x99,W
5D74:  CLRF   03
5D76:  ADDLW  C5
5D78:  MOVWF  FE9
5D7A:  MOVLW  05
5D7C:  ADDWFC 03,W
5D7E:  MOVWF  FEA
5D80:  BTFSC  FEF.7
5D82:  BRA    5D9C
5D84:  MOVF   FEF,W
5D86:  SUBLW  09
5D88:  BC    5D9C
....................                { 
....................                   Contrasena[i-1]=0; 
5D8A:  MOVLW  01
5D8C:  SUBWF  x99,W
5D8E:  CLRF   03
5D90:  ADDLW  C5
5D92:  MOVWF  FE9
5D94:  MOVLW  05
5D96:  ADDWFC 03,W
5D98:  MOVWF  FEA
5D9A:  CLRF   FEF
....................                } 
....................             } 
....................          } 
5D9C:  INCF   x99,F
5D9E:  BRA    5D52
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5DA0:  BTFSS  x86.1
5DA2:  BRA    5E04
....................       { 
....................          DOWN=0;delay_ms(30); 
5DA4:  BCF    x86.1
5DA6:  MOVLW  1E
5DA8:  MOVLB  6
5DAA:  MOVWF  x53
5DAC:  MOVLB  0
5DAE:  CALL   0D48
....................          for(i=1;i<=4;i++) 
5DB2:  MOVLW  01
5DB4:  MOVLB  5
5DB6:  MOVWF  x99
5DB8:  MOVF   x99,W
5DBA:  SUBLW  04
5DBC:  BNC   5E04
....................          { 
....................             if(unidad==i) 
5DBE:  MOVF   x99,W
5DC0:  SUBWF  x98,W
5DC2:  BNZ   5E00
....................             {Contrasena[i-1]--;  
5DC4:  MOVLW  01
5DC6:  SUBWF  x99,W
5DC8:  CLRF   03
5DCA:  ADDLW  C5
5DCC:  MOVWF  FE9
5DCE:  MOVLW  05
5DD0:  ADDWFC 03,W
5DD2:  MOVWF  FEA
5DD4:  DECF   FEF,F
....................             if(Contrasena[i-1]<0) 
5DD6:  MOVLW  01
5DD8:  SUBWF  x99,W
5DDA:  CLRF   03
5DDC:  ADDLW  C5
5DDE:  MOVWF  FE9
5DE0:  MOVLW  05
5DE2:  ADDWFC 03,W
5DE4:  MOVWF  FEA
5DE6:  BTFSC  FEF.7
5DE8:  BRA    5DEC
5DEA:  BRA    5E00
....................             {Contrasena[i-1]=9;} 
5DEC:  MOVLW  01
5DEE:  SUBWF  x99,W
5DF0:  CLRF   03
5DF2:  ADDLW  C5
5DF4:  MOVWF  FE9
5DF6:  MOVLW  05
5DF8:  ADDWFC 03,W
5DFA:  MOVWF  FEA
5DFC:  MOVLW  09
5DFE:  MOVWF  FEF
....................             } 
....................          }   
5E00:  INCF   x99,F
5E02:  BRA    5DB8
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
5E04:  BTFSS  x86.2
5E06:  BRA    5E1A
....................       { 
....................          RIGHT=0;delay_ms(30);unidad++; 
5E08:  BCF    x86.2
5E0A:  MOVLW  1E
5E0C:  MOVLB  6
5E0E:  MOVWF  x53
5E10:  MOVLB  0
5E12:  CALL   0D48
5E16:  MOVLB  5
5E18:  INCF   x98,F
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
5E1A:  BTFSS  x86.3
5E1C:  BRA    5E48
....................       { 
....................          LEFT=0;delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
5E1E:  BCF    x86.3
5E20:  MOVLW  04
5E22:  MOVLB  6
5E24:  MOVWF  x4D
5E26:  MOVLW  AF
5E28:  MOVWF  x53
5E2A:  MOVLB  0
5E2C:  CALL   0D48
5E30:  MOVLB  6
5E32:  DECFSZ x4D,F
5E34:  BRA    5E26
5E36:  MOVLW  01
5E38:  MOVLB  5
5E3A:  MOVWF  x97
5E3C:  MOVLB  6
5E3E:  CLRF   x4E
5E40:  MOVLB  0
5E42:  CALL   1260
5E46:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
5E48:  MOVF   x98,W
5E4A:  SUBLW  04
5E4C:  BTFSC  FD8.0
5E4E:  BRA    5FF4
....................       {glcd_fillScreen(OFF); 
5E50:  MOVLB  6
5E52:  CLRF   x4E
5E54:  MOVLB  0
5E56:  CALL   1260
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
5E5A:  MOVLB  5
5E5C:  MOVF   xC9,W
5E5E:  SUBWF  xC5,W
5E60:  BNZ   5F32
5E62:  MOVF   xCA,W
5E64:  SUBWF  xC6,W
5E66:  BNZ   5F32
5E68:  MOVF   xCB,W
5E6A:  SUBWF  xC7,W
5E6C:  BNZ   5F32
5E6E:  MOVF   xCC,W
5E70:  SUBWF  xC8,W
5E72:  BNZ   5F32
....................          { 
....................             glcd_fillScreen(OFF); 
5E74:  MOVLB  6
5E76:  CLRF   x4E
5E78:  MOVLB  0
5E7A:  CALL   1260
....................             strcpy(Menus.Letra,"Clave"); 
5E7E:  MOVLW  06
5E80:  MOVWF  FEA
5E82:  MOVLW  2D
5E84:  MOVWF  FE9
5E86:  MOVFF  FF2,64D
5E8A:  BCF    FF2.7
5E8C:  MOVLW  00
5E8E:  CALL   07A0
5E92:  TBLRD*-
5E94:  TBLRD*+
5E96:  MOVF   FF5,W
5E98:  MOVWF  FEE
5E9A:  IORLW  00
5E9C:  BNZ   5E94
5E9E:  MOVLB  6
5EA0:  BTFSC  x4D.7
5EA2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
5EA4:  MOVLW  06
5EA6:  MOVWF  x4E
5EA8:  MOVLW  2D
5EAA:  MOVWF  x4D
5EAC:  MOVLW  1E
5EAE:  MOVWF  x4F
5EB0:  CLRF   x50
5EB2:  CLRF   x51
5EB4:  MOVLW  02
5EB6:  MOVWF  x52
5EB8:  MOVLB  0
5EBA:  CALL   188E
....................             strcpy(Menus.Letra,"Correcta"); 
5EBE:  MOVLW  06
5EC0:  MOVWF  FEA
5EC2:  MOVLW  2D
5EC4:  MOVWF  FE9
5EC6:  MOVFF  FF2,64D
5ECA:  BCF    FF2.7
5ECC:  MOVLW  00
5ECE:  CALL   07C0
5ED2:  TBLRD*-
5ED4:  TBLRD*+
5ED6:  MOVF   FF5,W
5ED8:  MOVWF  FEE
5EDA:  IORLW  00
5EDC:  BNZ   5ED4
5EDE:  MOVLB  6
5EE0:  BTFSC  x4D.7
5EE2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
5EE4:  MOVLW  06
5EE6:  MOVWF  x4E
5EE8:  MOVLW  2D
5EEA:  MOVWF  x4D
5EEC:  MOVLW  0F
5EEE:  MOVWF  x4F
5EF0:  MOVLW  1E
5EF2:  MOVWF  x50
5EF4:  CLRF   x51
5EF6:  MOVLW  02
5EF8:  MOVWF  x52
5EFA:  MOVLB  0
5EFC:  CALL   188E
....................             Menu=91;glcd_update();delay_ms(1000); 
5F00:  MOVLW  5B
5F02:  MOVLB  5
5F04:  MOVWF  x97
5F06:  MOVLB  0
5F08:  CALL   12BA
5F0C:  MOVLW  04
5F0E:  MOVLB  6
5F10:  MOVWF  x4D
5F12:  MOVLW  FA
5F14:  MOVWF  x53
5F16:  MOVLB  0
5F18:  CALL   0D48
5F1C:  MOVLB  6
5F1E:  DECFSZ x4D,F
5F20:  BRA    5F12
....................             glcd_fillScreen(OFF);unidad=1; 
5F22:  CLRF   x4E
5F24:  MOVLB  0
5F26:  CALL   1260
5F2A:  MOVLW  01
5F2C:  MOVLB  5
5F2E:  MOVWF  x98
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
5F30:  BRA    5FF4
....................          { 
....................             glcd_fillScreen(OFF); 
5F32:  MOVLB  6
5F34:  CLRF   x4E
5F36:  MOVLB  0
5F38:  CALL   1260
....................             strcpy(Menus.Letra,"Clave"); 
5F3C:  MOVLW  06
5F3E:  MOVWF  FEA
5F40:  MOVLW  2D
5F42:  MOVWF  FE9
5F44:  MOVFF  FF2,64D
5F48:  BCF    FF2.7
5F4A:  MOVLW  00
5F4C:  CALL   07A0
5F50:  TBLRD*-
5F52:  TBLRD*+
5F54:  MOVF   FF5,W
5F56:  MOVWF  FEE
5F58:  IORLW  00
5F5A:  BNZ   5F52
5F5C:  MOVLB  6
5F5E:  BTFSC  x4D.7
5F60:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
5F62:  MOVLW  06
5F64:  MOVWF  x4E
5F66:  MOVLW  2D
5F68:  MOVWF  x4D
5F6A:  MOVLW  1E
5F6C:  MOVWF  x4F
5F6E:  CLRF   x50
5F70:  CLRF   x51
5F72:  MOVLW  02
5F74:  MOVWF  x52
5F76:  MOVLB  0
5F78:  CALL   188E
....................             strcpy(Menus.Letra,"Incorrecta"); 
5F7C:  MOVLW  06
5F7E:  MOVWF  FEA
5F80:  MOVLW  2D
5F82:  MOVWF  FE9
5F84:  MOVFF  FF2,64D
5F88:  BCF    FF2.7
5F8A:  MOVLW  00
5F8C:  CALL   07E4
5F90:  TBLRD*-
5F92:  TBLRD*+
5F94:  MOVF   FF5,W
5F96:  MOVWF  FEE
5F98:  IORLW  00
5F9A:  BNZ   5F92
5F9C:  MOVLB  6
5F9E:  BTFSC  x4D.7
5FA0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
5FA2:  MOVLW  06
5FA4:  MOVWF  x4E
5FA6:  MOVLW  2D
5FA8:  MOVWF  x4D
5FAA:  CLRF   x4F
5FAC:  MOVLW  1E
5FAE:  MOVWF  x50
5FB0:  CLRF   x51
5FB2:  MOVLW  02
5FB4:  MOVWF  x52
5FB6:  MOVLB  0
5FB8:  CALL   188E
....................             Menu=1;glcd_update();delay_ms(1000); 
5FBC:  MOVLW  01
5FBE:  MOVLB  5
5FC0:  MOVWF  x97
5FC2:  MOVLB  0
5FC4:  CALL   12BA
5FC8:  MOVLW  04
5FCA:  MOVLB  6
5FCC:  MOVWF  x4D
5FCE:  MOVLW  FA
5FD0:  MOVWF  x53
5FD2:  MOVLB  0
5FD4:  CALL   0D48
5FD8:  MOVLB  6
5FDA:  DECFSZ x4D,F
5FDC:  BRA    5FCE
....................             glcd_fillScreen(OFF);unidad=1; 
5FDE:  CLRF   x4E
5FE0:  MOVLB  0
5FE2:  CALL   1260
5FE6:  MOVLW  01
5FE8:  MOVLB  5
5FEA:  MOVWF  x98
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
5FEC:  CLRF   xC5
5FEE:  CLRF   xC6
5FF0:  CLRF   xC7
5FF2:  CLRF   xC8
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
5FF4:  MOVF   x97,W
5FF6:  SUBLW  5B
5FF8:  BTFSS  FD8.2
5FFA:  BRA    63D8
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
5FFC:  MOVLW  06
5FFE:  MOVWF  FEA
6000:  MOVLW  2D
6002:  MOVWF  FE9
6004:  MOVFF  FF2,64D
6008:  BCF    FF2.7
600A:  MOVLW  00
600C:  MOVLB  0
600E:  CALL   09D8
6012:  TBLRD*-
6014:  TBLRD*+
6016:  MOVF   FF5,W
6018:  MOVWF  FEE
601A:  IORLW  00
601C:  BNZ   6014
601E:  MOVLB  6
6020:  BTFSC  x4D.7
6022:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
6024:  MOVLW  06
6026:  MOVWF  x4E
6028:  MOVLW  2D
602A:  MOVWF  x4D
602C:  CLRF   x4F
602E:  CLRF   x50
6030:  MOVLW  01
6032:  MOVWF  x51
6034:  MOVLW  02
6036:  MOVWF  x52
6038:  MOVLB  0
603A:  CALL   188E
....................        
....................       if(unidad==1) 
603E:  MOVLB  5
6040:  DECFSZ x98,W
6042:  BRA    60A2
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
6044:  MOVFF  5C9,64F
6048:  MOVLW  14
604A:  MOVLB  6
604C:  MOVWF  x50
604E:  MOVLW  1E
6050:  MOVWF  x51
6052:  MOVLW  01
6054:  MOVWF  x52
6056:  MOVLB  0
6058:  CALL   1AB4
....................          displayContrasena(Password[1],40,30,0); 
605C:  MOVFF  5CA,64F
6060:  MOVLW  28
6062:  MOVLB  6
6064:  MOVWF  x50
6066:  MOVLW  1E
6068:  MOVWF  x51
606A:  CLRF   x52
606C:  MOVLB  0
606E:  CALL   1AB4
....................          displayContrasena(Password[2],60,30,0); 
6072:  MOVFF  5CB,64F
6076:  MOVLW  3C
6078:  MOVLB  6
607A:  MOVWF  x50
607C:  MOVLW  1E
607E:  MOVWF  x51
6080:  CLRF   x52
6082:  MOVLB  0
6084:  CALL   1AB4
....................          displayContrasena(Password[3],80,30,0); 
6088:  MOVFF  5CC,64F
608C:  MOVLW  50
608E:  MOVLB  6
6090:  MOVWF  x50
6092:  MOVLW  1E
6094:  MOVWF  x51
6096:  CLRF   x52
6098:  MOVLB  0
609A:  CALL   1AB4
....................       } 
....................       else 
609E:  BRA    61CA
60A0:  MOVLB  5
....................       { 
....................          if(unidad==2) 
60A2:  MOVF   x98,W
60A4:  SUBLW  02
60A6:  BNZ   6106
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
60A8:  MOVFF  5C9,64F
60AC:  MOVLW  14
60AE:  MOVLB  6
60B0:  MOVWF  x50
60B2:  MOVLW  1E
60B4:  MOVWF  x51
60B6:  CLRF   x52
60B8:  MOVLB  0
60BA:  CALL   1AB4
....................             displayContrasena(Password[1],40,30,1); 
60BE:  MOVFF  5CA,64F
60C2:  MOVLW  28
60C4:  MOVLB  6
60C6:  MOVWF  x50
60C8:  MOVLW  1E
60CA:  MOVWF  x51
60CC:  MOVLW  01
60CE:  MOVWF  x52
60D0:  MOVLB  0
60D2:  CALL   1AB4
....................             displayContrasena(Password[2],60,30,0); 
60D6:  MOVFF  5CB,64F
60DA:  MOVLW  3C
60DC:  MOVLB  6
60DE:  MOVWF  x50
60E0:  MOVLW  1E
60E2:  MOVWF  x51
60E4:  CLRF   x52
60E6:  MOVLB  0
60E8:  CALL   1AB4
....................             displayContrasena(Password[3],80,30,0); 
60EC:  MOVFF  5CC,64F
60F0:  MOVLW  50
60F2:  MOVLB  6
60F4:  MOVWF  x50
60F6:  MOVLW  1E
60F8:  MOVWF  x51
60FA:  CLRF   x52
60FC:  MOVLB  0
60FE:  CALL   1AB4
....................          } 
....................          else 
6102:  BRA    61CA
6104:  MOVLB  5
....................          { 
....................             if(unidad==3) 
6106:  MOVF   x98,W
6108:  SUBLW  03
610A:  BNZ   616A
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
610C:  MOVFF  5C9,64F
6110:  MOVLW  14
6112:  MOVLB  6
6114:  MOVWF  x50
6116:  MOVLW  1E
6118:  MOVWF  x51
611A:  CLRF   x52
611C:  MOVLB  0
611E:  CALL   1AB4
....................                displayContrasena(Password[1],40,30,0); 
6122:  MOVFF  5CA,64F
6126:  MOVLW  28
6128:  MOVLB  6
612A:  MOVWF  x50
612C:  MOVLW  1E
612E:  MOVWF  x51
6130:  CLRF   x52
6132:  MOVLB  0
6134:  CALL   1AB4
....................                displayContrasena(Password[2],60,30,1); 
6138:  MOVFF  5CB,64F
613C:  MOVLW  3C
613E:  MOVLB  6
6140:  MOVWF  x50
6142:  MOVLW  1E
6144:  MOVWF  x51
6146:  MOVLW  01
6148:  MOVWF  x52
614A:  MOVLB  0
614C:  CALL   1AB4
....................                displayContrasena(Password[3],80,30,0); 
6150:  MOVFF  5CC,64F
6154:  MOVLW  50
6156:  MOVLB  6
6158:  MOVWF  x50
615A:  MOVLW  1E
615C:  MOVWF  x51
615E:  CLRF   x52
6160:  MOVLB  0
6162:  CALL   1AB4
....................             } 
....................             else 
6166:  BRA    61CA
6168:  MOVLB  5
....................             { 
....................                if(unidad==4) 
616A:  MOVF   x98,W
616C:  SUBLW  04
616E:  BNZ   61CC
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
6170:  MOVFF  5C9,64F
6174:  MOVLW  14
6176:  MOVLB  6
6178:  MOVWF  x50
617A:  MOVLW  1E
617C:  MOVWF  x51
617E:  CLRF   x52
6180:  MOVLB  0
6182:  CALL   1AB4
....................                   displayContrasena(Password[1],40,30,0); 
6186:  MOVFF  5CA,64F
618A:  MOVLW  28
618C:  MOVLB  6
618E:  MOVWF  x50
6190:  MOVLW  1E
6192:  MOVWF  x51
6194:  CLRF   x52
6196:  MOVLB  0
6198:  CALL   1AB4
....................                   displayContrasena(Password[2],60,30,0); 
619C:  MOVFF  5CB,64F
61A0:  MOVLW  3C
61A2:  MOVLB  6
61A4:  MOVWF  x50
61A6:  MOVLW  1E
61A8:  MOVWF  x51
61AA:  CLRF   x52
61AC:  MOVLB  0
61AE:  CALL   1AB4
....................                   displayContrasena(Password[3],80,30,1); 
61B2:  MOVFF  5CC,64F
61B6:  MOVLW  50
61B8:  MOVLB  6
61BA:  MOVWF  x50
61BC:  MOVLW  1E
61BE:  MOVWF  x51
61C0:  MOVLW  01
61C2:  MOVWF  x52
61C4:  MOVLB  0
61C6:  CALL   1AB4
61CA:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
61CC:  BTFSS  x86.0
61CE:  BRA    6232
....................       { 
....................          UP=0;delay_ms(30); 
61D0:  BCF    x86.0
61D2:  MOVLW  1E
61D4:  MOVLB  6
61D6:  MOVWF  x53
61D8:  MOVLB  0
61DA:  CALL   0D48
....................          for(i=1;i<=4;i++) 
61DE:  MOVLW  01
61E0:  MOVLB  5
61E2:  MOVWF  x99
61E4:  MOVF   x99,W
61E6:  SUBLW  04
61E8:  BNC   6232
....................          { 
....................             if(unidad==i) 
61EA:  MOVF   x99,W
61EC:  SUBWF  x98,W
61EE:  BNZ   622E
....................             { 
....................                Password[i-1]++; 
61F0:  MOVLW  01
61F2:  SUBWF  x99,W
61F4:  CLRF   03
61F6:  ADDLW  C9
61F8:  MOVWF  FE9
61FA:  MOVLW  05
61FC:  ADDWFC 03,W
61FE:  MOVWF  FEA
6200:  INCF   FEF,F
....................                if(Password[i-1]>9)    
6202:  MOVLW  01
6204:  SUBWF  x99,W
6206:  CLRF   03
6208:  ADDLW  C9
620A:  MOVWF  FE9
620C:  MOVLW  05
620E:  ADDWFC 03,W
6210:  MOVWF  FEA
6212:  BTFSC  FEF.7
6214:  BRA    622E
6216:  MOVF   FEF,W
6218:  SUBLW  09
621A:  BC    622E
....................                { 
....................                   Password[i-1]=0; 
621C:  MOVLW  01
621E:  SUBWF  x99,W
6220:  CLRF   03
6222:  ADDLW  C9
6224:  MOVWF  FE9
6226:  MOVLW  05
6228:  ADDWFC 03,W
622A:  MOVWF  FEA
622C:  CLRF   FEF
....................                } 
....................             } 
....................          } 
622E:  INCF   x99,F
6230:  BRA    61E4
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
6232:  BTFSS  x86.1
6234:  BRA    6296
....................       { 
....................          DOWN=0;delay_ms(30); 
6236:  BCF    x86.1
6238:  MOVLW  1E
623A:  MOVLB  6
623C:  MOVWF  x53
623E:  MOVLB  0
6240:  CALL   0D48
....................          for(i=1;i<=4;i++) 
6244:  MOVLW  01
6246:  MOVLB  5
6248:  MOVWF  x99
624A:  MOVF   x99,W
624C:  SUBLW  04
624E:  BNC   6296
....................             { 
....................                if(unidad==i) 
6250:  MOVF   x99,W
6252:  SUBWF  x98,W
6254:  BNZ   6292
....................                { 
....................                   Password[i-1]--; 
6256:  MOVLW  01
6258:  SUBWF  x99,W
625A:  CLRF   03
625C:  ADDLW  C9
625E:  MOVWF  FE9
6260:  MOVLW  05
6262:  ADDWFC 03,W
6264:  MOVWF  FEA
6266:  DECF   FEF,F
....................                   if(Password[i-1]<0) 
6268:  MOVLW  01
626A:  SUBWF  x99,W
626C:  CLRF   03
626E:  ADDLW  C9
6270:  MOVWF  FE9
6272:  MOVLW  05
6274:  ADDWFC 03,W
6276:  MOVWF  FEA
6278:  BTFSC  FEF.7
627A:  BRA    627E
627C:  BRA    6292
....................                   { 
....................                      Password[i-1]=9; 
627E:  MOVLW  01
6280:  SUBWF  x99,W
6282:  CLRF   03
6284:  ADDLW  C9
6286:  MOVWF  FE9
6288:  MOVLW  05
628A:  ADDWFC 03,W
628C:  MOVWF  FEA
628E:  MOVLW  09
6290:  MOVWF  FEF
....................                   } 
....................                } 
....................             }        
6292:  INCF   x99,F
6294:  BRA    624A
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
6296:  BTFSS  x86.2
6298:  BRA    62AC
....................       { 
....................          RIGHT=0;delay_ms(30);unidad++; 
629A:  BCF    x86.2
629C:  MOVLW  1E
629E:  MOVLB  6
62A0:  MOVWF  x53
62A2:  MOVLB  0
62A4:  CALL   0D48
62A8:  MOVLB  5
62AA:  INCF   x98,F
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
62AC:  BTFSS  x86.3
62AE:  BRA    62DA
....................       { 
....................          LEFT=0;delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
62B0:  BCF    x86.3
62B2:  MOVLW  04
62B4:  MOVLB  6
62B6:  MOVWF  x4D
62B8:  MOVLW  AF
62BA:  MOVWF  x53
62BC:  MOVLB  0
62BE:  CALL   0D48
62C2:  MOVLB  6
62C4:  DECFSZ x4D,F
62C6:  BRA    62B8
62C8:  MOVLW  01
62CA:  MOVLB  5
62CC:  MOVWF  x97
62CE:  MOVLB  6
62D0:  CLRF   x4E
62D2:  MOVLB  0
62D4:  CALL   1260
62D8:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
62DA:  MOVF   x98,W
62DC:  SUBLW  04
62DE:  BTFSC  FD8.0
62E0:  BRA    63D8
....................       { 
....................          Opcion=1;unidad=1; 
62E2:  MOVLW  01
62E4:  MOVWF  x9C
62E6:  MOVWF  x98
....................          write_eeprom(10,Password[0]); 
62E8:  MOVLW  0A
62EA:  MOVWF  FA9
62EC:  MOVFF  5C9,FA8
62F0:  BCF    FA6.6
62F2:  BCF    FA6.7
62F4:  BSF    FA6.2
62F6:  MOVF   FF2,W
62F8:  MOVWF  00
62FA:  BCF    FF2.7
62FC:  MOVLB  F
62FE:  MOVLW  55
6300:  MOVWF  FA7
6302:  MOVLW  AA
6304:  MOVWF  FA7
6306:  BSF    FA6.1
6308:  BTFSC  FA6.1
630A:  BRA    6308
630C:  BCF    FA6.2
630E:  MOVF   00,W
6310:  IORWF  FF2,F
....................          delay_ms(50);    
6312:  MOVLW  32
6314:  MOVLB  6
6316:  MOVWF  x53
6318:  MOVLB  0
631A:  CALL   0D48
....................          write_eeprom(11,Password[1]); 
631E:  MOVLW  0B
6320:  MOVWF  FA9
6322:  MOVFF  5CA,FA8
6326:  BCF    FA6.6
6328:  BCF    FA6.7
632A:  BSF    FA6.2
632C:  MOVF   FF2,W
632E:  MOVWF  00
6330:  BCF    FF2.7
6332:  MOVLB  F
6334:  MOVLW  55
6336:  MOVWF  FA7
6338:  MOVLW  AA
633A:  MOVWF  FA7
633C:  BSF    FA6.1
633E:  BTFSC  FA6.1
6340:  BRA    633E
6342:  BCF    FA6.2
6344:  MOVF   00,W
6346:  IORWF  FF2,F
....................          delay_ms(50);    
6348:  MOVLW  32
634A:  MOVLB  6
634C:  MOVWF  x53
634E:  MOVLB  0
6350:  CALL   0D48
....................          write_eeprom(12,Password[2]); 
6354:  MOVLW  0C
6356:  MOVWF  FA9
6358:  MOVFF  5CB,FA8
635C:  BCF    FA6.6
635E:  BCF    FA6.7
6360:  BSF    FA6.2
6362:  MOVF   FF2,W
6364:  MOVWF  00
6366:  BCF    FF2.7
6368:  MOVLB  F
636A:  MOVLW  55
636C:  MOVWF  FA7
636E:  MOVLW  AA
6370:  MOVWF  FA7
6372:  BSF    FA6.1
6374:  BTFSC  FA6.1
6376:  BRA    6374
6378:  BCF    FA6.2
637A:  MOVF   00,W
637C:  IORWF  FF2,F
....................          delay_ms(50);    
637E:  MOVLW  32
6380:  MOVLB  6
6382:  MOVWF  x53
6384:  MOVLB  0
6386:  CALL   0D48
....................          write_eeprom(13,Password[3]); 
638A:  MOVLW  0D
638C:  MOVWF  FA9
638E:  MOVFF  5CC,FA8
6392:  BCF    FA6.6
6394:  BCF    FA6.7
6396:  BSF    FA6.2
6398:  MOVF   FF2,W
639A:  MOVWF  00
639C:  BCF    FF2.7
639E:  MOVLB  F
63A0:  MOVLW  55
63A2:  MOVWF  FA7
63A4:  MOVLW  AA
63A6:  MOVWF  FA7
63A8:  BSF    FA6.1
63AA:  BTFSC  FA6.1
63AC:  BRA    63AA
63AE:  BCF    FA6.2
63B0:  MOVF   00,W
63B2:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
63B4:  MOVLW  04
63B6:  MOVLB  6
63B8:  MOVWF  x4D
63BA:  MOVLW  FA
63BC:  MOVWF  x53
63BE:  MOVLB  0
63C0:  CALL   0D48
63C4:  MOVLB  6
63C6:  DECFSZ x4D,F
63C8:  BRA    63BA
63CA:  CLRF   x4E
63CC:  MOVLB  0
63CE:  CALL   1260
63D2:  MOVLW  01
63D4:  MOVLB  5
63D6:  MOVWF  x97
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==20){ //Menu de Funcionamiento 
63D8:  MOVF   x97,W
63DA:  SUBLW  14
63DC:  BTFSS  FD8.2
63DE:  GOTO   6E8C
....................        
....................       // Muestra imagen de fondo en Display GLCD 
....................       glcd_imagen(5); 
63E2:  MOVLW  05
63E4:  MOVLB  6
63E6:  MOVWF  x4D
63E8:  MOVLB  0
63EA:  GOTO   2B96
....................  
....................       if(UP && DOWN)//Si oprime hacia abajo 
63EE:  MOVLB  5
63F0:  BTFSS  x86.0
63F2:  BRA    640C
63F4:  BTFSS  x86.1
63F6:  BRA    640C
....................       { 
....................          glcd_init(ON);flag_display=!flag_display; 
63F8:  MOVLW  01
63FA:  MOVLB  6
63FC:  MOVWF  x4D
63FE:  MOVLB  0
6400:  CALL   1372
6404:  MOVLB  5
6406:  BTG    x94.0
....................          UP=0;DOWN=0; 
6408:  BCF    x86.0
640A:  BCF    x86.1
....................       } 
....................  
....................       if(!TERM && !DOOR) 
640C:  BSF    F92.3
640E:  BTFSC  F80.3
6410:  BRA    6686
6412:  BSF    F92.4
6414:  BTFSC  F80.4
6416:  BRA    6686
....................       { 
....................          if(Enfria==1) 
6418:  DECFSZ x91,W
641A:  BRA    6556
....................          { 
....................             Velocidades(3);             
641C:  MOVLW  03
641E:  MOVLB  6
6420:  MOVWF  x4D
6422:  MOVLB  0
6424:  CALL   0D72
....................             if(Temperatura<=Setpoint+1.0) 
6428:  BCF    FD8.1
642A:  MOVFF  610,655
642E:  MOVFF  60F,654
6432:  MOVFF  60E,653
6436:  MOVFF  60D,652
643A:  MOVLB  6
643C:  CLRF   x59
643E:  CLRF   x58
6440:  CLRF   x57
6442:  MOVLW  7F
6444:  MOVWF  x56
6446:  MOVLB  0
6448:  CALL   0F2E
644C:  MOVFF  604,650
6450:  MOVFF  603,64F
6454:  MOVFF  602,64E
6458:  MOVFF  601,64D
645C:  MOVFF  03,654
6460:  MOVFF  02,653
6464:  MOVFF  01,652
6468:  MOVFF  00,651
646C:  CALL   11A6
6470:  BC    6474
6472:  BNZ   64E6
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6474:  MOVLB  6
6476:  CLRF   x62
6478:  MOVLW  37
647A:  MOVWF  x63
647C:  MOVLW  7F
647E:  MOVWF  x64
6480:  MOVLW  3F
6482:  MOVWF  x65
6484:  MOVLW  01
6486:  MOVWF  x66
6488:  CLRF   x67
648A:  MOVLB  0
648C:  CALL   17CC
....................                strcpy(Menus.Letra,"Status:Controlando"); 
6490:  MOVLW  06
6492:  MOVWF  FEA
6494:  MOVLW  2D
6496:  MOVWF  FE9
6498:  MOVFF  FF2,64D
649C:  BCF    FF2.7
649E:  MOVLW  00
64A0:  CALL   09FE
64A4:  TBLRD*-
64A6:  TBLRD*+
64A8:  MOVF   FF5,W
64AA:  MOVWF  FEE
64AC:  IORLW  00
64AE:  BNZ   64A6
64B0:  MOVLB  6
64B2:  BTFSC  x4D.7
64B4:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
64B6:  MOVLW  06
64B8:  MOVWF  x4E
64BA:  MOVLW  2D
64BC:  MOVWF  x4D
64BE:  CLRF   x4F
64C0:  MOVLW  37
64C2:  MOVWF  x50
64C4:  MOVLW  02
64C6:  MOVWF  x51
64C8:  MOVLW  01
64CA:  MOVWF  x52
64CC:  MOVLB  0
64CE:  CALL   188E
....................                tiempo_esterilizacion=1; 
64D2:  MOVLW  01
64D4:  MOVLB  5
64D6:  MOVWF  x9D
....................                Controla(); 
64D8:  MOVLB  0
64DA:  CALL   2CB6
....................                flag_tiempocalentamiento=0; 
64DE:  MOVLB  5
64E0:  BCF    x87.7
....................             } 
....................             else 
64E2:  BRA    6554
64E4:  MOVLB  0
....................             { 
....................                flag_tiempocalentamiento=0; 
64E6:  MOVLB  5
64E8:  BCF    x87.7
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
64EA:  MOVLB  6
64EC:  CLRF   x62
64EE:  MOVLW  37
64F0:  MOVWF  x63
64F2:  MOVLW  7F
64F4:  MOVWF  x64
64F6:  MOVLW  3F
64F8:  MOVWF  x65
64FA:  MOVLW  01
64FC:  MOVWF  x66
64FE:  CLRF   x67
6500:  MOVLB  0
6502:  CALL   17CC
....................                strcpy(Menus.Letra,"Status:Enfriando"); 
6506:  MOVLW  06
6508:  MOVWF  FEA
650A:  MOVLW  2D
650C:  MOVWF  FE9
650E:  MOVFF  FF2,64D
6512:  BCF    FF2.7
6514:  MOVLW  00
6516:  CALL   0A2C
651A:  TBLRD*-
651C:  TBLRD*+
651E:  MOVF   FF5,W
6520:  MOVWF  FEE
6522:  IORLW  00
6524:  BNZ   651C
6526:  MOVLB  6
6528:  BTFSC  x4D.7
652A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
652C:  MOVLW  06
652E:  MOVWF  x4E
6530:  MOVLW  2D
6532:  MOVWF  x4D
6534:  CLRF   x4F
6536:  MOVLW  37
6538:  MOVWF  x50
653A:  MOVLW  02
653C:  MOVWF  x51
653E:  MOVLW  01
6540:  MOVWF  x52
6542:  MOVLB  0
6544:  CALL   188E
....................                tiempo_esterilizacion=0; 
6548:  MOVLB  5
654A:  CLRF   x9D
....................                Controla(); 
654C:  MOVLB  0
654E:  CALL   2CB6
6552:  MOVLB  5
....................             } 
....................          } 
....................          else 
6554:  BRA    6686
....................          {   
....................             Rele1_on; 
6556:  BSF    F8B.0
6558:  BCF    F94.0
....................             if(Temperatura>=Setpoint-1.0) 
655A:  BSF    FD8.1
655C:  MOVFF  610,655
6560:  MOVFF  60F,654
6564:  MOVFF  60E,653
6568:  MOVFF  60D,652
656C:  MOVLB  6
656E:  CLRF   x59
6570:  CLRF   x58
6572:  CLRF   x57
6574:  MOVLW  7F
6576:  MOVWF  x56
6578:  MOVLB  0
657A:  CALL   0F2E
657E:  MOVFF  03,650
6582:  MOVFF  02,64F
6586:  MOVFF  01,64E
658A:  MOVFF  00,64D
658E:  MOVFF  604,654
6592:  MOVFF  603,653
6596:  MOVFF  602,652
659A:  MOVFF  601,651
659E:  CALL   11A6
65A2:  BC    65A6
65A4:  BNZ   6618
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
65A6:  MOVLB  6
65A8:  CLRF   x62
65AA:  MOVLW  37
65AC:  MOVWF  x63
65AE:  MOVLW  7F
65B0:  MOVWF  x64
65B2:  MOVLW  3F
65B4:  MOVWF  x65
65B6:  MOVLW  01
65B8:  MOVWF  x66
65BA:  CLRF   x67
65BC:  MOVLB  0
65BE:  CALL   17CC
....................                strcpy(Menus.Letra,"Status:Controlando"); 
65C2:  MOVLW  06
65C4:  MOVWF  FEA
65C6:  MOVLW  2D
65C8:  MOVWF  FE9
65CA:  MOVFF  FF2,64D
65CE:  BCF    FF2.7
65D0:  MOVLW  00
65D2:  CALL   09FE
65D6:  TBLRD*-
65D8:  TBLRD*+
65DA:  MOVF   FF5,W
65DC:  MOVWF  FEE
65DE:  IORLW  00
65E0:  BNZ   65D8
65E2:  MOVLB  6
65E4:  BTFSC  x4D.7
65E6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
65E8:  MOVLW  06
65EA:  MOVWF  x4E
65EC:  MOVLW  2D
65EE:  MOVWF  x4D
65F0:  CLRF   x4F
65F2:  MOVLW  37
65F4:  MOVWF  x50
65F6:  MOVLW  02
65F8:  MOVWF  x51
65FA:  MOVLW  01
65FC:  MOVWF  x52
65FE:  MOVLB  0
6600:  CALL   188E
....................                tiempo_esterilizacion=1; 
6604:  MOVLW  01
6606:  MOVLB  5
6608:  MOVWF  x9D
....................                Controla(); 
660A:  MOVLB  0
660C:  CALL   2CB6
....................                flag_tiempocalentamiento=0; 
6610:  MOVLB  5
6612:  BCF    x87.7
....................             } 
....................             else 
6614:  BRA    6686
6616:  MOVLB  0
....................             { 
....................                flag_tiempocalentamiento=1; 
6618:  MOVLB  5
661A:  BSF    x87.7
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
661C:  MOVLB  6
661E:  CLRF   x62
6620:  MOVLW  37
6622:  MOVWF  x63
6624:  MOVLW  7F
6626:  MOVWF  x64
6628:  MOVLW  3F
662A:  MOVWF  x65
662C:  MOVLW  01
662E:  MOVWF  x66
6630:  CLRF   x67
6632:  MOVLB  0
6634:  CALL   17CC
....................                strcpy(Menus.Letra,"Status:Calentando"); 
6638:  MOVLW  06
663A:  MOVWF  FEA
663C:  MOVLW  2D
663E:  MOVWF  FE9
6640:  MOVFF  FF2,64D
6644:  BCF    FF2.7
6646:  MOVLW  00
6648:  CALL   0A58
664C:  TBLRD*-
664E:  TBLRD*+
6650:  MOVF   FF5,W
6652:  MOVWF  FEE
6654:  IORLW  00
6656:  BNZ   664E
6658:  MOVLB  6
665A:  BTFSC  x4D.7
665C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
665E:  MOVLW  06
6660:  MOVWF  x4E
6662:  MOVLW  2D
6664:  MOVWF  x4D
6666:  CLRF   x4F
6668:  MOVLW  37
666A:  MOVWF  x50
666C:  MOVLW  02
666E:  MOVWF  x51
6670:  MOVLW  01
6672:  MOVWF  x52
6674:  MOVLB  0
6676:  CALL   188E
....................                tiempo_esterilizacion=0; 
667A:  MOVLB  5
667C:  CLRF   x9D
....................                Controla(); 
667E:  MOVLB  0
6680:  CALL   2CB6
6684:  MOVLB  5
....................             } 
....................          } 
....................       } 
....................        
....................       /*if(Pausa==1 && !TERM && !DOOR) 
....................       { 
....................          Velocidades(0); 
....................          flag_tiempocalentamiento=0; 
....................          strcpy(Menus.Letra,"Status:Pausado"); 
....................          displayMenu(Menus.Letra,0,55,2,1); 
....................          tiempo_esterilizacion=0; 
....................          SSR_off; 
....................          //Peltierp_off; 
....................          //Peltiern_off; 
....................          Tpulso=0.0; 
....................       }*/ 
....................        
....................       if(DOOR) 
6686:  BSF    F92.4
6688:  BTFSS  F80.4
668A:  BRA    6776
....................       { 
....................          Controlando=0; 
668C:  CLRF   x92
....................          Rele1_off; 
668E:  BCF    F8B.0
6690:  BCF    F94.0
....................          Velocidades(0); 
6692:  MOVLB  6
6694:  CLRF   x4D
6696:  MOVLB  0
6698:  CALL   0D72
....................          flag_tiempocalentamiento=0; 
669C:  MOVLB  5
669E:  BCF    x87.7
....................          if(Enfria==0){ 
66A0:  MOVF   x91,F
66A2:  BNZ   66FA
....................             Ganancia=2*(Setpoint/44.5); 
66A4:  MOVFF  610,651
66A8:  MOVFF  60F,650
66AC:  MOVFF  60E,64F
66B0:  MOVFF  60D,64E
66B4:  MOVLB  6
66B6:  CLRF   x55
66B8:  CLRF   x54
66BA:  MOVLW  32
66BC:  MOVWF  x53
66BE:  MOVLW  84
66C0:  MOVWF  x52
66C2:  MOVLB  0
66C4:  CALL   0DD0
66C8:  MOVLB  6
66CA:  CLRF   x70
66CC:  CLRF   x6F
66CE:  CLRF   x6E
66D0:  MOVLW  80
66D2:  MOVWF  x6D
66D4:  MOVFF  03,674
66D8:  MOVFF  02,673
66DC:  MOVFF  01,672
66E0:  MOVFF  00,671
66E4:  MOVLB  0
66E6:  CALL   1BC4
66EA:  MOVFF  03,5F4
66EE:  MOVFF  02,5F3
66F2:  MOVFF  01,5F2
66F6:  MOVFF  00,5F1
....................          } 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
66FA:  MOVLB  6
66FC:  CLRF   x62
66FE:  MOVLW  37
6700:  MOVWF  x63
6702:  MOVLW  7F
6704:  MOVWF  x64
6706:  MOVLW  3F
6708:  MOVWF  x65
670A:  MOVLW  01
670C:  MOVWF  x66
670E:  CLRF   x67
6710:  MOVLB  0
6712:  CALL   17CC
....................          tiempo_esterilizacion=0; 
6716:  MOVLB  5
6718:  CLRF   x9D
....................          SSR_off; 
671A:  BCF    F8B.2
671C:  BCF    F94.2
....................          Tpulso=0.0; 
671E:  CLRF   xE0
6720:  CLRF   xDF
6722:  CLRF   xDE
6724:  CLRF   xDD
....................          Rele2_off; 
6726:  BCF    F8B.6
6728:  BCF    F94.6
....................          flag_clear2=1; 
672A:  BSF    x87.5
....................          flag_ganancia=0; 
672C:  CLRF   x8E
....................          strcpy(Menus.Letra,"Status:Puerta Abierta"); 
672E:  MOVLW  06
6730:  MOVWF  FEA
6732:  MOVLW  2D
6734:  MOVWF  FE9
6736:  MOVFF  FF2,64D
673A:  BCF    FF2.7
673C:  MOVLW  00
673E:  MOVLB  0
6740:  CALL   0A84
6744:  TBLRD*-
6746:  TBLRD*+
6748:  MOVF   FF5,W
674A:  MOVWF  FEE
674C:  IORLW  00
674E:  BNZ   6746
6750:  MOVLB  6
6752:  BTFSC  x4D.7
6754:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
6756:  MOVLW  06
6758:  MOVWF  x4E
675A:  MOVLW  2D
675C:  MOVWF  x4D
675E:  CLRF   x4F
6760:  MOVLW  37
6762:  MOVWF  x50
6764:  MOVLW  02
6766:  MOVWF  x51
6768:  MOVLW  01
676A:  MOVWF  x52
676C:  MOVLB  0
676E:  CALL   188E
....................       } 
....................       else 
6772:  BRA    679C
6774:  MOVLB  5
....................       { 
....................          if(flag_clear2==1) 
6776:  BTFSS  x87.5
6778:  BRA    679A
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
677A:  MOVLB  6
677C:  CLRF   x62
677E:  MOVLW  37
6780:  MOVWF  x63
6782:  MOVLW  7F
6784:  MOVWF  x64
6786:  MOVLW  3F
6788:  MOVWF  x65
678A:  MOVLW  01
678C:  MOVWF  x66
678E:  CLRF   x67
6790:  MOVLB  0
6792:  CALL   17CC
....................             flag_clear2=0; 
6796:  MOVLB  5
6798:  BCF    x87.5
679A:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(TERM) 
679C:  BSF    F92.3
679E:  BTFSS  F80.3
67A0:  BRA    686A
....................       { 
....................          Controlando=0; 
67A2:  MOVLB  5
67A4:  CLRF   x92
....................          Rele1_off; 
67A6:  BCF    F8B.0
67A8:  BCF    F94.0
....................          Velocidades(0); 
67AA:  MOVLB  6
67AC:  CLRF   x4D
67AE:  MOVLB  0
67B0:  CALL   0D72
....................          flag_tiempocalentamiento=0; 
67B4:  MOVLB  5
67B6:  BCF    x87.7
....................          if(flag_clear3==0) 
67B8:  BTFSC  x87.6
67BA:  BRA    67F0
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
67BC:  MOVLB  6
67BE:  CLRF   x62
67C0:  MOVLW  37
67C2:  MOVWF  x63
67C4:  MOVLW  7F
67C6:  MOVWF  x64
67C8:  MOVLW  3F
67CA:  MOVWF  x65
67CC:  MOVLW  01
67CE:  MOVWF  x66
67D0:  CLRF   x67
67D2:  MOVLB  0
67D4:  CALL   17CC
....................             tiempo_esterilizacion=0; 
67D8:  MOVLB  5
67DA:  CLRF   x9D
....................             SSR_off; 
67DC:  BCF    F8B.2
67DE:  BCF    F94.2
....................             Tpulso=0.0; 
67E0:  CLRF   xE0
67E2:  CLRF   xDF
67E4:  CLRF   xDE
67E6:  CLRF   xDD
....................             Rele2_off; 
67E8:  BCF    F8B.6
67EA:  BCF    F94.6
....................             flag_clear3=1; 
67EC:  BSF    x87.6
....................             flag_ganancia=0; 
67EE:  CLRF   x8E
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 01"); 
67F0:  MOVLW  06
67F2:  MOVWF  FEA
67F4:  MOVLW  2D
67F6:  MOVWF  FE9
67F8:  MOVFF  FF2,64D
67FC:  BCF    FF2.7
67FE:  MOVLW  00
6800:  MOVLB  0
6802:  CALL   0AB4
6806:  TBLRD*-
6808:  TBLRD*+
680A:  MOVF   FF5,W
680C:  MOVWF  FEE
680E:  IORLW  00
6810:  BNZ   6808
6812:  MOVLB  6
6814:  BTFSC  x4D.7
6816:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
6818:  MOVLW  06
681A:  MOVWF  x4E
681C:  MOVLW  2D
681E:  MOVWF  x4D
6820:  CLRF   x4F
6822:  MOVLW  37
6824:  MOVWF  x50
6826:  MOVLW  02
6828:  MOVWF  x51
682A:  MOVLW  01
682C:  MOVWF  x52
682E:  MOVLB  0
6830:  CALL   188E
....................           
....................          Buzzer_on; 
6834:  BSF    F8A.7
6836:  BCF    F93.7
....................          delay_ms(1000); 
6838:  MOVLW  04
683A:  MOVLB  6
683C:  MOVWF  x4D
683E:  MOVLW  FA
6840:  MOVWF  x53
6842:  MOVLB  0
6844:  CALL   0D48
6848:  MOVLB  6
684A:  DECFSZ x4D,F
684C:  BRA    683E
....................          Buzzer_off; 
684E:  BCF    F8A.7
6850:  BCF    F93.7
....................          delay_ms(1000); 
6852:  MOVLW  04
6854:  MOVWF  x4D
6856:  MOVLW  FA
6858:  MOVWF  x53
685A:  MOVLB  0
685C:  CALL   0D48
6860:  MOVLB  6
6862:  DECFSZ x4D,F
6864:  BRA    6856
....................       } 
....................       else 
6866:  BRA    6890
6868:  MOVLB  0
....................       { 
....................          if(flag_clear3==1) 
686A:  MOVLB  5
686C:  BTFSS  x87.6
686E:  BRA    6890
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
6870:  MOVLB  6
6872:  CLRF   x62
6874:  MOVLW  37
6876:  MOVWF  x63
6878:  MOVLW  7F
687A:  MOVWF  x64
687C:  MOVLW  3F
687E:  MOVWF  x65
6880:  MOVLW  01
6882:  MOVWF  x66
6884:  CLRF   x67
6886:  MOVLB  0
6888:  CALL   17CC
....................             flag_clear3=0; 
688C:  MOVLB  5
688E:  BCF    x87.6
....................          } 
....................       }   
....................        
....................       /* 
....................       if(UP)//Si oprime hacia arriba 
....................       { 
....................          Velocidad++; 
....................          UP=0; 
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
....................       {   
....................          Velocidad--; 
....................          DOWN=0; 
....................       }*/ 
....................        
....................       if(Velocidad>3) 
6890:  MOVLB  5
6892:  MOVF   x8F,W
6894:  SUBLW  03
6896:  BC    689C
....................          Velocidad=1; 
6898:  MOVLW  01
689A:  MOVWF  x8F
....................        
....................       if(Velocidad<1) 
689C:  MOVF   x8F,F
689E:  BNZ   68A4
....................          Velocidad=3;       
68A0:  MOVLW  03
68A2:  MOVWF  x8F
....................       /* 
....................       if(RIGHT)//Si oprime SET 
....................       {   
....................          if(Pausa!=2) 
....................          { 
....................             if(Pausa==0) 
....................             { 
....................                delay_ms(200);Pausa=1; 
....................             } 
....................             else 
....................             { 
....................                delay_ms(200);Pausa=0; 
....................             } 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
....................          } 
....................          RIGHT=0; 
....................       }*/ 
....................        
....................          
....................       if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
68A4:  BTFSS  x87.2
68A6:  BRA    6E8C
....................       {                  
....................           
....................          Lectura=0; 
68A8:  BCF    x87.2
....................          Potencia=(100.0/Tciclo)*Tpulso; 
68AA:  MOVLB  6
68AC:  CLRF   x51
68AE:  CLRF   x50
68B0:  MOVLW  48
68B2:  MOVWF  x4F
68B4:  MOVLW  85
68B6:  MOVWF  x4E
68B8:  MOVFF  5DC,655
68BC:  MOVFF  5DB,654
68C0:  MOVFF  5DA,653
68C4:  MOVFF  5D9,652
68C8:  MOVLB  0
68CA:  CALL   0DD0
68CE:  MOVFF  00,64D
68D2:  MOVFF  01,64E
68D6:  MOVFF  02,64F
68DA:  MOVFF  03,650
68DE:  MOVFF  03,670
68E2:  MOVFF  02,66F
68E6:  MOVFF  01,66E
68EA:  MOVFF  00,66D
68EE:  MOVFF  5E0,674
68F2:  MOVFF  5DF,673
68F6:  MOVFF  5DE,672
68FA:  MOVFF  5DD,671
68FE:  CALL   1BC4
6902:  MOVFF  03,5B4
6906:  MOVFF  02,5B3
690A:  MOVFF  01,5B2
690E:  MOVFF  00,5B1
....................           
....................  //----------------Muestra Temperatura-------------------------- 
....................          if(V0<180 || V0>1000) 
6912:  MOVFF  5D0,650
6916:  MOVFF  5CF,64F
691A:  MOVFF  5CE,64E
691E:  MOVFF  5CD,64D
6922:  MOVLB  6
6924:  CLRF   x54
6926:  CLRF   x53
6928:  MOVLW  34
692A:  MOVWF  x52
692C:  MOVLW  86
692E:  MOVWF  x51
6930:  MOVLB  0
6932:  CALL   11A6
6936:  BC    695E
6938:  MOVLB  6
693A:  CLRF   x50
693C:  CLRF   x4F
693E:  MOVLW  7A
6940:  MOVWF  x4E
6942:  MOVLW  88
6944:  MOVWF  x4D
6946:  MOVFF  5D0,654
694A:  MOVFF  5CF,653
694E:  MOVFF  5CE,652
6952:  MOVFF  5CD,651
6956:  MOVLB  0
6958:  CALL   11A6
695C:  BNC   69C6
....................          { 
....................             glcd_rect(15, 29, 69, 45, YES, OFF); 
695E:  MOVLW  0F
6960:  MOVLB  6
6962:  MOVWF  x62
6964:  MOVLW  1D
6966:  MOVWF  x63
6968:  MOVLW  45
696A:  MOVWF  x64
696C:  MOVLW  2D
696E:  MOVWF  x65
6970:  MOVLW  01
6972:  MOVWF  x66
6974:  CLRF   x67
6976:  MOVLB  0
6978:  CALL   17CC
....................             strcpy(Menus.Letra,"-----");displayMenu(Menus.Letra,15,29,2,2); 
697C:  MOVLW  06
697E:  MOVWF  FEA
6980:  MOVLW  2D
6982:  MOVWF  FE9
6984:  MOVFF  FF2,64D
6988:  BCF    FF2.7
698A:  MOVLW  00
698C:  CALL   0AE0
6990:  TBLRD*-
6992:  TBLRD*+
6994:  MOVF   FF5,W
6996:  MOVWF  FEE
6998:  IORLW  00
699A:  BNZ   6992
699C:  MOVLB  6
699E:  BTFSC  x4D.7
69A0:  BSF    FF2.7
69A2:  MOVLW  06
69A4:  MOVWF  x4E
69A6:  MOVLW  2D
69A8:  MOVWF  x4D
69AA:  MOVLW  0F
69AC:  MOVWF  x4F
69AE:  MOVLW  1D
69B0:  MOVWF  x50
69B2:  MOVLW  02
69B4:  MOVWF  x51
69B6:  MOVWF  x52
69B8:  MOVLB  0
69BA:  CALL   188E
....................             Desconectado=1; 
69BE:  MOVLB  5
69C0:  BSF    x87.0
....................          } 
....................          else 
69C2:  BRA    6A34
69C4:  MOVLB  0
....................          { 
....................             if(Desconectado==1) 
69C6:  MOVLB  5
69C8:  BTFSS  x87.0
69CA:  BRA    6A10
....................             { 
....................                Desconectado=0; 
69CC:  BCF    x87.0
....................                delay_ms(2000); 
69CE:  MOVLW  08
69D0:  MOVLB  6
69D2:  MOVWF  x4D
69D4:  MOVLW  FA
69D6:  MOVWF  x53
69D8:  MOVLB  0
69DA:  CALL   0D48
69DE:  MOVLB  6
69E0:  DECFSZ x4D,F
69E2:  BRA    69D4
....................                for(i=0;i<80;i++) 
69E4:  MOVLB  5
69E6:  CLRF   x99
69E8:  MOVF   x99,W
69EA:  SUBLW  4F
69EC:  BNC   6A10
....................                { 
....................                   Temperatura=Leer_Sensor(80); 
69EE:  MOVLW  50
69F0:  MOVLB  6
69F2:  MOVWF  x4D
69F4:  MOVLB  0
69F6:  CALL   1CDC
69FA:  MOVFF  03,604
69FE:  MOVFF  02,603
6A02:  MOVFF  01,602
6A06:  MOVFF  00,601
....................                } 
6A0A:  MOVLB  5
6A0C:  INCF   x99,F
6A0E:  BRA    69E8
....................             } 
....................             displayT(Temperatura,15,29,2); 
6A10:  MOVFF  604,650
6A14:  MOVFF  603,64F
6A18:  MOVFF  602,64E
6A1C:  MOVFF  601,64D
6A20:  MOVLW  0F
6A22:  MOVLB  6
6A24:  MOVWF  x51
6A26:  MOVLW  1D
6A28:  MOVWF  x52
6A2A:  MOVLW  02
6A2C:  MOVWF  x53
6A2E:  MOVLB  0
6A30:  CALL   362C
....................          } 
....................  
....................          //displayT(Temperatura,15,29,2); 
....................          glcd_circle(74,30,2,NO,ON); 
6A34:  MOVLW  4A
6A36:  MOVLB  6
6A38:  MOVWF  x62
6A3A:  MOVLW  1E
6A3C:  MOVWF  x63
6A3E:  MOVLW  02
6A40:  MOVWF  x64
6A42:  CLRF   x65
6A44:  MOVLW  01
6A46:  MOVWF  x66
6A48:  MOVLB  0
6A4A:  CALL   1F6E
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,75,30,2,2); 
6A4E:  MOVLW  06
6A50:  MOVWF  FEA
6A52:  MOVLW  2D
6A54:  MOVWF  FE9
6A56:  MOVFF  FF2,64D
6A5A:  BCF    FF2.7
6A5C:  MOVLW  00
6A5E:  CALL   06BE
6A62:  TBLRD*-
6A64:  TBLRD*+
6A66:  MOVF   FF5,W
6A68:  MOVWF  FEE
6A6A:  IORLW  00
6A6C:  BNZ   6A64
6A6E:  MOVLB  6
6A70:  BTFSC  x4D.7
6A72:  BSF    FF2.7
6A74:  MOVLW  06
6A76:  MOVWF  x4E
6A78:  MOVLW  2D
6A7A:  MOVWF  x4D
6A7C:  MOVLW  4B
6A7E:  MOVWF  x4F
6A80:  MOVLW  1E
6A82:  MOVWF  x50
6A84:  MOVLW  02
6A86:  MOVWF  x51
6A88:  MOVWF  x52
6A8A:  MOVLB  0
6A8C:  CALL   188E
....................           
....................          //displayTemperatura(Setpoint,30,45,0,1); 
....................          displayT(Setpoint,30,45,1); 
6A90:  MOVFF  610,650
6A94:  MOVFF  60F,64F
6A98:  MOVFF  60E,64E
6A9C:  MOVFF  60D,64D
6AA0:  MOVLW  1E
6AA2:  MOVLB  6
6AA4:  MOVWF  x51
6AA6:  MOVLW  2D
6AA8:  MOVWF  x52
6AAA:  MOVLW  01
6AAC:  MOVWF  x53
6AAE:  MOVLB  0
6AB0:  CALL   362C
....................          glcd_circle(55,47,1,NO,ON); 
6AB4:  MOVLW  37
6AB6:  MOVLB  6
6AB8:  MOVWF  x62
6ABA:  MOVLW  2F
6ABC:  MOVWF  x63
6ABE:  MOVLW  01
6AC0:  MOVWF  x64
6AC2:  CLRF   x65
6AC4:  MOVWF  x66
6AC6:  MOVLB  0
6AC8:  CALL   1F6E
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,58,45,2,1); 
6ACC:  MOVLW  06
6ACE:  MOVWF  FEA
6AD0:  MOVLW  2D
6AD2:  MOVWF  FE9
6AD4:  MOVFF  FF2,64D
6AD8:  BCF    FF2.7
6ADA:  MOVLW  00
6ADC:  CALL   06BE
6AE0:  TBLRD*-
6AE2:  TBLRD*+
6AE4:  MOVF   FF5,W
6AE6:  MOVWF  FEE
6AE8:  IORLW  00
6AEA:  BNZ   6AE2
6AEC:  MOVLB  6
6AEE:  BTFSC  x4D.7
6AF0:  BSF    FF2.7
6AF2:  MOVLW  06
6AF4:  MOVWF  x4E
6AF6:  MOVLW  2D
6AF8:  MOVWF  x4D
6AFA:  MOVLW  3A
6AFC:  MOVWF  x4F
6AFE:  MOVLW  2D
6B00:  MOVWF  x50
6B02:  MOVLW  02
6B04:  MOVWF  x51
6B06:  MOVLW  01
6B08:  MOVWF  x52
6B0A:  MOVLB  0
6B0C:  CALL   188E
....................          strcpy(Menus.Letra,"Temp:");displayMenu(Menus.Letra,0,45,2,1);  
6B10:  MOVLW  06
6B12:  MOVWF  FEA
6B14:  MOVLW  2D
6B16:  MOVWF  FE9
6B18:  MOVFF  FF2,64D
6B1C:  BCF    FF2.7
6B1E:  MOVLW  00
6B20:  CALL   0B00
6B24:  TBLRD*-
6B26:  TBLRD*+
6B28:  MOVF   FF5,W
6B2A:  MOVWF  FEE
6B2C:  IORLW  00
6B2E:  BNZ   6B26
6B30:  MOVLB  6
6B32:  BTFSC  x4D.7
6B34:  BSF    FF2.7
6B36:  MOVLW  06
6B38:  MOVWF  x4E
6B3A:  MOVLW  2D
6B3C:  MOVWF  x4D
6B3E:  CLRF   x4F
6B40:  MOVWF  x50
6B42:  MOVLW  02
6B44:  MOVWF  x51
6B46:  MOVLW  01
6B48:  MOVWF  x52
6B4A:  MOVLB  0
6B4C:  CALL   188E
....................           
....................          displayTiempo(Potencia,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
6B50:  MOVFF  5B4,650
6B54:  MOVFF  5B3,64F
6B58:  MOVFF  5B2,64E
6B5C:  MOVFF  5B1,64D
6B60:  CALL   2198
6B64:  MOVFF  01,64D
6B68:  MOVFF  01,64E
6B6C:  MOVLW  61
6B6E:  MOVLB  6
6B70:  MOVWF  x4F
6B72:  MOVLW  2A
6B74:  MOVWF  x50
6B76:  MOVLW  03
6B78:  MOVWF  x51
6B7A:  MOVLW  01
6B7C:  MOVWF  x52
6B7E:  MOVLB  0
6B80:  CALL   29D0
6B84:  MOVLW  06
6B86:  MOVWF  FEA
6B88:  MOVLW  2D
6B8A:  MOVWF  FE9
6B8C:  MOVFF  FF2,64D
6B90:  BCF    FF2.7
6B92:  MOVLW  00
6B94:  CALL   0B20
6B98:  TBLRD*-
6B9A:  TBLRD*+
6B9C:  MOVF   FF5,W
6B9E:  MOVWF  FEE
6BA0:  IORLW  00
6BA2:  BNZ   6B9A
6BA4:  MOVLB  6
6BA6:  BTFSC  x4D.7
6BA8:  BSF    FF2.7
6BAA:  MOVLW  06
6BAC:  MOVWF  x4E
6BAE:  MOVLW  2D
6BB0:  MOVWF  x4D
6BB2:  MOVLW  73
6BB4:  MOVWF  x4F
6BB6:  MOVLW  2A
6BB8:  MOVWF  x50
6BBA:  MOVLW  02
6BBC:  MOVWF  x51
6BBE:  MOVLW  01
6BC0:  MOVWF  x52
6BC2:  MOVLB  0
6BC4:  CALL   188E
....................          //displayTiempo(Tpulsomin*10,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
....................           
....................          strcpy(Menus.Letra,"Vel:");displayMenu(Menus.Letra,97,13,2,1); 
6BC8:  MOVLW  06
6BCA:  MOVWF  FEA
6BCC:  MOVLW  2D
6BCE:  MOVWF  FE9
6BD0:  MOVFF  FF2,64D
6BD4:  BCF    FF2.7
6BD6:  MOVLW  00
6BD8:  CALL   0B3C
6BDC:  TBLRD*-
6BDE:  TBLRD*+
6BE0:  MOVF   FF5,W
6BE2:  MOVWF  FEE
6BE4:  IORLW  00
6BE6:  BNZ   6BDE
6BE8:  MOVLB  6
6BEA:  BTFSC  x4D.7
6BEC:  BSF    FF2.7
6BEE:  MOVLW  06
6BF0:  MOVWF  x4E
6BF2:  MOVLW  2D
6BF4:  MOVWF  x4D
6BF6:  MOVLW  61
6BF8:  MOVWF  x4F
6BFA:  MOVLW  0D
6BFC:  MOVWF  x50
6BFE:  MOVLW  02
6C00:  MOVWF  x51
6C02:  MOVLW  01
6C04:  MOVWF  x52
6C06:  MOVLB  0
6C08:  CALL   188E
....................          displayTiempo(Velocidad,115,13,0,1); 
6C0C:  MOVFF  58F,64E
6C10:  MOVLW  73
6C12:  MOVLB  6
6C14:  MOVWF  x4F
6C16:  MOVLW  0D
6C18:  MOVWF  x50
6C1A:  CLRF   x51
6C1C:  MOVLW  01
6C1E:  MOVWF  x52
6C20:  MOVLB  0
6C22:  CALL   29D0
....................          //displayT(TpulsoMax,97,13,1); 
....................           
....................          if(flag_display==1) 
6C26:  MOVLB  5
6C28:  BTFSS  x94.0
6C2A:  BRA    6C64
....................             displayTiempo(Ganancia,66,45,3,1); 
6C2C:  MOVFF  5F4,650
6C30:  MOVFF  5F3,64F
6C34:  MOVFF  5F2,64E
6C38:  MOVFF  5F1,64D
6C3C:  MOVLB  0
6C3E:  CALL   2198
6C42:  MOVFF  01,64D
6C46:  MOVFF  01,64E
6C4A:  MOVLW  42
6C4C:  MOVLB  6
6C4E:  MOVWF  x4F
6C50:  MOVLW  2D
6C52:  MOVWF  x50
6C54:  MOVLW  03
6C56:  MOVWF  x51
6C58:  MOVLW  01
6C5A:  MOVWF  x52
6C5C:  MOVLB  0
6C5E:  CALL   29D0
....................             //displayTemperatura(Prom,97,13,0,1); 
....................             //displayT(Tpulsomin,60,46,1); 
....................          else 
6C62:  BRA    6C82
....................             glcd_rect(66, 45, 88, 52, YES, OFF); 
6C64:  MOVLW  42
6C66:  MOVLB  6
6C68:  MOVWF  x62
6C6A:  MOVLW  2D
6C6C:  MOVWF  x63
6C6E:  MOVLW  58
6C70:  MOVWF  x64
6C72:  MOVLW  34
6C74:  MOVWF  x65
6C76:  MOVLW  01
6C78:  MOVWF  x66
6C7A:  CLRF   x67
6C7C:  MOVLB  0
6C7E:  CALL   17CC
....................           
....................          // Muestra Valor de esterilizacion Programado. 
....................          displayTiempo(Testerilizacion[3],20,2,0,2);displayTiempo(Testerilizacion[2],33,2,0,2); 
6C82:  MOVFF  5C0,64E
6C86:  MOVLW  14
6C88:  MOVLB  6
6C8A:  MOVWF  x4F
6C8C:  MOVLW  02
6C8E:  MOVWF  x50
6C90:  CLRF   x51
6C92:  MOVWF  x52
6C94:  MOVLB  0
6C96:  CALL   29D0
6C9A:  MOVFF  5BF,64E
6C9E:  MOVLW  21
6CA0:  MOVLB  6
6CA2:  MOVWF  x4F
6CA4:  MOVLW  02
6CA6:  MOVWF  x50
6CA8:  CLRF   x51
6CAA:  MOVWF  x52
6CAC:  MOVLB  0
6CAE:  CALL   29D0
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,46,2,2,2);  
6CB2:  MOVLW  06
6CB4:  MOVWF  FEA
6CB6:  MOVLW  2D
6CB8:  MOVWF  FE9
6CBA:  MOVFF  FF2,64D
6CBE:  BCF    FF2.7
6CC0:  MOVLW  00
6CC2:  CALL   09BC
6CC6:  TBLRD*-
6CC8:  TBLRD*+
6CCA:  MOVF   FF5,W
6CCC:  MOVWF  FEE
6CCE:  IORLW  00
6CD0:  BNZ   6CC8
6CD2:  MOVLB  6
6CD4:  BTFSC  x4D.7
6CD6:  BSF    FF2.7
6CD8:  MOVLW  06
6CDA:  MOVWF  x4E
6CDC:  MOVLW  2D
6CDE:  MOVWF  x4D
6CE0:  MOVLW  2E
6CE2:  MOVWF  x4F
6CE4:  MOVLW  02
6CE6:  MOVWF  x50
6CE8:  MOVWF  x51
6CEA:  MOVWF  x52
6CEC:  MOVLB  0
6CEE:  CALL   188E
....................          displayTiempo(Testerilizacion[1],55,2,0,2);displayTiempo(Testerilizacion[0],68,2,0,2); 
6CF2:  MOVFF  5BE,64E
6CF6:  MOVLW  37
6CF8:  MOVLB  6
6CFA:  MOVWF  x4F
6CFC:  MOVLW  02
6CFE:  MOVWF  x50
6D00:  CLRF   x51
6D02:  MOVWF  x52
6D04:  MOVLB  0
6D06:  CALL   29D0
6D0A:  MOVFF  5BD,64E
6D0E:  MOVLW  44
6D10:  MOVLB  6
6D12:  MOVWF  x4F
6D14:  MOVLW  02
6D16:  MOVWF  x50
6D18:  CLRF   x51
6D1A:  MOVWF  x52
6D1C:  MOVLB  0
6D1E:  CALL   29D0
....................           
....................          // Muestra Valor de esterilizacion actual. 
....................          strcpy(Menus.Letra,"Time:");displayMenu(Menus.Letra,0,18,2,1);  
6D22:  MOVLW  06
6D24:  MOVWF  FEA
6D26:  MOVLW  2D
6D28:  MOVWF  FE9
6D2A:  MOVFF  FF2,64D
6D2E:  BCF    FF2.7
6D30:  MOVLW  00
6D32:  CALL   0B5C
6D36:  TBLRD*-
6D38:  TBLRD*+
6D3A:  MOVF   FF5,W
6D3C:  MOVWF  FEE
6D3E:  IORLW  00
6D40:  BNZ   6D38
6D42:  MOVLB  6
6D44:  BTFSC  x4D.7
6D46:  BSF    FF2.7
6D48:  MOVLW  06
6D4A:  MOVWF  x4E
6D4C:  MOVLW  2D
6D4E:  MOVWF  x4D
6D50:  CLRF   x4F
6D52:  MOVLW  12
6D54:  MOVWF  x50
6D56:  MOVLW  02
6D58:  MOVWF  x51
6D5A:  MOVLW  01
6D5C:  MOVWF  x52
6D5E:  MOVLB  0
6D60:  CALL   188E
....................          displayTiempo(Testerilizacionp[3],30,18,0,1);displayTiempo(Testerilizacionp[2],36,18,0,1); 
6D64:  MOVFF  5C4,64E
6D68:  MOVLW  1E
6D6A:  MOVLB  6
6D6C:  MOVWF  x4F
6D6E:  MOVLW  12
6D70:  MOVWF  x50
6D72:  CLRF   x51
6D74:  MOVLW  01
6D76:  MOVWF  x52
6D78:  MOVLB  0
6D7A:  CALL   29D0
6D7E:  MOVFF  5C3,64E
6D82:  MOVLW  24
6D84:  MOVLB  6
6D86:  MOVWF  x4F
6D88:  MOVLW  12
6D8A:  MOVWF  x50
6D8C:  CLRF   x51
6D8E:  MOVLW  01
6D90:  MOVWF  x52
6D92:  MOVLB  0
6D94:  CALL   29D0
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,42,18,2,1);  
6D98:  MOVLW  06
6D9A:  MOVWF  FEA
6D9C:  MOVLW  2D
6D9E:  MOVWF  FE9
6DA0:  MOVFF  FF2,64D
6DA4:  BCF    FF2.7
6DA6:  MOVLW  00
6DA8:  CALL   09BC
6DAC:  TBLRD*-
6DAE:  TBLRD*+
6DB0:  MOVF   FF5,W
6DB2:  MOVWF  FEE
6DB4:  IORLW  00
6DB6:  BNZ   6DAE
6DB8:  MOVLB  6
6DBA:  BTFSC  x4D.7
6DBC:  BSF    FF2.7
6DBE:  MOVLW  06
6DC0:  MOVWF  x4E
6DC2:  MOVLW  2D
6DC4:  MOVWF  x4D
6DC6:  MOVLW  2A
6DC8:  MOVWF  x4F
6DCA:  MOVLW  12
6DCC:  MOVWF  x50
6DCE:  MOVLW  02
6DD0:  MOVWF  x51
6DD2:  MOVLW  01
6DD4:  MOVWF  x52
6DD6:  MOVLB  0
6DD8:  CALL   188E
....................          displayTiempo(Testerilizacionp[1],48,18,0,1);displayTiempo(Testerilizacionp[0],54,18,0,1); 
6DDC:  MOVFF  5C2,64E
6DE0:  MOVLW  30
6DE2:  MOVLB  6
6DE4:  MOVWF  x4F
6DE6:  MOVLW  12
6DE8:  MOVWF  x50
6DEA:  CLRF   x51
6DEC:  MOVLW  01
6DEE:  MOVWF  x52
6DF0:  MOVLB  0
6DF2:  CALL   29D0
6DF6:  MOVFF  5C1,64E
6DFA:  MOVLW  36
6DFC:  MOVLB  6
6DFE:  MOVWF  x4F
6E00:  MOVLW  12
6E02:  MOVWF  x50
6E04:  CLRF   x51
6E06:  MOVLW  01
6E08:  MOVWF  x52
6E0A:  MOVLB  0
6E0C:  CALL   29D0
....................          strcpy(Menus.Letra,"(H:M)");displayMenu(Menus.Letra,60,18,2,1);  
6E10:  MOVLW  06
6E12:  MOVWF  FEA
6E14:  MOVLW  2D
6E16:  MOVWF  FE9
6E18:  MOVFF  FF2,64D
6E1C:  BCF    FF2.7
6E1E:  MOVLW  00
6E20:  CALL   0B7C
6E24:  TBLRD*-
6E26:  TBLRD*+
6E28:  MOVF   FF5,W
6E2A:  MOVWF  FEE
6E2C:  IORLW  00
6E2E:  BNZ   6E26
6E30:  MOVLB  6
6E32:  BTFSC  x4D.7
6E34:  BSF    FF2.7
6E36:  MOVLW  06
6E38:  MOVWF  x4E
6E3A:  MOVLW  2D
6E3C:  MOVWF  x4D
6E3E:  MOVLW  3C
6E40:  MOVWF  x4F
6E42:  MOVLW  12
6E44:  MOVWF  x50
6E46:  MOVLW  02
6E48:  MOVWF  x51
6E4A:  MOVLW  01
6E4C:  MOVWF  x52
6E4E:  MOVLB  0
6E50:  CALL   188E
....................           
....................          glcd_rect(0, 0, 89, 27, NO, ON); 
6E54:  MOVLB  6
6E56:  CLRF   x62
6E58:  CLRF   x63
6E5A:  MOVLW  59
6E5C:  MOVWF  x64
6E5E:  MOVLW  1B
6E60:  MOVWF  x65
6E62:  CLRF   x66
6E64:  MOVLW  01
6E66:  MOVWF  x67
6E68:  MOVLB  0
6E6A:  CALL   17CC
....................          glcd_rect(0, 27, 89, 54, NO, ON); 
6E6E:  MOVLB  6
6E70:  CLRF   x62
6E72:  MOVLW  1B
6E74:  MOVWF  x63
6E76:  MOVLW  59
6E78:  MOVWF  x64
6E7A:  MOVLW  36
6E7C:  MOVWF  x65
6E7E:  CLRF   x66
6E80:  MOVLW  01
6E82:  MOVWF  x67
6E84:  MOVLB  0
6E86:  CALL   17CC
6E8A:  MOVLB  5
....................       }  
....................              
....................       /*if(LEFT)//Si oprime boton de Toma. 
....................       { 
....................          if(Pausa!=2) 
....................          { 
....................             delay_ms(500);Menu=30;glcd_fillscreen(OFF);Opcion=1;visual=1;Pausa=1; 
....................          } 
....................          LEFT=0; 
....................       }*/ 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==100){ //Menu de Configuración de Parametros de Control 
6E8C:  MOVF   x97,W
6E8E:  SUBLW  64
6E90:  BTFSS  FD8.2
6E92:  BRA    71F8
....................        
....................       if(Opcion>5) 
6E94:  MOVF   x9C,W
6E96:  SUBLW  05
6E98:  BC    6E9E
....................       {Opcion=1;} 
6E9A:  MOVLW  01
6E9C:  MOVWF  x9C
....................       if(Opcion<1) 
6E9E:  MOVF   x9C,F
6EA0:  BNZ   6EA6
....................       {Opcion=5;} 
6EA2:  MOVLW  05
6EA4:  MOVWF  x9C
....................        
....................          if(Opcion==1)    
6EA6:  DECFSZ x9C,W
6EA8:  BRA    6EEE
....................             {strcpy(Menus.Letra,"Ganancia"); 
6EAA:  MOVLW  06
6EAC:  MOVWF  FEA
6EAE:  MOVLW  2D
6EB0:  MOVWF  FE9
6EB2:  MOVFF  FF2,64D
6EB6:  BCF    FF2.7
6EB8:  MOVLW  00
6EBA:  MOVLB  0
6EBC:  CALL   0B9C
6EC0:  TBLRD*-
6EC2:  TBLRD*+
6EC4:  MOVF   FF5,W
6EC6:  MOVWF  FEE
6EC8:  IORLW  00
6ECA:  BNZ   6EC2
6ECC:  MOVLB  6
6ECE:  BTFSC  x4D.7
6ED0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
6ED2:  MOVLW  06
6ED4:  MOVWF  x4E
6ED6:  MOVLW  2D
6ED8:  MOVWF  x4D
6EDA:  CLRF   x4F
6EDC:  CLRF   x50
6EDE:  MOVLW  01
6EE0:  MOVWF  x51
6EE2:  MOVWF  x52
6EE4:  MOVLB  0
6EE6:  CALL   188E
....................          else 
6EEA:  BRA    6F2E
6EEC:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ganancia"); 
6EEE:  MOVLW  06
6EF0:  MOVWF  FEA
6EF2:  MOVLW  2D
6EF4:  MOVWF  FE9
6EF6:  MOVFF  FF2,64D
6EFA:  BCF    FF2.7
6EFC:  MOVLW  00
6EFE:  MOVLB  0
6F00:  CALL   0B9C
6F04:  TBLRD*-
6F06:  TBLRD*+
6F08:  MOVF   FF5,W
6F0A:  MOVWF  FEE
6F0C:  IORLW  00
6F0E:  BNZ   6F06
6F10:  MOVLB  6
6F12:  BTFSC  x4D.7
6F14:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);} 
6F16:  MOVLW  06
6F18:  MOVWF  x4E
6F1A:  MOVLW  2D
6F1C:  MOVWF  x4D
6F1E:  CLRF   x4F
6F20:  CLRF   x50
6F22:  CLRF   x51
6F24:  MOVLW  01
6F26:  MOVWF  x52
6F28:  MOVLB  0
6F2A:  CALL   188E
....................           
....................          if(Opcion==2)    
6F2E:  MOVLB  5
6F30:  MOVF   x9C,W
6F32:  SUBLW  02
6F34:  BNZ   6F7C
....................             {strcpy(Menus.Letra,"Tciclo"); 
6F36:  MOVLW  06
6F38:  MOVWF  FEA
6F3A:  MOVLW  2D
6F3C:  MOVWF  FE9
6F3E:  MOVFF  FF2,64D
6F42:  BCF    FF2.7
6F44:  MOVLW  00
6F46:  MOVLB  0
6F48:  CALL   0BC0
6F4C:  TBLRD*-
6F4E:  TBLRD*+
6F50:  MOVF   FF5,W
6F52:  MOVWF  FEE
6F54:  IORLW  00
6F56:  BNZ   6F4E
6F58:  MOVLB  6
6F5A:  BTFSC  x4D.7
6F5C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
6F5E:  MOVLW  06
6F60:  MOVWF  x4E
6F62:  MOVLW  2D
6F64:  MOVWF  x4D
6F66:  CLRF   x4F
6F68:  MOVLW  09
6F6A:  MOVWF  x50
6F6C:  MOVLW  01
6F6E:  MOVWF  x51
6F70:  MOVWF  x52
6F72:  MOVLB  0
6F74:  CALL   188E
....................          else 
6F78:  BRA    6FBE
6F7A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Tciclo"); 
6F7C:  MOVLW  06
6F7E:  MOVWF  FEA
6F80:  MOVLW  2D
6F82:  MOVWF  FE9
6F84:  MOVFF  FF2,64D
6F88:  BCF    FF2.7
6F8A:  MOVLW  00
6F8C:  MOVLB  0
6F8E:  CALL   0BC0
6F92:  TBLRD*-
6F94:  TBLRD*+
6F96:  MOVF   FF5,W
6F98:  MOVWF  FEE
6F9A:  IORLW  00
6F9C:  BNZ   6F94
6F9E:  MOVLB  6
6FA0:  BTFSC  x4D.7
6FA2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);} 
6FA4:  MOVLW  06
6FA6:  MOVWF  x4E
6FA8:  MOVLW  2D
6FAA:  MOVWF  x4D
6FAC:  CLRF   x4F
6FAE:  MOVLW  09
6FB0:  MOVWF  x50
6FB2:  CLRF   x51
6FB4:  MOVLW  01
6FB6:  MOVWF  x52
6FB8:  MOVLB  0
6FBA:  CALL   188E
....................              
....................          if(Opcion==3)    
6FBE:  MOVLB  5
6FC0:  MOVF   x9C,W
6FC2:  SUBLW  03
6FC4:  BNZ   700C
....................             {strcpy(Menus.Letra,"Ajuste +"); 
6FC6:  MOVLW  06
6FC8:  MOVWF  FEA
6FCA:  MOVLW  2D
6FCC:  MOVWF  FE9
6FCE:  MOVFF  FF2,64D
6FD2:  BCF    FF2.7
6FD4:  MOVLW  00
6FD6:  MOVLB  0
6FD8:  CALL   0BE2
6FDC:  TBLRD*-
6FDE:  TBLRD*+
6FE0:  MOVF   FF5,W
6FE2:  MOVWF  FEE
6FE4:  IORLW  00
6FE6:  BNZ   6FDE
6FE8:  MOVLB  6
6FEA:  BTFSC  x4D.7
6FEC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
6FEE:  MOVLW  06
6FF0:  MOVWF  x4E
6FF2:  MOVLW  2D
6FF4:  MOVWF  x4D
6FF6:  CLRF   x4F
6FF8:  MOVLW  12
6FFA:  MOVWF  x50
6FFC:  MOVLW  01
6FFE:  MOVWF  x51
7000:  MOVWF  x52
7002:  MOVLB  0
7004:  CALL   188E
....................          else 
7008:  BRA    704E
700A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste +"); 
700C:  MOVLW  06
700E:  MOVWF  FEA
7010:  MOVLW  2D
7012:  MOVWF  FE9
7014:  MOVFF  FF2,64D
7018:  BCF    FF2.7
701A:  MOVLW  00
701C:  MOVLB  0
701E:  CALL   0BE2
7022:  TBLRD*-
7024:  TBLRD*+
7026:  MOVF   FF5,W
7028:  MOVWF  FEE
702A:  IORLW  00
702C:  BNZ   7024
702E:  MOVLB  6
7030:  BTFSC  x4D.7
7032:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}    
7034:  MOVLW  06
7036:  MOVWF  x4E
7038:  MOVLW  2D
703A:  MOVWF  x4D
703C:  CLRF   x4F
703E:  MOVLW  12
7040:  MOVWF  x50
7042:  CLRF   x51
7044:  MOVLW  01
7046:  MOVWF  x52
7048:  MOVLB  0
704A:  CALL   188E
....................                          
....................          if(Opcion==4)    
704E:  MOVLB  5
7050:  MOVF   x9C,W
7052:  SUBLW  04
7054:  BNZ   709C
....................             {strcpy(Menus.Letra,"Ajuste -"); 
7056:  MOVLW  06
7058:  MOVWF  FEA
705A:  MOVLW  2D
705C:  MOVWF  FE9
705E:  MOVFF  FF2,64D
7062:  BCF    FF2.7
7064:  MOVLW  00
7066:  MOVLB  0
7068:  CALL   0C06
706C:  TBLRD*-
706E:  TBLRD*+
7070:  MOVF   FF5,W
7072:  MOVWF  FEE
7074:  IORLW  00
7076:  BNZ   706E
7078:  MOVLB  6
707A:  BTFSC  x4D.7
707C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
707E:  MOVLW  06
7080:  MOVWF  x4E
7082:  MOVLW  2D
7084:  MOVWF  x4D
7086:  CLRF   x4F
7088:  MOVLW  1B
708A:  MOVWF  x50
708C:  MOVLW  01
708E:  MOVWF  x51
7090:  MOVWF  x52
7092:  MOVLB  0
7094:  CALL   188E
....................          else 
7098:  BRA    70DE
709A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste -"); 
709C:  MOVLW  06
709E:  MOVWF  FEA
70A0:  MOVLW  2D
70A2:  MOVWF  FE9
70A4:  MOVFF  FF2,64D
70A8:  BCF    FF2.7
70AA:  MOVLW  00
70AC:  MOVLB  0
70AE:  CALL   0C06
70B2:  TBLRD*-
70B4:  TBLRD*+
70B6:  MOVF   FF5,W
70B8:  MOVWF  FEE
70BA:  IORLW  00
70BC:  BNZ   70B4
70BE:  MOVLB  6
70C0:  BTFSC  x4D.7
70C2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);}      
70C4:  MOVLW  06
70C6:  MOVWF  x4E
70C8:  MOVLW  2D
70CA:  MOVWF  x4D
70CC:  CLRF   x4F
70CE:  MOVLW  1B
70D0:  MOVWF  x50
70D2:  CLRF   x51
70D4:  MOVLW  01
70D6:  MOVWF  x52
70D8:  MOVLB  0
70DA:  CALL   188E
....................              
....................          if(Opcion==5)    
70DE:  MOVLB  5
70E0:  MOVF   x9C,W
70E2:  SUBLW  05
70E4:  BNZ   712C
....................             {strcpy(Menus.Letra,"Media Movil"); 
70E6:  MOVLW  06
70E8:  MOVWF  FEA
70EA:  MOVLW  2D
70EC:  MOVWF  FE9
70EE:  MOVFF  FF2,64D
70F2:  BCF    FF2.7
70F4:  MOVLW  00
70F6:  MOVLB  0
70F8:  CALL   0C2A
70FC:  TBLRD*-
70FE:  TBLRD*+
7100:  MOVF   FF5,W
7102:  MOVWF  FEE
7104:  IORLW  00
7106:  BNZ   70FE
7108:  MOVLB  6
710A:  BTFSC  x4D.7
710C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
710E:  MOVLW  06
7110:  MOVWF  x4E
7112:  MOVLW  2D
7114:  MOVWF  x4D
7116:  CLRF   x4F
7118:  MOVLW  24
711A:  MOVWF  x50
711C:  MOVLW  01
711E:  MOVWF  x51
7120:  MOVWF  x52
7122:  MOVLB  0
7124:  CALL   188E
....................          else 
7128:  BRA    716E
712A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Media Movil"); 
712C:  MOVLW  06
712E:  MOVWF  FEA
7130:  MOVLW  2D
7132:  MOVWF  FE9
7134:  MOVFF  FF2,64D
7138:  BCF    FF2.7
713A:  MOVLW  00
713C:  MOVLB  0
713E:  CALL   0C2A
7142:  TBLRD*-
7144:  TBLRD*+
7146:  MOVF   FF5,W
7148:  MOVWF  FEE
714A:  IORLW  00
714C:  BNZ   7144
714E:  MOVLB  6
7150:  BTFSC  x4D.7
7152:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}      
7154:  MOVLW  06
7156:  MOVWF  x4E
7158:  MOVLW  2D
715A:  MOVWF  x4D
715C:  CLRF   x4F
715E:  MOVLW  24
7160:  MOVWF  x50
7162:  CLRF   x51
7164:  MOVLW  01
7166:  MOVWF  x52
7168:  MOVLB  0
716A:  CALL   188E
....................                
....................        
....................          if(UP)//Si oprime hacia arriba 
716E:  MOVLB  5
7170:  BTFSS  x86.0
7172:  BRA    7188
....................          { 
....................             UP=0;delay_ms(30); 
7174:  BCF    x86.0
7176:  MOVLW  1E
7178:  MOVLB  6
717A:  MOVWF  x53
717C:  MOVLB  0
717E:  CALL   0D48
....................             Opcion--;visual=1; 
7182:  MOVLB  5
7184:  DECF   x9C,F
7186:  BSF    x87.1
....................          } 
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
7188:  BTFSS  x86.1
718A:  BRA    71A0
....................          { 
....................             DOWN=0;delay_ms(30); 
718C:  BCF    x86.1
718E:  MOVLW  1E
7190:  MOVLB  6
7192:  MOVWF  x53
7194:  MOVLB  0
7196:  CALL   0D48
....................             Opcion++;visual=1; 
719A:  MOVLB  5
719C:  INCF   x9C,F
719E:  BSF    x87.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
71A0:  BTFSS  x86.2
71A2:  BRA    71CC
....................          {  
....................             RIGHT=0;delay_ms(30); 
71A4:  BCF    x86.2
71A6:  MOVLW  1E
71A8:  MOVLB  6
71AA:  MOVWF  x53
71AC:  MOVLB  0
71AE:  CALL   0D48
....................             Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
71B2:  MOVLW  64
71B4:  MOVLB  5
71B6:  ADDWF  x9C,W
71B8:  MOVWF  x97
71BA:  MOVLW  01
71BC:  MOVWF  x9C
71BE:  MOVLB  6
71C0:  CLRF   x4E
71C2:  MOVLB  0
71C4:  CALL   1260
71C8:  MOVLB  5
71CA:  BSF    x87.1
....................          } 
....................           
....................          if(LEFT)//Si oprime SET 
71CC:  BTFSS  x86.3
71CE:  BRA    71F8
....................          {  
....................             LEFT=0;delay_ms(30); 
71D0:  BCF    x86.3
71D2:  MOVLW  1E
71D4:  MOVLB  6
71D6:  MOVWF  x53
71D8:  MOVLB  0
71DA:  CALL   0D48
....................             Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
71DE:  MOVLW  64
71E0:  MOVLB  5
71E2:  ADDWF  x9C,W
71E4:  MOVWF  x97
71E6:  MOVLW  01
71E8:  MOVWF  x9C
71EA:  MOVLB  6
71EC:  CLRF   x4E
71EE:  MOVLB  0
71F0:  CALL   1260
71F4:  MOVLB  5
71F6:  BSF    x87.1
....................          } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==101){ // Menu de Ajuste de Ganancia =2 
71F8:  MOVF   x97,W
71FA:  SUBLW  65
71FC:  BTFSS  FD8.2
71FE:  BRA    7450
....................        
....................       if(Ganancia>40) 
7200:  MOVLB  6
7202:  CLRF   x50
7204:  CLRF   x4F
7206:  MOVLW  20
7208:  MOVWF  x4E
720A:  MOVLW  84
720C:  MOVWF  x4D
720E:  MOVFF  5F4,654
7212:  MOVFF  5F3,653
7216:  MOVFF  5F2,652
721A:  MOVFF  5F1,651
721E:  MOVLB  0
7220:  CALL   11A6
7224:  BNC   7232
....................       { 
....................          Ganancia=2; 
7226:  MOVLB  5
7228:  CLRF   xF4
722A:  CLRF   xF3
722C:  CLRF   xF2
722E:  MOVLW  80
7230:  MOVWF  xF1
....................       } 
....................        
....................       if(visual==1) 
7232:  MOVLB  5
7234:  BTFSS  x87.1
7236:  BRA    72BE
....................       { 
....................          glcd_fillScreen(OFF); 
7238:  MOVLB  6
723A:  CLRF   x4E
723C:  MOVLB  0
723E:  CALL   1260
....................          strcpy(Menus.Letra,"Ganancia"); 
7242:  MOVLW  06
7244:  MOVWF  FEA
7246:  MOVLW  2D
7248:  MOVWF  FE9
724A:  MOVFF  FF2,64D
724E:  BCF    FF2.7
7250:  MOVLW  00
7252:  CALL   0B9C
7256:  TBLRD*-
7258:  TBLRD*+
725A:  MOVF   FF5,W
725C:  MOVWF  FEE
725E:  IORLW  00
7260:  BNZ   7258
7262:  MOVLB  6
7264:  BTFSC  x4D.7
7266:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
7268:  MOVLW  06
726A:  MOVWF  x4E
726C:  MOVLW  2D
726E:  MOVWF  x4D
7270:  CLRF   x4F
7272:  CLRF   x50
7274:  MOVLW  01
7276:  MOVWF  x51
7278:  MOVLW  02
727A:  MOVWF  x52
727C:  MOVLB  0
727E:  CALL   188E
....................           
....................          displayTemperatura(Ganancia,30,30,0,3); 
7282:  MOVFF  5F4,650
7286:  MOVFF  5F3,64F
728A:  MOVFF  5F2,64E
728E:  MOVFF  5F1,64D
7292:  CALL   2198
7296:  MOVFF  02,64E
729A:  MOVFF  01,64D
729E:  MOVFF  02,650
72A2:  MOVFF  01,64F
72A6:  MOVLW  1E
72A8:  MOVLB  6
72AA:  MOVWF  x51
72AC:  MOVWF  x52
72AE:  CLRF   x53
72B0:  MOVLW  03
72B2:  MOVWF  x54
72B4:  MOVLB  0
72B6:  CALL   2292
....................           
....................          visual=0; 
72BA:  MOVLB  5
72BC:  BCF    x87.1
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
72BE:  BTFSS  x86.0
72C0:  BRA    7350
....................          {   
....................             if(Ganancia>40) 
72C2:  MOVLB  6
72C4:  CLRF   x50
72C6:  CLRF   x4F
72C8:  MOVLW  20
72CA:  MOVWF  x4E
72CC:  MOVLW  84
72CE:  MOVWF  x4D
72D0:  MOVFF  5F4,654
72D4:  MOVFF  5F3,653
72D8:  MOVFF  5F2,652
72DC:  MOVFF  5F1,651
72E0:  MOVLB  0
72E2:  CALL   11A6
72E6:  BNC   730A
....................             { 
....................                Ganancia=40;delay_ms(100);visual=1; 
72E8:  MOVLB  5
72EA:  CLRF   xF4
72EC:  CLRF   xF3
72EE:  MOVLW  20
72F0:  MOVWF  xF2
72F2:  MOVLW  84
72F4:  MOVWF  xF1
72F6:  MOVLW  64
72F8:  MOVLB  6
72FA:  MOVWF  x53
72FC:  MOVLB  0
72FE:  CALL   0D48
7302:  MOVLB  5
7304:  BSF    x87.1
....................             } 
....................             else 
7306:  BRA    734E
7308:  MOVLB  0
....................             { 
....................                delay_ms(30);Ganancia+=1.0;visual=1; 
730A:  MOVLW  1E
730C:  MOVLB  6
730E:  MOVWF  x53
7310:  MOVLB  0
7312:  CALL   0D48
7316:  BCF    FD8.1
7318:  MOVFF  5F4,655
731C:  MOVFF  5F3,654
7320:  MOVFF  5F2,653
7324:  MOVFF  5F1,652
7328:  MOVLB  6
732A:  CLRF   x59
732C:  CLRF   x58
732E:  CLRF   x57
7330:  MOVLW  7F
7332:  MOVWF  x56
7334:  MOVLB  0
7336:  CALL   0F2E
733A:  MOVFF  03,5F4
733E:  MOVFF  02,5F3
7342:  MOVFF  01,5F2
7346:  MOVFF  00,5F1
734A:  MOVLB  5
734C:  BSF    x87.1
....................             } 
....................             UP=0; 
734E:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
7350:  BTFSS  x86.1
7352:  BRA    73C0
....................          {   
....................             if(Ganancia>1) 
7354:  MOVLB  6
7356:  CLRF   x50
7358:  CLRF   x4F
735A:  CLRF   x4E
735C:  MOVLW  7F
735E:  MOVWF  x4D
7360:  MOVFF  5F4,654
7364:  MOVFF  5F3,653
7368:  MOVFF  5F2,652
736C:  MOVFF  5F1,651
7370:  MOVLB  0
7372:  CALL   11A6
7376:  BNC   73BC
....................             { 
....................                delay_ms(30);Ganancia-=1.0;visual=1;      
7378:  MOVLW  1E
737A:  MOVLB  6
737C:  MOVWF  x53
737E:  MOVLB  0
7380:  CALL   0D48
7384:  BSF    FD8.1
7386:  MOVFF  5F4,655
738A:  MOVFF  5F3,654
738E:  MOVFF  5F2,653
7392:  MOVFF  5F1,652
7396:  MOVLB  6
7398:  CLRF   x59
739A:  CLRF   x58
739C:  CLRF   x57
739E:  MOVLW  7F
73A0:  MOVWF  x56
73A2:  MOVLB  0
73A4:  CALL   0F2E
73A8:  MOVFF  03,5F4
73AC:  MOVFF  02,5F3
73B0:  MOVFF  01,5F2
73B4:  MOVFF  00,5F1
73B8:  MOVLB  5
73BA:  BSF    x87.1
....................             } 
....................             DOWN=0; 
73BC:  MOVLB  5
73BE:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
73C0:  BTFSS  x86.2
73C2:  BRA    73D6
....................          {   
....................             RIGHT=0;delay_ms(30);visual=1; 
73C4:  BCF    x86.2
73C6:  MOVLW  1E
73C8:  MOVLB  6
73CA:  MOVWF  x53
73CC:  MOVLB  0
73CE:  CALL   0D48
73D2:  MOVLB  5
73D4:  BSF    x87.1
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
73D6:  BTFSS  x86.3
73D8:  BRA    7450
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
73DA:  MOVLW  04
73DC:  MOVLB  6
73DE:  MOVWF  x4D
73E0:  MOVLW  AF
73E2:  MOVWF  x53
73E4:  MOVLB  0
73E6:  CALL   0D48
73EA:  MOVLB  6
73EC:  DECFSZ x4D,F
73EE:  BRA    73E0
73F0:  MOVLW  64
73F2:  MOVLB  5
73F4:  MOVWF  x97
73F6:  MOVLB  6
73F8:  CLRF   x4E
73FA:  MOVLB  0
73FC:  CALL   1260
7400:  MOVLW  01
7402:  MOVLB  5
7404:  MOVWF  x9C
7406:  BSF    x87.1
....................             write_eeprom(90,(int8)Ganancia); 
7408:  MOVFF  5F4,650
740C:  MOVFF  5F3,64F
7410:  MOVFF  5F2,64E
7414:  MOVFF  5F1,64D
7418:  MOVLB  0
741A:  CALL   2198
741E:  MOVFF  01,64D
7422:  MOVLW  5A
7424:  MOVWF  FA9
7426:  MOVFF  64D,FA8
742A:  BCF    FA6.6
742C:  BCF    FA6.7
742E:  BSF    FA6.2
7430:  MOVF   FF2,W
7432:  MOVWF  00
7434:  BCF    FF2.7
7436:  MOVLB  F
7438:  MOVLW  55
743A:  MOVWF  FA7
743C:  MOVLW  AA
743E:  MOVWF  FA7
7440:  BSF    FA6.1
7442:  BTFSC  FA6.1
7444:  BRA    7442
7446:  BCF    FA6.2
7448:  MOVF   00,W
744A:  IORWF  FF2,F
....................             LEFT=0; 
744C:  MOVLB  5
744E:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==102){ // Menu de Tciclo=5 
7450:  MOVF   x97,W
7452:  SUBLW  66
7454:  BTFSS  FD8.2
7456:  BRA    76AA
....................        
....................       if(Tciclo>40) 
7458:  MOVLB  6
745A:  CLRF   x50
745C:  CLRF   x4F
745E:  MOVLW  20
7460:  MOVWF  x4E
7462:  MOVLW  84
7464:  MOVWF  x4D
7466:  MOVFF  5DC,654
746A:  MOVFF  5DB,653
746E:  MOVFF  5DA,652
7472:  MOVFF  5D9,651
7476:  MOVLB  0
7478:  CALL   11A6
747C:  BNC   748C
....................       { 
....................          Tciclo=40; 
747E:  MOVLB  5
7480:  CLRF   xDC
7482:  CLRF   xDB
7484:  MOVLW  20
7486:  MOVWF  xDA
7488:  MOVLW  84
748A:  MOVWF  xD9
....................       } 
....................        
....................       if(visual==1) 
748C:  MOVLB  5
748E:  BTFSS  x87.1
7490:  BRA    7518
....................       { 
....................          glcd_fillScreen(OFF); 
7492:  MOVLB  6
7494:  CLRF   x4E
7496:  MOVLB  0
7498:  CALL   1260
....................          strcpy(Menus.Letra,"Tciclo"); 
749C:  MOVLW  06
749E:  MOVWF  FEA
74A0:  MOVLW  2D
74A2:  MOVWF  FE9
74A4:  MOVFF  FF2,64D
74A8:  BCF    FF2.7
74AA:  MOVLW  00
74AC:  CALL   0BC0
74B0:  TBLRD*-
74B2:  TBLRD*+
74B4:  MOVF   FF5,W
74B6:  MOVWF  FEE
74B8:  IORLW  00
74BA:  BNZ   74B2
74BC:  MOVLB  6
74BE:  BTFSC  x4D.7
74C0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
74C2:  MOVLW  06
74C4:  MOVWF  x4E
74C6:  MOVLW  2D
74C8:  MOVWF  x4D
74CA:  CLRF   x4F
74CC:  CLRF   x50
74CE:  MOVLW  01
74D0:  MOVWF  x51
74D2:  MOVLW  02
74D4:  MOVWF  x52
74D6:  MOVLB  0
74D8:  CALL   188E
....................           
....................          displayTemperatura(Tciclo,30,30,0,3); 
74DC:  MOVFF  5DC,650
74E0:  MOVFF  5DB,64F
74E4:  MOVFF  5DA,64E
74E8:  MOVFF  5D9,64D
74EC:  CALL   2198
74F0:  MOVFF  02,64E
74F4:  MOVFF  01,64D
74F8:  MOVFF  02,650
74FC:  MOVFF  01,64F
7500:  MOVLW  1E
7502:  MOVLB  6
7504:  MOVWF  x51
7506:  MOVWF  x52
7508:  CLRF   x53
750A:  MOVLW  03
750C:  MOVWF  x54
750E:  MOVLB  0
7510:  CALL   2292
....................           
....................          visual=0; 
7514:  MOVLB  5
7516:  BCF    x87.1
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
7518:  BTFSS  x86.0
751A:  BRA    75AA
....................          {   
....................             if(Tciclo>40) 
751C:  MOVLB  6
751E:  CLRF   x50
7520:  CLRF   x4F
7522:  MOVLW  20
7524:  MOVWF  x4E
7526:  MOVLW  84
7528:  MOVWF  x4D
752A:  MOVFF  5DC,654
752E:  MOVFF  5DB,653
7532:  MOVFF  5DA,652
7536:  MOVFF  5D9,651
753A:  MOVLB  0
753C:  CALL   11A6
7540:  BNC   7564
....................             { 
....................                Tciclo=40;delay_ms(100);visual=1; 
7542:  MOVLB  5
7544:  CLRF   xDC
7546:  CLRF   xDB
7548:  MOVLW  20
754A:  MOVWF  xDA
754C:  MOVLW  84
754E:  MOVWF  xD9
7550:  MOVLW  64
7552:  MOVLB  6
7554:  MOVWF  x53
7556:  MOVLB  0
7558:  CALL   0D48
755C:  MOVLB  5
755E:  BSF    x87.1
....................             } 
....................             else 
7560:  BRA    75A8
7562:  MOVLB  0
....................             { 
....................                delay_ms(30);Tciclo+=1.0;visual=1; 
7564:  MOVLW  1E
7566:  MOVLB  6
7568:  MOVWF  x53
756A:  MOVLB  0
756C:  CALL   0D48
7570:  BCF    FD8.1
7572:  MOVFF  5DC,655
7576:  MOVFF  5DB,654
757A:  MOVFF  5DA,653
757E:  MOVFF  5D9,652
7582:  MOVLB  6
7584:  CLRF   x59
7586:  CLRF   x58
7588:  CLRF   x57
758A:  MOVLW  7F
758C:  MOVWF  x56
758E:  MOVLB  0
7590:  CALL   0F2E
7594:  MOVFF  03,5DC
7598:  MOVFF  02,5DB
759C:  MOVFF  01,5DA
75A0:  MOVFF  00,5D9
75A4:  MOVLB  5
75A6:  BSF    x87.1
....................             } 
....................             UP=0; 
75A8:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
75AA:  BTFSS  x86.1
75AC:  BRA    761A
....................          {   
....................             if(Tciclo>1) 
75AE:  MOVLB  6
75B0:  CLRF   x50
75B2:  CLRF   x4F
75B4:  CLRF   x4E
75B6:  MOVLW  7F
75B8:  MOVWF  x4D
75BA:  MOVFF  5DC,654
75BE:  MOVFF  5DB,653
75C2:  MOVFF  5DA,652
75C6:  MOVFF  5D9,651
75CA:  MOVLB  0
75CC:  CALL   11A6
75D0:  BNC   7616
....................             { 
....................                delay_ms(30);Tciclo-=1.0;visual=1;      
75D2:  MOVLW  1E
75D4:  MOVLB  6
75D6:  MOVWF  x53
75D8:  MOVLB  0
75DA:  CALL   0D48
75DE:  BSF    FD8.1
75E0:  MOVFF  5DC,655
75E4:  MOVFF  5DB,654
75E8:  MOVFF  5DA,653
75EC:  MOVFF  5D9,652
75F0:  MOVLB  6
75F2:  CLRF   x59
75F4:  CLRF   x58
75F6:  CLRF   x57
75F8:  MOVLW  7F
75FA:  MOVWF  x56
75FC:  MOVLB  0
75FE:  CALL   0F2E
7602:  MOVFF  03,5DC
7606:  MOVFF  02,5DB
760A:  MOVFF  01,5DA
760E:  MOVFF  00,5D9
7612:  MOVLB  5
7614:  BSF    x87.1
....................             } 
....................             DOWN=0; 
7616:  MOVLB  5
7618:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
761A:  BTFSS  x86.2
761C:  BRA    7630
....................          {   
....................             RIGHT=0;delay_ms(30);visual=1; 
761E:  BCF    x86.2
7620:  MOVLW  1E
7622:  MOVLB  6
7624:  MOVWF  x53
7626:  MOVLB  0
7628:  CALL   0D48
762C:  MOVLB  5
762E:  BSF    x87.1
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
7630:  BTFSS  x86.3
7632:  BRA    76AA
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
7634:  MOVLW  04
7636:  MOVLB  6
7638:  MOVWF  x4D
763A:  MOVLW  AF
763C:  MOVWF  x53
763E:  MOVLB  0
7640:  CALL   0D48
7644:  MOVLB  6
7646:  DECFSZ x4D,F
7648:  BRA    763A
764A:  MOVLW  64
764C:  MOVLB  5
764E:  MOVWF  x97
7650:  MOVLB  6
7652:  CLRF   x4E
7654:  MOVLB  0
7656:  CALL   1260
765A:  MOVLW  01
765C:  MOVLB  5
765E:  MOVWF  x9C
7660:  BSF    x87.1
....................             write_eeprom(30,(int8)Tciclo); 
7662:  MOVFF  5DC,650
7666:  MOVFF  5DB,64F
766A:  MOVFF  5DA,64E
766E:  MOVFF  5D9,64D
7672:  MOVLB  0
7674:  CALL   2198
7678:  MOVFF  01,64D
767C:  MOVLW  1E
767E:  MOVWF  FA9
7680:  MOVFF  64D,FA8
7684:  BCF    FA6.6
7686:  BCF    FA6.7
7688:  BSF    FA6.2
768A:  MOVF   FF2,W
768C:  MOVWF  00
768E:  BCF    FF2.7
7690:  MOVLB  F
7692:  MOVLW  55
7694:  MOVWF  FA7
7696:  MOVLW  AA
7698:  MOVWF  FA7
769A:  BSF    FA6.1
769C:  BTFSC  FA6.1
769E:  BRA    769C
76A0:  BCF    FA6.2
76A2:  MOVF   00,W
76A4:  IORWF  FF2,F
....................             LEFT=0; 
76A6:  MOVLB  5
76A8:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==103){ // Menu de Ajuste de Ajuste+=0 
76AA:  MOVF   x97,W
76AC:  SUBLW  67
76AE:  BTFSS  FD8.2
76B0:  BRA    787A
....................        
....................       if(Ajuste>100) 
76B2:  MOVF   x8A,W
76B4:  SUBLW  64
76B6:  BC    76BA
....................       { 
....................          Ajuste=0; 
76B8:  CLRF   x8A
....................       } 
....................        
....................       if(visual==1) 
76BA:  BTFSS  x87.1
76BC:  BRA    7726
....................       { 
....................          glcd_fillScreen(OFF); 
76BE:  MOVLB  6
76C0:  CLRF   x4E
76C2:  MOVLB  0
76C4:  CALL   1260
....................          strcpy(Menus.Letra,"Ajuste"); 
76C8:  MOVLW  06
76CA:  MOVWF  FEA
76CC:  MOVLW  2D
76CE:  MOVWF  FE9
76D0:  MOVFF  FF2,64D
76D4:  BCF    FF2.7
76D6:  MOVLW  00
76D8:  CALL   0C50
76DC:  TBLRD*-
76DE:  TBLRD*+
76E0:  MOVF   FF5,W
76E2:  MOVWF  FEE
76E4:  IORLW  00
76E6:  BNZ   76DE
76E8:  MOVLB  6
76EA:  BTFSC  x4D.7
76EC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
76EE:  MOVLW  06
76F0:  MOVWF  x4E
76F2:  MOVLW  2D
76F4:  MOVWF  x4D
76F6:  CLRF   x4F
76F8:  CLRF   x50
76FA:  MOVLW  01
76FC:  MOVWF  x51
76FE:  MOVLW  02
7700:  MOVWF  x52
7702:  MOVLB  0
7704:  CALL   188E
....................           
....................          displayTemperatura(Ajuste,30,30,0,3); 
7708:  MOVLB  6
770A:  CLRF   x50
770C:  MOVFF  58A,64F
7710:  MOVLW  1E
7712:  MOVWF  x51
7714:  MOVWF  x52
7716:  CLRF   x53
7718:  MOVLW  03
771A:  MOVWF  x54
771C:  MOVLB  0
771E:  CALL   2292
....................           
....................          visual=0; 
7722:  MOVLB  5
7724:  BCF    x87.1
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
7726:  BTFSS  x86.0
7728:  BRA    77A0
....................          {   
....................             if(Ajuste>100) 
772A:  MOVF   x8A,W
772C:  SUBLW  64
772E:  BC    7744
....................             { 
....................                Ajuste=100;delay_ms(100);visual=1; 
7730:  MOVLW  64
7732:  MOVWF  x8A
7734:  MOVLB  6
7736:  MOVWF  x53
7738:  MOVLB  0
773A:  CALL   0D48
773E:  MOVLB  5
7740:  BSF    x87.1
....................             } 
....................             else 
7742:  BRA    779E
....................             { 
....................                delay_ms(30);Ajuste+=1.0;visual=1; 
7744:  MOVLW  1E
7746:  MOVLB  6
7748:  MOVWF  x53
774A:  MOVLB  0
774C:  CALL   0D48
7750:  MOVLB  6
7752:  CLRF   x54
7754:  MOVFF  58A,653
7758:  MOVLB  0
775A:  CALL   0D9A
775E:  BCF    FD8.1
7760:  MOVFF  03,655
7764:  MOVFF  02,654
7768:  MOVFF  01,653
776C:  MOVFF  00,652
7770:  MOVLB  6
7772:  CLRF   x59
7774:  CLRF   x58
7776:  CLRF   x57
7778:  MOVLW  7F
777A:  MOVWF  x56
777C:  MOVLB  0
777E:  CALL   0F2E
7782:  MOVFF  03,650
7786:  MOVFF  02,64F
778A:  MOVFF  01,64E
778E:  MOVFF  00,64D
7792:  CALL   2198
7796:  MOVFF  01,58A
779A:  MOVLB  5
779C:  BSF    x87.1
....................             } 
....................             UP=0; 
779E:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
77A0:  BTFSS  x86.1
77A2:  BRA    7804
....................          {   
....................             if(Ajuste>0) 
77A4:  MOVF   x8A,F
77A6:  BZ    7802
....................             { 
....................                delay_ms(30);Ajuste-=1.0;visual=1;      
77A8:  MOVLW  1E
77AA:  MOVLB  6
77AC:  MOVWF  x53
77AE:  MOVLB  0
77B0:  CALL   0D48
77B4:  MOVLB  6
77B6:  CLRF   x54
77B8:  MOVFF  58A,653
77BC:  MOVLB  0
77BE:  CALL   0D9A
77C2:  BSF    FD8.1
77C4:  MOVFF  03,655
77C8:  MOVFF  02,654
77CC:  MOVFF  01,653
77D0:  MOVFF  00,652
77D4:  MOVLB  6
77D6:  CLRF   x59
77D8:  CLRF   x58
77DA:  CLRF   x57
77DC:  MOVLW  7F
77DE:  MOVWF  x56
77E0:  MOVLB  0
77E2:  CALL   0F2E
77E6:  MOVFF  03,650
77EA:  MOVFF  02,64F
77EE:  MOVFF  01,64E
77F2:  MOVFF  00,64D
77F6:  CALL   2198
77FA:  MOVFF  01,58A
77FE:  MOVLB  5
7800:  BSF    x87.1
....................             } 
....................             DOWN=0; 
7802:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
7804:  BTFSS  x86.2
7806:  BRA    781A
....................          {   
....................             RIGHT=0;delay_ms(30);visual=1; 
7808:  BCF    x86.2
780A:  MOVLW  1E
780C:  MOVLB  6
780E:  MOVWF  x53
7810:  MOVLB  0
7812:  CALL   0D48
7816:  MOVLB  5
7818:  BSF    x87.1
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
781A:  BTFSS  x86.3
781C:  BRA    787A
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
781E:  MOVLW  04
7820:  MOVLB  6
7822:  MOVWF  x4D
7824:  MOVLW  AF
7826:  MOVWF  x53
7828:  MOVLB  0
782A:  CALL   0D48
782E:  MOVLB  6
7830:  DECFSZ x4D,F
7832:  BRA    7824
7834:  MOVLW  64
7836:  MOVLB  5
7838:  MOVWF  x97
783A:  MOVLB  6
783C:  CLRF   x4E
783E:  MOVLB  0
7840:  CALL   1260
7844:  MOVLW  01
7846:  MOVLB  5
7848:  MOVWF  x9C
784A:  BSF    x87.1
....................             write_eeprom(40,Ajuste); 
784C:  MOVLW  28
784E:  MOVWF  FA9
7850:  MOVFF  58A,FA8
7854:  BCF    FA6.6
7856:  BCF    FA6.7
7858:  BSF    FA6.2
785A:  MOVF   FF2,W
785C:  MOVWF  00
785E:  BCF    FF2.7
7860:  MOVLB  F
7862:  MOVLW  55
7864:  MOVWF  FA7
7866:  MOVLW  AA
7868:  MOVWF  FA7
786A:  BSF    FA6.1
786C:  BTFSC  FA6.1
786E:  BRA    786C
7870:  BCF    FA6.2
7872:  MOVF   00,W
7874:  IORWF  FF2,F
....................             LEFT=0; 
7876:  MOVLB  5
7878:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==104){ // Menu de Ajuste de Ajusten=4 
787A:  MOVF   x97,W
787C:  SUBLW  68
787E:  BTFSS  FD8.2
7880:  BRA    7A4A
....................        
....................       if(Ajusten>100) 
7882:  MOVF   x8B,W
7884:  SUBLW  64
7886:  BC    788A
....................       { 
....................          Ajusten=0; 
7888:  CLRF   x8B
....................       } 
....................        
....................       if(visual==1) 
788A:  BTFSS  x87.1
788C:  BRA    78F6
....................       { 
....................          glcd_fillScreen(OFF); 
788E:  MOVLB  6
7890:  CLRF   x4E
7892:  MOVLB  0
7894:  CALL   1260
....................          strcpy(Menus.Letra,"Ajusten"); 
7898:  MOVLW  06
789A:  MOVWF  FEA
789C:  MOVLW  2D
789E:  MOVWF  FE9
78A0:  MOVFF  FF2,64D
78A4:  BCF    FF2.7
78A6:  MOVLW  00
78A8:  CALL   0C72
78AC:  TBLRD*-
78AE:  TBLRD*+
78B0:  MOVF   FF5,W
78B2:  MOVWF  FEE
78B4:  IORLW  00
78B6:  BNZ   78AE
78B8:  MOVLB  6
78BA:  BTFSC  x4D.7
78BC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
78BE:  MOVLW  06
78C0:  MOVWF  x4E
78C2:  MOVLW  2D
78C4:  MOVWF  x4D
78C6:  CLRF   x4F
78C8:  CLRF   x50
78CA:  MOVLW  01
78CC:  MOVWF  x51
78CE:  MOVLW  02
78D0:  MOVWF  x52
78D2:  MOVLB  0
78D4:  CALL   188E
....................           
....................          displayTemperatura(Ajusten,30,30,0,3); 
78D8:  MOVLB  6
78DA:  CLRF   x50
78DC:  MOVFF  58B,64F
78E0:  MOVLW  1E
78E2:  MOVWF  x51
78E4:  MOVWF  x52
78E6:  CLRF   x53
78E8:  MOVLW  03
78EA:  MOVWF  x54
78EC:  MOVLB  0
78EE:  CALL   2292
....................           
....................          visual=0; 
78F2:  MOVLB  5
78F4:  BCF    x87.1
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
78F6:  BTFSS  x86.0
78F8:  BRA    7970
....................          {   
....................             if(Ajusten>100) 
78FA:  MOVF   x8B,W
78FC:  SUBLW  64
78FE:  BC    7914
....................             { 
....................                Ajusten=100;delay_ms(100);visual=1; 
7900:  MOVLW  64
7902:  MOVWF  x8B
7904:  MOVLB  6
7906:  MOVWF  x53
7908:  MOVLB  0
790A:  CALL   0D48
790E:  MOVLB  5
7910:  BSF    x87.1
....................             } 
....................             else 
7912:  BRA    796E
....................             { 
....................                delay_ms(30);Ajusten+=1.0;visual=1; 
7914:  MOVLW  1E
7916:  MOVLB  6
7918:  MOVWF  x53
791A:  MOVLB  0
791C:  CALL   0D48
7920:  MOVLB  6
7922:  CLRF   x54
7924:  MOVFF  58B,653
7928:  MOVLB  0
792A:  CALL   0D9A
792E:  BCF    FD8.1
7930:  MOVFF  03,655
7934:  MOVFF  02,654
7938:  MOVFF  01,653
793C:  MOVFF  00,652
7940:  MOVLB  6
7942:  CLRF   x59
7944:  CLRF   x58
7946:  CLRF   x57
7948:  MOVLW  7F
794A:  MOVWF  x56
794C:  MOVLB  0
794E:  CALL   0F2E
7952:  MOVFF  03,650
7956:  MOVFF  02,64F
795A:  MOVFF  01,64E
795E:  MOVFF  00,64D
7962:  CALL   2198
7966:  MOVFF  01,58B
796A:  MOVLB  5
796C:  BSF    x87.1
....................             } 
....................             UP=0; 
796E:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
7970:  BTFSS  x86.1
7972:  BRA    79D4
....................          {   
....................             if(Ajusten>0) 
7974:  MOVF   x8B,F
7976:  BZ    79D2
....................             { 
....................                delay_ms(30);Ajusten-=1.0;visual=1;      
7978:  MOVLW  1E
797A:  MOVLB  6
797C:  MOVWF  x53
797E:  MOVLB  0
7980:  CALL   0D48
7984:  MOVLB  6
7986:  CLRF   x54
7988:  MOVFF  58B,653
798C:  MOVLB  0
798E:  CALL   0D9A
7992:  BSF    FD8.1
7994:  MOVFF  03,655
7998:  MOVFF  02,654
799C:  MOVFF  01,653
79A0:  MOVFF  00,652
79A4:  MOVLB  6
79A6:  CLRF   x59
79A8:  CLRF   x58
79AA:  CLRF   x57
79AC:  MOVLW  7F
79AE:  MOVWF  x56
79B0:  MOVLB  0
79B2:  CALL   0F2E
79B6:  MOVFF  03,650
79BA:  MOVFF  02,64F
79BE:  MOVFF  01,64E
79C2:  MOVFF  00,64D
79C6:  CALL   2198
79CA:  MOVFF  01,58B
79CE:  MOVLB  5
79D0:  BSF    x87.1
....................             } 
....................             DOWN=0; 
79D2:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
79D4:  BTFSS  x86.2
79D6:  BRA    79EA
....................          {   
....................             delay_ms(30);visual=1; 
79D8:  MOVLW  1E
79DA:  MOVLB  6
79DC:  MOVWF  x53
79DE:  MOVLB  0
79E0:  CALL   0D48
79E4:  MOVLB  5
79E6:  BSF    x87.1
....................             RIGHT=0; 
79E8:  BCF    x86.2
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
79EA:  BTFSS  x86.3
79EC:  BRA    7A4A
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
79EE:  MOVLW  04
79F0:  MOVLB  6
79F2:  MOVWF  x4D
79F4:  MOVLW  AF
79F6:  MOVWF  x53
79F8:  MOVLB  0
79FA:  CALL   0D48
79FE:  MOVLB  6
7A00:  DECFSZ x4D,F
7A02:  BRA    79F4
7A04:  MOVLW  64
7A06:  MOVLB  5
7A08:  MOVWF  x97
7A0A:  MOVLB  6
7A0C:  CLRF   x4E
7A0E:  MOVLB  0
7A10:  CALL   1260
7A14:  MOVLW  01
7A16:  MOVLB  5
7A18:  MOVWF  x9C
7A1A:  BSF    x87.1
....................             write_eeprom(50,Ajusten); 
7A1C:  MOVLW  32
7A1E:  MOVWF  FA9
7A20:  MOVFF  58B,FA8
7A24:  BCF    FA6.6
7A26:  BCF    FA6.7
7A28:  BSF    FA6.2
7A2A:  MOVF   FF2,W
7A2C:  MOVWF  00
7A2E:  BCF    FF2.7
7A30:  MOVLB  F
7A32:  MOVLW  55
7A34:  MOVWF  FA7
7A36:  MOVLW  AA
7A38:  MOVWF  FA7
7A3A:  BSF    FA6.1
7A3C:  BTFSC  FA6.1
7A3E:  BRA    7A3C
7A40:  BCF    FA6.2
7A42:  MOVF   00,W
7A44:  IORWF  FF2,F
....................             LEFT=0; 
7A46:  MOVLB  5
7A48:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==105){ // Menu de Ajuste de Media Movil=20 
7A4A:  MOVF   x97,W
7A4C:  SUBLW  69
7A4E:  BTFSS  FD8.2
7A50:  BRA    7C20
....................        
....................       if(MediaMovil>80) 
7A52:  MOVF   x8C,W
7A54:  SUBLW  50
7A56:  BC    7A5C
....................       { 
....................          MediaMovil=10; 
7A58:  MOVLW  0A
7A5A:  MOVWF  x8C
....................       } 
....................        
....................       if(visual==1) 
7A5C:  BTFSS  x87.1
7A5E:  BRA    7AC8
....................       { 
....................          glcd_fillScreen(OFF); 
7A60:  MOVLB  6
7A62:  CLRF   x4E
7A64:  MOVLB  0
7A66:  CALL   1260
....................          strcpy(Menus.Letra,"Media"); 
7A6A:  MOVLW  06
7A6C:  MOVWF  FEA
7A6E:  MOVLW  2D
7A70:  MOVWF  FE9
7A72:  MOVFF  FF2,64D
7A76:  BCF    FF2.7
7A78:  MOVLW  00
7A7A:  CALL   0C94
7A7E:  TBLRD*-
7A80:  TBLRD*+
7A82:  MOVF   FF5,W
7A84:  MOVWF  FEE
7A86:  IORLW  00
7A88:  BNZ   7A80
7A8A:  MOVLB  6
7A8C:  BTFSC  x4D.7
7A8E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
7A90:  MOVLW  06
7A92:  MOVWF  x4E
7A94:  MOVLW  2D
7A96:  MOVWF  x4D
7A98:  CLRF   x4F
7A9A:  CLRF   x50
7A9C:  MOVLW  01
7A9E:  MOVWF  x51
7AA0:  MOVLW  02
7AA2:  MOVWF  x52
7AA4:  MOVLB  0
7AA6:  CALL   188E
....................           
....................          displayTemperatura(MediaMovil,30,30,0,3); 
7AAA:  MOVLB  6
7AAC:  CLRF   x50
7AAE:  MOVFF  58C,64F
7AB2:  MOVLW  1E
7AB4:  MOVWF  x51
7AB6:  MOVWF  x52
7AB8:  CLRF   x53
7ABA:  MOVLW  03
7ABC:  MOVWF  x54
7ABE:  MOVLB  0
7AC0:  CALL   2292
....................           
....................          visual=0; 
7AC4:  MOVLB  5
7AC6:  BCF    x87.1
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
7AC8:  BTFSS  x86.0
7ACA:  BRA    7B44
....................          {   
....................             if(MediaMovil>79) 
7ACC:  MOVF   x8C,W
7ACE:  SUBLW  4F
7AD0:  BC    7AE8
....................             { 
....................                MediaMovil=79;delay_ms(100);visual=1; 
7AD2:  MOVLW  4F
7AD4:  MOVWF  x8C
7AD6:  MOVLW  64
7AD8:  MOVLB  6
7ADA:  MOVWF  x53
7ADC:  MOVLB  0
7ADE:  CALL   0D48
7AE2:  MOVLB  5
7AE4:  BSF    x87.1
....................             } 
....................             else 
7AE6:  BRA    7B42
....................             { 
....................                delay_ms(30);MediaMovil+=1.0;visual=1; 
7AE8:  MOVLW  1E
7AEA:  MOVLB  6
7AEC:  MOVWF  x53
7AEE:  MOVLB  0
7AF0:  CALL   0D48
7AF4:  MOVLB  6
7AF6:  CLRF   x54
7AF8:  MOVFF  58C,653
7AFC:  MOVLB  0
7AFE:  CALL   0D9A
7B02:  BCF    FD8.1
7B04:  MOVFF  03,655
7B08:  MOVFF  02,654
7B0C:  MOVFF  01,653
7B10:  MOVFF  00,652
7B14:  MOVLB  6
7B16:  CLRF   x59
7B18:  CLRF   x58
7B1A:  CLRF   x57
7B1C:  MOVLW  7F
7B1E:  MOVWF  x56
7B20:  MOVLB  0
7B22:  CALL   0F2E
7B26:  MOVFF  03,650
7B2A:  MOVFF  02,64F
7B2E:  MOVFF  01,64E
7B32:  MOVFF  00,64D
7B36:  CALL   2198
7B3A:  MOVFF  01,58C
7B3E:  MOVLB  5
7B40:  BSF    x87.1
....................             } 
....................             UP=0; 
7B42:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
7B44:  BTFSS  x86.1
7B46:  BRA    7BAA
....................          {   
....................             if(MediaMovil>1) 
7B48:  MOVF   x8C,W
7B4A:  SUBLW  01
7B4C:  BC    7BA8
....................             { 
....................                delay_ms(30);MediaMovil-=1.0;visual=1;      
7B4E:  MOVLW  1E
7B50:  MOVLB  6
7B52:  MOVWF  x53
7B54:  MOVLB  0
7B56:  CALL   0D48
7B5A:  MOVLB  6
7B5C:  CLRF   x54
7B5E:  MOVFF  58C,653
7B62:  MOVLB  0
7B64:  CALL   0D9A
7B68:  BSF    FD8.1
7B6A:  MOVFF  03,655
7B6E:  MOVFF  02,654
7B72:  MOVFF  01,653
7B76:  MOVFF  00,652
7B7A:  MOVLB  6
7B7C:  CLRF   x59
7B7E:  CLRF   x58
7B80:  CLRF   x57
7B82:  MOVLW  7F
7B84:  MOVWF  x56
7B86:  MOVLB  0
7B88:  CALL   0F2E
7B8C:  MOVFF  03,650
7B90:  MOVFF  02,64F
7B94:  MOVFF  01,64E
7B98:  MOVFF  00,64D
7B9C:  CALL   2198
7BA0:  MOVFF  01,58C
7BA4:  MOVLB  5
7BA6:  BSF    x87.1
....................             } 
....................             DOWN=0; 
7BA8:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
7BAA:  BTFSS  x86.2
7BAC:  BRA    7BC0
....................          {   
....................             delay_ms(30);visual=1; 
7BAE:  MOVLW  1E
7BB0:  MOVLB  6
7BB2:  MOVWF  x53
7BB4:  MOVLB  0
7BB6:  CALL   0D48
7BBA:  MOVLB  5
7BBC:  BSF    x87.1
....................             RIGHT=0; 
7BBE:  BCF    x86.2
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
7BC0:  BTFSS  x86.3
7BC2:  BRA    7C20
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
7BC4:  MOVLW  04
7BC6:  MOVLB  6
7BC8:  MOVWF  x4D
7BCA:  MOVLW  AF
7BCC:  MOVWF  x53
7BCE:  MOVLB  0
7BD0:  CALL   0D48
7BD4:  MOVLB  6
7BD6:  DECFSZ x4D,F
7BD8:  BRA    7BCA
7BDA:  MOVLW  64
7BDC:  MOVLB  5
7BDE:  MOVWF  x97
7BE0:  MOVLB  6
7BE2:  CLRF   x4E
7BE4:  MOVLB  0
7BE6:  CALL   1260
7BEA:  MOVLW  01
7BEC:  MOVLB  5
7BEE:  MOVWF  x9C
7BF0:  BSF    x87.1
....................             write_eeprom(60,MediaMovil); 
7BF2:  MOVLW  3C
7BF4:  MOVWF  FA9
7BF6:  MOVFF  58C,FA8
7BFA:  BCF    FA6.6
7BFC:  BCF    FA6.7
7BFE:  BSF    FA6.2
7C00:  MOVF   FF2,W
7C02:  MOVWF  00
7C04:  BCF    FF2.7
7C06:  MOVLB  F
7C08:  MOVLW  55
7C0A:  MOVWF  FA7
7C0C:  MOVLW  AA
7C0E:  MOVWF  FA7
7C10:  BSF    FA6.1
7C12:  BTFSC  FA6.1
7C14:  BRA    7C12
7C16:  BCF    FA6.2
7C18:  MOVF   00,W
7C1A:  IORWF  FF2,F
....................             LEFT=0; 
7C1C:  MOVLB  5
7C1E:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
....................       if(tiemporeset>=60) 
7C20:  MOVF   x96,W
7C22:  SUBLW  3B
7C24:  BC    7C36
....................       { 
....................          glcd_init(ON); 
7C26:  MOVLW  01
7C28:  MOVLB  6
7C2A:  MOVWF  x4D
7C2C:  MOVLB  0
7C2E:  CALL   1372
....................          tiemporeset=0; 
7C32:  MOVLB  5
7C34:  CLRF   x96
....................       }  
....................  
....................    } 
7C36:  GOTO   4352
.................... } 
7C3A:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E1E   BROWNOUT NOWDT BORV20 PUT WDT32768 NOVREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
