CCS PCH C Compiler, Version 4.104, 5967               03-ene.-18 10:30

               Filename: H:\JP\JP\Laboratorio\Incubadora\2017\Incubadora Refrigerada 115L Avantika #00458774\Firmware V1.1\Horno.lst

               ROM used: 32130 bytes (98%)
                         Largest free fragment is 634
               RAM used: 1603 (78%) at main() level
                         1656 (81%) worst case
               Stack:    5 worst case (4 in main + 1 for interrupts)

*
0000:  GOTO   3890
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0D96
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... /// Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,NOVREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0DFC:  MOVLW  06
0DFE:  MOVWF  FEA
0E00:  MOVLW  45
0E02:  MOVWF  FE9
0E04:  MOVF   FEF,W
0E06:  BZ    0E24
0E08:  MOVLW  0F
0E0A:  MOVWF  01
0E0C:  CLRF   00
0E0E:  DECFSZ 00,F
0E10:  BRA    0E0E
0E12:  DECFSZ 01,F
0E14:  BRA    0E0C
0E16:  MOVLW  8F
0E18:  MOVWF  00
0E1A:  DECFSZ 00,F
0E1C:  BRA    0E1A
0E1E:  NOP   
0E20:  DECFSZ FEF,F
0E22:  BRA    0E08
0E24:  RETLW  00
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B0   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B1   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B4   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B3   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
1050:  BCF    F93.2
1052:  BSF    F8A.2
....................    output_low(GLCD_E); 
1054:  BCF    F93.3
1056:  BCF    F8A.3
....................    output_low(GLCD_CS1); 
1058:  BCF    F93.0
105A:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
105C:  BCF    F93.1
105E:  BCF    F8A.1
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
1060:  BCF    F93.5
1062:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
1064:  MOVLB  6
1066:  CLRF   x57
1068:  MOVLW  C0
106A:  MOVWF  x58
106C:  MOVLB  0
106E:  RCALL  0EFE
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
1070:  MOVLW  01
1072:  MOVLB  6
1074:  MOVWF  x57
1076:  MOVLW  C0
1078:  MOVWF  x58
107A:  MOVLB  0
107C:  RCALL  0EFE
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
107E:  MOVLB  6
1080:  CLRF   x57
1082:  MOVLW  40
1084:  MOVWF  x58
1086:  MOVLB  0
1088:  RCALL  0EFE
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
108A:  MOVLW  01
108C:  MOVLB  6
108E:  MOVWF  x57
1090:  MOVLW  40
1092:  MOVWF  x58
1094:  MOVLB  0
1096:  RCALL  0EFE
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
1098:  MOVLB  6
109A:  CLRF   x57
109C:  MOVLW  B8
109E:  MOVWF  x58
10A0:  MOVLB  0
10A2:  RCALL  0EFE
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
10A4:  MOVLW  01
10A6:  MOVLB  6
10A8:  MOVWF  x57
10AA:  MOVLW  B8
10AC:  MOVWF  x58
10AE:  MOVLB  0
10B0:  RCALL  0EFE
....................  
....................    if(mode == ON) 
10B2:  MOVLB  6
10B4:  DECFSZ x3F,W
10B6:  BRA    10D4
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
10B8:  CLRF   x57
10BA:  MOVLW  3F
10BC:  MOVWF  x58
10BE:  MOVLB  0
10C0:  RCALL  0EFE
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
10C2:  MOVLW  01
10C4:  MOVLB  6
10C6:  MOVWF  x57
10C8:  MOVLW  3F
10CA:  MOVWF  x58
10CC:  MOVLB  0
10CE:  RCALL  0EFE
....................    } 
....................    else 
10D0:  BRA    10EC
10D2:  MOVLB  6
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
10D4:  CLRF   x57
10D6:  MOVLW  3E
10D8:  MOVWF  x58
10DA:  MOVLB  0
10DC:  RCALL  0EFE
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
10DE:  MOVLW  01
10E0:  MOVLB  6
10E2:  MOVWF  x57
10E4:  MOVLW  3E
10E6:  MOVWF  x58
10E8:  MOVLB  0
10EA:  RCALL  0EFE
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
10EC:  MOVLB  6
10EE:  CLRF   x40
10F0:  MOVLB  0
10F2:  RCALL  0F3E
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
10F4:  RCALL  0F98
....................    #endif 
.................... } 
10F6:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
0F98:  MOVLB  6
0F9A:  CLRF   x53
0F9C:  MOVLW  16
0F9E:  MOVWF  x52
....................    p2 = displayData.right; 
0FA0:  MOVLW  02
0FA2:  MOVWF  x55
0FA4:  MOVLW  16
0FA6:  MOVWF  x54
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
0FA8:  CLRF   x50
0FAA:  MOVF   x50,W
0FAC:  SUBLW  07
0FAE:  BNC   104C
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
0FB0:  BCF    F93.5
0FB2:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
0FB4:  CLRF   x57
0FB6:  MOVLW  40
0FB8:  MOVWF  x58
0FBA:  MOVLB  0
0FBC:  RCALL  0EFE
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
0FBE:  MOVLW  01
0FC0:  MOVLB  6
0FC2:  MOVWF  x57
0FC4:  MOVLW  40
0FC6:  MOVWF  x58
0FC8:  MOVLB  0
0FCA:  RCALL  0EFE
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
0FCC:  MOVLB  6
0FCE:  MOVF   x50,W
0FD0:  IORLW  B8
0FD2:  MOVWF  x56
0FD4:  CLRF   x57
0FD6:  MOVWF  x58
0FD8:  MOVLB  0
0FDA:  RCALL  0EFE
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
0FDC:  MOVLB  6
0FDE:  MOVF   x50,W
0FE0:  IORLW  B8
0FE2:  MOVWF  x56
0FE4:  MOVLW  01
0FE6:  MOVWF  x57
0FE8:  MOVFF  656,658
0FEC:  MOVLB  0
0FEE:  RCALL  0EFE
....................       output_high(GLCD_DI);                     // Set for data 
0FF0:  BCF    F93.5
0FF2:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
0FF4:  MOVLB  6
0FF6:  CLRF   x51
0FF8:  MOVF   x51,W
0FFA:  SUBLW  3F
0FFC:  BNC   1048
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
0FFE:  MOVFF  653,03
1002:  MOVF   x52,W
1004:  INCF   x52,F
1006:  BTFSC  FD8.2
1008:  INCF   x53,F
100A:  MOVWF  FE9
100C:  MOVFF  03,FEA
1010:  MOVFF  FEF,656
1014:  CLRF   x57
1016:  MOVFF  656,658
101A:  MOVLB  0
101C:  RCALL  0EFE
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
101E:  MOVLB  6
1020:  MOVFF  655,03
1024:  MOVF   x54,W
1026:  INCF   x54,F
1028:  BTFSC  FD8.2
102A:  INCF   x55,F
102C:  MOVWF  FE9
102E:  MOVFF  03,FEA
1032:  MOVFF  FEF,656
1036:  MOVLW  01
1038:  MOVWF  x57
103A:  MOVFF  656,658
103E:  MOVLB  0
1040:  RCALL  0EFE
....................       } 
1042:  MOVLB  6
1044:  INCF   x51,F
1046:  BRA    0FF8
....................    } 
1048:  INCF   x50,F
104A:  BRA    0FAA
.................... } 
104C:  MOVLB  0
104E:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
10F8:  MOVLB  6
10FA:  CLRF   x74
10FC:  RRCF   x6F,W
10FE:  MOVWF  x73
1100:  RRCF   x73,F
1102:  RRCF   x73,F
1104:  MOVLW  1F
1106:  ANDWF  x73,F
....................    temp *= 64; 
1108:  RLCF   x73,F
110A:  RLCF   x74,F
110C:  RLCF   x73,F
110E:  RLCF   x74,F
1110:  RLCF   x73,F
1112:  RLCF   x74,F
1114:  RLCF   x73,F
1116:  RLCF   x74,F
1118:  RLCF   x73,F
111A:  RLCF   x74,F
111C:  RLCF   x73,F
111E:  RLCF   x74,F
1120:  MOVLW  C0
1122:  ANDWF  x73,F
....................    temp += x; 
1124:  MOVF   x6E,W
1126:  ADDWF  x73,F
1128:  MOVLW  00
112A:  ADDWFC x74,F
....................  
....................    if(x > 63) 
112C:  MOVF   x6E,W
112E:  SUBLW  3F
1130:  BC    114C
....................    { 
....................       p = displayData.right + temp - 64; 
1132:  MOVLW  16
1134:  ADDWF  x73,W
1136:  MOVWF  x75
1138:  MOVLW  02
113A:  ADDWFC x74,W
113C:  MOVWF  x76
113E:  MOVLW  40
1140:  SUBWF  x75,W
1142:  MOVWF  x71
1144:  MOVLW  00
1146:  SUBWFB x76,W
1148:  MOVWF  x72
....................    } 
....................    else 
114A:  BRA    1158
....................    { 
....................       p = displayData.left + temp; 
114C:  MOVLW  16
114E:  ADDWF  x73,W
1150:  MOVWF  x71
1152:  MOVLW  00
1154:  ADDWFC x74,W
1156:  MOVWF  x72
....................    } 
....................  
....................    if(color) 
1158:  MOVF   x70,F
115A:  BZ    1186
....................    { 
....................       bit_set(*p, y%8); 
115C:  MOVFF  672,03
1160:  MOVFF  671,FE9
1164:  MOVFF  672,FEA
1168:  MOVF   x6F,W
116A:  ANDLW  07
116C:  MOVWF  x75
116E:  MOVLW  01
1170:  MOVWF  00
1172:  MOVF   x75,W
1174:  MOVWF  01
1176:  BZ    1180
1178:  BCF    FD8.0
117A:  RLCF   00,F
117C:  DECFSZ 01,F
117E:  BRA    1178
1180:  MOVF   00,W
1182:  IORWF  FEF,F
....................    } 
....................    else 
1184:  BRA    11B0
....................    { 
....................       bit_clear(*p, y%8); 
1186:  MOVFF  672,03
118A:  MOVFF  671,FE9
118E:  MOVFF  672,FEA
1192:  MOVF   x6F,W
1194:  ANDLW  07
1196:  MOVWF  x75
1198:  MOVLW  01
119A:  MOVWF  00
119C:  MOVF   x75,W
119E:  MOVWF  01
11A0:  BZ    11AA
11A2:  BCF    FD8.0
11A4:  RLCF   00,F
11A6:  DECFSZ 01,F
11A8:  BRA    11A2
11AA:  MOVF   00,W
11AC:  XORLW  FF
11AE:  ANDWF  FEF,F
....................    } 
.................... } 
11B0:  MOVLB  0
11B2:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
0F3E:  MOVLB  6
0F40:  CLRF   x43
0F42:  MOVLW  16
0F44:  MOVWF  x42
....................    p2 = displayData.right; 
0F46:  MOVLW  02
0F48:  MOVWF  x45
0F4A:  MOVLW  16
0F4C:  MOVWF  x44
....................    data = 0xFF * color; 
0F4E:  MOVF   x40,W
0F50:  MULLW  FF
0F52:  MOVFF  FF3,641
....................  
....................    for(i=0; i<512; ++i) 
0F56:  CLRF   x47
0F58:  CLRF   x46
0F5A:  MOVF   x47,W
0F5C:  SUBLW  01
0F5E:  BNC   0F94
....................    { 
....................       *p1++ = data; 
0F60:  MOVFF  643,03
0F64:  MOVF   x42,W
0F66:  INCF   x42,F
0F68:  BTFSC  FD8.2
0F6A:  INCF   x43,F
0F6C:  MOVWF  FE9
0F6E:  MOVFF  03,FEA
0F72:  MOVFF  641,FEF
....................       *p2++ = data; 
0F76:  MOVFF  645,03
0F7A:  MOVF   x44,W
0F7C:  INCF   x44,F
0F7E:  BTFSC  FD8.2
0F80:  INCF   x45,F
0F82:  MOVWF  FE9
0F84:  MOVFF  03,FEA
0F88:  MOVFF  641,FEF
....................    } 
0F8C:  INCF   x46,F
0F8E:  BTFSC  FD8.2
0F90:  INCF   x47,F
0F92:  BRA    0F5A
.................... } 
0F94:  MOVLB  0
0F96:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0EFE:  MOVLB  6
0F00:  MOVF   x57,F
0F02:  BZ    0F0A
....................       output_high(GLCD_CS2); 
0F04:  BCF    F93.1
0F06:  BSF    F8A.1
....................    else 
0F08:  BRA    0F0E
....................       output_high(GLCD_CS1); 
0F0A:  BCF    F93.0
0F0C:  BSF    F8A.0
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0F0E:  BCF    F93.4
0F10:  BCF    F8A.4
....................    output_d(data);            // Put the data on the port 
0F12:  CLRF   F95
0F14:  MOVFF  658,F8C
....................    delay_cycles(50); 
0F18:  MOVLW  10
0F1A:  MOVWF  00
0F1C:  DECFSZ 00,F
0F1E:  BRA    0F1C
0F20:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
0F22:  BCF    F93.3
0F24:  BSF    F8A.3
....................    delay_cycles(250); 
0F26:  MOVLW  53
0F28:  MOVWF  00
0F2A:  DECFSZ 00,F
0F2C:  BRA    0F2A
....................    output_low(GLCD_E); 
0F2E:  BCF    F93.3
0F30:  BCF    F8A.3
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
0F32:  BCF    F93.0
0F34:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
0F36:  BCF    F93.1
0F38:  BCF    F8A.1
.................... } 
0F3A:  MOVLB  0
0F3C:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
136C:  MOVLW  01
136E:  MOVLB  6
1370:  MOVWF  x67
1372:  MOVWF  x68
1374:  CLRF   x6D
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
1376:  MOVF   x5E,W
1378:  SUBWF  x60,W
137A:  MOVWF  x6E
137C:  MOVF   x6E,W
137E:  BTFSS  x6E.7
1380:  BRA    1388
1382:  MOVLW  00
1384:  BSF    FD8.0
1386:  SUBFWB x6E,W
1388:  CLRF   03
138A:  MOVWF  x65
138C:  MOVFF  03,666
....................    dy = abs((signed int8)(y2 - y1)); 
1390:  MOVF   x5F,W
1392:  SUBWF  x61,W
1394:  MOVWF  x6E
1396:  MOVF   x6E,W
1398:  BTFSS  x6E.7
139A:  BRA    13A2
139C:  MOVLW  00
139E:  BSF    FD8.0
13A0:  SUBFWB x6E,W
13A2:  CLRF   03
13A4:  MOVWF  x63
13A6:  MOVFF  03,664
....................    #endif 
....................  
....................    if(x1 > x2) 
13AA:  MOVF   x5E,W
13AC:  SUBWF  x60,W
13AE:  BC    13B4
....................       addx = -1; 
13B0:  MOVLW  FF
13B2:  MOVWF  x67
....................    if(y1 > y2) 
13B4:  MOVF   x5F,W
13B6:  SUBWF  x61,W
13B8:  BC    13BE
....................       addy = -1; 
13BA:  MOVLW  FF
13BC:  MOVWF  x68
....................  
....................    if(dx >= dy) 
13BE:  MOVF   x64,W
13C0:  SUBWF  x66,W
13C2:  BNC   143A
13C4:  BNZ   13CC
13C6:  MOVF   x63,W
13C8:  SUBWF  x65,W
13CA:  BNC   143A
....................    { 
....................       dy *= 2; 
13CC:  BCF    FD8.0
13CE:  RLCF   x63,F
13D0:  RLCF   x64,F
....................       P = dy - dx; 
13D2:  MOVF   x65,W
13D4:  SUBWF  x63,W
13D6:  MOVWF  00
13D8:  MOVF   x66,W
13DA:  SUBWFB x64,W
13DC:  MOVFF  00,669
13E0:  MOVWF  x6A
....................       diff = P - dx; 
13E2:  MOVF   x65,W
13E4:  SUBWF  x69,W
13E6:  MOVWF  x6B
13E8:  MOVF   x66,W
13EA:  SUBWFB x6A,W
13EC:  MOVWF  x6C
....................  
....................       for(; i<=dx; ++i) 
13EE:  MOVF   x66,F
13F0:  BNZ   13F8
13F2:  MOVF   x6D,W
13F4:  SUBWF  x65,W
13F6:  BNC   1438
....................       { 
....................          glcd_pixel(x1, y1, color); 
13F8:  MOVFF  65E,66E
13FC:  MOVFF  65F,66F
1400:  MOVFF  662,670
1404:  MOVLB  0
1406:  RCALL  10F8
....................  
....................          if(P < 0) 
1408:  MOVLB  6
140A:  BTFSC  x6A.7
140C:  BRA    1410
140E:  BRA    1420
....................          { 
....................             P  += dy; 
1410:  MOVF   x63,W
1412:  ADDWF  x69,F
1414:  MOVF   x64,W
1416:  ADDWFC x6A,F
....................             x1 += addx; 
1418:  MOVF   x67,W
141A:  ADDWF  x5E,W
141C:  MOVWF  x5E
....................          } 
....................          else 
141E:  BRA    1434
....................          { 
....................             P  += diff; 
1420:  MOVF   x6B,W
1422:  ADDWF  x69,F
1424:  MOVF   x6C,W
1426:  ADDWFC x6A,F
....................             x1 += addx; 
1428:  MOVF   x67,W
142A:  ADDWF  x5E,W
142C:  MOVWF  x5E
....................             y1 += addy; 
142E:  MOVF   x68,W
1430:  ADDWF  x5F,W
1432:  MOVWF  x5F
....................          } 
....................       } 
1434:  INCF   x6D,F
1436:  BRA    13EE
....................    } 
....................    else 
1438:  BRA    14A6
....................    { 
....................       dx *= 2; 
143A:  BCF    FD8.0
143C:  RLCF   x65,F
143E:  RLCF   x66,F
....................       P = dx - dy; 
1440:  MOVF   x63,W
1442:  SUBWF  x65,W
1444:  MOVWF  00
1446:  MOVF   x64,W
1448:  SUBWFB x66,W
144A:  MOVFF  00,669
144E:  MOVWF  x6A
....................       diff = P - dy; 
1450:  MOVF   x63,W
1452:  SUBWF  x69,W
1454:  MOVWF  x6B
1456:  MOVF   x64,W
1458:  SUBWFB x6A,W
145A:  MOVWF  x6C
....................  
....................       for(; i<=dy; ++i) 
145C:  MOVF   x64,F
145E:  BNZ   1466
1460:  MOVF   x6D,W
1462:  SUBWF  x63,W
1464:  BNC   14A6
....................       { 
....................          glcd_pixel(x1, y1, color); 
1466:  MOVFF  65E,66E
146A:  MOVFF  65F,66F
146E:  MOVFF  662,670
1472:  MOVLB  0
1474:  RCALL  10F8
....................  
....................          if(P < 0) 
1476:  MOVLB  6
1478:  BTFSC  x6A.7
147A:  BRA    147E
147C:  BRA    148E
....................          { 
....................             P  += dx; 
147E:  MOVF   x65,W
1480:  ADDWF  x69,F
1482:  MOVF   x66,W
1484:  ADDWFC x6A,F
....................             y1 += addy; 
1486:  MOVF   x68,W
1488:  ADDWF  x5F,W
148A:  MOVWF  x5F
....................          } 
....................          else 
148C:  BRA    14A2
....................          { 
....................             P  += diff; 
148E:  MOVF   x6B,W
1490:  ADDWF  x69,F
1492:  MOVF   x6C,W
1494:  ADDWFC x6A,F
....................             x1 += addx; 
1496:  MOVF   x67,W
1498:  ADDWF  x5E,W
149A:  MOVWF  x5E
....................             y1 += addy; 
149C:  MOVF   x68,W
149E:  ADDWF  x5F,W
14A0:  MOVWF  x5F
....................          } 
....................       } 
14A2:  INCF   x6D,F
14A4:  BRA    145C
....................    } 
.................... } 
14A6:  MOVLB  0
14A8:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
14AA:  MOVLB  6
14AC:  MOVF   x56,F
14AE:  BZ    150C
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
14B0:  MOVF   x54,W
14B2:  SUBWF  x52,W
14B4:  BC    14C0
....................       { 
....................          xmin = x1; 
14B6:  MOVFF  652,659
....................          xmax = x2; 
14BA:  MOVFF  654,65A
....................       } 
....................       else 
14BE:  BRA    14C8
....................       { 
....................          xmin = x2; 
14C0:  MOVFF  654,659
....................          xmax = x1; 
14C4:  MOVFF  652,65A
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
14C8:  MOVF   x55,W
14CA:  SUBWF  x53,W
14CC:  BC    14D8
....................       { 
....................          ymin = y1; 
14CE:  MOVFF  653,65B
....................          ymax = y2; 
14D2:  MOVFF  655,65C
....................       } 
....................       else 
14D6:  BRA    14E0
....................       { 
....................          ymin = y2; 
14D8:  MOVFF  655,65B
....................          ymax = y1; 
14DC:  MOVFF  653,65C
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
14E0:  MOVF   x59,W
14E2:  SUBWF  x5A,W
14E4:  BNC   150A
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
14E6:  MOVFF  65B,658
14EA:  MOVF   x58,W
14EC:  SUBWF  x5C,W
14EE:  BNC   1506
....................          { 
....................             glcd_pixel(xmin, i, color); 
14F0:  MOVFF  659,66E
14F4:  MOVFF  658,66F
14F8:  MOVFF  657,670
14FC:  MOVLB  0
14FE:  RCALL  10F8
....................          } 
1500:  MOVLB  6
1502:  INCF   x58,F
1504:  BRA    14EA
....................       } 
1506:  INCF   x59,F
1508:  BRA    14E0
....................    } 
....................    else 
150A:  BRA    1568
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
150C:  MOVFF  652,65E
1510:  MOVFF  653,65F
1514:  MOVFF  654,660
1518:  MOVFF  653,661
151C:  MOVFF  657,662
1520:  MOVLB  0
1522:  RCALL  136C
....................       glcd_line(x1, y2, x2, y2, color); 
1524:  MOVFF  652,65E
1528:  MOVFF  655,65F
152C:  MOVFF  654,660
1530:  MOVFF  655,661
1534:  MOVFF  657,662
1538:  RCALL  136C
....................       glcd_line(x1, y1, x1, y2, color); 
153A:  MOVFF  652,65E
153E:  MOVFF  653,65F
1542:  MOVFF  652,660
1546:  MOVFF  655,661
154A:  MOVFF  657,662
154E:  RCALL  136C
....................       glcd_line(x2, y1, x2, y2, color); 
1550:  MOVFF  654,65E
1554:  MOVFF  653,65F
1558:  MOVFF  654,660
155C:  MOVFF  655,661
1560:  MOVFF  657,662
1564:  RCALL  136C
1566:  MOVLB  6
....................    } 
.................... } 
1568:  MOVLB  0
156A:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2214:  MOVLB  6
2216:  CLRF   x57
....................    b = radius; 
2218:  MOVFF  654,658
....................    P = 1 - radius; 
221C:  MOVLW  01
221E:  BSF    FD8.0
2220:  SUBFWB x54,W
2222:  MOVWF  x59
....................  
....................    do 
....................    { 
....................       if(fill) 
2224:  MOVF   x55,F
2226:  BZ    22F2
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
2228:  MOVF   x57,W
222A:  SUBWF  x52,W
222C:  MOVWF  x5A
222E:  MOVF   x58,W
2230:  ADDWF  x53,W
2232:  MOVWF  x5B
2234:  MOVF   x57,W
2236:  ADDWF  x52,W
2238:  MOVWF  x5C
223A:  MOVF   x58,W
223C:  ADDWF  x53,W
223E:  MOVWF  x5D
2240:  MOVFF  65A,65E
2244:  MOVFF  65B,65F
2248:  MOVFF  65C,660
224C:  MOVWF  x61
224E:  MOVFF  656,662
2252:  MOVLB  0
2254:  CALL   136C
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
2258:  MOVLB  6
225A:  MOVF   x57,W
225C:  SUBWF  x52,W
225E:  MOVWF  x5A
2260:  MOVF   x58,W
2262:  SUBWF  x53,W
2264:  MOVWF  x5B
2266:  MOVF   x57,W
2268:  ADDWF  x52,W
226A:  MOVWF  x5C
226C:  MOVF   x58,W
226E:  SUBWF  x53,W
2270:  MOVWF  x5D
2272:  MOVFF  65A,65E
2276:  MOVFF  65B,65F
227A:  MOVFF  65C,660
227E:  MOVWF  x61
2280:  MOVFF  656,662
2284:  MOVLB  0
2286:  CALL   136C
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
228A:  MOVLB  6
228C:  MOVF   x58,W
228E:  SUBWF  x52,W
2290:  MOVWF  x5A
2292:  MOVF   x57,W
2294:  ADDWF  x53,W
2296:  MOVWF  x5B
2298:  MOVF   x58,W
229A:  ADDWF  x52,W
229C:  MOVWF  x5C
229E:  MOVF   x57,W
22A0:  ADDWF  x53,W
22A2:  MOVWF  x5D
22A4:  MOVFF  65A,65E
22A8:  MOVFF  65B,65F
22AC:  MOVFF  65C,660
22B0:  MOVWF  x61
22B2:  MOVFF  656,662
22B6:  MOVLB  0
22B8:  CALL   136C
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
22BC:  MOVLB  6
22BE:  MOVF   x58,W
22C0:  SUBWF  x52,W
22C2:  MOVWF  x5A
22C4:  MOVF   x57,W
22C6:  SUBWF  x53,W
22C8:  MOVWF  x5B
22CA:  MOVF   x58,W
22CC:  ADDWF  x52,W
22CE:  MOVWF  x5C
22D0:  MOVF   x57,W
22D2:  SUBWF  x53,W
22D4:  MOVWF  x5D
22D6:  MOVFF  65A,65E
22DA:  MOVFF  65B,65F
22DE:  MOVFF  65C,660
22E2:  MOVWF  x61
22E4:  MOVFF  656,662
22E8:  MOVLB  0
22EA:  CALL   136C
....................       } 
....................       else 
22EE:  BRA    23E0
22F0:  MOVLB  6
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
22F2:  MOVF   x52,W
22F4:  ADDWF  x57,W
22F6:  MOVWF  x5A
22F8:  MOVF   x53,W
22FA:  ADDWF  x58,W
22FC:  MOVWF  x5B
22FE:  MOVFF  65A,66E
2302:  MOVWF  x6F
2304:  MOVFF  656,670
2308:  MOVLB  0
230A:  CALL   10F8
....................          glcd_pixel(b+x, a+y, color); 
230E:  MOVLB  6
2310:  MOVF   x52,W
2312:  ADDWF  x58,W
2314:  MOVWF  x5A
2316:  MOVF   x53,W
2318:  ADDWF  x57,W
231A:  MOVWF  x5B
231C:  MOVFF  65A,66E
2320:  MOVWF  x6F
2322:  MOVFF  656,670
2326:  MOVLB  0
2328:  CALL   10F8
....................          glcd_pixel(x-a, b+y, color); 
232C:  MOVLB  6
232E:  MOVF   x57,W
2330:  SUBWF  x52,W
2332:  MOVWF  x5A
2334:  MOVF   x53,W
2336:  ADDWF  x58,W
2338:  MOVWF  x5B
233A:  MOVFF  65A,66E
233E:  MOVWF  x6F
2340:  MOVFF  656,670
2344:  MOVLB  0
2346:  CALL   10F8
....................          glcd_pixel(x-b, a+y, color); 
234A:  MOVLB  6
234C:  MOVF   x58,W
234E:  SUBWF  x52,W
2350:  MOVWF  x5A
2352:  MOVF   x53,W
2354:  ADDWF  x57,W
2356:  MOVWF  x5B
2358:  MOVFF  65A,66E
235C:  MOVWF  x6F
235E:  MOVFF  656,670
2362:  MOVLB  0
2364:  CALL   10F8
....................          glcd_pixel(b+x, y-a, color); 
2368:  MOVLB  6
236A:  MOVF   x52,W
236C:  ADDWF  x58,W
236E:  MOVWF  x5A
2370:  MOVF   x57,W
2372:  SUBWF  x53,W
2374:  MOVWF  x5B
2376:  MOVFF  65A,66E
237A:  MOVWF  x6F
237C:  MOVFF  656,670
2380:  MOVLB  0
2382:  CALL   10F8
....................          glcd_pixel(a+x, y-b, color); 
2386:  MOVLB  6
2388:  MOVF   x52,W
238A:  ADDWF  x57,W
238C:  MOVWF  x5A
238E:  MOVF   x58,W
2390:  SUBWF  x53,W
2392:  MOVWF  x5B
2394:  MOVFF  65A,66E
2398:  MOVWF  x6F
239A:  MOVFF  656,670
239E:  MOVLB  0
23A0:  CALL   10F8
....................          glcd_pixel(x-a, y-b, color); 
23A4:  MOVLB  6
23A6:  MOVF   x57,W
23A8:  SUBWF  x52,W
23AA:  MOVWF  x5A
23AC:  MOVF   x58,W
23AE:  SUBWF  x53,W
23B0:  MOVWF  x5B
23B2:  MOVFF  65A,66E
23B6:  MOVWF  x6F
23B8:  MOVFF  656,670
23BC:  MOVLB  0
23BE:  CALL   10F8
....................          glcd_pixel(x-b, y-a, color); 
23C2:  MOVLB  6
23C4:  MOVF   x58,W
23C6:  SUBWF  x52,W
23C8:  MOVWF  x5A
23CA:  MOVF   x57,W
23CC:  SUBWF  x53,W
23CE:  MOVWF  x5B
23D0:  MOVFF  65A,66E
23D4:  MOVWF  x6F
23D6:  MOVFF  656,670
23DA:  MOVLB  0
23DC:  CALL   10F8
....................       } 
....................  
....................       if(P < 0) 
23E0:  MOVLB  6
23E2:  BTFSC  x59.7
23E4:  BRA    23E8
23E6:  BRA    2404
....................          P += 3 + 2 * a++; 
23E8:  MOVF   x57,W
23EA:  INCF   x57,F
23EC:  MOVWF  x5A
23EE:  MOVLW  02
23F0:  MOVWF  x5B
23F2:  MOVFF  65A,65C
23F6:  MOVLB  0
23F8:  RCALL  21C6
23FA:  MOVF   01,W
23FC:  ADDLW  03
23FE:  MOVLB  6
2400:  ADDWF  x59,F
....................       else 
2402:  BRA    2426
....................          P += 5 + 2 * (a++ - b--); 
2404:  MOVF   x57,W
2406:  INCF   x57,F
2408:  MOVWF  x5A
240A:  MOVF   x58,W
240C:  DECF   x58,F
240E:  SUBWF  x5A,W
2410:  MOVWF  x5A
2412:  MOVLW  02
2414:  MOVWF  x5B
2416:  MOVFF  65A,65C
241A:  MOVLB  0
241C:  RCALL  21C6
241E:  MOVF   01,W
2420:  ADDLW  05
2422:  MOVLB  6
2424:  ADDWF  x59,F
....................     } while(a <= b); 
2426:  MOVF   x57,W
2428:  XORLW  80
242A:  MOVWF  00
242C:  MOVF   x58,W
242E:  XORLW  80
2430:  SUBWF  00,W
2432:  BTFSC  FD8.2
2434:  BRA    2224
2436:  BTFSS  FD8.0
2438:  BRA    2224
.................... } 
243A:  MOVLB  0
243C:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
11B4:  MOVFF  655,03
11B8:  MOVLB  6
11BA:  MOVFF  654,FE9
11BE:  MOVFF  655,FEA
11C2:  MOVF   FEF,F
11C4:  BTFSC  FD8.2
11C6:  BRA    1368
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
11C8:  MOVFF  655,03
11CC:  MOVFF  654,FE9
11D0:  MOVFF  655,FEA
11D4:  MOVF   FEF,W
11D6:  SUBLW  52
11D8:  BNC   1228
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
11DA:  MOVFF  655,03
11DE:  MOVFF  654,FE9
11E2:  MOVFF  655,FEA
11E6:  MOVLW  20
11E8:  SUBWF  FEF,W
11EA:  MULLW  05
11EC:  MOVF   FF3,W
11EE:  CLRF   03
11F0:  MOVWF  x61
11F2:  MOVLW  06
11F4:  MOVWF  FEA
11F6:  MOVLW  5C
11F8:  MOVWF  FE9
11FA:  CLRF   x65
11FC:  MOVFF  661,664
1200:  MOVFF  FF2,662
1204:  BCF    FF2.7
1206:  MOVLW  05
1208:  MOVWF  01
120A:  CLRF   FF7
120C:  MOVF   x61,W
120E:  MOVLB  0
1210:  CALL   0096
1214:  TBLRD*-
1216:  TBLRD*+
1218:  MOVFF  FF5,FEE
121C:  DECFSZ 01,F
121E:  BRA    1216
1220:  MOVLB  6
1222:  BTFSC  x62.7
1224:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
1226:  BRA    1292
1228:  MOVFF  655,03
122C:  MOVFF  654,FE9
1230:  MOVFF  655,FEA
1234:  MOVF   FEF,W
1236:  SUBLW  7E
1238:  BNC   1288
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
123A:  MOVFF  655,03
123E:  MOVFF  654,FE9
1242:  MOVFF  655,FEA
1246:  MOVLW  53
1248:  SUBWF  FEF,W
124A:  MULLW  05
124C:  MOVF   FF3,W
124E:  CLRF   03
1250:  MOVWF  x61
1252:  MOVLW  06
1254:  MOVWF  FEA
1256:  MOVLW  5C
1258:  MOVWF  FE9
125A:  CLRF   x65
125C:  MOVFF  661,664
1260:  MOVFF  FF2,662
1264:  BCF    FF2.7
1266:  MOVLW  05
1268:  MOVWF  01
126A:  CLRF   FF7
126C:  MOVF   x61,W
126E:  MOVLB  0
1270:  CALL   01B0
1274:  TBLRD*-
1276:  TBLRD*+
1278:  MOVFF  FF5,FEE
127C:  DECFSZ 01,F
127E:  BRA    1276
1280:  MOVLB  6
1282:  BTFSC  x62.7
1284:  BSF    FF2.7
....................       else 
1286:  BRA    1292
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
1288:  CLRF   x5C
128A:  CLRF   x5D
128C:  CLRF   x5E
128E:  CLRF   x5F
1290:  CLRF   x60
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1292:  MOVFF  655,03
1296:  MOVF   x54,W
1298:  MOVWF  FE9
129A:  MOVFF  03,FEA
129E:  MOVF   FEF,W
12A0:  XORLW  0A
12A2:  MOVLB  0
12A4:  BZ    12AC
12A6:  XORLW  07
12A8:  BZ    12BC
12AA:  BRA    12C2
....................          case '\n': 
....................             y += 7*size + 1; 
12AC:  MOVLB  6
12AE:  MOVF   x56,W
12B0:  MULLW  07
12B2:  MOVF   FF3,W
12B4:  ADDLW  01
12B6:  ADDWF  x53,F
....................             continue; 
12B8:  BRA    135A
12BA:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
12BC:  MOVLB  6
12BE:  CLRF   x52
....................             continue; 
12C0:  BRA    135A
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
12C2:  MOVLB  6
12C4:  MOVF   x56,W
12C6:  MULLW  05
12C8:  MOVF   FF3,W
12CA:  ADDWF  x52,W
12CC:  SUBLW  7F
12CE:  BC    12DC
....................       { 
....................          x = 0;                           // Set x at far left position 
12D0:  CLRF   x52
....................          y += 7*size + 1;                 // Set y at next position down 
12D2:  MOVF   x56,W
12D4:  MULLW  07
12D6:  MOVF   FF3,W
12D8:  ADDLW  01
12DA:  ADDWF  x53,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
12DC:  CLRF   x58
12DE:  MOVF   x58,W
12E0:  SUBLW  04
12E2:  BNC   135A
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
12E4:  CLRF   x59
12E6:  MOVF   x59,W
12E8:  SUBLW  06
12EA:  BNC   1352
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
12EC:  CLRF   03
12EE:  MOVF   x58,W
12F0:  ADDLW  5C
12F2:  MOVWF  FE9
12F4:  MOVLW  06
12F6:  ADDWFC 03,W
12F8:  MOVWF  FEA
12FA:  MOVFF  FEF,661
12FE:  MOVFF  661,00
1302:  MOVF   x59,W
1304:  MOVWF  01
1306:  BZ    1310
1308:  BCF    FD8.0
130A:  RRCF   00,F
130C:  DECFSZ 01,F
130E:  BRA    1308
1310:  BTFSS  00.0
1312:  BRA    134E
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
1314:  CLRF   x5A
1316:  MOVF   x56,W
1318:  SUBWF  x5A,W
131A:  BC    134E
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
131C:  CLRF   x5B
131E:  MOVF   x56,W
1320:  SUBWF  x5B,W
1322:  BC    134A
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
1324:  MOVF   x5B,W
1326:  ADDWF  x52,W
1328:  MOVWF  x61
132A:  MOVF   x59,W
132C:  MULWF  x56
132E:  MOVF   FF3,W
1330:  ADDWF  x53,W
1332:  ADDWF  x5A,W
1334:  MOVWF  x62
1336:  MOVFF  661,66E
133A:  MOVWF  x6F
133C:  MOVFF  657,670
1340:  MOVLB  0
1342:  RCALL  10F8
....................                   } 
1344:  MOVLB  6
1346:  INCF   x5B,F
1348:  BRA    131E
....................                } 
134A:  INCF   x5A,F
134C:  BRA    1316
....................             } 
....................          } 
134E:  INCF   x59,F
1350:  BRA    12E6
....................       } 
1352:  INCF   x58,F
1354:  MOVF   x56,W
1356:  ADDWF  x52,F
1358:  BRA    12DE
....................    } 
135A:  INCF   x54,F
135C:  BTFSC  FD8.2
135E:  INCF   x55,F
1360:  INCF   x52,F
1362:  MOVLB  0
1364:  BRA    11B4
1366:  MOVLB  6
.................... } 
1368:  MOVLB  0
136A:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Horno [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x00, 0x00, 0x0E, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x02, 0x00, 0x0E, 
.................... 0x60, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x05, 0x00, 0x0E, 
.................... 0x70, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x02, 0x00, 0x0E, 
.................... 0x60, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xE1, 0xC0, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x01, 0x80, 0x60, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x78, 0x10, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x06, 0x7C, 0x18, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0x7C, 0x08, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x3C, 0x04, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x10, 0x04, 0x0E, 
.................... 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x0C, 0xE4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x2D, 0xF4, 0x0E, 
.................... 0x02, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x63, 0xF4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0xF1, 0xE4, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x70, 0x10, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x30, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xC0, 0xC0, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x7F, 0x80, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
.................... // Definición de teclado - NO 
.................... #define   ARRIBA        input(PIN_A5) 
.................... #define   ABAJO         input(PIN_E0) 
.................... #define   DERECHA       input(PIN_E1) 
.................... #define   IZQUIERDA     input(PIN_E2) 
....................  
.................... #define   DOOR          input(PIN_A4) 
.................... #define   TERM          input(PIN_A3) 
....................  
....................  
.................... // Definición de Salidas 
.................... #define   Rele1_on          output_bit(PIN_C0,1) 
.................... #define   Rele1_off         output_bit(PIN_C0,0) 
.................... //#define   Vent_on           output_bit(PIN_C1,1) 
.................... //#define   Vent_off          output_bit(PIN_C1,0) 
.................... #define   SSR_on            output_bit(PIN_C2,1) 
.................... #define   SSR_off           output_bit(PIN_C2,0) 
.................... #define   Buzzer_on         output_bit(PIN_B7,1) 
.................... #define   Buzzer_off        output_bit(PIN_B7,0) 
.................... #define   Rele2_on          output_bit(PIN_C6,1) 
.................... #define   Rele2_off         output_bit(PIN_C6,0) 
.................... #define   Rele3_on          output_bit(PIN_C7,1) 
.................... #define   Rele3_off         output_bit(PIN_C7,0) 
....................  
.................... float promedio[90]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float X[2]={0.0,0.0}; 
.................... short UP=0,DOWN=0,RIGHT=0,LEFT=0,flagup=0,flagdn=0,flagrt=0,flaglt=0,Desconectado=0; 
.................... int8 h=0,l=0,Ajuste=0,Ajusten=0,MediaMovil=10,tiemporecta=0,flag_ganancia=0,saturado=0,Velocidad=3,Lectura2=0,Enfria=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,visual=1,Lectura=0; 
.................... short flag_clear=0,flag_clear2=0,flag_clear3=0,flag_clear4=0,flag_tiempocalentamiento=0,flag_display=0,flag_setpoint=0,flag_control=0; 
.................... int8 y=0,tiemporeset=0; 
.................... int8 Menu=0, unidad=1,i=0,Pausa=0,Pausa_ant=0,TiempoControl=0; 
.................... int8 Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,tinicio=0,tiempocalentamiento=0,tiemposetpoint=0,Setpoint=0,Temperatura1=0,Temperatura2=0,Temperatura3=0; 
.................... float Potencia=0.0,Tpulsomin=0.0,Gananciamax=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float V0=0.0,R1=10000.0,Pt,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=25.0,Ganancia2=20.0,desvio=1.0,Coeficiente=38.0; 
.................... float Aumento=0.0,Temperatura=0.0,Saturacion=10.0,Tpulsomax=0.0; 
.................... float a=0.0011,b=2.3302,c=-244.0723; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void ActualizaRecta(){ 
....................    X[y]=Temperatura; 
*
2C1E:  MOVLB  5
2C20:  MOVF   x94,W
2C22:  MULLW  04
2C24:  MOVF   FF3,W
2C26:  CLRF   03
2C28:  ADDLW  7E
2C2A:  MOVWF  FE9
2C2C:  MOVLW  05
2C2E:  ADDWFC 03,W
2C30:  MOVWF  FEA
2C32:  MOVFF  607,FEF
2C36:  MOVFF  608,FEC
2C3A:  MOVFF  609,FEC
2C3E:  MOVFF  60A,FEC
....................    y++; 
2C42:  INCF   x94,F
....................    if(y>=2) 
2C44:  MOVF   x94,W
2C46:  SUBLW  01
2C48:  BC    2C86
....................    { 
....................       y=0; 
2C4A:  CLRF   x94
....................       Aumento=X[1]-X[0]; 
2C4C:  BSF    FD8.1
2C4E:  MOVFF  585,647
2C52:  MOVFF  584,646
2C56:  MOVFF  583,645
2C5A:  MOVFF  582,644
2C5E:  MOVFF  581,64B
2C62:  MOVFF  580,64A
2C66:  MOVFF  57F,649
2C6A:  MOVFF  57E,648
2C6E:  MOVLB  0
2C70:  CALL   1A00
2C74:  MOVFF  03,606
2C78:  MOVFF  02,605
2C7C:  MOVFF  01,604
2C80:  MOVFF  00,603
2C84:  MOVLB  5
....................    } 
.................... } 
2C86:  MOVLB  0
2C88:  GOTO   2CD4 (RETURN)
....................  
.................... void Velocidades(int x){ 
....................  
.................... if(x==0) 
*
0E26:  MOVLB  6
0E28:  MOVF   x3F,F
0E2A:  BNZ   0E2E
.................... { 
....................    set_pwm2_duty(0); 
0E2C:  CLRF   FBB
.................... } 
....................  
.................... if(x==1) 
0E2E:  DECFSZ x3F,W
0E30:  BRA    0E36
.................... { 
....................    set_pwm2_duty(128); 
0E32:  MOVLW  80
0E34:  MOVWF  FBB
.................... } 
....................  
.................... if(x==2) 
0E36:  MOVF   x3F,W
0E38:  SUBLW  02
0E3A:  BNZ   0E40
.................... { 
....................    set_pwm2_duty(180); 
0E3C:  MOVLW  B4
0E3E:  MOVWF  FBB
.................... } 
....................  
.................... if(x==3) 
0E40:  MOVF   x3F,W
0E42:  SUBLW  03
0E44:  BNZ   0E4A
.................... { 
....................    set_pwm2_duty(255); 
0E46:  MOVLW  FF
0E48:  MOVWF  FBB
.................... } 
....................  
.................... } 
0E4A:  MOVLB  0
0E4C:  RETLW  00
....................  
.................... void Teclado(void){ 
....................  
....................    if(ARRIBA) 
*
2134:  BSF    F92.5
2136:  BTFSS  F80.5
2138:  BRA    2146
....................    { 
....................       if(!flagup) 
213A:  MOVLB  5
213C:  BTFSC  x86.4
213E:  BRA    2144
....................       { 
....................          UP=1; 
2140:  BSF    x86.0
....................          flagup=1; 
2142:  BSF    x86.4
2144:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!ARRIBA) 
2146:  BSF    F92.5
2148:  BTFSC  F80.5
214A:  BRA    2158
....................    { 
....................       if(flagup) 
214C:  MOVLB  5
214E:  BTFSS  x86.4
2150:  BRA    2156
....................       { 
....................          UP=1; 
2152:  BSF    x86.0
....................          flagup=0; 
2154:  BCF    x86.4
2156:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(ABAJO) 
2158:  BSF    F96.0
215A:  BTFSS  F84.0
215C:  BRA    216A
....................    { 
....................       if(!flagdn) 
215E:  MOVLB  5
2160:  BTFSC  x86.5
2162:  BRA    2168
....................       { 
....................          DOWN=1; 
2164:  BSF    x86.1
....................          flagdn=1; 
2166:  BSF    x86.5
2168:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!ABAJO) 
216A:  BSF    F96.0
216C:  BTFSC  F84.0
216E:  BRA    217C
....................    { 
....................       if(flagdn) 
2170:  MOVLB  5
2172:  BTFSS  x86.5
2174:  BRA    217A
....................       { 
....................          DOWN=1; 
2176:  BSF    x86.1
....................          flagdn=0; 
2178:  BCF    x86.5
217A:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(DERECHA) 
217C:  BSF    F96.1
217E:  BTFSS  F84.1
2180:  BRA    218E
....................    { 
....................       if(!flagrt) 
2182:  MOVLB  5
2184:  BTFSC  x86.6
2186:  BRA    218C
....................       { 
....................          RIGHT=1; 
2188:  BSF    x86.2
....................          flagrt=1; 
218A:  BSF    x86.6
218C:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!DERECHA) 
218E:  BSF    F96.1
2190:  BTFSC  F84.1
2192:  BRA    21A0
....................    { 
....................       if(flagrt) 
2194:  MOVLB  5
2196:  BTFSS  x86.6
2198:  BRA    219E
....................       { 
....................          RIGHT=1; 
219A:  BSF    x86.2
....................          flagrt=0; 
219C:  BCF    x86.6
219E:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(IZQUIERDA) 
21A0:  BSF    F96.2
21A2:  BTFSS  F84.2
21A4:  BRA    21B2
....................    { 
....................       if(!flaglt) 
21A6:  MOVLB  5
21A8:  BTFSC  x86.7
21AA:  BRA    21B0
....................       { 
....................          LEFT=1; 
21AC:  BSF    x86.3
....................          flaglt=1; 
21AE:  BSF    x86.7
21B0:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!IZQUIERDA) 
21B2:  BSF    F96.2
21B4:  BTFSC  F84.2
21B6:  BRA    21C2
....................    { 
....................       if(flaglt) 
21B8:  MOVLB  5
21BA:  BTFSS  x86.7
21BC:  BRA    21C2
....................       { 
....................          LEFT=1; 
21BE:  BSF    x86.3
....................          flaglt=0; 
21C0:  BCF    x86.7
21C2:  MOVLB  0
....................       } 
....................    } 
.................... } 
21C4:  RETLW  00
....................  
.................... // Funcion para conversor analogo-digital 
.................... float sensores(int x){ 
.................... float y;set_adc_channel(x);delay_ms(1);y=read_adc();return (y); 
*
1848:  MOVLB  6
184A:  RLCF   x40,W
184C:  MOVWF  00
184E:  RLCF   00,F
1850:  MOVLW  FC
1852:  ANDWF  00,F
1854:  MOVFF  00,01
1858:  MOVF   FC2,W
185A:  ANDLW  C3
185C:  IORWF  00,W
185E:  MOVWF  FC2
1860:  MOVLW  01
1862:  MOVWF  x45
1864:  MOVLB  0
1866:  CALL   0DFC
186A:  BSF    FC2.1
186C:  BTFSC  FC2.1
186E:  BRA    186C
1870:  MOVFF  FC4,646
1874:  MOVFF  FC3,645
1878:  MOVLB  0
187A:  CALL   0E4E
187E:  MOVFF  03,644
1882:  MOVFF  02,643
1886:  MOVFF  01,642
188A:  MOVFF  00,641
188E:  MOVFF  641,00
1892:  MOVFF  642,01
1896:  MOVFF  643,02
189A:  MOVFF  644,03
.................... } 
189E:  GOTO   1DA2 (RETURN)
.................... float Leer_Sensor(int media) 
.................... { 
....................    Prom=0.0; 
*
1D90:  MOVLB  5
1D92:  CLRF   xEA
1D94:  CLRF   xE9
1D96:  CLRF   xE8
1D98:  CLRF   xE7
....................    V0 = sensores(0);   //Lectura de Divisor de Voltaje de PT100 con resistencia de 6.18k (+-2%) 
1D9A:  MOVLB  6
1D9C:  CLRF   x40
1D9E:  MOVLB  0
1DA0:  BRA    1848
1DA2:  MOVFF  03,5D2
1DA6:  MOVFF  02,5D1
1DAA:  MOVFF  01,5D0
1DAE:  MOVFF  00,5CF
....................    V0 = V0/40.6; // Se elimina la ganancia 
1DB2:  MOVFF  5D2,643
1DB6:  MOVFF  5D1,642
1DBA:  MOVFF  5D0,641
1DBE:  MOVFF  5CF,640
1DC2:  MOVLW  66
1DC4:  MOVLB  6
1DC6:  MOVWF  x47
1DC8:  MOVWF  x46
1DCA:  MOVLW  22
1DCC:  MOVWF  x45
1DCE:  MOVLW  84
1DD0:  MOVWF  x44
1DD2:  MOVLB  0
1DD4:  RCALL  18A2
1DD6:  MOVFF  03,5D2
1DDA:  MOVFF  02,5D1
1DDE:  MOVFF  01,5D0
1DE2:  MOVFF  00,5CF
....................    Pt=(R1)/((1023.0/V0)-1.0); // Se calcula el valor de la PT100 
1DE6:  MOVLB  6
1DE8:  CLRF   x43
1DEA:  MOVLW  C0
1DEC:  MOVWF  x42
1DEE:  MOVLW  7F
1DF0:  MOVWF  x41
1DF2:  MOVLW  88
1DF4:  MOVWF  x40
1DF6:  MOVFF  5D2,647
1DFA:  MOVFF  5D1,646
1DFE:  MOVFF  5D0,645
1E02:  MOVFF  5CF,644
1E06:  MOVLB  0
1E08:  RCALL  18A2
1E0A:  MOVFF  00,640
1E0E:  MOVFF  01,641
1E12:  MOVFF  02,642
1E16:  MOVFF  03,643
1E1A:  BSF    FD8.1
1E1C:  MOVFF  03,647
1E20:  MOVFF  02,646
1E24:  MOVFF  01,645
1E28:  MOVFF  00,644
1E2C:  MOVLB  6
1E2E:  CLRF   x4B
1E30:  CLRF   x4A
1E32:  CLRF   x49
1E34:  MOVLW  7F
1E36:  MOVWF  x48
1E38:  MOVLB  0
1E3A:  RCALL  1A00
1E3C:  MOVFF  5D6,643
1E40:  MOVFF  5D5,642
1E44:  MOVFF  5D4,641
1E48:  MOVFF  5D3,640
1E4C:  MOVFF  03,647
1E50:  MOVFF  02,646
1E54:  MOVFF  01,645
1E58:  MOVFF  00,644
1E5C:  RCALL  18A2
1E5E:  MOVFF  03,5DA
1E62:  MOVFF  02,5D9
1E66:  MOVFF  01,5D8
1E6A:  MOVFF  00,5D7
....................    //Pt=R1/((1023.0/V0)-1.0); // Se calcula el valor de la PT100 
....................    Pt=Pt-0.3; 
1E6E:  BSF    FD8.1
1E70:  MOVFF  5DA,647
1E74:  MOVFF  5D9,646
1E78:  MOVFF  5D8,645
1E7C:  MOVFF  5D7,644
1E80:  MOVLW  9A
1E82:  MOVLB  6
1E84:  MOVWF  x4B
1E86:  MOVLW  99
1E88:  MOVWF  x4A
1E8A:  MOVLW  19
1E8C:  MOVWF  x49
1E8E:  MOVLW  7D
1E90:  MOVWF  x48
1E92:  MOVLB  0
1E94:  RCALL  1A00
1E96:  MOVFF  03,5DA
1E9A:  MOVFF  02,5D9
1E9E:  MOVFF  01,5D8
1EA2:  MOVFF  00,5D7
....................     
....................              
....................    if(l>(media-1)) 
1EA6:  MOVLW  01
1EA8:  MOVLB  6
1EAA:  SUBWF  x3F,W
1EAC:  MOVLB  5
1EAE:  SUBWF  x89,W
1EB0:  BZ    1EB6
1EB2:  BNC   1EB6
....................    {l=0;} 
1EB4:  CLRF   x89
....................    //promedio[l]=Temperature;l++; 
....................    promedio[l]=Pt;l++; 
1EB6:  MOVLB  6
1EB8:  CLRF   x44
1EBA:  MOVFF  589,643
1EBE:  CLRF   x46
1EC0:  MOVLW  04
1EC2:  MOVWF  x45
1EC4:  MOVLB  0
1EC6:  RCALL  1C78
1EC8:  MOVF   01,W
1ECA:  ADDLW  16
1ECC:  MOVWF  FE9
1ECE:  MOVLW  04
1ED0:  ADDWFC 02,W
1ED2:  MOVWF  FEA
1ED4:  MOVFF  5D7,FEF
1ED8:  MOVFF  5D8,FEC
1EDC:  MOVFF  5D9,FEC
1EE0:  MOVFF  5DA,FEC
1EE4:  MOVLB  5
1EE6:  INCF   x89,F
....................           
....................    for(h=0;h<media;h++) 
1EE8:  CLRF   x88
1EEA:  MOVLB  6
1EEC:  MOVF   x3F,W
1EEE:  MOVLB  5
1EF0:  SUBWF  x88,W
1EF2:  BC    1F70
....................    { 
....................       Prom+=promedio[h]; 
1EF4:  MOVLB  6
1EF6:  CLRF   x44
1EF8:  MOVFF  588,643
1EFC:  CLRF   x46
1EFE:  MOVLW  04
1F00:  MOVWF  x45
1F02:  MOVLB  0
1F04:  RCALL  1C78
1F06:  MOVFF  02,03
1F0A:  MOVF   01,W
1F0C:  ADDLW  16
1F0E:  MOVWF  FE9
1F10:  MOVLW  04
1F12:  ADDWFC 02,W
1F14:  MOVWF  FEA
1F16:  MOVFF  FEF,00
1F1A:  MOVFF  FEC,01
1F1E:  MOVFF  FEC,02
1F22:  MOVFF  FEC,03
1F26:  MOVFF  FEA,641
1F2A:  MOVFF  FE9,640
1F2E:  BCF    FD8.1
1F30:  MOVFF  5EA,647
1F34:  MOVFF  5E9,646
1F38:  MOVFF  5E8,645
1F3C:  MOVFF  5E7,644
1F40:  MOVFF  03,64B
1F44:  MOVFF  02,64A
1F48:  MOVFF  01,649
1F4C:  MOVFF  00,648
1F50:  RCALL  1A00
1F52:  MOVFF  641,FEA
1F56:  MOVFF  640,FE9
1F5A:  MOVFF  03,5EA
1F5E:  MOVFF  02,5E9
1F62:  MOVFF  01,5E8
1F66:  MOVFF  00,5E7
....................    }  
1F6A:  MOVLB  5
1F6C:  INCF   x88,F
1F6E:  BRA    1EEA
....................    Prom=Prom/media;    
1F70:  MOVLB  6
1F72:  CLRF   x46
1F74:  MOVFF  63F,645
1F78:  MOVLB  0
1F7A:  CALL   0E4E
1F7E:  MOVFF  5EA,643
1F82:  MOVFF  5E9,642
1F86:  MOVFF  5E8,641
1F8A:  MOVFF  5E7,640
1F8E:  MOVFF  03,647
1F92:  MOVFF  02,646
1F96:  MOVFF  01,645
1F9A:  MOVFF  00,644
1F9E:  RCALL  18A2
1FA0:  MOVFF  03,5EA
1FA4:  MOVFF  02,5E9
1FA8:  MOVFF  01,5E8
1FAC:  MOVFF  00,5E7
....................    //Temperature=(Prom-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
....................    Temperature=((Prom*Prom)*a)+(Prom*b)+c;  // Ecuación determinada por linealización en Matlab. Revisar este polinomio. 
1FB0:  MOVFF  5EA,65F
1FB4:  MOVFF  5E9,65E
1FB8:  MOVFF  5E8,65D
1FBC:  MOVFF  5E7,65C
1FC0:  MOVFF  5EA,663
1FC4:  MOVFF  5E9,662
1FC8:  MOVFF  5E8,661
1FCC:  MOVFF  5E7,660
1FD0:  RCALL  1C9A
1FD2:  MOVFF  00,640
1FD6:  MOVFF  01,641
1FDA:  MOVFF  02,642
1FDE:  MOVFF  03,643
1FE2:  MOVFF  03,65F
1FE6:  MOVFF  02,65E
1FEA:  MOVFF  01,65D
1FEE:  MOVFF  00,65C
1FF2:  MOVFF  616,663
1FF6:  MOVFF  615,662
1FFA:  MOVFF  614,661
1FFE:  MOVFF  613,660
2002:  RCALL  1C9A
2004:  MOVFF  00,640
2008:  MOVFF  01,641
200C:  MOVFF  02,642
2010:  MOVFF  03,643
2014:  MOVFF  5EA,65F
2018:  MOVFF  5E9,65E
201C:  MOVFF  5E8,65D
2020:  MOVFF  5E7,65C
2024:  MOVFF  61A,663
2028:  MOVFF  619,662
202C:  MOVFF  618,661
2030:  MOVFF  617,660
2034:  RCALL  1C9A
2036:  BCF    FD8.1
2038:  MOVFF  643,647
203C:  MOVFF  642,646
2040:  MOVFF  641,645
2044:  MOVFF  640,644
2048:  MOVFF  03,64B
204C:  MOVFF  02,64A
2050:  MOVFF  01,649
2054:  MOVFF  00,648
2058:  RCALL  1A00
205A:  MOVFF  00,640
205E:  MOVFF  01,641
2062:  MOVFF  02,642
2066:  MOVFF  03,643
206A:  BCF    FD8.1
206C:  MOVFF  03,647
2070:  MOVFF  02,646
2074:  MOVFF  01,645
2078:  MOVFF  00,644
207C:  MOVFF  61E,64B
2080:  MOVFF  61D,64A
2084:  MOVFF  61C,649
2088:  MOVFF  61B,648
208C:  RCALL  1A00
208E:  MOVFF  03,5EE
2092:  MOVFF  02,5ED
2096:  MOVFF  01,5EC
209A:  MOVFF  00,5EB
....................     
....................    Temperature+=((float)Ajuste-(float)Ajusten); 
209E:  MOVLB  6
20A0:  CLRF   x46
20A2:  MOVFF  58A,645
20A6:  MOVLB  0
20A8:  CALL   0E4E
20AC:  MOVFF  00,640
20B0:  MOVFF  01,641
20B4:  MOVFF  02,642
20B8:  MOVFF  03,643
20BC:  MOVLB  6
20BE:  CLRF   x46
20C0:  MOVFF  58B,645
20C4:  MOVLB  0
20C6:  CALL   0E4E
20CA:  BSF    FD8.1
20CC:  MOVFF  643,647
20D0:  MOVFF  642,646
20D4:  MOVFF  641,645
20D8:  MOVFF  640,644
20DC:  MOVFF  03,64B
20E0:  MOVFF  02,64A
20E4:  MOVFF  01,649
20E8:  MOVFF  00,648
20EC:  RCALL  1A00
20EE:  BCF    FD8.1
20F0:  MOVFF  5EE,647
20F4:  MOVFF  5ED,646
20F8:  MOVFF  5EC,645
20FC:  MOVFF  5EB,644
2100:  MOVFF  03,64B
2104:  MOVFF  02,64A
2108:  MOVFF  01,649
210C:  MOVFF  00,648
2110:  RCALL  1A00
2112:  MOVFF  03,5EE
2116:  MOVFF  02,5ED
211A:  MOVFF  01,5EC
211E:  MOVFF  00,5EB
....................     
....................    //return Prom; 
....................    return Temperature; 
2122:  MOVFF  5EB,00
2126:  MOVFF  5EC,01
212A:  MOVFF  5ED,02
212E:  MOVFF  5EE,03
.................... } 
2132:  RETLW  00
....................  
.................... void Controla(){ 
.................... //-------------------------------Control de Calentamiento------------------------------------------------------------//          
....................    if(tiemporecta>=40) 
*
2CC8:  MOVLB  5
2CCA:  MOVF   x8D,W
2CCC:  SUBLW  27
2CCE:  BC    2CD8
....................    { 
....................       ActualizaRecta(); 
2CD0:  MOVLB  0
2CD2:  BRA    2C1E
....................       tiemporecta=0; 
2CD4:  MOVLB  5
2CD6:  CLRF   x8D
....................    }  
....................    
....................    if(Enfria==1) 
2CD8:  DECFSZ x92,W
2CDA:  BRA    30A2
....................    { 
....................       error=Setpoint-desvio-Temperatura;      // Cálculo del error ****** 
2CDC:  MOVFF  5AC,646
2CE0:  MOVFF  5AB,645
2CE4:  MOVLB  0
2CE6:  CALL   0E4E
2CEA:  BSF    FD8.1
2CEC:  MOVFF  03,647
2CF0:  MOVFF  02,646
2CF4:  MOVFF  01,645
2CF8:  MOVFF  00,644
2CFC:  MOVFF  5FE,64B
2D00:  MOVFF  5FD,64A
2D04:  MOVFF  5FC,649
2D08:  MOVFF  5FB,648
2D0C:  CALL   1A00
2D10:  MOVFF  00,63F
2D14:  MOVFF  01,640
2D18:  MOVFF  02,641
2D1C:  MOVFF  03,642
2D20:  BSF    FD8.1
2D22:  MOVFF  03,647
2D26:  MOVFF  02,646
2D2A:  MOVFF  01,645
2D2E:  MOVFF  00,644
2D32:  MOVFF  60A,64B
2D36:  MOVFF  609,64A
2D3A:  MOVFF  608,649
2D3E:  MOVFF  607,648
2D42:  CALL   1A00
2D46:  MOVFF  03,5E6
2D4A:  MOVFF  02,5E5
2D4E:  MOVFF  01,5E4
2D52:  MOVFF  00,5E3
....................        
....................       if(error>-1.0 && Aumento>-0.2) 
2D56:  MOVLB  6
2D58:  CLRF   x42
2D5A:  CLRF   x41
2D5C:  MOVLW  80
2D5E:  MOVWF  x40
2D60:  MOVLW  7F
2D62:  MOVWF  x3F
2D64:  MOVFF  5E6,646
2D68:  MOVFF  5E5,645
2D6C:  MOVFF  5E4,644
2D70:  MOVFF  5E3,643
2D74:  MOVLB  0
2D76:  CALL   0E84
2D7A:  BNC   2E08
2D7C:  MOVLW  CD
2D7E:  MOVLB  6
2D80:  MOVWF  x42
2D82:  MOVLW  CC
2D84:  MOVWF  x41
2D86:  MOVWF  x40
2D88:  MOVLW  7C
2D8A:  MOVWF  x3F
2D8C:  MOVFF  606,646
2D90:  MOVFF  605,645
2D94:  MOVFF  604,644
2D98:  MOVFF  603,643
2D9C:  MOVLB  0
2D9E:  CALL   0E84
2DA2:  BNC   2E08
....................       { 
....................          if(Potencia<90.0) 
2DA4:  MOVFF  5B6,642
2DA8:  MOVFF  5B5,641
2DAC:  MOVFF  5B4,640
2DB0:  MOVFF  5B3,63F
2DB4:  MOVLB  6
2DB6:  CLRF   x46
2DB8:  CLRF   x45
2DBA:  MOVLW  34
2DBC:  MOVWF  x44
2DBE:  MOVLW  85
2DC0:  MOVWF  x43
2DC2:  MOVLB  0
2DC4:  CALL   0E84
2DC8:  BNC   2E08
....................          { 
....................             if(TiempoControl>=80) 
2DCA:  MOVLB  5
2DCC:  MOVF   x9B,W
2DCE:  SUBLW  4F
2DD0:  BC    2E0A
....................             { 
....................                TiempoControl=0; 
2DD2:  CLRF   x9B
....................                Ganancia+=0.5; 
2DD4:  BCF    FD8.1
2DD6:  MOVFF  5F6,647
2DDA:  MOVFF  5F5,646
2DDE:  MOVFF  5F4,645
2DE2:  MOVFF  5F3,644
2DE6:  MOVLB  6
2DE8:  CLRF   x4B
2DEA:  CLRF   x4A
2DEC:  CLRF   x49
2DEE:  MOVLW  7E
2DF0:  MOVWF  x48
2DF2:  MOVLB  0
2DF4:  CALL   1A00
2DF8:  MOVFF  03,5F6
2DFC:  MOVFF  02,5F5
2E00:  MOVFF  01,5F4
2E04:  MOVFF  00,5F3
2E08:  MOVLB  5
....................             } 
....................          } 
....................       } 
....................     
....................       if(error>0.0)     // Anti Wind_DOWN 
2E0A:  MOVLB  6
2E0C:  CLRF   x42
2E0E:  CLRF   x41
2E10:  CLRF   x40
2E12:  CLRF   x3F
2E14:  MOVFF  5E6,646
2E18:  MOVFF  5E5,645
2E1C:  MOVFF  5E4,644
2E20:  MOVFF  5E3,643
2E24:  MOVLB  0
2E26:  CALL   0E84
2E2A:  BNC   2E36
....................       { 
....................          error=0.0; 
2E2C:  MOVLB  5
2E2E:  CLRF   xE6
2E30:  CLRF   xE5
2E32:  CLRF   xE4
2E34:  CLRF   xE3
....................       } 
....................       error=error*-1.0; 
2E36:  MOVFF  5E6,65F
2E3A:  MOVFF  5E5,65E
2E3E:  MOVFF  5E4,65D
2E42:  MOVFF  5E3,65C
2E46:  MOVLB  6
2E48:  CLRF   x63
2E4A:  CLRF   x62
2E4C:  MOVLW  80
2E4E:  MOVWF  x61
2E50:  MOVLW  7F
2E52:  MOVWF  x60
2E54:  MOVLB  0
2E56:  CALL   1C9A
2E5A:  MOVFF  03,5E6
2E5E:  MOVFF  02,5E5
2E62:  MOVFF  01,5E4
2E66:  MOVFF  00,5E3
....................        
....................       if(Ganancia<0.5) 
2E6A:  MOVFF  5F6,642
2E6E:  MOVFF  5F5,641
2E72:  MOVFF  5F4,640
2E76:  MOVFF  5F3,63F
2E7A:  MOVLB  6
2E7C:  CLRF   x46
2E7E:  CLRF   x45
2E80:  CLRF   x44
2E82:  MOVLW  7E
2E84:  MOVWF  x43
2E86:  MOVLB  0
2E88:  CALL   0E84
2E8C:  BNC   2E9C
....................       { 
....................          Ganancia=0.5; 
2E8E:  MOVLB  5
2E90:  CLRF   xF6
2E92:  CLRF   xF5
2E94:  CLRF   xF4
2E96:  MOVLW  7E
2E98:  MOVWF  xF3
2E9A:  MOVLB  0
....................       } 
....................       if(Ganancia>Gananciamax) 
2E9C:  MOVFF  5BE,642
2EA0:  MOVFF  5BD,641
2EA4:  MOVFF  5BC,640
2EA8:  MOVFF  5BB,63F
2EAC:  MOVFF  5F6,646
2EB0:  MOVFF  5F5,645
2EB4:  MOVFF  5F4,644
2EB8:  MOVFF  5F3,643
2EBC:  CALL   0E84
2EC0:  BNC   2ED2
....................       { 
....................          Ganancia=Gananciamax; 
2EC2:  MOVFF  5BE,5F6
2EC6:  MOVFF  5BD,5F5
2ECA:  MOVFF  5BC,5F4
2ECE:  MOVFF  5BB,5F3
....................       } 
....................     
....................       tmp=error*Ganancia;  // Control Proporcional. 
2ED2:  MOVFF  5E6,65F
2ED6:  MOVFF  5E5,65E
2EDA:  MOVFF  5E4,65D
2EDE:  MOVFF  5E3,65C
2EE2:  MOVFF  5F6,663
2EE6:  MOVFF  5F5,662
2EEA:  MOVFF  5F4,661
2EEE:  MOVFF  5F3,660
2EF2:  CALL   1C9A
2EF6:  MOVFF  03,5F2
2EFA:  MOVFF  02,5F1
2EFE:  MOVFF  01,5F0
2F02:  MOVFF  00,5EF
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
2F06:  MOVFF  5AC,646
2F0A:  MOVFF  5AB,645
2F0E:  CALL   0E4E
2F12:  MOVFF  03,642
2F16:  MOVFF  02,641
2F1A:  MOVFF  01,640
2F1E:  MOVFF  00,63F
2F22:  MOVFF  5F2,646
2F26:  MOVFF  5F1,645
2F2A:  MOVFF  5F0,644
2F2E:  MOVFF  5EF,643
2F32:  CALL   0E84
2F36:  BNC   2F54
....................       { 
....................          tmp=Setpoint; 
2F38:  MOVFF  5AC,646
2F3C:  MOVFF  5AB,645
2F40:  CALL   0E4E
2F44:  MOVFF  03,5F2
2F48:  MOVFF  02,5F1
2F4C:  MOVFF  01,5F0
2F50:  MOVFF  00,5EF
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
2F54:  MOVFF  5F2,642
2F58:  MOVFF  5F1,641
2F5C:  MOVFF  5F0,640
2F60:  MOVFF  5EF,63F
2F64:  MOVLB  6
2F66:  CLRF   x46
2F68:  CLRF   x45
2F6A:  CLRF   x44
2F6C:  CLRF   x43
2F6E:  MOVLB  0
2F70:  CALL   0E84
2F74:  BNC   2F82
....................       { 
....................          tmp=0.0; 
2F76:  MOVLB  5
2F78:  CLRF   xF2
2F7A:  CLRF   xF1
2F7C:  CLRF   xF0
2F7E:  CLRF   xEF
2F80:  MOVLB  0
....................       } 
....................        
....................       // Tpulso(t)= Tciclo*(y(t)-ymin)/(ymax - ymin); calculo de ciclo util para control de resistencia.ymax=140.ymin=0; 
....................       // Tpulso es float, hay que pasar ese ciclo a una salida de un puerto usando el TMR1. 
....................       Tpulso=(tmp/Setpoint)*Tciclo;   
2F82:  MOVFF  5AC,646
2F86:  MOVFF  5AB,645
2F8A:  CALL   0E4E
2F8E:  MOVFF  5F2,643
2F92:  MOVFF  5F1,642
2F96:  MOVFF  5F0,641
2F9A:  MOVFF  5EF,640
2F9E:  MOVFF  03,647
2FA2:  MOVFF  02,646
2FA6:  MOVFF  01,645
2FAA:  MOVFF  00,644
2FAE:  CALL   18A2
2FB2:  MOVFF  00,63F
2FB6:  MOVFF  01,640
2FBA:  MOVFF  02,641
2FBE:  MOVFF  03,642
2FC2:  MOVFF  03,65F
2FC6:  MOVFF  02,65E
2FCA:  MOVFF  01,65D
2FCE:  MOVFF  00,65C
2FD2:  MOVFF  5DE,663
2FD6:  MOVFF  5DD,662
2FDA:  MOVFF  5DC,661
2FDE:  MOVFF  5DB,660
2FE2:  CALL   1C9A
2FE6:  MOVFF  03,5E2
2FEA:  MOVFF  02,5E1
2FEE:  MOVFF  01,5E0
2FF2:  MOVFF  00,5DF
....................        
....................       if(tiempoctrl>=(int16)(Tciclo/0.005)) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
2FF6:  MOVFF  5DE,643
2FFA:  MOVFF  5DD,642
2FFE:  MOVFF  5DC,641
3002:  MOVFF  5DB,640
3006:  MOVLW  0A
3008:  MOVLB  6
300A:  MOVWF  x47
300C:  MOVLW  D7
300E:  MOVWF  x46
3010:  MOVLW  23
3012:  MOVWF  x45
3014:  MOVLW  77
3016:  MOVWF  x44
3018:  MOVLB  0
301A:  CALL   18A2
301E:  MOVFF  03,642
3022:  MOVFF  02,641
3026:  MOVFF  01,640
302A:  MOVFF  00,63F
302E:  RCALL  2C8C
3030:  MOVF   02,W
3032:  MOVWF  03
3034:  MOVLB  5
3036:  SUBWF  xA4,W
3038:  BNC   3046
303A:  BNZ   3042
303C:  MOVF   01,W
303E:  SUBWF  xA3,W
3040:  BNC   3046
....................       { 
....................          tiempoctrl=0; 
3042:  CLRF   xA4
3044:  CLRF   xA3
....................       } // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
....................        
....................       if(tiempoctrl<(int16)(Tpulso/0.005)) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
3046:  MOVFF  5E2,643
304A:  MOVFF  5E1,642
304E:  MOVFF  5E0,641
3052:  MOVFF  5DF,640
3056:  MOVLW  0A
3058:  MOVLB  6
305A:  MOVWF  x47
305C:  MOVLW  D7
305E:  MOVWF  x46
3060:  MOVLW  23
3062:  MOVWF  x45
3064:  MOVLW  77
3066:  MOVWF  x44
3068:  MOVLB  0
306A:  CALL   18A2
306E:  MOVFF  03,642
3072:  MOVFF  02,641
3076:  MOVFF  01,640
307A:  MOVFF  00,63F
307E:  RCALL  2C8C
3080:  MOVFF  02,03
3084:  MOVF   01,W
3086:  MOVLB  5
3088:  MOVF   xA4,W
308A:  SUBWF  02,W
308C:  BNC   309C
308E:  BNZ   3096
3090:  MOVF   01,W
3092:  SUBWF  xA3,W
3094:  BC    309C
....................       { 
....................          SSR_on; 
3096:  BSF    F8B.2
3098:  BCF    F94.2
....................          //Peltiern_off; 
....................          //Peltierp_on; 
....................       } 
....................       else          
309A:  BRA    30A0
....................       { 
....................          SSR_off; 
309C:  BCF    F8B.2
309E:  BCF    F94.2
....................          //Peltiern_off; 
....................          //Peltierp_off; 
....................       } 
....................              
....................    } 
....................    else 
30A0:  BRA    359A
....................    { 
....................       error=desvio+Setpoint-Temperatura;      // Cálculo del error ****** 
30A2:  MOVFF  5AC,646
30A6:  MOVFF  5AB,645
30AA:  MOVLB  0
30AC:  CALL   0E4E
30B0:  BCF    FD8.1
30B2:  MOVFF  5FE,647
30B6:  MOVFF  5FD,646
30BA:  MOVFF  5FC,645
30BE:  MOVFF  5FB,644
30C2:  MOVFF  03,64B
30C6:  MOVFF  02,64A
30CA:  MOVFF  01,649
30CE:  MOVFF  00,648
30D2:  CALL   1A00
30D6:  MOVFF  00,63F
30DA:  MOVFF  01,640
30DE:  MOVFF  02,641
30E2:  MOVFF  03,642
30E6:  BSF    FD8.1
30E8:  MOVFF  03,647
30EC:  MOVFF  02,646
30F0:  MOVFF  01,645
30F4:  MOVFF  00,644
30F8:  MOVFF  60A,64B
30FC:  MOVFF  609,64A
3100:  MOVFF  608,649
3104:  MOVFF  607,648
3108:  CALL   1A00
310C:  MOVFF  03,5E6
3110:  MOVFF  02,5E5
3114:  MOVFF  01,5E4
3118:  MOVFF  00,5E3
....................     
....................       if(error>1.2 && error<30 && Aumento<0.3 && flag_setpoint==0) 
311C:  MOVLW  9A
311E:  MOVLB  6
3120:  MOVWF  x42
3122:  MOVLW  99
3124:  MOVWF  x41
3126:  MOVLW  19
3128:  MOVWF  x40
312A:  MOVLW  7F
312C:  MOVWF  x3F
312E:  MOVFF  5E6,646
3132:  MOVFF  5E5,645
3136:  MOVFF  5E4,644
313A:  MOVFF  5E3,643
313E:  MOVLB  0
3140:  CALL   0E84
3144:  BTFSS  FD8.0
3146:  BRA    32C8
3148:  MOVFF  5E6,642
314C:  MOVFF  5E5,641
3150:  MOVFF  5E4,640
3154:  MOVFF  5E3,63F
3158:  MOVLB  6
315A:  CLRF   x46
315C:  CLRF   x45
315E:  MOVLW  70
3160:  MOVWF  x44
3162:  MOVLW  83
3164:  MOVWF  x43
3166:  MOVLB  0
3168:  CALL   0E84
316C:  BTFSS  FD8.0
316E:  BRA    32C8
3170:  MOVFF  606,642
3174:  MOVFF  605,641
3178:  MOVFF  604,640
317C:  MOVFF  603,63F
3180:  MOVLW  9A
3182:  MOVLB  6
3184:  MOVWF  x46
3186:  MOVLW  99
3188:  MOVWF  x45
318A:  MOVLW  19
318C:  MOVWF  x44
318E:  MOVLW  7D
3190:  MOVWF  x43
3192:  MOVLB  0
3194:  CALL   0E84
3198:  BTFSS  FD8.0
319A:  BRA    32C8
319C:  MOVLB  5
319E:  BTFSS  x93.4
31A0:  BRA    31A6
31A2:  MOVLB  0
31A4:  BRA    32C8
....................       { 
....................          if(Potencia<90.0) 
31A6:  MOVFF  5B6,642
31AA:  MOVFF  5B5,641
31AE:  MOVFF  5B4,640
31B2:  MOVFF  5B3,63F
31B6:  MOVLB  6
31B8:  CLRF   x46
31BA:  CLRF   x45
31BC:  MOVLW  34
31BE:  MOVWF  x44
31C0:  MOVLW  85
31C2:  MOVWF  x43
31C4:  MOVLB  0
31C6:  CALL   0E84
31CA:  BTFSS  FD8.0
31CC:  BRA    32C8
....................          { 
....................             if(TiempoControl>=30) 
31CE:  MOVLB  5
31D0:  MOVF   x9B,W
31D2:  SUBLW  1D
31D4:  BTFSC  FD8.0
31D6:  BRA    32CA
....................             { 
....................                TiempoControl=0; 
31D8:  CLRF   x9B
....................                if(Aumento<-0.5) 
31DA:  MOVFF  606,642
31DE:  MOVFF  605,641
31E2:  MOVFF  604,640
31E6:  MOVFF  603,63F
31EA:  MOVLB  6
31EC:  CLRF   x46
31EE:  CLRF   x45
31F0:  MOVLW  80
31F2:  MOVWF  x44
31F4:  MOVLW  7E
31F6:  MOVWF  x43
31F8:  MOVLB  0
31FA:  CALL   0E84
31FE:  BNC   3236
....................                { 
....................                   Ganancia+=2; 
3200:  BCF    FD8.1
3202:  MOVFF  5F6,647
3206:  MOVFF  5F5,646
320A:  MOVFF  5F4,645
320E:  MOVFF  5F3,644
3212:  MOVLB  6
3214:  CLRF   x4B
3216:  CLRF   x4A
3218:  CLRF   x49
321A:  MOVLW  80
321C:  MOVWF  x48
321E:  MOVLB  0
3220:  CALL   1A00
3224:  MOVFF  03,5F6
3228:  MOVFF  02,5F5
322C:  MOVFF  01,5F4
3230:  MOVFF  00,5F3
....................                } 
....................                else 
3234:  BRA    32C8
....................                { 
....................                   if(Aumento<-0.1) 
3236:  MOVFF  606,642
323A:  MOVFF  605,641
323E:  MOVFF  604,640
3242:  MOVFF  603,63F
3246:  MOVLW  CD
3248:  MOVLB  6
324A:  MOVWF  x46
324C:  MOVLW  CC
324E:  MOVWF  x45
3250:  MOVWF  x44
3252:  MOVLW  7B
3254:  MOVWF  x43
3256:  MOVLB  0
3258:  CALL   0E84
325C:  BNC   3294
....................                   { 
....................                      Ganancia+=1; 
325E:  BCF    FD8.1
3260:  MOVFF  5F6,647
3264:  MOVFF  5F5,646
3268:  MOVFF  5F4,645
326C:  MOVFF  5F3,644
3270:  MOVLB  6
3272:  CLRF   x4B
3274:  CLRF   x4A
3276:  CLRF   x49
3278:  MOVLW  7F
327A:  MOVWF  x48
327C:  MOVLB  0
327E:  CALL   1A00
3282:  MOVFF  03,5F6
3286:  MOVFF  02,5F5
328A:  MOVFF  01,5F4
328E:  MOVFF  00,5F3
....................                   }    
....................                   else 
3292:  BRA    32C8
....................                   { 
....................                      Ganancia+=0.5; 
3294:  BCF    FD8.1
3296:  MOVFF  5F6,647
329A:  MOVFF  5F5,646
329E:  MOVFF  5F4,645
32A2:  MOVFF  5F3,644
32A6:  MOVLB  6
32A8:  CLRF   x4B
32AA:  CLRF   x4A
32AC:  CLRF   x49
32AE:  MOVLW  7E
32B0:  MOVWF  x48
32B2:  MOVLB  0
32B4:  CALL   1A00
32B8:  MOVFF  03,5F6
32BC:  MOVFF  02,5F5
32C0:  MOVFF  01,5F4
32C4:  MOVFF  00,5F3
32C8:  MOVLB  5
....................                   } 
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(error<-0.7) 
32CA:  MOVFF  5E6,642
32CE:  MOVFF  5E5,641
32D2:  MOVFF  5E4,640
32D6:  MOVFF  5E3,63F
32DA:  MOVLW  33
32DC:  MOVLB  6
32DE:  MOVWF  x46
32E0:  MOVWF  x45
32E2:  MOVLW  B3
32E4:  MOVWF  x44
32E6:  MOVLW  7E
32E8:  MOVWF  x43
32EA:  MOVLB  0
32EC:  CALL   0E84
32F0:  BNC   3330
....................       { 
....................          if(TiempoControl>=40) 
32F2:  MOVLB  5
32F4:  MOVF   x9B,W
32F6:  SUBLW  27
32F8:  BC    3332
....................          { 
....................             TiempoControl=0; 
32FA:  CLRF   x9B
....................             Ganancia-=1; 
32FC:  BSF    FD8.1
32FE:  MOVFF  5F6,647
3302:  MOVFF  5F5,646
3306:  MOVFF  5F4,645
330A:  MOVFF  5F3,644
330E:  MOVLB  6
3310:  CLRF   x4B
3312:  CLRF   x4A
3314:  CLRF   x49
3316:  MOVLW  7F
3318:  MOVWF  x48
331A:  MOVLB  0
331C:  CALL   1A00
3320:  MOVFF  03,5F6
3324:  MOVFF  02,5F5
3328:  MOVFF  01,5F4
332C:  MOVFF  00,5F3
3330:  MOVLB  5
....................          } 
....................       } 
....................        
....................       if(Ganancia<0.5) 
3332:  MOVFF  5F6,642
3336:  MOVFF  5F5,641
333A:  MOVFF  5F4,640
333E:  MOVFF  5F3,63F
3342:  MOVLB  6
3344:  CLRF   x46
3346:  CLRF   x45
3348:  CLRF   x44
334A:  MOVLW  7E
334C:  MOVWF  x43
334E:  MOVLB  0
3350:  CALL   0E84
3354:  BNC   3364
....................       { 
....................          Ganancia=0.5; 
3356:  MOVLB  5
3358:  CLRF   xF6
335A:  CLRF   xF5
335C:  CLRF   xF4
335E:  MOVLW  7E
3360:  MOVWF  xF3
3362:  MOVLB  0
....................       } 
....................       if(Ganancia>Gananciamax) 
3364:  MOVFF  5BE,642
3368:  MOVFF  5BD,641
336C:  MOVFF  5BC,640
3370:  MOVFF  5BB,63F
3374:  MOVFF  5F6,646
3378:  MOVFF  5F5,645
337C:  MOVFF  5F4,644
3380:  MOVFF  5F3,643
3384:  CALL   0E84
3388:  BNC   339A
....................       { 
....................          Ganancia=Gananciamax; 
338A:  MOVFF  5BE,5F6
338E:  MOVFF  5BD,5F5
3392:  MOVFF  5BC,5F4
3396:  MOVFF  5BB,5F3
....................       } 
....................     
....................       if(error<0.0)     // Anti Wind_DOWN     
339A:  MOVFF  5E6,642
339E:  MOVFF  5E5,641
33A2:  MOVFF  5E4,640
33A6:  MOVFF  5E3,63F
33AA:  MOVLB  6
33AC:  CLRF   x46
33AE:  CLRF   x45
33B0:  CLRF   x44
33B2:  CLRF   x43
33B4:  MOVLB  0
33B6:  CALL   0E84
33BA:  BNC   33C8
....................       { 
....................          error=0.0; 
33BC:  MOVLB  5
33BE:  CLRF   xE6
33C0:  CLRF   xE5
33C2:  CLRF   xE4
33C4:  CLRF   xE3
33C6:  MOVLB  0
....................       } 
....................       //tmp=(Setpoint-Prom)*Ganancia;  // Control Proporcional. 
....................       tmp=error*Ganancia;  // Control Proporcional. 
33C8:  MOVFF  5E6,65F
33CC:  MOVFF  5E5,65E
33D0:  MOVFF  5E4,65D
33D4:  MOVFF  5E3,65C
33D8:  MOVFF  5F6,663
33DC:  MOVFF  5F5,662
33E0:  MOVFF  5F4,661
33E4:  MOVFF  5F3,660
33E8:  CALL   1C9A
33EC:  MOVFF  03,5F2
33F0:  MOVFF  02,5F1
33F4:  MOVFF  01,5F0
33F8:  MOVFF  00,5EF
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
33FC:  MOVFF  5AC,646
3400:  MOVFF  5AB,645
3404:  CALL   0E4E
3408:  MOVFF  03,642
340C:  MOVFF  02,641
3410:  MOVFF  01,640
3414:  MOVFF  00,63F
3418:  MOVFF  5F2,646
341C:  MOVFF  5F1,645
3420:  MOVFF  5F0,644
3424:  MOVFF  5EF,643
3428:  CALL   0E84
342C:  BNC   344A
....................       { 
....................          tmp=Setpoint; 
342E:  MOVFF  5AC,646
3432:  MOVFF  5AB,645
3436:  CALL   0E4E
343A:  MOVFF  03,5F2
343E:  MOVFF  02,5F1
3442:  MOVFF  01,5F0
3446:  MOVFF  00,5EF
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
344A:  MOVFF  5F2,642
344E:  MOVFF  5F1,641
3452:  MOVFF  5F0,640
3456:  MOVFF  5EF,63F
345A:  MOVLB  6
345C:  CLRF   x46
345E:  CLRF   x45
3460:  CLRF   x44
3462:  CLRF   x43
3464:  MOVLB  0
3466:  CALL   0E84
346A:  BNC   3478
....................       { 
....................          tmp=0.0; 
346C:  MOVLB  5
346E:  CLRF   xF2
3470:  CLRF   xF1
3472:  CLRF   xF0
3474:  CLRF   xEF
3476:  MOVLB  0
....................       } 
....................     
....................       Tpulso=(tmp/Setpoint)*Tciclo; 
3478:  MOVFF  5AC,646
347C:  MOVFF  5AB,645
3480:  CALL   0E4E
3484:  MOVFF  5F2,643
3488:  MOVFF  5F1,642
348C:  MOVFF  5F0,641
3490:  MOVFF  5EF,640
3494:  MOVFF  03,647
3498:  MOVFF  02,646
349C:  MOVFF  01,645
34A0:  MOVFF  00,644
34A4:  CALL   18A2
34A8:  MOVFF  00,63F
34AC:  MOVFF  01,640
34B0:  MOVFF  02,641
34B4:  MOVFF  03,642
34B8:  MOVFF  03,65F
34BC:  MOVFF  02,65E
34C0:  MOVFF  01,65D
34C4:  MOVFF  00,65C
34C8:  MOVFF  5DE,663
34CC:  MOVFF  5DD,662
34D0:  MOVFF  5DC,661
34D4:  MOVFF  5DB,660
34D8:  CALL   1C9A
34DC:  MOVFF  03,5E2
34E0:  MOVFF  02,5E1
34E4:  MOVFF  01,5E0
34E8:  MOVFF  00,5DF
....................        
....................                                           
....................       if(tiempoctrl<(int16)(Tpulso/0.005)) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
34EC:  MOVFF  5E2,643
34F0:  MOVFF  5E1,642
34F4:  MOVFF  5E0,641
34F8:  MOVFF  5DF,640
34FC:  MOVLW  0A
34FE:  MOVLB  6
3500:  MOVWF  x47
3502:  MOVLW  D7
3504:  MOVWF  x46
3506:  MOVLW  23
3508:  MOVWF  x45
350A:  MOVLW  77
350C:  MOVWF  x44
350E:  MOVLB  0
3510:  CALL   18A2
3514:  MOVFF  03,642
3518:  MOVFF  02,641
351C:  MOVFF  01,640
3520:  MOVFF  00,63F
3524:  CALL   2C8C
3528:  MOVFF  02,03
352C:  MOVF   01,W
352E:  MOVLB  5
3530:  MOVF   xA4,W
3532:  SUBWF  02,W
3534:  BNC   3544
3536:  BNZ   353E
3538:  MOVF   01,W
353A:  SUBWF  xA3,W
353C:  BC    3544
....................       { 
....................          SSR_on; 
353E:  BSF    F8B.2
3540:  BCF    F94.2
....................       } 
....................       else          
3542:  BRA    3548
....................       { 
....................          SSR_off; 
3544:  BCF    F8B.2
3546:  BCF    F94.2
....................       } 
....................        
....................       if(tiempoctrl>=(int16)(Tciclo/0.005)) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
3548:  MOVFF  5DE,643
354C:  MOVFF  5DD,642
3550:  MOVFF  5DC,641
3554:  MOVFF  5DB,640
3558:  MOVLW  0A
355A:  MOVLB  6
355C:  MOVWF  x47
355E:  MOVLW  D7
3560:  MOVWF  x46
3562:  MOVLW  23
3564:  MOVWF  x45
3566:  MOVLW  77
3568:  MOVWF  x44
356A:  MOVLB  0
356C:  CALL   18A2
3570:  MOVFF  03,642
3574:  MOVFF  02,641
3578:  MOVFF  01,640
357C:  MOVFF  00,63F
3580:  CALL   2C8C
3584:  MOVF   02,W
3586:  MOVWF  03
3588:  MOVLB  5
358A:  SUBWF  xA4,W
358C:  BNC   359A
358E:  BNZ   3596
3590:  MOVF   01,W
3592:  SUBWF  xA3,W
3594:  BNC   359A
....................       { 
....................          tiempoctrl=0; 
3596:  CLRF   xA4
3598:  CLRF   xA3
....................       } // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
....................              
....................    } 
....................     
.................... //--------------------------------------------------------------------------------------------------------------------//    
....................    
.................... } 
359A:  MOVLB  0
359C:  RETLW  00
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
156C:  MOVLB  6
156E:  MOVFF  63F,01
1572:  MOVFF  640,03
1576:  MOVFF  63F,645
157A:  MOVFF  640,646
157E:  MOVLW  06
1580:  MOVWF  FEA
1582:  MOVLW  1F
1584:  MOVWF  FE9
1586:  MOVFF  640,FE2
158A:  MOVFF  63F,FE1
158E:  MOVF   FE7,F
1590:  MOVFF  FE6,FEE
1594:  BNZ   158E
....................    if(sombreado==2) 
1596:  MOVF   x43,W
1598:  SUBLW  02
159A:  BNZ   15C4
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
159C:  MOVLW  01
159E:  ADDWF  x41,W
15A0:  MOVWF  x45
15A2:  MOVLW  01
15A4:  ADDWF  x42,W
15A6:  MOVWF  x46
15A8:  MOVFF  645,652
15AC:  MOVWF  x53
15AE:  MOVLW  06
15B0:  MOVWF  x55
15B2:  MOVLW  1F
15B4:  MOVWF  x54
15B6:  MOVFF  644,656
15BA:  MOVLW  01
15BC:  MOVWF  x57
15BE:  MOVLB  0
15C0:  RCALL  11B4
15C2:  MOVLB  6
....................    if(sombreado==1) 
15C4:  DECFSZ x43,W
15C6:  BRA    1612
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
15C8:  MOVF   x44,W
15CA:  MULLW  08
15CC:  MOVF   FF3,W
15CE:  ADDWF  x42,W
15D0:  MOVWF  x45
15D2:  CLRF   x52
15D4:  MOVFF  642,653
15D8:  MOVLW  7F
15DA:  MOVWF  x54
15DC:  MOVFF  645,655
15E0:  MOVLW  01
15E2:  MOVWF  x56
15E4:  MOVWF  x57
15E6:  MOVLB  0
15E8:  RCALL  14AA
15EA:  MOVLW  01
15EC:  MOVLB  6
15EE:  ADDWF  x41,W
15F0:  MOVWF  x45
15F2:  MOVLW  01
15F4:  ADDWF  x42,W
15F6:  MOVWF  x46
15F8:  MOVFF  645,652
15FC:  MOVWF  x53
15FE:  MOVLW  06
1600:  MOVWF  x55
1602:  MOVLW  1F
1604:  MOVWF  x54
1606:  MOVFF  644,656
160A:  CLRF   x57
160C:  MOVLB  0
160E:  RCALL  11B4
1610:  MOVLB  6
....................    if(sombreado==0) 
1612:  MOVF   x43,F
1614:  BNZ   1660
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1616:  MOVF   x44,W
1618:  MULLW  08
161A:  MOVF   FF3,W
161C:  ADDWF  x42,W
161E:  MOVWF  x45
1620:  CLRF   x52
1622:  MOVFF  642,653
1626:  MOVLW  7F
1628:  MOVWF  x54
162A:  MOVFF  645,655
162E:  MOVLW  01
1630:  MOVWF  x56
1632:  CLRF   x57
1634:  MOVLB  0
1636:  RCALL  14AA
1638:  MOVLW  01
163A:  MOVLB  6
163C:  ADDWF  x41,W
163E:  MOVWF  x45
1640:  MOVLW  01
1642:  ADDWF  x42,W
1644:  MOVWF  x46
1646:  MOVFF  645,652
164A:  MOVWF  x53
164C:  MOVLW  06
164E:  MOVWF  x55
1650:  MOVLW  1F
1652:  MOVWF  x54
1654:  MOVFF  644,656
1658:  MOVLW  01
165A:  MOVWF  x57
165C:  MOVLB  0
165E:  RCALL  11B4
....................    glcd_update(); 
1660:  MOVLB  0
1662:  RCALL  0F98
.................... } 
1664:  RETLW  00
....................  
.................... void displayTemps(char palabra[30], int16 digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==1) 
*
26B4:  MOVLB  6
26B6:  DECFSZ x45,W
26B8:  BRA    27E4
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
26BA:  MOVLW  06
26BC:  MOVWF  x3E
26BE:  MOVLW  47
26C0:  MOVWF  x3D
26C2:  MOVLW  0A
26C4:  MOVWF  FE9
26C6:  MOVFF  642,651
26CA:  MOVFF  641,650
26CE:  MOVLB  0
26D0:  RCALL  243E
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, ON); 
26D2:  MOVLW  02
26D4:  MOVLB  6
26D6:  SUBWF  x44,W
26D8:  MOVWF  x50
26DA:  MOVF   x46,W
26DC:  MULLW  08
26DE:  MOVF   FF3,W
26E0:  ADDWF  x44,W
26E2:  MOVWF  x51
26E4:  CLRF   x52
26E6:  MOVFF  650,653
26EA:  MOVLW  7F
26EC:  MOVWF  x54
26EE:  MOVFF  651,655
26F2:  MOVLW  01
26F4:  MOVWF  x56
26F6:  MOVWF  x57
26F8:  MOVLB  0
26FA:  CALL   14AA
....................       strcpy(Menus.Letra,palabra); 
26FE:  MOVLB  6
2700:  MOVFF  63F,01
2704:  MOVFF  640,03
2708:  MOVFF  63F,650
270C:  MOVFF  640,651
2710:  MOVLW  06
2712:  MOVWF  FEA
2714:  MOVLW  1F
2716:  MOVWF  FE9
2718:  MOVFF  640,FE2
271C:  MOVFF  63F,FE1
2720:  MOVF   FE7,F
2722:  MOVFF  FE6,FEE
2726:  BNZ   2720
....................       glcd_text57(x+90, y+1, voltage, tamano, OFF); 
2728:  MOVLW  5A
272A:  ADDWF  x43,W
272C:  MOVWF  x50
272E:  MOVLW  01
2730:  ADDWF  x44,W
2732:  MOVWF  x51
2734:  MOVFF  650,652
2738:  MOVWF  x53
273A:  MOVLW  06
273C:  MOVWF  x55
273E:  MOVLW  47
2740:  MOVWF  x54
2742:  MOVFF  646,656
2746:  CLRF   x57
2748:  MOVLB  0
274A:  CALL   11B4
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF); 
274E:  MOVLW  01
2750:  MOVLB  6
2752:  ADDWF  x43,W
2754:  MOVWF  x50
2756:  MOVLW  01
2758:  ADDWF  x44,W
275A:  MOVWF  x51
275C:  MOVFF  650,652
2760:  MOVWF  x53
2762:  MOVLW  06
2764:  MOVWF  x55
2766:  MOVLW  1F
2768:  MOVWF  x54
276A:  MOVFF  646,656
276E:  CLRF   x57
2770:  MOVLB  0
2772:  CALL   11B4
....................       strcpy(Menus.Letra,"C"); 
2776:  MOVLW  06
2778:  MOVWF  FEA
277A:  MOVLW  1F
277C:  MOVWF  FE9
277E:  MOVFF  FF2,650
2782:  BCF    FF2.7
2784:  MOVLW  00
2786:  CALL   06BE
278A:  TBLRD*-
278C:  TBLRD*+
278E:  MOVF   FF5,W
2790:  MOVWF  FEE
2792:  IORLW  00
2794:  BNZ   278C
2796:  MOVLB  6
2798:  BTFSC  x50.7
279A:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, OFF); 
279C:  MOVLW  78
279E:  ADDWF  x43,W
27A0:  MOVWF  x50
27A2:  MOVLW  01
27A4:  ADDWF  x44,W
27A6:  MOVWF  x51
27A8:  MOVFF  650,652
27AC:  MOVWF  x53
27AE:  MOVLW  06
27B0:  MOVWF  x55
27B2:  MOVLW  1F
27B4:  MOVWF  x54
27B6:  MOVFF  646,656
27BA:  CLRF   x57
27BC:  MOVLB  0
27BE:  CALL   11B4
....................       glcd_circle(x+115,y-1,1,NO,OFF); 
27C2:  MOVLW  73
27C4:  MOVLB  6
27C6:  ADDWF  x43,W
27C8:  MOVWF  x50
27CA:  MOVLW  01
27CC:  SUBWF  x44,W
27CE:  MOVWF  x51
27D0:  MOVFF  650,652
27D4:  MOVWF  x53
27D6:  MOVLW  01
27D8:  MOVWF  x54
27DA:  CLRF   x55
27DC:  CLRF   x56
27DE:  MOVLB  0
27E0:  RCALL  2214
27E2:  MOVLB  6
....................    } 
....................    if(sombreado==0) 
27E4:  MOVF   x45,F
27E6:  BTFSS  FD8.2
27E8:  BRA    2918
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
27EA:  MOVLW  06
27EC:  MOVWF  x3E
27EE:  MOVLW  47
27F0:  MOVWF  x3D
27F2:  MOVLW  0A
27F4:  MOVWF  FE9
27F6:  MOVFF  642,651
27FA:  MOVFF  641,650
27FE:  MOVLB  0
2800:  RCALL  243E
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, OFF); 
2802:  MOVLW  02
2804:  MOVLB  6
2806:  SUBWF  x44,W
2808:  MOVWF  x50
280A:  MOVF   x46,W
280C:  MULLW  08
280E:  MOVF   FF3,W
2810:  ADDWF  x44,W
2812:  MOVWF  x51
2814:  CLRF   x52
2816:  MOVFF  650,653
281A:  MOVLW  7F
281C:  MOVWF  x54
281E:  MOVFF  651,655
2822:  MOVLW  01
2824:  MOVWF  x56
2826:  CLRF   x57
2828:  MOVLB  0
282A:  CALL   14AA
....................       strcpy(Menus.Letra,palabra); 
282E:  MOVLB  6
2830:  MOVFF  63F,01
2834:  MOVFF  640,03
2838:  MOVFF  63F,650
283C:  MOVFF  640,651
2840:  MOVLW  06
2842:  MOVWF  FEA
2844:  MOVLW  1F
2846:  MOVWF  FE9
2848:  MOVFF  640,FE2
284C:  MOVFF  63F,FE1
2850:  MOVF   FE7,F
2852:  MOVFF  FE6,FEE
2856:  BNZ   2850
....................       glcd_text57(x+90, y+1, voltage, tamano, ON); 
2858:  MOVLW  5A
285A:  ADDWF  x43,W
285C:  MOVWF  x50
285E:  MOVLW  01
2860:  ADDWF  x44,W
2862:  MOVWF  x51
2864:  MOVFF  650,652
2868:  MOVWF  x53
286A:  MOVLW  06
286C:  MOVWF  x55
286E:  MOVLW  47
2870:  MOVWF  x54
2872:  MOVFF  646,656
2876:  MOVLW  01
2878:  MOVWF  x57
287A:  MOVLB  0
287C:  CALL   11B4
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, ON); 
2880:  MOVLW  01
2882:  MOVLB  6
2884:  ADDWF  x43,W
2886:  MOVWF  x50
2888:  MOVLW  01
288A:  ADDWF  x44,W
288C:  MOVWF  x51
288E:  MOVFF  650,652
2892:  MOVWF  x53
2894:  MOVLW  06
2896:  MOVWF  x55
2898:  MOVLW  1F
289A:  MOVWF  x54
289C:  MOVFF  646,656
28A0:  MOVLW  01
28A2:  MOVWF  x57
28A4:  MOVLB  0
28A6:  CALL   11B4
....................       strcpy(Menus.Letra,"C"); 
28AA:  MOVLW  06
28AC:  MOVWF  FEA
28AE:  MOVLW  1F
28B0:  MOVWF  FE9
28B2:  MOVFF  FF2,650
28B6:  BCF    FF2.7
28B8:  MOVLW  00
28BA:  CALL   06BE
28BE:  TBLRD*-
28C0:  TBLRD*+
28C2:  MOVF   FF5,W
28C4:  MOVWF  FEE
28C6:  IORLW  00
28C8:  BNZ   28C0
28CA:  MOVLB  6
28CC:  BTFSC  x50.7
28CE:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, ON); 
28D0:  MOVLW  78
28D2:  ADDWF  x43,W
28D4:  MOVWF  x50
28D6:  MOVLW  01
28D8:  ADDWF  x44,W
28DA:  MOVWF  x51
28DC:  MOVFF  650,652
28E0:  MOVWF  x53
28E2:  MOVLW  06
28E4:  MOVWF  x55
28E6:  MOVLW  1F
28E8:  MOVWF  x54
28EA:  MOVFF  646,656
28EE:  MOVLW  01
28F0:  MOVWF  x57
28F2:  MOVLB  0
28F4:  CALL   11B4
....................       glcd_circle(x+115,y-1,1,NO,ON); 
28F8:  MOVLW  73
28FA:  MOVLB  6
28FC:  ADDWF  x43,W
28FE:  MOVWF  x50
2900:  MOVLW  01
2902:  SUBWF  x44,W
2904:  MOVWF  x51
2906:  MOVFF  650,652
290A:  MOVWF  x53
290C:  MOVLW  01
290E:  MOVWF  x54
2910:  CLRF   x55
2912:  MOVWF  x56
2914:  MOVLB  0
2916:  RCALL  2214
....................    } 
....................    glcd_update(); 
2918:  MOVLB  0
291A:  CALL   0F98
.................... } 
291E:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
29A6:  MOVLB  6
29A8:  MOVF   x43,W
29AA:  SUBLW  02
29AC:  BNZ   2A1E
....................    { 
....................       sprintf(voltage, "%03u", digito); 
29AE:  MOVLW  06
29B0:  MOVWF  x3E
29B2:  MOVLW  45
29B4:  MOVWF  x3D
29B6:  MOVFF  640,64E
29BA:  MOVLW  03
29BC:  MOVWF  x4F
29BE:  MOVLB  0
29C0:  RCALL  2920
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
29C2:  MOVLB  6
29C4:  MOVF   x44,W
29C6:  MULLW  12
29C8:  MOVF   FF3,W
29CA:  ADDWF  x41,W
29CC:  MOVWF  x4E
29CE:  MOVF   x44,W
29D0:  MULLW  08
29D2:  MOVF   FF3,W
29D4:  ADDWF  x42,W
29D6:  MOVWF  x4F
29D8:  MOVFF  641,652
29DC:  MOVFF  642,653
29E0:  MOVFF  64E,654
29E4:  MOVWF  x55
29E6:  MOVLW  01
29E8:  MOVWF  x56
29EA:  MOVWF  x57
29EC:  MOVLB  0
29EE:  CALL   14AA
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
29F2:  MOVLW  01
29F4:  MOVLB  6
29F6:  ADDWF  x41,W
29F8:  MOVWF  x4E
29FA:  MOVLW  01
29FC:  ADDWF  x42,W
29FE:  MOVWF  x4F
2A00:  MOVFF  64E,652
2A04:  MOVWF  x53
2A06:  MOVLW  06
2A08:  MOVWF  x55
2A0A:  MOVLW  45
2A0C:  MOVWF  x54
2A0E:  MOVFF  644,656
2A12:  CLRF   x57
2A14:  MOVLB  0
2A16:  CALL   11B4
....................    } 
....................    else 
2A1A:  BRA    2B62
2A1C:  MOVLB  6
....................    { 
....................       if(sombreado==3) 
2A1E:  MOVF   x43,W
2A20:  SUBLW  03
2A22:  BNZ   2A94
....................       { 
....................          sprintf(voltage, "%03u", digito); 
2A24:  MOVLW  06
2A26:  MOVWF  x3E
2A28:  MOVLW  45
2A2A:  MOVWF  x3D
2A2C:  MOVFF  640,64E
2A30:  MOVLW  03
2A32:  MOVWF  x4F
2A34:  MOVLB  0
2A36:  RCALL  2920
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
2A38:  MOVLB  6
2A3A:  MOVF   x44,W
2A3C:  MULLW  12
2A3E:  MOVF   FF3,W
2A40:  ADDWF  x41,W
2A42:  MOVWF  x4E
2A44:  MOVF   x44,W
2A46:  MULLW  08
2A48:  MOVF   FF3,W
2A4A:  ADDWF  x42,W
2A4C:  MOVWF  x4F
2A4E:  MOVFF  641,652
2A52:  MOVFF  642,653
2A56:  MOVFF  64E,654
2A5A:  MOVWF  x55
2A5C:  MOVLW  01
2A5E:  MOVWF  x56
2A60:  CLRF   x57
2A62:  MOVLB  0
2A64:  CALL   14AA
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
2A68:  MOVLW  01
2A6A:  MOVLB  6
2A6C:  ADDWF  x41,W
2A6E:  MOVWF  x4E
2A70:  MOVLW  01
2A72:  ADDWF  x42,W
2A74:  MOVWF  x4F
2A76:  MOVFF  64E,652
2A7A:  MOVWF  x53
2A7C:  MOVLW  06
2A7E:  MOVWF  x55
2A80:  MOVLW  45
2A82:  MOVWF  x54
2A84:  MOVFF  644,656
2A88:  MOVLW  01
2A8A:  MOVWF  x57
2A8C:  MOVLB  0
2A8E:  CALL   11B4
2A92:  MOVLB  6
....................       } 
....................       sprintf(voltage, "%u", digito); 
2A94:  MOVLW  06
2A96:  MOVWF  x3E
2A98:  MOVLW  45
2A9A:  MOVWF  x3D
2A9C:  MOVFF  640,64E
2AA0:  MOVLW  1B
2AA2:  MOVWF  x4F
2AA4:  MOVLB  0
2AA6:  RCALL  2920
....................       if(sombreado==1) 
2AA8:  MOVLB  6
2AAA:  DECFSZ x43,W
2AAC:  BRA    2B06
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
2AAE:  MOVF   x44,W
2AB0:  MULLW  05
2AB2:  MOVF   FF3,W
2AB4:  ADDWF  x41,W
2AB6:  MOVWF  x4E
2AB8:  MOVF   x44,W
2ABA:  MULLW  08
2ABC:  MOVF   FF3,W
2ABE:  ADDWF  x42,W
2AC0:  MOVWF  x4F
2AC2:  MOVFF  641,652
2AC6:  MOVFF  642,653
2ACA:  MOVFF  64E,654
2ACE:  MOVWF  x55
2AD0:  MOVLW  01
2AD2:  MOVWF  x56
2AD4:  MOVWF  x57
2AD6:  MOVLB  0
2AD8:  CALL   14AA
2ADC:  MOVLW  01
2ADE:  MOVLB  6
2AE0:  ADDWF  x41,W
2AE2:  MOVWF  x4E
2AE4:  MOVLW  01
2AE6:  ADDWF  x42,W
2AE8:  MOVWF  x4F
2AEA:  MOVFF  64E,652
2AEE:  MOVWF  x53
2AF0:  MOVLW  06
2AF2:  MOVWF  x55
2AF4:  MOVLW  45
2AF6:  MOVWF  x54
2AF8:  MOVFF  644,656
2AFC:  CLRF   x57
2AFE:  MOVLB  0
2B00:  CALL   11B4
2B04:  MOVLB  6
....................       if(sombreado==0) 
2B06:  MOVF   x43,F
2B08:  BNZ   2B64
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
2B0A:  MOVF   x44,W
2B0C:  MULLW  05
2B0E:  MOVF   FF3,W
2B10:  ADDWF  x41,W
2B12:  MOVWF  x4E
2B14:  MOVF   x44,W
2B16:  MULLW  08
2B18:  MOVF   FF3,W
2B1A:  ADDWF  x42,W
2B1C:  MOVWF  x4F
2B1E:  MOVFF  641,652
2B22:  MOVFF  642,653
2B26:  MOVFF  64E,654
2B2A:  MOVWF  x55
2B2C:  MOVLW  01
2B2E:  MOVWF  x56
2B30:  CLRF   x57
2B32:  MOVLB  0
2B34:  CALL   14AA
2B38:  MOVLW  01
2B3A:  MOVLB  6
2B3C:  ADDWF  x41,W
2B3E:  MOVWF  x4E
2B40:  MOVLW  01
2B42:  ADDWF  x42,W
2B44:  MOVWF  x4F
2B46:  MOVFF  64E,652
2B4A:  MOVWF  x53
2B4C:  MOVLW  06
2B4E:  MOVWF  x55
2B50:  MOVLW  45
2B52:  MOVWF  x54
2B54:  MOVFF  644,656
2B58:  MOVLW  01
2B5A:  MOVWF  x57
2B5C:  MOVLB  0
2B5E:  CALL   11B4
2B62:  MOVLB  6
....................    } 
....................    glcd_update(); 
2B64:  MOVLB  0
2B66:  CALL   0F98
.................... } 
2B6A:  RETLW  00
....................  
.................... void displayTemperatura(int16 digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
24FC:  MOVLB  6
24FE:  MOVF   x45,W
2500:  SUBLW  02
2502:  BNZ   2578
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
2504:  MOVLW  06
2506:  MOVWF  x3E
2508:  MOVLW  47
250A:  MOVWF  x3D
250C:  MOVLW  0A
250E:  MOVWF  FE9
2510:  MOVFF  642,651
2514:  MOVFF  641,650
2518:  MOVLB  0
251A:  RCALL  243E
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
251C:  MOVLB  6
251E:  MOVF   x46,W
2520:  MULLW  12
2522:  MOVF   FF3,W
2524:  ADDWF  x43,W
2526:  MOVWF  x50
2528:  MOVF   x46,W
252A:  MULLW  08
252C:  MOVF   FF3,W
252E:  ADDWF  x44,W
2530:  MOVWF  x51
2532:  MOVFF  643,652
2536:  MOVFF  644,653
253A:  MOVFF  650,654
253E:  MOVWF  x55
2540:  MOVLW  01
2542:  MOVWF  x56
2544:  MOVWF  x57
2546:  MOVLB  0
2548:  CALL   14AA
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
254C:  MOVLW  01
254E:  MOVLB  6
2550:  ADDWF  x43,W
2552:  MOVWF  x50
2554:  MOVLW  01
2556:  ADDWF  x44,W
2558:  MOVWF  x51
255A:  MOVFF  650,652
255E:  MOVWF  x53
2560:  MOVLW  06
2562:  MOVWF  x55
2564:  MOVLW  47
2566:  MOVWF  x54
2568:  MOVFF  646,656
256C:  CLRF   x57
256E:  MOVLB  0
2570:  CALL   11B4
....................    } 
....................    else 
2574:  BRA    26AA
2576:  MOVLB  6
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
2578:  MOVLW  06
257A:  MOVWF  x3E
257C:  MOVLW  47
257E:  MOVWF  x3D
2580:  MOVLW  0A
2582:  MOVWF  FE9
2584:  MOVFF  642,651
2588:  MOVFF  641,650
258C:  MOVLB  0
258E:  RCALL  243E
....................     
....................       if(sombreado==4) 
2590:  MOVLB  6
2592:  MOVF   x45,W
2594:  SUBLW  04
2596:  BNZ   25F2
....................       { 
....................          glcd_rect(x, y, x+(tamano*16), y+(tamano*8), YES, OFF); 
2598:  MOVF   x46,W
259A:  MULLW  10
259C:  MOVF   FF3,W
259E:  ADDWF  x43,W
25A0:  MOVWF  x50
25A2:  MOVF   x46,W
25A4:  MULLW  08
25A6:  MOVF   FF3,W
25A8:  ADDWF  x44,W
25AA:  MOVWF  x51
25AC:  MOVFF  643,652
25B0:  MOVFF  644,653
25B4:  MOVFF  650,654
25B8:  MOVWF  x55
25BA:  MOVLW  01
25BC:  MOVWF  x56
25BE:  CLRF   x57
25C0:  MOVLB  0
25C2:  CALL   14AA
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
25C6:  MOVLW  01
25C8:  MOVLB  6
25CA:  ADDWF  x43,W
25CC:  MOVWF  x50
25CE:  MOVLW  01
25D0:  ADDWF  x44,W
25D2:  MOVWF  x51
25D4:  MOVFF  650,652
25D8:  MOVWF  x53
25DA:  MOVLW  06
25DC:  MOVWF  x55
25DE:  MOVLW  47
25E0:  MOVWF  x54
25E2:  MOVFF  646,656
25E6:  MOVLW  01
25E8:  MOVWF  x57
25EA:  MOVLB  0
25EC:  CALL   11B4
25F0:  MOVLB  6
....................       } 
....................       if(sombreado==1) 
25F2:  DECFSZ x45,W
25F4:  BRA    264E
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
25F6:  MOVF   x46,W
25F8:  MULLW  05
25FA:  MOVF   FF3,W
25FC:  ADDWF  x43,W
25FE:  MOVWF  x50
2600:  MOVF   x46,W
2602:  MULLW  08
2604:  MOVF   FF3,W
2606:  ADDWF  x44,W
2608:  MOVWF  x51
260A:  MOVFF  643,652
260E:  MOVFF  644,653
2612:  MOVFF  650,654
2616:  MOVWF  x55
2618:  MOVLW  01
261A:  MOVWF  x56
261C:  MOVWF  x57
261E:  MOVLB  0
2620:  CALL   14AA
2624:  MOVLW  01
2626:  MOVLB  6
2628:  ADDWF  x43,W
262A:  MOVWF  x50
262C:  MOVLW  01
262E:  ADDWF  x44,W
2630:  MOVWF  x51
2632:  MOVFF  650,652
2636:  MOVWF  x53
2638:  MOVLW  06
263A:  MOVWF  x55
263C:  MOVLW  47
263E:  MOVWF  x54
2640:  MOVFF  646,656
2644:  CLRF   x57
2646:  MOVLB  0
2648:  CALL   11B4
264C:  MOVLB  6
....................       if(sombreado==0) 
264E:  MOVF   x45,F
2650:  BNZ   26AC
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
2652:  MOVF   x46,W
2654:  MULLW  05
2656:  MOVF   FF3,W
2658:  ADDWF  x43,W
265A:  MOVWF  x50
265C:  MOVF   x46,W
265E:  MULLW  08
2660:  MOVF   FF3,W
2662:  ADDWF  x44,W
2664:  MOVWF  x51
2666:  MOVFF  643,652
266A:  MOVFF  644,653
266E:  MOVFF  650,654
2672:  MOVWF  x55
2674:  MOVLW  01
2676:  MOVWF  x56
2678:  CLRF   x57
267A:  MOVLB  0
267C:  CALL   14AA
2680:  MOVLW  01
2682:  MOVLB  6
2684:  ADDWF  x43,W
2686:  MOVWF  x50
2688:  MOVLW  01
268A:  ADDWF  x44,W
268C:  MOVWF  x51
268E:  MOVFF  650,652
2692:  MOVWF  x53
2694:  MOVLW  06
2696:  MOVWF  x55
2698:  MOVLW  47
269A:  MOVWF  x54
269C:  MOVFF  646,656
26A0:  MOVLW  01
26A2:  MOVWF  x57
26A4:  MOVLB  0
26A6:  CALL   11B4
26AA:  MOVLB  6
....................    } 
....................    glcd_update(); 
26AC:  MOVLB  0
26AE:  CALL   0F98
.................... } 
26B2:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2B6C:  MOVLB  6
2B6E:  MOVF   x3F,W
2B70:  SUBLW  05
2B72:  BNZ   2C18
....................    for( i = 0 ; i < 64 ; i ++ ) 
2B74:  CLRF   x40
2B76:  MOVF   x40,W
2B78:  SUBLW  3F
2B7A:  BNC   2C18
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2B7C:  CLRF   x41
2B7E:  MOVF   x41,W
2B80:  SUBLW  0F
2B82:  BNC   2C14
....................       {     
....................          for(k=7;k>-1;k--) 
2B84:  MOVLW  07
2B86:  MOVWF  x42
2B88:  MOVF   x42,W
2B8A:  XORLW  80
2B8C:  SUBLW  7F
2B8E:  BC    2C10
....................          {       
....................             if( bit_test(Horno[i][j] ,7-k ))  
2B90:  CLRF   x44
2B92:  MOVFF  640,643
2B96:  CLRF   x46
2B98:  MOVLW  10
2B9A:  MOVWF  x45
2B9C:  MOVLB  0
2B9E:  CALL   1C78
2BA2:  MOVFF  02,644
2BA6:  MOVFF  01,643
2BAA:  MOVLB  6
2BAC:  MOVF   x41,W
2BAE:  ADDWF  01,W
2BB0:  MOVWF  01
2BB2:  MOVLW  00
2BB4:  ADDWFC 02,W
2BB6:  MOVWF  03
2BB8:  MOVF   01,W
2BBA:  MOVFF  FF2,643
2BBE:  BCF    FF2.7
2BC0:  MOVFF  03,FF7
2BC4:  MOVLB  0
2BC6:  CALL   02A6
2BCA:  MOVLB  6
2BCC:  BTFSC  x43.7
2BCE:  BSF    FF2.7
2BD0:  MOVWF  x43
2BD2:  MOVLW  07
2BD4:  BSF    FD8.0
2BD6:  SUBFWB x42,W
2BD8:  MOVWF  x44
2BDA:  MOVFF  643,00
2BDE:  MOVF   x44,W
2BE0:  MOVWF  01
2BE2:  BZ    2BEC
2BE4:  BCF    FD8.0
2BE6:  RRCF   00,F
2BE8:  DECFSZ 01,F
2BEA:  BRA    2BE4
2BEC:  BTFSS  00.0
2BEE:  BRA    2C0C
....................                glcd_pixel( j*8+k,i, ON ); 
2BF0:  MOVF   x41,W
2BF2:  MULLW  08
2BF4:  MOVF   FF3,W
2BF6:  ADDWF  x42,W
2BF8:  MOVWF  x43
2BFA:  MOVWF  x6E
2BFC:  MOVFF  640,66F
2C00:  MOVLW  01
2C02:  MOVWF  x70
2C04:  MOVLB  0
2C06:  CALL   10F8
2C0A:  MOVLB  6
....................          }   
2C0C:  DECF   x42,F
2C0E:  BRA    2B88
....................       } 
2C10:  INCF   x41,F
2C12:  BRA    2B7E
....................    } 
2C14:  INCF   x40,F
2C16:  BRA    2B76
....................    } 
....................     
.................... } 
2C18:  MOVLB  0
2C1A:  GOTO   5FD6 (RETURN)
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0D96:  MOVLW  15
0D98:  MOVWF  FCF
0D9A:  MOVLW  A0
0D9C:  MOVWF  FCE
....................    tiempos++; 
0D9E:  MOVLB  5
0DA0:  INCF   x9F,F
0DA2:  BTFSC  FD8.2
0DA4:  INCF   xA0,F
....................    tiempos3++; 
0DA6:  INCF   xA1,F
0DA8:  BTFSC  FD8.2
0DAA:  INCF   xA2,F
....................    tiempoctrl++; 
0DAC:  INCF   xA3,F
0DAE:  BTFSC  FD8.2
0DB0:  INCF   xA4,F
....................     
....................    if(tiempos3>=200) 
0DB2:  MOVF   xA2,F
0DB4:  BNZ   0DBC
0DB6:  MOVF   xA1,W
0DB8:  SUBLW  C7
0DBA:  BC    0DC0
....................    { 
....................       Lectura2=1; 
0DBC:  MOVLW  01
0DBE:  MOVWF  x91
....................    } 
....................      
....................    if(tiempos>=200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0DC0:  MOVF   xA0,F
0DC2:  BNZ   0DCA
0DC4:  MOVF   x9F,W
0DC6:  SUBLW  C7
0DC8:  BC    0DF4
....................    {tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++; 
0DCA:  CLRF   xA0
0DCC:  CLRF   x9F
0DCE:  BSF    x87.5
0DD0:  INCF   x95,F
0DD2:  INCF   x9B,F
0DD4:  INCF   x8D,F
....................     
....................       if(flag_setpoint==1) 
0DD6:  BTFSS  x93.4
0DD8:  BRA    0DE0
....................          tiemposetpoint++; 
0DDA:  INCF   xA9,F
0DDC:  BTFSC  FD8.2
0DDE:  INCF   xAA,F
....................           
....................       if(tiempo_esterilizacion==1) 
0DE0:  DECFSZ x9D,W
0DE2:  BRA    0DEA
....................       {                
....................          tinicio++; 
0DE4:  INCF   xA5,F
0DE6:  BTFSC  FD8.2
0DE8:  INCF   xA6,F
....................       } 
....................        
....................       if(flag_tiempocalentamiento==1) 
0DEA:  BTFSS  x93.2
0DEC:  BRA    0DF4
....................       { 
....................          tiempocalentamiento++; 
0DEE:  INCF   xA7,F
0DF0:  BTFSC  FD8.2
0DF2:  INCF   xA8,F
....................       } 
....................    }         
.................... } 
....................     
0DF4:  BCF    F9E.0
0DF6:  MOVLB  0
0DF8:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
.................... } 
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
3818:  MOVLW  06
381A:  MOVLB  6
381C:  MOVWF  x3E
381E:  MOVLW  46
3820:  MOVWF  x3D
3822:  MOVLW  42
3824:  MOVWF  FE9
3826:  MOVFF  642,652
382A:  MOVFF  641,651
382E:  MOVFF  640,650
3832:  MOVFF  63F,64F
3836:  MOVLW  01
3838:  MOVWF  x53
383A:  MOVLB  0
383C:  BRA    3662
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
383E:  MOVLB  6
3840:  MOVF   x45,W
3842:  MULLW  1B
3844:  MOVF   FF3,W
3846:  ADDWF  x43,W
3848:  MOVWF  x4F
384A:  MOVF   x45,W
384C:  MULLW  08
384E:  MOVF   FF3,W
3850:  ADDWF  x44,W
3852:  MOVWF  x50
3854:  MOVFF  643,652
3858:  MOVFF  644,653
385C:  MOVFF  64F,654
3860:  MOVWF  x55
3862:  MOVLW  01
3864:  MOVWF  x56
3866:  CLRF   x57
3868:  MOVLB  0
386A:  CALL   14AA
....................    glcd_text57(x, y, voltage, w, ON); 
386E:  MOVFF  643,652
3872:  MOVFF  644,653
3876:  MOVLW  06
3878:  MOVLB  6
387A:  MOVWF  x55
387C:  MOVLW  46
387E:  MOVWF  x54
3880:  MOVFF  645,656
3884:  MOVLW  01
3886:  MOVWF  x57
3888:  MOVLB  0
388A:  CALL   11B4
.................... } 
388E:  RETLW  00
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
1792:  MOVLW  06
1794:  MOVLB  6
1796:  MOVWF  x3E
1798:  MOVLW  45
179A:  MOVWF  x3D
179C:  MOVFF  641,64E
17A0:  MOVLW  1F
17A2:  MOVWF  x4F
17A4:  MOVLB  0
17A6:  BRA    16B2
....................     
....................    if(sombreado==1) 
17A8:  MOVLB  6
17AA:  DECFSZ x44,W
17AC:  BRA    17FC
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
17AE:  MOVLW  12
17B0:  ADDWF  x42,W
17B2:  MOVWF  x4E
17B4:  MOVLW  18
17B6:  ADDWF  x43,W
17B8:  MOVWF  x4F
17BA:  MOVFF  642,652
17BE:  MOVFF  643,653
17C2:  MOVFF  64E,654
17C6:  MOVWF  x55
17C8:  MOVLW  01
17CA:  MOVWF  x56
17CC:  MOVWF  x57
17CE:  MOVLB  0
17D0:  RCALL  14AA
17D2:  MOVLW  02
17D4:  MOVLB  6
17D6:  ADDWF  x42,W
17D8:  MOVWF  x4E
17DA:  MOVLW  01
17DC:  ADDWF  x43,W
17DE:  MOVWF  x4F
17E0:  MOVFF  64E,652
17E4:  MOVWF  x53
17E6:  MOVLW  06
17E8:  MOVWF  x55
17EA:  MOVLW  45
17EC:  MOVWF  x54
17EE:  MOVLW  02
17F0:  MOVWF  x56
17F2:  CLRF   x57
17F4:  MOVLB  0
17F6:  RCALL  11B4
....................    else    
17F8:  BRA    1846
17FA:  MOVLB  6
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
17FC:  MOVLW  12
17FE:  ADDWF  x42,W
1800:  MOVWF  x4E
1802:  MOVLW  18
1804:  ADDWF  x43,W
1806:  MOVWF  x4F
1808:  MOVFF  642,652
180C:  MOVFF  643,653
1810:  MOVFF  64E,654
1814:  MOVWF  x55
1816:  CLRF   x56
1818:  CLRF   x57
181A:  MOVLB  0
181C:  RCALL  14AA
181E:  MOVLW  02
1820:  MOVLB  6
1822:  ADDWF  x42,W
1824:  MOVWF  x4E
1826:  MOVLW  01
1828:  ADDWF  x43,W
182A:  MOVWF  x4F
182C:  MOVFF  64E,652
1830:  MOVWF  x53
1832:  MOVLW  06
1834:  MOVWF  x55
1836:  MOVLW  45
1838:  MOVWF  x54
183A:  MOVLW  02
183C:  MOVWF  x56
183E:  MOVLW  01
1840:  MOVWF  x57
1842:  MOVLB  0
1844:  RCALL  11B4
....................  
.................... } 
1846:  RETLW  00
....................  
....................  
.................... void main() 
.................... { 
*
3890:  CLRF   FF8
3892:  BCF    FD0.7
3894:  BSF    07.7
3896:  CLRF   FEA
3898:  CLRF   FE9
389A:  MOVLB  5
389C:  BCF    x86.0
389E:  BCF    x86.1
38A0:  BCF    x86.2
38A2:  BCF    x86.3
38A4:  BCF    x86.4
38A6:  BCF    x86.5
38A8:  BCF    x86.6
38AA:  BCF    x86.7
38AC:  BCF    x87.0
38AE:  CLRF   x88
38B0:  CLRF   x89
38B2:  CLRF   x8A
38B4:  CLRF   x8B
38B6:  MOVLW  0A
38B8:  MOVWF  x8C
38BA:  CLRF   x8D
38BC:  CLRF   x8E
38BE:  CLRF   x8F
38C0:  MOVLW  03
38C2:  MOVWF  x90
38C4:  CLRF   x91
38C6:  CLRF   x92
38C8:  BCF    x87.1
38CA:  BCF    x87.2
38CC:  BCF    x87.3
38CE:  BSF    x87.4
38D0:  BCF    x87.5
38D2:  BCF    x87.6
38D4:  BCF    x87.7
38D6:  BCF    x93.0
38D8:  BCF    x93.1
38DA:  BCF    x93.2
38DC:  BCF    x93.3
38DE:  BCF    x93.4
38E0:  BCF    x93.5
38E2:  CLRF   x94
38E4:  CLRF   x95
38E6:  CLRF   x96
38E8:  MOVLW  01
38EA:  MOVWF  x97
38EC:  CLRF   x98
38EE:  CLRF   x99
38F0:  CLRF   x9A
38F2:  CLRF   x9B
38F4:  MOVWF  x9C
38F6:  CLRF   x9D
38F8:  CLRF   x9E
38FA:  CLRF   xA0
38FC:  CLRF   x9F
38FE:  CLRF   xA2
3900:  CLRF   xA1
3902:  CLRF   xA4
3904:  CLRF   xA3
3906:  CLRF   xA6
3908:  CLRF   xA5
390A:  CLRF   xA8
390C:  CLRF   xA7
390E:  CLRF   xAA
3910:  CLRF   xA9
3912:  CLRF   xAC
3914:  CLRF   xAB
3916:  CLRF   xAE
3918:  CLRF   xAD
391A:  CLRF   xB0
391C:  CLRF   xAF
391E:  CLRF   xB2
3920:  CLRF   xB1
3922:  CLRF   xB6
3924:  CLRF   xB5
3926:  CLRF   xB4
3928:  CLRF   xB3
392A:  CLRF   xBA
392C:  CLRF   xB9
392E:  CLRF   xB8
3930:  CLRF   xB7
3932:  CLRF   xBE
3934:  CLRF   xBD
3936:  CLRF   xBC
3938:  CLRF   xBB
393A:  CLRF   xD2
393C:  CLRF   xD1
393E:  CLRF   xD0
3940:  CLRF   xCF
3942:  CLRF   xD6
3944:  MOVLW  40
3946:  MOVWF  xD5
3948:  MOVLW  1C
394A:  MOVWF  xD4
394C:  MOVLW  8C
394E:  MOVWF  xD3
3950:  CLRF   xDE
3952:  CLRF   xDD
3954:  MOVLW  20
3956:  MOVWF  xDC
3958:  MOVLW  82
395A:  MOVWF  xDB
395C:  CLRF   xE2
395E:  CLRF   xE1
3960:  CLRF   xE0
3962:  CLRF   xDF
3964:  CLRF   xE6
3966:  CLRF   xE5
3968:  CLRF   xE4
396A:  CLRF   xE3
396C:  CLRF   xEA
396E:  CLRF   xE9
3970:  CLRF   xE8
3972:  CLRF   xE7
3974:  CLRF   xEE
3976:  CLRF   xED
3978:  CLRF   xEC
397A:  CLRF   xEB
397C:  CLRF   xF2
397E:  CLRF   xF1
3980:  CLRF   xF0
3982:  CLRF   xEF
3984:  CLRF   xF6
3986:  CLRF   xF5
3988:  MOVLW  48
398A:  MOVWF  xF4
398C:  MOVLW  83
398E:  MOVWF  xF3
3990:  CLRF   xFA
3992:  CLRF   xF9
3994:  MOVLW  20
3996:  MOVWF  xF8
3998:  MOVLW  83
399A:  MOVWF  xF7
399C:  CLRF   xFE
399E:  CLRF   xFD
39A0:  CLRF   xFC
39A2:  MOVLW  7F
39A4:  MOVWF  xFB
39A6:  MOVLB  6
39A8:  CLRF   x02
39AA:  CLRF   x01
39AC:  MOVLW  18
39AE:  MOVWF  x00
39B0:  MOVLW  84
39B2:  MOVLB  5
39B4:  MOVWF  xFF
39B6:  MOVLB  6
39B8:  CLRF   x06
39BA:  CLRF   x05
39BC:  CLRF   x04
39BE:  CLRF   x03
39C0:  CLRF   x0A
39C2:  CLRF   x09
39C4:  CLRF   x08
39C6:  CLRF   x07
39C8:  CLRF   x0E
39CA:  CLRF   x0D
39CC:  MOVLW  20
39CE:  MOVWF  x0C
39D0:  MOVLW  82
39D2:  MOVWF  x0B
39D4:  CLRF   x12
39D6:  CLRF   x11
39D8:  CLRF   x10
39DA:  CLRF   x0F
39DC:  MOVLW  E0
39DE:  MOVWF  x16
39E0:  MOVLW  2D
39E2:  MOVWF  x15
39E4:  MOVLW  10
39E6:  MOVWF  x14
39E8:  MOVLW  75
39EA:  MOVWF  x13
39EC:  MOVLW  FF
39EE:  MOVWF  x1A
39F0:  MOVLW  21
39F2:  MOVWF  x19
39F4:  MOVLW  15
39F6:  MOVWF  x18
39F8:  MOVLW  80
39FA:  MOVWF  x17
39FC:  MOVLW  82
39FE:  MOVWF  x1E
3A00:  MOVLW  12
3A02:  MOVWF  x1D
3A04:  MOVLW  F4
3A06:  MOVWF  x1C
3A08:  MOVLW  86
3A0A:  MOVWF  x1B
3A0C:  MOVF   FC1,W
3A0E:  ANDLW  C0
3A10:  IORLW  0F
3A12:  MOVWF  FC1
3A14:  MOVLW  07
3A16:  MOVWF  FB4
3A18:  MOVLB  4
3A1A:  CLRF   x16
3A1C:  CLRF   x17
3A1E:  CLRF   x18
3A20:  CLRF   x19
3A22:  CLRF   x1A
3A24:  CLRF   x1B
3A26:  CLRF   x1C
3A28:  CLRF   x1D
3A2A:  CLRF   x1E
3A2C:  CLRF   x1F
3A2E:  CLRF   x20
3A30:  CLRF   x21
3A32:  CLRF   x22
3A34:  CLRF   x23
3A36:  CLRF   x24
3A38:  CLRF   x25
3A3A:  CLRF   x26
3A3C:  CLRF   x27
3A3E:  CLRF   x28
3A40:  CLRF   x29
3A42:  CLRF   x2A
3A44:  CLRF   x2B
3A46:  CLRF   x2C
3A48:  CLRF   x2D
3A4A:  CLRF   x2E
3A4C:  CLRF   x2F
3A4E:  CLRF   x30
3A50:  CLRF   x31
3A52:  CLRF   x32
3A54:  CLRF   x33
3A56:  CLRF   x34
3A58:  CLRF   x35
3A5A:  CLRF   x36
3A5C:  CLRF   x37
3A5E:  CLRF   x38
3A60:  CLRF   x39
3A62:  CLRF   x3A
3A64:  CLRF   x3B
3A66:  CLRF   x3C
3A68:  CLRF   x3D
3A6A:  CLRF   x3E
3A6C:  CLRF   x3F
3A6E:  CLRF   x40
3A70:  CLRF   x41
3A72:  CLRF   x42
3A74:  CLRF   x43
3A76:  CLRF   x44
3A78:  CLRF   x45
3A7A:  CLRF   x46
3A7C:  CLRF   x47
3A7E:  CLRF   x48
3A80:  CLRF   x49
3A82:  CLRF   x4A
3A84:  CLRF   x4B
3A86:  CLRF   x4C
3A88:  CLRF   x4D
3A8A:  CLRF   x4E
3A8C:  CLRF   x4F
3A8E:  CLRF   x50
3A90:  CLRF   x51
3A92:  CLRF   x52
3A94:  CLRF   x53
3A96:  CLRF   x54
3A98:  CLRF   x55
3A9A:  CLRF   x56
3A9C:  CLRF   x57
3A9E:  CLRF   x58
3AA0:  CLRF   x59
3AA2:  CLRF   x5A
3AA4:  CLRF   x5B
3AA6:  CLRF   x5C
3AA8:  CLRF   x5D
3AAA:  CLRF   x5E
3AAC:  CLRF   x5F
3AAE:  CLRF   x60
3AB0:  CLRF   x61
3AB2:  CLRF   x62
3AB4:  CLRF   x63
3AB6:  CLRF   x64
3AB8:  CLRF   x65
3ABA:  CLRF   x66
3ABC:  CLRF   x67
3ABE:  CLRF   x68
3AC0:  CLRF   x69
3AC2:  CLRF   x6A
3AC4:  CLRF   x6B
3AC6:  CLRF   x6C
3AC8:  CLRF   x6D
3ACA:  CLRF   x6E
3ACC:  CLRF   x6F
3ACE:  CLRF   x70
3AD0:  CLRF   x71
3AD2:  CLRF   x72
3AD4:  CLRF   x73
3AD6:  CLRF   x74
3AD8:  CLRF   x75
3ADA:  CLRF   x76
3ADC:  CLRF   x77
3ADE:  CLRF   x78
3AE0:  CLRF   x79
3AE2:  CLRF   x7A
3AE4:  CLRF   x7B
3AE6:  CLRF   x7C
3AE8:  CLRF   x7D
3AEA:  CLRF   x7E
3AEC:  CLRF   x7F
3AEE:  CLRF   x80
3AF0:  CLRF   x81
3AF2:  CLRF   x82
3AF4:  CLRF   x83
3AF6:  CLRF   x84
3AF8:  CLRF   x85
3AFA:  CLRF   x86
3AFC:  CLRF   x87
3AFE:  CLRF   x88
3B00:  CLRF   x89
3B02:  CLRF   x8A
3B04:  CLRF   x8B
3B06:  CLRF   x8C
3B08:  CLRF   x8D
3B0A:  CLRF   x8E
3B0C:  CLRF   x8F
3B0E:  CLRF   x90
3B10:  CLRF   x91
3B12:  CLRF   x92
3B14:  CLRF   x93
3B16:  CLRF   x94
3B18:  CLRF   x95
3B1A:  CLRF   x96
3B1C:  CLRF   x97
3B1E:  CLRF   x98
3B20:  CLRF   x99
3B22:  CLRF   x9A
3B24:  CLRF   x9B
3B26:  CLRF   x9C
3B28:  CLRF   x9D
3B2A:  CLRF   x9E
3B2C:  CLRF   x9F
3B2E:  CLRF   xA0
3B30:  CLRF   xA1
3B32:  CLRF   xA2
3B34:  CLRF   xA3
3B36:  CLRF   xA4
3B38:  CLRF   xA5
3B3A:  CLRF   xA6
3B3C:  CLRF   xA7
3B3E:  CLRF   xA8
3B40:  CLRF   xA9
3B42:  CLRF   xAA
3B44:  CLRF   xAB
3B46:  CLRF   xAC
3B48:  CLRF   xAD
3B4A:  CLRF   xAE
3B4C:  CLRF   xAF
3B4E:  CLRF   xB0
3B50:  CLRF   xB1
3B52:  CLRF   xB2
3B54:  CLRF   xB3
3B56:  CLRF   xB4
3B58:  CLRF   xB5
3B5A:  CLRF   xB6
3B5C:  CLRF   xB7
3B5E:  CLRF   xB8
3B60:  CLRF   xB9
3B62:  CLRF   xBA
3B64:  CLRF   xBB
3B66:  CLRF   xBC
3B68:  CLRF   xBD
3B6A:  CLRF   xBE
3B6C:  CLRF   xBF
3B6E:  CLRF   xC0
3B70:  CLRF   xC1
3B72:  CLRF   xC2
3B74:  CLRF   xC3
3B76:  CLRF   xC4
3B78:  CLRF   xC5
3B7A:  CLRF   xC6
3B7C:  CLRF   xC7
3B7E:  CLRF   xC8
3B80:  CLRF   xC9
3B82:  CLRF   xCA
3B84:  CLRF   xCB
3B86:  CLRF   xCC
3B88:  CLRF   xCD
3B8A:  CLRF   xCE
3B8C:  CLRF   xCF
3B8E:  CLRF   xD0
3B90:  CLRF   xD1
3B92:  CLRF   xD2
3B94:  CLRF   xD3
3B96:  CLRF   xD4
3B98:  CLRF   xD5
3B9A:  CLRF   xD6
3B9C:  CLRF   xD7
3B9E:  CLRF   xD8
3BA0:  CLRF   xD9
3BA2:  CLRF   xDA
3BA4:  CLRF   xDB
3BA6:  CLRF   xDC
3BA8:  CLRF   xDD
3BAA:  CLRF   xDE
3BAC:  CLRF   xDF
3BAE:  CLRF   xE0
3BB0:  CLRF   xE1
3BB2:  CLRF   xE2
3BB4:  CLRF   xE3
3BB6:  CLRF   xE4
3BB8:  CLRF   xE5
3BBA:  CLRF   xE6
3BBC:  CLRF   xE7
3BBE:  CLRF   xE8
3BC0:  CLRF   xE9
3BC2:  CLRF   xEA
3BC4:  CLRF   xEB
3BC6:  CLRF   xEC
3BC8:  CLRF   xED
3BCA:  CLRF   xEE
3BCC:  CLRF   xEF
3BCE:  CLRF   xF0
3BD0:  CLRF   xF1
3BD2:  CLRF   xF2
3BD4:  CLRF   xF3
3BD6:  CLRF   xF4
3BD8:  CLRF   xF5
3BDA:  CLRF   xF6
3BDC:  CLRF   xF7
3BDE:  CLRF   xF8
3BE0:  CLRF   xF9
3BE2:  CLRF   xFA
3BE4:  CLRF   xFB
3BE6:  CLRF   xFC
3BE8:  CLRF   xFD
3BEA:  CLRF   xFE
3BEC:  CLRF   xFF
3BEE:  MOVLB  5
3BF0:  CLRF   x00
3BF2:  CLRF   x01
3BF4:  CLRF   x02
3BF6:  CLRF   x03
3BF8:  CLRF   x04
3BFA:  CLRF   x05
3BFC:  CLRF   x06
3BFE:  CLRF   x07
3C00:  CLRF   x08
3C02:  CLRF   x09
3C04:  CLRF   x0A
3C06:  CLRF   x0B
3C08:  CLRF   x0C
3C0A:  CLRF   x0D
3C0C:  CLRF   x0E
3C0E:  CLRF   x0F
3C10:  CLRF   x10
3C12:  CLRF   x11
3C14:  CLRF   x12
3C16:  CLRF   x13
3C18:  CLRF   x14
3C1A:  CLRF   x15
3C1C:  CLRF   x16
3C1E:  CLRF   x17
3C20:  CLRF   x18
3C22:  CLRF   x19
3C24:  CLRF   x1A
3C26:  CLRF   x1B
3C28:  CLRF   x1C
3C2A:  CLRF   x1D
3C2C:  CLRF   x1E
3C2E:  CLRF   x1F
3C30:  CLRF   x20
3C32:  CLRF   x21
3C34:  CLRF   x22
3C36:  CLRF   x23
3C38:  CLRF   x24
3C3A:  CLRF   x25
3C3C:  CLRF   x26
3C3E:  CLRF   x27
3C40:  CLRF   x28
3C42:  CLRF   x29
3C44:  CLRF   x2A
3C46:  CLRF   x2B
3C48:  CLRF   x2C
3C4A:  CLRF   x2D
3C4C:  CLRF   x2E
3C4E:  CLRF   x2F
3C50:  CLRF   x30
3C52:  CLRF   x31
3C54:  CLRF   x32
3C56:  CLRF   x33
3C58:  CLRF   x34
3C5A:  CLRF   x35
3C5C:  CLRF   x36
3C5E:  CLRF   x37
3C60:  CLRF   x38
3C62:  CLRF   x39
3C64:  CLRF   x3A
3C66:  CLRF   x3B
3C68:  CLRF   x3C
3C6A:  CLRF   x3D
3C6C:  CLRF   x3E
3C6E:  CLRF   x3F
3C70:  CLRF   x40
3C72:  CLRF   x41
3C74:  CLRF   x42
3C76:  CLRF   x43
3C78:  CLRF   x44
3C7A:  CLRF   x45
3C7C:  CLRF   x46
3C7E:  CLRF   x47
3C80:  CLRF   x48
3C82:  CLRF   x49
3C84:  CLRF   x4A
3C86:  CLRF   x4B
3C88:  CLRF   x4C
3C8A:  CLRF   x4D
3C8C:  CLRF   x4E
3C8E:  CLRF   x4F
3C90:  CLRF   x50
3C92:  CLRF   x51
3C94:  CLRF   x52
3C96:  CLRF   x53
3C98:  CLRF   x54
3C9A:  CLRF   x55
3C9C:  CLRF   x56
3C9E:  CLRF   x57
3CA0:  CLRF   x58
3CA2:  CLRF   x59
3CA4:  CLRF   x5A
3CA6:  CLRF   x5B
3CA8:  CLRF   x5C
3CAA:  CLRF   x5D
3CAC:  CLRF   x5E
3CAE:  CLRF   x5F
3CB0:  CLRF   x60
3CB2:  CLRF   x61
3CB4:  CLRF   x62
3CB6:  CLRF   x63
3CB8:  CLRF   x64
3CBA:  CLRF   x65
3CBC:  CLRF   x66
3CBE:  CLRF   x67
3CC0:  CLRF   x68
3CC2:  CLRF   x69
3CC4:  CLRF   x6A
3CC6:  CLRF   x6B
3CC8:  CLRF   x6C
3CCA:  CLRF   x6D
3CCC:  CLRF   x6E
3CCE:  CLRF   x6F
3CD0:  CLRF   x70
3CD2:  CLRF   x71
3CD4:  CLRF   x72
3CD6:  CLRF   x73
3CD8:  CLRF   x74
3CDA:  CLRF   x75
3CDC:  CLRF   x76
3CDE:  CLRF   x77
3CE0:  CLRF   x78
3CE2:  CLRF   x79
3CE4:  CLRF   x7A
3CE6:  CLRF   x7B
3CE8:  CLRF   x7C
3CEA:  CLRF   x7D
3CEC:  CLRF   x7E
3CEE:  CLRF   x7F
3CF0:  CLRF   x80
3CF2:  CLRF   x81
3CF4:  CLRF   x82
3CF6:  CLRF   x83
3CF8:  CLRF   x84
3CFA:  CLRF   x85
3CFC:  CLRF   xBF
3CFE:  CLRF   xC0
3D00:  CLRF   xC1
3D02:  CLRF   xC2
3D04:  CLRF   xC3
3D06:  CLRF   xC4
3D08:  CLRF   xC5
3D0A:  CLRF   xC6
3D0C:  CLRF   xC7
3D0E:  CLRF   xC8
3D10:  CLRF   xC9
3D12:  CLRF   xCA
3D14:  CLRF   xCB
3D16:  CLRF   xCC
3D18:  CLRF   xCD
3D1A:  CLRF   xCE
3D1C:  MOVLB  6
3D1E:  CLRF   x3D
3D20:  CLRF   x3E
....................    delay_ms(1000);    
3D22:  MOVLW  04
3D24:  MOVWF  x3F
3D26:  MOVLW  FA
3D28:  MOVWF  x45
3D2A:  MOVLB  0
3D2C:  CALL   0DFC
3D30:  MOVLB  6
3D32:  DECFSZ x3F,F
3D34:  BRA    3D26
....................    Buzzer_off; 
3D36:  BCF    F8A.7
3D38:  BCF    F93.7
....................    Velocidades(0); 
3D3A:  CLRF   x3F
3D3C:  MOVLB  0
3D3E:  CALL   0E26
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
3D42:  MOVLW  85
3D44:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
3D46:  BSF    F9D.0
....................    setup_adc_ports(AN0_TO_AN1); 
3D48:  MOVF   FC1,W
3D4A:  ANDLW  C0
3D4C:  IORLW  0D
3D4E:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_64); 
3D50:  BCF    FC0.0
3D52:  BSF    FC0.1
3D54:  BSF    FC0.2
3D56:  BSF    FC0.7
3D58:  BSF    FC2.0
....................    setup_ccp2 (CCP_PWM); 
3D5A:  BCF    F94.1
3D5C:  BCF    F8B.1
3D5E:  MOVLW  0C
3D60:  MOVWF  FBA
....................    setup_timer_2(T2_DIV_BY_16, 255, 1);    
3D62:  MOVLW  00
3D64:  IORLW  06
3D66:  MOVWF  FCA
3D68:  MOVLW  FF
3D6A:  MOVWF  FCB
....................    set_pwm2_duty(0); 
3D6C:  CLRF   FBB
....................    enable_interrupts(global); 
3D6E:  MOVLW  C0
3D70:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0); 
3D72:  MOVFF  FF2,63F
3D76:  BCF    FF2.7
3D78:  CLRF   FA9
3D7A:  BCF    FA6.6
3D7C:  BCF    FA6.7
3D7E:  BSF    FA6.0
3D80:  MOVF   FA8,W
3D82:  MOVLB  6
3D84:  BTFSC  x3F.7
3D86:  BSF    FF2.7
3D88:  MOVLB  5
3D8A:  MOVWF  xC3
....................    delay_ms(50);    
3D8C:  MOVLW  32
3D8E:  MOVLB  6
3D90:  MOVWF  x45
3D92:  MOVLB  0
3D94:  CALL   0DFC
....................    Testerilizacionp[1]=read_eeprom(1); 
3D98:  MOVFF  FF2,63F
3D9C:  BCF    FF2.7
3D9E:  MOVLW  01
3DA0:  MOVWF  FA9
3DA2:  BCF    FA6.6
3DA4:  BCF    FA6.7
3DA6:  BSF    FA6.0
3DA8:  MOVF   FA8,W
3DAA:  MOVLB  6
3DAC:  BTFSC  x3F.7
3DAE:  BSF    FF2.7
3DB0:  MOVLB  5
3DB2:  MOVWF  xC4
....................    delay_ms(50);    
3DB4:  MOVLW  32
3DB6:  MOVLB  6
3DB8:  MOVWF  x45
3DBA:  MOVLB  0
3DBC:  CALL   0DFC
....................    Testerilizacionp[2]=read_eeprom(2); 
3DC0:  MOVFF  FF2,63F
3DC4:  BCF    FF2.7
3DC6:  MOVLW  02
3DC8:  MOVWF  FA9
3DCA:  BCF    FA6.6
3DCC:  BCF    FA6.7
3DCE:  BSF    FA6.0
3DD0:  MOVF   FA8,W
3DD2:  MOVLB  6
3DD4:  BTFSC  x3F.7
3DD6:  BSF    FF2.7
3DD8:  MOVLB  5
3DDA:  MOVWF  xC5
....................    delay_ms(50); 
3DDC:  MOVLW  32
3DDE:  MOVLB  6
3DE0:  MOVWF  x45
3DE2:  MOVLB  0
3DE4:  CALL   0DFC
....................    Testerilizacionp[3]=read_eeprom(3); 
3DE8:  MOVFF  FF2,63F
3DEC:  BCF    FF2.7
3DEE:  MOVLW  03
3DF0:  MOVWF  FA9
3DF2:  BCF    FA6.6
3DF4:  BCF    FA6.7
3DF6:  BSF    FA6.0
3DF8:  MOVF   FA8,W
3DFA:  MOVLB  6
3DFC:  BTFSC  x3F.7
3DFE:  BSF    FF2.7
3E00:  MOVLB  5
3E02:  MOVWF  xC6
....................    delay_ms(50);    
3E04:  MOVLW  32
3E06:  MOVLB  6
3E08:  MOVWF  x45
3E0A:  MOVLB  0
3E0C:  CALL   0DFC
....................    Temperatura1=make16(read_eeprom(81),read_eeprom(80)); 
3E10:  MOVFF  FF2,63F
3E14:  BCF    FF2.7
3E16:  MOVLW  51
3E18:  MOVWF  FA9
3E1A:  BCF    FA6.6
3E1C:  BCF    FA6.7
3E1E:  BSF    FA6.0
3E20:  MOVF   FA8,W
3E22:  MOVLB  6
3E24:  BTFSC  x3F.7
3E26:  BSF    FF2.7
3E28:  MOVWF  x40
3E2A:  MOVFF  FF2,641
3E2E:  BCF    FF2.7
3E30:  MOVLW  50
3E32:  MOVWF  FA9
3E34:  BCF    FA6.6
3E36:  BCF    FA6.7
3E38:  BSF    FA6.0
3E3A:  MOVF   FA8,W
3E3C:  BTFSC  x41.7
3E3E:  BSF    FF2.7
3E40:  MOVWF  x42
3E42:  MOVFF  640,5AE
3E46:  MOVFF  642,5AD
....................    delay_ms(50);    
3E4A:  MOVLW  32
3E4C:  MOVWF  x45
3E4E:  MOVLB  0
3E50:  CALL   0DFC
....................    Temperatura2=make16(read_eeprom(84),read_eeprom(83)); 
3E54:  MOVFF  FF2,63F
3E58:  BCF    FF2.7
3E5A:  MOVLW  54
3E5C:  MOVWF  FA9
3E5E:  BCF    FA6.6
3E60:  BCF    FA6.7
3E62:  BSF    FA6.0
3E64:  MOVF   FA8,W
3E66:  MOVLB  6
3E68:  BTFSC  x3F.7
3E6A:  BSF    FF2.7
3E6C:  MOVWF  x40
3E6E:  MOVFF  FF2,641
3E72:  BCF    FF2.7
3E74:  MOVLW  53
3E76:  MOVWF  FA9
3E78:  BCF    FA6.6
3E7A:  BCF    FA6.7
3E7C:  BSF    FA6.0
3E7E:  MOVF   FA8,W
3E80:  BTFSC  x41.7
3E82:  BSF    FF2.7
3E84:  MOVWF  x42
3E86:  MOVFF  640,5B0
3E8A:  MOVFF  642,5AF
....................    delay_ms(50);    
3E8E:  MOVLW  32
3E90:  MOVWF  x45
3E92:  MOVLB  0
3E94:  CALL   0DFC
....................    Temperatura3=make16(read_eeprom(87),read_eeprom(86)); 
3E98:  MOVFF  FF2,63F
3E9C:  BCF    FF2.7
3E9E:  MOVLW  57
3EA0:  MOVWF  FA9
3EA2:  BCF    FA6.6
3EA4:  BCF    FA6.7
3EA6:  BSF    FA6.0
3EA8:  MOVF   FA8,W
3EAA:  MOVLB  6
3EAC:  BTFSC  x3F.7
3EAE:  BSF    FF2.7
3EB0:  MOVWF  x40
3EB2:  MOVFF  FF2,641
3EB6:  BCF    FF2.7
3EB8:  MOVLW  56
3EBA:  MOVWF  FA9
3EBC:  BCF    FA6.6
3EBE:  BCF    FA6.7
3EC0:  BSF    FA6.0
3EC2:  MOVF   FA8,W
3EC4:  BTFSC  x41.7
3EC6:  BSF    FF2.7
3EC8:  MOVWF  x42
3ECA:  MOVFF  640,5B2
3ECE:  MOVFF  642,5B1
....................    delay_ms(50);    
3ED2:  MOVLW  32
3ED4:  MOVWF  x45
3ED6:  MOVLB  0
3ED8:  CALL   0DFC
....................    Password[0]=read_eeprom(10); 
3EDC:  MOVFF  FF2,63F
3EE0:  BCF    FF2.7
3EE2:  MOVLW  0A
3EE4:  MOVWF  FA9
3EE6:  BCF    FA6.6
3EE8:  BCF    FA6.7
3EEA:  BSF    FA6.0
3EEC:  MOVF   FA8,W
3EEE:  MOVLB  6
3EF0:  BTFSC  x3F.7
3EF2:  BSF    FF2.7
3EF4:  MOVLB  5
3EF6:  MOVWF  xCB
....................    delay_ms(50);    
3EF8:  MOVLW  32
3EFA:  MOVLB  6
3EFC:  MOVWF  x45
3EFE:  MOVLB  0
3F00:  CALL   0DFC
....................    Password[1]=read_eeprom(11); 
3F04:  MOVFF  FF2,63F
3F08:  BCF    FF2.7
3F0A:  MOVLW  0B
3F0C:  MOVWF  FA9
3F0E:  BCF    FA6.6
3F10:  BCF    FA6.7
3F12:  BSF    FA6.0
3F14:  MOVF   FA8,W
3F16:  MOVLB  6
3F18:  BTFSC  x3F.7
3F1A:  BSF    FF2.7
3F1C:  MOVLB  5
3F1E:  MOVWF  xCC
....................    delay_ms(50);    
3F20:  MOVLW  32
3F22:  MOVLB  6
3F24:  MOVWF  x45
3F26:  MOVLB  0
3F28:  CALL   0DFC
....................    Password[2]=read_eeprom(12); 
3F2C:  MOVFF  FF2,63F
3F30:  BCF    FF2.7
3F32:  MOVLW  0C
3F34:  MOVWF  FA9
3F36:  BCF    FA6.6
3F38:  BCF    FA6.7
3F3A:  BSF    FA6.0
3F3C:  MOVF   FA8,W
3F3E:  MOVLB  6
3F40:  BTFSC  x3F.7
3F42:  BSF    FF2.7
3F44:  MOVLB  5
3F46:  MOVWF  xCD
....................    delay_ms(50);    
3F48:  MOVLW  32
3F4A:  MOVLB  6
3F4C:  MOVWF  x45
3F4E:  MOVLB  0
3F50:  CALL   0DFC
....................    Password[3]=read_eeprom(13); 
3F54:  MOVFF  FF2,63F
3F58:  BCF    FF2.7
3F5A:  MOVLW  0D
3F5C:  MOVWF  FA9
3F5E:  BCF    FA6.6
3F60:  BCF    FA6.7
3F62:  BSF    FA6.0
3F64:  MOVF   FA8,W
3F66:  MOVLB  6
3F68:  BTFSC  x3F.7
3F6A:  BSF    FF2.7
3F6C:  MOVLB  5
3F6E:  MOVWF  xCE
....................    delay_ms(50);    
3F70:  MOVLW  32
3F72:  MOVLB  6
3F74:  MOVWF  x45
3F76:  MOVLB  0
3F78:  CALL   0DFC
....................    Ganancia=read_eeprom(90); 
3F7C:  MOVFF  FF2,63F
3F80:  BCF    FF2.7
3F82:  MOVLW  5A
3F84:  MOVWF  FA9
3F86:  BCF    FA6.6
3F88:  BCF    FA6.7
3F8A:  BSF    FA6.0
3F8C:  MOVF   FA8,W
3F8E:  MOVLB  6
3F90:  BTFSC  x3F.7
3F92:  BSF    FF2.7
3F94:  CLRF   x46
3F96:  MOVWF  x45
3F98:  MOVLB  0
3F9A:  CALL   0E4E
3F9E:  MOVFF  03,5F6
3FA2:  MOVFF  02,5F5
3FA6:  MOVFF  01,5F4
3FAA:  MOVFF  00,5F3
....................    delay_ms(50);    
3FAE:  MOVLW  32
3FB0:  MOVLB  6
3FB2:  MOVWF  x45
3FB4:  MOVLB  0
3FB6:  CALL   0DFC
....................    Tciclo=read_eeprom(30); 
3FBA:  MOVFF  FF2,63F
3FBE:  BCF    FF2.7
3FC0:  MOVLW  1E
3FC2:  MOVWF  FA9
3FC4:  BCF    FA6.6
3FC6:  BCF    FA6.7
3FC8:  BSF    FA6.0
3FCA:  MOVF   FA8,W
3FCC:  MOVLB  6
3FCE:  BTFSC  x3F.7
3FD0:  BSF    FF2.7
3FD2:  CLRF   x46
3FD4:  MOVWF  x45
3FD6:  MOVLB  0
3FD8:  CALL   0E4E
3FDC:  MOVFF  03,5DE
3FE0:  MOVFF  02,5DD
3FE4:  MOVFF  01,5DC
3FE8:  MOVFF  00,5DB
....................    delay_ms(50);    
3FEC:  MOVLW  32
3FEE:  MOVLB  6
3FF0:  MOVWF  x45
3FF2:  MOVLB  0
3FF4:  CALL   0DFC
....................    Ajuste=read_eeprom(40); 
3FF8:  MOVFF  FF2,63F
3FFC:  BCF    FF2.7
3FFE:  MOVLW  28
4000:  MOVWF  FA9
4002:  BCF    FA6.6
4004:  BCF    FA6.7
4006:  BSF    FA6.0
4008:  MOVF   FA8,W
400A:  MOVLB  6
400C:  BTFSC  x3F.7
400E:  BSF    FF2.7
4010:  MOVLB  5
4012:  MOVWF  x8A
....................    delay_ms(50);    
4014:  MOVLW  32
4016:  MOVLB  6
4018:  MOVWF  x45
401A:  MOVLB  0
401C:  CALL   0DFC
....................    Ajusten=read_eeprom(50); 
4020:  MOVFF  FF2,63F
4024:  BCF    FF2.7
4026:  MOVLW  32
4028:  MOVWF  FA9
402A:  BCF    FA6.6
402C:  BCF    FA6.7
402E:  BSF    FA6.0
4030:  MOVF   FA8,W
4032:  MOVLB  6
4034:  BTFSC  x3F.7
4036:  BSF    FF2.7
4038:  MOVLB  5
403A:  MOVWF  x8B
....................    delay_ms(50);    
403C:  MOVLW  32
403E:  MOVLB  6
4040:  MOVWF  x45
4042:  MOVLB  0
4044:  CALL   0DFC
....................    MediaMovil=read_eeprom(60); 
4048:  MOVFF  FF2,63F
404C:  BCF    FF2.7
404E:  MOVLW  3C
4050:  MOVWF  FA9
4052:  BCF    FA6.6
4054:  BCF    FA6.7
4056:  BSF    FA6.0
4058:  MOVF   FA8,W
405A:  MOVLB  6
405C:  BTFSC  x3F.7
405E:  BSF    FF2.7
4060:  MOVLB  5
4062:  MOVWF  x8C
....................    delay_ms(50);    
4064:  MOVLW  32
4066:  MOVLB  6
4068:  MOVWF  x45
406A:  MOVLB  0
406C:  CALL   0DFC
....................    Coeficiente=read_eeprom(70); 
4070:  MOVFF  FF2,63F
4074:  BCF    FF2.7
4076:  MOVLW  46
4078:  MOVWF  FA9
407A:  BCF    FA6.6
407C:  BCF    FA6.7
407E:  BSF    FA6.0
4080:  MOVF   FA8,W
4082:  MOVLB  6
4084:  BTFSC  x3F.7
4086:  BSF    FF2.7
4088:  CLRF   x46
408A:  MOVWF  x45
408C:  MOVLB  0
408E:  CALL   0E4E
4092:  MOVFF  03,602
4096:  MOVFF  02,601
409A:  MOVFF  01,600
409E:  MOVFF  00,5FF
....................    delay_ms(50);    
40A2:  MOVLW  32
40A4:  MOVLB  6
40A6:  MOVWF  x45
40A8:  MOVLB  0
40AA:  CALL   0DFC
....................    Saturacion=read_eeprom(100); 
40AE:  MOVFF  FF2,63F
40B2:  BCF    FF2.7
40B4:  MOVLW  64
40B6:  MOVWF  FA9
40B8:  BCF    FA6.6
40BA:  BCF    FA6.7
40BC:  BSF    FA6.0
40BE:  MOVF   FA8,W
40C0:  MOVLB  6
40C2:  BTFSC  x3F.7
40C4:  BSF    FF2.7
40C6:  CLRF   x46
40C8:  MOVWF  x45
40CA:  MOVLB  0
40CC:  CALL   0E4E
40D0:  MOVFF  03,60E
40D4:  MOVFF  02,60D
40D8:  MOVFF  01,60C
40DC:  MOVFF  00,60B
....................     
....................    if(Ganancia>10.0) 
40E0:  MOVLB  6
40E2:  CLRF   x42
40E4:  CLRF   x41
40E6:  MOVLW  20
40E8:  MOVWF  x40
40EA:  MOVLW  82
40EC:  MOVWF  x3F
40EE:  MOVFF  5F6,646
40F2:  MOVFF  5F5,645
40F6:  MOVFF  5F4,644
40FA:  MOVFF  5F3,643
40FE:  MOVLB  0
4100:  CALL   0E84
4104:  BNC   4112
....................    { 
....................       Ganancia=2.0; 
4106:  MOVLB  5
4108:  CLRF   xF6
410A:  CLRF   xF5
410C:  CLRF   xF4
410E:  MOVLW  80
4110:  MOVWF  xF3
....................    } 
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
4112:  MOVLW  01
4114:  MOVLB  6
4116:  MOVWF  x3F
4118:  MOVLB  0
411A:  CALL   1050
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
411E:  MOVLB  6
4120:  CLRF   x40
4122:  MOVLB  0
4124:  CALL   0F3E
....................    strcpy(Menus.Letra,"JP Inglobal"); 
4128:  MOVLW  06
412A:  MOVWF  FEA
412C:  MOVLW  1F
412E:  MOVWF  FE9
4130:  MOVFF  FF2,63F
4134:  BCF    FF2.7
4136:  MOVLW  00
4138:  CALL   06DA
413C:  TBLRD*-
413E:  TBLRD*+
4140:  MOVF   FF5,W
4142:  MOVWF  FEE
4144:  IORLW  00
4146:  BNZ   413E
4148:  MOVLB  6
414A:  BTFSC  x3F.7
414C:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
414E:  MOVLW  06
4150:  MOVWF  x40
4152:  MOVLW  1F
4154:  MOVWF  x3F
4156:  CLRF   x41
4158:  CLRF   x42
415A:  CLRF   x43
415C:  MOVLW  02
415E:  MOVWF  x44
4160:  MOVLB  0
4162:  CALL   156C
....................    strcpy(Menus.Letra,"    Incubadora"); 
4166:  MOVLW  06
4168:  MOVWF  FEA
416A:  MOVLW  1F
416C:  MOVWF  FE9
416E:  MOVFF  FF2,63F
4172:  BCF    FF2.7
4174:  MOVLW  00
4176:  CALL   0700
417A:  TBLRD*-
417C:  TBLRD*+
417E:  MOVF   FF5,W
4180:  MOVWF  FEE
4182:  IORLW  00
4184:  BNZ   417C
4186:  MOVLB  6
4188:  BTFSC  x3F.7
418A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
418C:  MOVLW  06
418E:  MOVWF  x40
4190:  MOVLW  1F
4192:  MOVWF  x3F
4194:  CLRF   x41
4196:  MOVLW  14
4198:  MOVWF  x42
419A:  CLRF   x43
419C:  MOVLW  01
419E:  MOVWF  x44
41A0:  MOVLB  0
41A2:  CALL   156C
....................    strcpy(Menus.Letra,"    Refrigerada"); 
41A6:  MOVLW  06
41A8:  MOVWF  FEA
41AA:  MOVLW  1F
41AC:  MOVWF  FE9
41AE:  MOVFF  FF2,63F
41B2:  BCF    FF2.7
41B4:  MOVLW  00
41B6:  CALL   072A
41BA:  TBLRD*-
41BC:  TBLRD*+
41BE:  MOVF   FF5,W
41C0:  MOVWF  FEE
41C2:  IORLW  00
41C4:  BNZ   41BC
41C6:  MOVLB  6
41C8:  BTFSC  x3F.7
41CA:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,1); 
41CC:  MOVLW  06
41CE:  MOVWF  x40
41D0:  MOVLW  1F
41D2:  MOVWF  x3F
41D4:  CLRF   x41
41D6:  MOVLW  1E
41D8:  MOVWF  x42
41DA:  CLRF   x43
41DC:  MOVLW  01
41DE:  MOVWF  x44
41E0:  MOVLB  0
41E2:  CALL   156C
....................    strcpy(Menus.Letra,"   115 Lts"); 
41E6:  MOVLW  06
41E8:  MOVWF  FEA
41EA:  MOVLW  1F
41EC:  MOVWF  FE9
41EE:  MOVFF  FF2,63F
41F2:  BCF    FF2.7
41F4:  MOVLW  00
41F6:  CALL   0754
41FA:  TBLRD*-
41FC:  TBLRD*+
41FE:  MOVF   FF5,W
4200:  MOVWF  FEE
4202:  IORLW  00
4204:  BNZ   41FC
4206:  MOVLB  6
4208:  BTFSC  x3F.7
420A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,45,0,2); 
420C:  MOVLW  06
420E:  MOVWF  x40
4210:  MOVLW  1F
4212:  MOVWF  x3F
4214:  CLRF   x41
4216:  MOVLW  2D
4218:  MOVWF  x42
421A:  CLRF   x43
421C:  MOVLW  02
421E:  MOVWF  x44
4220:  MOVLB  0
4222:  CALL   156C
....................    delay_ms(1000); 
4226:  MOVLW  04
4228:  MOVLB  6
422A:  MOVWF  x3F
422C:  MOVLW  FA
422E:  MOVWF  x45
4230:  MOVLB  0
4232:  CALL   0DFC
4236:  MOVLB  6
4238:  DECFSZ x3F,F
423A:  BRA    422C
....................  
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
423C:  CLRF   x40
423E:  MOVLB  0
4240:  CALL   0F3E
....................    displayContrasena(Contrasena[0],20,30,1); 
4244:  MOVFF  5C7,641
4248:  MOVLW  14
424A:  MOVLB  6
424C:  MOVWF  x42
424E:  MOVLW  1E
4250:  MOVWF  x43
4252:  MOVLW  01
4254:  MOVWF  x44
4256:  MOVLB  0
4258:  CALL   1792
....................    displayContrasena(Contrasena[1],40,30,0); 
425C:  MOVFF  5C8,641
4260:  MOVLW  28
4262:  MOVLB  6
4264:  MOVWF  x42
4266:  MOVLW  1E
4268:  MOVWF  x43
426A:  CLRF   x44
426C:  MOVLB  0
426E:  CALL   1792
....................    displayContrasena(Contrasena[2],60,30,0); 
4272:  MOVFF  5C9,641
4276:  MOVLW  3C
4278:  MOVLB  6
427A:  MOVWF  x42
427C:  MOVLW  1E
427E:  MOVWF  x43
4280:  CLRF   x44
4282:  MOVLB  0
4284:  CALL   1792
....................    displayContrasena(Contrasena[3],80,30,0); 
4288:  MOVFF  5CA,641
428C:  MOVLW  50
428E:  MOVLB  6
4290:  MOVWF  x42
4292:  MOVLW  1E
4294:  MOVWF  x43
4296:  CLRF   x44
4298:  MOVLB  0
429A:  CALL   1792
....................     
....................    for(i=0;i<80;i++) 
429E:  MOVLB  5
42A0:  CLRF   x98
42A2:  MOVF   x98,W
42A4:  SUBLW  4F
42A6:  BNC   42C8
....................    { 
....................       Temperatura=Leer_Sensor(MediaMovil); 
42A8:  MOVFF  58C,63F
42AC:  MOVLB  0
42AE:  CALL   1D90
42B2:  MOVFF  03,60A
42B6:  MOVFF  02,609
42BA:  MOVFF  01,608
42BE:  MOVFF  00,607
....................    } 
42C2:  MOVLB  5
42C4:  INCF   x98,F
42C6:  BRA    42A2
....................    Teclado(); 
42C8:  MOVLB  0
42CA:  CALL   2134
....................    if(UP && DOWN)// && RIGHT && LEFT) 
42CE:  MOVLB  5
42D0:  BTFSS  x86.0
42D2:  BRA    4360
42D4:  BTFSS  x86.1
42D6:  BRA    4360
....................    { 
....................       delay_ms(500); 
42D8:  MOVLW  02
42DA:  MOVLB  6
42DC:  MOVWF  x3F
42DE:  MOVLW  FA
42E0:  MOVWF  x45
42E2:  MOVLB  0
42E4:  CALL   0DFC
42E8:  MOVLB  6
42EA:  DECFSZ x3F,F
42EC:  BRA    42DE
....................       strcpy(Menus.Letra,"Cargando.."); 
42EE:  MOVLW  06
42F0:  MOVWF  FEA
42F2:  MOVLW  1F
42F4:  MOVWF  FE9
42F6:  MOVFF  FF2,63F
42FA:  BCF    FF2.7
42FC:  MOVLW  00
42FE:  MOVLB  0
4300:  CALL   077A
4304:  TBLRD*-
4306:  TBLRD*+
4308:  MOVF   FF5,W
430A:  MOVWF  FEE
430C:  IORLW  00
430E:  BNZ   4306
4310:  MOVLB  6
4312:  BTFSC  x3F.7
4314:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,30,1,1); 
4316:  MOVLW  06
4318:  MOVWF  x40
431A:  MOVLW  1F
431C:  MOVWF  x3F
431E:  CLRF   x41
4320:  MOVLW  1E
4322:  MOVWF  x42
4324:  MOVLW  01
4326:  MOVWF  x43
4328:  MOVWF  x44
432A:  MOVLB  0
432C:  CALL   156C
....................       delay_ms(2000); 
4330:  MOVLW  08
4332:  MOVLB  6
4334:  MOVWF  x3F
4336:  MOVLW  FA
4338:  MOVWF  x45
433A:  MOVLB  0
433C:  CALL   0DFC
4340:  MOVLB  6
4342:  DECFSZ x3F,F
4344:  BRA    4336
....................       Menu=100; 
4346:  MOVLW  64
4348:  MOVLB  5
434A:  MOVWF  x96
....................       glcd_fillScreen(OFF); 
434C:  MOVLB  6
434E:  CLRF   x40
4350:  MOVLB  0
4352:  CALL   0F3E
....................       UP=0;DOWN=0;RIGHT=0;LEFT=0; 
4356:  MOVLB  5
4358:  BCF    x86.0
435A:  BCF    x86.1
435C:  BCF    x86.2
435E:  BCF    x86.3
....................    } 
....................    while(true) 
....................    { 
....................  
....................       if(Lectura2==1) 
4360:  DECFSZ x91,W
4362:  BRA    4382
....................       { 
....................          Temperatura=Leer_Sensor(MediaMovil); 
4364:  MOVFF  58C,63F
4368:  MOVLB  0
436A:  CALL   1D90
436E:  MOVFF  03,60A
4372:  MOVFF  02,609
4376:  MOVFF  01,608
437A:  MOVFF  00,607
....................          Lectura2=0; 
437E:  MOVLB  5
4380:  CLRF   x91
....................       } 
....................  
....................       Teclado(); 
4382:  MOVLB  0
4384:  CALL   2134
....................     
....................       glcd_update();             
4388:  CALL   0F98
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
438C:  MOVLB  5
438E:  MOVF   x96,F
4390:  BTFSS  FD8.2
4392:  BRA    4908
....................        
....................       strcpy(Menus.Letra,"Clave"); 
4394:  MOVLW  06
4396:  MOVWF  FEA
4398:  MOVLW  1F
439A:  MOVWF  FE9
439C:  MOVFF  FF2,63F
43A0:  BCF    FF2.7
43A2:  MOVLW  00
43A4:  MOVLB  0
43A6:  CALL   07A0
43AA:  TBLRD*-
43AC:  TBLRD*+
43AE:  MOVF   FF5,W
43B0:  MOVWF  FEE
43B2:  IORLW  00
43B4:  BNZ   43AC
43B6:  MOVLB  6
43B8:  BTFSC  x3F.7
43BA:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
43BC:  MOVLW  06
43BE:  MOVWF  x40
43C0:  MOVLW  1F
43C2:  MOVWF  x3F
43C4:  MOVLW  1E
43C6:  MOVWF  x41
43C8:  CLRF   x42
43CA:  MOVLW  01
43CC:  MOVWF  x43
43CE:  MOVLW  02
43D0:  MOVWF  x44
43D2:  MOVLB  0
43D4:  CALL   156C
....................        
....................       if(UP)//Si oprime hacia arriba 
43D8:  MOVLB  5
43DA:  BTFSS  x86.0
43DC:  BRA    44AC
....................       { 
....................          UP=0;delay_ms(30); 
43DE:  BCF    x86.0
43E0:  MOVLW  1E
43E2:  MOVLB  6
43E4:  MOVWF  x45
43E6:  MOVLB  0
43E8:  CALL   0DFC
....................          for(i=1;i<=4;i++) 
43EC:  MOVLW  01
43EE:  MOVLB  5
43F0:  MOVWF  x98
43F2:  MOVF   x98,W
43F4:  SUBLW  04
43F6:  BNC   44AC
....................          { 
....................             if(unidad==i) 
43F8:  MOVF   x98,W
43FA:  SUBWF  x97,W
43FC:  BNZ   4474
....................             { 
....................                Contrasena[i-1]++; 
43FE:  MOVLW  01
4400:  SUBWF  x98,W
4402:  CLRF   03
4404:  ADDLW  C7
4406:  MOVWF  FE9
4408:  MOVLW  05
440A:  ADDWFC 03,W
440C:  MOVWF  FEA
440E:  INCF   FEF,F
....................                if(Contrasena[i-1]>9)    
4410:  MOVLW  01
4412:  SUBWF  x98,W
4414:  CLRF   03
4416:  ADDLW  C7
4418:  MOVWF  FE9
441A:  MOVLW  05
441C:  ADDWFC 03,W
441E:  MOVWF  FEA
4420:  BTFSC  FEF.7
4422:  BRA    443C
4424:  MOVF   FEF,W
4426:  SUBLW  09
4428:  BC    443C
....................                { 
....................                   Contrasena[i-1]=0; 
442A:  MOVLW  01
442C:  SUBWF  x98,W
442E:  CLRF   03
4430:  ADDLW  C7
4432:  MOVWF  FE9
4434:  MOVLW  05
4436:  ADDWFC 03,W
4438:  MOVWF  FEA
443A:  CLRF   FEF
....................                } 
....................                displayContrasena(Contrasena[i-1],i*20,30,1); 
443C:  MOVLW  01
443E:  SUBWF  x98,W
4440:  CLRF   03
4442:  ADDLW  C7
4444:  MOVWF  FE9
4446:  MOVLW  05
4448:  ADDWFC 03,W
444A:  MOVWF  FEA
444C:  MOVFF  FEF,63F
4450:  MOVF   x98,W
4452:  MULLW  14
4454:  MOVFF  FF3,640
4458:  MOVLB  6
445A:  MOVFF  63F,641
445E:  MOVFF  640,642
4462:  MOVLW  1E
4464:  MOVWF  x43
4466:  MOVLW  01
4468:  MOVWF  x44
446A:  MOVLB  0
446C:  CALL   1792
....................             } 
....................             else 
4470:  BRA    44A6
4472:  MOVLB  5
....................             { 
....................                displayContrasena(Contrasena[i-1],i*20,30,0); 
4474:  MOVLW  01
4476:  SUBWF  x98,W
4478:  CLRF   03
447A:  ADDLW  C7
447C:  MOVWF  FE9
447E:  MOVLW  05
4480:  ADDWFC 03,W
4482:  MOVWF  FEA
4484:  MOVFF  FEF,63F
4488:  MOVF   x98,W
448A:  MULLW  14
448C:  MOVFF  FF3,640
4490:  MOVLB  6
4492:  MOVFF  63F,641
4496:  MOVFF  640,642
449A:  MOVLW  1E
449C:  MOVWF  x43
449E:  CLRF   x44
44A0:  MOVLB  0
44A2:  CALL   1792
....................             } 
....................          } 
44A6:  MOVLB  5
44A8:  INCF   x98,F
44AA:  BRA    43F2
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
44AC:  BTFSS  x86.1
44AE:  BRA    457C
....................       { 
....................          DOWN=0;delay_ms(30); 
44B0:  BCF    x86.1
44B2:  MOVLW  1E
44B4:  MOVLB  6
44B6:  MOVWF  x45
44B8:  MOVLB  0
44BA:  CALL   0DFC
....................          for(i=1;i<=4;i++) 
44BE:  MOVLW  01
44C0:  MOVLB  5
44C2:  MOVWF  x98
44C4:  MOVF   x98,W
44C6:  SUBLW  04
44C8:  BNC   457C
....................          { 
....................             if(unidad==i) 
44CA:  MOVF   x98,W
44CC:  SUBWF  x97,W
44CE:  BNZ   4544
....................             { 
....................                Contrasena[i-1]--; 
44D0:  MOVLW  01
44D2:  SUBWF  x98,W
44D4:  CLRF   03
44D6:  ADDLW  C7
44D8:  MOVWF  FE9
44DA:  MOVLW  05
44DC:  ADDWFC 03,W
44DE:  MOVWF  FEA
44E0:  DECF   FEF,F
....................                if(Contrasena[i-1]<0) 
44E2:  MOVLW  01
44E4:  SUBWF  x98,W
44E6:  CLRF   03
44E8:  ADDLW  C7
44EA:  MOVWF  FE9
44EC:  MOVLW  05
44EE:  ADDWFC 03,W
44F0:  MOVWF  FEA
44F2:  BTFSC  FEF.7
44F4:  BRA    44F8
44F6:  BRA    450C
....................                   {Contrasena[i-1]=9;} 
44F8:  MOVLW  01
44FA:  SUBWF  x98,W
44FC:  CLRF   03
44FE:  ADDLW  C7
4500:  MOVWF  FE9
4502:  MOVLW  05
4504:  ADDWFC 03,W
4506:  MOVWF  FEA
4508:  MOVLW  09
450A:  MOVWF  FEF
....................                displayContrasena(Contrasena[i-1],i*20,30,1);} 
450C:  MOVLW  01
450E:  SUBWF  x98,W
4510:  CLRF   03
4512:  ADDLW  C7
4514:  MOVWF  FE9
4516:  MOVLW  05
4518:  ADDWFC 03,W
451A:  MOVWF  FEA
451C:  MOVFF  FEF,63F
4520:  MOVF   x98,W
4522:  MULLW  14
4524:  MOVFF  FF3,640
4528:  MOVLB  6
452A:  MOVFF  63F,641
452E:  MOVFF  640,642
4532:  MOVLW  1E
4534:  MOVWF  x43
4536:  MOVLW  01
4538:  MOVWF  x44
453A:  MOVLB  0
453C:  CALL   1792
....................             else 
4540:  BRA    4576
4542:  MOVLB  5
....................             {displayContrasena(Contrasena[i-1],i*20,30,0);} 
4544:  MOVLW  01
4546:  SUBWF  x98,W
4548:  CLRF   03
454A:  ADDLW  C7
454C:  MOVWF  FE9
454E:  MOVLW  05
4550:  ADDWFC 03,W
4552:  MOVWF  FEA
4554:  MOVFF  FEF,63F
4558:  MOVF   x98,W
455A:  MULLW  14
455C:  MOVFF  FF3,640
4560:  MOVLB  6
4562:  MOVFF  63F,641
4566:  MOVFF  640,642
456A:  MOVLW  1E
456C:  MOVWF  x43
456E:  CLRF   x44
4570:  MOVLB  0
4572:  CALL   1792
....................          }         
4576:  MOVLB  5
4578:  INCF   x98,F
457A:  BRA    44C4
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
457C:  BTFSS  x86.2
457E:  BRA    4612
....................       { 
....................          RIGHT=0;delay_ms(30);unidad++; 
4580:  BCF    x86.2
4582:  MOVLW  1E
4584:  MOVLB  6
4586:  MOVWF  x45
4588:  MOVLB  0
458A:  CALL   0DFC
458E:  MOVLB  5
4590:  INCF   x97,F
....................          for(i=1;i<=4;i++) 
4592:  MOVLW  01
4594:  MOVWF  x98
4596:  MOVF   x98,W
4598:  SUBLW  04
459A:  BNC   4612
....................          { 
....................             if(unidad==i) 
459C:  MOVF   x98,W
459E:  SUBWF  x97,W
45A0:  BNZ   45DA
....................             {displayContrasena(Contrasena[i-1],i*20,30,1);} 
45A2:  MOVLW  01
45A4:  SUBWF  x98,W
45A6:  CLRF   03
45A8:  ADDLW  C7
45AA:  MOVWF  FE9
45AC:  MOVLW  05
45AE:  ADDWFC 03,W
45B0:  MOVWF  FEA
45B2:  MOVFF  FEF,63F
45B6:  MOVF   x98,W
45B8:  MULLW  14
45BA:  MOVFF  FF3,640
45BE:  MOVLB  6
45C0:  MOVFF  63F,641
45C4:  MOVFF  640,642
45C8:  MOVLW  1E
45CA:  MOVWF  x43
45CC:  MOVLW  01
45CE:  MOVWF  x44
45D0:  MOVLB  0
45D2:  CALL   1792
....................             else 
45D6:  BRA    460C
45D8:  MOVLB  5
....................             {displayContrasena(Contrasena[i-1],i*20,30,0);} 
45DA:  MOVLW  01
45DC:  SUBWF  x98,W
45DE:  CLRF   03
45E0:  ADDLW  C7
45E2:  MOVWF  FE9
45E4:  MOVLW  05
45E6:  ADDWFC 03,W
45E8:  MOVWF  FEA
45EA:  MOVFF  FEF,63F
45EE:  MOVF   x98,W
45F0:  MULLW  14
45F2:  MOVFF  FF3,640
45F6:  MOVLB  6
45F8:  MOVFF  63F,641
45FC:  MOVFF  640,642
4600:  MOVLW  1E
4602:  MOVWF  x43
4604:  CLRF   x44
4606:  MOVLB  0
4608:  CALL   1792
....................          } 
460C:  MOVLB  5
460E:  INCF   x98,F
4610:  BRA    4596
....................       } 
....................      
....................       if(unidad>4) 
4612:  MOVF   x97,W
4614:  SUBLW  04
4616:  BTFSC  FD8.0
4618:  BRA    4908
....................       {glcd_fillScreen(OFF);unidad=4; 
461A:  MOVLB  6
461C:  CLRF   x40
461E:  MOVLB  0
4620:  CALL   0F3E
4624:  MOVLW  04
4626:  MOVLB  5
4628:  MOVWF  x97
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
462A:  MOVF   xC7,W
462C:  SUBLW  03
462E:  BNZ   4716
4630:  MOVF   xC8,W
4632:  SUBLW  08
4634:  BNZ   4716
4636:  MOVF   xC9,W
4638:  SUBLW  09
463A:  BNZ   4716
463C:  MOVF   xCA,W
463E:  SUBLW  02
4640:  BNZ   4716
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
4642:  MOVLW  0A
4644:  MOVWF  FA9
4646:  CLRF   FA8
4648:  BCF    FA6.6
464A:  BCF    FA6.7
464C:  BSF    FA6.2
464E:  MOVF   FF2,W
4650:  MOVWF  00
4652:  BCF    FF2.7
4654:  MOVLB  F
4656:  MOVLW  55
4658:  MOVWF  FA7
465A:  MOVLW  AA
465C:  MOVWF  FA7
465E:  BSF    FA6.1
4660:  BTFSC  FA6.1
4662:  BRA    4660
4664:  BCF    FA6.2
4666:  MOVF   00,W
4668:  IORWF  FF2,F
466A:  MOVLW  14
466C:  MOVLB  6
466E:  MOVWF  x45
4670:  MOVLB  0
4672:  CALL   0DFC
4676:  MOVLW  0B
4678:  MOVWF  FA9
467A:  CLRF   FA8
467C:  BCF    FA6.6
467E:  BCF    FA6.7
4680:  BSF    FA6.2
4682:  MOVF   FF2,W
4684:  MOVWF  00
4686:  BCF    FF2.7
4688:  MOVLB  F
468A:  MOVLW  55
468C:  MOVWF  FA7
468E:  MOVLW  AA
4690:  MOVWF  FA7
4692:  BSF    FA6.1
4694:  BTFSC  FA6.1
4696:  BRA    4694
4698:  BCF    FA6.2
469A:  MOVF   00,W
469C:  IORWF  FF2,F
469E:  MOVLW  14
46A0:  MOVLB  6
46A2:  MOVWF  x45
46A4:  MOVLB  0
46A6:  CALL   0DFC
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
46AA:  MOVLW  0C
46AC:  MOVWF  FA9
46AE:  CLRF   FA8
46B0:  BCF    FA6.6
46B2:  BCF    FA6.7
46B4:  BSF    FA6.2
46B6:  MOVF   FF2,W
46B8:  MOVWF  00
46BA:  BCF    FF2.7
46BC:  MOVLB  F
46BE:  MOVLW  55
46C0:  MOVWF  FA7
46C2:  MOVLW  AA
46C4:  MOVWF  FA7
46C6:  BSF    FA6.1
46C8:  BTFSC  FA6.1
46CA:  BRA    46C8
46CC:  BCF    FA6.2
46CE:  MOVF   00,W
46D0:  IORWF  FF2,F
46D2:  MOVLW  14
46D4:  MOVLB  6
46D6:  MOVWF  x45
46D8:  MOVLB  0
46DA:  CALL   0DFC
46DE:  MOVLW  0D
46E0:  MOVWF  FA9
46E2:  CLRF   FA8
46E4:  BCF    FA6.6
46E6:  BCF    FA6.7
46E8:  BSF    FA6.2
46EA:  MOVF   FF2,W
46EC:  MOVWF  00
46EE:  BCF    FF2.7
46F0:  MOVLB  F
46F2:  MOVLW  55
46F4:  MOVWF  FA7
46F6:  MOVLW  AA
46F8:  MOVWF  FA7
46FA:  BSF    FA6.1
46FC:  BTFSC  FA6.1
46FE:  BRA    46FC
4700:  BCF    FA6.2
4702:  MOVF   00,W
4704:  IORWF  FF2,F
4706:  MOVLW  14
4708:  MOVLB  6
470A:  MOVWF  x45
470C:  MOVLB  0
470E:  CALL   0DFC
....................              reset_cpu();}         
4712:  RESET
4714:  MOVLB  5
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4716:  MOVF   xCB,W
4718:  SUBWF  xC7,W
471A:  BNZ   47EC
471C:  MOVF   xCC,W
471E:  SUBWF  xC8,W
4720:  BNZ   47EC
4722:  MOVF   xCD,W
4724:  SUBWF  xC9,W
4726:  BNZ   47EC
4728:  MOVF   xCE,W
472A:  SUBWF  xCA,W
472C:  BNZ   47EC
....................          { 
....................             glcd_fillScreen(OFF); 
472E:  MOVLB  6
4730:  CLRF   x40
4732:  MOVLB  0
4734:  CALL   0F3E
....................             strcpy(Menus.Letra,"Clave"); 
4738:  MOVLW  06
473A:  MOVWF  FEA
473C:  MOVLW  1F
473E:  MOVWF  FE9
4740:  MOVFF  FF2,63F
4744:  BCF    FF2.7
4746:  MOVLW  00
4748:  CALL   07A0
474C:  TBLRD*-
474E:  TBLRD*+
4750:  MOVF   FF5,W
4752:  MOVWF  FEE
4754:  IORLW  00
4756:  BNZ   474E
4758:  MOVLB  6
475A:  BTFSC  x3F.7
475C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
475E:  MOVLW  06
4760:  MOVWF  x40
4762:  MOVLW  1F
4764:  MOVWF  x3F
4766:  MOVLW  1E
4768:  MOVWF  x41
476A:  CLRF   x42
476C:  CLRF   x43
476E:  MOVLW  02
4770:  MOVWF  x44
4772:  MOVLB  0
4774:  CALL   156C
....................             strcpy(Menus.Letra,"Correcta"); 
4778:  MOVLW  06
477A:  MOVWF  FEA
477C:  MOVLW  1F
477E:  MOVWF  FE9
4780:  MOVFF  FF2,63F
4784:  BCF    FF2.7
4786:  MOVLW  00
4788:  CALL   07C0
478C:  TBLRD*-
478E:  TBLRD*+
4790:  MOVF   FF5,W
4792:  MOVWF  FEE
4794:  IORLW  00
4796:  BNZ   478E
4798:  MOVLB  6
479A:  BTFSC  x3F.7
479C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
479E:  MOVLW  06
47A0:  MOVWF  x40
47A2:  MOVLW  1F
47A4:  MOVWF  x3F
47A6:  MOVLW  0F
47A8:  MOVWF  x41
47AA:  MOVLW  1E
47AC:  MOVWF  x42
47AE:  CLRF   x43
47B0:  MOVLW  02
47B2:  MOVWF  x44
47B4:  MOVLB  0
47B6:  CALL   156C
....................             Menu=1;glcd_update();delay_ms(1000); 
47BA:  MOVLW  01
47BC:  MOVLB  5
47BE:  MOVWF  x96
47C0:  MOVLB  0
47C2:  CALL   0F98
47C6:  MOVLW  04
47C8:  MOVLB  6
47CA:  MOVWF  x3F
47CC:  MOVLW  FA
47CE:  MOVWF  x45
47D0:  MOVLB  0
47D2:  CALL   0DFC
47D6:  MOVLB  6
47D8:  DECFSZ x3F,F
47DA:  BRA    47CC
....................             glcd_fillScreen(OFF);unidad=1; 
47DC:  CLRF   x40
47DE:  MOVLB  0
47E0:  CALL   0F3E
47E4:  MOVLW  01
47E6:  MOVLB  5
47E8:  MOVWF  x97
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
47EA:  BRA    4908
....................          { 
....................             glcd_fillScreen(OFF); 
47EC:  MOVLB  6
47EE:  CLRF   x40
47F0:  MOVLB  0
47F2:  CALL   0F3E
....................             strcpy(Menus.Letra,"Clave"); 
47F6:  MOVLW  06
47F8:  MOVWF  FEA
47FA:  MOVLW  1F
47FC:  MOVWF  FE9
47FE:  MOVFF  FF2,63F
4802:  BCF    FF2.7
4804:  MOVLW  00
4806:  CALL   07A0
480A:  TBLRD*-
480C:  TBLRD*+
480E:  MOVF   FF5,W
4810:  MOVWF  FEE
4812:  IORLW  00
4814:  BNZ   480C
4816:  MOVLB  6
4818:  BTFSC  x3F.7
481A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
481C:  MOVLW  06
481E:  MOVWF  x40
4820:  MOVLW  1F
4822:  MOVWF  x3F
4824:  MOVLW  1E
4826:  MOVWF  x41
4828:  CLRF   x42
482A:  CLRF   x43
482C:  MOVLW  02
482E:  MOVWF  x44
4830:  MOVLB  0
4832:  CALL   156C
....................             strcpy(Menus.Letra,"Incorrecta"); 
4836:  MOVLW  06
4838:  MOVWF  FEA
483A:  MOVLW  1F
483C:  MOVWF  FE9
483E:  MOVFF  FF2,63F
4842:  BCF    FF2.7
4844:  MOVLW  00
4846:  CALL   07E4
484A:  TBLRD*-
484C:  TBLRD*+
484E:  MOVF   FF5,W
4850:  MOVWF  FEE
4852:  IORLW  00
4854:  BNZ   484C
4856:  MOVLB  6
4858:  BTFSC  x3F.7
485A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
485C:  MOVLW  06
485E:  MOVWF  x40
4860:  MOVLW  1F
4862:  MOVWF  x3F
4864:  CLRF   x41
4866:  MOVLW  1E
4868:  MOVWF  x42
486A:  CLRF   x43
486C:  MOVLW  02
486E:  MOVWF  x44
4870:  MOVLB  0
4872:  CALL   156C
....................             Menu=0;glcd_update();delay_ms(1000); 
4876:  MOVLB  5
4878:  CLRF   x96
487A:  MOVLB  0
487C:  CALL   0F98
4880:  MOVLW  04
4882:  MOVLB  6
4884:  MOVWF  x3F
4886:  MOVLW  FA
4888:  MOVWF  x45
488A:  MOVLB  0
488C:  CALL   0DFC
4890:  MOVLB  6
4892:  DECFSZ x3F,F
4894:  BRA    4886
....................             glcd_fillScreen(OFF);unidad=1; 
4896:  CLRF   x40
4898:  MOVLB  0
489A:  CALL   0F3E
489E:  MOVLW  01
48A0:  MOVLB  5
48A2:  MOVWF  x97
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
48A4:  CLRF   xC7
48A6:  CLRF   xC8
48A8:  CLRF   xC9
48AA:  CLRF   xCA
....................             displayContrasena(Contrasena[0],20,30,1); 
48AC:  MOVFF  5C7,641
48B0:  MOVLW  14
48B2:  MOVLB  6
48B4:  MOVWF  x42
48B6:  MOVLW  1E
48B8:  MOVWF  x43
48BA:  MOVLW  01
48BC:  MOVWF  x44
48BE:  MOVLB  0
48C0:  CALL   1792
....................             displayContrasena(Contrasena[1],40,30,0); 
48C4:  MOVFF  5C8,641
48C8:  MOVLW  28
48CA:  MOVLB  6
48CC:  MOVWF  x42
48CE:  MOVLW  1E
48D0:  MOVWF  x43
48D2:  CLRF   x44
48D4:  MOVLB  0
48D6:  CALL   1792
....................             displayContrasena(Contrasena[2],60,30,0); 
48DA:  MOVFF  5C9,641
48DE:  MOVLW  3C
48E0:  MOVLB  6
48E2:  MOVWF  x42
48E4:  MOVLW  1E
48E6:  MOVWF  x43
48E8:  CLRF   x44
48EA:  MOVLB  0
48EC:  CALL   1792
....................             displayContrasena(Contrasena[3],80,30,0); 
48F0:  MOVFF  5CA,641
48F4:  MOVLW  50
48F6:  MOVLB  6
48F8:  MOVWF  x42
48FA:  MOVLW  1E
48FC:  MOVWF  x43
48FE:  CLRF   x44
4900:  MOVLB  0
4902:  CALL   1792
4906:  MOVLB  5
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
4908:  DECFSZ x96,W
490A:  BRA    4C08
....................        
....................          if(Opcion>4) 
490C:  MOVF   x9C,W
490E:  SUBLW  04
4910:  BC    4916
....................          {Opcion=1;} 
4912:  MOVLW  01
4914:  MOVWF  x9C
....................          if(Opcion<1) 
4916:  MOVF   x9C,F
4918:  BNZ   491E
....................          {Opcion=4;} 
491A:  MOVLW  04
491C:  MOVWF  x9C
....................           
....................          strcpy(Menus.Letra,"Menu"); 
491E:  MOVLW  06
4920:  MOVWF  FEA
4922:  MOVLW  1F
4924:  MOVWF  FE9
4926:  MOVFF  FF2,63F
492A:  BCF    FF2.7
492C:  MOVLW  00
492E:  MOVLB  0
4930:  CALL   080A
4934:  TBLRD*-
4936:  TBLRD*+
4938:  MOVF   FF5,W
493A:  MOVWF  FEE
493C:  IORLW  00
493E:  BNZ   4936
4940:  MOVLB  6
4942:  BTFSC  x3F.7
4944:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
4946:  MOVLW  06
4948:  MOVWF  x40
494A:  MOVLW  1F
494C:  MOVWF  x3F
494E:  MOVLW  1E
4950:  MOVWF  x41
4952:  CLRF   x42
4954:  MOVLW  01
4956:  MOVWF  x43
4958:  MOVLW  02
495A:  MOVWF  x44
495C:  MOVLB  0
495E:  CALL   156C
....................        
....................          if(Opcion==1)    
4962:  MOVLB  5
4964:  DECFSZ x9C,W
4966:  BRA    49AE
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
4968:  MOVLW  06
496A:  MOVWF  FEA
496C:  MOVLW  1F
496E:  MOVWF  FE9
4970:  MOVFF  FF2,63F
4974:  BCF    FF2.7
4976:  MOVLW  00
4978:  MOVLB  0
497A:  CALL   082A
497E:  TBLRD*-
4980:  TBLRD*+
4982:  MOVF   FF5,W
4984:  MOVWF  FEE
4986:  IORLW  00
4988:  BNZ   4980
498A:  MOVLB  6
498C:  BTFSC  x3F.7
498E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
4990:  MOVLW  06
4992:  MOVWF  x40
4994:  MOVLW  1F
4996:  MOVWF  x3F
4998:  CLRF   x41
499A:  MOVLW  14
499C:  MOVWF  x42
499E:  MOVLW  01
49A0:  MOVWF  x43
49A2:  MOVWF  x44
49A4:  MOVLB  0
49A6:  CALL   156C
....................          else 
49AA:  BRA    49F0
49AC:  MOVLB  5
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
49AE:  MOVLW  06
49B0:  MOVWF  FEA
49B2:  MOVLW  1F
49B4:  MOVWF  FE9
49B6:  MOVFF  FF2,63F
49BA:  BCF    FF2.7
49BC:  MOVLW  00
49BE:  MOVLB  0
49C0:  CALL   082A
49C4:  TBLRD*-
49C6:  TBLRD*+
49C8:  MOVF   FF5,W
49CA:  MOVWF  FEE
49CC:  IORLW  00
49CE:  BNZ   49C6
49D0:  MOVLB  6
49D2:  BTFSC  x3F.7
49D4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);} 
49D6:  MOVLW  06
49D8:  MOVWF  x40
49DA:  MOVLW  1F
49DC:  MOVWF  x3F
49DE:  CLRF   x41
49E0:  MOVLW  14
49E2:  MOVWF  x42
49E4:  CLRF   x43
49E6:  MOVLW  01
49E8:  MOVWF  x44
49EA:  MOVLB  0
49EC:  CALL   156C
....................           
....................          if(Opcion==2)    
49F0:  MOVLB  5
49F2:  MOVF   x9C,W
49F4:  SUBLW  02
49F6:  BNZ   4A3E
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
49F8:  MOVLW  06
49FA:  MOVWF  FEA
49FC:  MOVLW  1F
49FE:  MOVWF  FE9
4A00:  MOVFF  FF2,63F
4A04:  BCF    FF2.7
4A06:  MOVLW  00
4A08:  MOVLB  0
4A0A:  CALL   0854
4A0E:  TBLRD*-
4A10:  TBLRD*+
4A12:  MOVF   FF5,W
4A14:  MOVWF  FEE
4A16:  IORLW  00
4A18:  BNZ   4A10
4A1A:  MOVLB  6
4A1C:  BTFSC  x3F.7
4A1E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
4A20:  MOVLW  06
4A22:  MOVWF  x40
4A24:  MOVLW  1F
4A26:  MOVWF  x3F
4A28:  CLRF   x41
4A2A:  MOVLW  1E
4A2C:  MOVWF  x42
4A2E:  MOVLW  01
4A30:  MOVWF  x43
4A32:  MOVWF  x44
4A34:  MOVLB  0
4A36:  CALL   156C
....................          else 
4A3A:  BRA    4A80
4A3C:  MOVLB  5
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
4A3E:  MOVLW  06
4A40:  MOVWF  FEA
4A42:  MOVLW  1F
4A44:  MOVWF  FE9
4A46:  MOVFF  FF2,63F
4A4A:  BCF    FF2.7
4A4C:  MOVLW  00
4A4E:  MOVLB  0
4A50:  CALL   0854
4A54:  TBLRD*-
4A56:  TBLRD*+
4A58:  MOVF   FF5,W
4A5A:  MOVWF  FEE
4A5C:  IORLW  00
4A5E:  BNZ   4A56
4A60:  MOVLB  6
4A62:  BTFSC  x3F.7
4A64:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);} 
4A66:  MOVLW  06
4A68:  MOVWF  x40
4A6A:  MOVLW  1F
4A6C:  MOVWF  x3F
4A6E:  CLRF   x41
4A70:  MOVLW  1E
4A72:  MOVWF  x42
4A74:  CLRF   x43
4A76:  MOVLW  01
4A78:  MOVWF  x44
4A7A:  MOVLB  0
4A7C:  CALL   156C
....................              
....................          if(Opcion==3)    
4A80:  MOVLB  5
4A82:  MOVF   x9C,W
4A84:  SUBLW  03
4A86:  BNZ   4ACE
....................             {strcpy(Menus.Letra,"Temporizador"); 
4A88:  MOVLW  06
4A8A:  MOVWF  FEA
4A8C:  MOVLW  1F
4A8E:  MOVWF  FE9
4A90:  MOVFF  FF2,63F
4A94:  BCF    FF2.7
4A96:  MOVLW  00
4A98:  MOVLB  0
4A9A:  CALL   0884
4A9E:  TBLRD*-
4AA0:  TBLRD*+
4AA2:  MOVF   FF5,W
4AA4:  MOVWF  FEE
4AA6:  IORLW  00
4AA8:  BNZ   4AA0
4AAA:  MOVLB  6
4AAC:  BTFSC  x3F.7
4AAE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
4AB0:  MOVLW  06
4AB2:  MOVWF  x40
4AB4:  MOVLW  1F
4AB6:  MOVWF  x3F
4AB8:  CLRF   x41
4ABA:  MOVLW  28
4ABC:  MOVWF  x42
4ABE:  MOVLW  01
4AC0:  MOVWF  x43
4AC2:  MOVWF  x44
4AC4:  MOVLB  0
4AC6:  CALL   156C
....................          else 
4ACA:  BRA    4B10
4ACC:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temporizador"); 
4ACE:  MOVLW  06
4AD0:  MOVWF  FEA
4AD2:  MOVLW  1F
4AD4:  MOVWF  FE9
4AD6:  MOVFF  FF2,63F
4ADA:  BCF    FF2.7
4ADC:  MOVLW  00
4ADE:  MOVLB  0
4AE0:  CALL   0884
4AE4:  TBLRD*-
4AE6:  TBLRD*+
4AE8:  MOVF   FF5,W
4AEA:  MOVWF  FEE
4AEC:  IORLW  00
4AEE:  BNZ   4AE6
4AF0:  MOVLB  6
4AF2:  BTFSC  x3F.7
4AF4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}    
4AF6:  MOVLW  06
4AF8:  MOVWF  x40
4AFA:  MOVLW  1F
4AFC:  MOVWF  x3F
4AFE:  CLRF   x41
4B00:  MOVLW  28
4B02:  MOVWF  x42
4B04:  CLRF   x43
4B06:  MOVLW  01
4B08:  MOVWF  x44
4B0A:  MOVLB  0
4B0C:  CALL   156C
....................                          
....................          if(Opcion==4)    
4B10:  MOVLB  5
4B12:  MOVF   x9C,W
4B14:  SUBLW  04
4B16:  BNZ   4B5E
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
4B18:  MOVLW  06
4B1A:  MOVWF  FEA
4B1C:  MOVLW  1F
4B1E:  MOVWF  FE9
4B20:  MOVFF  FF2,63F
4B24:  BCF    FF2.7
4B26:  MOVLW  00
4B28:  MOVLB  0
4B2A:  CALL   08AC
4B2E:  TBLRD*-
4B30:  TBLRD*+
4B32:  MOVF   FF5,W
4B34:  MOVWF  FEE
4B36:  IORLW  00
4B38:  BNZ   4B30
4B3A:  MOVLB  6
4B3C:  BTFSC  x3F.7
4B3E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
4B40:  MOVLW  06
4B42:  MOVWF  x40
4B44:  MOVLW  1F
4B46:  MOVWF  x3F
4B48:  CLRF   x41
4B4A:  MOVLW  32
4B4C:  MOVWF  x42
4B4E:  MOVLW  01
4B50:  MOVWF  x43
4B52:  MOVWF  x44
4B54:  MOVLB  0
4B56:  CALL   156C
....................          else 
4B5A:  BRA    4BA0
4B5C:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
4B5E:  MOVLW  06
4B60:  MOVWF  FEA
4B62:  MOVLW  1F
4B64:  MOVWF  FE9
4B66:  MOVFF  FF2,63F
4B6A:  BCF    FF2.7
4B6C:  MOVLW  00
4B6E:  MOVLB  0
4B70:  CALL   08AC
4B74:  TBLRD*-
4B76:  TBLRD*+
4B78:  MOVF   FF5,W
4B7A:  MOVWF  FEE
4B7C:  IORLW  00
4B7E:  BNZ   4B76
4B80:  MOVLB  6
4B82:  BTFSC  x3F.7
4B84:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}      
4B86:  MOVLW  06
4B88:  MOVWF  x40
4B8A:  MOVLW  1F
4B8C:  MOVWF  x3F
4B8E:  CLRF   x41
4B90:  MOVLW  32
4B92:  MOVWF  x42
4B94:  CLRF   x43
4B96:  MOVLW  01
4B98:  MOVWF  x44
4B9A:  MOVLB  0
4B9C:  CALL   156C
....................              
....................          if(UP)//Si oprime hacia arriba 
4BA0:  MOVLB  5
4BA2:  BTFSS  x86.0
4BA4:  BRA    4BBA
....................          { 
....................             UP=0;delay_ms(30);Opcion--;visual=1; 
4BA6:  BCF    x86.0
4BA8:  MOVLW  1E
4BAA:  MOVLB  6
4BAC:  MOVWF  x45
4BAE:  MOVLB  0
4BB0:  CALL   0DFC
4BB4:  MOVLB  5
4BB6:  DECF   x9C,F
4BB8:  BSF    x87.4
....................          } 
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
4BBA:  BTFSS  x86.1
4BBC:  BRA    4BD2
....................          { 
....................             DOWN=0;delay_ms(30);Opcion++;visual=1;    
4BBE:  BCF    x86.1
4BC0:  MOVLW  1E
4BC2:  MOVLB  6
4BC4:  MOVWF  x45
4BC6:  MOVLB  0
4BC8:  CALL   0DFC
4BCC:  MOVLB  5
4BCE:  INCF   x9C,F
4BD0:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
4BD2:  BTFSS  x86.2
4BD4:  BRA    4C08
....................          {  
....................             RIGHT=0;delay_ms(500);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4BD6:  BCF    x86.2
4BD8:  MOVLW  02
4BDA:  MOVLB  6
4BDC:  MOVWF  x3F
4BDE:  MOVLW  FA
4BE0:  MOVWF  x45
4BE2:  MOVLB  0
4BE4:  CALL   0DFC
4BE8:  MOVLB  6
4BEA:  DECFSZ x3F,F
4BEC:  BRA    4BDE
4BEE:  MOVLW  03
4BF0:  MOVLB  5
4BF2:  ADDWF  x9C,W
4BF4:  MOVWF  x96
4BF6:  MOVLW  01
4BF8:  MOVWF  x9C
4BFA:  MOVLB  6
4BFC:  CLRF   x40
4BFE:  MOVLB  0
4C00:  CALL   0F3E
4C04:  MOVLB  5
4C06:  BSF    x87.4
....................          } 
....................        
....................  
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Continuar 
4C08:  MOVF   x96,W
4C0A:  SUBLW  04
4C0C:  BTFSS  FD8.2
4C0E:  BRA    4F8A
....................        
....................       if(Opcion>3) 
4C10:  MOVF   x9C,W
4C12:  SUBLW  03
4C14:  BC    4C1A
....................          Opcion=1; 
4C16:  MOVLW  01
4C18:  MOVWF  x9C
....................           
....................       if(Opcion<1) 
4C1A:  MOVF   x9C,F
4C1C:  BNZ   4C22
....................          Opcion=3; 
4C1E:  MOVLW  03
4C20:  MOVWF  x9C
....................        
....................          strcpy(Menus.Letra,"Seleccione"); 
4C22:  MOVLW  06
4C24:  MOVWF  FEA
4C26:  MOVLW  1F
4C28:  MOVWF  FE9
4C2A:  MOVFF  FF2,63F
4C2E:  BCF    FF2.7
4C30:  MOVLW  00
4C32:  MOVLB  0
4C34:  CALL   08D4
4C38:  TBLRD*-
4C3A:  TBLRD*+
4C3C:  MOVF   FF5,W
4C3E:  MOVWF  FEE
4C40:  IORLW  00
4C42:  BNZ   4C3A
4C44:  MOVLB  6
4C46:  BTFSC  x3F.7
4C48:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4C4A:  MOVLW  06
4C4C:  MOVWF  x40
4C4E:  MOVLW  1F
4C50:  MOVWF  x3F
4C52:  CLRF   x41
4C54:  CLRF   x42
4C56:  MOVLW  01
4C58:  MOVWF  x43
4C5A:  MOVLW  02
4C5C:  MOVWF  x44
4C5E:  MOVLB  0
4C60:  CALL   156C
....................           
....................          strcpy(Menus.Letra,"Temperatura"); 
4C64:  MOVLW  06
4C66:  MOVWF  FEA
4C68:  MOVLW  1F
4C6A:  MOVWF  FE9
4C6C:  MOVFF  FF2,63F
4C70:  BCF    FF2.7
4C72:  MOVLW  00
4C74:  CALL   08FA
4C78:  TBLRD*-
4C7A:  TBLRD*+
4C7C:  MOVF   FF5,W
4C7E:  MOVWF  FEE
4C80:  IORLW  00
4C82:  BNZ   4C7A
4C84:  MOVLB  6
4C86:  BTFSC  x3F.7
4C88:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,16,1,2); 
4C8A:  MOVLW  06
4C8C:  MOVWF  x40
4C8E:  MOVLW  1F
4C90:  MOVWF  x3F
4C92:  CLRF   x41
4C94:  MOVLW  10
4C96:  MOVWF  x42
4C98:  MOVLW  01
4C9A:  MOVWF  x43
4C9C:  MOVLW  02
4C9E:  MOVWF  x44
4CA0:  MOVLB  0
4CA2:  CALL   156C
....................           
....................          displayContrasena(Opcion,10,38,1); 
4CA6:  MOVFF  59C,641
4CAA:  MOVLW  0A
4CAC:  MOVLB  6
4CAE:  MOVWF  x42
4CB0:  MOVLW  26
4CB2:  MOVWF  x43
4CB4:  MOVLW  01
4CB6:  MOVWF  x44
4CB8:  MOVLB  0
4CBA:  CALL   1792
....................          glcd_circle(90,38,2,NO,ON); 
4CBE:  MOVLW  5A
4CC0:  MOVLB  6
4CC2:  MOVWF  x52
4CC4:  MOVLW  26
4CC6:  MOVWF  x53
4CC8:  MOVLW  02
4CCA:  MOVWF  x54
4CCC:  CLRF   x55
4CCE:  MOVLW  01
4CD0:  MOVWF  x56
4CD2:  MOVLB  0
4CD4:  CALL   2214
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,97,35,2,2);          
4CD8:  MOVLW  06
4CDA:  MOVWF  FEA
4CDC:  MOVLW  1F
4CDE:  MOVWF  FE9
4CE0:  MOVFF  FF2,63F
4CE4:  BCF    FF2.7
4CE6:  MOVLW  00
4CE8:  CALL   06BE
4CEC:  TBLRD*-
4CEE:  TBLRD*+
4CF0:  MOVF   FF5,W
4CF2:  MOVWF  FEE
4CF4:  IORLW  00
4CF6:  BNZ   4CEE
4CF8:  MOVLB  6
4CFA:  BTFSC  x3F.7
4CFC:  BSF    FF2.7
4CFE:  MOVLW  06
4D00:  MOVWF  x40
4D02:  MOVLW  1F
4D04:  MOVWF  x3F
4D06:  MOVLW  61
4D08:  MOVWF  x41
4D0A:  MOVLW  23
4D0C:  MOVWF  x42
4D0E:  MOVLW  02
4D10:  MOVWF  x43
4D12:  MOVWF  x44
4D14:  MOVLB  0
4D16:  CALL   156C
....................           
....................          if(Opcion==1) 
4D1A:  MOVLB  5
4D1C:  DECFSZ x9C,W
4D1E:  BRA    4D40
....................          { 
....................             displayTemperatura(Temperatura1,50,38,0,2); 
4D20:  MOVFF  5AE,642
4D24:  MOVFF  5AD,641
4D28:  MOVLW  32
4D2A:  MOVLB  6
4D2C:  MOVWF  x43
4D2E:  MOVLW  26
4D30:  MOVWF  x44
4D32:  CLRF   x45
4D34:  MOVLW  02
4D36:  MOVWF  x46
4D38:  MOVLB  0
4D3A:  CALL   24FC
4D3E:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==2) 
4D40:  MOVF   x9C,W
4D42:  SUBLW  02
4D44:  BNZ   4D66
....................          { 
....................             displayTemperatura(Temperatura2,50,38,0,2); 
4D46:  MOVFF  5B0,642
4D4A:  MOVFF  5AF,641
4D4E:  MOVLW  32
4D50:  MOVLB  6
4D52:  MOVWF  x43
4D54:  MOVLW  26
4D56:  MOVWF  x44
4D58:  CLRF   x45
4D5A:  MOVLW  02
4D5C:  MOVWF  x46
4D5E:  MOVLB  0
4D60:  CALL   24FC
4D64:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==3) 
4D66:  MOVF   x9C,W
4D68:  SUBLW  03
4D6A:  BNZ   4D8C
....................          { 
....................             displayTemperatura(Temperatura3,50,38,0,2); 
4D6C:  MOVFF  5B2,642
4D70:  MOVFF  5B1,641
4D74:  MOVLW  32
4D76:  MOVLB  6
4D78:  MOVWF  x43
4D7A:  MOVLW  26
4D7C:  MOVWF  x44
4D7E:  CLRF   x45
4D80:  MOVLW  02
4D82:  MOVWF  x46
4D84:  MOVLB  0
4D86:  CALL   24FC
4D8A:  MOVLB  5
....................          } 
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
4D8C:  BTFSS  x86.0
4D8E:  BRA    4DB4
....................       { 
....................          Opcion++; 
4D90:  INCF   x9C,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
4D92:  MOVLW  28
4D94:  MOVLB  6
4D96:  MOVWF  x52
4D98:  MOVLW  23
4D9A:  MOVWF  x53
4D9C:  MOVLW  55
4D9E:  MOVWF  x54
4DA0:  MOVLW  3C
4DA2:  MOVWF  x55
4DA4:  MOVLW  01
4DA6:  MOVWF  x56
4DA8:  CLRF   x57
4DAA:  MOVLB  0
4DAC:  CALL   14AA
....................          UP=0; 
4DB0:  MOVLB  5
4DB2:  BCF    x86.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4DB4:  BTFSS  x86.1
4DB6:  BRA    4DDC
....................       {   
....................          Opcion--;   
4DB8:  DECF   x9C,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
4DBA:  MOVLW  28
4DBC:  MOVLB  6
4DBE:  MOVWF  x52
4DC0:  MOVLW  23
4DC2:  MOVWF  x53
4DC4:  MOVLW  55
4DC6:  MOVWF  x54
4DC8:  MOVLW  3C
4DCA:  MOVWF  x55
4DCC:  MOVLW  01
4DCE:  MOVWF  x56
4DD0:  CLRF   x57
4DD2:  MOVLB  0
4DD4:  CALL   14AA
....................          DOWN=0; 
4DD8:  MOVLB  5
4DDA:  BCF    x86.1
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
4DDC:  BTFSS  x86.2
4DDE:  BRA    4F56
....................       {   
....................          if(Opcion==1) 
4DE0:  DECFSZ x9C,W
4DE2:  BRA    4DEC
....................          { 
....................             Setpoint=Temperatura1; 
4DE4:  MOVFF  5AE,5AC
4DE8:  MOVFF  5AD,5AB
....................          } 
....................           
....................          if(Opcion==2) 
4DEC:  MOVF   x9C,W
4DEE:  SUBLW  02
4DF0:  BNZ   4DFA
....................          { 
....................             Setpoint=Temperatura2; 
4DF2:  MOVFF  5B0,5AC
4DF6:  MOVFF  5AF,5AB
....................          } 
....................           
....................          if(Opcion==3) 
4DFA:  MOVF   x9C,W
4DFC:  SUBLW  03
4DFE:  BNZ   4E08
....................          { 
....................             Setpoint=Temperatura3; 
4E00:  MOVFF  5B2,5AC
4E04:  MOVFF  5B1,5AB
....................          } 
....................           
....................          if(Setpoint<Temperatura) 
4E08:  MOVFF  5AC,646
4E0C:  MOVFF  5AB,645
4E10:  MOVLB  0
4E12:  CALL   0E4E
4E16:  MOVFF  03,642
4E1A:  MOVFF  02,641
4E1E:  MOVFF  01,640
4E22:  MOVFF  00,63F
4E26:  MOVFF  60A,646
4E2A:  MOVFF  609,645
4E2E:  MOVFF  608,644
4E32:  MOVFF  607,643
4E36:  CALL   0E84
4E3A:  BNC   4E52
....................          { 
....................             Enfria=1; 
4E3C:  MOVLW  01
4E3E:  MOVLB  5
4E40:  MOVWF  x92
....................             Rele1_on;Rele2_on;Rele3_on; 
4E42:  BSF    F8B.0
4E44:  BCF    F94.0
4E46:  BSF    F8B.6
4E48:  BCF    F94.6
4E4A:  BSF    F8B.7
4E4C:  BCF    F94.7
....................          } 
....................          else 
4E4E:  BRA    4E62
4E50:  MOVLB  0
....................          { 
....................             Enfria=0; 
4E52:  MOVLB  5
4E54:  CLRF   x92
....................             Rele1_off;Rele2_off;Rele3_off; 
4E56:  BCF    F8B.0
4E58:  BCF    F94.0
4E5A:  BCF    F8B.6
4E5C:  BCF    F94.6
4E5E:  BCF    F8B.7
4E60:  BCF    F94.7
....................          } 
....................           
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;glcd_fillScreen(OFF);pausa=0; 
4E62:  MOVLW  14
4E64:  MOVWF  x96
4E66:  MOVLW  0F
4E68:  MOVLB  6
4E6A:  MOVWF  x52
4E6C:  MOVLW  12
4E6E:  MOVWF  x53
4E70:  MOVLW  1E
4E72:  MOVWF  x54
4E74:  MOVLW  35
4E76:  MOVWF  x55
4E78:  CLRF   x56
4E7A:  MOVLW  01
4E7C:  MOVWF  x57
4E7E:  MOVLB  0
4E80:  CALL   14AA
4E84:  MOVLB  5
4E86:  CLRF   x9E
4E88:  MOVLB  6
4E8A:  CLRF   x40
4E8C:  MOVLB  0
4E8E:  CALL   0F3E
4E92:  MOVLB  5
4E94:  CLRF   x99
....................          Ganancia=Setpoint*(Ganancia/Coeficiente); 
4E96:  MOVFF  5F6,643
4E9A:  MOVFF  5F5,642
4E9E:  MOVFF  5F4,641
4EA2:  MOVFF  5F3,640
4EA6:  MOVFF  602,647
4EAA:  MOVFF  601,646
4EAE:  MOVFF  600,645
4EB2:  MOVFF  5FF,644
4EB6:  MOVLB  0
4EB8:  CALL   18A2
4EBC:  MOVFF  00,63F
4EC0:  MOVFF  01,640
4EC4:  MOVFF  02,641
4EC8:  MOVFF  03,642
4ECC:  MOVFF  5AC,646
4ED0:  MOVFF  5AB,645
4ED4:  CALL   0E4E
4ED8:  MOVFF  03,65F
4EDC:  MOVFF  02,65E
4EE0:  MOVFF  01,65D
4EE4:  MOVFF  00,65C
4EE8:  MOVFF  642,663
4EEC:  MOVFF  641,662
4EF0:  MOVFF  640,661
4EF4:  MOVFF  63F,660
4EF8:  CALL   1C9A
4EFC:  MOVFF  03,5F6
4F00:  MOVFF  02,5F5
4F04:  MOVFF  01,5F4
4F08:  MOVFF  00,5F3
....................          //Tpulsomin=(Setpoint/150.0); 
....................          Gananciamax=(0.27)*Setpoint; 
4F0C:  MOVFF  5AC,646
4F10:  MOVFF  5AB,645
4F14:  CALL   0E4E
4F18:  MOVLW  71
4F1A:  MOVLB  6
4F1C:  MOVWF  x5F
4F1E:  MOVLW  3D
4F20:  MOVWF  x5E
4F22:  MOVLW  0A
4F24:  MOVWF  x5D
4F26:  MOVLW  7D
4F28:  MOVWF  x5C
4F2A:  MOVFF  03,663
4F2E:  MOVFF  02,662
4F32:  MOVFF  01,661
4F36:  MOVFF  00,660
4F3A:  MOVLB  0
4F3C:  CALL   1C9A
4F40:  MOVFF  03,5BE
4F44:  MOVFF  02,5BD
4F48:  MOVFF  01,5BC
4F4C:  MOVFF  00,5BB
....................          RIGHT=0;LEFT=0; 
4F50:  MOVLB  5
4F52:  BCF    x86.2
4F54:  BCF    x86.3
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
4F56:  BTFSS  x86.3
4F58:  BRA    4F8A
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
4F5A:  MOVLW  04
4F5C:  MOVLB  6
4F5E:  MOVWF  x3F
4F60:  MOVLW  AF
4F62:  MOVWF  x45
4F64:  MOVLB  0
4F66:  CALL   0DFC
4F6A:  MOVLB  6
4F6C:  DECFSZ x3F,F
4F6E:  BRA    4F60
4F70:  MOVLW  01
4F72:  MOVLB  5
4F74:  MOVWF  x96
4F76:  MOVLB  6
4F78:  CLRF   x40
4F7A:  MOVLB  0
4F7C:  CALL   0F3E
4F80:  MOVLW  01
4F82:  MOVLB  5
4F84:  MOVWF  x9C
4F86:  BSF    x87.4
....................          LEFT=0; 
4F88:  BCF    x86.3
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Temperatura 
4F8A:  MOVF   x96,W
4F8C:  SUBLW  05
4F8E:  BTFSS  FD8.2
4F90:  BRA    5410
....................       
....................          if(Opcion>3) 
4F92:  MOVF   x9C,W
4F94:  SUBLW  03
4F96:  BC    4F9C
....................          {Opcion=1;} 
4F98:  MOVLW  01
4F9A:  MOVWF  x9C
....................          if(Opcion<1) 
4F9C:  MOVF   x9C,F
4F9E:  BNZ   4FA4
....................          {Opcion=3;} 
4FA0:  MOVLW  03
4FA2:  MOVWF  x9C
....................           
....................        
....................          if(Opcion==1)    
4FA4:  DECFSZ x9C,W
4FA6:  BRA    4FF6
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 1"); 
4FA8:  MOVLW  06
4FAA:  MOVWF  FEA
4FAC:  MOVLW  1F
4FAE:  MOVWF  FE9
4FB0:  MOVFF  FF2,63F
4FB4:  BCF    FF2.7
4FB6:  MOVLW  00
4FB8:  MOVLB  0
4FBA:  CALL   0920
4FBE:  TBLRD*-
4FC0:  TBLRD*+
4FC2:  MOVF   FF5,W
4FC4:  MOVWF  FEE
4FC6:  IORLW  00
4FC8:  BNZ   4FC0
4FCA:  MOVLB  6
4FCC:  BTFSC  x3F.7
4FCE:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,1,1); 
4FD0:  MOVLW  06
4FD2:  MOVWF  x40
4FD4:  MOVLW  1F
4FD6:  MOVWF  x3F
4FD8:  MOVFF  5AE,642
4FDC:  MOVFF  5AD,641
4FE0:  CLRF   x43
4FE2:  MOVLW  14
4FE4:  MOVWF  x44
4FE6:  MOVLW  01
4FE8:  MOVWF  x45
4FEA:  MOVWF  x46
4FEC:  MOVLB  0
4FEE:  CALL   26B4
....................          } 
....................          else 
4FF2:  BRA    5040
4FF4:  MOVLB  5
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 1"); 
4FF6:  MOVLW  06
4FF8:  MOVWF  FEA
4FFA:  MOVLW  1F
4FFC:  MOVWF  FE9
4FFE:  MOVFF  FF2,63F
5002:  BCF    FF2.7
5004:  MOVLW  00
5006:  MOVLB  0
5008:  CALL   0920
500C:  TBLRD*-
500E:  TBLRD*+
5010:  MOVF   FF5,W
5012:  MOVWF  FEE
5014:  IORLW  00
5016:  BNZ   500E
5018:  MOVLB  6
501A:  BTFSC  x3F.7
501C:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,0,1); 
501E:  MOVLW  06
5020:  MOVWF  x40
5022:  MOVLW  1F
5024:  MOVWF  x3F
5026:  MOVFF  5AE,642
502A:  MOVFF  5AD,641
502E:  CLRF   x43
5030:  MOVLW  14
5032:  MOVWF  x44
5034:  CLRF   x45
5036:  MOVLW  01
5038:  MOVWF  x46
503A:  MOVLB  0
503C:  CALL   26B4
....................          } 
....................           
....................          if(Opcion==2)    
5040:  MOVLB  5
5042:  MOVF   x9C,W
5044:  SUBLW  02
5046:  BNZ   5096
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 2"); 
5048:  MOVLW  06
504A:  MOVWF  FEA
504C:  MOVLW  1F
504E:  MOVWF  FE9
5050:  MOVFF  FF2,63F
5054:  BCF    FF2.7
5056:  MOVLW  00
5058:  MOVLB  0
505A:  CALL   0948
505E:  TBLRD*-
5060:  TBLRD*+
5062:  MOVF   FF5,W
5064:  MOVWF  FEE
5066:  IORLW  00
5068:  BNZ   5060
506A:  MOVLB  6
506C:  BTFSC  x3F.7
506E:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,1,1); 
5070:  MOVLW  06
5072:  MOVWF  x40
5074:  MOVLW  1F
5076:  MOVWF  x3F
5078:  MOVFF  5B0,642
507C:  MOVFF  5AF,641
5080:  CLRF   x43
5082:  MOVLW  23
5084:  MOVWF  x44
5086:  MOVLW  01
5088:  MOVWF  x45
508A:  MOVWF  x46
508C:  MOVLB  0
508E:  CALL   26B4
....................          } 
....................          else 
5092:  BRA    50E0
5094:  MOVLB  5
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 2"); 
5096:  MOVLW  06
5098:  MOVWF  FEA
509A:  MOVLW  1F
509C:  MOVWF  FE9
509E:  MOVFF  FF2,63F
50A2:  BCF    FF2.7
50A4:  MOVLW  00
50A6:  MOVLB  0
50A8:  CALL   0948
50AC:  TBLRD*-
50AE:  TBLRD*+
50B0:  MOVF   FF5,W
50B2:  MOVWF  FEE
50B4:  IORLW  00
50B6:  BNZ   50AE
50B8:  MOVLB  6
50BA:  BTFSC  x3F.7
50BC:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,0,1); 
50BE:  MOVLW  06
50C0:  MOVWF  x40
50C2:  MOVLW  1F
50C4:  MOVWF  x3F
50C6:  MOVFF  5B0,642
50CA:  MOVFF  5AF,641
50CE:  CLRF   x43
50D0:  MOVLW  23
50D2:  MOVWF  x44
50D4:  CLRF   x45
50D6:  MOVLW  01
50D8:  MOVWF  x46
50DA:  MOVLB  0
50DC:  CALL   26B4
....................          } 
....................              
....................          if(Opcion==3)    
50E0:  MOVLB  5
50E2:  MOVF   x9C,W
50E4:  SUBLW  03
50E6:  BNZ   5136
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 3"); 
50E8:  MOVLW  06
50EA:  MOVWF  FEA
50EC:  MOVLW  1F
50EE:  MOVWF  FE9
50F0:  MOVFF  FF2,63F
50F4:  BCF    FF2.7
50F6:  MOVLW  00
50F8:  MOVLB  0
50FA:  CALL   0970
50FE:  TBLRD*-
5100:  TBLRD*+
5102:  MOVF   FF5,W
5104:  MOVWF  FEE
5106:  IORLW  00
5108:  BNZ   5100
510A:  MOVLB  6
510C:  BTFSC  x3F.7
510E:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,1,1); 
5110:  MOVLW  06
5112:  MOVWF  x40
5114:  MOVLW  1F
5116:  MOVWF  x3F
5118:  MOVFF  5B2,642
511C:  MOVFF  5B1,641
5120:  CLRF   x43
5122:  MOVLW  32
5124:  MOVWF  x44
5126:  MOVLW  01
5128:  MOVWF  x45
512A:  MOVWF  x46
512C:  MOVLB  0
512E:  CALL   26B4
....................          } 
....................          else 
5132:  BRA    5180
5134:  MOVLB  5
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 3"); 
5136:  MOVLW  06
5138:  MOVWF  FEA
513A:  MOVLW  1F
513C:  MOVWF  FE9
513E:  MOVFF  FF2,63F
5142:  BCF    FF2.7
5144:  MOVLW  00
5146:  MOVLB  0
5148:  CALL   0970
514C:  TBLRD*-
514E:  TBLRD*+
5150:  MOVF   FF5,W
5152:  MOVWF  FEE
5154:  IORLW  00
5156:  BNZ   514E
5158:  MOVLB  6
515A:  BTFSC  x3F.7
515C:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,0,1); 
515E:  MOVLW  06
5160:  MOVWF  x40
5162:  MOVLW  1F
5164:  MOVWF  x3F
5166:  MOVFF  5B2,642
516A:  MOVFF  5B1,641
516E:  CLRF   x43
5170:  MOVLW  32
5172:  MOVWF  x44
5174:  CLRF   x45
5176:  MOVLW  01
5178:  MOVWF  x46
517A:  MOVLB  0
517C:  CALL   26B4
....................          } 
....................                
....................                 
....................          if(RIGHT)//Si oprime SET 
5180:  MOVLB  5
5182:  BTFSS  x86.2
5184:  BRA    518A
....................          {  
....................             RIGHT=0;Opcion++; 
5186:  BCF    x86.2
5188:  INCF   x9C,F
....................          } 
....................        
....................          strcpy(Menus.Letra,"Temperatura"); 
518A:  MOVLW  06
518C:  MOVWF  FEA
518E:  MOVLW  1F
5190:  MOVWF  FE9
5192:  MOVFF  FF2,63F
5196:  BCF    FF2.7
5198:  MOVLW  00
519A:  MOVLB  0
519C:  CALL   08FA
51A0:  TBLRD*-
51A2:  TBLRD*+
51A4:  MOVF   FF5,W
51A6:  MOVWF  FEE
51A8:  IORLW  00
51AA:  BNZ   51A2
51AC:  MOVLB  6
51AE:  BTFSC  x3F.7
51B0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
51B2:  MOVLW  06
51B4:  MOVWF  x40
51B6:  MOVLW  1F
51B8:  MOVWF  x3F
51BA:  CLRF   x41
51BC:  CLRF   x42
51BE:  MOVLW  01
51C0:  MOVWF  x43
51C2:  MOVLW  02
51C4:  MOVWF  x44
51C6:  MOVLB  0
51C8:  CALL   156C
....................           
....................        
....................          if(UP)//Si oprime hacia arriba 
51CC:  MOVLB  5
51CE:  BTFSS  x86.0
51D0:  BRA    51F6
....................          {   
....................             if(Opcion==1) 
51D2:  DECFSZ x9C,W
51D4:  BRA    51DC
....................                Temperatura1++; 
51D6:  INCF   xAD,F
51D8:  BTFSC  FD8.2
51DA:  INCF   xAE,F
....................              
....................             if(Opcion==2) 
51DC:  MOVF   x9C,W
51DE:  SUBLW  02
51E0:  BNZ   51E8
....................                Temperatura2++; 
51E2:  INCF   xAF,F
51E4:  BTFSC  FD8.2
51E6:  INCF   xB0,F
....................                 
....................             if(Opcion==3) 
51E8:  MOVF   x9C,W
51EA:  SUBLW  03
51EC:  BNZ   51F4
....................                Temperatura3++;    
51EE:  INCF   xB1,F
51F0:  BTFSC  FD8.2
51F2:  INCF   xB2,F
....................             UP=0; 
51F4:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
51F6:  BTFSS  x86.1
51F8:  BRA    5224
....................          {   
....................             if(Opcion==1) 
51FA:  DECFSZ x9C,W
51FC:  BRA    5206
....................                Temperatura1--; 
51FE:  MOVF   xAD,W
5200:  BTFSC  FD8.2
5202:  DECF   xAE,F
5204:  DECF   xAD,F
....................              
....................             if(Opcion==2) 
5206:  MOVF   x9C,W
5208:  SUBLW  02
520A:  BNZ   5214
....................                Temperatura2--; 
520C:  MOVF   xAF,W
520E:  BTFSC  FD8.2
5210:  DECF   xB0,F
5212:  DECF   xAF,F
....................                 
....................             if(Opcion==3) 
5214:  MOVF   x9C,W
5216:  SUBLW  03
5218:  BNZ   5222
....................                Temperatura3--;    
521A:  MOVF   xB1,W
521C:  BTFSC  FD8.2
521E:  DECF   xB2,F
5220:  DECF   xB1,F
....................             DOWN=0; 
5222:  BCF    x86.1
....................          } 
....................                            
....................          if(LEFT)//Si oprime boton de Toma. 
5224:  BTFSS  x86.3
5226:  BRA    53B6
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5228:  MOVLW  04
522A:  MOVLB  6
522C:  MOVWF  x3F
522E:  MOVLW  AF
5230:  MOVWF  x45
5232:  MOVLB  0
5234:  CALL   0DFC
5238:  MOVLB  6
523A:  DECFSZ x3F,F
523C:  BRA    522E
523E:  MOVLW  01
5240:  MOVLB  5
5242:  MOVWF  x96
5244:  MOVLB  6
5246:  CLRF   x40
5248:  MOVLB  0
524A:  CALL   0F3E
524E:  MOVLW  01
5250:  MOVLB  5
5252:  MOVWF  x9C
5254:  BSF    x87.4
....................             write_eeprom(80,make8(Temperatura1,0)); 
5256:  MOVFF  5AD,63F
525A:  MOVLW  50
525C:  MOVWF  FA9
525E:  MOVFF  63F,FA8
5262:  BCF    FA6.6
5264:  BCF    FA6.7
5266:  BSF    FA6.2
5268:  MOVF   FF2,W
526A:  MOVWF  00
526C:  BCF    FF2.7
526E:  MOVLB  F
5270:  MOVLW  55
5272:  MOVWF  FA7
5274:  MOVLW  AA
5276:  MOVWF  FA7
5278:  BSF    FA6.1
527A:  BTFSC  FA6.1
527C:  BRA    527A
527E:  BCF    FA6.2
5280:  MOVF   00,W
5282:  IORWF  FF2,F
....................             delay_ms(50);    
5284:  MOVLW  32
5286:  MOVLB  6
5288:  MOVWF  x45
528A:  MOVLB  0
528C:  CALL   0DFC
....................             write_eeprom(81,make8(Temperatura1,1));//Guardar valor de Setpoint en eeprom 
5290:  MOVFF  5AE,63F
5294:  MOVLW  51
5296:  MOVWF  FA9
5298:  MOVFF  63F,FA8
529C:  BCF    FA6.6
529E:  BCF    FA6.7
52A0:  BSF    FA6.2
52A2:  MOVF   FF2,W
52A4:  MOVWF  00
52A6:  BCF    FF2.7
52A8:  MOVLB  F
52AA:  MOVLW  55
52AC:  MOVWF  FA7
52AE:  MOVLW  AA
52B0:  MOVWF  FA7
52B2:  BSF    FA6.1
52B4:  BTFSC  FA6.1
52B6:  BRA    52B4
52B8:  BCF    FA6.2
52BA:  MOVF   00,W
52BC:  IORWF  FF2,F
....................             delay_ms(50);    
52BE:  MOVLW  32
52C0:  MOVLB  6
52C2:  MOVWF  x45
52C4:  MOVLB  0
52C6:  CALL   0DFC
....................             write_eeprom(83,make8(Temperatura2,0)); 
52CA:  MOVFF  5AF,63F
52CE:  MOVLW  53
52D0:  MOVWF  FA9
52D2:  MOVFF  63F,FA8
52D6:  BCF    FA6.6
52D8:  BCF    FA6.7
52DA:  BSF    FA6.2
52DC:  MOVF   FF2,W
52DE:  MOVWF  00
52E0:  BCF    FF2.7
52E2:  MOVLB  F
52E4:  MOVLW  55
52E6:  MOVWF  FA7
52E8:  MOVLW  AA
52EA:  MOVWF  FA7
52EC:  BSF    FA6.1
52EE:  BTFSC  FA6.1
52F0:  BRA    52EE
52F2:  BCF    FA6.2
52F4:  MOVF   00,W
52F6:  IORWF  FF2,F
....................             delay_ms(50);    
52F8:  MOVLW  32
52FA:  MOVLB  6
52FC:  MOVWF  x45
52FE:  MOVLB  0
5300:  CALL   0DFC
....................             write_eeprom(84,make8(Temperatura2,1));//Guardar valor de Setpoint en eeprom 
5304:  MOVFF  5B0,63F
5308:  MOVLW  54
530A:  MOVWF  FA9
530C:  MOVFF  63F,FA8
5310:  BCF    FA6.6
5312:  BCF    FA6.7
5314:  BSF    FA6.2
5316:  MOVF   FF2,W
5318:  MOVWF  00
531A:  BCF    FF2.7
531C:  MOVLB  F
531E:  MOVLW  55
5320:  MOVWF  FA7
5322:  MOVLW  AA
5324:  MOVWF  FA7
5326:  BSF    FA6.1
5328:  BTFSC  FA6.1
532A:  BRA    5328
532C:  BCF    FA6.2
532E:  MOVF   00,W
5330:  IORWF  FF2,F
....................             delay_ms(50);    
5332:  MOVLW  32
5334:  MOVLB  6
5336:  MOVWF  x45
5338:  MOVLB  0
533A:  CALL   0DFC
....................             write_eeprom(86,make8(Temperatura3,0)); 
533E:  MOVFF  5B1,63F
5342:  MOVLW  56
5344:  MOVWF  FA9
5346:  MOVFF  63F,FA8
534A:  BCF    FA6.6
534C:  BCF    FA6.7
534E:  BSF    FA6.2
5350:  MOVF   FF2,W
5352:  MOVWF  00
5354:  BCF    FF2.7
5356:  MOVLB  F
5358:  MOVLW  55
535A:  MOVWF  FA7
535C:  MOVLW  AA
535E:  MOVWF  FA7
5360:  BSF    FA6.1
5362:  BTFSC  FA6.1
5364:  BRA    5362
5366:  BCF    FA6.2
5368:  MOVF   00,W
536A:  IORWF  FF2,F
....................             delay_ms(50);    
536C:  MOVLW  32
536E:  MOVLB  6
5370:  MOVWF  x45
5372:  MOVLB  0
5374:  CALL   0DFC
....................             write_eeprom(87,make8(Temperatura3,1));//Guardar valor de Setpoint en eeprom 
5378:  MOVFF  5B2,63F
537C:  MOVLW  57
537E:  MOVWF  FA9
5380:  MOVFF  63F,FA8
5384:  BCF    FA6.6
5386:  BCF    FA6.7
5388:  BSF    FA6.2
538A:  MOVF   FF2,W
538C:  MOVWF  00
538E:  BCF    FF2.7
5390:  MOVLB  F
5392:  MOVLW  55
5394:  MOVWF  FA7
5396:  MOVLW  AA
5398:  MOVWF  FA7
539A:  BSF    FA6.1
539C:  BTFSC  FA6.1
539E:  BRA    539C
53A0:  BCF    FA6.2
53A2:  MOVF   00,W
53A4:  IORWF  FF2,F
....................             delay_ms(50);    
53A6:  MOVLW  32
53A8:  MOVLB  6
53AA:  MOVWF  x45
53AC:  MOVLB  0
53AE:  CALL   0DFC
....................             LEFT=0; 
53B2:  MOVLB  5
53B4:  BCF    x86.3
....................          } 
....................           
....................          if(Temperatura1<1) 
53B6:  MOVF   xAD,F
53B8:  BNZ   53C4
53BA:  MOVF   xAE,F
53BC:  BNZ   53C4
....................             Temperatura1=60; 
53BE:  CLRF   xAE
53C0:  MOVLW  3C
53C2:  MOVWF  xAD
....................              
....................          if(Temperatura2<1) 
53C4:  MOVF   xAF,F
53C6:  BNZ   53D2
53C8:  MOVF   xB0,F
53CA:  BNZ   53D2
....................             Temperatura2=60; 
53CC:  CLRF   xB0
53CE:  MOVLW  3C
53D0:  MOVWF  xAF
....................              
....................          if(Temperatura3<1) 
53D2:  MOVF   xB1,F
53D4:  BNZ   53E0
53D6:  MOVF   xB2,F
53D8:  BNZ   53E0
....................             Temperatura3=60; 
53DA:  CLRF   xB2
53DC:  MOVLW  3C
53DE:  MOVWF  xB1
....................              
....................          if(Temperatura1>60) 
53E0:  MOVF   xAE,F
53E2:  BNZ   53EA
53E4:  MOVF   xAD,W
53E6:  SUBLW  3C
53E8:  BC    53F0
....................             Temperatura1=1;    
53EA:  CLRF   xAE
53EC:  MOVLW  01
53EE:  MOVWF  xAD
....................              
....................          if(Temperatura2>60) 
53F0:  MOVF   xB0,F
53F2:  BNZ   53FA
53F4:  MOVF   xAF,W
53F6:  SUBLW  3C
53F8:  BC    5400
....................             Temperatura2=1;    
53FA:  CLRF   xB0
53FC:  MOVLW  01
53FE:  MOVWF  xAF
....................              
....................          if(Temperatura3>60) 
5400:  MOVF   xB2,F
5402:  BNZ   540A
5404:  MOVF   xB1,W
5406:  SUBLW  3C
5408:  BC    5410
....................             Temperatura3=1;    
540A:  CLRF   xB2
540C:  MOVLW  01
540E:  MOVWF  xB1
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Temporizador 
5410:  MOVF   x96,W
5412:  SUBLW  06
5414:  BTFSS  FD8.2
5416:  BRA    5748
....................       
....................        
....................          if(unidad<1) 
5418:  MOVF   x97,F
541A:  BNZ   5420
....................          {unidad=4;} 
541C:  MOVLW  04
541E:  MOVWF  x97
....................           
....................          strcpy(Menus.Letra,"Temporiza"); 
5420:  MOVLW  06
5422:  MOVWF  FEA
5424:  MOVLW  1F
5426:  MOVWF  FE9
5428:  MOVFF  FF2,63F
542C:  BCF    FF2.7
542E:  MOVLW  00
5430:  MOVLB  0
5432:  CALL   0998
5436:  TBLRD*-
5438:  TBLRD*+
543A:  MOVF   FF5,W
543C:  MOVWF  FEE
543E:  IORLW  00
5440:  BNZ   5438
5442:  MOVLB  6
5444:  BTFSC  x3F.7
5446:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5448:  MOVLW  06
544A:  MOVWF  x40
544C:  MOVLW  1F
544E:  MOVWF  x3F
5450:  CLRF   x41
5452:  CLRF   x42
5454:  MOVLW  01
5456:  MOVWF  x43
5458:  MOVLW  02
545A:  MOVWF  x44
545C:  MOVLB  0
545E:  CALL   156C
....................           
....................          if(unidad==4) 
5462:  MOVLB  5
5464:  MOVF   x97,W
5466:  SUBLW  04
5468:  BNZ   5488
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
546A:  MOVFF  5C6,640
546E:  MOVLW  14
5470:  MOVLB  6
5472:  MOVWF  x41
5474:  MOVLW  28
5476:  MOVWF  x42
5478:  MOVLW  01
547A:  MOVWF  x43
547C:  MOVLW  02
547E:  MOVWF  x44
5480:  MOVLB  0
5482:  CALL   29A6
....................          else 
5486:  BRA    54A2
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
5488:  MOVFF  5C6,640
548C:  MOVLW  14
548E:  MOVLB  6
5490:  MOVWF  x41
5492:  MOVLW  28
5494:  MOVWF  x42
5496:  CLRF   x43
5498:  MOVLW  02
549A:  MOVWF  x44
549C:  MOVLB  0
549E:  CALL   29A6
....................           
....................          if(unidad==3) 
54A2:  MOVLB  5
54A4:  MOVF   x97,W
54A6:  SUBLW  03
54A8:  BNZ   54C6
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
54AA:  MOVFF  5C5,640
54AE:  MOVLW  28
54B0:  MOVLB  6
54B2:  MOVWF  x41
54B4:  MOVWF  x42
54B6:  MOVLW  01
54B8:  MOVWF  x43
54BA:  MOVLW  02
54BC:  MOVWF  x44
54BE:  MOVLB  0
54C0:  CALL   29A6
....................          else 
54C4:  BRA    54DE
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
54C6:  MOVFF  5C5,640
54CA:  MOVLW  28
54CC:  MOVLB  6
54CE:  MOVWF  x41
54D0:  MOVWF  x42
54D2:  CLRF   x43
54D4:  MOVLW  02
54D6:  MOVWF  x44
54D8:  MOVLB  0
54DA:  CALL   29A6
....................           
....................          if(unidad==2) 
54DE:  MOVLB  5
54E0:  MOVF   x97,W
54E2:  SUBLW  02
54E4:  BNZ   5504
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
54E6:  MOVFF  5C4,640
54EA:  MOVLW  46
54EC:  MOVLB  6
54EE:  MOVWF  x41
54F0:  MOVLW  28
54F2:  MOVWF  x42
54F4:  MOVLW  01
54F6:  MOVWF  x43
54F8:  MOVLW  02
54FA:  MOVWF  x44
54FC:  MOVLB  0
54FE:  CALL   29A6
....................          else 
5502:  BRA    551E
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
5504:  MOVFF  5C4,640
5508:  MOVLW  46
550A:  MOVLB  6
550C:  MOVWF  x41
550E:  MOVLW  28
5510:  MOVWF  x42
5512:  CLRF   x43
5514:  MOVLW  02
5516:  MOVWF  x44
5518:  MOVLB  0
551A:  CALL   29A6
....................           
....................          if(unidad==1) 
551E:  MOVLB  5
5520:  DECFSZ x97,W
5522:  BRA    5542
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
5524:  MOVFF  5C3,640
5528:  MOVLW  5A
552A:  MOVLB  6
552C:  MOVWF  x41
552E:  MOVLW  28
5530:  MOVWF  x42
5532:  MOVLW  01
5534:  MOVWF  x43
5536:  MOVLW  02
5538:  MOVWF  x44
553A:  MOVLB  0
553C:  CALL   29A6
....................          else 
5540:  BRA    555C
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
5542:  MOVFF  5C3,640
5546:  MOVLW  5A
5548:  MOVLB  6
554A:  MOVWF  x41
554C:  MOVLW  28
554E:  MOVWF  x42
5550:  CLRF   x43
5552:  MOVLW  02
5554:  MOVWF  x44
5556:  MOVLB  0
5558:  CALL   29A6
....................           
....................          strcpy(Menus.Letra,":"); 
555C:  MOVLW  06
555E:  MOVWF  FEA
5560:  MOVLW  1F
5562:  MOVWF  FE9
5564:  MOVFF  FF2,63F
5568:  BCF    FF2.7
556A:  MOVLW  00
556C:  CALL   09BC
5570:  TBLRD*-
5572:  TBLRD*+
5574:  MOVF   FF5,W
5576:  MOVWF  FEE
5578:  IORLW  00
557A:  BNZ   5572
557C:  MOVLB  6
557E:  BTFSC  x3F.7
5580:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);            
5582:  MOVLW  06
5584:  MOVWF  x40
5586:  MOVLW  1F
5588:  MOVWF  x3F
558A:  MOVLW  3C
558C:  MOVWF  x41
558E:  MOVLW  2A
5590:  MOVWF  x42
5592:  MOVLW  02
5594:  MOVWF  x43
5596:  MOVWF  x44
5598:  MOVLB  0
559A:  CALL   156C
....................        
....................          if(UP)//Si oprime hacia arriba 
559E:  MOVLB  5
55A0:  BTFSS  x86.0
55A2:  BRA    55E2
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
55A4:  MOVLW  01
55A6:  SUBWF  x97,W
55A8:  CLRF   03
55AA:  ADDLW  C3
55AC:  MOVWF  FE9
55AE:  MOVLW  05
55B0:  ADDWFC 03,W
55B2:  MOVWF  FEA
55B4:  BTFSC  FEF.7
55B6:  BRA    55BE
55B8:  MOVF   FEF,W
55BA:  SUBLW  08
55BC:  BNC   55E0
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
55BE:  MOVLW  1E
55C0:  MOVLB  6
55C2:  MOVWF  x45
55C4:  MOVLB  0
55C6:  CALL   0DFC
55CA:  MOVLW  01
55CC:  MOVLB  5
55CE:  SUBWF  x97,W
55D0:  CLRF   03
55D2:  ADDLW  C3
55D4:  MOVWF  FE9
55D6:  MOVLW  05
55D8:  ADDWFC 03,W
55DA:  MOVWF  FEA
55DC:  INCF   FEF,F
55DE:  BSF    x87.4
....................             } 
....................             UP=0; 
55E0:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
55E2:  BTFSS  x86.1
55E4:  BRA    5624
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
55E6:  MOVLW  01
55E8:  SUBWF  x97,W
55EA:  CLRF   03
55EC:  ADDLW  C3
55EE:  MOVWF  FE9
55F0:  MOVLW  05
55F2:  ADDWFC 03,W
55F4:  MOVWF  FEA
55F6:  BTFSC  FEF.7
55F8:  BRA    5622
55FA:  MOVF   FEF,W
55FC:  SUBLW  00
55FE:  BC    5622
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
5600:  MOVLW  1E
5602:  MOVLB  6
5604:  MOVWF  x45
5606:  MOVLB  0
5608:  CALL   0DFC
560C:  MOVLW  01
560E:  MOVLB  5
5610:  SUBWF  x97,W
5612:  CLRF   03
5614:  ADDLW  C3
5616:  MOVWF  FE9
5618:  MOVLW  05
561A:  ADDWFC 03,W
561C:  MOVWF  FEA
561E:  DECF   FEF,F
5620:  BSF    x87.4
....................             } 
....................             DOWN=0; 
5622:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5624:  BTFSS  x86.2
5626:  BRA    563C
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5628:  MOVLW  1E
562A:  MOVLB  6
562C:  MOVWF  x45
562E:  MOVLB  0
5630:  CALL   0DFC
5634:  MOVLB  5
5636:  DECF   x97,F
5638:  BSF    x87.4
....................             RIGHT=0; 
563A:  BCF    x86.2
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
563C:  BTFSS  x86.3
563E:  BRA    5748
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5640:  MOVLW  04
5642:  MOVLB  6
5644:  MOVWF  x3F
5646:  MOVLW  AF
5648:  MOVWF  x45
564A:  MOVLB  0
564C:  CALL   0DFC
5650:  MOVLB  6
5652:  DECFSZ x3F,F
5654:  BRA    5646
5656:  MOVLW  01
5658:  MOVLB  5
565A:  MOVWF  x96
565C:  MOVLB  6
565E:  CLRF   x40
5660:  MOVLB  0
5662:  CALL   0F3E
5666:  MOVLW  01
5668:  MOVLB  5
566A:  MOVWF  x9C
566C:  BSF    x87.4
....................             write_eeprom(0,Testerilizacionp[0]); 
566E:  CLRF   FA9
5670:  MOVFF  5C3,FA8
5674:  BCF    FA6.6
5676:  BCF    FA6.7
5678:  BSF    FA6.2
567A:  MOVF   FF2,W
567C:  MOVWF  00
567E:  BCF    FF2.7
5680:  MOVLB  F
5682:  MOVLW  55
5684:  MOVWF  FA7
5686:  MOVLW  AA
5688:  MOVWF  FA7
568A:  BSF    FA6.1
568C:  BTFSC  FA6.1
568E:  BRA    568C
5690:  BCF    FA6.2
5692:  MOVF   00,W
5694:  IORWF  FF2,F
....................             delay_ms(50);    
5696:  MOVLW  32
5698:  MOVLB  6
569A:  MOVWF  x45
569C:  MOVLB  0
569E:  CALL   0DFC
....................             write_eeprom(1,Testerilizacionp[1]); 
56A2:  MOVLW  01
56A4:  MOVWF  FA9
56A6:  MOVFF  5C4,FA8
56AA:  BCF    FA6.6
56AC:  BCF    FA6.7
56AE:  BSF    FA6.2
56B0:  MOVF   FF2,W
56B2:  MOVWF  00
56B4:  BCF    FF2.7
56B6:  MOVLB  F
56B8:  MOVLW  55
56BA:  MOVWF  FA7
56BC:  MOVLW  AA
56BE:  MOVWF  FA7
56C0:  BSF    FA6.1
56C2:  BTFSC  FA6.1
56C4:  BRA    56C2
56C6:  BCF    FA6.2
56C8:  MOVF   00,W
56CA:  IORWF  FF2,F
....................             delay_ms(50);    
56CC:  MOVLW  32
56CE:  MOVLB  6
56D0:  MOVWF  x45
56D2:  MOVLB  0
56D4:  CALL   0DFC
....................             write_eeprom(2,Testerilizacionp[2]); 
56D8:  MOVLW  02
56DA:  MOVWF  FA9
56DC:  MOVFF  5C5,FA8
56E0:  BCF    FA6.6
56E2:  BCF    FA6.7
56E4:  BSF    FA6.2
56E6:  MOVF   FF2,W
56E8:  MOVWF  00
56EA:  BCF    FF2.7
56EC:  MOVLB  F
56EE:  MOVLW  55
56F0:  MOVWF  FA7
56F2:  MOVLW  AA
56F4:  MOVWF  FA7
56F6:  BSF    FA6.1
56F8:  BTFSC  FA6.1
56FA:  BRA    56F8
56FC:  BCF    FA6.2
56FE:  MOVF   00,W
5700:  IORWF  FF2,F
....................             delay_ms(50);    
5702:  MOVLW  32
5704:  MOVLB  6
5706:  MOVWF  x45
5708:  MOVLB  0
570A:  CALL   0DFC
....................             write_eeprom(3,Testerilizacionp[3]); 
570E:  MOVLW  03
5710:  MOVWF  FA9
5712:  MOVFF  5C6,FA8
5716:  BCF    FA6.6
5718:  BCF    FA6.7
571A:  BSF    FA6.2
571C:  MOVF   FF2,W
571E:  MOVWF  00
5720:  BCF    FF2.7
5722:  MOVLB  F
5724:  MOVLW  55
5726:  MOVWF  FA7
5728:  MOVLW  AA
572A:  MOVWF  FA7
572C:  BSF    FA6.1
572E:  BTFSC  FA6.1
5730:  BRA    572E
5732:  BCF    FA6.2
5734:  MOVF   00,W
5736:  IORWF  FF2,F
....................             delay_ms(50);    
5738:  MOVLW  32
573A:  MOVLB  6
573C:  MOVWF  x45
573E:  MOVLB  0
5740:  CALL   0DFC
....................             LEFT=0; 
5744:  MOVLB  5
5746:  BCF    x86.3
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==7){ // Menu de Cambio de Contraseña 
5748:  MOVF   x96,W
574A:  SUBLW  07
574C:  BTFSS  FD8.2
574E:  BRA    5BDC
....................          
....................       strcpy(Menus.Letra,"Clave"); 
5750:  MOVLW  06
5752:  MOVWF  FEA
5754:  MOVLW  1F
5756:  MOVWF  FE9
5758:  MOVFF  FF2,63F
575C:  BCF    FF2.7
575E:  MOVLW  00
5760:  MOVLB  0
5762:  CALL   07A0
5766:  TBLRD*-
5768:  TBLRD*+
576A:  MOVF   FF5,W
576C:  MOVWF  FEE
576E:  IORLW  00
5770:  BNZ   5768
5772:  MOVLB  6
5774:  BTFSC  x3F.7
5776:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
5778:  MOVLW  06
577A:  MOVWF  x40
577C:  MOVLW  1F
577E:  MOVWF  x3F
5780:  MOVLW  1E
5782:  MOVWF  x41
5784:  CLRF   x42
5786:  MOVLW  01
5788:  MOVWF  x43
578A:  MOVLW  02
578C:  MOVWF  x44
578E:  MOVLB  0
5790:  CALL   156C
....................        
....................       if(unidad==1) 
5794:  MOVLB  5
5796:  DECFSZ x97,W
5798:  BRA    57F8
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
579A:  MOVFF  5C7,641
579E:  MOVLW  14
57A0:  MOVLB  6
57A2:  MOVWF  x42
57A4:  MOVLW  1E
57A6:  MOVWF  x43
57A8:  MOVLW  01
57AA:  MOVWF  x44
57AC:  MOVLB  0
57AE:  CALL   1792
....................          displayContrasena(Contrasena[1],40,30,0); 
57B2:  MOVFF  5C8,641
57B6:  MOVLW  28
57B8:  MOVLB  6
57BA:  MOVWF  x42
57BC:  MOVLW  1E
57BE:  MOVWF  x43
57C0:  CLRF   x44
57C2:  MOVLB  0
57C4:  CALL   1792
....................          displayContrasena(Contrasena[2],60,30,0); 
57C8:  MOVFF  5C9,641
57CC:  MOVLW  3C
57CE:  MOVLB  6
57D0:  MOVWF  x42
57D2:  MOVLW  1E
57D4:  MOVWF  x43
57D6:  CLRF   x44
57D8:  MOVLB  0
57DA:  CALL   1792
....................          displayContrasena(Contrasena[3],80,30,0); 
57DE:  MOVFF  5CA,641
57E2:  MOVLW  50
57E4:  MOVLB  6
57E6:  MOVWF  x42
57E8:  MOVLW  1E
57EA:  MOVWF  x43
57EC:  CLRF   x44
57EE:  MOVLB  0
57F0:  CALL   1792
....................       } 
....................       else 
57F4:  BRA    5920
57F6:  MOVLB  5
....................       { 
....................          if(unidad==2) 
57F8:  MOVF   x97,W
57FA:  SUBLW  02
57FC:  BNZ   585C
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
57FE:  MOVFF  5C7,641
5802:  MOVLW  14
5804:  MOVLB  6
5806:  MOVWF  x42
5808:  MOVLW  1E
580A:  MOVWF  x43
580C:  CLRF   x44
580E:  MOVLB  0
5810:  CALL   1792
....................             displayContrasena(Contrasena[1],40,30,1); 
5814:  MOVFF  5C8,641
5818:  MOVLW  28
581A:  MOVLB  6
581C:  MOVWF  x42
581E:  MOVLW  1E
5820:  MOVWF  x43
5822:  MOVLW  01
5824:  MOVWF  x44
5826:  MOVLB  0
5828:  CALL   1792
....................             displayContrasena(Contrasena[2],60,30,0); 
582C:  MOVFF  5C9,641
5830:  MOVLW  3C
5832:  MOVLB  6
5834:  MOVWF  x42
5836:  MOVLW  1E
5838:  MOVWF  x43
583A:  CLRF   x44
583C:  MOVLB  0
583E:  CALL   1792
....................             displayContrasena(Contrasena[3],80,30,0); 
5842:  MOVFF  5CA,641
5846:  MOVLW  50
5848:  MOVLB  6
584A:  MOVWF  x42
584C:  MOVLW  1E
584E:  MOVWF  x43
5850:  CLRF   x44
5852:  MOVLB  0
5854:  CALL   1792
....................          } 
....................          else 
5858:  BRA    5920
585A:  MOVLB  5
....................          { 
....................             if(unidad==3) 
585C:  MOVF   x97,W
585E:  SUBLW  03
5860:  BNZ   58C0
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
5862:  MOVFF  5C7,641
5866:  MOVLW  14
5868:  MOVLB  6
586A:  MOVWF  x42
586C:  MOVLW  1E
586E:  MOVWF  x43
5870:  CLRF   x44
5872:  MOVLB  0
5874:  CALL   1792
....................                displayContrasena(Contrasena[1],40,30,0); 
5878:  MOVFF  5C8,641
587C:  MOVLW  28
587E:  MOVLB  6
5880:  MOVWF  x42
5882:  MOVLW  1E
5884:  MOVWF  x43
5886:  CLRF   x44
5888:  MOVLB  0
588A:  CALL   1792
....................                displayContrasena(Contrasena[2],60,30,1); 
588E:  MOVFF  5C9,641
5892:  MOVLW  3C
5894:  MOVLB  6
5896:  MOVWF  x42
5898:  MOVLW  1E
589A:  MOVWF  x43
589C:  MOVLW  01
589E:  MOVWF  x44
58A0:  MOVLB  0
58A2:  CALL   1792
....................                displayContrasena(Contrasena[3],80,30,0); 
58A6:  MOVFF  5CA,641
58AA:  MOVLW  50
58AC:  MOVLB  6
58AE:  MOVWF  x42
58B0:  MOVLW  1E
58B2:  MOVWF  x43
58B4:  CLRF   x44
58B6:  MOVLB  0
58B8:  CALL   1792
....................             } 
....................             else 
58BC:  BRA    5920
58BE:  MOVLB  5
....................             { 
....................                if(unidad==4) 
58C0:  MOVF   x97,W
58C2:  SUBLW  04
58C4:  BNZ   5922
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
58C6:  MOVFF  5C7,641
58CA:  MOVLW  14
58CC:  MOVLB  6
58CE:  MOVWF  x42
58D0:  MOVLW  1E
58D2:  MOVWF  x43
58D4:  CLRF   x44
58D6:  MOVLB  0
58D8:  CALL   1792
....................                   displayContrasena(Contrasena[1],40,30,0); 
58DC:  MOVFF  5C8,641
58E0:  MOVLW  28
58E2:  MOVLB  6
58E4:  MOVWF  x42
58E6:  MOVLW  1E
58E8:  MOVWF  x43
58EA:  CLRF   x44
58EC:  MOVLB  0
58EE:  CALL   1792
....................                   displayContrasena(Contrasena[2],60,30,0); 
58F2:  MOVFF  5C9,641
58F6:  MOVLW  3C
58F8:  MOVLB  6
58FA:  MOVWF  x42
58FC:  MOVLW  1E
58FE:  MOVWF  x43
5900:  CLRF   x44
5902:  MOVLB  0
5904:  CALL   1792
....................                   displayContrasena(Contrasena[3],80,30,1); 
5908:  MOVFF  5CA,641
590C:  MOVLW  50
590E:  MOVLB  6
5910:  MOVWF  x42
5912:  MOVLW  1E
5914:  MOVWF  x43
5916:  MOVLW  01
5918:  MOVWF  x44
591A:  MOVLB  0
591C:  CALL   1792
5920:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
5922:  BTFSS  x86.0
5924:  BRA    5988
....................       { 
....................          UP=0;delay_ms(30); 
5926:  BCF    x86.0
5928:  MOVLW  1E
592A:  MOVLB  6
592C:  MOVWF  x45
592E:  MOVLB  0
5930:  CALL   0DFC
....................          for(i=1;i<=4;i++) 
5934:  MOVLW  01
5936:  MOVLB  5
5938:  MOVWF  x98
593A:  MOVF   x98,W
593C:  SUBLW  04
593E:  BNC   5988
....................          { 
....................             if(unidad==i) 
5940:  MOVF   x98,W
5942:  SUBWF  x97,W
5944:  BNZ   5984
....................             { 
....................                Contrasena[i-1]++; 
5946:  MOVLW  01
5948:  SUBWF  x98,W
594A:  CLRF   03
594C:  ADDLW  C7
594E:  MOVWF  FE9
5950:  MOVLW  05
5952:  ADDWFC 03,W
5954:  MOVWF  FEA
5956:  INCF   FEF,F
....................                if(Contrasena[i-1]>9)    
5958:  MOVLW  01
595A:  SUBWF  x98,W
595C:  CLRF   03
595E:  ADDLW  C7
5960:  MOVWF  FE9
5962:  MOVLW  05
5964:  ADDWFC 03,W
5966:  MOVWF  FEA
5968:  BTFSC  FEF.7
596A:  BRA    5984
596C:  MOVF   FEF,W
596E:  SUBLW  09
5970:  BC    5984
....................                { 
....................                   Contrasena[i-1]=0; 
5972:  MOVLW  01
5974:  SUBWF  x98,W
5976:  CLRF   03
5978:  ADDLW  C7
597A:  MOVWF  FE9
597C:  MOVLW  05
597E:  ADDWFC 03,W
5980:  MOVWF  FEA
5982:  CLRF   FEF
....................                } 
....................             } 
....................          } 
5984:  INCF   x98,F
5986:  BRA    593A
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5988:  BTFSS  x86.1
598A:  BRA    59EC
....................       { 
....................          DOWN=0;delay_ms(30); 
598C:  BCF    x86.1
598E:  MOVLW  1E
5990:  MOVLB  6
5992:  MOVWF  x45
5994:  MOVLB  0
5996:  CALL   0DFC
....................          for(i=1;i<=4;i++) 
599A:  MOVLW  01
599C:  MOVLB  5
599E:  MOVWF  x98
59A0:  MOVF   x98,W
59A2:  SUBLW  04
59A4:  BNC   59EC
....................          { 
....................             if(unidad==i) 
59A6:  MOVF   x98,W
59A8:  SUBWF  x97,W
59AA:  BNZ   59E8
....................             {Contrasena[i-1]--;  
59AC:  MOVLW  01
59AE:  SUBWF  x98,W
59B0:  CLRF   03
59B2:  ADDLW  C7
59B4:  MOVWF  FE9
59B6:  MOVLW  05
59B8:  ADDWFC 03,W
59BA:  MOVWF  FEA
59BC:  DECF   FEF,F
....................             if(Contrasena[i-1]<0) 
59BE:  MOVLW  01
59C0:  SUBWF  x98,W
59C2:  CLRF   03
59C4:  ADDLW  C7
59C6:  MOVWF  FE9
59C8:  MOVLW  05
59CA:  ADDWFC 03,W
59CC:  MOVWF  FEA
59CE:  BTFSC  FEF.7
59D0:  BRA    59D4
59D2:  BRA    59E8
....................             {Contrasena[i-1]=9;} 
59D4:  MOVLW  01
59D6:  SUBWF  x98,W
59D8:  CLRF   03
59DA:  ADDLW  C7
59DC:  MOVWF  FE9
59DE:  MOVLW  05
59E0:  ADDWFC 03,W
59E2:  MOVWF  FEA
59E4:  MOVLW  09
59E6:  MOVWF  FEF
....................             } 
....................          }   
59E8:  INCF   x98,F
59EA:  BRA    59A0
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
59EC:  BTFSS  x86.2
59EE:  BRA    5A02
....................       { 
....................          RIGHT=0;delay_ms(30);unidad++; 
59F0:  BCF    x86.2
59F2:  MOVLW  1E
59F4:  MOVLB  6
59F6:  MOVWF  x45
59F8:  MOVLB  0
59FA:  CALL   0DFC
59FE:  MOVLB  5
5A00:  INCF   x97,F
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
5A02:  BTFSS  x86.3
5A04:  BRA    5A30
....................       { 
....................          LEFT=0;delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
5A06:  BCF    x86.3
5A08:  MOVLW  04
5A0A:  MOVLB  6
5A0C:  MOVWF  x3F
5A0E:  MOVLW  AF
5A10:  MOVWF  x45
5A12:  MOVLB  0
5A14:  CALL   0DFC
5A18:  MOVLB  6
5A1A:  DECFSZ x3F,F
5A1C:  BRA    5A0E
5A1E:  MOVLW  01
5A20:  MOVLB  5
5A22:  MOVWF  x96
5A24:  MOVLB  6
5A26:  CLRF   x40
5A28:  MOVLB  0
5A2A:  CALL   0F3E
5A2E:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
5A30:  MOVF   x97,W
5A32:  SUBLW  04
5A34:  BTFSC  FD8.0
5A36:  BRA    5BDC
....................       {glcd_fillScreen(OFF); 
5A38:  MOVLB  6
5A3A:  CLRF   x40
5A3C:  MOVLB  0
5A3E:  CALL   0F3E
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
5A42:  MOVLB  5
5A44:  MOVF   xCB,W
5A46:  SUBWF  xC7,W
5A48:  BNZ   5B1A
5A4A:  MOVF   xCC,W
5A4C:  SUBWF  xC8,W
5A4E:  BNZ   5B1A
5A50:  MOVF   xCD,W
5A52:  SUBWF  xC9,W
5A54:  BNZ   5B1A
5A56:  MOVF   xCE,W
5A58:  SUBWF  xCA,W
5A5A:  BNZ   5B1A
....................          { 
....................             glcd_fillScreen(OFF); 
5A5C:  MOVLB  6
5A5E:  CLRF   x40
5A60:  MOVLB  0
5A62:  CALL   0F3E
....................             strcpy(Menus.Letra,"Clave"); 
5A66:  MOVLW  06
5A68:  MOVWF  FEA
5A6A:  MOVLW  1F
5A6C:  MOVWF  FE9
5A6E:  MOVFF  FF2,63F
5A72:  BCF    FF2.7
5A74:  MOVLW  00
5A76:  CALL   07A0
5A7A:  TBLRD*-
5A7C:  TBLRD*+
5A7E:  MOVF   FF5,W
5A80:  MOVWF  FEE
5A82:  IORLW  00
5A84:  BNZ   5A7C
5A86:  MOVLB  6
5A88:  BTFSC  x3F.7
5A8A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
5A8C:  MOVLW  06
5A8E:  MOVWF  x40
5A90:  MOVLW  1F
5A92:  MOVWF  x3F
5A94:  MOVLW  1E
5A96:  MOVWF  x41
5A98:  CLRF   x42
5A9A:  CLRF   x43
5A9C:  MOVLW  02
5A9E:  MOVWF  x44
5AA0:  MOVLB  0
5AA2:  CALL   156C
....................             strcpy(Menus.Letra,"Correcta"); 
5AA6:  MOVLW  06
5AA8:  MOVWF  FEA
5AAA:  MOVLW  1F
5AAC:  MOVWF  FE9
5AAE:  MOVFF  FF2,63F
5AB2:  BCF    FF2.7
5AB4:  MOVLW  00
5AB6:  CALL   07C0
5ABA:  TBLRD*-
5ABC:  TBLRD*+
5ABE:  MOVF   FF5,W
5AC0:  MOVWF  FEE
5AC2:  IORLW  00
5AC4:  BNZ   5ABC
5AC6:  MOVLB  6
5AC8:  BTFSC  x3F.7
5ACA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
5ACC:  MOVLW  06
5ACE:  MOVWF  x40
5AD0:  MOVLW  1F
5AD2:  MOVWF  x3F
5AD4:  MOVLW  0F
5AD6:  MOVWF  x41
5AD8:  MOVLW  1E
5ADA:  MOVWF  x42
5ADC:  CLRF   x43
5ADE:  MOVLW  02
5AE0:  MOVWF  x44
5AE2:  MOVLB  0
5AE4:  CALL   156C
....................             Menu=91;glcd_update();delay_ms(1000); 
5AE8:  MOVLW  5B
5AEA:  MOVLB  5
5AEC:  MOVWF  x96
5AEE:  MOVLB  0
5AF0:  CALL   0F98
5AF4:  MOVLW  04
5AF6:  MOVLB  6
5AF8:  MOVWF  x3F
5AFA:  MOVLW  FA
5AFC:  MOVWF  x45
5AFE:  MOVLB  0
5B00:  CALL   0DFC
5B04:  MOVLB  6
5B06:  DECFSZ x3F,F
5B08:  BRA    5AFA
....................             glcd_fillScreen(OFF);unidad=1; 
5B0A:  CLRF   x40
5B0C:  MOVLB  0
5B0E:  CALL   0F3E
5B12:  MOVLW  01
5B14:  MOVLB  5
5B16:  MOVWF  x97
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
5B18:  BRA    5BDC
....................          { 
....................             glcd_fillScreen(OFF); 
5B1A:  MOVLB  6
5B1C:  CLRF   x40
5B1E:  MOVLB  0
5B20:  CALL   0F3E
....................             strcpy(Menus.Letra,"Clave"); 
5B24:  MOVLW  06
5B26:  MOVWF  FEA
5B28:  MOVLW  1F
5B2A:  MOVWF  FE9
5B2C:  MOVFF  FF2,63F
5B30:  BCF    FF2.7
5B32:  MOVLW  00
5B34:  CALL   07A0
5B38:  TBLRD*-
5B3A:  TBLRD*+
5B3C:  MOVF   FF5,W
5B3E:  MOVWF  FEE
5B40:  IORLW  00
5B42:  BNZ   5B3A
5B44:  MOVLB  6
5B46:  BTFSC  x3F.7
5B48:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
5B4A:  MOVLW  06
5B4C:  MOVWF  x40
5B4E:  MOVLW  1F
5B50:  MOVWF  x3F
5B52:  MOVLW  1E
5B54:  MOVWF  x41
5B56:  CLRF   x42
5B58:  CLRF   x43
5B5A:  MOVLW  02
5B5C:  MOVWF  x44
5B5E:  MOVLB  0
5B60:  CALL   156C
....................             strcpy(Menus.Letra,"Incorrecta"); 
5B64:  MOVLW  06
5B66:  MOVWF  FEA
5B68:  MOVLW  1F
5B6A:  MOVWF  FE9
5B6C:  MOVFF  FF2,63F
5B70:  BCF    FF2.7
5B72:  MOVLW  00
5B74:  CALL   07E4
5B78:  TBLRD*-
5B7A:  TBLRD*+
5B7C:  MOVF   FF5,W
5B7E:  MOVWF  FEE
5B80:  IORLW  00
5B82:  BNZ   5B7A
5B84:  MOVLB  6
5B86:  BTFSC  x3F.7
5B88:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
5B8A:  MOVLW  06
5B8C:  MOVWF  x40
5B8E:  MOVLW  1F
5B90:  MOVWF  x3F
5B92:  CLRF   x41
5B94:  MOVLW  1E
5B96:  MOVWF  x42
5B98:  CLRF   x43
5B9A:  MOVLW  02
5B9C:  MOVWF  x44
5B9E:  MOVLB  0
5BA0:  CALL   156C
....................             Menu=1;glcd_update();delay_ms(1000); 
5BA4:  MOVLW  01
5BA6:  MOVLB  5
5BA8:  MOVWF  x96
5BAA:  MOVLB  0
5BAC:  CALL   0F98
5BB0:  MOVLW  04
5BB2:  MOVLB  6
5BB4:  MOVWF  x3F
5BB6:  MOVLW  FA
5BB8:  MOVWF  x45
5BBA:  MOVLB  0
5BBC:  CALL   0DFC
5BC0:  MOVLB  6
5BC2:  DECFSZ x3F,F
5BC4:  BRA    5BB6
....................             glcd_fillScreen(OFF);unidad=1; 
5BC6:  CLRF   x40
5BC8:  MOVLB  0
5BCA:  CALL   0F3E
5BCE:  MOVLW  01
5BD0:  MOVLB  5
5BD2:  MOVWF  x97
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
5BD4:  CLRF   xC7
5BD6:  CLRF   xC8
5BD8:  CLRF   xC9
5BDA:  CLRF   xCA
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
5BDC:  MOVF   x96,W
5BDE:  SUBLW  5B
5BE0:  BTFSS  FD8.2
5BE2:  BRA    5FC0
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
5BE4:  MOVLW  06
5BE6:  MOVWF  FEA
5BE8:  MOVLW  1F
5BEA:  MOVWF  FE9
5BEC:  MOVFF  FF2,63F
5BF0:  BCF    FF2.7
5BF2:  MOVLW  00
5BF4:  MOVLB  0
5BF6:  CALL   09D8
5BFA:  TBLRD*-
5BFC:  TBLRD*+
5BFE:  MOVF   FF5,W
5C00:  MOVWF  FEE
5C02:  IORLW  00
5C04:  BNZ   5BFC
5C06:  MOVLB  6
5C08:  BTFSC  x3F.7
5C0A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
5C0C:  MOVLW  06
5C0E:  MOVWF  x40
5C10:  MOVLW  1F
5C12:  MOVWF  x3F
5C14:  CLRF   x41
5C16:  CLRF   x42
5C18:  MOVLW  01
5C1A:  MOVWF  x43
5C1C:  MOVLW  02
5C1E:  MOVWF  x44
5C20:  MOVLB  0
5C22:  CALL   156C
....................        
....................       if(unidad==1) 
5C26:  MOVLB  5
5C28:  DECFSZ x97,W
5C2A:  BRA    5C8A
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
5C2C:  MOVFF  5CB,641
5C30:  MOVLW  14
5C32:  MOVLB  6
5C34:  MOVWF  x42
5C36:  MOVLW  1E
5C38:  MOVWF  x43
5C3A:  MOVLW  01
5C3C:  MOVWF  x44
5C3E:  MOVLB  0
5C40:  CALL   1792
....................          displayContrasena(Password[1],40,30,0); 
5C44:  MOVFF  5CC,641
5C48:  MOVLW  28
5C4A:  MOVLB  6
5C4C:  MOVWF  x42
5C4E:  MOVLW  1E
5C50:  MOVWF  x43
5C52:  CLRF   x44
5C54:  MOVLB  0
5C56:  CALL   1792
....................          displayContrasena(Password[2],60,30,0); 
5C5A:  MOVFF  5CD,641
5C5E:  MOVLW  3C
5C60:  MOVLB  6
5C62:  MOVWF  x42
5C64:  MOVLW  1E
5C66:  MOVWF  x43
5C68:  CLRF   x44
5C6A:  MOVLB  0
5C6C:  CALL   1792
....................          displayContrasena(Password[3],80,30,0); 
5C70:  MOVFF  5CE,641
5C74:  MOVLW  50
5C76:  MOVLB  6
5C78:  MOVWF  x42
5C7A:  MOVLW  1E
5C7C:  MOVWF  x43
5C7E:  CLRF   x44
5C80:  MOVLB  0
5C82:  CALL   1792
....................       } 
....................       else 
5C86:  BRA    5DB2
5C88:  MOVLB  5
....................       { 
....................          if(unidad==2) 
5C8A:  MOVF   x97,W
5C8C:  SUBLW  02
5C8E:  BNZ   5CEE
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
5C90:  MOVFF  5CB,641
5C94:  MOVLW  14
5C96:  MOVLB  6
5C98:  MOVWF  x42
5C9A:  MOVLW  1E
5C9C:  MOVWF  x43
5C9E:  CLRF   x44
5CA0:  MOVLB  0
5CA2:  CALL   1792
....................             displayContrasena(Password[1],40,30,1); 
5CA6:  MOVFF  5CC,641
5CAA:  MOVLW  28
5CAC:  MOVLB  6
5CAE:  MOVWF  x42
5CB0:  MOVLW  1E
5CB2:  MOVWF  x43
5CB4:  MOVLW  01
5CB6:  MOVWF  x44
5CB8:  MOVLB  0
5CBA:  CALL   1792
....................             displayContrasena(Password[2],60,30,0); 
5CBE:  MOVFF  5CD,641
5CC2:  MOVLW  3C
5CC4:  MOVLB  6
5CC6:  MOVWF  x42
5CC8:  MOVLW  1E
5CCA:  MOVWF  x43
5CCC:  CLRF   x44
5CCE:  MOVLB  0
5CD0:  CALL   1792
....................             displayContrasena(Password[3],80,30,0); 
5CD4:  MOVFF  5CE,641
5CD8:  MOVLW  50
5CDA:  MOVLB  6
5CDC:  MOVWF  x42
5CDE:  MOVLW  1E
5CE0:  MOVWF  x43
5CE2:  CLRF   x44
5CE4:  MOVLB  0
5CE6:  CALL   1792
....................          } 
....................          else 
5CEA:  BRA    5DB2
5CEC:  MOVLB  5
....................          { 
....................             if(unidad==3) 
5CEE:  MOVF   x97,W
5CF0:  SUBLW  03
5CF2:  BNZ   5D52
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
5CF4:  MOVFF  5CB,641
5CF8:  MOVLW  14
5CFA:  MOVLB  6
5CFC:  MOVWF  x42
5CFE:  MOVLW  1E
5D00:  MOVWF  x43
5D02:  CLRF   x44
5D04:  MOVLB  0
5D06:  CALL   1792
....................                displayContrasena(Password[1],40,30,0); 
5D0A:  MOVFF  5CC,641
5D0E:  MOVLW  28
5D10:  MOVLB  6
5D12:  MOVWF  x42
5D14:  MOVLW  1E
5D16:  MOVWF  x43
5D18:  CLRF   x44
5D1A:  MOVLB  0
5D1C:  CALL   1792
....................                displayContrasena(Password[2],60,30,1); 
5D20:  MOVFF  5CD,641
5D24:  MOVLW  3C
5D26:  MOVLB  6
5D28:  MOVWF  x42
5D2A:  MOVLW  1E
5D2C:  MOVWF  x43
5D2E:  MOVLW  01
5D30:  MOVWF  x44
5D32:  MOVLB  0
5D34:  CALL   1792
....................                displayContrasena(Password[3],80,30,0); 
5D38:  MOVFF  5CE,641
5D3C:  MOVLW  50
5D3E:  MOVLB  6
5D40:  MOVWF  x42
5D42:  MOVLW  1E
5D44:  MOVWF  x43
5D46:  CLRF   x44
5D48:  MOVLB  0
5D4A:  CALL   1792
....................             } 
....................             else 
5D4E:  BRA    5DB2
5D50:  MOVLB  5
....................             { 
....................                if(unidad==4) 
5D52:  MOVF   x97,W
5D54:  SUBLW  04
5D56:  BNZ   5DB4
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
5D58:  MOVFF  5CB,641
5D5C:  MOVLW  14
5D5E:  MOVLB  6
5D60:  MOVWF  x42
5D62:  MOVLW  1E
5D64:  MOVWF  x43
5D66:  CLRF   x44
5D68:  MOVLB  0
5D6A:  CALL   1792
....................                   displayContrasena(Password[1],40,30,0); 
5D6E:  MOVFF  5CC,641
5D72:  MOVLW  28
5D74:  MOVLB  6
5D76:  MOVWF  x42
5D78:  MOVLW  1E
5D7A:  MOVWF  x43
5D7C:  CLRF   x44
5D7E:  MOVLB  0
5D80:  CALL   1792
....................                   displayContrasena(Password[2],60,30,0); 
5D84:  MOVFF  5CD,641
5D88:  MOVLW  3C
5D8A:  MOVLB  6
5D8C:  MOVWF  x42
5D8E:  MOVLW  1E
5D90:  MOVWF  x43
5D92:  CLRF   x44
5D94:  MOVLB  0
5D96:  CALL   1792
....................                   displayContrasena(Password[3],80,30,1); 
5D9A:  MOVFF  5CE,641
5D9E:  MOVLW  50
5DA0:  MOVLB  6
5DA2:  MOVWF  x42
5DA4:  MOVLW  1E
5DA6:  MOVWF  x43
5DA8:  MOVLW  01
5DAA:  MOVWF  x44
5DAC:  MOVLB  0
5DAE:  CALL   1792
5DB2:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
5DB4:  BTFSS  x86.0
5DB6:  BRA    5E1A
....................       { 
....................          UP=0;delay_ms(30); 
5DB8:  BCF    x86.0
5DBA:  MOVLW  1E
5DBC:  MOVLB  6
5DBE:  MOVWF  x45
5DC0:  MOVLB  0
5DC2:  CALL   0DFC
....................          for(i=1;i<=4;i++) 
5DC6:  MOVLW  01
5DC8:  MOVLB  5
5DCA:  MOVWF  x98
5DCC:  MOVF   x98,W
5DCE:  SUBLW  04
5DD0:  BNC   5E1A
....................          { 
....................             if(unidad==i) 
5DD2:  MOVF   x98,W
5DD4:  SUBWF  x97,W
5DD6:  BNZ   5E16
....................             { 
....................                Password[i-1]++; 
5DD8:  MOVLW  01
5DDA:  SUBWF  x98,W
5DDC:  CLRF   03
5DDE:  ADDLW  CB
5DE0:  MOVWF  FE9
5DE2:  MOVLW  05
5DE4:  ADDWFC 03,W
5DE6:  MOVWF  FEA
5DE8:  INCF   FEF,F
....................                if(Password[i-1]>9)    
5DEA:  MOVLW  01
5DEC:  SUBWF  x98,W
5DEE:  CLRF   03
5DF0:  ADDLW  CB
5DF2:  MOVWF  FE9
5DF4:  MOVLW  05
5DF6:  ADDWFC 03,W
5DF8:  MOVWF  FEA
5DFA:  BTFSC  FEF.7
5DFC:  BRA    5E16
5DFE:  MOVF   FEF,W
5E00:  SUBLW  09
5E02:  BC    5E16
....................                { 
....................                   Password[i-1]=0; 
5E04:  MOVLW  01
5E06:  SUBWF  x98,W
5E08:  CLRF   03
5E0A:  ADDLW  CB
5E0C:  MOVWF  FE9
5E0E:  MOVLW  05
5E10:  ADDWFC 03,W
5E12:  MOVWF  FEA
5E14:  CLRF   FEF
....................                } 
....................             } 
....................          } 
5E16:  INCF   x98,F
5E18:  BRA    5DCC
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5E1A:  BTFSS  x86.1
5E1C:  BRA    5E7E
....................       { 
....................          DOWN=0;delay_ms(30); 
5E1E:  BCF    x86.1
5E20:  MOVLW  1E
5E22:  MOVLB  6
5E24:  MOVWF  x45
5E26:  MOVLB  0
5E28:  CALL   0DFC
....................          for(i=1;i<=4;i++) 
5E2C:  MOVLW  01
5E2E:  MOVLB  5
5E30:  MOVWF  x98
5E32:  MOVF   x98,W
5E34:  SUBLW  04
5E36:  BNC   5E7E
....................             { 
....................                if(unidad==i) 
5E38:  MOVF   x98,W
5E3A:  SUBWF  x97,W
5E3C:  BNZ   5E7A
....................                { 
....................                   Password[i-1]--; 
5E3E:  MOVLW  01
5E40:  SUBWF  x98,W
5E42:  CLRF   03
5E44:  ADDLW  CB
5E46:  MOVWF  FE9
5E48:  MOVLW  05
5E4A:  ADDWFC 03,W
5E4C:  MOVWF  FEA
5E4E:  DECF   FEF,F
....................                   if(Password[i-1]<0) 
5E50:  MOVLW  01
5E52:  SUBWF  x98,W
5E54:  CLRF   03
5E56:  ADDLW  CB
5E58:  MOVWF  FE9
5E5A:  MOVLW  05
5E5C:  ADDWFC 03,W
5E5E:  MOVWF  FEA
5E60:  BTFSC  FEF.7
5E62:  BRA    5E66
5E64:  BRA    5E7A
....................                   { 
....................                      Password[i-1]=9; 
5E66:  MOVLW  01
5E68:  SUBWF  x98,W
5E6A:  CLRF   03
5E6C:  ADDLW  CB
5E6E:  MOVWF  FE9
5E70:  MOVLW  05
5E72:  ADDWFC 03,W
5E74:  MOVWF  FEA
5E76:  MOVLW  09
5E78:  MOVWF  FEF
....................                   } 
....................                } 
....................             }        
5E7A:  INCF   x98,F
5E7C:  BRA    5E32
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
5E7E:  BTFSS  x86.2
5E80:  BRA    5E94
....................       { 
....................          RIGHT=0;delay_ms(30);unidad++; 
5E82:  BCF    x86.2
5E84:  MOVLW  1E
5E86:  MOVLB  6
5E88:  MOVWF  x45
5E8A:  MOVLB  0
5E8C:  CALL   0DFC
5E90:  MOVLB  5
5E92:  INCF   x97,F
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
5E94:  BTFSS  x86.3
5E96:  BRA    5EC2
....................       { 
....................          LEFT=0;delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
5E98:  BCF    x86.3
5E9A:  MOVLW  04
5E9C:  MOVLB  6
5E9E:  MOVWF  x3F
5EA0:  MOVLW  AF
5EA2:  MOVWF  x45
5EA4:  MOVLB  0
5EA6:  CALL   0DFC
5EAA:  MOVLB  6
5EAC:  DECFSZ x3F,F
5EAE:  BRA    5EA0
5EB0:  MOVLW  01
5EB2:  MOVLB  5
5EB4:  MOVWF  x96
5EB6:  MOVLB  6
5EB8:  CLRF   x40
5EBA:  MOVLB  0
5EBC:  CALL   0F3E
5EC0:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
5EC2:  MOVF   x97,W
5EC4:  SUBLW  04
5EC6:  BTFSC  FD8.0
5EC8:  BRA    5FC0
....................       { 
....................          Opcion=1;unidad=1; 
5ECA:  MOVLW  01
5ECC:  MOVWF  x9C
5ECE:  MOVWF  x97
....................          write_eeprom(10,Password[0]); 
5ED0:  MOVLW  0A
5ED2:  MOVWF  FA9
5ED4:  MOVFF  5CB,FA8
5ED8:  BCF    FA6.6
5EDA:  BCF    FA6.7
5EDC:  BSF    FA6.2
5EDE:  MOVF   FF2,W
5EE0:  MOVWF  00
5EE2:  BCF    FF2.7
5EE4:  MOVLB  F
5EE6:  MOVLW  55
5EE8:  MOVWF  FA7
5EEA:  MOVLW  AA
5EEC:  MOVWF  FA7
5EEE:  BSF    FA6.1
5EF0:  BTFSC  FA6.1
5EF2:  BRA    5EF0
5EF4:  BCF    FA6.2
5EF6:  MOVF   00,W
5EF8:  IORWF  FF2,F
....................          delay_ms(50);    
5EFA:  MOVLW  32
5EFC:  MOVLB  6
5EFE:  MOVWF  x45
5F00:  MOVLB  0
5F02:  CALL   0DFC
....................          write_eeprom(11,Password[1]); 
5F06:  MOVLW  0B
5F08:  MOVWF  FA9
5F0A:  MOVFF  5CC,FA8
5F0E:  BCF    FA6.6
5F10:  BCF    FA6.7
5F12:  BSF    FA6.2
5F14:  MOVF   FF2,W
5F16:  MOVWF  00
5F18:  BCF    FF2.7
5F1A:  MOVLB  F
5F1C:  MOVLW  55
5F1E:  MOVWF  FA7
5F20:  MOVLW  AA
5F22:  MOVWF  FA7
5F24:  BSF    FA6.1
5F26:  BTFSC  FA6.1
5F28:  BRA    5F26
5F2A:  BCF    FA6.2
5F2C:  MOVF   00,W
5F2E:  IORWF  FF2,F
....................          delay_ms(50);    
5F30:  MOVLW  32
5F32:  MOVLB  6
5F34:  MOVWF  x45
5F36:  MOVLB  0
5F38:  CALL   0DFC
....................          write_eeprom(12,Password[2]); 
5F3C:  MOVLW  0C
5F3E:  MOVWF  FA9
5F40:  MOVFF  5CD,FA8
5F44:  BCF    FA6.6
5F46:  BCF    FA6.7
5F48:  BSF    FA6.2
5F4A:  MOVF   FF2,W
5F4C:  MOVWF  00
5F4E:  BCF    FF2.7
5F50:  MOVLB  F
5F52:  MOVLW  55
5F54:  MOVWF  FA7
5F56:  MOVLW  AA
5F58:  MOVWF  FA7
5F5A:  BSF    FA6.1
5F5C:  BTFSC  FA6.1
5F5E:  BRA    5F5C
5F60:  BCF    FA6.2
5F62:  MOVF   00,W
5F64:  IORWF  FF2,F
....................          delay_ms(50);    
5F66:  MOVLW  32
5F68:  MOVLB  6
5F6A:  MOVWF  x45
5F6C:  MOVLB  0
5F6E:  CALL   0DFC
....................          write_eeprom(13,Password[3]); 
5F72:  MOVLW  0D
5F74:  MOVWF  FA9
5F76:  MOVFF  5CE,FA8
5F7A:  BCF    FA6.6
5F7C:  BCF    FA6.7
5F7E:  BSF    FA6.2
5F80:  MOVF   FF2,W
5F82:  MOVWF  00
5F84:  BCF    FF2.7
5F86:  MOVLB  F
5F88:  MOVLW  55
5F8A:  MOVWF  FA7
5F8C:  MOVLW  AA
5F8E:  MOVWF  FA7
5F90:  BSF    FA6.1
5F92:  BTFSC  FA6.1
5F94:  BRA    5F92
5F96:  BCF    FA6.2
5F98:  MOVF   00,W
5F9A:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
5F9C:  MOVLW  04
5F9E:  MOVLB  6
5FA0:  MOVWF  x3F
5FA2:  MOVLW  FA
5FA4:  MOVWF  x45
5FA6:  MOVLB  0
5FA8:  CALL   0DFC
5FAC:  MOVLB  6
5FAE:  DECFSZ x3F,F
5FB0:  BRA    5FA2
5FB2:  CLRF   x40
5FB4:  MOVLB  0
5FB6:  CALL   0F3E
5FBA:  MOVLW  01
5FBC:  MOVLB  5
5FBE:  MOVWF  x96
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==20){ //Menu de Funcionamiento 
5FC0:  MOVF   x96,W
5FC2:  SUBLW  14
5FC4:  BTFSS  FD8.2
5FC6:  GOTO   6DB8
....................        
....................       // Muestra imagen de fondo en Display GLCD 
....................       glcd_imagen(5); 
5FCA:  MOVLW  05
5FCC:  MOVLB  6
5FCE:  MOVWF  x3F
5FD0:  MOVLB  0
5FD2:  GOTO   2B6C
....................  
....................       if(UP && DOWN)//Si oprime hacia abajo 
5FD6:  MOVLB  5
5FD8:  BTFSS  x86.0
5FDA:  BRA    5FF4
5FDC:  BTFSS  x86.1
5FDE:  BRA    5FF4
....................       { 
....................          glcd_init(ON);flag_display=!flag_display; 
5FE0:  MOVLW  01
5FE2:  MOVLB  6
5FE4:  MOVWF  x3F
5FE6:  MOVLB  0
5FE8:  CALL   1050
5FEC:  MOVLB  5
5FEE:  BTG    x93.3
....................          UP=0;DOWN=0; 
5FF0:  BCF    x86.0
5FF2:  BCF    x86.1
....................       } 
....................  
....................       if(Pausa==0 && !TERM && !DOOR) 
5FF4:  MOVF   x99,F
5FF6:  BTFSS  FD8.2
5FF8:  BRA    628C
5FFA:  BSF    F92.3
5FFC:  BTFSC  F80.3
5FFE:  BRA    628C
6000:  BSF    F92.4
6002:  BTFSC  F80.4
6004:  BRA    628C
....................       { 
....................          Velocidades(Velocidad); 
6006:  MOVFF  590,63F
600A:  MOVLB  0
600C:  CALL   0E26
....................          if(Enfria==1) 
6010:  MOVLB  5
6012:  DECFSZ x92,W
6014:  BRA    6152
....................          { 
....................             if(Temperatura<=Setpoint+1.0) 
6016:  MOVFF  5AC,646
601A:  MOVFF  5AB,645
601E:  MOVLB  0
6020:  CALL   0E4E
6024:  BCF    FD8.1
6026:  MOVFF  03,647
602A:  MOVFF  02,646
602E:  MOVFF  01,645
6032:  MOVFF  00,644
6036:  MOVLB  6
6038:  CLRF   x4B
603A:  CLRF   x4A
603C:  CLRF   x49
603E:  MOVLW  7F
6040:  MOVWF  x48
6042:  MOVLB  0
6044:  CALL   1A00
6048:  MOVFF  60A,642
604C:  MOVFF  609,641
6050:  MOVFF  608,640
6054:  MOVFF  607,63F
6058:  MOVFF  03,646
605C:  MOVFF  02,645
6060:  MOVFF  01,644
6064:  MOVFF  00,643
6068:  CALL   0E84
606C:  BC    6070
606E:  BNZ   60E2
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6070:  MOVLB  6
6072:  CLRF   x52
6074:  MOVLW  37
6076:  MOVWF  x53
6078:  MOVLW  7F
607A:  MOVWF  x54
607C:  MOVLW  3F
607E:  MOVWF  x55
6080:  MOVLW  01
6082:  MOVWF  x56
6084:  CLRF   x57
6086:  MOVLB  0
6088:  CALL   14AA
....................                strcpy(Menus.Letra,"Status:Controlando"); 
608C:  MOVLW  06
608E:  MOVWF  FEA
6090:  MOVLW  1F
6092:  MOVWF  FE9
6094:  MOVFF  FF2,63F
6098:  BCF    FF2.7
609A:  MOVLW  00
609C:  CALL   09FE
60A0:  TBLRD*-
60A2:  TBLRD*+
60A4:  MOVF   FF5,W
60A6:  MOVWF  FEE
60A8:  IORLW  00
60AA:  BNZ   60A2
60AC:  MOVLB  6
60AE:  BTFSC  x3F.7
60B0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
60B2:  MOVLW  06
60B4:  MOVWF  x40
60B6:  MOVLW  1F
60B8:  MOVWF  x3F
60BA:  CLRF   x41
60BC:  MOVLW  37
60BE:  MOVWF  x42
60C0:  MOVLW  02
60C2:  MOVWF  x43
60C4:  MOVLW  01
60C6:  MOVWF  x44
60C8:  MOVLB  0
60CA:  CALL   156C
....................                tiempo_esterilizacion=1; 
60CE:  MOVLW  01
60D0:  MOVLB  5
60D2:  MOVWF  x9D
....................                Controla(); 
60D4:  MOVLB  0
60D6:  CALL   2CC8
....................                flag_tiempocalentamiento=0; 
60DA:  MOVLB  5
60DC:  BCF    x93.2
....................             } 
....................             else 
60DE:  BRA    6150
60E0:  MOVLB  0
....................             { 
....................                flag_tiempocalentamiento=0; 
60E2:  MOVLB  5
60E4:  BCF    x93.2
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
60E6:  MOVLB  6
60E8:  CLRF   x52
60EA:  MOVLW  37
60EC:  MOVWF  x53
60EE:  MOVLW  7F
60F0:  MOVWF  x54
60F2:  MOVLW  3F
60F4:  MOVWF  x55
60F6:  MOVLW  01
60F8:  MOVWF  x56
60FA:  CLRF   x57
60FC:  MOVLB  0
60FE:  CALL   14AA
....................                strcpy(Menus.Letra,"Status:Enfriando"); 
6102:  MOVLW  06
6104:  MOVWF  FEA
6106:  MOVLW  1F
6108:  MOVWF  FE9
610A:  MOVFF  FF2,63F
610E:  BCF    FF2.7
6110:  MOVLW  00
6112:  CALL   0A2C
6116:  TBLRD*-
6118:  TBLRD*+
611A:  MOVF   FF5,W
611C:  MOVWF  FEE
611E:  IORLW  00
6120:  BNZ   6118
6122:  MOVLB  6
6124:  BTFSC  x3F.7
6126:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
6128:  MOVLW  06
612A:  MOVWF  x40
612C:  MOVLW  1F
612E:  MOVWF  x3F
6130:  CLRF   x41
6132:  MOVLW  37
6134:  MOVWF  x42
6136:  MOVLW  02
6138:  MOVWF  x43
613A:  MOVLW  01
613C:  MOVWF  x44
613E:  MOVLB  0
6140:  CALL   156C
....................                tiempo_esterilizacion=0; 
6144:  MOVLB  5
6146:  CLRF   x9D
....................                Controla(); 
6148:  MOVLB  0
614A:  CALL   2CC8
614E:  MOVLB  5
....................             } 
....................          } 
....................          else 
6150:  BRA    628C
....................          { 
....................             if(Temperatura>=Setpoint-1.0) 
6152:  MOVFF  5AC,646
6156:  MOVFF  5AB,645
615A:  MOVLB  0
615C:  CALL   0E4E
6160:  BSF    FD8.1
6162:  MOVFF  03,647
6166:  MOVFF  02,646
616A:  MOVFF  01,645
616E:  MOVFF  00,644
6172:  MOVLB  6
6174:  CLRF   x4B
6176:  CLRF   x4A
6178:  CLRF   x49
617A:  MOVLW  7F
617C:  MOVWF  x48
617E:  MOVLB  0
6180:  CALL   1A00
6184:  MOVFF  03,642
6188:  MOVFF  02,641
618C:  MOVFF  01,640
6190:  MOVFF  00,63F
6194:  MOVFF  60A,646
6198:  MOVFF  609,645
619C:  MOVFF  608,644
61A0:  MOVFF  607,643
61A4:  CALL   0E84
61A8:  BC    61AC
61AA:  BNZ   621E
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
61AC:  MOVLB  6
61AE:  CLRF   x52
61B0:  MOVLW  37
61B2:  MOVWF  x53
61B4:  MOVLW  7F
61B6:  MOVWF  x54
61B8:  MOVLW  3F
61BA:  MOVWF  x55
61BC:  MOVLW  01
61BE:  MOVWF  x56
61C0:  CLRF   x57
61C2:  MOVLB  0
61C4:  CALL   14AA
....................                strcpy(Menus.Letra,"Status:Controlando"); 
61C8:  MOVLW  06
61CA:  MOVWF  FEA
61CC:  MOVLW  1F
61CE:  MOVWF  FE9
61D0:  MOVFF  FF2,63F
61D4:  BCF    FF2.7
61D6:  MOVLW  00
61D8:  CALL   09FE
61DC:  TBLRD*-
61DE:  TBLRD*+
61E0:  MOVF   FF5,W
61E2:  MOVWF  FEE
61E4:  IORLW  00
61E6:  BNZ   61DE
61E8:  MOVLB  6
61EA:  BTFSC  x3F.7
61EC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
61EE:  MOVLW  06
61F0:  MOVWF  x40
61F2:  MOVLW  1F
61F4:  MOVWF  x3F
61F6:  CLRF   x41
61F8:  MOVLW  37
61FA:  MOVWF  x42
61FC:  MOVLW  02
61FE:  MOVWF  x43
6200:  MOVLW  01
6202:  MOVWF  x44
6204:  MOVLB  0
6206:  CALL   156C
....................                tiempo_esterilizacion=1; 
620A:  MOVLW  01
620C:  MOVLB  5
620E:  MOVWF  x9D
....................                Controla(); 
6210:  MOVLB  0
6212:  CALL   2CC8
....................                flag_tiempocalentamiento=0; 
6216:  MOVLB  5
6218:  BCF    x93.2
....................             } 
....................             else 
621A:  BRA    628C
621C:  MOVLB  0
....................             { 
....................                flag_tiempocalentamiento=1; 
621E:  MOVLB  5
6220:  BSF    x93.2
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6222:  MOVLB  6
6224:  CLRF   x52
6226:  MOVLW  37
6228:  MOVWF  x53
622A:  MOVLW  7F
622C:  MOVWF  x54
622E:  MOVLW  3F
6230:  MOVWF  x55
6232:  MOVLW  01
6234:  MOVWF  x56
6236:  CLRF   x57
6238:  MOVLB  0
623A:  CALL   14AA
....................                strcpy(Menus.Letra,"Status:Calentando"); 
623E:  MOVLW  06
6240:  MOVWF  FEA
6242:  MOVLW  1F
6244:  MOVWF  FE9
6246:  MOVFF  FF2,63F
624A:  BCF    FF2.7
624C:  MOVLW  00
624E:  CALL   0A58
6252:  TBLRD*-
6254:  TBLRD*+
6256:  MOVF   FF5,W
6258:  MOVWF  FEE
625A:  IORLW  00
625C:  BNZ   6254
625E:  MOVLB  6
6260:  BTFSC  x3F.7
6262:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
6264:  MOVLW  06
6266:  MOVWF  x40
6268:  MOVLW  1F
626A:  MOVWF  x3F
626C:  CLRF   x41
626E:  MOVLW  37
6270:  MOVWF  x42
6272:  MOVLW  02
6274:  MOVWF  x43
6276:  MOVLW  01
6278:  MOVWF  x44
627A:  MOVLB  0
627C:  CALL   156C
....................                tiempo_esterilizacion=0; 
6280:  MOVLB  5
6282:  CLRF   x9D
....................                Controla(); 
6284:  MOVLB  0
6286:  CALL   2CC8
628A:  MOVLB  5
....................             } 
....................          } 
....................       } 
....................        
....................       if(Pausa==1 && !TERM && !DOOR) 
628C:  DECFSZ x99,W
628E:  BRA    62FE
6290:  BSF    F92.3
6292:  BTFSC  F80.3
6294:  BRA    62FE
6296:  BSF    F92.4
6298:  BTFSC  F80.4
629A:  BRA    62FE
....................       { 
....................          Velocidades(0); 
629C:  MOVLB  6
629E:  CLRF   x3F
62A0:  MOVLB  0
62A2:  CALL   0E26
....................          flag_tiempocalentamiento=0; 
62A6:  MOVLB  5
62A8:  BCF    x93.2
....................          strcpy(Menus.Letra,"Status:Pausado"); 
62AA:  MOVLW  06
62AC:  MOVWF  FEA
62AE:  MOVLW  1F
62B0:  MOVWF  FE9
62B2:  MOVFF  FF2,63F
62B6:  BCF    FF2.7
62B8:  MOVLW  00
62BA:  MOVLB  0
62BC:  CALL   0A84
62C0:  TBLRD*-
62C2:  TBLRD*+
62C4:  MOVF   FF5,W
62C6:  MOVWF  FEE
62C8:  IORLW  00
62CA:  BNZ   62C2
62CC:  MOVLB  6
62CE:  BTFSC  x3F.7
62D0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
62D2:  MOVLW  06
62D4:  MOVWF  x40
62D6:  MOVLW  1F
62D8:  MOVWF  x3F
62DA:  CLRF   x41
62DC:  MOVLW  37
62DE:  MOVWF  x42
62E0:  MOVLW  02
62E2:  MOVWF  x43
62E4:  MOVLW  01
62E6:  MOVWF  x44
62E8:  MOVLB  0
62EA:  CALL   156C
....................          tiempo_esterilizacion=0; 
62EE:  MOVLB  5
62F0:  CLRF   x9D
....................          SSR_off; 
62F2:  BCF    F8B.2
62F4:  BCF    F94.2
....................          //Peltierp_off; 
....................          //Peltiern_off; 
....................          Tpulso=0.0; 
62F6:  CLRF   xE2
62F8:  CLRF   xE1
62FA:  CLRF   xE0
62FC:  CLRF   xDF
....................       } 
....................        
....................       if(DOOR) 
62FE:  BSF    F92.4
6300:  BTFSS  F80.4
6302:  BRA    643C
....................       { 
....................          Velocidades(0); 
6304:  MOVLB  6
6306:  CLRF   x3F
6308:  MOVLB  0
630A:  CALL   0E26
....................          flag_tiempocalentamiento=0; 
630E:  MOVLB  5
6310:  BCF    x93.2
....................          if(flag_clear2==0) 
6312:  BTFSC  x87.7
6314:  BRA    63F4
....................          { 
....................             Ganancia=read_eeprom(90); 
6316:  MOVFF  FF2,63F
631A:  BCF    FF2.7
631C:  MOVLW  5A
631E:  MOVWF  FA9
6320:  BCF    FA6.6
6322:  BCF    FA6.7
6324:  BSF    FA6.0
6326:  MOVF   FA8,W
6328:  MOVLB  6
632A:  BTFSC  x3F.7
632C:  BSF    FF2.7
632E:  CLRF   x46
6330:  MOVWF  x45
6332:  MOVLB  0
6334:  CALL   0E4E
6338:  MOVFF  03,5F6
633C:  MOVFF  02,5F5
6340:  MOVFF  01,5F4
6344:  MOVFF  00,5F3
....................             Ganancia=Setpoint*(Ganancia/Coeficiente); 
6348:  MOVFF  5F6,643
634C:  MOVFF  5F5,642
6350:  MOVFF  5F4,641
6354:  MOVFF  5F3,640
6358:  MOVFF  602,647
635C:  MOVFF  601,646
6360:  MOVFF  600,645
6364:  MOVFF  5FF,644
6368:  CALL   18A2
636C:  MOVFF  00,63F
6370:  MOVFF  01,640
6374:  MOVFF  02,641
6378:  MOVFF  03,642
637C:  MOVFF  5AC,646
6380:  MOVFF  5AB,645
6384:  CALL   0E4E
6388:  MOVFF  03,65F
638C:  MOVFF  02,65E
6390:  MOVFF  01,65D
6394:  MOVFF  00,65C
6398:  MOVFF  642,663
639C:  MOVFF  641,662
63A0:  MOVFF  640,661
63A4:  MOVFF  63F,660
63A8:  CALL   1C9A
63AC:  MOVFF  03,5F6
63B0:  MOVFF  02,5F5
63B4:  MOVFF  01,5F4
63B8:  MOVFF  00,5F3
....................             Pausa_ant=Pausa; 
63BC:  MOVFF  599,59A
....................             Pausa=0; 
63C0:  MOVLB  5
63C2:  CLRF   x99
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
63C4:  MOVLB  6
63C6:  CLRF   x52
63C8:  MOVLW  37
63CA:  MOVWF  x53
63CC:  MOVLW  7F
63CE:  MOVWF  x54
63D0:  MOVLW  3F
63D2:  MOVWF  x55
63D4:  MOVLW  01
63D6:  MOVWF  x56
63D8:  CLRF   x57
63DA:  MOVLB  0
63DC:  CALL   14AA
....................             tiempo_esterilizacion=0; 
63E0:  MOVLB  5
63E2:  CLRF   x9D
....................             SSR_off; 
63E4:  BCF    F8B.2
63E6:  BCF    F94.2
....................             //Peltierp_off; 
....................             //Peltiern_off; 
....................             Tpulso=0.0; 
63E8:  CLRF   xE2
63EA:  CLRF   xE1
63EC:  CLRF   xE0
63EE:  CLRF   xDF
....................             flag_clear2=1; 
63F0:  BSF    x87.7
....................             flag_ganancia=0; 
63F2:  CLRF   x8E
....................          } 
....................          strcpy(Menus.Letra,"Status:Puerta Abierta"); 
63F4:  MOVLW  06
63F6:  MOVWF  FEA
63F8:  MOVLW  1F
63FA:  MOVWF  FE9
63FC:  MOVFF  FF2,63F
6400:  BCF    FF2.7
6402:  MOVLW  00
6404:  MOVLB  0
6406:  CALL   0AAE
640A:  TBLRD*-
640C:  TBLRD*+
640E:  MOVF   FF5,W
6410:  MOVWF  FEE
6412:  IORLW  00
6414:  BNZ   640C
6416:  MOVLB  6
6418:  BTFSC  x3F.7
641A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
641C:  MOVLW  06
641E:  MOVWF  x40
6420:  MOVLW  1F
6422:  MOVWF  x3F
6424:  CLRF   x41
6426:  MOVLW  37
6428:  MOVWF  x42
642A:  MOVLW  02
642C:  MOVWF  x43
642E:  MOVLW  01
6430:  MOVWF  x44
6432:  MOVLB  0
6434:  CALL   156C
....................       } 
....................       else 
6438:  BRA    6466
643A:  MOVLB  5
....................       { 
....................          if(flag_clear2==1) 
643C:  BTFSS  x87.7
643E:  BRA    6464
....................          { 
....................             Pausa=Pausa_ant; 
6440:  MOVFF  59A,599
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
6444:  MOVLB  6
6446:  CLRF   x52
6448:  MOVLW  37
644A:  MOVWF  x53
644C:  MOVLW  7F
644E:  MOVWF  x54
6450:  MOVLW  3F
6452:  MOVWF  x55
6454:  MOVLW  01
6456:  MOVWF  x56
6458:  CLRF   x57
645A:  MOVLB  0
645C:  CALL   14AA
....................             flag_clear2=0; 
6460:  MOVLB  5
6462:  BCF    x87.7
6464:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(TERM) 
6466:  BSF    F92.3
6468:  BTFSS  F80.3
646A:  BRA    652E
....................       { 
....................          Velocidades(0); 
646C:  MOVLB  6
646E:  CLRF   x3F
6470:  MOVLB  0
6472:  CALL   0E26
....................          flag_tiempocalentamiento=0; 
6476:  MOVLB  5
6478:  BCF    x93.2
....................          if(flag_clear3==0) 
647A:  BTFSC  x93.0
647C:  BRA    64B4
....................          { 
....................             Pausa_ant=Pausa; 
647E:  MOVFF  599,59A
....................             Pausa=0; 
6482:  CLRF   x99
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
6484:  MOVLB  6
6486:  CLRF   x52
6488:  MOVLW  37
648A:  MOVWF  x53
648C:  MOVLW  7F
648E:  MOVWF  x54
6490:  MOVLW  3F
6492:  MOVWF  x55
6494:  MOVLW  01
6496:  MOVWF  x56
6498:  CLRF   x57
649A:  MOVLB  0
649C:  CALL   14AA
....................             tiempo_esterilizacion=0; 
64A0:  MOVLB  5
64A2:  CLRF   x9D
....................             SSR_off; 
64A4:  BCF    F8B.2
64A6:  BCF    F94.2
....................             //Peltierp_off; 
....................             //Peltiern_off; 
....................             Tpulso=0.0; 
64A8:  CLRF   xE2
64AA:  CLRF   xE1
64AC:  CLRF   xE0
64AE:  CLRF   xDF
....................             flag_clear3=1; 
64B0:  BSF    x93.0
....................             flag_ganancia=0; 
64B2:  CLRF   x8E
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 01"); 
64B4:  MOVLW  06
64B6:  MOVWF  FEA
64B8:  MOVLW  1F
64BA:  MOVWF  FE9
64BC:  MOVFF  FF2,63F
64C0:  BCF    FF2.7
64C2:  MOVLW  00
64C4:  MOVLB  0
64C6:  CALL   0ADE
64CA:  TBLRD*-
64CC:  TBLRD*+
64CE:  MOVF   FF5,W
64D0:  MOVWF  FEE
64D2:  IORLW  00
64D4:  BNZ   64CC
64D6:  MOVLB  6
64D8:  BTFSC  x3F.7
64DA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
64DC:  MOVLW  06
64DE:  MOVWF  x40
64E0:  MOVLW  1F
64E2:  MOVWF  x3F
64E4:  CLRF   x41
64E6:  MOVLW  37
64E8:  MOVWF  x42
64EA:  MOVLW  02
64EC:  MOVWF  x43
64EE:  MOVLW  01
64F0:  MOVWF  x44
64F2:  MOVLB  0
64F4:  CALL   156C
....................           
....................          Buzzer_on; 
64F8:  BSF    F8A.7
64FA:  BCF    F93.7
....................          delay_ms(1000); 
64FC:  MOVLW  04
64FE:  MOVLB  6
6500:  MOVWF  x3F
6502:  MOVLW  FA
6504:  MOVWF  x45
6506:  MOVLB  0
6508:  CALL   0DFC
650C:  MOVLB  6
650E:  DECFSZ x3F,F
6510:  BRA    6502
....................          Buzzer_off; 
6512:  BCF    F8A.7
6514:  BCF    F93.7
....................          delay_ms(1000); 
6516:  MOVLW  04
6518:  MOVWF  x3F
651A:  MOVLW  FA
651C:  MOVWF  x45
651E:  MOVLB  0
6520:  CALL   0DFC
6524:  MOVLB  6
6526:  DECFSZ x3F,F
6528:  BRA    651A
....................       } 
....................       else 
652A:  BRA    6558
652C:  MOVLB  0
....................       { 
....................          if(flag_clear3==1) 
652E:  MOVLB  5
6530:  BTFSS  x93.0
6532:  BRA    6558
....................          { 
....................             Pausa=Pausa_ant; 
6534:  MOVFF  59A,599
....................             //glcd_fillScreen(OFF); 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
6538:  MOVLB  6
653A:  CLRF   x52
653C:  MOVLW  37
653E:  MOVWF  x53
6540:  MOVLW  7F
6542:  MOVWF  x54
6544:  MOVLW  3F
6546:  MOVWF  x55
6548:  MOVLW  01
654A:  MOVWF  x56
654C:  CLRF   x57
654E:  MOVLB  0
6550:  CALL   14AA
....................             flag_clear3=0; 
6554:  MOVLB  5
6556:  BCF    x93.0
....................          } 
....................       }   
....................        
....................       if(UP)//Si oprime hacia arriba 
6558:  MOVLB  5
655A:  BTFSS  x86.0
655C:  BRA    6562
....................       { 
....................          Velocidad++; 
655E:  INCF   x90,F
....................          UP=0; 
6560:  BCF    x86.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
6562:  BTFSS  x86.1
6564:  BRA    656A
....................       {   
....................          Velocidad--; 
6566:  DECF   x90,F
....................          DOWN=0; 
6568:  BCF    x86.1
....................       } 
....................        
....................       if(Velocidad>3) 
656A:  MOVF   x90,W
656C:  SUBLW  03
656E:  BC    6574
....................          Velocidad=1; 
6570:  MOVLW  01
6572:  MOVWF  x90
....................        
....................       if(Velocidad<1) 
6574:  MOVF   x90,F
6576:  BNZ   657C
....................          Velocidad=3;       
6578:  MOVLW  03
657A:  MOVWF  x90
....................        
....................       if(RIGHT)//Si oprime SET 
657C:  BTFSS  x86.2
657E:  BRA    65CE
....................       {   
....................          if(Pausa!=2) 
6580:  MOVF   x99,W
6582:  SUBLW  02
6584:  BZ    65CC
....................          { 
....................             if(Pausa==0) 
6586:  MOVF   x99,F
6588:  BNZ   659E
....................             { 
....................                delay_ms(200);Pausa=1; 
658A:  MOVLW  C8
658C:  MOVLB  6
658E:  MOVWF  x45
6590:  MOVLB  0
6592:  CALL   0DFC
6596:  MOVLW  01
6598:  MOVLB  5
659A:  MOVWF  x99
....................             } 
....................             else 
659C:  BRA    65AE
....................             { 
....................                delay_ms(200);Pausa=0; 
659E:  MOVLW  C8
65A0:  MOVLB  6
65A2:  MOVWF  x45
65A4:  MOVLB  0
65A6:  CALL   0DFC
65AA:  MOVLB  5
65AC:  CLRF   x99
....................             } 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
65AE:  MOVLB  6
65B0:  CLRF   x52
65B2:  MOVLW  37
65B4:  MOVWF  x53
65B6:  MOVLW  7F
65B8:  MOVWF  x54
65BA:  MOVLW  3F
65BC:  MOVWF  x55
65BE:  MOVLW  01
65C0:  MOVWF  x56
65C2:  CLRF   x57
65C4:  MOVLB  0
65C6:  CALL   14AA
65CA:  MOVLB  5
....................          } 
....................          RIGHT=0; 
65CC:  BCF    x86.2
....................       } 
....................        
....................          
....................       if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
65CE:  BTFSS  x87.5
65D0:  BRA    6B7C
....................       {                  
....................           
....................          Lectura=0; 
65D2:  BCF    x87.5
....................          Potencia=(100.0/Tciclo)*Tpulso; 
65D4:  MOVLB  6
65D6:  CLRF   x43
65D8:  CLRF   x42
65DA:  MOVLW  48
65DC:  MOVWF  x41
65DE:  MOVLW  85
65E0:  MOVWF  x40
65E2:  MOVFF  5DE,647
65E6:  MOVFF  5DD,646
65EA:  MOVFF  5DC,645
65EE:  MOVFF  5DB,644
65F2:  MOVLB  0
65F4:  CALL   18A2
65F8:  MOVFF  00,63F
65FC:  MOVFF  01,640
6600:  MOVFF  02,641
6604:  MOVFF  03,642
6608:  MOVFF  03,65F
660C:  MOVFF  02,65E
6610:  MOVFF  01,65D
6614:  MOVFF  00,65C
6618:  MOVFF  5E2,663
661C:  MOVFF  5E1,662
6620:  MOVFF  5E0,661
6624:  MOVFF  5DF,660
6628:  CALL   1C9A
662C:  MOVFF  03,5B6
6630:  MOVFF  02,5B5
6634:  MOVFF  01,5B4
6638:  MOVFF  00,5B3
....................           
....................  //----------------Muestra Temperatura-------------------------- 
....................          if(Pt>=247) 
663C:  MOVLB  6
663E:  CLRF   x42
6640:  CLRF   x41
6642:  MOVLW  77
6644:  MOVWF  x40
6646:  MOVLW  86
6648:  MOVWF  x3F
664A:  MOVFF  5DA,646
664E:  MOVFF  5D9,645
6652:  MOVFF  5D8,644
6656:  MOVFF  5D7,643
665A:  MOVLB  0
665C:  CALL   0E84
6660:  BC    6664
6662:  BNZ   66CC
....................          { 
....................             glcd_rect(15, 29, 69, 45, YES, OFF); 
6664:  MOVLW  0F
6666:  MOVLB  6
6668:  MOVWF  x52
666A:  MOVLW  1D
666C:  MOVWF  x53
666E:  MOVLW  45
6670:  MOVWF  x54
6672:  MOVLW  2D
6674:  MOVWF  x55
6676:  MOVLW  01
6678:  MOVWF  x56
667A:  CLRF   x57
667C:  MOVLB  0
667E:  CALL   14AA
....................             strcpy(Menus.Letra,"-----");displayMenu(Menus.Letra,15,29,2,2); 
6682:  MOVLW  06
6684:  MOVWF  FEA
6686:  MOVLW  1F
6688:  MOVWF  FE9
668A:  MOVFF  FF2,63F
668E:  BCF    FF2.7
6690:  MOVLW  00
6692:  CALL   0B0A
6696:  TBLRD*-
6698:  TBLRD*+
669A:  MOVF   FF5,W
669C:  MOVWF  FEE
669E:  IORLW  00
66A0:  BNZ   6698
66A2:  MOVLB  6
66A4:  BTFSC  x3F.7
66A6:  BSF    FF2.7
66A8:  MOVLW  06
66AA:  MOVWF  x40
66AC:  MOVLW  1F
66AE:  MOVWF  x3F
66B0:  MOVLW  0F
66B2:  MOVWF  x41
66B4:  MOVLW  1D
66B6:  MOVWF  x42
66B8:  MOVLW  02
66BA:  MOVWF  x43
66BC:  MOVWF  x44
66BE:  MOVLB  0
66C0:  CALL   156C
....................             Desconectado=1; 
66C4:  MOVLB  5
66C6:  BSF    x87.0
....................          } 
....................          else 
66C8:  BRA    673A
66CA:  MOVLB  0
....................          { 
....................             if(Desconectado==1) 
66CC:  MOVLB  5
66CE:  BTFSS  x87.0
66D0:  BRA    6716
....................             { 
....................                Desconectado=0; 
66D2:  BCF    x87.0
....................                delay_ms(2000); 
66D4:  MOVLW  08
66D6:  MOVLB  6
66D8:  MOVWF  x3F
66DA:  MOVLW  FA
66DC:  MOVWF  x45
66DE:  MOVLB  0
66E0:  CALL   0DFC
66E4:  MOVLB  6
66E6:  DECFSZ x3F,F
66E8:  BRA    66DA
....................                for(i=0;i<80;i++) 
66EA:  MOVLB  5
66EC:  CLRF   x98
66EE:  MOVF   x98,W
66F0:  SUBLW  4F
66F2:  BNC   6716
....................                { 
....................                   Temperatura=Leer_Sensor(80); 
66F4:  MOVLW  50
66F6:  MOVLB  6
66F8:  MOVWF  x3F
66FA:  MOVLB  0
66FC:  CALL   1D90
6700:  MOVFF  03,60A
6704:  MOVFF  02,609
6708:  MOVFF  01,608
670C:  MOVFF  00,607
....................                } 
6710:  MOVLB  5
6712:  INCF   x98,F
6714:  BRA    66EE
....................             } 
....................             displayT(Temperatura,15,29,2); 
6716:  MOVFF  60A,642
671A:  MOVFF  609,641
671E:  MOVFF  608,640
6722:  MOVFF  607,63F
6726:  MOVLW  0F
6728:  MOVLB  6
672A:  MOVWF  x43
672C:  MOVLW  1D
672E:  MOVWF  x44
6730:  MOVLW  02
6732:  MOVWF  x45
6734:  MOVLB  0
6736:  CALL   3818
....................          } 
....................  
....................          //displayT(Temperatura,15,29,2); 
....................          glcd_circle(74,30,2,NO,ON); 
673A:  MOVLW  4A
673C:  MOVLB  6
673E:  MOVWF  x52
6740:  MOVLW  1E
6742:  MOVWF  x53
6744:  MOVLW  02
6746:  MOVWF  x54
6748:  CLRF   x55
674A:  MOVLW  01
674C:  MOVWF  x56
674E:  MOVLB  0
6750:  CALL   2214
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,75,30,2,2); 
6754:  MOVLW  06
6756:  MOVWF  FEA
6758:  MOVLW  1F
675A:  MOVWF  FE9
675C:  MOVFF  FF2,63F
6760:  BCF    FF2.7
6762:  MOVLW  00
6764:  CALL   06BE
6768:  TBLRD*-
676A:  TBLRD*+
676C:  MOVF   FF5,W
676E:  MOVWF  FEE
6770:  IORLW  00
6772:  BNZ   676A
6774:  MOVLB  6
6776:  BTFSC  x3F.7
6778:  BSF    FF2.7
677A:  MOVLW  06
677C:  MOVWF  x40
677E:  MOVLW  1F
6780:  MOVWF  x3F
6782:  MOVLW  4B
6784:  MOVWF  x41
6786:  MOVLW  1E
6788:  MOVWF  x42
678A:  MOVLW  02
678C:  MOVWF  x43
678E:  MOVWF  x44
6790:  MOVLB  0
6792:  CALL   156C
....................           
....................          displayTemperatura(Setpoint,30,45,0,1); 
6796:  MOVFF  5AC,642
679A:  MOVFF  5AB,641
679E:  MOVLW  1E
67A0:  MOVLB  6
67A2:  MOVWF  x43
67A4:  MOVLW  2D
67A6:  MOVWF  x44
67A8:  CLRF   x45
67AA:  MOVLW  01
67AC:  MOVWF  x46
67AE:  MOVLB  0
67B0:  CALL   24FC
....................          glcd_circle(50,47,1,NO,ON); 
67B4:  MOVLW  32
67B6:  MOVLB  6
67B8:  MOVWF  x52
67BA:  MOVLW  2F
67BC:  MOVWF  x53
67BE:  MOVLW  01
67C0:  MOVWF  x54
67C2:  CLRF   x55
67C4:  MOVWF  x56
67C6:  MOVLB  0
67C8:  CALL   2214
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,53,45,2,1); 
67CC:  MOVLW  06
67CE:  MOVWF  FEA
67D0:  MOVLW  1F
67D2:  MOVWF  FE9
67D4:  MOVFF  FF2,63F
67D8:  BCF    FF2.7
67DA:  MOVLW  00
67DC:  CALL   06BE
67E0:  TBLRD*-
67E2:  TBLRD*+
67E4:  MOVF   FF5,W
67E6:  MOVWF  FEE
67E8:  IORLW  00
67EA:  BNZ   67E2
67EC:  MOVLB  6
67EE:  BTFSC  x3F.7
67F0:  BSF    FF2.7
67F2:  MOVLW  06
67F4:  MOVWF  x40
67F6:  MOVLW  1F
67F8:  MOVWF  x3F
67FA:  MOVLW  35
67FC:  MOVWF  x41
67FE:  MOVLW  2D
6800:  MOVWF  x42
6802:  MOVLW  02
6804:  MOVWF  x43
6806:  MOVLW  01
6808:  MOVWF  x44
680A:  MOVLB  0
680C:  CALL   156C
....................          strcpy(Menus.Letra,"Temp:");displayMenu(Menus.Letra,0,45,2,1);  
6810:  MOVLW  06
6812:  MOVWF  FEA
6814:  MOVLW  1F
6816:  MOVWF  FE9
6818:  MOVFF  FF2,63F
681C:  BCF    FF2.7
681E:  MOVLW  00
6820:  CALL   0B2A
6824:  TBLRD*-
6826:  TBLRD*+
6828:  MOVF   FF5,W
682A:  MOVWF  FEE
682C:  IORLW  00
682E:  BNZ   6826
6830:  MOVLB  6
6832:  BTFSC  x3F.7
6834:  BSF    FF2.7
6836:  MOVLW  06
6838:  MOVWF  x40
683A:  MOVLW  1F
683C:  MOVWF  x3F
683E:  CLRF   x41
6840:  MOVLW  2D
6842:  MOVWF  x42
6844:  MOVLW  02
6846:  MOVWF  x43
6848:  MOVLW  01
684A:  MOVWF  x44
684C:  MOVLB  0
684E:  CALL   156C
....................           
....................          displayTiempo(Potencia,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
6852:  MOVFF  5B6,642
6856:  MOVFF  5B5,641
685A:  MOVFF  5B4,640
685E:  MOVFF  5B3,63F
6862:  CALL   2C8C
6866:  MOVFF  01,63F
686A:  MOVFF  01,640
686E:  MOVLW  61
6870:  MOVLB  6
6872:  MOVWF  x41
6874:  MOVLW  2A
6876:  MOVWF  x42
6878:  MOVLW  03
687A:  MOVWF  x43
687C:  MOVLW  01
687E:  MOVWF  x44
6880:  MOVLB  0
6882:  CALL   29A6
6886:  MOVLW  06
6888:  MOVWF  FEA
688A:  MOVLW  1F
688C:  MOVWF  FE9
688E:  MOVFF  FF2,63F
6892:  BCF    FF2.7
6894:  MOVLW  00
6896:  CALL   0B4A
689A:  TBLRD*-
689C:  TBLRD*+
689E:  MOVF   FF5,W
68A0:  MOVWF  FEE
68A2:  IORLW  00
68A4:  BNZ   689C
68A6:  MOVLB  6
68A8:  BTFSC  x3F.7
68AA:  BSF    FF2.7
68AC:  MOVLW  06
68AE:  MOVWF  x40
68B0:  MOVLW  1F
68B2:  MOVWF  x3F
68B4:  MOVLW  73
68B6:  MOVWF  x41
68B8:  MOVLW  2A
68BA:  MOVWF  x42
68BC:  MOVLW  02
68BE:  MOVWF  x43
68C0:  MOVLW  01
68C2:  MOVWF  x44
68C4:  MOVLB  0
68C6:  CALL   156C
....................          //displayTiempo(Tpulsomin*10,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
....................           
....................          strcpy(Menus.Letra,"Vel:");displayMenu(Menus.Letra,97,13,2,1); 
68CA:  MOVLW  06
68CC:  MOVWF  FEA
68CE:  MOVLW  1F
68D0:  MOVWF  FE9
68D2:  MOVFF  FF2,63F
68D6:  BCF    FF2.7
68D8:  MOVLW  00
68DA:  CALL   0B66
68DE:  TBLRD*-
68E0:  TBLRD*+
68E2:  MOVF   FF5,W
68E4:  MOVWF  FEE
68E6:  IORLW  00
68E8:  BNZ   68E0
68EA:  MOVLB  6
68EC:  BTFSC  x3F.7
68EE:  BSF    FF2.7
68F0:  MOVLW  06
68F2:  MOVWF  x40
68F4:  MOVLW  1F
68F6:  MOVWF  x3F
68F8:  MOVLW  61
68FA:  MOVWF  x41
68FC:  MOVLW  0D
68FE:  MOVWF  x42
6900:  MOVLW  02
6902:  MOVWF  x43
6904:  MOVLW  01
6906:  MOVWF  x44
6908:  MOVLB  0
690A:  CALL   156C
....................          displayTiempo(Velocidad,115,13,0,1); 
690E:  MOVFF  590,640
6912:  MOVLW  73
6914:  MOVLB  6
6916:  MOVWF  x41
6918:  MOVLW  0D
691A:  MOVWF  x42
691C:  CLRF   x43
691E:  MOVLW  01
6920:  MOVWF  x44
6922:  MOVLB  0
6924:  CALL   29A6
....................           
....................          if(flag_display==1) 
6928:  MOVLB  5
692A:  BTFSS  x93.3
692C:  BRA    6954
....................             //displayTiempo(Ganancia,97,13,3,1); 
....................             //displayTemperatura(Prom,97,13,0,1); 
....................             displayT(Prom,60,46,1); 
692E:  MOVFF  5EA,642
6932:  MOVFF  5E9,641
6936:  MOVFF  5E8,640
693A:  MOVFF  5E7,63F
693E:  MOVLW  3C
6940:  MOVLB  6
6942:  MOVWF  x43
6944:  MOVLW  2E
6946:  MOVWF  x44
6948:  MOVLW  01
694A:  MOVWF  x45
694C:  MOVLB  0
694E:  CALL   3818
....................          else 
6952:  BRA    6972
....................             glcd_rect(60, 46, 88, 52, YES, OFF); 
6954:  MOVLW  3C
6956:  MOVLB  6
6958:  MOVWF  x52
695A:  MOVLW  2E
695C:  MOVWF  x53
695E:  MOVLW  58
6960:  MOVWF  x54
6962:  MOVLW  34
6964:  MOVWF  x55
6966:  MOVLW  01
6968:  MOVWF  x56
696A:  CLRF   x57
696C:  MOVLB  0
696E:  CALL   14AA
....................           
....................          // Muestra Valor de esterilizacion Programado. 
....................          displayTiempo(Testerilizacion[3],20,2,0,2);displayTiempo(Testerilizacion[2],33,2,0,2); 
6972:  MOVFF  5C2,640
6976:  MOVLW  14
6978:  MOVLB  6
697A:  MOVWF  x41
697C:  MOVLW  02
697E:  MOVWF  x42
6980:  CLRF   x43
6982:  MOVWF  x44
6984:  MOVLB  0
6986:  CALL   29A6
698A:  MOVFF  5C1,640
698E:  MOVLW  21
6990:  MOVLB  6
6992:  MOVWF  x41
6994:  MOVLW  02
6996:  MOVWF  x42
6998:  CLRF   x43
699A:  MOVWF  x44
699C:  MOVLB  0
699E:  CALL   29A6
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,46,2,2,2);  
69A2:  MOVLW  06
69A4:  MOVWF  FEA
69A6:  MOVLW  1F
69A8:  MOVWF  FE9
69AA:  MOVFF  FF2,63F
69AE:  BCF    FF2.7
69B0:  MOVLW  00
69B2:  CALL   09BC
69B6:  TBLRD*-
69B8:  TBLRD*+
69BA:  MOVF   FF5,W
69BC:  MOVWF  FEE
69BE:  IORLW  00
69C0:  BNZ   69B8
69C2:  MOVLB  6
69C4:  BTFSC  x3F.7
69C6:  BSF    FF2.7
69C8:  MOVLW  06
69CA:  MOVWF  x40
69CC:  MOVLW  1F
69CE:  MOVWF  x3F
69D0:  MOVLW  2E
69D2:  MOVWF  x41
69D4:  MOVLW  02
69D6:  MOVWF  x42
69D8:  MOVWF  x43
69DA:  MOVWF  x44
69DC:  MOVLB  0
69DE:  CALL   156C
....................          displayTiempo(Testerilizacion[1],55,2,0,2);displayTiempo(Testerilizacion[0],68,2,0,2); 
69E2:  MOVFF  5C0,640
69E6:  MOVLW  37
69E8:  MOVLB  6
69EA:  MOVWF  x41
69EC:  MOVLW  02
69EE:  MOVWF  x42
69F0:  CLRF   x43
69F2:  MOVWF  x44
69F4:  MOVLB  0
69F6:  CALL   29A6
69FA:  MOVFF  5BF,640
69FE:  MOVLW  44
6A00:  MOVLB  6
6A02:  MOVWF  x41
6A04:  MOVLW  02
6A06:  MOVWF  x42
6A08:  CLRF   x43
6A0A:  MOVWF  x44
6A0C:  MOVLB  0
6A0E:  CALL   29A6
....................           
....................          // Muestra Valor de esterilizacion actual. 
....................          strcpy(Menus.Letra,"Time:");displayMenu(Menus.Letra,0,18,2,1);  
6A12:  MOVLW  06
6A14:  MOVWF  FEA
6A16:  MOVLW  1F
6A18:  MOVWF  FE9
6A1A:  MOVFF  FF2,63F
6A1E:  BCF    FF2.7
6A20:  MOVLW  00
6A22:  CALL   0B86
6A26:  TBLRD*-
6A28:  TBLRD*+
6A2A:  MOVF   FF5,W
6A2C:  MOVWF  FEE
6A2E:  IORLW  00
6A30:  BNZ   6A28
6A32:  MOVLB  6
6A34:  BTFSC  x3F.7
6A36:  BSF    FF2.7
6A38:  MOVLW  06
6A3A:  MOVWF  x40
6A3C:  MOVLW  1F
6A3E:  MOVWF  x3F
6A40:  CLRF   x41
6A42:  MOVLW  12
6A44:  MOVWF  x42
6A46:  MOVLW  02
6A48:  MOVWF  x43
6A4A:  MOVLW  01
6A4C:  MOVWF  x44
6A4E:  MOVLB  0
6A50:  CALL   156C
....................          displayTiempo(Testerilizacionp[3],30,18,0,1);displayTiempo(Testerilizacionp[2],36,18,0,1); 
6A54:  MOVFF  5C6,640
6A58:  MOVLW  1E
6A5A:  MOVLB  6
6A5C:  MOVWF  x41
6A5E:  MOVLW  12
6A60:  MOVWF  x42
6A62:  CLRF   x43
6A64:  MOVLW  01
6A66:  MOVWF  x44
6A68:  MOVLB  0
6A6A:  CALL   29A6
6A6E:  MOVFF  5C5,640
6A72:  MOVLW  24
6A74:  MOVLB  6
6A76:  MOVWF  x41
6A78:  MOVLW  12
6A7A:  MOVWF  x42
6A7C:  CLRF   x43
6A7E:  MOVLW  01
6A80:  MOVWF  x44
6A82:  MOVLB  0
6A84:  CALL   29A6
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,42,18,2,1);  
6A88:  MOVLW  06
6A8A:  MOVWF  FEA
6A8C:  MOVLW  1F
6A8E:  MOVWF  FE9
6A90:  MOVFF  FF2,63F
6A94:  BCF    FF2.7
6A96:  MOVLW  00
6A98:  CALL   09BC
6A9C:  TBLRD*-
6A9E:  TBLRD*+
6AA0:  MOVF   FF5,W
6AA2:  MOVWF  FEE
6AA4:  IORLW  00
6AA6:  BNZ   6A9E
6AA8:  MOVLB  6
6AAA:  BTFSC  x3F.7
6AAC:  BSF    FF2.7
6AAE:  MOVLW  06
6AB0:  MOVWF  x40
6AB2:  MOVLW  1F
6AB4:  MOVWF  x3F
6AB6:  MOVLW  2A
6AB8:  MOVWF  x41
6ABA:  MOVLW  12
6ABC:  MOVWF  x42
6ABE:  MOVLW  02
6AC0:  MOVWF  x43
6AC2:  MOVLW  01
6AC4:  MOVWF  x44
6AC6:  MOVLB  0
6AC8:  CALL   156C
....................          displayTiempo(Testerilizacionp[1],48,18,0,1);displayTiempo(Testerilizacionp[0],54,18,0,1); 
6ACC:  MOVFF  5C4,640
6AD0:  MOVLW  30
6AD2:  MOVLB  6
6AD4:  MOVWF  x41
6AD6:  MOVLW  12
6AD8:  MOVWF  x42
6ADA:  CLRF   x43
6ADC:  MOVLW  01
6ADE:  MOVWF  x44
6AE0:  MOVLB  0
6AE2:  CALL   29A6
6AE6:  MOVFF  5C3,640
6AEA:  MOVLW  36
6AEC:  MOVLB  6
6AEE:  MOVWF  x41
6AF0:  MOVLW  12
6AF2:  MOVWF  x42
6AF4:  CLRF   x43
6AF6:  MOVLW  01
6AF8:  MOVWF  x44
6AFA:  MOVLB  0
6AFC:  CALL   29A6
....................          strcpy(Menus.Letra,"(H:M)");displayMenu(Menus.Letra,60,18,2,1);  
6B00:  MOVLW  06
6B02:  MOVWF  FEA
6B04:  MOVLW  1F
6B06:  MOVWF  FE9
6B08:  MOVFF  FF2,63F
6B0C:  BCF    FF2.7
6B0E:  MOVLW  00
6B10:  CALL   0BA6
6B14:  TBLRD*-
6B16:  TBLRD*+
6B18:  MOVF   FF5,W
6B1A:  MOVWF  FEE
6B1C:  IORLW  00
6B1E:  BNZ   6B16
6B20:  MOVLB  6
6B22:  BTFSC  x3F.7
6B24:  BSF    FF2.7
6B26:  MOVLW  06
6B28:  MOVWF  x40
6B2A:  MOVLW  1F
6B2C:  MOVWF  x3F
6B2E:  MOVLW  3C
6B30:  MOVWF  x41
6B32:  MOVLW  12
6B34:  MOVWF  x42
6B36:  MOVLW  02
6B38:  MOVWF  x43
6B3A:  MOVLW  01
6B3C:  MOVWF  x44
6B3E:  MOVLB  0
6B40:  CALL   156C
....................           
....................          glcd_rect(0, 0, 89, 27, NO, ON); 
6B44:  MOVLB  6
6B46:  CLRF   x52
6B48:  CLRF   x53
6B4A:  MOVLW  59
6B4C:  MOVWF  x54
6B4E:  MOVLW  1B
6B50:  MOVWF  x55
6B52:  CLRF   x56
6B54:  MOVLW  01
6B56:  MOVWF  x57
6B58:  MOVLB  0
6B5A:  CALL   14AA
....................          glcd_rect(0, 27, 89, 54, NO, ON); 
6B5E:  MOVLB  6
6B60:  CLRF   x52
6B62:  MOVLW  1B
6B64:  MOVWF  x53
6B66:  MOVLW  59
6B68:  MOVWF  x54
6B6A:  MOVLW  36
6B6C:  MOVWF  x55
6B6E:  CLRF   x56
6B70:  MOVLW  01
6B72:  MOVWF  x57
6B74:  MOVLB  0
6B76:  CALL   14AA
6B7A:  MOVLB  5
....................       }  
....................        
....................       // Si cumplio el tiempo de esterilización, Muestre ciclo finalizado y detenga control de temperatura. 
....................       if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1) 
6B7C:  MOVF   xC3,W
6B7E:  XORLW  80
6B80:  MOVWF  00
6B82:  MOVF   xBF,W
6B84:  XORLW  80
6B86:  SUBWF  00,W
6B88:  BZ    6B8E
6B8A:  BTFSC  FD8.0
6B8C:  BRA    6C6A
6B8E:  MOVF   xC4,W
6B90:  XORLW  80
6B92:  MOVWF  00
6B94:  MOVF   xC0,W
6B96:  XORLW  80
6B98:  SUBWF  00,W
6B9A:  BZ    6B9E
6B9C:  BC    6C6A
6B9E:  MOVF   xC5,W
6BA0:  XORLW  80
6BA2:  MOVWF  00
6BA4:  MOVF   xC1,W
6BA6:  XORLW  80
6BA8:  SUBWF  00,W
6BAA:  BZ    6BAE
6BAC:  BC    6C6A
6BAE:  MOVF   xC6,W
6BB0:  XORLW  80
6BB2:  MOVWF  00
6BB4:  MOVF   xC2,W
6BB6:  XORLW  80
6BB8:  SUBWF  00,W
6BBA:  BZ    6BBE
6BBC:  BC    6C6A
6BBE:  DECFSZ x9D,W
6BC0:  BRA    6C6A
....................       { 
....................          if(flag_clear==0) 
6BC2:  BTFSC  x87.6
6BC4:  BRA    6C24
....................          { 
....................             glcd_fillScreen(OFF); 
6BC6:  MOVLB  6
6BC8:  CLRF   x40
6BCA:  MOVLB  0
6BCC:  CALL   0F3E
....................             //glcd_rect(0, 55, 127, 63, YES, OFF); 
....................             tiempo_esterilizacion=0; 
6BD0:  MOVLB  5
6BD2:  CLRF   x9D
....................             Pausa=2; 
6BD4:  MOVLW  02
6BD6:  MOVWF  x99
....................             flag_clear=1; 
6BD8:  BSF    x87.6
....................             //Resistencia_off; 
....................             Velocidades(0); 
6BDA:  MOVLB  6
6BDC:  CLRF   x3F
6BDE:  MOVLB  0
6BE0:  CALL   0E26
....................             Tpulso=0.0; 
6BE4:  MOVLB  5
6BE6:  CLRF   xE2
6BE8:  CLRF   xE1
6BEA:  CLRF   xE0
6BEC:  CLRF   xDF
....................             flag_ganancia=0; 
6BEE:  CLRF   x8E
....................             Buzzer_on; 
6BF0:  BSF    F8A.7
6BF2:  BCF    F93.7
....................             delay_ms(1000); 
6BF4:  MOVLW  04
6BF6:  MOVLB  6
6BF8:  MOVWF  x3F
6BFA:  MOVLW  FA
6BFC:  MOVWF  x45
6BFE:  MOVLB  0
6C00:  CALL   0DFC
6C04:  MOVLB  6
6C06:  DECFSZ x3F,F
6C08:  BRA    6BFA
....................             Buzzer_off; 
6C0A:  BCF    F8A.7
6C0C:  BCF    F93.7
....................             delay_ms(1000); 
6C0E:  MOVLW  04
6C10:  MOVWF  x3F
6C12:  MOVLW  FA
6C14:  MOVWF  x45
6C16:  MOVLB  0
6C18:  CALL   0DFC
6C1C:  MOVLB  6
6C1E:  DECFSZ x3F,F
6C20:  BRA    6C12
6C22:  MOVLB  5
....................          } 
....................          strcpy(Menus.Letra,"Status:Finalizado"); 
6C24:  MOVLW  06
6C26:  MOVWF  FEA
6C28:  MOVLW  1F
6C2A:  MOVWF  FE9
6C2C:  MOVFF  FF2,63F
6C30:  BCF    FF2.7
6C32:  MOVLW  00
6C34:  MOVLB  0
6C36:  CALL   0BC6
6C3A:  TBLRD*-
6C3C:  TBLRD*+
6C3E:  MOVF   FF5,W
6C40:  MOVWF  FEE
6C42:  IORLW  00
6C44:  BNZ   6C3C
6C46:  MOVLB  6
6C48:  BTFSC  x3F.7
6C4A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
6C4C:  MOVLW  06
6C4E:  MOVWF  x40
6C50:  MOVLW  1F
6C52:  MOVWF  x3F
6C54:  CLRF   x41
6C56:  MOVLW  37
6C58:  MOVWF  x42
6C5A:  MOVLW  02
6C5C:  MOVWF  x43
6C5E:  MOVLW  01
6C60:  MOVWF  x44
6C62:  MOVLB  0
6C64:  CALL   156C
6C68:  MOVLB  5
....................       }  
....................        
....................       // Si ha pasado un tiempo x y no ha llegado al setpoint 
....................       if(tiempocalentamiento>7200 && tiempo_esterilizacion==0) 
6C6A:  MOVF   xA8,W
6C6C:  SUBLW  1B
6C6E:  BC    6D36
6C70:  XORLW  FF
6C72:  BNZ   6C7A
6C74:  MOVF   xA7,W
6C76:  SUBLW  20
6C78:  BC    6D36
6C7A:  MOVF   x9D,F
6C7C:  BNZ   6D36
....................       { 
....................          if(flag_clear4==0) 
6C7E:  BTFSC  x93.1
6C80:  BRA    6CBE
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
6C82:  MOVLB  6
6C84:  CLRF   x52
6C86:  MOVLW  37
6C88:  MOVWF  x53
6C8A:  MOVLW  7F
6C8C:  MOVWF  x54
6C8E:  MOVLW  3F
6C90:  MOVWF  x55
6C92:  MOVLW  01
6C94:  MOVWF  x56
6C96:  CLRF   x57
6C98:  MOVLB  0
6C9A:  CALL   14AA
....................             tiempo_esterilizacion=0; 
6C9E:  MOVLB  5
6CA0:  CLRF   x9D
....................             Pausa=2; 
6CA2:  MOVLW  02
6CA4:  MOVWF  x99
....................             flag_clear4=1; 
6CA6:  BSF    x93.1
....................             //Resistencia_off; 
....................             Velocidades(0); 
6CA8:  MOVLB  6
6CAA:  CLRF   x3F
6CAC:  MOVLB  0
6CAE:  CALL   0E26
....................             Tpulso=0.0; 
6CB2:  MOVLB  5
6CB4:  CLRF   xE2
6CB6:  CLRF   xE1
6CB8:  CLRF   xE0
6CBA:  CLRF   xDF
....................             flag_ganancia=0; 
6CBC:  CLRF   x8E
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 02"); 
6CBE:  MOVLW  06
6CC0:  MOVWF  FEA
6CC2:  MOVLW  1F
6CC4:  MOVWF  FE9
6CC6:  MOVFF  FF2,63F
6CCA:  BCF    FF2.7
6CCC:  MOVLW  00
6CCE:  MOVLB  0
6CD0:  CALL   0BF2
6CD4:  TBLRD*-
6CD6:  TBLRD*+
6CD8:  MOVF   FF5,W
6CDA:  MOVWF  FEE
6CDC:  IORLW  00
6CDE:  BNZ   6CD6
6CE0:  MOVLB  6
6CE2:  BTFSC  x3F.7
6CE4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
6CE6:  MOVLW  06
6CE8:  MOVWF  x40
6CEA:  MOVLW  1F
6CEC:  MOVWF  x3F
6CEE:  CLRF   x41
6CF0:  MOVLW  37
6CF2:  MOVWF  x42
6CF4:  MOVLW  02
6CF6:  MOVWF  x43
6CF8:  MOVLW  01
6CFA:  MOVWF  x44
6CFC:  MOVLB  0
6CFE:  CALL   156C
....................          Buzzer_on; 
6D02:  BSF    F8A.7
6D04:  BCF    F93.7
....................          delay_ms(1000); 
6D06:  MOVLW  04
6D08:  MOVLB  6
6D0A:  MOVWF  x3F
6D0C:  MOVLW  FA
6D0E:  MOVWF  x45
6D10:  MOVLB  0
6D12:  CALL   0DFC
6D16:  MOVLB  6
6D18:  DECFSZ x3F,F
6D1A:  BRA    6D0C
....................          Buzzer_off; 
6D1C:  BCF    F8A.7
6D1E:  BCF    F93.7
....................          delay_ms(1000); 
6D20:  MOVLW  04
6D22:  MOVWF  x3F
6D24:  MOVLW  FA
6D26:  MOVWF  x45
6D28:  MOVLB  0
6D2A:  CALL   0DFC
6D2E:  MOVLB  6
6D30:  DECFSZ x3F,F
6D32:  BRA    6D24
6D34:  MOVLB  5
....................       } 
....................        
....................       if(tinicio>=60) 
6D36:  MOVF   xA6,F
6D38:  BNZ   6D40
6D3A:  MOVF   xA5,W
6D3C:  SUBLW  3B
6D3E:  BC    6D7C
....................       { 
....................          tinicio=0; 
6D40:  CLRF   xA6
6D42:  CLRF   xA5
....................          Testerilizacion[0]++; 
6D44:  INCF   xBF,F
....................          if(Testerilizacion[0]>9) 
6D46:  BTFSC  xBF.7
6D48:  BRA    6D54
6D4A:  MOVF   xBF,W
6D4C:  SUBLW  09
6D4E:  BC    6D54
....................          { 
....................             Testerilizacion[0]=0; 
6D50:  CLRF   xBF
....................             Testerilizacion[1]++; 
6D52:  INCF   xC0,F
....................          } 
....................          if(Testerilizacion[1]>5) 
6D54:  BTFSC  xC0.7
6D56:  BRA    6D62
6D58:  MOVF   xC0,W
6D5A:  SUBLW  05
6D5C:  BC    6D62
....................          { 
....................             Testerilizacion[1]=0; 
6D5E:  CLRF   xC0
....................             Testerilizacion[2]++; 
6D60:  INCF   xC1,F
....................          } 
....................          if(Testerilizacion[2]>9) 
6D62:  BTFSC  xC1.7
6D64:  BRA    6D70
6D66:  MOVF   xC1,W
6D68:  SUBLW  09
6D6A:  BC    6D70
....................          { 
....................             Testerilizacion[2]=0; 
6D6C:  CLRF   xC1
....................             Testerilizacion[3]++; 
6D6E:  INCF   xC2,F
....................          } 
....................          if(Testerilizacion[3]>9) 
6D70:  BTFSC  xC2.7
6D72:  BRA    6D7C
6D74:  MOVF   xC2,W
6D76:  SUBLW  09
6D78:  BC    6D7C
....................          { 
....................             Testerilizacion[3]=0; 
6D7A:  CLRF   xC2
....................          } 
....................       } 
....................        
....................       if(LEFT)//Si oprime boton de Toma. 
6D7C:  BTFSS  x86.3
6D7E:  BRA    6DB8
....................       { 
....................          if(Pausa!=2) 
6D80:  MOVF   x99,W
6D82:  SUBLW  02
6D84:  BZ    6DB6
....................          { 
....................             delay_ms(500);Menu=30;glcd_fillscreen(OFF);Opcion=1;visual=1;Pausa=1; 
6D86:  MOVLW  02
6D88:  MOVLB  6
6D8A:  MOVWF  x3F
6D8C:  MOVLW  FA
6D8E:  MOVWF  x45
6D90:  MOVLB  0
6D92:  CALL   0DFC
6D96:  MOVLB  6
6D98:  DECFSZ x3F,F
6D9A:  BRA    6D8C
6D9C:  MOVLW  1E
6D9E:  MOVLB  5
6DA0:  MOVWF  x96
6DA2:  MOVLB  6
6DA4:  CLRF   x40
6DA6:  MOVLB  0
6DA8:  CALL   0F3E
6DAC:  MOVLW  01
6DAE:  MOVLB  5
6DB0:  MOVWF  x9C
6DB2:  BSF    x87.4
6DB4:  MOVWF  x99
....................          } 
....................          LEFT=0; 
6DB6:  BCF    x86.3
....................       } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==30){ //Menu de Retroceso 
6DB8:  MOVF   x96,W
6DBA:  SUBLW  1E
6DBC:  BTFSS  FD8.2
6DBE:  BRA    6FD6
....................        
....................       strcpy(Menus.Letra,"Regresar"); 
6DC0:  MOVLW  06
6DC2:  MOVWF  FEA
6DC4:  MOVLW  1F
6DC6:  MOVWF  FE9
6DC8:  MOVFF  FF2,63F
6DCC:  BCF    FF2.7
6DCE:  MOVLW  00
6DD0:  MOVLB  0
6DD2:  CALL   0C1E
6DD6:  TBLRD*-
6DD8:  TBLRD*+
6DDA:  MOVF   FF5,W
6DDC:  MOVWF  FEE
6DDE:  IORLW  00
6DE0:  BNZ   6DD8
6DE2:  MOVLB  6
6DE4:  BTFSC  x3F.7
6DE6:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2); 
6DE8:  MOVLW  06
6DEA:  MOVWF  x40
6DEC:  MOVLW  1F
6DEE:  MOVWF  x3F
6DF0:  CLRF   x41
6DF2:  CLRF   x42
6DF4:  MOVLW  01
6DF6:  MOVWF  x43
6DF8:  MOVLW  02
6DFA:  MOVWF  x44
6DFC:  MOVLB  0
6DFE:  CALL   156C
....................           
....................       if(Opcion==2) 
6E02:  MOVLB  5
6E04:  MOVF   x9C,W
6E06:  SUBLW  02
6E08:  BNZ   6E94
....................       {strcpy(Menus.Letra,"SI"); 
6E0A:  MOVLW  06
6E0C:  MOVWF  FEA
6E0E:  MOVLW  1F
6E10:  MOVWF  FE9
6E12:  MOVFF  FF2,63F
6E16:  BCF    FF2.7
6E18:  MOVLW  00
6E1A:  MOVLB  0
6E1C:  CALL   0C42
6E20:  TBLRD*-
6E22:  TBLRD*+
6E24:  MOVF   FF5,W
6E26:  MOVWF  FEE
6E28:  IORLW  00
6E2A:  BNZ   6E22
6E2C:  MOVLB  6
6E2E:  BTFSC  x3F.7
6E30:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,25,1,2); 
6E32:  MOVLW  06
6E34:  MOVWF  x40
6E36:  MOVLW  1F
6E38:  MOVWF  x3F
6E3A:  MOVLW  32
6E3C:  MOVWF  x41
6E3E:  MOVLW  19
6E40:  MOVWF  x42
6E42:  MOVLW  01
6E44:  MOVWF  x43
6E46:  MOVLW  02
6E48:  MOVWF  x44
6E4A:  MOVLB  0
6E4C:  CALL   156C
....................       strcpy(Menus.Letra,"NO"); 
6E50:  MOVLW  06
6E52:  MOVWF  FEA
6E54:  MOVLW  1F
6E56:  MOVWF  FE9
6E58:  MOVFF  FF2,63F
6E5C:  BCF    FF2.7
6E5E:  MOVLW  00
6E60:  CALL   0C60
6E64:  TBLRD*-
6E66:  TBLRD*+
6E68:  MOVF   FF5,W
6E6A:  MOVWF  FEE
6E6C:  IORLW  00
6E6E:  BNZ   6E66
6E70:  MOVLB  6
6E72:  BTFSC  x3F.7
6E74:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,45,0,2); 
6E76:  MOVLW  06
6E78:  MOVWF  x40
6E7A:  MOVLW  1F
6E7C:  MOVWF  x3F
6E7E:  MOVLW  32
6E80:  MOVWF  x41
6E82:  MOVLW  2D
6E84:  MOVWF  x42
6E86:  CLRF   x43
6E88:  MOVLW  02
6E8A:  MOVWF  x44
6E8C:  MOVLB  0
6E8E:  CALL   156C
6E92:  MOVLB  5
....................       } 
....................       if(Opcion==1) 
6E94:  DECFSZ x9C,W
6E96:  BRA    6F22
....................       {strcpy(Menus.Letra,"SI"); 
6E98:  MOVLW  06
6E9A:  MOVWF  FEA
6E9C:  MOVLW  1F
6E9E:  MOVWF  FE9
6EA0:  MOVFF  FF2,63F
6EA4:  BCF    FF2.7
6EA6:  MOVLW  00
6EA8:  MOVLB  0
6EAA:  CALL   0C42
6EAE:  TBLRD*-
6EB0:  TBLRD*+
6EB2:  MOVF   FF5,W
6EB4:  MOVWF  FEE
6EB6:  IORLW  00
6EB8:  BNZ   6EB0
6EBA:  MOVLB  6
6EBC:  BTFSC  x3F.7
6EBE:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,25,0,2); 
6EC0:  MOVLW  06
6EC2:  MOVWF  x40
6EC4:  MOVLW  1F
6EC6:  MOVWF  x3F
6EC8:  MOVLW  32
6ECA:  MOVWF  x41
6ECC:  MOVLW  19
6ECE:  MOVWF  x42
6ED0:  CLRF   x43
6ED2:  MOVLW  02
6ED4:  MOVWF  x44
6ED6:  MOVLB  0
6ED8:  CALL   156C
....................       strcpy(Menus.Letra,"NO"); 
6EDC:  MOVLW  06
6EDE:  MOVWF  FEA
6EE0:  MOVLW  1F
6EE2:  MOVWF  FE9
6EE4:  MOVFF  FF2,63F
6EE8:  BCF    FF2.7
6EEA:  MOVLW  00
6EEC:  CALL   0C60
6EF0:  TBLRD*-
6EF2:  TBLRD*+
6EF4:  MOVF   FF5,W
6EF6:  MOVWF  FEE
6EF8:  IORLW  00
6EFA:  BNZ   6EF2
6EFC:  MOVLB  6
6EFE:  BTFSC  x3F.7
6F00:  BSF    FF2.7
....................       displayMenu(Menus.Letra,50,45,1,2); 
6F02:  MOVLW  06
6F04:  MOVWF  x40
6F06:  MOVLW  1F
6F08:  MOVWF  x3F
6F0A:  MOVLW  32
6F0C:  MOVWF  x41
6F0E:  MOVLW  2D
6F10:  MOVWF  x42
6F12:  MOVLW  01
6F14:  MOVWF  x43
6F16:  MOVLW  02
6F18:  MOVWF  x44
6F1A:  MOVLB  0
6F1C:  CALL   156C
6F20:  MOVLB  5
....................       }   
....................          
....................       if(UP)//Si oprime hacia arriba 
6F22:  BTFSS  x86.0
6F24:  BRA    6F32
....................       { 
....................          if(Opcion<2) 
6F26:  MOVF   x9C,W
6F28:  SUBLW  01
6F2A:  BNC   6F2E
....................          { 
....................             Opcion++; 
6F2C:  INCF   x9C,F
....................          } 
....................          visual=1; 
6F2E:  BSF    x87.4
....................          UP=0; 
6F30:  BCF    x86.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
6F32:  BTFSS  x86.1
6F34:  BRA    6F42
....................       {   
....................          if(Opcion>1) 
6F36:  MOVF   x9C,W
6F38:  SUBLW  01
6F3A:  BC    6F3E
....................          { 
....................             Opcion--; 
6F3C:  DECF   x9C,F
....................          }   
....................          visual=1; 
6F3E:  BSF    x87.4
....................          DOWN=0; 
6F40:  BCF    x86.1
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
6F42:  BTFSS  x86.2
6F44:  BRA    6FA2
....................       {   
....................          if(Opcion==2) 
6F46:  MOVF   x9C,W
6F48:  SUBLW  02
6F4A:  BNZ   6F72
....................          { 
....................             Menu=1;glcd_fillScreen(OFF);Testerilizacion[0]=0;Testerilizacion[1]=0;Testerilizacion[2]=0;Testerilizacion[3]=0; 
6F4C:  MOVLW  01
6F4E:  MOVWF  x96
6F50:  MOVLB  6
6F52:  CLRF   x40
6F54:  MOVLB  0
6F56:  CALL   0F3E
6F5A:  MOVLB  5
6F5C:  CLRF   xBF
6F5E:  CLRF   xC0
6F60:  CLRF   xC1
6F62:  CLRF   xC2
....................             //Resistencia_off; 
....................             //Ventilador1_off; 
....................             Tpulso=0.0; 
6F64:  CLRF   xE2
6F66:  CLRF   xE1
6F68:  CLRF   xE0
6F6A:  CLRF   xDF
....................             Opcion=1; 
6F6C:  MOVLW  01
6F6E:  MOVWF  x9C
....................          } 
....................          else 
6F70:  BRA    6FA0
....................          { 
....................             delay_ms(700);Menu=20;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6F72:  MOVLW  04
6F74:  MOVLB  6
6F76:  MOVWF  x3F
6F78:  MOVLW  AF
6F7A:  MOVWF  x45
6F7C:  MOVLB  0
6F7E:  CALL   0DFC
6F82:  MOVLB  6
6F84:  DECFSZ x3F,F
6F86:  BRA    6F78
6F88:  MOVLW  14
6F8A:  MOVLB  5
6F8C:  MOVWF  x96
6F8E:  MOVLB  6
6F90:  CLRF   x40
6F92:  MOVLB  0
6F94:  CALL   0F3E
6F98:  MOVLW  01
6F9A:  MOVLB  5
6F9C:  MOVWF  x9C
6F9E:  BSF    x87.4
....................          } 
....................          RIGHT=0; 
6FA0:  BCF    x86.2
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
6FA2:  BTFSS  x86.3
6FA4:  BRA    6FD6
....................       { 
....................          LEFT=0;delay_ms(700);Menu=20;glcd_fillscreen(OFF);Opcion=1;visual=1; 
6FA6:  BCF    x86.3
6FA8:  MOVLW  04
6FAA:  MOVLB  6
6FAC:  MOVWF  x3F
6FAE:  MOVLW  AF
6FB0:  MOVWF  x45
6FB2:  MOVLB  0
6FB4:  CALL   0DFC
6FB8:  MOVLB  6
6FBA:  DECFSZ x3F,F
6FBC:  BRA    6FAE
6FBE:  MOVLW  14
6FC0:  MOVLB  5
6FC2:  MOVWF  x96
6FC4:  MOVLB  6
6FC6:  CLRF   x40
6FC8:  MOVLB  0
6FCA:  CALL   0F3E
6FCE:  MOVLW  01
6FD0:  MOVLB  5
6FD2:  MOVWF  x9C
6FD4:  BSF    x87.4
....................       } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==100){ //Menu de Configuración de Parametros de Control 
6FD6:  MOVF   x96,W
6FD8:  SUBLW  64
6FDA:  BTFSS  FD8.2
6FDC:  BRA    7342
....................        
....................       if(Opcion>5) 
6FDE:  MOVF   x9C,W
6FE0:  SUBLW  05
6FE2:  BC    6FE8
....................       {Opcion=1;} 
6FE4:  MOVLW  01
6FE6:  MOVWF  x9C
....................       if(Opcion<1) 
6FE8:  MOVF   x9C,F
6FEA:  BNZ   6FF0
....................       {Opcion=5;} 
6FEC:  MOVLW  05
6FEE:  MOVWF  x9C
....................        
....................          if(Opcion==1)    
6FF0:  DECFSZ x9C,W
6FF2:  BRA    7038
....................             {strcpy(Menus.Letra,"Ganancia"); 
6FF4:  MOVLW  06
6FF6:  MOVWF  FEA
6FF8:  MOVLW  1F
6FFA:  MOVWF  FE9
6FFC:  MOVFF  FF2,63F
7000:  BCF    FF2.7
7002:  MOVLW  00
7004:  MOVLB  0
7006:  CALL   0C7E
700A:  TBLRD*-
700C:  TBLRD*+
700E:  MOVF   FF5,W
7010:  MOVWF  FEE
7012:  IORLW  00
7014:  BNZ   700C
7016:  MOVLB  6
7018:  BTFSC  x3F.7
701A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
701C:  MOVLW  06
701E:  MOVWF  x40
7020:  MOVLW  1F
7022:  MOVWF  x3F
7024:  CLRF   x41
7026:  CLRF   x42
7028:  MOVLW  01
702A:  MOVWF  x43
702C:  MOVWF  x44
702E:  MOVLB  0
7030:  CALL   156C
....................          else 
7034:  BRA    7078
7036:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ganancia"); 
7038:  MOVLW  06
703A:  MOVWF  FEA
703C:  MOVLW  1F
703E:  MOVWF  FE9
7040:  MOVFF  FF2,63F
7044:  BCF    FF2.7
7046:  MOVLW  00
7048:  MOVLB  0
704A:  CALL   0C7E
704E:  TBLRD*-
7050:  TBLRD*+
7052:  MOVF   FF5,W
7054:  MOVWF  FEE
7056:  IORLW  00
7058:  BNZ   7050
705A:  MOVLB  6
705C:  BTFSC  x3F.7
705E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);} 
7060:  MOVLW  06
7062:  MOVWF  x40
7064:  MOVLW  1F
7066:  MOVWF  x3F
7068:  CLRF   x41
706A:  CLRF   x42
706C:  CLRF   x43
706E:  MOVLW  01
7070:  MOVWF  x44
7072:  MOVLB  0
7074:  CALL   156C
....................           
....................          if(Opcion==2)    
7078:  MOVLB  5
707A:  MOVF   x9C,W
707C:  SUBLW  02
707E:  BNZ   70C6
....................             {strcpy(Menus.Letra,"Tciclo"); 
7080:  MOVLW  06
7082:  MOVWF  FEA
7084:  MOVLW  1F
7086:  MOVWF  FE9
7088:  MOVFF  FF2,63F
708C:  BCF    FF2.7
708E:  MOVLW  00
7090:  MOVLB  0
7092:  CALL   0CA2
7096:  TBLRD*-
7098:  TBLRD*+
709A:  MOVF   FF5,W
709C:  MOVWF  FEE
709E:  IORLW  00
70A0:  BNZ   7098
70A2:  MOVLB  6
70A4:  BTFSC  x3F.7
70A6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
70A8:  MOVLW  06
70AA:  MOVWF  x40
70AC:  MOVLW  1F
70AE:  MOVWF  x3F
70B0:  CLRF   x41
70B2:  MOVLW  09
70B4:  MOVWF  x42
70B6:  MOVLW  01
70B8:  MOVWF  x43
70BA:  MOVWF  x44
70BC:  MOVLB  0
70BE:  CALL   156C
....................          else 
70C2:  BRA    7108
70C4:  MOVLB  5
....................             {strcpy(Menus.Letra,"Tciclo"); 
70C6:  MOVLW  06
70C8:  MOVWF  FEA
70CA:  MOVLW  1F
70CC:  MOVWF  FE9
70CE:  MOVFF  FF2,63F
70D2:  BCF    FF2.7
70D4:  MOVLW  00
70D6:  MOVLB  0
70D8:  CALL   0CA2
70DC:  TBLRD*-
70DE:  TBLRD*+
70E0:  MOVF   FF5,W
70E2:  MOVWF  FEE
70E4:  IORLW  00
70E6:  BNZ   70DE
70E8:  MOVLB  6
70EA:  BTFSC  x3F.7
70EC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);} 
70EE:  MOVLW  06
70F0:  MOVWF  x40
70F2:  MOVLW  1F
70F4:  MOVWF  x3F
70F6:  CLRF   x41
70F8:  MOVLW  09
70FA:  MOVWF  x42
70FC:  CLRF   x43
70FE:  MOVLW  01
7100:  MOVWF  x44
7102:  MOVLB  0
7104:  CALL   156C
....................              
....................          if(Opcion==3)    
7108:  MOVLB  5
710A:  MOVF   x9C,W
710C:  SUBLW  03
710E:  BNZ   7156
....................             {strcpy(Menus.Letra,"Ajuste +"); 
7110:  MOVLW  06
7112:  MOVWF  FEA
7114:  MOVLW  1F
7116:  MOVWF  FE9
7118:  MOVFF  FF2,63F
711C:  BCF    FF2.7
711E:  MOVLW  00
7120:  MOVLB  0
7122:  CALL   0CC4
7126:  TBLRD*-
7128:  TBLRD*+
712A:  MOVF   FF5,W
712C:  MOVWF  FEE
712E:  IORLW  00
7130:  BNZ   7128
7132:  MOVLB  6
7134:  BTFSC  x3F.7
7136:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
7138:  MOVLW  06
713A:  MOVWF  x40
713C:  MOVLW  1F
713E:  MOVWF  x3F
7140:  CLRF   x41
7142:  MOVLW  12
7144:  MOVWF  x42
7146:  MOVLW  01
7148:  MOVWF  x43
714A:  MOVWF  x44
714C:  MOVLB  0
714E:  CALL   156C
....................          else 
7152:  BRA    7198
7154:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste +"); 
7156:  MOVLW  06
7158:  MOVWF  FEA
715A:  MOVLW  1F
715C:  MOVWF  FE9
715E:  MOVFF  FF2,63F
7162:  BCF    FF2.7
7164:  MOVLW  00
7166:  MOVLB  0
7168:  CALL   0CC4
716C:  TBLRD*-
716E:  TBLRD*+
7170:  MOVF   FF5,W
7172:  MOVWF  FEE
7174:  IORLW  00
7176:  BNZ   716E
7178:  MOVLB  6
717A:  BTFSC  x3F.7
717C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}    
717E:  MOVLW  06
7180:  MOVWF  x40
7182:  MOVLW  1F
7184:  MOVWF  x3F
7186:  CLRF   x41
7188:  MOVLW  12
718A:  MOVWF  x42
718C:  CLRF   x43
718E:  MOVLW  01
7190:  MOVWF  x44
7192:  MOVLB  0
7194:  CALL   156C
....................                          
....................          if(Opcion==4)    
7198:  MOVLB  5
719A:  MOVF   x9C,W
719C:  SUBLW  04
719E:  BNZ   71E6
....................             {strcpy(Menus.Letra,"Ajuste -"); 
71A0:  MOVLW  06
71A2:  MOVWF  FEA
71A4:  MOVLW  1F
71A6:  MOVWF  FE9
71A8:  MOVFF  FF2,63F
71AC:  BCF    FF2.7
71AE:  MOVLW  00
71B0:  MOVLB  0
71B2:  CALL   0CE8
71B6:  TBLRD*-
71B8:  TBLRD*+
71BA:  MOVF   FF5,W
71BC:  MOVWF  FEE
71BE:  IORLW  00
71C0:  BNZ   71B8
71C2:  MOVLB  6
71C4:  BTFSC  x3F.7
71C6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
71C8:  MOVLW  06
71CA:  MOVWF  x40
71CC:  MOVLW  1F
71CE:  MOVWF  x3F
71D0:  CLRF   x41
71D2:  MOVLW  1B
71D4:  MOVWF  x42
71D6:  MOVLW  01
71D8:  MOVWF  x43
71DA:  MOVWF  x44
71DC:  MOVLB  0
71DE:  CALL   156C
....................          else 
71E2:  BRA    7228
71E4:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste -"); 
71E6:  MOVLW  06
71E8:  MOVWF  FEA
71EA:  MOVLW  1F
71EC:  MOVWF  FE9
71EE:  MOVFF  FF2,63F
71F2:  BCF    FF2.7
71F4:  MOVLW  00
71F6:  MOVLB  0
71F8:  CALL   0CE8
71FC:  TBLRD*-
71FE:  TBLRD*+
7200:  MOVF   FF5,W
7202:  MOVWF  FEE
7204:  IORLW  00
7206:  BNZ   71FE
7208:  MOVLB  6
720A:  BTFSC  x3F.7
720C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);}      
720E:  MOVLW  06
7210:  MOVWF  x40
7212:  MOVLW  1F
7214:  MOVWF  x3F
7216:  CLRF   x41
7218:  MOVLW  1B
721A:  MOVWF  x42
721C:  CLRF   x43
721E:  MOVLW  01
7220:  MOVWF  x44
7222:  MOVLB  0
7224:  CALL   156C
....................              
....................          if(Opcion==5)    
7228:  MOVLB  5
722A:  MOVF   x9C,W
722C:  SUBLW  05
722E:  BNZ   7276
....................             {strcpy(Menus.Letra,"Media Movil"); 
7230:  MOVLW  06
7232:  MOVWF  FEA
7234:  MOVLW  1F
7236:  MOVWF  FE9
7238:  MOVFF  FF2,63F
723C:  BCF    FF2.7
723E:  MOVLW  00
7240:  MOVLB  0
7242:  CALL   0D0C
7246:  TBLRD*-
7248:  TBLRD*+
724A:  MOVF   FF5,W
724C:  MOVWF  FEE
724E:  IORLW  00
7250:  BNZ   7248
7252:  MOVLB  6
7254:  BTFSC  x3F.7
7256:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
7258:  MOVLW  06
725A:  MOVWF  x40
725C:  MOVLW  1F
725E:  MOVWF  x3F
7260:  CLRF   x41
7262:  MOVLW  24
7264:  MOVWF  x42
7266:  MOVLW  01
7268:  MOVWF  x43
726A:  MOVWF  x44
726C:  MOVLB  0
726E:  CALL   156C
....................          else 
7272:  BRA    72B8
7274:  MOVLB  5
....................             {strcpy(Menus.Letra,"Media Movil"); 
7276:  MOVLW  06
7278:  MOVWF  FEA
727A:  MOVLW  1F
727C:  MOVWF  FE9
727E:  MOVFF  FF2,63F
7282:  BCF    FF2.7
7284:  MOVLW  00
7286:  MOVLB  0
7288:  CALL   0D0C
728C:  TBLRD*-
728E:  TBLRD*+
7290:  MOVF   FF5,W
7292:  MOVWF  FEE
7294:  IORLW  00
7296:  BNZ   728E
7298:  MOVLB  6
729A:  BTFSC  x3F.7
729C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}      
729E:  MOVLW  06
72A0:  MOVWF  x40
72A2:  MOVLW  1F
72A4:  MOVWF  x3F
72A6:  CLRF   x41
72A8:  MOVLW  24
72AA:  MOVWF  x42
72AC:  CLRF   x43
72AE:  MOVLW  01
72B0:  MOVWF  x44
72B2:  MOVLB  0
72B4:  CALL   156C
....................                
....................        
....................          if(UP)//Si oprime hacia arriba 
72B8:  MOVLB  5
72BA:  BTFSS  x86.0
72BC:  BRA    72D2
....................          { 
....................             UP=0;delay_ms(30); 
72BE:  BCF    x86.0
72C0:  MOVLW  1E
72C2:  MOVLB  6
72C4:  MOVWF  x45
72C6:  MOVLB  0
72C8:  CALL   0DFC
....................             Opcion--;visual=1; 
72CC:  MOVLB  5
72CE:  DECF   x9C,F
72D0:  BSF    x87.4
....................          } 
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
72D2:  BTFSS  x86.1
72D4:  BRA    72EA
....................          { 
....................             DOWN=0;delay_ms(30); 
72D6:  BCF    x86.1
72D8:  MOVLW  1E
72DA:  MOVLB  6
72DC:  MOVWF  x45
72DE:  MOVLB  0
72E0:  CALL   0DFC
....................             Opcion++;visual=1; 
72E4:  MOVLB  5
72E6:  INCF   x9C,F
72E8:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
72EA:  BTFSS  x86.2
72EC:  BRA    7316
....................          {  
....................             RIGHT=0;delay_ms(30); 
72EE:  BCF    x86.2
72F0:  MOVLW  1E
72F2:  MOVLB  6
72F4:  MOVWF  x45
72F6:  MOVLB  0
72F8:  CALL   0DFC
....................             Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
72FC:  MOVLW  64
72FE:  MOVLB  5
7300:  ADDWF  x9C,W
7302:  MOVWF  x96
7304:  MOVLW  01
7306:  MOVWF  x9C
7308:  MOVLB  6
730A:  CLRF   x40
730C:  MOVLB  0
730E:  CALL   0F3E
7312:  MOVLB  5
7314:  BSF    x87.4
....................          } 
....................           
....................          if(LEFT)//Si oprime SET 
7316:  BTFSS  x86.3
7318:  BRA    7342
....................          {  
....................             LEFT=0;delay_ms(30); 
731A:  BCF    x86.3
731C:  MOVLW  1E
731E:  MOVLB  6
7320:  MOVWF  x45
7322:  MOVLB  0
7324:  CALL   0DFC
....................             Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
7328:  MOVLW  64
732A:  MOVLB  5
732C:  ADDWF  x9C,W
732E:  MOVWF  x96
7330:  MOVLW  01
7332:  MOVWF  x9C
7334:  MOVLB  6
7336:  CLRF   x40
7338:  MOVLB  0
733A:  CALL   0F3E
733E:  MOVLB  5
7340:  BSF    x87.4
....................          } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==101){ // Menu de Ajuste de Ganancia 
7342:  MOVF   x96,W
7344:  SUBLW  65
7346:  BTFSS  FD8.2
7348:  BRA    759A
....................        
....................       if(Ganancia>40) 
734A:  MOVLB  6
734C:  CLRF   x42
734E:  CLRF   x41
7350:  MOVLW  20
7352:  MOVWF  x40
7354:  MOVLW  84
7356:  MOVWF  x3F
7358:  MOVFF  5F6,646
735C:  MOVFF  5F5,645
7360:  MOVFF  5F4,644
7364:  MOVFF  5F3,643
7368:  MOVLB  0
736A:  CALL   0E84
736E:  BNC   737C
....................       { 
....................          Ganancia=2; 
7370:  MOVLB  5
7372:  CLRF   xF6
7374:  CLRF   xF5
7376:  CLRF   xF4
7378:  MOVLW  80
737A:  MOVWF  xF3
....................       } 
....................        
....................       if(visual==1) 
737C:  MOVLB  5
737E:  BTFSS  x87.4
7380:  BRA    7408
....................       { 
....................          glcd_fillScreen(OFF); 
7382:  MOVLB  6
7384:  CLRF   x40
7386:  MOVLB  0
7388:  CALL   0F3E
....................          strcpy(Menus.Letra,"Ganancia"); 
738C:  MOVLW  06
738E:  MOVWF  FEA
7390:  MOVLW  1F
7392:  MOVWF  FE9
7394:  MOVFF  FF2,63F
7398:  BCF    FF2.7
739A:  MOVLW  00
739C:  CALL   0C7E
73A0:  TBLRD*-
73A2:  TBLRD*+
73A4:  MOVF   FF5,W
73A6:  MOVWF  FEE
73A8:  IORLW  00
73AA:  BNZ   73A2
73AC:  MOVLB  6
73AE:  BTFSC  x3F.7
73B0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
73B2:  MOVLW  06
73B4:  MOVWF  x40
73B6:  MOVLW  1F
73B8:  MOVWF  x3F
73BA:  CLRF   x41
73BC:  CLRF   x42
73BE:  MOVLW  01
73C0:  MOVWF  x43
73C2:  MOVLW  02
73C4:  MOVWF  x44
73C6:  MOVLB  0
73C8:  CALL   156C
....................           
....................          displayTemperatura(Ganancia,30,30,0,3); 
73CC:  MOVFF  5F6,642
73D0:  MOVFF  5F5,641
73D4:  MOVFF  5F4,640
73D8:  MOVFF  5F3,63F
73DC:  CALL   2C8C
73E0:  MOVFF  02,640
73E4:  MOVFF  01,63F
73E8:  MOVFF  02,642
73EC:  MOVFF  01,641
73F0:  MOVLW  1E
73F2:  MOVLB  6
73F4:  MOVWF  x43
73F6:  MOVWF  x44
73F8:  CLRF   x45
73FA:  MOVLW  03
73FC:  MOVWF  x46
73FE:  MOVLB  0
7400:  CALL   24FC
....................           
....................          visual=0; 
7404:  MOVLB  5
7406:  BCF    x87.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
7408:  BTFSS  x86.0
740A:  BRA    749A
....................          {   
....................             if(Ganancia>40) 
740C:  MOVLB  6
740E:  CLRF   x42
7410:  CLRF   x41
7412:  MOVLW  20
7414:  MOVWF  x40
7416:  MOVLW  84
7418:  MOVWF  x3F
741A:  MOVFF  5F6,646
741E:  MOVFF  5F5,645
7422:  MOVFF  5F4,644
7426:  MOVFF  5F3,643
742A:  MOVLB  0
742C:  CALL   0E84
7430:  BNC   7454
....................             { 
....................                Ganancia=40;delay_ms(100);visual=1; 
7432:  MOVLB  5
7434:  CLRF   xF6
7436:  CLRF   xF5
7438:  MOVLW  20
743A:  MOVWF  xF4
743C:  MOVLW  84
743E:  MOVWF  xF3
7440:  MOVLW  64
7442:  MOVLB  6
7444:  MOVWF  x45
7446:  MOVLB  0
7448:  CALL   0DFC
744C:  MOVLB  5
744E:  BSF    x87.4
....................             } 
....................             else 
7450:  BRA    7498
7452:  MOVLB  0
....................             { 
....................                delay_ms(30);Ganancia+=1.0;visual=1; 
7454:  MOVLW  1E
7456:  MOVLB  6
7458:  MOVWF  x45
745A:  MOVLB  0
745C:  CALL   0DFC
7460:  BCF    FD8.1
7462:  MOVFF  5F6,647
7466:  MOVFF  5F5,646
746A:  MOVFF  5F4,645
746E:  MOVFF  5F3,644
7472:  MOVLB  6
7474:  CLRF   x4B
7476:  CLRF   x4A
7478:  CLRF   x49
747A:  MOVLW  7F
747C:  MOVWF  x48
747E:  MOVLB  0
7480:  CALL   1A00
7484:  MOVFF  03,5F6
7488:  MOVFF  02,5F5
748C:  MOVFF  01,5F4
7490:  MOVFF  00,5F3
7494:  MOVLB  5
7496:  BSF    x87.4
....................             } 
....................             UP=0; 
7498:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
749A:  BTFSS  x86.1
749C:  BRA    750A
....................          {   
....................             if(Ganancia>1) 
749E:  MOVLB  6
74A0:  CLRF   x42
74A2:  CLRF   x41
74A4:  CLRF   x40
74A6:  MOVLW  7F
74A8:  MOVWF  x3F
74AA:  MOVFF  5F6,646
74AE:  MOVFF  5F5,645
74B2:  MOVFF  5F4,644
74B6:  MOVFF  5F3,643
74BA:  MOVLB  0
74BC:  CALL   0E84
74C0:  BNC   7506
....................             { 
....................                delay_ms(30);Ganancia-=1.0;visual=1;      
74C2:  MOVLW  1E
74C4:  MOVLB  6
74C6:  MOVWF  x45
74C8:  MOVLB  0
74CA:  CALL   0DFC
74CE:  BSF    FD8.1
74D0:  MOVFF  5F6,647
74D4:  MOVFF  5F5,646
74D8:  MOVFF  5F4,645
74DC:  MOVFF  5F3,644
74E0:  MOVLB  6
74E2:  CLRF   x4B
74E4:  CLRF   x4A
74E6:  CLRF   x49
74E8:  MOVLW  7F
74EA:  MOVWF  x48
74EC:  MOVLB  0
74EE:  CALL   1A00
74F2:  MOVFF  03,5F6
74F6:  MOVFF  02,5F5
74FA:  MOVFF  01,5F4
74FE:  MOVFF  00,5F3
7502:  MOVLB  5
7504:  BSF    x87.4
....................             } 
....................             DOWN=0; 
7506:  MOVLB  5
7508:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
750A:  BTFSS  x86.2
750C:  BRA    7520
....................          {   
....................             RIGHT=0;delay_ms(30);visual=1; 
750E:  BCF    x86.2
7510:  MOVLW  1E
7512:  MOVLB  6
7514:  MOVWF  x45
7516:  MOVLB  0
7518:  CALL   0DFC
751C:  MOVLB  5
751E:  BSF    x87.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
7520:  BTFSS  x86.3
7522:  BRA    759A
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
7524:  MOVLW  04
7526:  MOVLB  6
7528:  MOVWF  x3F
752A:  MOVLW  AF
752C:  MOVWF  x45
752E:  MOVLB  0
7530:  CALL   0DFC
7534:  MOVLB  6
7536:  DECFSZ x3F,F
7538:  BRA    752A
753A:  MOVLW  64
753C:  MOVLB  5
753E:  MOVWF  x96
7540:  MOVLB  6
7542:  CLRF   x40
7544:  MOVLB  0
7546:  CALL   0F3E
754A:  MOVLW  01
754C:  MOVLB  5
754E:  MOVWF  x9C
7550:  BSF    x87.4
....................             write_eeprom(90,(int8)Ganancia); 
7552:  MOVFF  5F6,642
7556:  MOVFF  5F5,641
755A:  MOVFF  5F4,640
755E:  MOVFF  5F3,63F
7562:  MOVLB  0
7564:  CALL   2C8C
7568:  MOVFF  01,63F
756C:  MOVLW  5A
756E:  MOVWF  FA9
7570:  MOVFF  63F,FA8
7574:  BCF    FA6.6
7576:  BCF    FA6.7
7578:  BSF    FA6.2
757A:  MOVF   FF2,W
757C:  MOVWF  00
757E:  BCF    FF2.7
7580:  MOVLB  F
7582:  MOVLW  55
7584:  MOVWF  FA7
7586:  MOVLW  AA
7588:  MOVWF  FA7
758A:  BSF    FA6.1
758C:  BTFSC  FA6.1
758E:  BRA    758C
7590:  BCF    FA6.2
7592:  MOVF   00,W
7594:  IORWF  FF2,F
....................             LEFT=0; 
7596:  MOVLB  5
7598:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==102){ // Menu de Ajuste de Ganancia2 
759A:  MOVF   x96,W
759C:  SUBLW  66
759E:  BTFSS  FD8.2
75A0:  BRA    77F4
....................        
....................       if(Tciclo>40) 
75A2:  MOVLB  6
75A4:  CLRF   x42
75A6:  CLRF   x41
75A8:  MOVLW  20
75AA:  MOVWF  x40
75AC:  MOVLW  84
75AE:  MOVWF  x3F
75B0:  MOVFF  5DE,646
75B4:  MOVFF  5DD,645
75B8:  MOVFF  5DC,644
75BC:  MOVFF  5DB,643
75C0:  MOVLB  0
75C2:  CALL   0E84
75C6:  BNC   75D6
....................       { 
....................          Tciclo=40; 
75C8:  MOVLB  5
75CA:  CLRF   xDE
75CC:  CLRF   xDD
75CE:  MOVLW  20
75D0:  MOVWF  xDC
75D2:  MOVLW  84
75D4:  MOVWF  xDB
....................       } 
....................        
....................       if(visual==1) 
75D6:  MOVLB  5
75D8:  BTFSS  x87.4
75DA:  BRA    7662
....................       { 
....................          glcd_fillScreen(OFF); 
75DC:  MOVLB  6
75DE:  CLRF   x40
75E0:  MOVLB  0
75E2:  CALL   0F3E
....................          strcpy(Menus.Letra,"Tciclo"); 
75E6:  MOVLW  06
75E8:  MOVWF  FEA
75EA:  MOVLW  1F
75EC:  MOVWF  FE9
75EE:  MOVFF  FF2,63F
75F2:  BCF    FF2.7
75F4:  MOVLW  00
75F6:  CALL   0CA2
75FA:  TBLRD*-
75FC:  TBLRD*+
75FE:  MOVF   FF5,W
7600:  MOVWF  FEE
7602:  IORLW  00
7604:  BNZ   75FC
7606:  MOVLB  6
7608:  BTFSC  x3F.7
760A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
760C:  MOVLW  06
760E:  MOVWF  x40
7610:  MOVLW  1F
7612:  MOVWF  x3F
7614:  CLRF   x41
7616:  CLRF   x42
7618:  MOVLW  01
761A:  MOVWF  x43
761C:  MOVLW  02
761E:  MOVWF  x44
7620:  MOVLB  0
7622:  CALL   156C
....................           
....................          displayTemperatura(Tciclo,30,30,0,3); 
7626:  MOVFF  5DE,642
762A:  MOVFF  5DD,641
762E:  MOVFF  5DC,640
7632:  MOVFF  5DB,63F
7636:  CALL   2C8C
763A:  MOVFF  02,640
763E:  MOVFF  01,63F
7642:  MOVFF  02,642
7646:  MOVFF  01,641
764A:  MOVLW  1E
764C:  MOVLB  6
764E:  MOVWF  x43
7650:  MOVWF  x44
7652:  CLRF   x45
7654:  MOVLW  03
7656:  MOVWF  x46
7658:  MOVLB  0
765A:  CALL   24FC
....................           
....................          visual=0; 
765E:  MOVLB  5
7660:  BCF    x87.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
7662:  BTFSS  x86.0
7664:  BRA    76F4
....................          {   
....................             if(Tciclo>40) 
7666:  MOVLB  6
7668:  CLRF   x42
766A:  CLRF   x41
766C:  MOVLW  20
766E:  MOVWF  x40
7670:  MOVLW  84
7672:  MOVWF  x3F
7674:  MOVFF  5DE,646
7678:  MOVFF  5DD,645
767C:  MOVFF  5DC,644
7680:  MOVFF  5DB,643
7684:  MOVLB  0
7686:  CALL   0E84
768A:  BNC   76AE
....................             { 
....................                Tciclo=40;delay_ms(100);visual=1; 
768C:  MOVLB  5
768E:  CLRF   xDE
7690:  CLRF   xDD
7692:  MOVLW  20
7694:  MOVWF  xDC
7696:  MOVLW  84
7698:  MOVWF  xDB
769A:  MOVLW  64
769C:  MOVLB  6
769E:  MOVWF  x45
76A0:  MOVLB  0
76A2:  CALL   0DFC
76A6:  MOVLB  5
76A8:  BSF    x87.4
....................             } 
....................             else 
76AA:  BRA    76F2
76AC:  MOVLB  0
....................             { 
....................                delay_ms(30);Tciclo+=1.0;visual=1; 
76AE:  MOVLW  1E
76B0:  MOVLB  6
76B2:  MOVWF  x45
76B4:  MOVLB  0
76B6:  CALL   0DFC
76BA:  BCF    FD8.1
76BC:  MOVFF  5DE,647
76C0:  MOVFF  5DD,646
76C4:  MOVFF  5DC,645
76C8:  MOVFF  5DB,644
76CC:  MOVLB  6
76CE:  CLRF   x4B
76D0:  CLRF   x4A
76D2:  CLRF   x49
76D4:  MOVLW  7F
76D6:  MOVWF  x48
76D8:  MOVLB  0
76DA:  CALL   1A00
76DE:  MOVFF  03,5DE
76E2:  MOVFF  02,5DD
76E6:  MOVFF  01,5DC
76EA:  MOVFF  00,5DB
76EE:  MOVLB  5
76F0:  BSF    x87.4
....................             } 
....................             UP=0; 
76F2:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
76F4:  BTFSS  x86.1
76F6:  BRA    7764
....................          {   
....................             if(Tciclo>1) 
76F8:  MOVLB  6
76FA:  CLRF   x42
76FC:  CLRF   x41
76FE:  CLRF   x40
7700:  MOVLW  7F
7702:  MOVWF  x3F
7704:  MOVFF  5DE,646
7708:  MOVFF  5DD,645
770C:  MOVFF  5DC,644
7710:  MOVFF  5DB,643
7714:  MOVLB  0
7716:  CALL   0E84
771A:  BNC   7760
....................             { 
....................                delay_ms(30);Tciclo-=1.0;visual=1;      
771C:  MOVLW  1E
771E:  MOVLB  6
7720:  MOVWF  x45
7722:  MOVLB  0
7724:  CALL   0DFC
7728:  BSF    FD8.1
772A:  MOVFF  5DE,647
772E:  MOVFF  5DD,646
7732:  MOVFF  5DC,645
7736:  MOVFF  5DB,644
773A:  MOVLB  6
773C:  CLRF   x4B
773E:  CLRF   x4A
7740:  CLRF   x49
7742:  MOVLW  7F
7744:  MOVWF  x48
7746:  MOVLB  0
7748:  CALL   1A00
774C:  MOVFF  03,5DE
7750:  MOVFF  02,5DD
7754:  MOVFF  01,5DC
7758:  MOVFF  00,5DB
775C:  MOVLB  5
775E:  BSF    x87.4
....................             } 
....................             DOWN=0; 
7760:  MOVLB  5
7762:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
7764:  BTFSS  x86.2
7766:  BRA    777A
....................          {   
....................             RIGHT=0;delay_ms(30);visual=1; 
7768:  BCF    x86.2
776A:  MOVLW  1E
776C:  MOVLB  6
776E:  MOVWF  x45
7770:  MOVLB  0
7772:  CALL   0DFC
7776:  MOVLB  5
7778:  BSF    x87.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
777A:  BTFSS  x86.3
777C:  BRA    77F4
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
777E:  MOVLW  04
7780:  MOVLB  6
7782:  MOVWF  x3F
7784:  MOVLW  AF
7786:  MOVWF  x45
7788:  MOVLB  0
778A:  CALL   0DFC
778E:  MOVLB  6
7790:  DECFSZ x3F,F
7792:  BRA    7784
7794:  MOVLW  64
7796:  MOVLB  5
7798:  MOVWF  x96
779A:  MOVLB  6
779C:  CLRF   x40
779E:  MOVLB  0
77A0:  CALL   0F3E
77A4:  MOVLW  01
77A6:  MOVLB  5
77A8:  MOVWF  x9C
77AA:  BSF    x87.4
....................             write_eeprom(30,(int8)Tciclo); 
77AC:  MOVFF  5DE,642
77B0:  MOVFF  5DD,641
77B4:  MOVFF  5DC,640
77B8:  MOVFF  5DB,63F
77BC:  MOVLB  0
77BE:  CALL   2C8C
77C2:  MOVFF  01,63F
77C6:  MOVLW  1E
77C8:  MOVWF  FA9
77CA:  MOVFF  63F,FA8
77CE:  BCF    FA6.6
77D0:  BCF    FA6.7
77D2:  BSF    FA6.2
77D4:  MOVF   FF2,W
77D6:  MOVWF  00
77D8:  BCF    FF2.7
77DA:  MOVLB  F
77DC:  MOVLW  55
77DE:  MOVWF  FA7
77E0:  MOVLW  AA
77E2:  MOVWF  FA7
77E4:  BSF    FA6.1
77E6:  BTFSC  FA6.1
77E8:  BRA    77E6
77EA:  BCF    FA6.2
77EC:  MOVF   00,W
77EE:  IORWF  FF2,F
....................             LEFT=0; 
77F0:  MOVLB  5
77F2:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==103){ // Menu de Ajuste de Ajuste 
77F4:  MOVF   x96,W
77F6:  SUBLW  67
77F8:  BTFSS  FD8.2
77FA:  BRA    79C4
....................        
....................       if(Ajuste>100) 
77FC:  MOVF   x8A,W
77FE:  SUBLW  64
7800:  BC    7804
....................       { 
....................          Ajuste=0; 
7802:  CLRF   x8A
....................       } 
....................        
....................       if(visual==1) 
7804:  BTFSS  x87.4
7806:  BRA    7870
....................       { 
....................          glcd_fillScreen(OFF); 
7808:  MOVLB  6
780A:  CLRF   x40
780C:  MOVLB  0
780E:  CALL   0F3E
....................          strcpy(Menus.Letra,"Ajuste"); 
7812:  MOVLW  06
7814:  MOVWF  FEA
7816:  MOVLW  1F
7818:  MOVWF  FE9
781A:  MOVFF  FF2,63F
781E:  BCF    FF2.7
7820:  MOVLW  00
7822:  CALL   0D32
7826:  TBLRD*-
7828:  TBLRD*+
782A:  MOVF   FF5,W
782C:  MOVWF  FEE
782E:  IORLW  00
7830:  BNZ   7828
7832:  MOVLB  6
7834:  BTFSC  x3F.7
7836:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
7838:  MOVLW  06
783A:  MOVWF  x40
783C:  MOVLW  1F
783E:  MOVWF  x3F
7840:  CLRF   x41
7842:  CLRF   x42
7844:  MOVLW  01
7846:  MOVWF  x43
7848:  MOVLW  02
784A:  MOVWF  x44
784C:  MOVLB  0
784E:  CALL   156C
....................           
....................          displayTemperatura(Ajuste,30,30,0,3); 
7852:  MOVLB  6
7854:  CLRF   x42
7856:  MOVFF  58A,641
785A:  MOVLW  1E
785C:  MOVWF  x43
785E:  MOVWF  x44
7860:  CLRF   x45
7862:  MOVLW  03
7864:  MOVWF  x46
7866:  MOVLB  0
7868:  CALL   24FC
....................           
....................          visual=0; 
786C:  MOVLB  5
786E:  BCF    x87.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
7870:  BTFSS  x86.0
7872:  BRA    78EA
....................          {   
....................             if(Ajuste>100) 
7874:  MOVF   x8A,W
7876:  SUBLW  64
7878:  BC    788E
....................             { 
....................                Ajuste=100;delay_ms(100);visual=1; 
787A:  MOVLW  64
787C:  MOVWF  x8A
787E:  MOVLB  6
7880:  MOVWF  x45
7882:  MOVLB  0
7884:  CALL   0DFC
7888:  MOVLB  5
788A:  BSF    x87.4
....................             } 
....................             else 
788C:  BRA    78E8
....................             { 
....................                delay_ms(30);Ajuste+=1.0;visual=1; 
788E:  MOVLW  1E
7890:  MOVLB  6
7892:  MOVWF  x45
7894:  MOVLB  0
7896:  CALL   0DFC
789A:  MOVLB  6
789C:  CLRF   x46
789E:  MOVFF  58A,645
78A2:  MOVLB  0
78A4:  CALL   0E4E
78A8:  BCF    FD8.1
78AA:  MOVFF  03,647
78AE:  MOVFF  02,646
78B2:  MOVFF  01,645
78B6:  MOVFF  00,644
78BA:  MOVLB  6
78BC:  CLRF   x4B
78BE:  CLRF   x4A
78C0:  CLRF   x49
78C2:  MOVLW  7F
78C4:  MOVWF  x48
78C6:  MOVLB  0
78C8:  CALL   1A00
78CC:  MOVFF  03,642
78D0:  MOVFF  02,641
78D4:  MOVFF  01,640
78D8:  MOVFF  00,63F
78DC:  CALL   2C8C
78E0:  MOVFF  01,58A
78E4:  MOVLB  5
78E6:  BSF    x87.4
....................             } 
....................             UP=0; 
78E8:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
78EA:  BTFSS  x86.1
78EC:  BRA    794E
....................          {   
....................             if(Ajuste>0) 
78EE:  MOVF   x8A,F
78F0:  BZ    794C
....................             { 
....................                delay_ms(30);Ajuste-=1.0;visual=1;      
78F2:  MOVLW  1E
78F4:  MOVLB  6
78F6:  MOVWF  x45
78F8:  MOVLB  0
78FA:  CALL   0DFC
78FE:  MOVLB  6
7900:  CLRF   x46
7902:  MOVFF  58A,645
7906:  MOVLB  0
7908:  CALL   0E4E
790C:  BSF    FD8.1
790E:  MOVFF  03,647
7912:  MOVFF  02,646
7916:  MOVFF  01,645
791A:  MOVFF  00,644
791E:  MOVLB  6
7920:  CLRF   x4B
7922:  CLRF   x4A
7924:  CLRF   x49
7926:  MOVLW  7F
7928:  MOVWF  x48
792A:  MOVLB  0
792C:  CALL   1A00
7930:  MOVFF  03,642
7934:  MOVFF  02,641
7938:  MOVFF  01,640
793C:  MOVFF  00,63F
7940:  CALL   2C8C
7944:  MOVFF  01,58A
7948:  MOVLB  5
794A:  BSF    x87.4
....................             } 
....................             DOWN=0; 
794C:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
794E:  BTFSS  x86.2
7950:  BRA    7964
....................          {   
....................             RIGHT=0;delay_ms(30);visual=1; 
7952:  BCF    x86.2
7954:  MOVLW  1E
7956:  MOVLB  6
7958:  MOVWF  x45
795A:  MOVLB  0
795C:  CALL   0DFC
7960:  MOVLB  5
7962:  BSF    x87.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
7964:  BTFSS  x86.3
7966:  BRA    79C4
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
7968:  MOVLW  04
796A:  MOVLB  6
796C:  MOVWF  x3F
796E:  MOVLW  AF
7970:  MOVWF  x45
7972:  MOVLB  0
7974:  CALL   0DFC
7978:  MOVLB  6
797A:  DECFSZ x3F,F
797C:  BRA    796E
797E:  MOVLW  64
7980:  MOVLB  5
7982:  MOVWF  x96
7984:  MOVLB  6
7986:  CLRF   x40
7988:  MOVLB  0
798A:  CALL   0F3E
798E:  MOVLW  01
7990:  MOVLB  5
7992:  MOVWF  x9C
7994:  BSF    x87.4
....................             write_eeprom(40,Ajuste); 
7996:  MOVLW  28
7998:  MOVWF  FA9
799A:  MOVFF  58A,FA8
799E:  BCF    FA6.6
79A0:  BCF    FA6.7
79A2:  BSF    FA6.2
79A4:  MOVF   FF2,W
79A6:  MOVWF  00
79A8:  BCF    FF2.7
79AA:  MOVLB  F
79AC:  MOVLW  55
79AE:  MOVWF  FA7
79B0:  MOVLW  AA
79B2:  MOVWF  FA7
79B4:  BSF    FA6.1
79B6:  BTFSC  FA6.1
79B8:  BRA    79B6
79BA:  BCF    FA6.2
79BC:  MOVF   00,W
79BE:  IORWF  FF2,F
....................             LEFT=0; 
79C0:  MOVLB  5
79C2:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==104){ // Menu de Ajuste de Ajusten 
79C4:  MOVF   x96,W
79C6:  SUBLW  68
79C8:  BTFSS  FD8.2
79CA:  BRA    7B94
....................        
....................       if(Ajusten>100) 
79CC:  MOVF   x8B,W
79CE:  SUBLW  64
79D0:  BC    79D4
....................       { 
....................          Ajusten=0; 
79D2:  CLRF   x8B
....................       } 
....................        
....................       if(visual==1) 
79D4:  BTFSS  x87.4
79D6:  BRA    7A40
....................       { 
....................          glcd_fillScreen(OFF); 
79D8:  MOVLB  6
79DA:  CLRF   x40
79DC:  MOVLB  0
79DE:  CALL   0F3E
....................          strcpy(Menus.Letra,"Ajusten"); 
79E2:  MOVLW  06
79E4:  MOVWF  FEA
79E6:  MOVLW  1F
79E8:  MOVWF  FE9
79EA:  MOVFF  FF2,63F
79EE:  BCF    FF2.7
79F0:  MOVLW  00
79F2:  CALL   0D54
79F6:  TBLRD*-
79F8:  TBLRD*+
79FA:  MOVF   FF5,W
79FC:  MOVWF  FEE
79FE:  IORLW  00
7A00:  BNZ   79F8
7A02:  MOVLB  6
7A04:  BTFSC  x3F.7
7A06:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
7A08:  MOVLW  06
7A0A:  MOVWF  x40
7A0C:  MOVLW  1F
7A0E:  MOVWF  x3F
7A10:  CLRF   x41
7A12:  CLRF   x42
7A14:  MOVLW  01
7A16:  MOVWF  x43
7A18:  MOVLW  02
7A1A:  MOVWF  x44
7A1C:  MOVLB  0
7A1E:  CALL   156C
....................           
....................          displayTemperatura(Ajusten,30,30,0,3); 
7A22:  MOVLB  6
7A24:  CLRF   x42
7A26:  MOVFF  58B,641
7A2A:  MOVLW  1E
7A2C:  MOVWF  x43
7A2E:  MOVWF  x44
7A30:  CLRF   x45
7A32:  MOVLW  03
7A34:  MOVWF  x46
7A36:  MOVLB  0
7A38:  CALL   24FC
....................           
....................          visual=0; 
7A3C:  MOVLB  5
7A3E:  BCF    x87.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
7A40:  BTFSS  x86.0
7A42:  BRA    7ABA
....................          {   
....................             if(Ajusten>100) 
7A44:  MOVF   x8B,W
7A46:  SUBLW  64
7A48:  BC    7A5E
....................             { 
....................                Ajusten=100;delay_ms(100);visual=1; 
7A4A:  MOVLW  64
7A4C:  MOVWF  x8B
7A4E:  MOVLB  6
7A50:  MOVWF  x45
7A52:  MOVLB  0
7A54:  CALL   0DFC
7A58:  MOVLB  5
7A5A:  BSF    x87.4
....................             } 
....................             else 
7A5C:  BRA    7AB8
....................             { 
....................                delay_ms(30);Ajusten+=1.0;visual=1; 
7A5E:  MOVLW  1E
7A60:  MOVLB  6
7A62:  MOVWF  x45
7A64:  MOVLB  0
7A66:  CALL   0DFC
7A6A:  MOVLB  6
7A6C:  CLRF   x46
7A6E:  MOVFF  58B,645
7A72:  MOVLB  0
7A74:  CALL   0E4E
7A78:  BCF    FD8.1
7A7A:  MOVFF  03,647
7A7E:  MOVFF  02,646
7A82:  MOVFF  01,645
7A86:  MOVFF  00,644
7A8A:  MOVLB  6
7A8C:  CLRF   x4B
7A8E:  CLRF   x4A
7A90:  CLRF   x49
7A92:  MOVLW  7F
7A94:  MOVWF  x48
7A96:  MOVLB  0
7A98:  CALL   1A00
7A9C:  MOVFF  03,642
7AA0:  MOVFF  02,641
7AA4:  MOVFF  01,640
7AA8:  MOVFF  00,63F
7AAC:  CALL   2C8C
7AB0:  MOVFF  01,58B
7AB4:  MOVLB  5
7AB6:  BSF    x87.4
....................             } 
....................             UP=0; 
7AB8:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
7ABA:  BTFSS  x86.1
7ABC:  BRA    7B1E
....................          {   
....................             if(Ajusten>0) 
7ABE:  MOVF   x8B,F
7AC0:  BZ    7B1C
....................             { 
....................                delay_ms(30);Ajusten-=1.0;visual=1;      
7AC2:  MOVLW  1E
7AC4:  MOVLB  6
7AC6:  MOVWF  x45
7AC8:  MOVLB  0
7ACA:  CALL   0DFC
7ACE:  MOVLB  6
7AD0:  CLRF   x46
7AD2:  MOVFF  58B,645
7AD6:  MOVLB  0
7AD8:  CALL   0E4E
7ADC:  BSF    FD8.1
7ADE:  MOVFF  03,647
7AE2:  MOVFF  02,646
7AE6:  MOVFF  01,645
7AEA:  MOVFF  00,644
7AEE:  MOVLB  6
7AF0:  CLRF   x4B
7AF2:  CLRF   x4A
7AF4:  CLRF   x49
7AF6:  MOVLW  7F
7AF8:  MOVWF  x48
7AFA:  MOVLB  0
7AFC:  CALL   1A00
7B00:  MOVFF  03,642
7B04:  MOVFF  02,641
7B08:  MOVFF  01,640
7B0C:  MOVFF  00,63F
7B10:  CALL   2C8C
7B14:  MOVFF  01,58B
7B18:  MOVLB  5
7B1A:  BSF    x87.4
....................             } 
....................             DOWN=0; 
7B1C:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
7B1E:  BTFSS  x86.2
7B20:  BRA    7B34
....................          {   
....................             delay_ms(30);visual=1; 
7B22:  MOVLW  1E
7B24:  MOVLB  6
7B26:  MOVWF  x45
7B28:  MOVLB  0
7B2A:  CALL   0DFC
7B2E:  MOVLB  5
7B30:  BSF    x87.4
....................             RIGHT=0; 
7B32:  BCF    x86.2
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
7B34:  BTFSS  x86.3
7B36:  BRA    7B94
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
7B38:  MOVLW  04
7B3A:  MOVLB  6
7B3C:  MOVWF  x3F
7B3E:  MOVLW  AF
7B40:  MOVWF  x45
7B42:  MOVLB  0
7B44:  CALL   0DFC
7B48:  MOVLB  6
7B4A:  DECFSZ x3F,F
7B4C:  BRA    7B3E
7B4E:  MOVLW  64
7B50:  MOVLB  5
7B52:  MOVWF  x96
7B54:  MOVLB  6
7B56:  CLRF   x40
7B58:  MOVLB  0
7B5A:  CALL   0F3E
7B5E:  MOVLW  01
7B60:  MOVLB  5
7B62:  MOVWF  x9C
7B64:  BSF    x87.4
....................             write_eeprom(50,Ajusten); 
7B66:  MOVLW  32
7B68:  MOVWF  FA9
7B6A:  MOVFF  58B,FA8
7B6E:  BCF    FA6.6
7B70:  BCF    FA6.7
7B72:  BSF    FA6.2
7B74:  MOVF   FF2,W
7B76:  MOVWF  00
7B78:  BCF    FF2.7
7B7A:  MOVLB  F
7B7C:  MOVLW  55
7B7E:  MOVWF  FA7
7B80:  MOVLW  AA
7B82:  MOVWF  FA7
7B84:  BSF    FA6.1
7B86:  BTFSC  FA6.1
7B88:  BRA    7B86
7B8A:  BCF    FA6.2
7B8C:  MOVF   00,W
7B8E:  IORWF  FF2,F
....................             LEFT=0; 
7B90:  MOVLB  5
7B92:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==105){ // Menu de Ajuste de Media Movil 
7B94:  MOVF   x96,W
7B96:  SUBLW  69
7B98:  BTFSS  FD8.2
7B9A:  BRA    7D6A
....................        
....................       if(MediaMovil>80) 
7B9C:  MOVF   x8C,W
7B9E:  SUBLW  50
7BA0:  BC    7BA6
....................       { 
....................          MediaMovil=10; 
7BA2:  MOVLW  0A
7BA4:  MOVWF  x8C
....................       } 
....................        
....................       if(visual==1) 
7BA6:  BTFSS  x87.4
7BA8:  BRA    7C12
....................       { 
....................          glcd_fillScreen(OFF); 
7BAA:  MOVLB  6
7BAC:  CLRF   x40
7BAE:  MOVLB  0
7BB0:  CALL   0F3E
....................          strcpy(Menus.Letra,"Media"); 
7BB4:  MOVLW  06
7BB6:  MOVWF  FEA
7BB8:  MOVLW  1F
7BBA:  MOVWF  FE9
7BBC:  MOVFF  FF2,63F
7BC0:  BCF    FF2.7
7BC2:  MOVLW  00
7BC4:  CALL   0D76
7BC8:  TBLRD*-
7BCA:  TBLRD*+
7BCC:  MOVF   FF5,W
7BCE:  MOVWF  FEE
7BD0:  IORLW  00
7BD2:  BNZ   7BCA
7BD4:  MOVLB  6
7BD6:  BTFSC  x3F.7
7BD8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
7BDA:  MOVLW  06
7BDC:  MOVWF  x40
7BDE:  MOVLW  1F
7BE0:  MOVWF  x3F
7BE2:  CLRF   x41
7BE4:  CLRF   x42
7BE6:  MOVLW  01
7BE8:  MOVWF  x43
7BEA:  MOVLW  02
7BEC:  MOVWF  x44
7BEE:  MOVLB  0
7BF0:  CALL   156C
....................           
....................          displayTemperatura(MediaMovil,30,30,0,3); 
7BF4:  MOVLB  6
7BF6:  CLRF   x42
7BF8:  MOVFF  58C,641
7BFC:  MOVLW  1E
7BFE:  MOVWF  x43
7C00:  MOVWF  x44
7C02:  CLRF   x45
7C04:  MOVLW  03
7C06:  MOVWF  x46
7C08:  MOVLB  0
7C0A:  CALL   24FC
....................           
....................          visual=0; 
7C0E:  MOVLB  5
7C10:  BCF    x87.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
7C12:  BTFSS  x86.0
7C14:  BRA    7C8E
....................          {   
....................             if(MediaMovil>79) 
7C16:  MOVF   x8C,W
7C18:  SUBLW  4F
7C1A:  BC    7C32
....................             { 
....................                MediaMovil=79;delay_ms(100);visual=1; 
7C1C:  MOVLW  4F
7C1E:  MOVWF  x8C
7C20:  MOVLW  64
7C22:  MOVLB  6
7C24:  MOVWF  x45
7C26:  MOVLB  0
7C28:  CALL   0DFC
7C2C:  MOVLB  5
7C2E:  BSF    x87.4
....................             } 
....................             else 
7C30:  BRA    7C8C
....................             { 
....................                delay_ms(30);MediaMovil+=1.0;visual=1; 
7C32:  MOVLW  1E
7C34:  MOVLB  6
7C36:  MOVWF  x45
7C38:  MOVLB  0
7C3A:  CALL   0DFC
7C3E:  MOVLB  6
7C40:  CLRF   x46
7C42:  MOVFF  58C,645
7C46:  MOVLB  0
7C48:  CALL   0E4E
7C4C:  BCF    FD8.1
7C4E:  MOVFF  03,647
7C52:  MOVFF  02,646
7C56:  MOVFF  01,645
7C5A:  MOVFF  00,644
7C5E:  MOVLB  6
7C60:  CLRF   x4B
7C62:  CLRF   x4A
7C64:  CLRF   x49
7C66:  MOVLW  7F
7C68:  MOVWF  x48
7C6A:  MOVLB  0
7C6C:  CALL   1A00
7C70:  MOVFF  03,642
7C74:  MOVFF  02,641
7C78:  MOVFF  01,640
7C7C:  MOVFF  00,63F
7C80:  CALL   2C8C
7C84:  MOVFF  01,58C
7C88:  MOVLB  5
7C8A:  BSF    x87.4
....................             } 
....................             UP=0; 
7C8C:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
7C8E:  BTFSS  x86.1
7C90:  BRA    7CF4
....................          {   
....................             if(MediaMovil>1) 
7C92:  MOVF   x8C,W
7C94:  SUBLW  01
7C96:  BC    7CF2
....................             { 
....................                delay_ms(30);MediaMovil-=1.0;visual=1;      
7C98:  MOVLW  1E
7C9A:  MOVLB  6
7C9C:  MOVWF  x45
7C9E:  MOVLB  0
7CA0:  CALL   0DFC
7CA4:  MOVLB  6
7CA6:  CLRF   x46
7CA8:  MOVFF  58C,645
7CAC:  MOVLB  0
7CAE:  CALL   0E4E
7CB2:  BSF    FD8.1
7CB4:  MOVFF  03,647
7CB8:  MOVFF  02,646
7CBC:  MOVFF  01,645
7CC0:  MOVFF  00,644
7CC4:  MOVLB  6
7CC6:  CLRF   x4B
7CC8:  CLRF   x4A
7CCA:  CLRF   x49
7CCC:  MOVLW  7F
7CCE:  MOVWF  x48
7CD0:  MOVLB  0
7CD2:  CALL   1A00
7CD6:  MOVFF  03,642
7CDA:  MOVFF  02,641
7CDE:  MOVFF  01,640
7CE2:  MOVFF  00,63F
7CE6:  CALL   2C8C
7CEA:  MOVFF  01,58C
7CEE:  MOVLB  5
7CF0:  BSF    x87.4
....................             } 
....................             DOWN=0; 
7CF2:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
7CF4:  BTFSS  x86.2
7CF6:  BRA    7D0A
....................          {   
....................             delay_ms(30);visual=1; 
7CF8:  MOVLW  1E
7CFA:  MOVLB  6
7CFC:  MOVWF  x45
7CFE:  MOVLB  0
7D00:  CALL   0DFC
7D04:  MOVLB  5
7D06:  BSF    x87.4
....................             RIGHT=0; 
7D08:  BCF    x86.2
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
7D0A:  BTFSS  x86.3
7D0C:  BRA    7D6A
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
7D0E:  MOVLW  04
7D10:  MOVLB  6
7D12:  MOVWF  x3F
7D14:  MOVLW  AF
7D16:  MOVWF  x45
7D18:  MOVLB  0
7D1A:  CALL   0DFC
7D1E:  MOVLB  6
7D20:  DECFSZ x3F,F
7D22:  BRA    7D14
7D24:  MOVLW  64
7D26:  MOVLB  5
7D28:  MOVWF  x96
7D2A:  MOVLB  6
7D2C:  CLRF   x40
7D2E:  MOVLB  0
7D30:  CALL   0F3E
7D34:  MOVLW  01
7D36:  MOVLB  5
7D38:  MOVWF  x9C
7D3A:  BSF    x87.4
....................             write_eeprom(60,MediaMovil); 
7D3C:  MOVLW  3C
7D3E:  MOVWF  FA9
7D40:  MOVFF  58C,FA8
7D44:  BCF    FA6.6
7D46:  BCF    FA6.7
7D48:  BSF    FA6.2
7D4A:  MOVF   FF2,W
7D4C:  MOVWF  00
7D4E:  BCF    FF2.7
7D50:  MOVLB  F
7D52:  MOVLW  55
7D54:  MOVWF  FA7
7D56:  MOVLW  AA
7D58:  MOVWF  FA7
7D5A:  BSF    FA6.1
7D5C:  BTFSC  FA6.1
7D5E:  BRA    7D5C
7D60:  BCF    FA6.2
7D62:  MOVF   00,W
7D64:  IORWF  FF2,F
....................             LEFT=0; 
7D66:  MOVLB  5
7D68:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
....................       if(tiemporeset>=60) 
7D6A:  MOVF   x95,W
7D6C:  SUBLW  3B
7D6E:  BC    7D80
....................       { 
....................          glcd_init(ON); 
7D70:  MOVLW  01
7D72:  MOVLB  6
7D74:  MOVWF  x3F
7D76:  MOVLB  0
7D78:  CALL   1050
....................          tiemporeset=0; 
7D7C:  MOVLB  5
7D7E:  CLRF   x95
....................       }  
....................  
....................    } 
7D80:  GOTO   4360
.................... } 
7D84:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E1E   BROWNOUT NOWDT BORV20 PUT WDT32768 NOVREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
