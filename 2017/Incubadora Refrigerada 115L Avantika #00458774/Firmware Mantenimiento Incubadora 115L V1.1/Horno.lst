CCS PCH C Compiler, Version 4.104, 5967               09-ene.-18 16:06

               Filename: H:\JP\JP\Laboratorio\Firmware Incubadora 115L V1.1\Horno.lst

               ROM used: 32002 bytes (98%)
                         Largest free fragment is 762
               RAM used: 1617 (79%) at main() level
                         1672 (82%) worst case
               Stack:    5 worst case (4 in main + 1 for interrupts)

*
0000:  GOTO   3784
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   0CB4
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... /// Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses XTPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,NOVREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
0D1A:  MOVLW  06
0D1C:  MOVWF  FEA
0D1E:  MOVLW  53
0D20:  MOVWF  FE9
0D22:  MOVF   FEF,W
0D24:  BZ    0D42
0D26:  MOVLW  0F
0D28:  MOVWF  01
0D2A:  CLRF   00
0D2C:  DECFSZ 00,F
0D2E:  BRA    0D2C
0D30:  DECFSZ 01,F
0D32:  BRA    0D2A
0D34:  MOVLW  8F
0D36:  MOVWF  00
0D38:  DECFSZ 00,F
0D3A:  BRA    0D38
0D3C:  NOP   
0D3E:  DECFSZ FEF,F
0D40:  BRA    0D26
0D42:  RETLW  00
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B0   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B1   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B4   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B3   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
1344:  BCF    F93.2
1346:  BSF    F8A.2
....................    output_low(GLCD_E); 
1348:  BCF    F93.3
134A:  BCF    F8A.3
....................    output_low(GLCD_CS1); 
134C:  BCF    F93.0
134E:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
1350:  BCF    F93.1
1352:  BCF    F8A.1
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
1354:  BCF    F93.5
1356:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
1358:  MOVLB  6
135A:  CLRF   x67
135C:  MOVLW  C0
135E:  MOVWF  x68
1360:  MOVLB  0
1362:  RCALL  11F2
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
1364:  MOVLW  01
1366:  MOVLB  6
1368:  MOVWF  x67
136A:  MOVLW  C0
136C:  MOVWF  x68
136E:  MOVLB  0
1370:  RCALL  11F2
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
1372:  MOVLB  6
1374:  CLRF   x67
1376:  MOVLW  40
1378:  MOVWF  x68
137A:  MOVLB  0
137C:  RCALL  11F2
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
137E:  MOVLW  01
1380:  MOVLB  6
1382:  MOVWF  x67
1384:  MOVLW  40
1386:  MOVWF  x68
1388:  MOVLB  0
138A:  RCALL  11F2
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
138C:  MOVLB  6
138E:  CLRF   x67
1390:  MOVLW  B8
1392:  MOVWF  x68
1394:  MOVLB  0
1396:  RCALL  11F2
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
1398:  MOVLW  01
139A:  MOVLB  6
139C:  MOVWF  x67
139E:  MOVLW  B8
13A0:  MOVWF  x68
13A2:  MOVLB  0
13A4:  RCALL  11F2
....................  
....................    if(mode == ON) 
13A6:  MOVLB  6
13A8:  DECFSZ x4D,W
13AA:  BRA    13C8
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
13AC:  CLRF   x67
13AE:  MOVLW  3F
13B0:  MOVWF  x68
13B2:  MOVLB  0
13B4:  RCALL  11F2
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
13B6:  MOVLW  01
13B8:  MOVLB  6
13BA:  MOVWF  x67
13BC:  MOVLW  3F
13BE:  MOVWF  x68
13C0:  MOVLB  0
13C2:  RCALL  11F2
....................    } 
....................    else 
13C4:  BRA    13E0
13C6:  MOVLB  6
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
13C8:  CLRF   x67
13CA:  MOVLW  3E
13CC:  MOVWF  x68
13CE:  MOVLB  0
13D0:  RCALL  11F2
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
13D2:  MOVLW  01
13D4:  MOVLB  6
13D6:  MOVWF  x67
13D8:  MOVLW  3E
13DA:  MOVWF  x68
13DC:  MOVLB  0
13DE:  RCALL  11F2
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
13E0:  MOVLB  6
13E2:  CLRF   x4E
13E4:  MOVLB  0
13E6:  RCALL  1232
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
13E8:  RCALL  128C
....................    #endif 
.................... } 
13EA:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
128C:  MOVLB  6
128E:  CLRF   x63
1290:  MOVLW  16
1292:  MOVWF  x62
....................    p2 = displayData.right; 
1294:  MOVLW  02
1296:  MOVWF  x65
1298:  MOVLW  16
129A:  MOVWF  x64
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
129C:  CLRF   x60
129E:  MOVF   x60,W
12A0:  SUBLW  07
12A2:  BNC   1340
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
12A4:  BCF    F93.5
12A6:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
12A8:  CLRF   x67
12AA:  MOVLW  40
12AC:  MOVWF  x68
12AE:  MOVLB  0
12B0:  RCALL  11F2
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
12B2:  MOVLW  01
12B4:  MOVLB  6
12B6:  MOVWF  x67
12B8:  MOVLW  40
12BA:  MOVWF  x68
12BC:  MOVLB  0
12BE:  RCALL  11F2
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
12C0:  MOVLB  6
12C2:  MOVF   x60,W
12C4:  IORLW  B8
12C6:  MOVWF  x66
12C8:  CLRF   x67
12CA:  MOVWF  x68
12CC:  MOVLB  0
12CE:  RCALL  11F2
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
12D0:  MOVLB  6
12D2:  MOVF   x60,W
12D4:  IORLW  B8
12D6:  MOVWF  x66
12D8:  MOVLW  01
12DA:  MOVWF  x67
12DC:  MOVFF  666,668
12E0:  MOVLB  0
12E2:  RCALL  11F2
....................       output_high(GLCD_DI);                     // Set for data 
12E4:  BCF    F93.5
12E6:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
12E8:  MOVLB  6
12EA:  CLRF   x61
12EC:  MOVF   x61,W
12EE:  SUBLW  3F
12F0:  BNC   133C
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
12F2:  MOVFF  663,03
12F6:  MOVF   x62,W
12F8:  INCF   x62,F
12FA:  BTFSC  FD8.2
12FC:  INCF   x63,F
12FE:  MOVWF  FE9
1300:  MOVFF  03,FEA
1304:  MOVFF  FEF,666
1308:  CLRF   x67
130A:  MOVFF  666,668
130E:  MOVLB  0
1310:  RCALL  11F2
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
1312:  MOVLB  6
1314:  MOVFF  665,03
1318:  MOVF   x64,W
131A:  INCF   x64,F
131C:  BTFSC  FD8.2
131E:  INCF   x65,F
1320:  MOVWF  FE9
1322:  MOVFF  03,FEA
1326:  MOVFF  FEF,666
132A:  MOVLW  01
132C:  MOVWF  x67
132E:  MOVFF  666,668
1332:  MOVLB  0
1334:  RCALL  11F2
....................       } 
1336:  MOVLB  6
1338:  INCF   x61,F
133A:  BRA    12EC
....................    } 
133C:  INCF   x60,F
133E:  BRA    129E
.................... } 
1340:  MOVLB  0
1342:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
13EC:  MOVLB  6
13EE:  CLRF   x84
13F0:  RRCF   x7F,W
13F2:  MOVWF  x83
13F4:  RRCF   x83,F
13F6:  RRCF   x83,F
13F8:  MOVLW  1F
13FA:  ANDWF  x83,F
....................    temp *= 64; 
13FC:  RLCF   x83,F
13FE:  RLCF   x84,F
1400:  RLCF   x83,F
1402:  RLCF   x84,F
1404:  RLCF   x83,F
1406:  RLCF   x84,F
1408:  RLCF   x83,F
140A:  RLCF   x84,F
140C:  RLCF   x83,F
140E:  RLCF   x84,F
1410:  RLCF   x83,F
1412:  RLCF   x84,F
1414:  MOVLW  C0
1416:  ANDWF  x83,F
....................    temp += x; 
1418:  MOVF   x7E,W
141A:  ADDWF  x83,F
141C:  MOVLW  00
141E:  ADDWFC x84,F
....................  
....................    if(x > 63) 
1420:  MOVF   x7E,W
1422:  SUBLW  3F
1424:  BC    1440
....................    { 
....................       p = displayData.right + temp - 64; 
1426:  MOVLW  16
1428:  ADDWF  x83,W
142A:  MOVWF  x85
142C:  MOVLW  02
142E:  ADDWFC x84,W
1430:  MOVWF  x86
1432:  MOVLW  40
1434:  SUBWF  x85,W
1436:  MOVWF  x81
1438:  MOVLW  00
143A:  SUBWFB x86,W
143C:  MOVWF  x82
....................    } 
....................    else 
143E:  BRA    144C
....................    { 
....................       p = displayData.left + temp; 
1440:  MOVLW  16
1442:  ADDWF  x83,W
1444:  MOVWF  x81
1446:  MOVLW  00
1448:  ADDWFC x84,W
144A:  MOVWF  x82
....................    } 
....................  
....................    if(color) 
144C:  MOVF   x80,F
144E:  BZ    147A
....................    { 
....................       bit_set(*p, y%8); 
1450:  MOVFF  682,03
1454:  MOVFF  681,FE9
1458:  MOVFF  682,FEA
145C:  MOVF   x7F,W
145E:  ANDLW  07
1460:  MOVWF  x85
1462:  MOVLW  01
1464:  MOVWF  00
1466:  MOVF   x85,W
1468:  MOVWF  01
146A:  BZ    1474
146C:  BCF    FD8.0
146E:  RLCF   00,F
1470:  DECFSZ 01,F
1472:  BRA    146C
1474:  MOVF   00,W
1476:  IORWF  FEF,F
....................    } 
....................    else 
1478:  BRA    14A4
....................    { 
....................       bit_clear(*p, y%8); 
147A:  MOVFF  682,03
147E:  MOVFF  681,FE9
1482:  MOVFF  682,FEA
1486:  MOVF   x7F,W
1488:  ANDLW  07
148A:  MOVWF  x85
148C:  MOVLW  01
148E:  MOVWF  00
1490:  MOVF   x85,W
1492:  MOVWF  01
1494:  BZ    149E
1496:  BCF    FD8.0
1498:  RLCF   00,F
149A:  DECFSZ 01,F
149C:  BRA    1496
149E:  MOVF   00,W
14A0:  XORLW  FF
14A2:  ANDWF  FEF,F
....................    } 
.................... } 
14A4:  MOVLB  0
14A6:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
1232:  MOVLB  6
1234:  CLRF   x51
1236:  MOVLW  16
1238:  MOVWF  x50
....................    p2 = displayData.right; 
123A:  MOVLW  02
123C:  MOVWF  x53
123E:  MOVLW  16
1240:  MOVWF  x52
....................    data = 0xFF * color; 
1242:  MOVF   x4E,W
1244:  MULLW  FF
1246:  MOVFF  FF3,64F
....................  
....................    for(i=0; i<512; ++i) 
124A:  CLRF   x55
124C:  CLRF   x54
124E:  MOVF   x55,W
1250:  SUBLW  01
1252:  BNC   1288
....................    { 
....................       *p1++ = data; 
1254:  MOVFF  651,03
1258:  MOVF   x50,W
125A:  INCF   x50,F
125C:  BTFSC  FD8.2
125E:  INCF   x51,F
1260:  MOVWF  FE9
1262:  MOVFF  03,FEA
1266:  MOVFF  64F,FEF
....................       *p2++ = data; 
126A:  MOVFF  653,03
126E:  MOVF   x52,W
1270:  INCF   x52,F
1272:  BTFSC  FD8.2
1274:  INCF   x53,F
1276:  MOVWF  FE9
1278:  MOVFF  03,FEA
127C:  MOVFF  64F,FEF
....................    } 
1280:  INCF   x54,F
1282:  BTFSC  FD8.2
1284:  INCF   x55,F
1286:  BRA    124E
.................... } 
1288:  MOVLB  0
128A:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
11F2:  MOVLB  6
11F4:  MOVF   x67,F
11F6:  BZ    11FE
....................       output_high(GLCD_CS2); 
11F8:  BCF    F93.1
11FA:  BSF    F8A.1
....................    else 
11FC:  BRA    1202
....................       output_high(GLCD_CS1); 
11FE:  BCF    F93.0
1200:  BSF    F8A.0
....................  
....................    output_low(GLCD_RW);       // Set for writing 
1202:  BCF    F93.4
1204:  BCF    F8A.4
....................    output_d(data);            // Put the data on the port 
1206:  CLRF   F95
1208:  MOVFF  668,F8C
....................    delay_cycles(50); 
120C:  MOVLW  10
120E:  MOVWF  00
1210:  DECFSZ 00,F
1212:  BRA    1210
1214:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
1216:  BCF    F93.3
1218:  BSF    F8A.3
....................    delay_cycles(250); 
121A:  MOVLW  53
121C:  MOVWF  00
121E:  DECFSZ 00,F
1220:  BRA    121E
....................    output_low(GLCD_E); 
1222:  BCF    F93.3
1224:  BCF    F8A.3
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
1226:  BCF    F93.0
1228:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
122A:  BCF    F93.1
122C:  BCF    F8A.1
.................... } 
122E:  MOVLB  0
1230:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
1660:  MOVLW  01
1662:  MOVLB  6
1664:  MOVWF  x77
1666:  MOVWF  x78
1668:  CLRF   x7D
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
166A:  MOVF   x6E,W
166C:  SUBWF  x70,W
166E:  MOVWF  x7E
1670:  MOVF   x7E,W
1672:  BTFSS  x7E.7
1674:  BRA    167C
1676:  MOVLW  00
1678:  BSF    FD8.0
167A:  SUBFWB x7E,W
167C:  CLRF   03
167E:  MOVWF  x75
1680:  MOVFF  03,676
....................    dy = abs((signed int8)(y2 - y1)); 
1684:  MOVF   x6F,W
1686:  SUBWF  x71,W
1688:  MOVWF  x7E
168A:  MOVF   x7E,W
168C:  BTFSS  x7E.7
168E:  BRA    1696
1690:  MOVLW  00
1692:  BSF    FD8.0
1694:  SUBFWB x7E,W
1696:  CLRF   03
1698:  MOVWF  x73
169A:  MOVFF  03,674
....................    #endif 
....................  
....................    if(x1 > x2) 
169E:  MOVF   x6E,W
16A0:  SUBWF  x70,W
16A2:  BC    16A8
....................       addx = -1; 
16A4:  MOVLW  FF
16A6:  MOVWF  x77
....................    if(y1 > y2) 
16A8:  MOVF   x6F,W
16AA:  SUBWF  x71,W
16AC:  BC    16B2
....................       addy = -1; 
16AE:  MOVLW  FF
16B0:  MOVWF  x78
....................  
....................    if(dx >= dy) 
16B2:  MOVF   x74,W
16B4:  SUBWF  x76,W
16B6:  BNC   172E
16B8:  BNZ   16C0
16BA:  MOVF   x73,W
16BC:  SUBWF  x75,W
16BE:  BNC   172E
....................    { 
....................       dy *= 2; 
16C0:  BCF    FD8.0
16C2:  RLCF   x73,F
16C4:  RLCF   x74,F
....................       P = dy - dx; 
16C6:  MOVF   x75,W
16C8:  SUBWF  x73,W
16CA:  MOVWF  00
16CC:  MOVF   x76,W
16CE:  SUBWFB x74,W
16D0:  MOVFF  00,679
16D4:  MOVWF  x7A
....................       diff = P - dx; 
16D6:  MOVF   x75,W
16D8:  SUBWF  x79,W
16DA:  MOVWF  x7B
16DC:  MOVF   x76,W
16DE:  SUBWFB x7A,W
16E0:  MOVWF  x7C
....................  
....................       for(; i<=dx; ++i) 
16E2:  MOVF   x76,F
16E4:  BNZ   16EC
16E6:  MOVF   x7D,W
16E8:  SUBWF  x75,W
16EA:  BNC   172C
....................       { 
....................          glcd_pixel(x1, y1, color); 
16EC:  MOVFF  66E,67E
16F0:  MOVFF  66F,67F
16F4:  MOVFF  672,680
16F8:  MOVLB  0
16FA:  RCALL  13EC
....................  
....................          if(P < 0) 
16FC:  MOVLB  6
16FE:  BTFSC  x7A.7
1700:  BRA    1704
1702:  BRA    1714
....................          { 
....................             P  += dy; 
1704:  MOVF   x73,W
1706:  ADDWF  x79,F
1708:  MOVF   x74,W
170A:  ADDWFC x7A,F
....................             x1 += addx; 
170C:  MOVF   x77,W
170E:  ADDWF  x6E,W
1710:  MOVWF  x6E
....................          } 
....................          else 
1712:  BRA    1728
....................          { 
....................             P  += diff; 
1714:  MOVF   x7B,W
1716:  ADDWF  x79,F
1718:  MOVF   x7C,W
171A:  ADDWFC x7A,F
....................             x1 += addx; 
171C:  MOVF   x77,W
171E:  ADDWF  x6E,W
1720:  MOVWF  x6E
....................             y1 += addy; 
1722:  MOVF   x78,W
1724:  ADDWF  x6F,W
1726:  MOVWF  x6F
....................          } 
....................       } 
1728:  INCF   x7D,F
172A:  BRA    16E2
....................    } 
....................    else 
172C:  BRA    179A
....................    { 
....................       dx *= 2; 
172E:  BCF    FD8.0
1730:  RLCF   x75,F
1732:  RLCF   x76,F
....................       P = dx - dy; 
1734:  MOVF   x73,W
1736:  SUBWF  x75,W
1738:  MOVWF  00
173A:  MOVF   x74,W
173C:  SUBWFB x76,W
173E:  MOVFF  00,679
1742:  MOVWF  x7A
....................       diff = P - dy; 
1744:  MOVF   x73,W
1746:  SUBWF  x79,W
1748:  MOVWF  x7B
174A:  MOVF   x74,W
174C:  SUBWFB x7A,W
174E:  MOVWF  x7C
....................  
....................       for(; i<=dy; ++i) 
1750:  MOVF   x74,F
1752:  BNZ   175A
1754:  MOVF   x7D,W
1756:  SUBWF  x73,W
1758:  BNC   179A
....................       { 
....................          glcd_pixel(x1, y1, color); 
175A:  MOVFF  66E,67E
175E:  MOVFF  66F,67F
1762:  MOVFF  672,680
1766:  MOVLB  0
1768:  RCALL  13EC
....................  
....................          if(P < 0) 
176A:  MOVLB  6
176C:  BTFSC  x7A.7
176E:  BRA    1772
1770:  BRA    1782
....................          { 
....................             P  += dx; 
1772:  MOVF   x75,W
1774:  ADDWF  x79,F
1776:  MOVF   x76,W
1778:  ADDWFC x7A,F
....................             y1 += addy; 
177A:  MOVF   x78,W
177C:  ADDWF  x6F,W
177E:  MOVWF  x6F
....................          } 
....................          else 
1780:  BRA    1796
....................          { 
....................             P  += diff; 
1782:  MOVF   x7B,W
1784:  ADDWF  x79,F
1786:  MOVF   x7C,W
1788:  ADDWFC x7A,F
....................             x1 += addx; 
178A:  MOVF   x77,W
178C:  ADDWF  x6E,W
178E:  MOVWF  x6E
....................             y1 += addy; 
1790:  MOVF   x78,W
1792:  ADDWF  x6F,W
1794:  MOVWF  x6F
....................          } 
....................       } 
1796:  INCF   x7D,F
1798:  BRA    1750
....................    } 
.................... } 
179A:  MOVLB  0
179C:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
179E:  MOVLB  6
17A0:  MOVF   x66,F
17A2:  BZ    1800
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
17A4:  MOVF   x64,W
17A6:  SUBWF  x62,W
17A8:  BC    17B4
....................       { 
....................          xmin = x1; 
17AA:  MOVFF  662,669
....................          xmax = x2; 
17AE:  MOVFF  664,66A
....................       } 
....................       else 
17B2:  BRA    17BC
....................       { 
....................          xmin = x2; 
17B4:  MOVFF  664,669
....................          xmax = x1; 
17B8:  MOVFF  662,66A
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
17BC:  MOVF   x65,W
17BE:  SUBWF  x63,W
17C0:  BC    17CC
....................       { 
....................          ymin = y1; 
17C2:  MOVFF  663,66B
....................          ymax = y2; 
17C6:  MOVFF  665,66C
....................       } 
....................       else 
17CA:  BRA    17D4
....................       { 
....................          ymin = y2; 
17CC:  MOVFF  665,66B
....................          ymax = y1; 
17D0:  MOVFF  663,66C
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
17D4:  MOVF   x69,W
17D6:  SUBWF  x6A,W
17D8:  BNC   17FE
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
17DA:  MOVFF  66B,668
17DE:  MOVF   x68,W
17E0:  SUBWF  x6C,W
17E2:  BNC   17FA
....................          { 
....................             glcd_pixel(xmin, i, color); 
17E4:  MOVFF  669,67E
17E8:  MOVFF  668,67F
17EC:  MOVFF  667,680
17F0:  MOVLB  0
17F2:  RCALL  13EC
....................          } 
17F4:  MOVLB  6
17F6:  INCF   x68,F
17F8:  BRA    17DE
....................       } 
17FA:  INCF   x69,F
17FC:  BRA    17D4
....................    } 
....................    else 
17FE:  BRA    185C
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
1800:  MOVFF  662,66E
1804:  MOVFF  663,66F
1808:  MOVFF  664,670
180C:  MOVFF  663,671
1810:  MOVFF  667,672
1814:  MOVLB  0
1816:  RCALL  1660
....................       glcd_line(x1, y2, x2, y2, color); 
1818:  MOVFF  662,66E
181C:  MOVFF  665,66F
1820:  MOVFF  664,670
1824:  MOVFF  665,671
1828:  MOVFF  667,672
182C:  RCALL  1660
....................       glcd_line(x1, y1, x1, y2, color); 
182E:  MOVFF  662,66E
1832:  MOVFF  663,66F
1836:  MOVFF  662,670
183A:  MOVFF  665,671
183E:  MOVFF  667,672
1842:  RCALL  1660
....................       glcd_line(x2, y1, x2, y2, color); 
1844:  MOVFF  664,66E
1848:  MOVFF  663,66F
184C:  MOVFF  664,670
1850:  MOVFF  665,671
1854:  MOVFF  667,672
1858:  RCALL  1660
185A:  MOVLB  6
....................    } 
.................... } 
185C:  MOVLB  0
185E:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
2148:  MOVLB  6
214A:  CLRF   x67
....................    b = radius; 
214C:  MOVFF  664,668
....................    P = 1 - radius; 
2150:  MOVLW  01
2152:  BSF    FD8.0
2154:  SUBFWB x64,W
2156:  MOVWF  x69
....................  
....................    do 
....................    { 
....................       if(fill) 
2158:  MOVF   x65,F
215A:  BZ    2226
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
215C:  MOVF   x67,W
215E:  SUBWF  x62,W
2160:  MOVWF  x6A
2162:  MOVF   x68,W
2164:  ADDWF  x63,W
2166:  MOVWF  x6B
2168:  MOVF   x67,W
216A:  ADDWF  x62,W
216C:  MOVWF  x6C
216E:  MOVF   x68,W
2170:  ADDWF  x63,W
2172:  MOVWF  x6D
2174:  MOVFF  66A,66E
2178:  MOVFF  66B,66F
217C:  MOVFF  66C,670
2180:  MOVWF  x71
2182:  MOVFF  666,672
2186:  MOVLB  0
2188:  CALL   1660
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
218C:  MOVLB  6
218E:  MOVF   x67,W
2190:  SUBWF  x62,W
2192:  MOVWF  x6A
2194:  MOVF   x68,W
2196:  SUBWF  x63,W
2198:  MOVWF  x6B
219A:  MOVF   x67,W
219C:  ADDWF  x62,W
219E:  MOVWF  x6C
21A0:  MOVF   x68,W
21A2:  SUBWF  x63,W
21A4:  MOVWF  x6D
21A6:  MOVFF  66A,66E
21AA:  MOVFF  66B,66F
21AE:  MOVFF  66C,670
21B2:  MOVWF  x71
21B4:  MOVFF  666,672
21B8:  MOVLB  0
21BA:  CALL   1660
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
21BE:  MOVLB  6
21C0:  MOVF   x68,W
21C2:  SUBWF  x62,W
21C4:  MOVWF  x6A
21C6:  MOVF   x67,W
21C8:  ADDWF  x63,W
21CA:  MOVWF  x6B
21CC:  MOVF   x68,W
21CE:  ADDWF  x62,W
21D0:  MOVWF  x6C
21D2:  MOVF   x67,W
21D4:  ADDWF  x63,W
21D6:  MOVWF  x6D
21D8:  MOVFF  66A,66E
21DC:  MOVFF  66B,66F
21E0:  MOVFF  66C,670
21E4:  MOVWF  x71
21E6:  MOVFF  666,672
21EA:  MOVLB  0
21EC:  CALL   1660
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
21F0:  MOVLB  6
21F2:  MOVF   x68,W
21F4:  SUBWF  x62,W
21F6:  MOVWF  x6A
21F8:  MOVF   x67,W
21FA:  SUBWF  x63,W
21FC:  MOVWF  x6B
21FE:  MOVF   x68,W
2200:  ADDWF  x62,W
2202:  MOVWF  x6C
2204:  MOVF   x67,W
2206:  SUBWF  x63,W
2208:  MOVWF  x6D
220A:  MOVFF  66A,66E
220E:  MOVFF  66B,66F
2212:  MOVFF  66C,670
2216:  MOVWF  x71
2218:  MOVFF  666,672
221C:  MOVLB  0
221E:  CALL   1660
....................       } 
....................       else 
2222:  BRA    2314
2224:  MOVLB  6
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
2226:  MOVF   x62,W
2228:  ADDWF  x67,W
222A:  MOVWF  x6A
222C:  MOVF   x63,W
222E:  ADDWF  x68,W
2230:  MOVWF  x6B
2232:  MOVFF  66A,67E
2236:  MOVWF  x7F
2238:  MOVFF  666,680
223C:  MOVLB  0
223E:  CALL   13EC
....................          glcd_pixel(b+x, a+y, color); 
2242:  MOVLB  6
2244:  MOVF   x62,W
2246:  ADDWF  x68,W
2248:  MOVWF  x6A
224A:  MOVF   x63,W
224C:  ADDWF  x67,W
224E:  MOVWF  x6B
2250:  MOVFF  66A,67E
2254:  MOVWF  x7F
2256:  MOVFF  666,680
225A:  MOVLB  0
225C:  CALL   13EC
....................          glcd_pixel(x-a, b+y, color); 
2260:  MOVLB  6
2262:  MOVF   x67,W
2264:  SUBWF  x62,W
2266:  MOVWF  x6A
2268:  MOVF   x63,W
226A:  ADDWF  x68,W
226C:  MOVWF  x6B
226E:  MOVFF  66A,67E
2272:  MOVWF  x7F
2274:  MOVFF  666,680
2278:  MOVLB  0
227A:  CALL   13EC
....................          glcd_pixel(x-b, a+y, color); 
227E:  MOVLB  6
2280:  MOVF   x68,W
2282:  SUBWF  x62,W
2284:  MOVWF  x6A
2286:  MOVF   x63,W
2288:  ADDWF  x67,W
228A:  MOVWF  x6B
228C:  MOVFF  66A,67E
2290:  MOVWF  x7F
2292:  MOVFF  666,680
2296:  MOVLB  0
2298:  CALL   13EC
....................          glcd_pixel(b+x, y-a, color); 
229C:  MOVLB  6
229E:  MOVF   x62,W
22A0:  ADDWF  x68,W
22A2:  MOVWF  x6A
22A4:  MOVF   x67,W
22A6:  SUBWF  x63,W
22A8:  MOVWF  x6B
22AA:  MOVFF  66A,67E
22AE:  MOVWF  x7F
22B0:  MOVFF  666,680
22B4:  MOVLB  0
22B6:  CALL   13EC
....................          glcd_pixel(a+x, y-b, color); 
22BA:  MOVLB  6
22BC:  MOVF   x62,W
22BE:  ADDWF  x67,W
22C0:  MOVWF  x6A
22C2:  MOVF   x68,W
22C4:  SUBWF  x63,W
22C6:  MOVWF  x6B
22C8:  MOVFF  66A,67E
22CC:  MOVWF  x7F
22CE:  MOVFF  666,680
22D2:  MOVLB  0
22D4:  CALL   13EC
....................          glcd_pixel(x-a, y-b, color); 
22D8:  MOVLB  6
22DA:  MOVF   x67,W
22DC:  SUBWF  x62,W
22DE:  MOVWF  x6A
22E0:  MOVF   x68,W
22E2:  SUBWF  x63,W
22E4:  MOVWF  x6B
22E6:  MOVFF  66A,67E
22EA:  MOVWF  x7F
22EC:  MOVFF  666,680
22F0:  MOVLB  0
22F2:  CALL   13EC
....................          glcd_pixel(x-b, y-a, color); 
22F6:  MOVLB  6
22F8:  MOVF   x68,W
22FA:  SUBWF  x62,W
22FC:  MOVWF  x6A
22FE:  MOVF   x67,W
2300:  SUBWF  x63,W
2302:  MOVWF  x6B
2304:  MOVFF  66A,67E
2308:  MOVWF  x7F
230A:  MOVFF  666,680
230E:  MOVLB  0
2310:  CALL   13EC
....................       } 
....................  
....................       if(P < 0) 
2314:  MOVLB  6
2316:  BTFSC  x69.7
2318:  BRA    231C
231A:  BRA    2338
....................          P += 3 + 2 * a++; 
231C:  MOVF   x67,W
231E:  INCF   x67,F
2320:  MOVWF  x6A
2322:  MOVLW  02
2324:  MOVWF  x6B
2326:  MOVFF  66A,66C
232A:  MOVLB  0
232C:  RCALL  20FA
232E:  MOVF   01,W
2330:  ADDLW  03
2332:  MOVLB  6
2334:  ADDWF  x69,F
....................       else 
2336:  BRA    235A
....................          P += 5 + 2 * (a++ - b--); 
2338:  MOVF   x67,W
233A:  INCF   x67,F
233C:  MOVWF  x6A
233E:  MOVF   x68,W
2340:  DECF   x68,F
2342:  SUBWF  x6A,W
2344:  MOVWF  x6A
2346:  MOVLW  02
2348:  MOVWF  x6B
234A:  MOVFF  66A,66C
234E:  MOVLB  0
2350:  RCALL  20FA
2352:  MOVF   01,W
2354:  ADDLW  05
2356:  MOVLB  6
2358:  ADDWF  x69,F
....................     } while(a <= b); 
235A:  MOVF   x67,W
235C:  XORLW  80
235E:  MOVWF  00
2360:  MOVF   x68,W
2362:  XORLW  80
2364:  SUBWF  00,W
2366:  BTFSC  FD8.2
2368:  BRA    2158
236A:  BTFSS  FD8.0
236C:  BRA    2158
.................... } 
236E:  MOVLB  0
2370:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
14A8:  MOVFF  665,03
14AC:  MOVLB  6
14AE:  MOVFF  664,FE9
14B2:  MOVFF  665,FEA
14B6:  MOVF   FEF,F
14B8:  BTFSC  FD8.2
14BA:  BRA    165C
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
14BC:  MOVFF  665,03
14C0:  MOVFF  664,FE9
14C4:  MOVFF  665,FEA
14C8:  MOVF   FEF,W
14CA:  SUBLW  52
14CC:  BNC   151C
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
14CE:  MOVFF  665,03
14D2:  MOVFF  664,FE9
14D6:  MOVFF  665,FEA
14DA:  MOVLW  20
14DC:  SUBWF  FEF,W
14DE:  MULLW  05
14E0:  MOVF   FF3,W
14E2:  CLRF   03
14E4:  MOVWF  x71
14E6:  MOVLW  06
14E8:  MOVWF  FEA
14EA:  MOVLW  6C
14EC:  MOVWF  FE9
14EE:  CLRF   x75
14F0:  MOVFF  671,674
14F4:  MOVFF  FF2,672
14F8:  BCF    FF2.7
14FA:  MOVLW  05
14FC:  MOVWF  01
14FE:  CLRF   FF7
1500:  MOVF   x71,W
1502:  MOVLB  0
1504:  CALL   0096
1508:  TBLRD*-
150A:  TBLRD*+
150C:  MOVFF  FF5,FEE
1510:  DECFSZ 01,F
1512:  BRA    150A
1514:  MOVLB  6
1516:  BTFSC  x72.7
1518:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
151A:  BRA    1586
151C:  MOVFF  665,03
1520:  MOVFF  664,FE9
1524:  MOVFF  665,FEA
1528:  MOVF   FEF,W
152A:  SUBLW  7E
152C:  BNC   157C
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
152E:  MOVFF  665,03
1532:  MOVFF  664,FE9
1536:  MOVFF  665,FEA
153A:  MOVLW  53
153C:  SUBWF  FEF,W
153E:  MULLW  05
1540:  MOVF   FF3,W
1542:  CLRF   03
1544:  MOVWF  x71
1546:  MOVLW  06
1548:  MOVWF  FEA
154A:  MOVLW  6C
154C:  MOVWF  FE9
154E:  CLRF   x75
1550:  MOVFF  671,674
1554:  MOVFF  FF2,672
1558:  BCF    FF2.7
155A:  MOVLW  05
155C:  MOVWF  01
155E:  CLRF   FF7
1560:  MOVF   x71,W
1562:  MOVLB  0
1564:  CALL   01B0
1568:  TBLRD*-
156A:  TBLRD*+
156C:  MOVFF  FF5,FEE
1570:  DECFSZ 01,F
1572:  BRA    156A
1574:  MOVLB  6
1576:  BTFSC  x72.7
1578:  BSF    FF2.7
....................       else 
157A:  BRA    1586
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
157C:  CLRF   x6C
157E:  CLRF   x6D
1580:  CLRF   x6E
1582:  CLRF   x6F
1584:  CLRF   x70
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1586:  MOVFF  665,03
158A:  MOVF   x64,W
158C:  MOVWF  FE9
158E:  MOVFF  03,FEA
1592:  MOVF   FEF,W
1594:  XORLW  0A
1596:  MOVLB  0
1598:  BZ    15A0
159A:  XORLW  07
159C:  BZ    15B0
159E:  BRA    15B6
....................          case '\n': 
....................             y += 7*size + 1; 
15A0:  MOVLB  6
15A2:  MOVF   x66,W
15A4:  MULLW  07
15A6:  MOVF   FF3,W
15A8:  ADDLW  01
15AA:  ADDWF  x63,F
....................             continue; 
15AC:  BRA    164E
15AE:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
15B0:  MOVLB  6
15B2:  CLRF   x62
....................             continue; 
15B4:  BRA    164E
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
15B6:  MOVLB  6
15B8:  MOVF   x66,W
15BA:  MULLW  05
15BC:  MOVF   FF3,W
15BE:  ADDWF  x62,W
15C0:  SUBLW  7F
15C2:  BC    15D0
....................       { 
....................          x = 0;                           // Set x at far left position 
15C4:  CLRF   x62
....................          y += 7*size + 1;                 // Set y at next position down 
15C6:  MOVF   x66,W
15C8:  MULLW  07
15CA:  MOVF   FF3,W
15CC:  ADDLW  01
15CE:  ADDWF  x63,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
15D0:  CLRF   x68
15D2:  MOVF   x68,W
15D4:  SUBLW  04
15D6:  BNC   164E
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
15D8:  CLRF   x69
15DA:  MOVF   x69,W
15DC:  SUBLW  06
15DE:  BNC   1646
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
15E0:  CLRF   03
15E2:  MOVF   x68,W
15E4:  ADDLW  6C
15E6:  MOVWF  FE9
15E8:  MOVLW  06
15EA:  ADDWFC 03,W
15EC:  MOVWF  FEA
15EE:  MOVFF  FEF,671
15F2:  MOVFF  671,00
15F6:  MOVF   x69,W
15F8:  MOVWF  01
15FA:  BZ    1604
15FC:  BCF    FD8.0
15FE:  RRCF   00,F
1600:  DECFSZ 01,F
1602:  BRA    15FC
1604:  BTFSS  00.0
1606:  BRA    1642
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
1608:  CLRF   x6A
160A:  MOVF   x66,W
160C:  SUBWF  x6A,W
160E:  BC    1642
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
1610:  CLRF   x6B
1612:  MOVF   x66,W
1614:  SUBWF  x6B,W
1616:  BC    163E
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
1618:  MOVF   x6B,W
161A:  ADDWF  x62,W
161C:  MOVWF  x71
161E:  MOVF   x69,W
1620:  MULWF  x66
1622:  MOVF   FF3,W
1624:  ADDWF  x63,W
1626:  ADDWF  x6A,W
1628:  MOVWF  x72
162A:  MOVFF  671,67E
162E:  MOVWF  x7F
1630:  MOVFF  667,680
1634:  MOVLB  0
1636:  RCALL  13EC
....................                   } 
1638:  MOVLB  6
163A:  INCF   x6B,F
163C:  BRA    1612
....................                } 
163E:  INCF   x6A,F
1640:  BRA    160A
....................             } 
....................          } 
1642:  INCF   x69,F
1644:  BRA    15DA
....................       } 
1646:  INCF   x68,F
1648:  MOVF   x66,W
164A:  ADDWF  x62,F
164C:  BRA    15D2
....................    } 
164E:  INCF   x64,F
1650:  BTFSC  FD8.2
1652:  INCF   x65,F
1654:  INCF   x62,F
1656:  MOVLB  0
1658:  BRA    14A8
165A:  MOVLB  6
.................... } 
165C:  MOVLB  0
165E:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Horno [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x00, 0x00, 0x0E, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x02, 0x00, 0x0E, 
.................... 0x60, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x05, 0x00, 0x0E, 
.................... 0x70, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x02, 0x00, 0x0E, 
.................... 0x60, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xE1, 0xC0, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x01, 0x80, 0x60, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x78, 0x10, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x06, 0x7C, 0x18, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0x7C, 0x08, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x3C, 0x04, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x10, 0x04, 0x0E, 
.................... 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x0C, 0xE4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x2D, 0xF4, 0x0E, 
.................... 0x02, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x63, 0xF4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0xF1, 0xE4, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x70, 0x10, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x30, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xC0, 0xC0, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x7F, 0x80, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
.................... // Definición de teclado - NO 
.................... #define   ARRIBA        input(PIN_A5) 
.................... #define   ABAJO         input(PIN_E0) 
.................... #define   DERECHA       input(PIN_E1) 
.................... #define   IZQUIERDA     input(PIN_E2) 
....................  
.................... #define   DOOR          input(PIN_A4) 
.................... #define   TERM          input(PIN_A3) 
....................  
....................  
.................... // Definición de Salidas 
.................... #define   Rele1_on          output_bit(PIN_C0,1) 
.................... #define   Rele1_off         output_bit(PIN_C0,0) 
.................... //#define   Vent_on           output_bit(PIN_C1,1) 
.................... //#define   Vent_off          output_bit(PIN_C1,0) 
.................... #define   SSR_on            output_bit(PIN_C2,1) 
.................... #define   SSR_off           output_bit(PIN_C2,0) 
.................... #define   Buzzer_on         output_bit(PIN_B7,1) 
.................... #define   Buzzer_off        output_bit(PIN_B7,0) 
.................... #define   Rele2_on          output_bit(PIN_C6,1) 
.................... #define   Rele2_off         output_bit(PIN_C6,0) 
.................... #define   Rele3_on          output_bit(PIN_C7,1) 
.................... #define   Rele3_off         output_bit(PIN_C7,0) 
....................  
.................... float promedio[90]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float X[2]={0.0,0.0}; 
.................... short UP=0,DOWN=0,RIGHT=0,LEFT=0,flagup=0,flagdn=0,flagrt=0,flaglt=0,Desconectado=0; 
.................... int8 h=0,l=0,Ajuste=0,Ajusten=0,MediaMovil=10,tiemporecta=0,flag_ganancia=0,saturado=0,Velocidad=3,Lectura2=0,Enfria=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,visual=1,Lectura=0; 
.................... short flag_clear=0,flag_clear2=0,flag_clear3=0,flag_clear4=0,flag_tiempocalentamiento=0,flag_display=0,flag_setpoint=0,flag_control=0; 
.................... int8 y=0,tiemporeset=0; 
.................... int8 Menu=0, unidad=1,i=0,Pausa=0,Pausa_ant=0,TiempoControl=0; 
.................... int8 Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,decimal=0,entero=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,tinicio=0,tiempocalentamiento=0,tiemposetpoint=0; 
.................... float Potencia=0.0,Tpulsomin=0.0,Gananciamax=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float V0=0.0,R1=10000.0,Pt,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=25.0,Ganancia2=20.0,desvio=1.0,Coeficiente=38.0; 
.................... float Aumento=0.0,Temperatura=0.0,Saturacion=10.0,Tpulsomax=0.0,Setpoint=0,Temperatura1=0,Temperatura2=0,Temperatura3=0,Temporal=0.0; 
.................... float a=0.0011,b=2.3302,c=-244.0723; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void ActualizaRecta(){ 
....................    X[y]=Temperatura; 
*
2E22:  MOVLB  5
2E24:  MOVF   x94,W
2E26:  MULLW  04
2E28:  MOVF   FF3,W
2E2A:  CLRF   03
2E2C:  ADDLW  7E
2E2E:  MOVWF  FE9
2E30:  MOVLW  05
2E32:  ADDWFC 03,W
2E34:  MOVWF  FEA
2E36:  MOVFF  601,FEF
2E3A:  MOVFF  602,FEC
2E3E:  MOVFF  603,FEC
2E42:  MOVFF  604,FEC
....................    y++; 
2E46:  INCF   x94,F
....................    if(y>=2) 
2E48:  MOVF   x94,W
2E4A:  SUBLW  01
2E4C:  BC    2E8A
....................    { 
....................       y=0; 
2E4E:  CLRF   x94
....................       Aumento=X[1]-X[0]; 
2E50:  BSF    FD8.1
2E52:  MOVFF  585,655
2E56:  MOVFF  584,654
2E5A:  MOVFF  583,653
2E5E:  MOVFF  582,652
2E62:  MOVFF  581,659
2E66:  MOVFF  580,658
2E6A:  MOVFF  57F,657
2E6E:  MOVFF  57E,656
2E72:  MOVLB  0
2E74:  CALL   0F00
2E78:  MOVFF  03,600
2E7C:  MOVFF  02,5FF
2E80:  MOVFF  01,5FE
2E84:  MOVFF  00,5FD
2E88:  MOVLB  5
....................    } 
.................... } 
2E8A:  MOVLB  0
2E8C:  GOTO   2E9C (RETURN)
....................  
.................... void Velocidades(int x){ 
....................  
.................... if(x==0) 
*
0D44:  MOVLB  6
0D46:  MOVF   x4D,F
0D48:  BNZ   0D4C
.................... { 
....................    set_pwm2_duty(0); 
0D4A:  CLRF   FBB
.................... } 
....................  
.................... if(x==1) 
0D4C:  DECFSZ x4D,W
0D4E:  BRA    0D54
.................... { 
....................    set_pwm2_duty(128); 
0D50:  MOVLW  80
0D52:  MOVWF  FBB
.................... } 
....................  
.................... if(x==2) 
0D54:  MOVF   x4D,W
0D56:  SUBLW  02
0D58:  BNZ   0D5E
.................... { 
....................    set_pwm2_duty(180); 
0D5A:  MOVLW  B4
0D5C:  MOVWF  FBB
.................... } 
....................  
.................... if(x==3) 
0D5E:  MOVF   x4D,W
0D60:  SUBLW  03
0D62:  BNZ   0D68
.................... { 
....................    set_pwm2_duty(255); 
0D64:  MOVLW  FF
0D66:  MOVWF  FBB
.................... } 
....................  
.................... } 
0D68:  MOVLB  0
0D6A:  RETLW  00
....................  
.................... void Teclado(void){ 
....................  
....................    if(ARRIBA) 
*
2068:  BSF    F92.5
206A:  BTFSS  F80.5
206C:  BRA    207A
....................    { 
....................       if(!flagup) 
206E:  MOVLB  5
2070:  BTFSC  x86.4
2072:  BRA    2078
....................       { 
....................          UP=1; 
2074:  BSF    x86.0
....................          flagup=1; 
2076:  BSF    x86.4
2078:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!ARRIBA) 
207A:  BSF    F92.5
207C:  BTFSC  F80.5
207E:  BRA    208C
....................    { 
....................       if(flagup) 
2080:  MOVLB  5
2082:  BTFSS  x86.4
2084:  BRA    208A
....................       { 
....................          UP=1; 
2086:  BSF    x86.0
....................          flagup=0; 
2088:  BCF    x86.4
208A:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(ABAJO) 
208C:  BSF    F96.0
208E:  BTFSS  F84.0
2090:  BRA    209E
....................    { 
....................       if(!flagdn) 
2092:  MOVLB  5
2094:  BTFSC  x86.5
2096:  BRA    209C
....................       { 
....................          DOWN=1; 
2098:  BSF    x86.1
....................          flagdn=1; 
209A:  BSF    x86.5
209C:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!ABAJO) 
209E:  BSF    F96.0
20A0:  BTFSC  F84.0
20A2:  BRA    20B0
....................    { 
....................       if(flagdn) 
20A4:  MOVLB  5
20A6:  BTFSS  x86.5
20A8:  BRA    20AE
....................       { 
....................          DOWN=1; 
20AA:  BSF    x86.1
....................          flagdn=0; 
20AC:  BCF    x86.5
20AE:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(DERECHA) 
20B0:  BSF    F96.1
20B2:  BTFSS  F84.1
20B4:  BRA    20C2
....................    { 
....................       if(!flagrt) 
20B6:  MOVLB  5
20B8:  BTFSC  x86.6
20BA:  BRA    20C0
....................       { 
....................          RIGHT=1; 
20BC:  BSF    x86.2
....................          flagrt=1; 
20BE:  BSF    x86.6
20C0:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!DERECHA) 
20C2:  BSF    F96.1
20C4:  BTFSC  F84.1
20C6:  BRA    20D4
....................    { 
....................       if(flagrt) 
20C8:  MOVLB  5
20CA:  BTFSS  x86.6
20CC:  BRA    20D2
....................       { 
....................          RIGHT=1; 
20CE:  BSF    x86.2
....................          flagrt=0; 
20D0:  BCF    x86.6
20D2:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(IZQUIERDA) 
20D4:  BSF    F96.2
20D6:  BTFSS  F84.2
20D8:  BRA    20E6
....................    { 
....................       if(!flaglt) 
20DA:  MOVLB  5
20DC:  BTFSC  x86.7
20DE:  BRA    20E4
....................       { 
....................          LEFT=1; 
20E0:  BSF    x86.3
....................          flaglt=1; 
20E2:  BSF    x86.7
20E4:  MOVLB  0
....................       } 
....................    } 
....................     
....................    if(!IZQUIERDA) 
20E6:  BSF    F96.2
20E8:  BTFSC  F84.2
20EA:  BRA    20F6
....................    { 
....................       if(flaglt) 
20EC:  MOVLB  5
20EE:  BTFSS  x86.7
20F0:  BRA    20F6
....................       { 
....................          LEFT=1; 
20F2:  BSF    x86.3
....................          flaglt=0; 
20F4:  BCF    x86.7
20F6:  MOVLB  0
....................       } 
....................    } 
.................... } 
20F8:  RETLW  00
....................  
.................... // Funcion para conversor analogo-digital 
.................... float sensores(int x){ 
.................... float y;set_adc_channel(x);delay_ms(1);y=read_adc();return (y); 
*
1B3C:  MOVLB  6
1B3E:  RLCF   x4E,W
1B40:  MOVWF  00
1B42:  RLCF   00,F
1B44:  MOVLW  FC
1B46:  ANDWF  00,F
1B48:  MOVFF  00,01
1B4C:  MOVF   FC2,W
1B4E:  ANDLW  C3
1B50:  IORWF  00,W
1B52:  MOVWF  FC2
1B54:  MOVLW  01
1B56:  MOVWF  x53
1B58:  MOVLB  0
1B5A:  CALL   0D1A
1B5E:  BSF    FC2.1
1B60:  BTFSC  FC2.1
1B62:  BRA    1B60
1B64:  MOVFF  FC4,654
1B68:  MOVFF  FC3,653
1B6C:  MOVLB  0
1B6E:  CALL   0D6C
1B72:  MOVFF  03,652
1B76:  MOVFF  02,651
1B7A:  MOVFF  01,650
1B7E:  MOVFF  00,64F
1B82:  MOVFF  64F,00
1B86:  MOVFF  650,01
1B8A:  MOVFF  651,02
1B8E:  MOVFF  652,03
.................... } 
1B92:  GOTO   1CC0 (RETURN)
.................... float Leer_Sensor(int media) 
.................... { 
....................    Prom=0.0; 
*
1CAE:  MOVLB  5
1CB0:  CLRF   xE4
1CB2:  CLRF   xE3
1CB4:  CLRF   xE2
1CB6:  CLRF   xE1
....................    V0 = sensores(0);   //Lectura de Divisor de Voltaje de PT100 con resistencia de 6.18k (+-2%) 
1CB8:  MOVLB  6
1CBA:  CLRF   x4E
1CBC:  MOVLB  0
1CBE:  BRA    1B3C
1CC0:  MOVFF  03,5CC
1CC4:  MOVFF  02,5CB
1CC8:  MOVFF  01,5CA
1CCC:  MOVFF  00,5C9
....................    V0 = V0/40.6; // Se elimina la ganancia 
1CD0:  MOVFF  5CC,651
1CD4:  MOVFF  5CB,650
1CD8:  MOVFF  5CA,64F
1CDC:  MOVFF  5C9,64E
1CE0:  MOVLW  66
1CE2:  MOVLB  6
1CE4:  MOVWF  x55
1CE6:  MOVWF  x54
1CE8:  MOVLW  22
1CEA:  MOVWF  x53
1CEC:  MOVLW  84
1CEE:  MOVWF  x52
1CF0:  MOVLB  0
1CF2:  CALL   0DA2
1CF6:  MOVFF  03,5CC
1CFA:  MOVFF  02,5CB
1CFE:  MOVFF  01,5CA
1D02:  MOVFF  00,5C9
....................    Pt=(R1)/((1023.0/V0)-1.0); // Se calcula el valor de la PT100 
1D06:  MOVLB  6
1D08:  CLRF   x51
1D0A:  MOVLW  C0
1D0C:  MOVWF  x50
1D0E:  MOVLW  7F
1D10:  MOVWF  x4F
1D12:  MOVLW  88
1D14:  MOVWF  x4E
1D16:  MOVFF  5CC,655
1D1A:  MOVFF  5CB,654
1D1E:  MOVFF  5CA,653
1D22:  MOVFF  5C9,652
1D26:  MOVLB  0
1D28:  CALL   0DA2
1D2C:  MOVFF  00,64E
1D30:  MOVFF  01,64F
1D34:  MOVFF  02,650
1D38:  MOVFF  03,651
1D3C:  BSF    FD8.1
1D3E:  MOVFF  03,655
1D42:  MOVFF  02,654
1D46:  MOVFF  01,653
1D4A:  MOVFF  00,652
1D4E:  MOVLB  6
1D50:  CLRF   x59
1D52:  CLRF   x58
1D54:  CLRF   x57
1D56:  MOVLW  7F
1D58:  MOVWF  x56
1D5A:  MOVLB  0
1D5C:  CALL   0F00
1D60:  MOVFF  5D0,651
1D64:  MOVFF  5CF,650
1D68:  MOVFF  5CE,64F
1D6C:  MOVFF  5CD,64E
1D70:  MOVFF  03,655
1D74:  MOVFF  02,654
1D78:  MOVFF  01,653
1D7C:  MOVFF  00,652
1D80:  CALL   0DA2
1D84:  MOVFF  03,5D4
1D88:  MOVFF  02,5D3
1D8C:  MOVFF  01,5D2
1D90:  MOVFF  00,5D1
....................    //Pt=R1/((1023.0/V0)-1.0); // Se calcula el valor de la PT100 
....................    Pt=Pt-0.3; 
1D94:  BSF    FD8.1
1D96:  MOVFF  5D4,655
1D9A:  MOVFF  5D3,654
1D9E:  MOVFF  5D2,653
1DA2:  MOVFF  5D1,652
1DA6:  MOVLW  9A
1DA8:  MOVLB  6
1DAA:  MOVWF  x59
1DAC:  MOVLW  99
1DAE:  MOVWF  x58
1DB0:  MOVLW  19
1DB2:  MOVWF  x57
1DB4:  MOVLW  7D
1DB6:  MOVWF  x56
1DB8:  MOVLB  0
1DBA:  CALL   0F00
1DBE:  MOVFF  03,5D4
1DC2:  MOVFF  02,5D3
1DC6:  MOVFF  01,5D2
1DCA:  MOVFF  00,5D1
....................     
....................              
....................    if(l>(media-1)) 
1DCE:  MOVLW  01
1DD0:  MOVLB  6
1DD2:  SUBWF  x4D,W
1DD4:  MOVLB  5
1DD6:  SUBWF  x89,W
1DD8:  BZ    1DDE
1DDA:  BNC   1DDE
....................    {l=0;} 
1DDC:  CLRF   x89
....................    //promedio[l]=Temperature;l++; 
....................    promedio[l]=Pt;l++; 
1DDE:  MOVLB  6
1DE0:  CLRF   x52
1DE2:  MOVFF  589,651
1DE6:  CLRF   x54
1DE8:  MOVLW  04
1DEA:  MOVWF  x53
1DEC:  MOVLB  0
1DEE:  RCALL  1B96
1DF0:  MOVF   01,W
1DF2:  ADDLW  16
1DF4:  MOVWF  FE9
1DF6:  MOVLW  04
1DF8:  ADDWFC 02,W
1DFA:  MOVWF  FEA
1DFC:  MOVFF  5D1,FEF
1E00:  MOVFF  5D2,FEC
1E04:  MOVFF  5D3,FEC
1E08:  MOVFF  5D4,FEC
1E0C:  MOVLB  5
1E0E:  INCF   x89,F
....................           
....................    for(h=0;h<media;h++) 
1E10:  CLRF   x88
1E12:  MOVLB  6
1E14:  MOVF   x4D,W
1E16:  MOVLB  5
1E18:  SUBWF  x88,W
1E1A:  BC    1E9A
....................    { 
....................       Prom+=promedio[h]; 
1E1C:  MOVLB  6
1E1E:  CLRF   x52
1E20:  MOVFF  588,651
1E24:  CLRF   x54
1E26:  MOVLW  04
1E28:  MOVWF  x53
1E2A:  MOVLB  0
1E2C:  RCALL  1B96
1E2E:  MOVFF  02,03
1E32:  MOVF   01,W
1E34:  ADDLW  16
1E36:  MOVWF  FE9
1E38:  MOVLW  04
1E3A:  ADDWFC 02,W
1E3C:  MOVWF  FEA
1E3E:  MOVFF  FEF,00
1E42:  MOVFF  FEC,01
1E46:  MOVFF  FEC,02
1E4A:  MOVFF  FEC,03
1E4E:  MOVFF  FEA,64F
1E52:  MOVFF  FE9,64E
1E56:  BCF    FD8.1
1E58:  MOVFF  5E4,655
1E5C:  MOVFF  5E3,654
1E60:  MOVFF  5E2,653
1E64:  MOVFF  5E1,652
1E68:  MOVFF  03,659
1E6C:  MOVFF  02,658
1E70:  MOVFF  01,657
1E74:  MOVFF  00,656
1E78:  CALL   0F00
1E7C:  MOVFF  64F,FEA
1E80:  MOVFF  64E,FE9
1E84:  MOVFF  03,5E4
1E88:  MOVFF  02,5E3
1E8C:  MOVFF  01,5E2
1E90:  MOVFF  00,5E1
....................    }  
1E94:  MOVLB  5
1E96:  INCF   x88,F
1E98:  BRA    1E12
....................    Prom=Prom/media;    
1E9A:  MOVLB  6
1E9C:  CLRF   x54
1E9E:  MOVFF  64D,653
1EA2:  MOVLB  0
1EA4:  CALL   0D6C
1EA8:  MOVFF  5E4,651
1EAC:  MOVFF  5E3,650
1EB0:  MOVFF  5E2,64F
1EB4:  MOVFF  5E1,64E
1EB8:  MOVFF  03,655
1EBC:  MOVFF  02,654
1EC0:  MOVFF  01,653
1EC4:  MOVFF  00,652
1EC8:  CALL   0DA2
1ECC:  MOVFF  03,5E4
1ED0:  MOVFF  02,5E3
1ED4:  MOVFF  01,5E2
1ED8:  MOVFF  00,5E1
....................    //Temperature=(Prom-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
....................    Temperature=((Prom*Prom)*a)+(Prom*b)+c;  // Ecuación determinada por linealización en Matlab. Revisar este polinomio. 
1EDC:  MOVFF  5E4,670
1EE0:  MOVFF  5E3,66F
1EE4:  MOVFF  5E2,66E
1EE8:  MOVFF  5E1,66D
1EEC:  MOVFF  5E4,674
1EF0:  MOVFF  5E3,673
1EF4:  MOVFF  5E2,672
1EF8:  MOVFF  5E1,671
1EFC:  RCALL  1BB8
1EFE:  MOVFF  00,64E
1F02:  MOVFF  01,64F
1F06:  MOVFF  02,650
1F0A:  MOVFF  03,651
1F0E:  MOVFF  03,670
1F12:  MOVFF  02,66F
1F16:  MOVFF  01,66E
1F1A:  MOVFF  00,66D
1F1E:  MOVFF  624,674
1F22:  MOVFF  623,673
1F26:  MOVFF  622,672
1F2A:  MOVFF  621,671
1F2E:  RCALL  1BB8
1F30:  MOVFF  00,64E
1F34:  MOVFF  01,64F
1F38:  MOVFF  02,650
1F3C:  MOVFF  03,651
1F40:  MOVFF  5E4,670
1F44:  MOVFF  5E3,66F
1F48:  MOVFF  5E2,66E
1F4C:  MOVFF  5E1,66D
1F50:  MOVFF  628,674
1F54:  MOVFF  627,673
1F58:  MOVFF  626,672
1F5C:  MOVFF  625,671
1F60:  RCALL  1BB8
1F62:  BCF    FD8.1
1F64:  MOVFF  651,655
1F68:  MOVFF  650,654
1F6C:  MOVFF  64F,653
1F70:  MOVFF  64E,652
1F74:  MOVFF  03,659
1F78:  MOVFF  02,658
1F7C:  MOVFF  01,657
1F80:  MOVFF  00,656
1F84:  CALL   0F00
1F88:  MOVFF  00,64E
1F8C:  MOVFF  01,64F
1F90:  MOVFF  02,650
1F94:  MOVFF  03,651
1F98:  BCF    FD8.1
1F9A:  MOVFF  03,655
1F9E:  MOVFF  02,654
1FA2:  MOVFF  01,653
1FA6:  MOVFF  00,652
1FAA:  MOVFF  62C,659
1FAE:  MOVFF  62B,658
1FB2:  MOVFF  62A,657
1FB6:  MOVFF  629,656
1FBA:  CALL   0F00
1FBE:  MOVFF  03,5E8
1FC2:  MOVFF  02,5E7
1FC6:  MOVFF  01,5E6
1FCA:  MOVFF  00,5E5
....................     
....................    Temperature+=((float)Ajuste-(float)Ajusten); 
1FCE:  MOVLB  6
1FD0:  CLRF   x54
1FD2:  MOVFF  58A,653
1FD6:  MOVLB  0
1FD8:  CALL   0D6C
1FDC:  MOVFF  00,64E
1FE0:  MOVFF  01,64F
1FE4:  MOVFF  02,650
1FE8:  MOVFF  03,651
1FEC:  MOVLB  6
1FEE:  CLRF   x54
1FF0:  MOVFF  58B,653
1FF4:  MOVLB  0
1FF6:  CALL   0D6C
1FFA:  BSF    FD8.1
1FFC:  MOVFF  651,655
2000:  MOVFF  650,654
2004:  MOVFF  64F,653
2008:  MOVFF  64E,652
200C:  MOVFF  03,659
2010:  MOVFF  02,658
2014:  MOVFF  01,657
2018:  MOVFF  00,656
201C:  CALL   0F00
2020:  BCF    FD8.1
2022:  MOVFF  5E8,655
2026:  MOVFF  5E7,654
202A:  MOVFF  5E6,653
202E:  MOVFF  5E5,652
2032:  MOVFF  03,659
2036:  MOVFF  02,658
203A:  MOVFF  01,657
203E:  MOVFF  00,656
2042:  CALL   0F00
2046:  MOVFF  03,5E8
204A:  MOVFF  02,5E7
204E:  MOVFF  01,5E6
2052:  MOVFF  00,5E5
....................     
....................    //return Prom; 
....................    return Temperature; 
2056:  MOVFF  5E5,00
205A:  MOVFF  5E6,01
205E:  MOVFF  5E7,02
2062:  MOVFF  5E8,03
.................... } 
2066:  RETLW  00
....................  
.................... void Controla(){ 
.................... //-------------------------------Control de Calentamiento------------------------------------------------------------//          
....................    if(tiemporecta>=40) 
*
2E90:  MOVLB  5
2E92:  MOVF   x8D,W
2E94:  SUBLW  27
2E96:  BC    2EA0
....................    { 
....................       ActualizaRecta(); 
2E98:  MOVLB  0
2E9A:  BRA    2E22
....................       tiemporecta=0; 
2E9C:  MOVLB  5
2E9E:  CLRF   x8D
....................    }  
....................    
....................    if(Enfria==1) 
2EA0:  DECFSZ x92,W
2EA2:  BRA    323E
....................    { 
....................       error=Setpoint-desvio-Temperatura;      // Cálculo del error ****** 
2EA4:  BSF    FD8.1
2EA6:  MOVFF  610,655
2EAA:  MOVFF  60F,654
2EAE:  MOVFF  60E,653
2EB2:  MOVFF  60D,652
2EB6:  MOVFF  5F8,659
2EBA:  MOVFF  5F7,658
2EBE:  MOVFF  5F6,657
2EC2:  MOVFF  5F5,656
2EC6:  MOVLB  0
2EC8:  CALL   0F00
2ECC:  MOVFF  00,64D
2ED0:  MOVFF  01,64E
2ED4:  MOVFF  02,64F
2ED8:  MOVFF  03,650
2EDC:  BSF    FD8.1
2EDE:  MOVFF  03,655
2EE2:  MOVFF  02,654
2EE6:  MOVFF  01,653
2EEA:  MOVFF  00,652
2EEE:  MOVFF  604,659
2EF2:  MOVFF  603,658
2EF6:  MOVFF  602,657
2EFA:  MOVFF  601,656
2EFE:  CALL   0F00
2F02:  MOVFF  03,5E0
2F06:  MOVFF  02,5DF
2F0A:  MOVFF  01,5DE
2F0E:  MOVFF  00,5DD
....................        
....................       if(error>-1.0 && Aumento>-0.2) 
2F12:  MOVLB  6
2F14:  CLRF   x50
2F16:  CLRF   x4F
2F18:  MOVLW  80
2F1A:  MOVWF  x4E
2F1C:  MOVLW  7F
2F1E:  MOVWF  x4D
2F20:  MOVFF  5E0,654
2F24:  MOVFF  5DF,653
2F28:  MOVFF  5DE,652
2F2C:  MOVFF  5DD,651
2F30:  MOVLB  0
2F32:  CALL   1178
2F36:  BNC   2FC4
2F38:  MOVLW  CD
2F3A:  MOVLB  6
2F3C:  MOVWF  x50
2F3E:  MOVLW  CC
2F40:  MOVWF  x4F
2F42:  MOVWF  x4E
2F44:  MOVLW  7C
2F46:  MOVWF  x4D
2F48:  MOVFF  600,654
2F4C:  MOVFF  5FF,653
2F50:  MOVFF  5FE,652
2F54:  MOVFF  5FD,651
2F58:  MOVLB  0
2F5A:  CALL   1178
2F5E:  BNC   2FC4
....................       { 
....................          if(Potencia<90.0) 
2F60:  MOVFF  5B0,650
2F64:  MOVFF  5AF,64F
2F68:  MOVFF  5AE,64E
2F6C:  MOVFF  5AD,64D
2F70:  MOVLB  6
2F72:  CLRF   x54
2F74:  CLRF   x53
2F76:  MOVLW  34
2F78:  MOVWF  x52
2F7A:  MOVLW  85
2F7C:  MOVWF  x51
2F7E:  MOVLB  0
2F80:  CALL   1178
2F84:  BNC   2FC4
....................          { 
....................             if(TiempoControl>=80) 
2F86:  MOVLB  5
2F88:  MOVF   x9B,W
2F8A:  SUBLW  4F
2F8C:  BC    2FC6
....................             { 
....................                TiempoControl=0; 
2F8E:  CLRF   x9B
....................                Ganancia+=0.5; 
2F90:  BCF    FD8.1
2F92:  MOVFF  5F0,655
2F96:  MOVFF  5EF,654
2F9A:  MOVFF  5EE,653
2F9E:  MOVFF  5ED,652
2FA2:  MOVLB  6
2FA4:  CLRF   x59
2FA6:  CLRF   x58
2FA8:  CLRF   x57
2FAA:  MOVLW  7E
2FAC:  MOVWF  x56
2FAE:  MOVLB  0
2FB0:  CALL   0F00
2FB4:  MOVFF  03,5F0
2FB8:  MOVFF  02,5EF
2FBC:  MOVFF  01,5EE
2FC0:  MOVFF  00,5ED
2FC4:  MOVLB  5
....................             } 
....................          } 
....................       } 
....................     
....................       if(error>0.0)     // Anti Wind_DOWN 
2FC6:  MOVLB  6
2FC8:  CLRF   x50
2FCA:  CLRF   x4F
2FCC:  CLRF   x4E
2FCE:  CLRF   x4D
2FD0:  MOVFF  5E0,654
2FD4:  MOVFF  5DF,653
2FD8:  MOVFF  5DE,652
2FDC:  MOVFF  5DD,651
2FE0:  MOVLB  0
2FE2:  CALL   1178
2FE6:  BNC   2FF2
....................       { 
....................          error=0.0; 
2FE8:  MOVLB  5
2FEA:  CLRF   xE0
2FEC:  CLRF   xDF
2FEE:  CLRF   xDE
2FF0:  CLRF   xDD
....................       } 
....................       error=error*-1.0; 
2FF2:  MOVFF  5E0,670
2FF6:  MOVFF  5DF,66F
2FFA:  MOVFF  5DE,66E
2FFE:  MOVFF  5DD,66D
3002:  MOVLB  6
3004:  CLRF   x74
3006:  CLRF   x73
3008:  MOVLW  80
300A:  MOVWF  x72
300C:  MOVLW  7F
300E:  MOVWF  x71
3010:  MOVLB  0
3012:  CALL   1BB8
3016:  MOVFF  03,5E0
301A:  MOVFF  02,5DF
301E:  MOVFF  01,5DE
3022:  MOVFF  00,5DD
....................        
....................       if(Ganancia<0.5) 
3026:  MOVFF  5F0,650
302A:  MOVFF  5EF,64F
302E:  MOVFF  5EE,64E
3032:  MOVFF  5ED,64D
3036:  MOVLB  6
3038:  CLRF   x54
303A:  CLRF   x53
303C:  CLRF   x52
303E:  MOVLW  7E
3040:  MOVWF  x51
3042:  MOVLB  0
3044:  CALL   1178
3048:  BNC   3058
....................       { 
....................          Ganancia=0.5; 
304A:  MOVLB  5
304C:  CLRF   xF0
304E:  CLRF   xEF
3050:  CLRF   xEE
3052:  MOVLW  7E
3054:  MOVWF  xED
3056:  MOVLB  0
....................       } 
....................       if(Ganancia>Gananciamax) 
3058:  MOVFF  5B8,650
305C:  MOVFF  5B7,64F
3060:  MOVFF  5B6,64E
3064:  MOVFF  5B5,64D
3068:  MOVFF  5F0,654
306C:  MOVFF  5EF,653
3070:  MOVFF  5EE,652
3074:  MOVFF  5ED,651
3078:  CALL   1178
307C:  BNC   308E
....................       { 
....................          Ganancia=Gananciamax; 
307E:  MOVFF  5B8,5F0
3082:  MOVFF  5B7,5EF
3086:  MOVFF  5B6,5EE
308A:  MOVFF  5B5,5ED
....................       } 
....................     
....................       tmp=error*Ganancia;  // Control Proporcional. 
308E:  MOVFF  5E0,670
3092:  MOVFF  5DF,66F
3096:  MOVFF  5DE,66E
309A:  MOVFF  5DD,66D
309E:  MOVFF  5F0,674
30A2:  MOVFF  5EF,673
30A6:  MOVFF  5EE,672
30AA:  MOVFF  5ED,671
30AE:  CALL   1BB8
30B2:  MOVFF  03,5EC
30B6:  MOVFF  02,5EB
30BA:  MOVFF  01,5EA
30BE:  MOVFF  00,5E9
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
30C2:  MOVFF  610,650
30C6:  MOVFF  60F,64F
30CA:  MOVFF  60E,64E
30CE:  MOVFF  60D,64D
30D2:  MOVFF  5EC,654
30D6:  MOVFF  5EB,653
30DA:  MOVFF  5EA,652
30DE:  MOVFF  5E9,651
30E2:  CALL   1178
30E6:  BNC   30F8
....................       { 
....................          tmp=Setpoint; 
30E8:  MOVFF  610,5EC
30EC:  MOVFF  60F,5EB
30F0:  MOVFF  60E,5EA
30F4:  MOVFF  60D,5E9
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
30F8:  MOVFF  5EC,650
30FC:  MOVFF  5EB,64F
3100:  MOVFF  5EA,64E
3104:  MOVFF  5E9,64D
3108:  MOVLB  6
310A:  CLRF   x54
310C:  CLRF   x53
310E:  CLRF   x52
3110:  CLRF   x51
3112:  MOVLB  0
3114:  CALL   1178
3118:  BNC   3126
....................       { 
....................          tmp=0.0; 
311A:  MOVLB  5
311C:  CLRF   xEC
311E:  CLRF   xEB
3120:  CLRF   xEA
3122:  CLRF   xE9
3124:  MOVLB  0
....................       } 
....................        
....................       // Tpulso(t)= Tciclo*(y(t)-ymin)/(ymax - ymin); calculo de ciclo util para control de resistencia.ymax=140.ymin=0; 
....................       // Tpulso es float, hay que pasar ese ciclo a una salida de un puerto usando el TMR1. 
....................       Tpulso=(tmp/Setpoint)*Tciclo;   
3126:  MOVFF  5EC,651
312A:  MOVFF  5EB,650
312E:  MOVFF  5EA,64F
3132:  MOVFF  5E9,64E
3136:  MOVFF  610,655
313A:  MOVFF  60F,654
313E:  MOVFF  60E,653
3142:  MOVFF  60D,652
3146:  CALL   0DA2
314A:  MOVFF  00,64D
314E:  MOVFF  01,64E
3152:  MOVFF  02,64F
3156:  MOVFF  03,650
315A:  MOVFF  03,670
315E:  MOVFF  02,66F
3162:  MOVFF  01,66E
3166:  MOVFF  00,66D
316A:  MOVFF  5D8,674
316E:  MOVFF  5D7,673
3172:  MOVFF  5D6,672
3176:  MOVFF  5D5,671
317A:  CALL   1BB8
317E:  MOVFF  03,5DC
3182:  MOVFF  02,5DB
3186:  MOVFF  01,5DA
318A:  MOVFF  00,5D9
....................        
....................       if(tiempoctrl>=(int16)(Tciclo/0.005)) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
318E:  MOVFF  5D8,651
3192:  MOVFF  5D7,650
3196:  MOVFF  5D6,64F
319A:  MOVFF  5D5,64E
319E:  MOVLW  0A
31A0:  MOVLB  6
31A2:  MOVWF  x55
31A4:  MOVLW  D7
31A6:  MOVWF  x54
31A8:  MOVLW  23
31AA:  MOVWF  x53
31AC:  MOVLW  77
31AE:  MOVWF  x52
31B0:  MOVLB  0
31B2:  CALL   0DA2
31B6:  MOVFF  03,650
31BA:  MOVFF  02,64F
31BE:  MOVFF  01,64E
31C2:  MOVFF  00,64D
31C6:  CALL   2372
31CA:  MOVF   02,W
31CC:  MOVWF  03
31CE:  MOVLB  5
31D0:  SUBWF  xA6,W
31D2:  BNC   31E0
31D4:  BNZ   31DC
31D6:  MOVF   01,W
31D8:  SUBWF  xA5,W
31DA:  BNC   31E0
....................       { 
....................          tiempoctrl=0; 
31DC:  CLRF   xA6
31DE:  CLRF   xA5
....................       } // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
....................        
....................       if(tiempoctrl<(int16)(Tpulso/0.005)) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
31E0:  MOVFF  5DC,651
31E4:  MOVFF  5DB,650
31E8:  MOVFF  5DA,64F
31EC:  MOVFF  5D9,64E
31F0:  MOVLW  0A
31F2:  MOVLB  6
31F4:  MOVWF  x55
31F6:  MOVLW  D7
31F8:  MOVWF  x54
31FA:  MOVLW  23
31FC:  MOVWF  x53
31FE:  MOVLW  77
3200:  MOVWF  x52
3202:  MOVLB  0
3204:  CALL   0DA2
3208:  MOVFF  03,650
320C:  MOVFF  02,64F
3210:  MOVFF  01,64E
3214:  MOVFF  00,64D
3218:  CALL   2372
321C:  MOVFF  02,03
3220:  MOVF   01,W
3222:  MOVLB  5
3224:  MOVF   xA6,W
3226:  SUBWF  02,W
3228:  BNC   3238
322A:  BNZ   3232
322C:  MOVF   01,W
322E:  SUBWF  xA5,W
3230:  BC    3238
....................       { 
....................          SSR_on; 
3232:  BSF    F8B.2
3234:  BCF    F94.2
....................          //Peltiern_off; 
....................          //Peltierp_on; 
....................       } 
....................       else          
3236:  BRA    323C
....................       { 
....................          SSR_off; 
3238:  BCF    F8B.2
323A:  BCF    F94.2
....................          //Peltiern_off; 
....................          //Peltierp_off; 
....................       } 
....................              
....................    } 
....................    else 
323C:  BRA    3706
....................    { 
....................       error=desvio+Setpoint-Temperatura;      // Cálculo del error ****** 
323E:  BCF    FD8.1
3240:  MOVFF  5F8,655
3244:  MOVFF  5F7,654
3248:  MOVFF  5F6,653
324C:  MOVFF  5F5,652
3250:  MOVFF  610,659
3254:  MOVFF  60F,658
3258:  MOVFF  60E,657
325C:  MOVFF  60D,656
3260:  MOVLB  0
3262:  CALL   0F00
3266:  MOVFF  00,64D
326A:  MOVFF  01,64E
326E:  MOVFF  02,64F
3272:  MOVFF  03,650
3276:  BSF    FD8.1
3278:  MOVFF  03,655
327C:  MOVFF  02,654
3280:  MOVFF  01,653
3284:  MOVFF  00,652
3288:  MOVFF  604,659
328C:  MOVFF  603,658
3290:  MOVFF  602,657
3294:  MOVFF  601,656
3298:  CALL   0F00
329C:  MOVFF  03,5E0
32A0:  MOVFF  02,5DF
32A4:  MOVFF  01,5DE
32A8:  MOVFF  00,5DD
....................     
....................       if(error>1.2 && error<30 && Aumento<0.3 && flag_setpoint==0) 
32AC:  MOVLW  9A
32AE:  MOVLB  6
32B0:  MOVWF  x50
32B2:  MOVLW  99
32B4:  MOVWF  x4F
32B6:  MOVLW  19
32B8:  MOVWF  x4E
32BA:  MOVLW  7F
32BC:  MOVWF  x4D
32BE:  MOVFF  5E0,654
32C2:  MOVFF  5DF,653
32C6:  MOVFF  5DE,652
32CA:  MOVFF  5DD,651
32CE:  MOVLB  0
32D0:  CALL   1178
32D4:  BTFSS  FD8.0
32D6:  BRA    3458
32D8:  MOVFF  5E0,650
32DC:  MOVFF  5DF,64F
32E0:  MOVFF  5DE,64E
32E4:  MOVFF  5DD,64D
32E8:  MOVLB  6
32EA:  CLRF   x54
32EC:  CLRF   x53
32EE:  MOVLW  70
32F0:  MOVWF  x52
32F2:  MOVLW  83
32F4:  MOVWF  x51
32F6:  MOVLB  0
32F8:  CALL   1178
32FC:  BTFSS  FD8.0
32FE:  BRA    3458
3300:  MOVFF  600,650
3304:  MOVFF  5FF,64F
3308:  MOVFF  5FE,64E
330C:  MOVFF  5FD,64D
3310:  MOVLW  9A
3312:  MOVLB  6
3314:  MOVWF  x54
3316:  MOVLW  99
3318:  MOVWF  x53
331A:  MOVLW  19
331C:  MOVWF  x52
331E:  MOVLW  7D
3320:  MOVWF  x51
3322:  MOVLB  0
3324:  CALL   1178
3328:  BTFSS  FD8.0
332A:  BRA    3458
332C:  MOVLB  5
332E:  BTFSS  x93.4
3330:  BRA    3336
3332:  MOVLB  0
3334:  BRA    3458
....................       { 
....................          if(Potencia<90.0) 
3336:  MOVFF  5B0,650
333A:  MOVFF  5AF,64F
333E:  MOVFF  5AE,64E
3342:  MOVFF  5AD,64D
3346:  MOVLB  6
3348:  CLRF   x54
334A:  CLRF   x53
334C:  MOVLW  34
334E:  MOVWF  x52
3350:  MOVLW  85
3352:  MOVWF  x51
3354:  MOVLB  0
3356:  CALL   1178
335A:  BTFSS  FD8.0
335C:  BRA    3458
....................          { 
....................             if(TiempoControl>=30) 
335E:  MOVLB  5
3360:  MOVF   x9B,W
3362:  SUBLW  1D
3364:  BTFSC  FD8.0
3366:  BRA    345A
....................             { 
....................                TiempoControl=0; 
3368:  CLRF   x9B
....................                if(Aumento<-0.5) 
336A:  MOVFF  600,650
336E:  MOVFF  5FF,64F
3372:  MOVFF  5FE,64E
3376:  MOVFF  5FD,64D
337A:  MOVLB  6
337C:  CLRF   x54
337E:  CLRF   x53
3380:  MOVLW  80
3382:  MOVWF  x52
3384:  MOVLW  7E
3386:  MOVWF  x51
3388:  MOVLB  0
338A:  CALL   1178
338E:  BNC   33C6
....................                { 
....................                   Ganancia+=2; 
3390:  BCF    FD8.1
3392:  MOVFF  5F0,655
3396:  MOVFF  5EF,654
339A:  MOVFF  5EE,653
339E:  MOVFF  5ED,652
33A2:  MOVLB  6
33A4:  CLRF   x59
33A6:  CLRF   x58
33A8:  CLRF   x57
33AA:  MOVLW  80
33AC:  MOVWF  x56
33AE:  MOVLB  0
33B0:  CALL   0F00
33B4:  MOVFF  03,5F0
33B8:  MOVFF  02,5EF
33BC:  MOVFF  01,5EE
33C0:  MOVFF  00,5ED
....................                } 
....................                else 
33C4:  BRA    3458
....................                { 
....................                   if(Aumento<-0.1) 
33C6:  MOVFF  600,650
33CA:  MOVFF  5FF,64F
33CE:  MOVFF  5FE,64E
33D2:  MOVFF  5FD,64D
33D6:  MOVLW  CD
33D8:  MOVLB  6
33DA:  MOVWF  x54
33DC:  MOVLW  CC
33DE:  MOVWF  x53
33E0:  MOVWF  x52
33E2:  MOVLW  7B
33E4:  MOVWF  x51
33E6:  MOVLB  0
33E8:  CALL   1178
33EC:  BNC   3424
....................                   { 
....................                      Ganancia+=1; 
33EE:  BCF    FD8.1
33F0:  MOVFF  5F0,655
33F4:  MOVFF  5EF,654
33F8:  MOVFF  5EE,653
33FC:  MOVFF  5ED,652
3400:  MOVLB  6
3402:  CLRF   x59
3404:  CLRF   x58
3406:  CLRF   x57
3408:  MOVLW  7F
340A:  MOVWF  x56
340C:  MOVLB  0
340E:  CALL   0F00
3412:  MOVFF  03,5F0
3416:  MOVFF  02,5EF
341A:  MOVFF  01,5EE
341E:  MOVFF  00,5ED
....................                   }    
....................                   else 
3422:  BRA    3458
....................                   { 
....................                      Ganancia+=0.5; 
3424:  BCF    FD8.1
3426:  MOVFF  5F0,655
342A:  MOVFF  5EF,654
342E:  MOVFF  5EE,653
3432:  MOVFF  5ED,652
3436:  MOVLB  6
3438:  CLRF   x59
343A:  CLRF   x58
343C:  CLRF   x57
343E:  MOVLW  7E
3440:  MOVWF  x56
3442:  MOVLB  0
3444:  CALL   0F00
3448:  MOVFF  03,5F0
344C:  MOVFF  02,5EF
3450:  MOVFF  01,5EE
3454:  MOVFF  00,5ED
3458:  MOVLB  5
....................                   } 
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(error<-0.7) 
345A:  MOVFF  5E0,650
345E:  MOVFF  5DF,64F
3462:  MOVFF  5DE,64E
3466:  MOVFF  5DD,64D
346A:  MOVLW  33
346C:  MOVLB  6
346E:  MOVWF  x54
3470:  MOVWF  x53
3472:  MOVLW  B3
3474:  MOVWF  x52
3476:  MOVLW  7E
3478:  MOVWF  x51
347A:  MOVLB  0
347C:  CALL   1178
3480:  BNC   34C0
....................       { 
....................          if(TiempoControl>=40) 
3482:  MOVLB  5
3484:  MOVF   x9B,W
3486:  SUBLW  27
3488:  BC    34C2
....................          { 
....................             TiempoControl=0; 
348A:  CLRF   x9B
....................             Ganancia-=1; 
348C:  BSF    FD8.1
348E:  MOVFF  5F0,655
3492:  MOVFF  5EF,654
3496:  MOVFF  5EE,653
349A:  MOVFF  5ED,652
349E:  MOVLB  6
34A0:  CLRF   x59
34A2:  CLRF   x58
34A4:  CLRF   x57
34A6:  MOVLW  7F
34A8:  MOVWF  x56
34AA:  MOVLB  0
34AC:  CALL   0F00
34B0:  MOVFF  03,5F0
34B4:  MOVFF  02,5EF
34B8:  MOVFF  01,5EE
34BC:  MOVFF  00,5ED
34C0:  MOVLB  5
....................          } 
....................       } 
....................        
....................       if(Ganancia<0.5) 
34C2:  MOVFF  5F0,650
34C6:  MOVFF  5EF,64F
34CA:  MOVFF  5EE,64E
34CE:  MOVFF  5ED,64D
34D2:  MOVLB  6
34D4:  CLRF   x54
34D6:  CLRF   x53
34D8:  CLRF   x52
34DA:  MOVLW  7E
34DC:  MOVWF  x51
34DE:  MOVLB  0
34E0:  CALL   1178
34E4:  BNC   34F4
....................       { 
....................          Ganancia=0.5; 
34E6:  MOVLB  5
34E8:  CLRF   xF0
34EA:  CLRF   xEF
34EC:  CLRF   xEE
34EE:  MOVLW  7E
34F0:  MOVWF  xED
34F2:  MOVLB  0
....................       } 
....................       if(Ganancia>Gananciamax) 
34F4:  MOVFF  5B8,650
34F8:  MOVFF  5B7,64F
34FC:  MOVFF  5B6,64E
3500:  MOVFF  5B5,64D
3504:  MOVFF  5F0,654
3508:  MOVFF  5EF,653
350C:  MOVFF  5EE,652
3510:  MOVFF  5ED,651
3514:  CALL   1178
3518:  BNC   352A
....................       { 
....................          Ganancia=Gananciamax; 
351A:  MOVFF  5B8,5F0
351E:  MOVFF  5B7,5EF
3522:  MOVFF  5B6,5EE
3526:  MOVFF  5B5,5ED
....................       } 
....................     
....................       if(error<0.0)     // Anti Wind_DOWN     
352A:  MOVFF  5E0,650
352E:  MOVFF  5DF,64F
3532:  MOVFF  5DE,64E
3536:  MOVFF  5DD,64D
353A:  MOVLB  6
353C:  CLRF   x54
353E:  CLRF   x53
3540:  CLRF   x52
3542:  CLRF   x51
3544:  MOVLB  0
3546:  CALL   1178
354A:  BNC   3558
....................       { 
....................          error=0.0; 
354C:  MOVLB  5
354E:  CLRF   xE0
3550:  CLRF   xDF
3552:  CLRF   xDE
3554:  CLRF   xDD
3556:  MOVLB  0
....................       } 
....................       //tmp=(Setpoint-Prom)*Ganancia;  // Control Proporcional. 
....................       tmp=error*Ganancia;  // Control Proporcional. 
3558:  MOVFF  5E0,670
355C:  MOVFF  5DF,66F
3560:  MOVFF  5DE,66E
3564:  MOVFF  5DD,66D
3568:  MOVFF  5F0,674
356C:  MOVFF  5EF,673
3570:  MOVFF  5EE,672
3574:  MOVFF  5ED,671
3578:  CALL   1BB8
357C:  MOVFF  03,5EC
3580:  MOVFF  02,5EB
3584:  MOVFF  01,5EA
3588:  MOVFF  00,5E9
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
358C:  MOVFF  610,650
3590:  MOVFF  60F,64F
3594:  MOVFF  60E,64E
3598:  MOVFF  60D,64D
359C:  MOVFF  5EC,654
35A0:  MOVFF  5EB,653
35A4:  MOVFF  5EA,652
35A8:  MOVFF  5E9,651
35AC:  CALL   1178
35B0:  BNC   35C2
....................       { 
....................          tmp=Setpoint; 
35B2:  MOVFF  610,5EC
35B6:  MOVFF  60F,5EB
35BA:  MOVFF  60E,5EA
35BE:  MOVFF  60D,5E9
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
35C2:  MOVFF  5EC,650
35C6:  MOVFF  5EB,64F
35CA:  MOVFF  5EA,64E
35CE:  MOVFF  5E9,64D
35D2:  MOVLB  6
35D4:  CLRF   x54
35D6:  CLRF   x53
35D8:  CLRF   x52
35DA:  CLRF   x51
35DC:  MOVLB  0
35DE:  CALL   1178
35E2:  BNC   35F0
....................       { 
....................          tmp=0.0; 
35E4:  MOVLB  5
35E6:  CLRF   xEC
35E8:  CLRF   xEB
35EA:  CLRF   xEA
35EC:  CLRF   xE9
35EE:  MOVLB  0
....................       } 
....................     
....................       Tpulso=(tmp/Setpoint)*Tciclo; 
35F0:  MOVFF  5EC,651
35F4:  MOVFF  5EB,650
35F8:  MOVFF  5EA,64F
35FC:  MOVFF  5E9,64E
3600:  MOVFF  610,655
3604:  MOVFF  60F,654
3608:  MOVFF  60E,653
360C:  MOVFF  60D,652
3610:  CALL   0DA2
3614:  MOVFF  00,64D
3618:  MOVFF  01,64E
361C:  MOVFF  02,64F
3620:  MOVFF  03,650
3624:  MOVFF  03,670
3628:  MOVFF  02,66F
362C:  MOVFF  01,66E
3630:  MOVFF  00,66D
3634:  MOVFF  5D8,674
3638:  MOVFF  5D7,673
363C:  MOVFF  5D6,672
3640:  MOVFF  5D5,671
3644:  CALL   1BB8
3648:  MOVFF  03,5DC
364C:  MOVFF  02,5DB
3650:  MOVFF  01,5DA
3654:  MOVFF  00,5D9
....................        
....................                                           
....................       if(tiempoctrl<(int16)(Tpulso/0.005)) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
3658:  MOVFF  5DC,651
365C:  MOVFF  5DB,650
3660:  MOVFF  5DA,64F
3664:  MOVFF  5D9,64E
3668:  MOVLW  0A
366A:  MOVLB  6
366C:  MOVWF  x55
366E:  MOVLW  D7
3670:  MOVWF  x54
3672:  MOVLW  23
3674:  MOVWF  x53
3676:  MOVLW  77
3678:  MOVWF  x52
367A:  MOVLB  0
367C:  CALL   0DA2
3680:  MOVFF  03,650
3684:  MOVFF  02,64F
3688:  MOVFF  01,64E
368C:  MOVFF  00,64D
3690:  CALL   2372
3694:  MOVFF  02,03
3698:  MOVF   01,W
369A:  MOVLB  5
369C:  MOVF   xA6,W
369E:  SUBWF  02,W
36A0:  BNC   36B0
36A2:  BNZ   36AA
36A4:  MOVF   01,W
36A6:  SUBWF  xA5,W
36A8:  BC    36B0
....................       { 
....................          SSR_on; 
36AA:  BSF    F8B.2
36AC:  BCF    F94.2
....................       } 
....................       else          
36AE:  BRA    36B4
....................       { 
....................          SSR_off; 
36B0:  BCF    F8B.2
36B2:  BCF    F94.2
....................       } 
....................        
....................       if(tiempoctrl>=(int16)(Tciclo/0.005)) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
36B4:  MOVFF  5D8,651
36B8:  MOVFF  5D7,650
36BC:  MOVFF  5D6,64F
36C0:  MOVFF  5D5,64E
36C4:  MOVLW  0A
36C6:  MOVLB  6
36C8:  MOVWF  x55
36CA:  MOVLW  D7
36CC:  MOVWF  x54
36CE:  MOVLW  23
36D0:  MOVWF  x53
36D2:  MOVLW  77
36D4:  MOVWF  x52
36D6:  MOVLB  0
36D8:  CALL   0DA2
36DC:  MOVFF  03,650
36E0:  MOVFF  02,64F
36E4:  MOVFF  01,64E
36E8:  MOVFF  00,64D
36EC:  CALL   2372
36F0:  MOVF   02,W
36F2:  MOVWF  03
36F4:  MOVLB  5
36F6:  SUBWF  xA6,W
36F8:  BNC   3706
36FA:  BNZ   3702
36FC:  MOVF   01,W
36FE:  SUBWF  xA5,W
3700:  BNC   3706
....................       { 
....................          tiempoctrl=0; 
3702:  CLRF   xA6
3704:  CLRF   xA5
....................       } // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
....................              
....................    } 
....................     
.................... //--------------------------------------------------------------------------------------------------------------------//    
....................    
.................... } 
3706:  MOVLB  0
3708:  RETLW  00
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
1860:  MOVLB  6
1862:  MOVFF  64D,01
1866:  MOVFF  64E,03
186A:  MOVFF  64D,653
186E:  MOVFF  64E,654
1872:  MOVLW  06
1874:  MOVWF  FEA
1876:  MOVLW  2D
1878:  MOVWF  FE9
187A:  MOVFF  64E,FE2
187E:  MOVFF  64D,FE1
1882:  MOVF   FE7,F
1884:  MOVFF  FE6,FEE
1888:  BNZ   1882
....................    if(sombreado==2) 
188A:  MOVF   x51,W
188C:  SUBLW  02
188E:  BNZ   18B8
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
1890:  MOVLW  01
1892:  ADDWF  x4F,W
1894:  MOVWF  x53
1896:  MOVLW  01
1898:  ADDWF  x50,W
189A:  MOVWF  x54
189C:  MOVFF  653,662
18A0:  MOVWF  x63
18A2:  MOVLW  06
18A4:  MOVWF  x65
18A6:  MOVLW  2D
18A8:  MOVWF  x64
18AA:  MOVFF  652,666
18AE:  MOVLW  01
18B0:  MOVWF  x67
18B2:  MOVLB  0
18B4:  RCALL  14A8
18B6:  MOVLB  6
....................    if(sombreado==1) 
18B8:  DECFSZ x51,W
18BA:  BRA    1906
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
18BC:  MOVF   x52,W
18BE:  MULLW  08
18C0:  MOVF   FF3,W
18C2:  ADDWF  x50,W
18C4:  MOVWF  x53
18C6:  CLRF   x62
18C8:  MOVFF  650,663
18CC:  MOVLW  7F
18CE:  MOVWF  x64
18D0:  MOVFF  653,665
18D4:  MOVLW  01
18D6:  MOVWF  x66
18D8:  MOVWF  x67
18DA:  MOVLB  0
18DC:  RCALL  179E
18DE:  MOVLW  01
18E0:  MOVLB  6
18E2:  ADDWF  x4F,W
18E4:  MOVWF  x53
18E6:  MOVLW  01
18E8:  ADDWF  x50,W
18EA:  MOVWF  x54
18EC:  MOVFF  653,662
18F0:  MOVWF  x63
18F2:  MOVLW  06
18F4:  MOVWF  x65
18F6:  MOVLW  2D
18F8:  MOVWF  x64
18FA:  MOVFF  652,666
18FE:  CLRF   x67
1900:  MOVLB  0
1902:  RCALL  14A8
1904:  MOVLB  6
....................    if(sombreado==0) 
1906:  MOVF   x51,F
1908:  BNZ   1954
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
190A:  MOVF   x52,W
190C:  MULLW  08
190E:  MOVF   FF3,W
1910:  ADDWF  x50,W
1912:  MOVWF  x53
1914:  CLRF   x62
1916:  MOVFF  650,663
191A:  MOVLW  7F
191C:  MOVWF  x64
191E:  MOVFF  653,665
1922:  MOVLW  01
1924:  MOVWF  x66
1926:  CLRF   x67
1928:  MOVLB  0
192A:  RCALL  179E
192C:  MOVLW  01
192E:  MOVLB  6
1930:  ADDWF  x4F,W
1932:  MOVWF  x53
1934:  MOVLW  01
1936:  ADDWF  x50,W
1938:  MOVWF  x54
193A:  MOVFF  653,662
193E:  MOVWF  x63
1940:  MOVLW  06
1942:  MOVWF  x65
1944:  MOVLW  2D
1946:  MOVWF  x64
1948:  MOVFF  652,666
194C:  MOVLW  01
194E:  MOVWF  x67
1950:  MOVLB  0
1952:  RCALL  14A8
....................    glcd_update(); 
1954:  MOVLB  0
1956:  RCALL  128C
.................... } 
1958:  RETLW  00
....................  
.................... void displayTemps(char palabra[30], float digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==1) 
*
289C:  MOVLB  6
289E:  DECFSZ x55,W
28A0:  BRA    29DA
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
28A2:  MOVLW  06
28A4:  MOVWF  x4C
28A6:  MOVLW  57
28A8:  MOVWF  x4B
28AA:  MOVLW  42
28AC:  MOVWF  FE9
28AE:  MOVFF  652,663
28B2:  MOVFF  651,662
28B6:  MOVFF  650,661
28BA:  MOVFF  64F,660
28BE:  MOVLW  01
28C0:  MOVWF  x64
28C2:  MOVLB  0
28C4:  RCALL  26E8
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, ON); 
28C6:  MOVLW  02
28C8:  MOVLB  6
28CA:  SUBWF  x54,W
28CC:  MOVWF  x60
28CE:  MOVF   x56,W
28D0:  MULLW  08
28D2:  MOVF   FF3,W
28D4:  ADDWF  x54,W
28D6:  MOVWF  x61
28D8:  CLRF   x62
28DA:  MOVFF  660,663
28DE:  MOVLW  7F
28E0:  MOVWF  x64
28E2:  MOVFF  661,665
28E6:  MOVLW  01
28E8:  MOVWF  x66
28EA:  MOVWF  x67
28EC:  MOVLB  0
28EE:  CALL   179E
....................       strcpy(Menus.Letra,palabra); 
28F2:  MOVLB  6
28F4:  MOVFF  64D,01
28F8:  MOVFF  64E,03
28FC:  MOVFF  64D,660
2900:  MOVFF  64E,661
2904:  MOVLW  06
2906:  MOVWF  FEA
2908:  MOVLW  2D
290A:  MOVWF  FE9
290C:  MOVFF  64E,FE2
2910:  MOVFF  64D,FE1
2914:  MOVF   FE7,F
2916:  MOVFF  FE6,FEE
291A:  BNZ   2914
....................       glcd_text57(x+90, y+1, voltage, tamano, OFF); 
291C:  MOVLW  5A
291E:  ADDWF  x53,W
2920:  MOVWF  x60
2922:  MOVLW  01
2924:  ADDWF  x54,W
2926:  MOVWF  x61
2928:  MOVFF  660,662
292C:  MOVWF  x63
292E:  MOVLW  06
2930:  MOVWF  x65
2932:  MOVLW  57
2934:  MOVWF  x64
2936:  MOVFF  656,666
293A:  CLRF   x67
293C:  MOVLB  0
293E:  CALL   14A8
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF); 
2942:  MOVLW  01
2944:  MOVLB  6
2946:  ADDWF  x53,W
2948:  MOVWF  x60
294A:  MOVLW  01
294C:  ADDWF  x54,W
294E:  MOVWF  x61
2950:  MOVFF  660,662
2954:  MOVWF  x63
2956:  MOVLW  06
2958:  MOVWF  x65
295A:  MOVLW  2D
295C:  MOVWF  x64
295E:  MOVFF  656,666
2962:  CLRF   x67
2964:  MOVLB  0
2966:  CALL   14A8
....................       strcpy(Menus.Letra,"C"); 
296A:  MOVLW  06
296C:  MOVWF  FEA
296E:  MOVLW  2D
2970:  MOVWF  FE9
2972:  MOVFF  FF2,660
2976:  BCF    FF2.7
2978:  MOVLW  00
297A:  CALL   06BE
297E:  TBLRD*-
2980:  TBLRD*+
2982:  MOVF   FF5,W
2984:  MOVWF  FEE
2986:  IORLW  00
2988:  BNZ   2980
298A:  MOVLB  6
298C:  BTFSC  x60.7
298E:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, OFF); 
2990:  MOVLW  78
2992:  ADDWF  x53,W
2994:  MOVWF  x60
2996:  MOVLW  01
2998:  ADDWF  x54,W
299A:  MOVWF  x61
299C:  MOVFF  660,662
29A0:  MOVWF  x63
29A2:  MOVLW  06
29A4:  MOVWF  x65
29A6:  MOVLW  2D
29A8:  MOVWF  x64
29AA:  MOVFF  656,666
29AE:  CLRF   x67
29B0:  MOVLB  0
29B2:  CALL   14A8
....................       glcd_circle(x+115,y-1,1,NO,OFF); 
29B6:  MOVLW  73
29B8:  MOVLB  6
29BA:  ADDWF  x53,W
29BC:  MOVWF  x60
29BE:  MOVLW  01
29C0:  SUBWF  x54,W
29C2:  MOVWF  x61
29C4:  MOVFF  660,662
29C8:  MOVWF  x63
29CA:  MOVLW  01
29CC:  MOVWF  x64
29CE:  CLRF   x65
29D0:  CLRF   x66
29D2:  MOVLB  0
29D4:  CALL   2148
29D8:  MOVLB  6
....................    } 
....................    if(sombreado==0) 
29DA:  MOVF   x55,F
29DC:  BTFSS  FD8.2
29DE:  BRA    2B1C
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
29E0:  MOVLW  06
29E2:  MOVWF  x4C
29E4:  MOVLW  57
29E6:  MOVWF  x4B
29E8:  MOVLW  42
29EA:  MOVWF  FE9
29EC:  MOVFF  652,663
29F0:  MOVFF  651,662
29F4:  MOVFF  650,661
29F8:  MOVFF  64F,660
29FC:  MOVLW  01
29FE:  MOVWF  x64
2A00:  MOVLB  0
2A02:  RCALL  26E8
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, OFF); 
2A04:  MOVLW  02
2A06:  MOVLB  6
2A08:  SUBWF  x54,W
2A0A:  MOVWF  x60
2A0C:  MOVF   x56,W
2A0E:  MULLW  08
2A10:  MOVF   FF3,W
2A12:  ADDWF  x54,W
2A14:  MOVWF  x61
2A16:  CLRF   x62
2A18:  MOVFF  660,663
2A1C:  MOVLW  7F
2A1E:  MOVWF  x64
2A20:  MOVFF  661,665
2A24:  MOVLW  01
2A26:  MOVWF  x66
2A28:  CLRF   x67
2A2A:  MOVLB  0
2A2C:  CALL   179E
....................       strcpy(Menus.Letra,palabra); 
2A30:  MOVLB  6
2A32:  MOVFF  64D,01
2A36:  MOVFF  64E,03
2A3A:  MOVFF  64D,660
2A3E:  MOVFF  64E,661
2A42:  MOVLW  06
2A44:  MOVWF  FEA
2A46:  MOVLW  2D
2A48:  MOVWF  FE9
2A4A:  MOVFF  64E,FE2
2A4E:  MOVFF  64D,FE1
2A52:  MOVF   FE7,F
2A54:  MOVFF  FE6,FEE
2A58:  BNZ   2A52
....................       glcd_text57(x+90, y+1, voltage, tamano, ON); 
2A5A:  MOVLW  5A
2A5C:  ADDWF  x53,W
2A5E:  MOVWF  x60
2A60:  MOVLW  01
2A62:  ADDWF  x54,W
2A64:  MOVWF  x61
2A66:  MOVFF  660,662
2A6A:  MOVWF  x63
2A6C:  MOVLW  06
2A6E:  MOVWF  x65
2A70:  MOVLW  57
2A72:  MOVWF  x64
2A74:  MOVFF  656,666
2A78:  MOVLW  01
2A7A:  MOVWF  x67
2A7C:  MOVLB  0
2A7E:  CALL   14A8
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, ON); 
2A82:  MOVLW  01
2A84:  MOVLB  6
2A86:  ADDWF  x53,W
2A88:  MOVWF  x60
2A8A:  MOVLW  01
2A8C:  ADDWF  x54,W
2A8E:  MOVWF  x61
2A90:  MOVFF  660,662
2A94:  MOVWF  x63
2A96:  MOVLW  06
2A98:  MOVWF  x65
2A9A:  MOVLW  2D
2A9C:  MOVWF  x64
2A9E:  MOVFF  656,666
2AA2:  MOVLW  01
2AA4:  MOVWF  x67
2AA6:  MOVLB  0
2AA8:  CALL   14A8
....................       strcpy(Menus.Letra,"C"); 
2AAC:  MOVLW  06
2AAE:  MOVWF  FEA
2AB0:  MOVLW  2D
2AB2:  MOVWF  FE9
2AB4:  MOVFF  FF2,660
2AB8:  BCF    FF2.7
2ABA:  MOVLW  00
2ABC:  CALL   06BE
2AC0:  TBLRD*-
2AC2:  TBLRD*+
2AC4:  MOVF   FF5,W
2AC6:  MOVWF  FEE
2AC8:  IORLW  00
2ACA:  BNZ   2AC2
2ACC:  MOVLB  6
2ACE:  BTFSC  x60.7
2AD0:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, ON); 
2AD2:  MOVLW  78
2AD4:  ADDWF  x53,W
2AD6:  MOVWF  x60
2AD8:  MOVLW  01
2ADA:  ADDWF  x54,W
2ADC:  MOVWF  x61
2ADE:  MOVFF  660,662
2AE2:  MOVWF  x63
2AE4:  MOVLW  06
2AE6:  MOVWF  x65
2AE8:  MOVLW  2D
2AEA:  MOVWF  x64
2AEC:  MOVFF  656,666
2AF0:  MOVLW  01
2AF2:  MOVWF  x67
2AF4:  MOVLB  0
2AF6:  CALL   14A8
....................       glcd_circle(x+115,y-1,1,NO,ON); 
2AFA:  MOVLW  73
2AFC:  MOVLB  6
2AFE:  ADDWF  x53,W
2B00:  MOVWF  x60
2B02:  MOVLW  01
2B04:  SUBWF  x54,W
2B06:  MOVWF  x61
2B08:  MOVFF  660,662
2B0C:  MOVWF  x63
2B0E:  MOVLW  01
2B10:  MOVWF  x64
2B12:  CLRF   x65
2B14:  MOVWF  x66
2B16:  MOVLB  0
2B18:  CALL   2148
....................    } 
....................    glcd_update(); 
2B1C:  MOVLB  0
2B1E:  CALL   128C
.................... } 
2B22:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
2BAA:  MOVLB  6
2BAC:  MOVF   x51,W
2BAE:  SUBLW  02
2BB0:  BNZ   2C22
....................    { 
....................       sprintf(voltage, "%03u", digito); 
2BB2:  MOVLW  06
2BB4:  MOVWF  x4C
2BB6:  MOVLW  53
2BB8:  MOVWF  x4B
2BBA:  MOVFF  64E,65C
2BBE:  MOVLW  03
2BC0:  MOVWF  x5D
2BC2:  MOVLB  0
2BC4:  RCALL  2B24
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
2BC6:  MOVLB  6
2BC8:  MOVF   x52,W
2BCA:  MULLW  12
2BCC:  MOVF   FF3,W
2BCE:  ADDWF  x4F,W
2BD0:  MOVWF  x5C
2BD2:  MOVF   x52,W
2BD4:  MULLW  08
2BD6:  MOVF   FF3,W
2BD8:  ADDWF  x50,W
2BDA:  MOVWF  x5D
2BDC:  MOVFF  64F,662
2BE0:  MOVFF  650,663
2BE4:  MOVFF  65C,664
2BE8:  MOVWF  x65
2BEA:  MOVLW  01
2BEC:  MOVWF  x66
2BEE:  MOVWF  x67
2BF0:  MOVLB  0
2BF2:  CALL   179E
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
2BF6:  MOVLW  01
2BF8:  MOVLB  6
2BFA:  ADDWF  x4F,W
2BFC:  MOVWF  x5C
2BFE:  MOVLW  01
2C00:  ADDWF  x50,W
2C02:  MOVWF  x5D
2C04:  MOVFF  65C,662
2C08:  MOVWF  x63
2C0A:  MOVLW  06
2C0C:  MOVWF  x65
2C0E:  MOVLW  53
2C10:  MOVWF  x64
2C12:  MOVFF  652,666
2C16:  CLRF   x67
2C18:  MOVLB  0
2C1A:  CALL   14A8
....................    } 
....................    else 
2C1E:  BRA    2D66
2C20:  MOVLB  6
....................    { 
....................       if(sombreado==3) 
2C22:  MOVF   x51,W
2C24:  SUBLW  03
2C26:  BNZ   2C98
....................       { 
....................          sprintf(voltage, "%03u", digito); 
2C28:  MOVLW  06
2C2A:  MOVWF  x4C
2C2C:  MOVLW  53
2C2E:  MOVWF  x4B
2C30:  MOVFF  64E,65C
2C34:  MOVLW  03
2C36:  MOVWF  x5D
2C38:  MOVLB  0
2C3A:  RCALL  2B24
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
2C3C:  MOVLB  6
2C3E:  MOVF   x52,W
2C40:  MULLW  12
2C42:  MOVF   FF3,W
2C44:  ADDWF  x4F,W
2C46:  MOVWF  x5C
2C48:  MOVF   x52,W
2C4A:  MULLW  08
2C4C:  MOVF   FF3,W
2C4E:  ADDWF  x50,W
2C50:  MOVWF  x5D
2C52:  MOVFF  64F,662
2C56:  MOVFF  650,663
2C5A:  MOVFF  65C,664
2C5E:  MOVWF  x65
2C60:  MOVLW  01
2C62:  MOVWF  x66
2C64:  CLRF   x67
2C66:  MOVLB  0
2C68:  CALL   179E
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
2C6C:  MOVLW  01
2C6E:  MOVLB  6
2C70:  ADDWF  x4F,W
2C72:  MOVWF  x5C
2C74:  MOVLW  01
2C76:  ADDWF  x50,W
2C78:  MOVWF  x5D
2C7A:  MOVFF  65C,662
2C7E:  MOVWF  x63
2C80:  MOVLW  06
2C82:  MOVWF  x65
2C84:  MOVLW  53
2C86:  MOVWF  x64
2C88:  MOVFF  652,666
2C8C:  MOVLW  01
2C8E:  MOVWF  x67
2C90:  MOVLB  0
2C92:  CALL   14A8
2C96:  MOVLB  6
....................       } 
....................       sprintf(voltage, "%u", digito); 
2C98:  MOVLW  06
2C9A:  MOVWF  x4C
2C9C:  MOVLW  53
2C9E:  MOVWF  x4B
2CA0:  MOVFF  64E,65C
2CA4:  MOVLW  1B
2CA6:  MOVWF  x5D
2CA8:  MOVLB  0
2CAA:  RCALL  2B24
....................       if(sombreado==1) 
2CAC:  MOVLB  6
2CAE:  DECFSZ x51,W
2CB0:  BRA    2D0A
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
2CB2:  MOVF   x52,W
2CB4:  MULLW  05
2CB6:  MOVF   FF3,W
2CB8:  ADDWF  x4F,W
2CBA:  MOVWF  x5C
2CBC:  MOVF   x52,W
2CBE:  MULLW  08
2CC0:  MOVF   FF3,W
2CC2:  ADDWF  x50,W
2CC4:  MOVWF  x5D
2CC6:  MOVFF  64F,662
2CCA:  MOVFF  650,663
2CCE:  MOVFF  65C,664
2CD2:  MOVWF  x65
2CD4:  MOVLW  01
2CD6:  MOVWF  x66
2CD8:  MOVWF  x67
2CDA:  MOVLB  0
2CDC:  CALL   179E
2CE0:  MOVLW  01
2CE2:  MOVLB  6
2CE4:  ADDWF  x4F,W
2CE6:  MOVWF  x5C
2CE8:  MOVLW  01
2CEA:  ADDWF  x50,W
2CEC:  MOVWF  x5D
2CEE:  MOVFF  65C,662
2CF2:  MOVWF  x63
2CF4:  MOVLW  06
2CF6:  MOVWF  x65
2CF8:  MOVLW  53
2CFA:  MOVWF  x64
2CFC:  MOVFF  652,666
2D00:  CLRF   x67
2D02:  MOVLB  0
2D04:  CALL   14A8
2D08:  MOVLB  6
....................       if(sombreado==0) 
2D0A:  MOVF   x51,F
2D0C:  BNZ   2D68
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
2D0E:  MOVF   x52,W
2D10:  MULLW  05
2D12:  MOVF   FF3,W
2D14:  ADDWF  x4F,W
2D16:  MOVWF  x5C
2D18:  MOVF   x52,W
2D1A:  MULLW  08
2D1C:  MOVF   FF3,W
2D1E:  ADDWF  x50,W
2D20:  MOVWF  x5D
2D22:  MOVFF  64F,662
2D26:  MOVFF  650,663
2D2A:  MOVFF  65C,664
2D2E:  MOVWF  x65
2D30:  MOVLW  01
2D32:  MOVWF  x66
2D34:  CLRF   x67
2D36:  MOVLB  0
2D38:  CALL   179E
2D3C:  MOVLW  01
2D3E:  MOVLB  6
2D40:  ADDWF  x4F,W
2D42:  MOVWF  x5C
2D44:  MOVLW  01
2D46:  ADDWF  x50,W
2D48:  MOVWF  x5D
2D4A:  MOVFF  65C,662
2D4E:  MOVWF  x63
2D50:  MOVLW  06
2D52:  MOVWF  x65
2D54:  MOVLW  53
2D56:  MOVWF  x64
2D58:  MOVFF  652,666
2D5C:  MOVLW  01
2D5E:  MOVWF  x67
2D60:  MOVLB  0
2D62:  CALL   14A8
2D66:  MOVLB  6
....................    } 
....................    glcd_update(); 
2D68:  MOVLB  0
2D6A:  CALL   128C
.................... } 
2D6E:  RETLW  00
....................  
.................... void displayTemperatura(int16 digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
246C:  MOVLB  6
246E:  MOVF   x53,W
2470:  SUBLW  02
2472:  BNZ   24E8
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
2474:  MOVLW  06
2476:  MOVWF  x4C
2478:  MOVLW  55
247A:  MOVWF  x4B
247C:  MOVLW  0A
247E:  MOVWF  FE9
2480:  MOVFF  650,65F
2484:  MOVFF  64F,65E
2488:  MOVLB  0
248A:  RCALL  23AE
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
248C:  MOVLB  6
248E:  MOVF   x54,W
2490:  MULLW  12
2492:  MOVF   FF3,W
2494:  ADDWF  x51,W
2496:  MOVWF  x5E
2498:  MOVF   x54,W
249A:  MULLW  08
249C:  MOVF   FF3,W
249E:  ADDWF  x52,W
24A0:  MOVWF  x5F
24A2:  MOVFF  651,662
24A6:  MOVFF  652,663
24AA:  MOVFF  65E,664
24AE:  MOVWF  x65
24B0:  MOVLW  01
24B2:  MOVWF  x66
24B4:  MOVWF  x67
24B6:  MOVLB  0
24B8:  CALL   179E
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
24BC:  MOVLW  01
24BE:  MOVLB  6
24C0:  ADDWF  x51,W
24C2:  MOVWF  x5E
24C4:  MOVLW  01
24C6:  ADDWF  x52,W
24C8:  MOVWF  x5F
24CA:  MOVFF  65E,662
24CE:  MOVWF  x63
24D0:  MOVLW  06
24D2:  MOVWF  x65
24D4:  MOVLW  55
24D6:  MOVWF  x64
24D8:  MOVFF  654,666
24DC:  CLRF   x67
24DE:  MOVLB  0
24E0:  CALL   14A8
....................    } 
....................    else 
24E4:  BRA    261A
24E6:  MOVLB  6
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
24E8:  MOVLW  06
24EA:  MOVWF  x4C
24EC:  MOVLW  55
24EE:  MOVWF  x4B
24F0:  MOVLW  0A
24F2:  MOVWF  FE9
24F4:  MOVFF  650,65F
24F8:  MOVFF  64F,65E
24FC:  MOVLB  0
24FE:  RCALL  23AE
....................     
....................       if(sombreado==4) 
2500:  MOVLB  6
2502:  MOVF   x53,W
2504:  SUBLW  04
2506:  BNZ   2562
....................       { 
....................          glcd_rect(x, y, x+(tamano*16), y+(tamano*8), YES, OFF); 
2508:  MOVF   x54,W
250A:  MULLW  10
250C:  MOVF   FF3,W
250E:  ADDWF  x51,W
2510:  MOVWF  x5E
2512:  MOVF   x54,W
2514:  MULLW  08
2516:  MOVF   FF3,W
2518:  ADDWF  x52,W
251A:  MOVWF  x5F
251C:  MOVFF  651,662
2520:  MOVFF  652,663
2524:  MOVFF  65E,664
2528:  MOVWF  x65
252A:  MOVLW  01
252C:  MOVWF  x66
252E:  CLRF   x67
2530:  MOVLB  0
2532:  CALL   179E
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
2536:  MOVLW  01
2538:  MOVLB  6
253A:  ADDWF  x51,W
253C:  MOVWF  x5E
253E:  MOVLW  01
2540:  ADDWF  x52,W
2542:  MOVWF  x5F
2544:  MOVFF  65E,662
2548:  MOVWF  x63
254A:  MOVLW  06
254C:  MOVWF  x65
254E:  MOVLW  55
2550:  MOVWF  x64
2552:  MOVFF  654,666
2556:  MOVLW  01
2558:  MOVWF  x67
255A:  MOVLB  0
255C:  CALL   14A8
2560:  MOVLB  6
....................       } 
....................       if(sombreado==1) 
2562:  DECFSZ x53,W
2564:  BRA    25BE
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
2566:  MOVF   x54,W
2568:  MULLW  05
256A:  MOVF   FF3,W
256C:  ADDWF  x51,W
256E:  MOVWF  x5E
2570:  MOVF   x54,W
2572:  MULLW  08
2574:  MOVF   FF3,W
2576:  ADDWF  x52,W
2578:  MOVWF  x5F
257A:  MOVFF  651,662
257E:  MOVFF  652,663
2582:  MOVFF  65E,664
2586:  MOVWF  x65
2588:  MOVLW  01
258A:  MOVWF  x66
258C:  MOVWF  x67
258E:  MOVLB  0
2590:  CALL   179E
2594:  MOVLW  01
2596:  MOVLB  6
2598:  ADDWF  x51,W
259A:  MOVWF  x5E
259C:  MOVLW  01
259E:  ADDWF  x52,W
25A0:  MOVWF  x5F
25A2:  MOVFF  65E,662
25A6:  MOVWF  x63
25A8:  MOVLW  06
25AA:  MOVWF  x65
25AC:  MOVLW  55
25AE:  MOVWF  x64
25B0:  MOVFF  654,666
25B4:  CLRF   x67
25B6:  MOVLB  0
25B8:  CALL   14A8
25BC:  MOVLB  6
....................       if(sombreado==0) 
25BE:  MOVF   x53,F
25C0:  BNZ   261C
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
25C2:  MOVF   x54,W
25C4:  MULLW  05
25C6:  MOVF   FF3,W
25C8:  ADDWF  x51,W
25CA:  MOVWF  x5E
25CC:  MOVF   x54,W
25CE:  MULLW  08
25D0:  MOVF   FF3,W
25D2:  ADDWF  x52,W
25D4:  MOVWF  x5F
25D6:  MOVFF  651,662
25DA:  MOVFF  652,663
25DE:  MOVFF  65E,664
25E2:  MOVWF  x65
25E4:  MOVLW  01
25E6:  MOVWF  x66
25E8:  CLRF   x67
25EA:  MOVLB  0
25EC:  CALL   179E
25F0:  MOVLW  01
25F2:  MOVLB  6
25F4:  ADDWF  x51,W
25F6:  MOVWF  x5E
25F8:  MOVLW  01
25FA:  ADDWF  x52,W
25FC:  MOVWF  x5F
25FE:  MOVFF  65E,662
2602:  MOVWF  x63
2604:  MOVLW  06
2606:  MOVWF  x65
2608:  MOVLW  55
260A:  MOVWF  x64
260C:  MOVFF  654,666
2610:  MOVLW  01
2612:  MOVWF  x67
2614:  MOVLB  0
2616:  CALL   14A8
261A:  MOVLB  6
....................    } 
....................    glcd_update(); 
261C:  MOVLB  0
261E:  CALL   128C
.................... } 
2622:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
2D70:  MOVLB  6
2D72:  MOVF   x4D,W
2D74:  SUBLW  05
2D76:  BNZ   2E1C
....................    for( i = 0 ; i < 64 ; i ++ ) 
2D78:  CLRF   x4E
2D7A:  MOVF   x4E,W
2D7C:  SUBLW  3F
2D7E:  BNC   2E1C
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
2D80:  CLRF   x4F
2D82:  MOVF   x4F,W
2D84:  SUBLW  0F
2D86:  BNC   2E18
....................       {     
....................          for(k=7;k>-1;k--) 
2D88:  MOVLW  07
2D8A:  MOVWF  x50
2D8C:  MOVF   x50,W
2D8E:  XORLW  80
2D90:  SUBLW  7F
2D92:  BC    2E14
....................          {       
....................             if( bit_test(Horno[i][j] ,7-k ))  
2D94:  CLRF   x52
2D96:  MOVFF  64E,651
2D9A:  CLRF   x54
2D9C:  MOVLW  10
2D9E:  MOVWF  x53
2DA0:  MOVLB  0
2DA2:  CALL   1B96
2DA6:  MOVFF  02,652
2DAA:  MOVFF  01,651
2DAE:  MOVLB  6
2DB0:  MOVF   x4F,W
2DB2:  ADDWF  01,W
2DB4:  MOVWF  01
2DB6:  MOVLW  00
2DB8:  ADDWFC 02,W
2DBA:  MOVWF  03
2DBC:  MOVF   01,W
2DBE:  MOVFF  FF2,651
2DC2:  BCF    FF2.7
2DC4:  MOVFF  03,FF7
2DC8:  MOVLB  0
2DCA:  CALL   02A6
2DCE:  MOVLB  6
2DD0:  BTFSC  x51.7
2DD2:  BSF    FF2.7
2DD4:  MOVWF  x51
2DD6:  MOVLW  07
2DD8:  BSF    FD8.0
2DDA:  SUBFWB x50,W
2DDC:  MOVWF  x52
2DDE:  MOVFF  651,00
2DE2:  MOVF   x52,W
2DE4:  MOVWF  01
2DE6:  BZ    2DF0
2DE8:  BCF    FD8.0
2DEA:  RRCF   00,F
2DEC:  DECFSZ 01,F
2DEE:  BRA    2DE8
2DF0:  BTFSS  00.0
2DF2:  BRA    2E10
....................                glcd_pixel( j*8+k,i, ON ); 
2DF4:  MOVF   x4F,W
2DF6:  MULLW  08
2DF8:  MOVF   FF3,W
2DFA:  ADDWF  x50,W
2DFC:  MOVWF  x51
2DFE:  MOVWF  x7E
2E00:  MOVFF  64E,67F
2E04:  MOVLW  01
2E06:  MOVWF  x80
2E08:  MOVLB  0
2E0A:  CALL   13EC
2E0E:  MOVLB  6
....................          }   
2E10:  DECF   x50,F
2E12:  BRA    2D8C
....................       } 
2E14:  INCF   x4F,F
2E16:  BRA    2D82
....................    } 
2E18:  INCF   x4E,F
2E1A:  BRA    2D7A
....................    } 
....................     
.................... } 
2E1C:  MOVLB  0
2E1E:  GOTO   64E4 (RETURN)
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(5536); 
*
0CB4:  MOVLW  15
0CB6:  MOVWF  FCF
0CB8:  MOVLW  A0
0CBA:  MOVWF  FCE
....................    tiempos++; 
0CBC:  MOVLB  5
0CBE:  INCF   xA1,F
0CC0:  BTFSC  FD8.2
0CC2:  INCF   xA2,F
....................    tiempos3++; 
0CC4:  INCF   xA3,F
0CC6:  BTFSC  FD8.2
0CC8:  INCF   xA4,F
....................    tiempoctrl++; 
0CCA:  INCF   xA5,F
0CCC:  BTFSC  FD8.2
0CCE:  INCF   xA6,F
....................     
....................    if(tiempos3>=200) 
0CD0:  MOVF   xA4,F
0CD2:  BNZ   0CDA
0CD4:  MOVF   xA3,W
0CD6:  SUBLW  C7
0CD8:  BC    0CDE
....................    { 
....................       Lectura2=1; 
0CDA:  MOVLW  01
0CDC:  MOVWF  x91
....................    } 
....................      
....................    if(tiempos>=200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
0CDE:  MOVF   xA2,F
0CE0:  BNZ   0CE8
0CE2:  MOVF   xA1,W
0CE4:  SUBLW  C7
0CE6:  BC    0D12
....................    {tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++; 
0CE8:  CLRF   xA2
0CEA:  CLRF   xA1
0CEC:  BSF    x87.5
0CEE:  INCF   x95,F
0CF0:  INCF   x9B,F
0CF2:  INCF   x8D,F
....................     
....................       if(flag_setpoint==1) 
0CF4:  BTFSS  x93.4
0CF6:  BRA    0CFE
....................          tiemposetpoint++; 
0CF8:  INCF   xAB,F
0CFA:  BTFSC  FD8.2
0CFC:  INCF   xAC,F
....................           
....................       if(tiempo_esterilizacion==1) 
0CFE:  DECFSZ x9D,W
0D00:  BRA    0D08
....................       {                
....................          tinicio++; 
0D02:  INCF   xA7,F
0D04:  BTFSC  FD8.2
0D06:  INCF   xA8,F
....................       } 
....................        
....................       if(flag_tiempocalentamiento==1) 
0D08:  BTFSS  x93.2
0D0A:  BRA    0D12
....................       { 
....................          tiempocalentamiento++; 
0D0C:  INCF   xA9,F
0D0E:  BTFSC  FD8.2
0D10:  INCF   xAA,F
....................       } 
....................    }         
.................... } 
....................     
0D12:  BCF    F9E.0
0D14:  MOVLB  0
0D16:  GOTO   0054
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
.................... } 
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
370A:  MOVLW  06
370C:  MOVLB  6
370E:  MOVWF  x4C
3710:  MOVLW  54
3712:  MOVWF  x4B
3714:  MOVLW  42
3716:  MOVWF  FE9
3718:  MOVFF  650,663
371C:  MOVFF  64F,662
3720:  MOVFF  64E,661
3724:  MOVFF  64D,660
3728:  MOVLW  01
372A:  MOVWF  x64
372C:  MOVLB  0
372E:  CALL   26E8
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
3732:  MOVLB  6
3734:  MOVF   x53,W
3736:  MULLW  1B
3738:  MOVF   FF3,W
373A:  ADDWF  x51,W
373C:  MOVWF  x5D
373E:  MOVF   x53,W
3740:  MULLW  08
3742:  MOVF   FF3,W
3744:  ADDWF  x52,W
3746:  MOVWF  x5E
3748:  MOVFF  651,662
374C:  MOVFF  652,663
3750:  MOVFF  65D,664
3754:  MOVWF  x65
3756:  MOVLW  01
3758:  MOVWF  x66
375A:  CLRF   x67
375C:  MOVLB  0
375E:  CALL   179E
....................    glcd_text57(x, y, voltage, w, ON); 
3762:  MOVFF  651,662
3766:  MOVFF  652,663
376A:  MOVLW  06
376C:  MOVLB  6
376E:  MOVWF  x65
3770:  MOVLW  54
3772:  MOVWF  x64
3774:  MOVFF  653,666
3778:  MOVLW  01
377A:  MOVWF  x67
377C:  MOVLB  0
377E:  CALL   14A8
.................... } 
3782:  RETLW  00
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
1A86:  MOVLW  06
1A88:  MOVLB  6
1A8A:  MOVWF  x4C
1A8C:  MOVLW  53
1A8E:  MOVWF  x4B
1A90:  MOVFF  64F,65C
1A94:  MOVLW  1F
1A96:  MOVWF  x5D
1A98:  MOVLB  0
1A9A:  BRA    19A6
....................     
....................    if(sombreado==1) 
1A9C:  MOVLB  6
1A9E:  DECFSZ x52,W
1AA0:  BRA    1AF0
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
1AA2:  MOVLW  12
1AA4:  ADDWF  x50,W
1AA6:  MOVWF  x5C
1AA8:  MOVLW  18
1AAA:  ADDWF  x51,W
1AAC:  MOVWF  x5D
1AAE:  MOVFF  650,662
1AB2:  MOVFF  651,663
1AB6:  MOVFF  65C,664
1ABA:  MOVWF  x65
1ABC:  MOVLW  01
1ABE:  MOVWF  x66
1AC0:  MOVWF  x67
1AC2:  MOVLB  0
1AC4:  RCALL  179E
1AC6:  MOVLW  02
1AC8:  MOVLB  6
1ACA:  ADDWF  x50,W
1ACC:  MOVWF  x5C
1ACE:  MOVLW  01
1AD0:  ADDWF  x51,W
1AD2:  MOVWF  x5D
1AD4:  MOVFF  65C,662
1AD8:  MOVWF  x63
1ADA:  MOVLW  06
1ADC:  MOVWF  x65
1ADE:  MOVLW  53
1AE0:  MOVWF  x64
1AE2:  MOVLW  02
1AE4:  MOVWF  x66
1AE6:  CLRF   x67
1AE8:  MOVLB  0
1AEA:  RCALL  14A8
....................    else    
1AEC:  BRA    1B3A
1AEE:  MOVLB  6
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
1AF0:  MOVLW  12
1AF2:  ADDWF  x50,W
1AF4:  MOVWF  x5C
1AF6:  MOVLW  18
1AF8:  ADDWF  x51,W
1AFA:  MOVWF  x5D
1AFC:  MOVFF  650,662
1B00:  MOVFF  651,663
1B04:  MOVFF  65C,664
1B08:  MOVWF  x65
1B0A:  CLRF   x66
1B0C:  CLRF   x67
1B0E:  MOVLB  0
1B10:  RCALL  179E
1B12:  MOVLW  02
1B14:  MOVLB  6
1B16:  ADDWF  x50,W
1B18:  MOVWF  x5C
1B1A:  MOVLW  01
1B1C:  ADDWF  x51,W
1B1E:  MOVWF  x5D
1B20:  MOVFF  65C,662
1B24:  MOVWF  x63
1B26:  MOVLW  06
1B28:  MOVWF  x65
1B2A:  MOVLW  53
1B2C:  MOVWF  x64
1B2E:  MOVLW  02
1B30:  MOVWF  x66
1B32:  MOVLW  01
1B34:  MOVWF  x67
1B36:  MOVLB  0
1B38:  RCALL  14A8
....................  
.................... } 
1B3A:  RETLW  00
....................  
....................  
.................... void main() 
.................... { 
*
3784:  CLRF   FF8
3786:  BCF    FD0.7
3788:  BSF    07.7
378A:  CLRF   FEA
378C:  CLRF   FE9
378E:  MOVLB  5
3790:  BCF    x86.0
3792:  BCF    x86.1
3794:  BCF    x86.2
3796:  BCF    x86.3
3798:  BCF    x86.4
379A:  BCF    x86.5
379C:  BCF    x86.6
379E:  BCF    x86.7
37A0:  BCF    x87.0
37A2:  CLRF   x88
37A4:  CLRF   x89
37A6:  CLRF   x8A
37A8:  CLRF   x8B
37AA:  MOVLW  0A
37AC:  MOVWF  x8C
37AE:  CLRF   x8D
37B0:  CLRF   x8E
37B2:  CLRF   x8F
37B4:  MOVLW  03
37B6:  MOVWF  x90
37B8:  CLRF   x91
37BA:  CLRF   x92
37BC:  BCF    x87.1
37BE:  BCF    x87.2
37C0:  BCF    x87.3
37C2:  BSF    x87.4
37C4:  BCF    x87.5
37C6:  BCF    x87.6
37C8:  BCF    x87.7
37CA:  BCF    x93.0
37CC:  BCF    x93.1
37CE:  BCF    x93.2
37D0:  BCF    x93.3
37D2:  BCF    x93.4
37D4:  BCF    x93.5
37D6:  CLRF   x94
37D8:  CLRF   x95
37DA:  CLRF   x96
37DC:  MOVLW  01
37DE:  MOVWF  x97
37E0:  CLRF   x98
37E2:  CLRF   x99
37E4:  CLRF   x9A
37E6:  CLRF   x9B
37E8:  MOVWF  x9C
37EA:  CLRF   x9D
37EC:  CLRF   x9E
37EE:  CLRF   x9F
37F0:  CLRF   xA0
37F2:  CLRF   xA2
37F4:  CLRF   xA1
37F6:  CLRF   xA4
37F8:  CLRF   xA3
37FA:  CLRF   xA6
37FC:  CLRF   xA5
37FE:  CLRF   xA8
3800:  CLRF   xA7
3802:  CLRF   xAA
3804:  CLRF   xA9
3806:  CLRF   xAC
3808:  CLRF   xAB
380A:  CLRF   xB0
380C:  CLRF   xAF
380E:  CLRF   xAE
3810:  CLRF   xAD
3812:  CLRF   xB4
3814:  CLRF   xB3
3816:  CLRF   xB2
3818:  CLRF   xB1
381A:  CLRF   xB8
381C:  CLRF   xB7
381E:  CLRF   xB6
3820:  CLRF   xB5
3822:  CLRF   xCC
3824:  CLRF   xCB
3826:  CLRF   xCA
3828:  CLRF   xC9
382A:  CLRF   xD0
382C:  MOVLW  40
382E:  MOVWF  xCF
3830:  MOVLW  1C
3832:  MOVWF  xCE
3834:  MOVLW  8C
3836:  MOVWF  xCD
3838:  CLRF   xD8
383A:  CLRF   xD7
383C:  MOVLW  20
383E:  MOVWF  xD6
3840:  MOVLW  82
3842:  MOVWF  xD5
3844:  CLRF   xDC
3846:  CLRF   xDB
3848:  CLRF   xDA
384A:  CLRF   xD9
384C:  CLRF   xE0
384E:  CLRF   xDF
3850:  CLRF   xDE
3852:  CLRF   xDD
3854:  CLRF   xE4
3856:  CLRF   xE3
3858:  CLRF   xE2
385A:  CLRF   xE1
385C:  CLRF   xE8
385E:  CLRF   xE7
3860:  CLRF   xE6
3862:  CLRF   xE5
3864:  CLRF   xEC
3866:  CLRF   xEB
3868:  CLRF   xEA
386A:  CLRF   xE9
386C:  CLRF   xF0
386E:  CLRF   xEF
3870:  MOVLW  48
3872:  MOVWF  xEE
3874:  MOVLW  83
3876:  MOVWF  xED
3878:  CLRF   xF4
387A:  CLRF   xF3
387C:  MOVLW  20
387E:  MOVWF  xF2
3880:  MOVLW  83
3882:  MOVWF  xF1
3884:  CLRF   xF8
3886:  CLRF   xF7
3888:  CLRF   xF6
388A:  MOVLW  7F
388C:  MOVWF  xF5
388E:  CLRF   xFC
3890:  CLRF   xFB
3892:  MOVLW  18
3894:  MOVWF  xFA
3896:  MOVLW  84
3898:  MOVWF  xF9
389A:  MOVLB  6
389C:  CLRF   x00
389E:  MOVLB  5
38A0:  CLRF   xFF
38A2:  CLRF   xFE
38A4:  CLRF   xFD
38A6:  MOVLB  6
38A8:  CLRF   x04
38AA:  CLRF   x03
38AC:  CLRF   x02
38AE:  CLRF   x01
38B0:  CLRF   x08
38B2:  CLRF   x07
38B4:  MOVLW  20
38B6:  MOVWF  x06
38B8:  MOVLW  82
38BA:  MOVWF  x05
38BC:  CLRF   x0C
38BE:  CLRF   x0B
38C0:  CLRF   x0A
38C2:  CLRF   x09
38C4:  CLRF   x10
38C6:  CLRF   x0F
38C8:  CLRF   x0E
38CA:  CLRF   x0D
38CC:  CLRF   x14
38CE:  CLRF   x13
38D0:  CLRF   x12
38D2:  CLRF   x11
38D4:  CLRF   x18
38D6:  CLRF   x17
38D8:  CLRF   x16
38DA:  CLRF   x15
38DC:  CLRF   x1C
38DE:  CLRF   x1B
38E0:  CLRF   x1A
38E2:  CLRF   x19
38E4:  CLRF   x20
38E6:  CLRF   x1F
38E8:  CLRF   x1E
38EA:  CLRF   x1D
38EC:  MOVLW  E0
38EE:  MOVWF  x24
38F0:  MOVLW  2D
38F2:  MOVWF  x23
38F4:  MOVLW  10
38F6:  MOVWF  x22
38F8:  MOVLW  75
38FA:  MOVWF  x21
38FC:  MOVLW  FF
38FE:  MOVWF  x28
3900:  MOVLW  21
3902:  MOVWF  x27
3904:  MOVLW  15
3906:  MOVWF  x26
3908:  MOVLW  80
390A:  MOVWF  x25
390C:  MOVLW  82
390E:  MOVWF  x2C
3910:  MOVLW  12
3912:  MOVWF  x2B
3914:  MOVLW  F4
3916:  MOVWF  x2A
3918:  MOVLW  86
391A:  MOVWF  x29
391C:  MOVF   FC1,W
391E:  ANDLW  C0
3920:  IORLW  0F
3922:  MOVWF  FC1
3924:  MOVLW  07
3926:  MOVWF  FB4
3928:  MOVLB  4
392A:  CLRF   x16
392C:  CLRF   x17
392E:  CLRF   x18
3930:  CLRF   x19
3932:  CLRF   x1A
3934:  CLRF   x1B
3936:  CLRF   x1C
3938:  CLRF   x1D
393A:  CLRF   x1E
393C:  CLRF   x1F
393E:  CLRF   x20
3940:  CLRF   x21
3942:  CLRF   x22
3944:  CLRF   x23
3946:  CLRF   x24
3948:  CLRF   x25
394A:  CLRF   x26
394C:  CLRF   x27
394E:  CLRF   x28
3950:  CLRF   x29
3952:  CLRF   x2A
3954:  CLRF   x2B
3956:  CLRF   x2C
3958:  CLRF   x2D
395A:  CLRF   x2E
395C:  CLRF   x2F
395E:  CLRF   x30
3960:  CLRF   x31
3962:  CLRF   x32
3964:  CLRF   x33
3966:  CLRF   x34
3968:  CLRF   x35
396A:  CLRF   x36
396C:  CLRF   x37
396E:  CLRF   x38
3970:  CLRF   x39
3972:  CLRF   x3A
3974:  CLRF   x3B
3976:  CLRF   x3C
3978:  CLRF   x3D
397A:  CLRF   x3E
397C:  CLRF   x3F
397E:  CLRF   x40
3980:  CLRF   x41
3982:  CLRF   x42
3984:  CLRF   x43
3986:  CLRF   x44
3988:  CLRF   x45
398A:  CLRF   x46
398C:  CLRF   x47
398E:  CLRF   x48
3990:  CLRF   x49
3992:  CLRF   x4A
3994:  CLRF   x4B
3996:  CLRF   x4C
3998:  CLRF   x4D
399A:  CLRF   x4E
399C:  CLRF   x4F
399E:  CLRF   x50
39A0:  CLRF   x51
39A2:  CLRF   x52
39A4:  CLRF   x53
39A6:  CLRF   x54
39A8:  CLRF   x55
39AA:  CLRF   x56
39AC:  CLRF   x57
39AE:  CLRF   x58
39B0:  CLRF   x59
39B2:  CLRF   x5A
39B4:  CLRF   x5B
39B6:  CLRF   x5C
39B8:  CLRF   x5D
39BA:  CLRF   x5E
39BC:  CLRF   x5F
39BE:  CLRF   x60
39C0:  CLRF   x61
39C2:  CLRF   x62
39C4:  CLRF   x63
39C6:  CLRF   x64
39C8:  CLRF   x65
39CA:  CLRF   x66
39CC:  CLRF   x67
39CE:  CLRF   x68
39D0:  CLRF   x69
39D2:  CLRF   x6A
39D4:  CLRF   x6B
39D6:  CLRF   x6C
39D8:  CLRF   x6D
39DA:  CLRF   x6E
39DC:  CLRF   x6F
39DE:  CLRF   x70
39E0:  CLRF   x71
39E2:  CLRF   x72
39E4:  CLRF   x73
39E6:  CLRF   x74
39E8:  CLRF   x75
39EA:  CLRF   x76
39EC:  CLRF   x77
39EE:  CLRF   x78
39F0:  CLRF   x79
39F2:  CLRF   x7A
39F4:  CLRF   x7B
39F6:  CLRF   x7C
39F8:  CLRF   x7D
39FA:  CLRF   x7E
39FC:  CLRF   x7F
39FE:  CLRF   x80
3A00:  CLRF   x81
3A02:  CLRF   x82
3A04:  CLRF   x83
3A06:  CLRF   x84
3A08:  CLRF   x85
3A0A:  CLRF   x86
3A0C:  CLRF   x87
3A0E:  CLRF   x88
3A10:  CLRF   x89
3A12:  CLRF   x8A
3A14:  CLRF   x8B
3A16:  CLRF   x8C
3A18:  CLRF   x8D
3A1A:  CLRF   x8E
3A1C:  CLRF   x8F
3A1E:  CLRF   x90
3A20:  CLRF   x91
3A22:  CLRF   x92
3A24:  CLRF   x93
3A26:  CLRF   x94
3A28:  CLRF   x95
3A2A:  CLRF   x96
3A2C:  CLRF   x97
3A2E:  CLRF   x98
3A30:  CLRF   x99
3A32:  CLRF   x9A
3A34:  CLRF   x9B
3A36:  CLRF   x9C
3A38:  CLRF   x9D
3A3A:  CLRF   x9E
3A3C:  CLRF   x9F
3A3E:  CLRF   xA0
3A40:  CLRF   xA1
3A42:  CLRF   xA2
3A44:  CLRF   xA3
3A46:  CLRF   xA4
3A48:  CLRF   xA5
3A4A:  CLRF   xA6
3A4C:  CLRF   xA7
3A4E:  CLRF   xA8
3A50:  CLRF   xA9
3A52:  CLRF   xAA
3A54:  CLRF   xAB
3A56:  CLRF   xAC
3A58:  CLRF   xAD
3A5A:  CLRF   xAE
3A5C:  CLRF   xAF
3A5E:  CLRF   xB0
3A60:  CLRF   xB1
3A62:  CLRF   xB2
3A64:  CLRF   xB3
3A66:  CLRF   xB4
3A68:  CLRF   xB5
3A6A:  CLRF   xB6
3A6C:  CLRF   xB7
3A6E:  CLRF   xB8
3A70:  CLRF   xB9
3A72:  CLRF   xBA
3A74:  CLRF   xBB
3A76:  CLRF   xBC
3A78:  CLRF   xBD
3A7A:  CLRF   xBE
3A7C:  CLRF   xBF
3A7E:  CLRF   xC0
3A80:  CLRF   xC1
3A82:  CLRF   xC2
3A84:  CLRF   xC3
3A86:  CLRF   xC4
3A88:  CLRF   xC5
3A8A:  CLRF   xC6
3A8C:  CLRF   xC7
3A8E:  CLRF   xC8
3A90:  CLRF   xC9
3A92:  CLRF   xCA
3A94:  CLRF   xCB
3A96:  CLRF   xCC
3A98:  CLRF   xCD
3A9A:  CLRF   xCE
3A9C:  CLRF   xCF
3A9E:  CLRF   xD0
3AA0:  CLRF   xD1
3AA2:  CLRF   xD2
3AA4:  CLRF   xD3
3AA6:  CLRF   xD4
3AA8:  CLRF   xD5
3AAA:  CLRF   xD6
3AAC:  CLRF   xD7
3AAE:  CLRF   xD8
3AB0:  CLRF   xD9
3AB2:  CLRF   xDA
3AB4:  CLRF   xDB
3AB6:  CLRF   xDC
3AB8:  CLRF   xDD
3ABA:  CLRF   xDE
3ABC:  CLRF   xDF
3ABE:  CLRF   xE0
3AC0:  CLRF   xE1
3AC2:  CLRF   xE2
3AC4:  CLRF   xE3
3AC6:  CLRF   xE4
3AC8:  CLRF   xE5
3ACA:  CLRF   xE6
3ACC:  CLRF   xE7
3ACE:  CLRF   xE8
3AD0:  CLRF   xE9
3AD2:  CLRF   xEA
3AD4:  CLRF   xEB
3AD6:  CLRF   xEC
3AD8:  CLRF   xED
3ADA:  CLRF   xEE
3ADC:  CLRF   xEF
3ADE:  CLRF   xF0
3AE0:  CLRF   xF1
3AE2:  CLRF   xF2
3AE4:  CLRF   xF3
3AE6:  CLRF   xF4
3AE8:  CLRF   xF5
3AEA:  CLRF   xF6
3AEC:  CLRF   xF7
3AEE:  CLRF   xF8
3AF0:  CLRF   xF9
3AF2:  CLRF   xFA
3AF4:  CLRF   xFB
3AF6:  CLRF   xFC
3AF8:  CLRF   xFD
3AFA:  CLRF   xFE
3AFC:  CLRF   xFF
3AFE:  MOVLB  5
3B00:  CLRF   x00
3B02:  CLRF   x01
3B04:  CLRF   x02
3B06:  CLRF   x03
3B08:  CLRF   x04
3B0A:  CLRF   x05
3B0C:  CLRF   x06
3B0E:  CLRF   x07
3B10:  CLRF   x08
3B12:  CLRF   x09
3B14:  CLRF   x0A
3B16:  CLRF   x0B
3B18:  CLRF   x0C
3B1A:  CLRF   x0D
3B1C:  CLRF   x0E
3B1E:  CLRF   x0F
3B20:  CLRF   x10
3B22:  CLRF   x11
3B24:  CLRF   x12
3B26:  CLRF   x13
3B28:  CLRF   x14
3B2A:  CLRF   x15
3B2C:  CLRF   x16
3B2E:  CLRF   x17
3B30:  CLRF   x18
3B32:  CLRF   x19
3B34:  CLRF   x1A
3B36:  CLRF   x1B
3B38:  CLRF   x1C
3B3A:  CLRF   x1D
3B3C:  CLRF   x1E
3B3E:  CLRF   x1F
3B40:  CLRF   x20
3B42:  CLRF   x21
3B44:  CLRF   x22
3B46:  CLRF   x23
3B48:  CLRF   x24
3B4A:  CLRF   x25
3B4C:  CLRF   x26
3B4E:  CLRF   x27
3B50:  CLRF   x28
3B52:  CLRF   x29
3B54:  CLRF   x2A
3B56:  CLRF   x2B
3B58:  CLRF   x2C
3B5A:  CLRF   x2D
3B5C:  CLRF   x2E
3B5E:  CLRF   x2F
3B60:  CLRF   x30
3B62:  CLRF   x31
3B64:  CLRF   x32
3B66:  CLRF   x33
3B68:  CLRF   x34
3B6A:  CLRF   x35
3B6C:  CLRF   x36
3B6E:  CLRF   x37
3B70:  CLRF   x38
3B72:  CLRF   x39
3B74:  CLRF   x3A
3B76:  CLRF   x3B
3B78:  CLRF   x3C
3B7A:  CLRF   x3D
3B7C:  CLRF   x3E
3B7E:  CLRF   x3F
3B80:  CLRF   x40
3B82:  CLRF   x41
3B84:  CLRF   x42
3B86:  CLRF   x43
3B88:  CLRF   x44
3B8A:  CLRF   x45
3B8C:  CLRF   x46
3B8E:  CLRF   x47
3B90:  CLRF   x48
3B92:  CLRF   x49
3B94:  CLRF   x4A
3B96:  CLRF   x4B
3B98:  CLRF   x4C
3B9A:  CLRF   x4D
3B9C:  CLRF   x4E
3B9E:  CLRF   x4F
3BA0:  CLRF   x50
3BA2:  CLRF   x51
3BA4:  CLRF   x52
3BA6:  CLRF   x53
3BA8:  CLRF   x54
3BAA:  CLRF   x55
3BAC:  CLRF   x56
3BAE:  CLRF   x57
3BB0:  CLRF   x58
3BB2:  CLRF   x59
3BB4:  CLRF   x5A
3BB6:  CLRF   x5B
3BB8:  CLRF   x5C
3BBA:  CLRF   x5D
3BBC:  CLRF   x5E
3BBE:  CLRF   x5F
3BC0:  CLRF   x60
3BC2:  CLRF   x61
3BC4:  CLRF   x62
3BC6:  CLRF   x63
3BC8:  CLRF   x64
3BCA:  CLRF   x65
3BCC:  CLRF   x66
3BCE:  CLRF   x67
3BD0:  CLRF   x68
3BD2:  CLRF   x69
3BD4:  CLRF   x6A
3BD6:  CLRF   x6B
3BD8:  CLRF   x6C
3BDA:  CLRF   x6D
3BDC:  CLRF   x6E
3BDE:  CLRF   x6F
3BE0:  CLRF   x70
3BE2:  CLRF   x71
3BE4:  CLRF   x72
3BE6:  CLRF   x73
3BE8:  CLRF   x74
3BEA:  CLRF   x75
3BEC:  CLRF   x76
3BEE:  CLRF   x77
3BF0:  CLRF   x78
3BF2:  CLRF   x79
3BF4:  CLRF   x7A
3BF6:  CLRF   x7B
3BF8:  CLRF   x7C
3BFA:  CLRF   x7D
3BFC:  CLRF   x7E
3BFE:  CLRF   x7F
3C00:  CLRF   x80
3C02:  CLRF   x81
3C04:  CLRF   x82
3C06:  CLRF   x83
3C08:  CLRF   x84
3C0A:  CLRF   x85
3C0C:  CLRF   xB9
3C0E:  CLRF   xBA
3C10:  CLRF   xBB
3C12:  CLRF   xBC
3C14:  CLRF   xBD
3C16:  CLRF   xBE
3C18:  CLRF   xBF
3C1A:  CLRF   xC0
3C1C:  CLRF   xC1
3C1E:  CLRF   xC2
3C20:  CLRF   xC3
3C22:  CLRF   xC4
3C24:  CLRF   xC5
3C26:  CLRF   xC6
3C28:  CLRF   xC7
3C2A:  CLRF   xC8
3C2C:  MOVLB  6
3C2E:  CLRF   x4B
3C30:  CLRF   x4C
....................    delay_ms(1000);    
3C32:  MOVLW  04
3C34:  MOVWF  x4D
3C36:  MOVLW  FA
3C38:  MOVWF  x53
3C3A:  MOVLB  0
3C3C:  CALL   0D1A
3C40:  MOVLB  6
3C42:  DECFSZ x4D,F
3C44:  BRA    3C36
....................    Buzzer_off; 
3C46:  BCF    F8A.7
3C48:  BCF    F93.7
....................    Velocidades(0); 
3C4A:  CLRF   x4D
3C4C:  MOVLB  0
3C4E:  CALL   0D44
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
3C52:  MOVLW  85
3C54:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
3C56:  BSF    F9D.0
....................    setup_adc_ports(AN0_TO_AN1); 
3C58:  MOVF   FC1,W
3C5A:  ANDLW  C0
3C5C:  IORLW  0D
3C5E:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_64); 
3C60:  BCF    FC0.0
3C62:  BSF    FC0.1
3C64:  BSF    FC0.2
3C66:  BSF    FC0.7
3C68:  BSF    FC2.0
....................    setup_ccp2 (CCP_PWM); 
3C6A:  BCF    F94.1
3C6C:  BCF    F8B.1
3C6E:  MOVLW  0C
3C70:  MOVWF  FBA
....................    setup_timer_2(T2_DIV_BY_16, 255, 1);    
3C72:  MOVLW  00
3C74:  IORLW  06
3C76:  MOVWF  FCA
3C78:  MOVLW  FF
3C7A:  MOVWF  FCB
....................    set_pwm2_duty(0); 
3C7C:  CLRF   FBB
....................    enable_interrupts(global); 
3C7E:  MOVLW  C0
3C80:  IORWF  FF2,F
....................    Testerilizacionp[0]=read_eeprom(0); 
3C82:  MOVFF  FF2,64D
3C86:  BCF    FF2.7
3C88:  CLRF   FA9
3C8A:  BCF    FA6.6
3C8C:  BCF    FA6.7
3C8E:  BSF    FA6.0
3C90:  MOVF   FA8,W
3C92:  MOVLB  6
3C94:  BTFSC  x4D.7
3C96:  BSF    FF2.7
3C98:  MOVLB  5
3C9A:  MOVWF  xBD
....................    delay_ms(50);    
3C9C:  MOVLW  32
3C9E:  MOVLB  6
3CA0:  MOVWF  x53
3CA2:  MOVLB  0
3CA4:  CALL   0D1A
....................    Testerilizacionp[1]=read_eeprom(1); 
3CA8:  MOVFF  FF2,64D
3CAC:  BCF    FF2.7
3CAE:  MOVLW  01
3CB0:  MOVWF  FA9
3CB2:  BCF    FA6.6
3CB4:  BCF    FA6.7
3CB6:  BSF    FA6.0
3CB8:  MOVF   FA8,W
3CBA:  MOVLB  6
3CBC:  BTFSC  x4D.7
3CBE:  BSF    FF2.7
3CC0:  MOVLB  5
3CC2:  MOVWF  xBE
....................    delay_ms(50);    
3CC4:  MOVLW  32
3CC6:  MOVLB  6
3CC8:  MOVWF  x53
3CCA:  MOVLB  0
3CCC:  CALL   0D1A
....................    Testerilizacionp[2]=read_eeprom(2); 
3CD0:  MOVFF  FF2,64D
3CD4:  BCF    FF2.7
3CD6:  MOVLW  02
3CD8:  MOVWF  FA9
3CDA:  BCF    FA6.6
3CDC:  BCF    FA6.7
3CDE:  BSF    FA6.0
3CE0:  MOVF   FA8,W
3CE2:  MOVLB  6
3CE4:  BTFSC  x4D.7
3CE6:  BSF    FF2.7
3CE8:  MOVLB  5
3CEA:  MOVWF  xBF
....................    delay_ms(50); 
3CEC:  MOVLW  32
3CEE:  MOVLB  6
3CF0:  MOVWF  x53
3CF2:  MOVLB  0
3CF4:  CALL   0D1A
....................    Testerilizacionp[3]=read_eeprom(3); 
3CF8:  MOVFF  FF2,64D
3CFC:  BCF    FF2.7
3CFE:  MOVLW  03
3D00:  MOVWF  FA9
3D02:  BCF    FA6.6
3D04:  BCF    FA6.7
3D06:  BSF    FA6.0
3D08:  MOVF   FA8,W
3D0A:  MOVLB  6
3D0C:  BTFSC  x4D.7
3D0E:  BSF    FF2.7
3D10:  MOVLB  5
3D12:  MOVWF  xC0
....................    delay_ms(50);    
3D14:  MOVLW  32
3D16:  MOVLB  6
3D18:  MOVWF  x53
3D1A:  MOVLB  0
3D1C:  CALL   0D1A
....................     
....................    entero=read_eeprom(80); 
3D20:  MOVFF  FF2,64D
3D24:  BCF    FF2.7
3D26:  MOVLW  50
3D28:  MOVWF  FA9
3D2A:  BCF    FA6.6
3D2C:  BCF    FA6.7
3D2E:  BSF    FA6.0
3D30:  MOVF   FA8,W
3D32:  MOVLB  6
3D34:  BTFSC  x4D.7
3D36:  BSF    FF2.7
3D38:  MOVLB  5
3D3A:  MOVWF  xA0
....................    delay_ms(50);    
3D3C:  MOVLW  32
3D3E:  MOVLB  6
3D40:  MOVWF  x53
3D42:  MOVLB  0
3D44:  CALL   0D1A
....................    Temporal=read_eeprom(81); 
3D48:  MOVFF  FF2,64D
3D4C:  BCF    FF2.7
3D4E:  MOVLW  51
3D50:  MOVWF  FA9
3D52:  BCF    FA6.6
3D54:  BCF    FA6.7
3D56:  BSF    FA6.0
3D58:  MOVF   FA8,W
3D5A:  MOVLB  6
3D5C:  BTFSC  x4D.7
3D5E:  BSF    FF2.7
3D60:  CLRF   x54
3D62:  MOVWF  x53
3D64:  MOVLB  0
3D66:  CALL   0D6C
3D6A:  MOVFF  03,620
3D6E:  MOVFF  02,61F
3D72:  MOVFF  01,61E
3D76:  MOVFF  00,61D
....................    Temporal=Temporal/10.0; 
3D7A:  MOVFF  620,651
3D7E:  MOVFF  61F,650
3D82:  MOVFF  61E,64F
3D86:  MOVFF  61D,64E
3D8A:  MOVLB  6
3D8C:  CLRF   x55
3D8E:  CLRF   x54
3D90:  MOVLW  20
3D92:  MOVWF  x53
3D94:  MOVLW  82
3D96:  MOVWF  x52
3D98:  MOVLB  0
3D9A:  CALL   0DA2
3D9E:  MOVFF  03,620
3DA2:  MOVFF  02,61F
3DA6:  MOVFF  01,61E
3DAA:  MOVFF  00,61D
....................    Temperatura1=entero+Temporal; 
3DAE:  MOVLB  6
3DB0:  CLRF   x54
3DB2:  MOVFF  5A0,653
3DB6:  MOVLB  0
3DB8:  CALL   0D6C
3DBC:  BCF    FD8.1
3DBE:  MOVFF  03,655
3DC2:  MOVFF  02,654
3DC6:  MOVFF  01,653
3DCA:  MOVFF  00,652
3DCE:  MOVFF  620,659
3DD2:  MOVFF  61F,658
3DD6:  MOVFF  61E,657
3DDA:  MOVFF  61D,656
3DDE:  CALL   0F00
3DE2:  MOVFF  03,614
3DE6:  MOVFF  02,613
3DEA:  MOVFF  01,612
3DEE:  MOVFF  00,611
....................    delay_ms(50);    
3DF2:  MOVLW  32
3DF4:  MOVLB  6
3DF6:  MOVWF  x53
3DF8:  MOVLB  0
3DFA:  CALL   0D1A
....................     
....................    entero=read_eeprom(83); 
3DFE:  MOVFF  FF2,64D
3E02:  BCF    FF2.7
3E04:  MOVLW  53
3E06:  MOVWF  FA9
3E08:  BCF    FA6.6
3E0A:  BCF    FA6.7
3E0C:  BSF    FA6.0
3E0E:  MOVF   FA8,W
3E10:  MOVLB  6
3E12:  BTFSC  x4D.7
3E14:  BSF    FF2.7
3E16:  MOVLB  5
3E18:  MOVWF  xA0
....................    delay_ms(50);    
3E1A:  MOVLW  32
3E1C:  MOVLB  6
3E1E:  MOVWF  x53
3E20:  MOVLB  0
3E22:  CALL   0D1A
....................    Temporal=read_eeprom(84); 
3E26:  MOVFF  FF2,64D
3E2A:  BCF    FF2.7
3E2C:  MOVLW  54
3E2E:  MOVWF  FA9
3E30:  BCF    FA6.6
3E32:  BCF    FA6.7
3E34:  BSF    FA6.0
3E36:  MOVF   FA8,W
3E38:  MOVLB  6
3E3A:  BTFSC  x4D.7
3E3C:  BSF    FF2.7
3E3E:  CLRF   x54
3E40:  MOVWF  x53
3E42:  MOVLB  0
3E44:  CALL   0D6C
3E48:  MOVFF  03,620
3E4C:  MOVFF  02,61F
3E50:  MOVFF  01,61E
3E54:  MOVFF  00,61D
....................    Temporal=Temporal/10.0; 
3E58:  MOVFF  620,651
3E5C:  MOVFF  61F,650
3E60:  MOVFF  61E,64F
3E64:  MOVFF  61D,64E
3E68:  MOVLB  6
3E6A:  CLRF   x55
3E6C:  CLRF   x54
3E6E:  MOVLW  20
3E70:  MOVWF  x53
3E72:  MOVLW  82
3E74:  MOVWF  x52
3E76:  MOVLB  0
3E78:  CALL   0DA2
3E7C:  MOVFF  03,620
3E80:  MOVFF  02,61F
3E84:  MOVFF  01,61E
3E88:  MOVFF  00,61D
....................    Temperatura2=entero+Temporal; 
3E8C:  MOVLB  6
3E8E:  CLRF   x54
3E90:  MOVFF  5A0,653
3E94:  MOVLB  0
3E96:  CALL   0D6C
3E9A:  BCF    FD8.1
3E9C:  MOVFF  03,655
3EA0:  MOVFF  02,654
3EA4:  MOVFF  01,653
3EA8:  MOVFF  00,652
3EAC:  MOVFF  620,659
3EB0:  MOVFF  61F,658
3EB4:  MOVFF  61E,657
3EB8:  MOVFF  61D,656
3EBC:  CALL   0F00
3EC0:  MOVFF  03,618
3EC4:  MOVFF  02,617
3EC8:  MOVFF  01,616
3ECC:  MOVFF  00,615
....................    delay_ms(50);    
3ED0:  MOVLW  32
3ED2:  MOVLB  6
3ED4:  MOVWF  x53
3ED6:  MOVLB  0
3ED8:  CALL   0D1A
....................     
....................    entero=read_eeprom(86); 
3EDC:  MOVFF  FF2,64D
3EE0:  BCF    FF2.7
3EE2:  MOVLW  56
3EE4:  MOVWF  FA9
3EE6:  BCF    FA6.6
3EE8:  BCF    FA6.7
3EEA:  BSF    FA6.0
3EEC:  MOVF   FA8,W
3EEE:  MOVLB  6
3EF0:  BTFSC  x4D.7
3EF2:  BSF    FF2.7
3EF4:  MOVLB  5
3EF6:  MOVWF  xA0
....................    delay_ms(50);    
3EF8:  MOVLW  32
3EFA:  MOVLB  6
3EFC:  MOVWF  x53
3EFE:  MOVLB  0
3F00:  CALL   0D1A
....................    Temporal=read_eeprom(87); 
3F04:  MOVFF  FF2,64D
3F08:  BCF    FF2.7
3F0A:  MOVLW  57
3F0C:  MOVWF  FA9
3F0E:  BCF    FA6.6
3F10:  BCF    FA6.7
3F12:  BSF    FA6.0
3F14:  MOVF   FA8,W
3F16:  MOVLB  6
3F18:  BTFSC  x4D.7
3F1A:  BSF    FF2.7
3F1C:  CLRF   x54
3F1E:  MOVWF  x53
3F20:  MOVLB  0
3F22:  CALL   0D6C
3F26:  MOVFF  03,620
3F2A:  MOVFF  02,61F
3F2E:  MOVFF  01,61E
3F32:  MOVFF  00,61D
....................    Temporal=Temporal/10.0; 
3F36:  MOVFF  620,651
3F3A:  MOVFF  61F,650
3F3E:  MOVFF  61E,64F
3F42:  MOVFF  61D,64E
3F46:  MOVLB  6
3F48:  CLRF   x55
3F4A:  CLRF   x54
3F4C:  MOVLW  20
3F4E:  MOVWF  x53
3F50:  MOVLW  82
3F52:  MOVWF  x52
3F54:  MOVLB  0
3F56:  CALL   0DA2
3F5A:  MOVFF  03,620
3F5E:  MOVFF  02,61F
3F62:  MOVFF  01,61E
3F66:  MOVFF  00,61D
....................    Temperatura3=entero+Temporal; 
3F6A:  MOVLB  6
3F6C:  CLRF   x54
3F6E:  MOVFF  5A0,653
3F72:  MOVLB  0
3F74:  CALL   0D6C
3F78:  BCF    FD8.1
3F7A:  MOVFF  03,655
3F7E:  MOVFF  02,654
3F82:  MOVFF  01,653
3F86:  MOVFF  00,652
3F8A:  MOVFF  620,659
3F8E:  MOVFF  61F,658
3F92:  MOVFF  61E,657
3F96:  MOVFF  61D,656
3F9A:  CALL   0F00
3F9E:  MOVFF  03,61C
3FA2:  MOVFF  02,61B
3FA6:  MOVFF  01,61A
3FAA:  MOVFF  00,619
....................    delay_ms(50);    
3FAE:  MOVLW  32
3FB0:  MOVLB  6
3FB2:  MOVWF  x53
3FB4:  MOVLB  0
3FB6:  CALL   0D1A
....................     
....................    Password[0]=read_eeprom(10); 
3FBA:  MOVFF  FF2,64D
3FBE:  BCF    FF2.7
3FC0:  MOVLW  0A
3FC2:  MOVWF  FA9
3FC4:  BCF    FA6.6
3FC6:  BCF    FA6.7
3FC8:  BSF    FA6.0
3FCA:  MOVF   FA8,W
3FCC:  MOVLB  6
3FCE:  BTFSC  x4D.7
3FD0:  BSF    FF2.7
3FD2:  MOVLB  5
3FD4:  MOVWF  xC5
....................    delay_ms(50);    
3FD6:  MOVLW  32
3FD8:  MOVLB  6
3FDA:  MOVWF  x53
3FDC:  MOVLB  0
3FDE:  CALL   0D1A
....................    Password[1]=read_eeprom(11); 
3FE2:  MOVFF  FF2,64D
3FE6:  BCF    FF2.7
3FE8:  MOVLW  0B
3FEA:  MOVWF  FA9
3FEC:  BCF    FA6.6
3FEE:  BCF    FA6.7
3FF0:  BSF    FA6.0
3FF2:  MOVF   FA8,W
3FF4:  MOVLB  6
3FF6:  BTFSC  x4D.7
3FF8:  BSF    FF2.7
3FFA:  MOVLB  5
3FFC:  MOVWF  xC6
....................    delay_ms(50);    
3FFE:  MOVLW  32
4000:  MOVLB  6
4002:  MOVWF  x53
4004:  MOVLB  0
4006:  CALL   0D1A
....................    Password[2]=read_eeprom(12); 
400A:  MOVFF  FF2,64D
400E:  BCF    FF2.7
4010:  MOVLW  0C
4012:  MOVWF  FA9
4014:  BCF    FA6.6
4016:  BCF    FA6.7
4018:  BSF    FA6.0
401A:  MOVF   FA8,W
401C:  MOVLB  6
401E:  BTFSC  x4D.7
4020:  BSF    FF2.7
4022:  MOVLB  5
4024:  MOVWF  xC7
....................    delay_ms(50);    
4026:  MOVLW  32
4028:  MOVLB  6
402A:  MOVWF  x53
402C:  MOVLB  0
402E:  CALL   0D1A
....................    Password[3]=read_eeprom(13); 
4032:  MOVFF  FF2,64D
4036:  BCF    FF2.7
4038:  MOVLW  0D
403A:  MOVWF  FA9
403C:  BCF    FA6.6
403E:  BCF    FA6.7
4040:  BSF    FA6.0
4042:  MOVF   FA8,W
4044:  MOVLB  6
4046:  BTFSC  x4D.7
4048:  BSF    FF2.7
404A:  MOVLB  5
404C:  MOVWF  xC8
....................    delay_ms(50);    
404E:  MOVLW  32
4050:  MOVLB  6
4052:  MOVWF  x53
4054:  MOVLB  0
4056:  CALL   0D1A
....................    Ganancia=read_eeprom(90); 
405A:  MOVFF  FF2,64D
405E:  BCF    FF2.7
4060:  MOVLW  5A
4062:  MOVWF  FA9
4064:  BCF    FA6.6
4066:  BCF    FA6.7
4068:  BSF    FA6.0
406A:  MOVF   FA8,W
406C:  MOVLB  6
406E:  BTFSC  x4D.7
4070:  BSF    FF2.7
4072:  CLRF   x54
4074:  MOVWF  x53
4076:  MOVLB  0
4078:  CALL   0D6C
407C:  MOVFF  03,5F0
4080:  MOVFF  02,5EF
4084:  MOVFF  01,5EE
4088:  MOVFF  00,5ED
....................    delay_ms(50);    
408C:  MOVLW  32
408E:  MOVLB  6
4090:  MOVWF  x53
4092:  MOVLB  0
4094:  CALL   0D1A
....................    Tciclo=read_eeprom(30); 
4098:  MOVFF  FF2,64D
409C:  BCF    FF2.7
409E:  MOVLW  1E
40A0:  MOVWF  FA9
40A2:  BCF    FA6.6
40A4:  BCF    FA6.7
40A6:  BSF    FA6.0
40A8:  MOVF   FA8,W
40AA:  MOVLB  6
40AC:  BTFSC  x4D.7
40AE:  BSF    FF2.7
40B0:  CLRF   x54
40B2:  MOVWF  x53
40B4:  MOVLB  0
40B6:  CALL   0D6C
40BA:  MOVFF  03,5D8
40BE:  MOVFF  02,5D7
40C2:  MOVFF  01,5D6
40C6:  MOVFF  00,5D5
....................    delay_ms(50);    
40CA:  MOVLW  32
40CC:  MOVLB  6
40CE:  MOVWF  x53
40D0:  MOVLB  0
40D2:  CALL   0D1A
....................    Ajuste=read_eeprom(40); 
40D6:  MOVFF  FF2,64D
40DA:  BCF    FF2.7
40DC:  MOVLW  28
40DE:  MOVWF  FA9
40E0:  BCF    FA6.6
40E2:  BCF    FA6.7
40E4:  BSF    FA6.0
40E6:  MOVF   FA8,W
40E8:  MOVLB  6
40EA:  BTFSC  x4D.7
40EC:  BSF    FF2.7
40EE:  MOVLB  5
40F0:  MOVWF  x8A
....................    delay_ms(50);    
40F2:  MOVLW  32
40F4:  MOVLB  6
40F6:  MOVWF  x53
40F8:  MOVLB  0
40FA:  CALL   0D1A
....................    Ajusten=read_eeprom(50); 
40FE:  MOVFF  FF2,64D
4102:  BCF    FF2.7
4104:  MOVLW  32
4106:  MOVWF  FA9
4108:  BCF    FA6.6
410A:  BCF    FA6.7
410C:  BSF    FA6.0
410E:  MOVF   FA8,W
4110:  MOVLB  6
4112:  BTFSC  x4D.7
4114:  BSF    FF2.7
4116:  MOVLB  5
4118:  MOVWF  x8B
....................    delay_ms(50);    
411A:  MOVLW  32
411C:  MOVLB  6
411E:  MOVWF  x53
4120:  MOVLB  0
4122:  CALL   0D1A
....................    MediaMovil=read_eeprom(60); 
4126:  MOVFF  FF2,64D
412A:  BCF    FF2.7
412C:  MOVLW  3C
412E:  MOVWF  FA9
4130:  BCF    FA6.6
4132:  BCF    FA6.7
4134:  BSF    FA6.0
4136:  MOVF   FA8,W
4138:  MOVLB  6
413A:  BTFSC  x4D.7
413C:  BSF    FF2.7
413E:  MOVLB  5
4140:  MOVWF  x8C
....................    delay_ms(50);    
4142:  MOVLW  32
4144:  MOVLB  6
4146:  MOVWF  x53
4148:  MOVLB  0
414A:  CALL   0D1A
....................    Coeficiente=read_eeprom(70); 
414E:  MOVFF  FF2,64D
4152:  BCF    FF2.7
4154:  MOVLW  46
4156:  MOVWF  FA9
4158:  BCF    FA6.6
415A:  BCF    FA6.7
415C:  BSF    FA6.0
415E:  MOVF   FA8,W
4160:  MOVLB  6
4162:  BTFSC  x4D.7
4164:  BSF    FF2.7
4166:  CLRF   x54
4168:  MOVWF  x53
416A:  MOVLB  0
416C:  CALL   0D6C
4170:  MOVFF  03,5FC
4174:  MOVFF  02,5FB
4178:  MOVFF  01,5FA
417C:  MOVFF  00,5F9
....................    delay_ms(50);    
4180:  MOVLW  32
4182:  MOVLB  6
4184:  MOVWF  x53
4186:  MOVLB  0
4188:  CALL   0D1A
....................    Saturacion=read_eeprom(100); 
418C:  MOVFF  FF2,64D
4190:  BCF    FF2.7
4192:  MOVLW  64
4194:  MOVWF  FA9
4196:  BCF    FA6.6
4198:  BCF    FA6.7
419A:  BSF    FA6.0
419C:  MOVF   FA8,W
419E:  MOVLB  6
41A0:  BTFSC  x4D.7
41A2:  BSF    FF2.7
41A4:  CLRF   x54
41A6:  MOVWF  x53
41A8:  MOVLB  0
41AA:  CALL   0D6C
41AE:  MOVFF  03,608
41B2:  MOVFF  02,607
41B6:  MOVFF  01,606
41BA:  MOVFF  00,605
....................     
....................    if(Ganancia>10.0) 
41BE:  MOVLB  6
41C0:  CLRF   x50
41C2:  CLRF   x4F
41C4:  MOVLW  20
41C6:  MOVWF  x4E
41C8:  MOVLW  82
41CA:  MOVWF  x4D
41CC:  MOVFF  5F0,654
41D0:  MOVFF  5EF,653
41D4:  MOVFF  5EE,652
41D8:  MOVFF  5ED,651
41DC:  MOVLB  0
41DE:  CALL   1178
41E2:  BNC   41F0
....................    { 
....................       Ganancia=2.0; 
41E4:  MOVLB  5
41E6:  CLRF   xF0
41E8:  CLRF   xEF
41EA:  CLRF   xEE
41EC:  MOVLW  80
41EE:  MOVWF  xED
....................    } 
....................     
....................    glcd_init(ON);             //Inicializa la glcd 
41F0:  MOVLW  01
41F2:  MOVLB  6
41F4:  MOVWF  x4D
41F6:  MOVLB  0
41F8:  CALL   1344
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
41FC:  MOVLB  6
41FE:  CLRF   x4E
4200:  MOVLB  0
4202:  CALL   1232
....................    strcpy(Menus.Letra,"JP Inglobal"); 
4206:  MOVLW  06
4208:  MOVWF  FEA
420A:  MOVLW  2D
420C:  MOVWF  FE9
420E:  MOVFF  FF2,64D
4212:  BCF    FF2.7
4214:  MOVLW  00
4216:  CALL   06DA
421A:  TBLRD*-
421C:  TBLRD*+
421E:  MOVF   FF5,W
4220:  MOVWF  FEE
4222:  IORLW  00
4224:  BNZ   421C
4226:  MOVLB  6
4228:  BTFSC  x4D.7
422A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
422C:  MOVLW  06
422E:  MOVWF  x4E
4230:  MOVLW  2D
4232:  MOVWF  x4D
4234:  CLRF   x4F
4236:  CLRF   x50
4238:  CLRF   x51
423A:  MOVLW  02
423C:  MOVWF  x52
423E:  MOVLB  0
4240:  CALL   1860
....................    strcpy(Menus.Letra,"    Incubadora"); 
4244:  MOVLW  06
4246:  MOVWF  FEA
4248:  MOVLW  2D
424A:  MOVWF  FE9
424C:  MOVFF  FF2,64D
4250:  BCF    FF2.7
4252:  MOVLW  00
4254:  CALL   0700
4258:  TBLRD*-
425A:  TBLRD*+
425C:  MOVF   FF5,W
425E:  MOVWF  FEE
4260:  IORLW  00
4262:  BNZ   425A
4264:  MOVLB  6
4266:  BTFSC  x4D.7
4268:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
426A:  MOVLW  06
426C:  MOVWF  x4E
426E:  MOVLW  2D
4270:  MOVWF  x4D
4272:  CLRF   x4F
4274:  MOVLW  14
4276:  MOVWF  x50
4278:  CLRF   x51
427A:  MOVLW  01
427C:  MOVWF  x52
427E:  MOVLB  0
4280:  CALL   1860
....................    strcpy(Menus.Letra,"    Refrigerada"); 
4284:  MOVLW  06
4286:  MOVWF  FEA
4288:  MOVLW  2D
428A:  MOVWF  FE9
428C:  MOVFF  FF2,64D
4290:  BCF    FF2.7
4292:  MOVLW  00
4294:  CALL   072A
4298:  TBLRD*-
429A:  TBLRD*+
429C:  MOVF   FF5,W
429E:  MOVWF  FEE
42A0:  IORLW  00
42A2:  BNZ   429A
42A4:  MOVLB  6
42A6:  BTFSC  x4D.7
42A8:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,1); 
42AA:  MOVLW  06
42AC:  MOVWF  x4E
42AE:  MOVLW  2D
42B0:  MOVWF  x4D
42B2:  CLRF   x4F
42B4:  MOVLW  1E
42B6:  MOVWF  x50
42B8:  CLRF   x51
42BA:  MOVLW  01
42BC:  MOVWF  x52
42BE:  MOVLB  0
42C0:  CALL   1860
....................    strcpy(Menus.Letra,"   115 Lts"); 
42C4:  MOVLW  06
42C6:  MOVWF  FEA
42C8:  MOVLW  2D
42CA:  MOVWF  FE9
42CC:  MOVFF  FF2,64D
42D0:  BCF    FF2.7
42D2:  MOVLW  00
42D4:  CALL   0754
42D8:  TBLRD*-
42DA:  TBLRD*+
42DC:  MOVF   FF5,W
42DE:  MOVWF  FEE
42E0:  IORLW  00
42E2:  BNZ   42DA
42E4:  MOVLB  6
42E6:  BTFSC  x4D.7
42E8:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,45,0,2); 
42EA:  MOVLW  06
42EC:  MOVWF  x4E
42EE:  MOVLW  2D
42F0:  MOVWF  x4D
42F2:  CLRF   x4F
42F4:  MOVWF  x50
42F6:  CLRF   x51
42F8:  MOVLW  02
42FA:  MOVWF  x52
42FC:  MOVLB  0
42FE:  CALL   1860
....................    delay_ms(1000); 
4302:  MOVLW  04
4304:  MOVLB  6
4306:  MOVWF  x4D
4308:  MOVLW  FA
430A:  MOVWF  x53
430C:  MOVLB  0
430E:  CALL   0D1A
4312:  MOVLB  6
4314:  DECFSZ x4D,F
4316:  BRA    4308
....................  
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
4318:  CLRF   x4E
431A:  MOVLB  0
431C:  CALL   1232
....................    displayContrasena(Contrasena[0],20,30,1); 
4320:  MOVFF  5C1,64F
4324:  MOVLW  14
4326:  MOVLB  6
4328:  MOVWF  x50
432A:  MOVLW  1E
432C:  MOVWF  x51
432E:  MOVLW  01
4330:  MOVWF  x52
4332:  MOVLB  0
4334:  CALL   1A86
....................    displayContrasena(Contrasena[1],40,30,0); 
4338:  MOVFF  5C2,64F
433C:  MOVLW  28
433E:  MOVLB  6
4340:  MOVWF  x50
4342:  MOVLW  1E
4344:  MOVWF  x51
4346:  CLRF   x52
4348:  MOVLB  0
434A:  CALL   1A86
....................    displayContrasena(Contrasena[2],60,30,0); 
434E:  MOVFF  5C3,64F
4352:  MOVLW  3C
4354:  MOVLB  6
4356:  MOVWF  x50
4358:  MOVLW  1E
435A:  MOVWF  x51
435C:  CLRF   x52
435E:  MOVLB  0
4360:  CALL   1A86
....................    displayContrasena(Contrasena[3],80,30,0); 
4364:  MOVFF  5C4,64F
4368:  MOVLW  50
436A:  MOVLB  6
436C:  MOVWF  x50
436E:  MOVLW  1E
4370:  MOVWF  x51
4372:  CLRF   x52
4374:  MOVLB  0
4376:  CALL   1A86
....................     
....................    for(i=0;i<80;i++) 
437A:  MOVLB  5
437C:  CLRF   x98
437E:  MOVF   x98,W
4380:  SUBLW  4F
4382:  BNC   43A4
....................    { 
....................       Temperatura=Leer_Sensor(MediaMovil); 
4384:  MOVFF  58C,64D
4388:  MOVLB  0
438A:  CALL   1CAE
438E:  MOVFF  03,604
4392:  MOVFF  02,603
4396:  MOVFF  01,602
439A:  MOVFF  00,601
....................    } 
439E:  MOVLB  5
43A0:  INCF   x98,F
43A2:  BRA    437E
....................    Teclado(); 
43A4:  MOVLB  0
43A6:  CALL   2068
....................    if(UP && DOWN)// && RIGHT && LEFT) 
43AA:  MOVLB  5
43AC:  BTFSS  x86.0
43AE:  BRA    443C
43B0:  BTFSS  x86.1
43B2:  BRA    443C
....................    { 
....................       delay_ms(500); 
43B4:  MOVLW  02
43B6:  MOVLB  6
43B8:  MOVWF  x4D
43BA:  MOVLW  FA
43BC:  MOVWF  x53
43BE:  MOVLB  0
43C0:  CALL   0D1A
43C4:  MOVLB  6
43C6:  DECFSZ x4D,F
43C8:  BRA    43BA
....................       strcpy(Menus.Letra,"Cargando.."); 
43CA:  MOVLW  06
43CC:  MOVWF  FEA
43CE:  MOVLW  2D
43D0:  MOVWF  FE9
43D2:  MOVFF  FF2,64D
43D6:  BCF    FF2.7
43D8:  MOVLW  00
43DA:  MOVLB  0
43DC:  CALL   077A
43E0:  TBLRD*-
43E2:  TBLRD*+
43E4:  MOVF   FF5,W
43E6:  MOVWF  FEE
43E8:  IORLW  00
43EA:  BNZ   43E2
43EC:  MOVLB  6
43EE:  BTFSC  x4D.7
43F0:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,30,1,1); 
43F2:  MOVLW  06
43F4:  MOVWF  x4E
43F6:  MOVLW  2D
43F8:  MOVWF  x4D
43FA:  CLRF   x4F
43FC:  MOVLW  1E
43FE:  MOVWF  x50
4400:  MOVLW  01
4402:  MOVWF  x51
4404:  MOVWF  x52
4406:  MOVLB  0
4408:  CALL   1860
....................       delay_ms(2000); 
440C:  MOVLW  08
440E:  MOVLB  6
4410:  MOVWF  x4D
4412:  MOVLW  FA
4414:  MOVWF  x53
4416:  MOVLB  0
4418:  CALL   0D1A
441C:  MOVLB  6
441E:  DECFSZ x4D,F
4420:  BRA    4412
....................       Menu=100; 
4422:  MOVLW  64
4424:  MOVLB  5
4426:  MOVWF  x96
....................       glcd_fillScreen(OFF); 
4428:  MOVLB  6
442A:  CLRF   x4E
442C:  MOVLB  0
442E:  CALL   1232
....................       UP=0;DOWN=0;RIGHT=0;LEFT=0; 
4432:  MOVLB  5
4434:  BCF    x86.0
4436:  BCF    x86.1
4438:  BCF    x86.2
443A:  BCF    x86.3
....................    } 
....................    while(true) 
....................    { 
....................  
....................       if(Lectura2==1) 
443C:  DECFSZ x91,W
443E:  BRA    445E
....................       { 
....................          Temperatura=Leer_Sensor(MediaMovil); 
4440:  MOVFF  58C,64D
4444:  MOVLB  0
4446:  CALL   1CAE
444A:  MOVFF  03,604
444E:  MOVFF  02,603
4452:  MOVFF  01,602
4456:  MOVFF  00,601
....................          Lectura2=0; 
445A:  MOVLB  5
445C:  CLRF   x91
....................       } 
....................  
....................       Teclado(); 
445E:  MOVLB  0
4460:  CALL   2068
....................     
....................       glcd_update();             
4464:  CALL   128C
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
4468:  MOVLB  5
446A:  MOVF   x96,F
446C:  BTFSS  FD8.2
446E:  BRA    49E4
....................        
....................       strcpy(Menus.Letra,"Clave"); 
4470:  MOVLW  06
4472:  MOVWF  FEA
4474:  MOVLW  2D
4476:  MOVWF  FE9
4478:  MOVFF  FF2,64D
447C:  BCF    FF2.7
447E:  MOVLW  00
4480:  MOVLB  0
4482:  CALL   07A0
4486:  TBLRD*-
4488:  TBLRD*+
448A:  MOVF   FF5,W
448C:  MOVWF  FEE
448E:  IORLW  00
4490:  BNZ   4488
4492:  MOVLB  6
4494:  BTFSC  x4D.7
4496:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
4498:  MOVLW  06
449A:  MOVWF  x4E
449C:  MOVLW  2D
449E:  MOVWF  x4D
44A0:  MOVLW  1E
44A2:  MOVWF  x4F
44A4:  CLRF   x50
44A6:  MOVLW  01
44A8:  MOVWF  x51
44AA:  MOVLW  02
44AC:  MOVWF  x52
44AE:  MOVLB  0
44B0:  CALL   1860
....................        
....................       if(UP)//Si oprime hacia arriba 
44B4:  MOVLB  5
44B6:  BTFSS  x86.0
44B8:  BRA    4588
....................       { 
....................          UP=0;delay_ms(30); 
44BA:  BCF    x86.0
44BC:  MOVLW  1E
44BE:  MOVLB  6
44C0:  MOVWF  x53
44C2:  MOVLB  0
44C4:  CALL   0D1A
....................          for(i=1;i<=4;i++) 
44C8:  MOVLW  01
44CA:  MOVLB  5
44CC:  MOVWF  x98
44CE:  MOVF   x98,W
44D0:  SUBLW  04
44D2:  BNC   4588
....................          { 
....................             if(unidad==i) 
44D4:  MOVF   x98,W
44D6:  SUBWF  x97,W
44D8:  BNZ   4550
....................             { 
....................                Contrasena[i-1]++; 
44DA:  MOVLW  01
44DC:  SUBWF  x98,W
44DE:  CLRF   03
44E0:  ADDLW  C1
44E2:  MOVWF  FE9
44E4:  MOVLW  05
44E6:  ADDWFC 03,W
44E8:  MOVWF  FEA
44EA:  INCF   FEF,F
....................                if(Contrasena[i-1]>9)    
44EC:  MOVLW  01
44EE:  SUBWF  x98,W
44F0:  CLRF   03
44F2:  ADDLW  C1
44F4:  MOVWF  FE9
44F6:  MOVLW  05
44F8:  ADDWFC 03,W
44FA:  MOVWF  FEA
44FC:  BTFSC  FEF.7
44FE:  BRA    4518
4500:  MOVF   FEF,W
4502:  SUBLW  09
4504:  BC    4518
....................                { 
....................                   Contrasena[i-1]=0; 
4506:  MOVLW  01
4508:  SUBWF  x98,W
450A:  CLRF   03
450C:  ADDLW  C1
450E:  MOVWF  FE9
4510:  MOVLW  05
4512:  ADDWFC 03,W
4514:  MOVWF  FEA
4516:  CLRF   FEF
....................                } 
....................                displayContrasena(Contrasena[i-1],i*20,30,1); 
4518:  MOVLW  01
451A:  SUBWF  x98,W
451C:  CLRF   03
451E:  ADDLW  C1
4520:  MOVWF  FE9
4522:  MOVLW  05
4524:  ADDWFC 03,W
4526:  MOVWF  FEA
4528:  MOVFF  FEF,64D
452C:  MOVF   x98,W
452E:  MULLW  14
4530:  MOVFF  FF3,64E
4534:  MOVLB  6
4536:  MOVFF  64D,64F
453A:  MOVFF  64E,650
453E:  MOVLW  1E
4540:  MOVWF  x51
4542:  MOVLW  01
4544:  MOVWF  x52
4546:  MOVLB  0
4548:  CALL   1A86
....................             } 
....................             else 
454C:  BRA    4582
454E:  MOVLB  5
....................             { 
....................                displayContrasena(Contrasena[i-1],i*20,30,0); 
4550:  MOVLW  01
4552:  SUBWF  x98,W
4554:  CLRF   03
4556:  ADDLW  C1
4558:  MOVWF  FE9
455A:  MOVLW  05
455C:  ADDWFC 03,W
455E:  MOVWF  FEA
4560:  MOVFF  FEF,64D
4564:  MOVF   x98,W
4566:  MULLW  14
4568:  MOVFF  FF3,64E
456C:  MOVLB  6
456E:  MOVFF  64D,64F
4572:  MOVFF  64E,650
4576:  MOVLW  1E
4578:  MOVWF  x51
457A:  CLRF   x52
457C:  MOVLB  0
457E:  CALL   1A86
....................             } 
....................          } 
4582:  MOVLB  5
4584:  INCF   x98,F
4586:  BRA    44CE
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4588:  BTFSS  x86.1
458A:  BRA    4658
....................       { 
....................          DOWN=0;delay_ms(30); 
458C:  BCF    x86.1
458E:  MOVLW  1E
4590:  MOVLB  6
4592:  MOVWF  x53
4594:  MOVLB  0
4596:  CALL   0D1A
....................          for(i=1;i<=4;i++) 
459A:  MOVLW  01
459C:  MOVLB  5
459E:  MOVWF  x98
45A0:  MOVF   x98,W
45A2:  SUBLW  04
45A4:  BNC   4658
....................          { 
....................             if(unidad==i) 
45A6:  MOVF   x98,W
45A8:  SUBWF  x97,W
45AA:  BNZ   4620
....................             { 
....................                Contrasena[i-1]--; 
45AC:  MOVLW  01
45AE:  SUBWF  x98,W
45B0:  CLRF   03
45B2:  ADDLW  C1
45B4:  MOVWF  FE9
45B6:  MOVLW  05
45B8:  ADDWFC 03,W
45BA:  MOVWF  FEA
45BC:  DECF   FEF,F
....................                if(Contrasena[i-1]<0) 
45BE:  MOVLW  01
45C0:  SUBWF  x98,W
45C2:  CLRF   03
45C4:  ADDLW  C1
45C6:  MOVWF  FE9
45C8:  MOVLW  05
45CA:  ADDWFC 03,W
45CC:  MOVWF  FEA
45CE:  BTFSC  FEF.7
45D0:  BRA    45D4
45D2:  BRA    45E8
....................                   {Contrasena[i-1]=9;} 
45D4:  MOVLW  01
45D6:  SUBWF  x98,W
45D8:  CLRF   03
45DA:  ADDLW  C1
45DC:  MOVWF  FE9
45DE:  MOVLW  05
45E0:  ADDWFC 03,W
45E2:  MOVWF  FEA
45E4:  MOVLW  09
45E6:  MOVWF  FEF
....................                displayContrasena(Contrasena[i-1],i*20,30,1);} 
45E8:  MOVLW  01
45EA:  SUBWF  x98,W
45EC:  CLRF   03
45EE:  ADDLW  C1
45F0:  MOVWF  FE9
45F2:  MOVLW  05
45F4:  ADDWFC 03,W
45F6:  MOVWF  FEA
45F8:  MOVFF  FEF,64D
45FC:  MOVF   x98,W
45FE:  MULLW  14
4600:  MOVFF  FF3,64E
4604:  MOVLB  6
4606:  MOVFF  64D,64F
460A:  MOVFF  64E,650
460E:  MOVLW  1E
4610:  MOVWF  x51
4612:  MOVLW  01
4614:  MOVWF  x52
4616:  MOVLB  0
4618:  CALL   1A86
....................             else 
461C:  BRA    4652
461E:  MOVLB  5
....................             {displayContrasena(Contrasena[i-1],i*20,30,0);} 
4620:  MOVLW  01
4622:  SUBWF  x98,W
4624:  CLRF   03
4626:  ADDLW  C1
4628:  MOVWF  FE9
462A:  MOVLW  05
462C:  ADDWFC 03,W
462E:  MOVWF  FEA
4630:  MOVFF  FEF,64D
4634:  MOVF   x98,W
4636:  MULLW  14
4638:  MOVFF  FF3,64E
463C:  MOVLB  6
463E:  MOVFF  64D,64F
4642:  MOVFF  64E,650
4646:  MOVLW  1E
4648:  MOVWF  x51
464A:  CLRF   x52
464C:  MOVLB  0
464E:  CALL   1A86
....................          }         
4652:  MOVLB  5
4654:  INCF   x98,F
4656:  BRA    45A0
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
4658:  BTFSS  x86.2
465A:  BRA    46EE
....................       { 
....................          RIGHT=0;delay_ms(30);unidad++; 
465C:  BCF    x86.2
465E:  MOVLW  1E
4660:  MOVLB  6
4662:  MOVWF  x53
4664:  MOVLB  0
4666:  CALL   0D1A
466A:  MOVLB  5
466C:  INCF   x97,F
....................          for(i=1;i<=4;i++) 
466E:  MOVLW  01
4670:  MOVWF  x98
4672:  MOVF   x98,W
4674:  SUBLW  04
4676:  BNC   46EE
....................          { 
....................             if(unidad==i) 
4678:  MOVF   x98,W
467A:  SUBWF  x97,W
467C:  BNZ   46B6
....................             {displayContrasena(Contrasena[i-1],i*20,30,1);} 
467E:  MOVLW  01
4680:  SUBWF  x98,W
4682:  CLRF   03
4684:  ADDLW  C1
4686:  MOVWF  FE9
4688:  MOVLW  05
468A:  ADDWFC 03,W
468C:  MOVWF  FEA
468E:  MOVFF  FEF,64D
4692:  MOVF   x98,W
4694:  MULLW  14
4696:  MOVFF  FF3,64E
469A:  MOVLB  6
469C:  MOVFF  64D,64F
46A0:  MOVFF  64E,650
46A4:  MOVLW  1E
46A6:  MOVWF  x51
46A8:  MOVLW  01
46AA:  MOVWF  x52
46AC:  MOVLB  0
46AE:  CALL   1A86
....................             else 
46B2:  BRA    46E8
46B4:  MOVLB  5
....................             {displayContrasena(Contrasena[i-1],i*20,30,0);} 
46B6:  MOVLW  01
46B8:  SUBWF  x98,W
46BA:  CLRF   03
46BC:  ADDLW  C1
46BE:  MOVWF  FE9
46C0:  MOVLW  05
46C2:  ADDWFC 03,W
46C4:  MOVWF  FEA
46C6:  MOVFF  FEF,64D
46CA:  MOVF   x98,W
46CC:  MULLW  14
46CE:  MOVFF  FF3,64E
46D2:  MOVLB  6
46D4:  MOVFF  64D,64F
46D8:  MOVFF  64E,650
46DC:  MOVLW  1E
46DE:  MOVWF  x51
46E0:  CLRF   x52
46E2:  MOVLB  0
46E4:  CALL   1A86
....................          } 
46E8:  MOVLB  5
46EA:  INCF   x98,F
46EC:  BRA    4672
....................       } 
....................      
....................       if(unidad>4) 
46EE:  MOVF   x97,W
46F0:  SUBLW  04
46F2:  BTFSC  FD8.0
46F4:  BRA    49E4
....................       {glcd_fillScreen(OFF);unidad=4; 
46F6:  MOVLB  6
46F8:  CLRF   x4E
46FA:  MOVLB  0
46FC:  CALL   1232
4700:  MOVLW  04
4702:  MOVLB  5
4704:  MOVWF  x97
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
4706:  MOVF   xC1,W
4708:  SUBLW  03
470A:  BNZ   47F2
470C:  MOVF   xC2,W
470E:  SUBLW  08
4710:  BNZ   47F2
4712:  MOVF   xC3,W
4714:  SUBLW  09
4716:  BNZ   47F2
4718:  MOVF   xC4,W
471A:  SUBLW  02
471C:  BNZ   47F2
....................             {write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
471E:  MOVLW  0A
4720:  MOVWF  FA9
4722:  CLRF   FA8
4724:  BCF    FA6.6
4726:  BCF    FA6.7
4728:  BSF    FA6.2
472A:  MOVF   FF2,W
472C:  MOVWF  00
472E:  BCF    FF2.7
4730:  MOVLB  F
4732:  MOVLW  55
4734:  MOVWF  FA7
4736:  MOVLW  AA
4738:  MOVWF  FA7
473A:  BSF    FA6.1
473C:  BTFSC  FA6.1
473E:  BRA    473C
4740:  BCF    FA6.2
4742:  MOVF   00,W
4744:  IORWF  FF2,F
4746:  MOVLW  14
4748:  MOVLB  6
474A:  MOVWF  x53
474C:  MOVLB  0
474E:  CALL   0D1A
4752:  MOVLW  0B
4754:  MOVWF  FA9
4756:  CLRF   FA8
4758:  BCF    FA6.6
475A:  BCF    FA6.7
475C:  BSF    FA6.2
475E:  MOVF   FF2,W
4760:  MOVWF  00
4762:  BCF    FF2.7
4764:  MOVLB  F
4766:  MOVLW  55
4768:  MOVWF  FA7
476A:  MOVLW  AA
476C:  MOVWF  FA7
476E:  BSF    FA6.1
4770:  BTFSC  FA6.1
4772:  BRA    4770
4774:  BCF    FA6.2
4776:  MOVF   00,W
4778:  IORWF  FF2,F
477A:  MOVLW  14
477C:  MOVLB  6
477E:  MOVWF  x53
4780:  MOVLB  0
4782:  CALL   0D1A
....................              write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
4786:  MOVLW  0C
4788:  MOVWF  FA9
478A:  CLRF   FA8
478C:  BCF    FA6.6
478E:  BCF    FA6.7
4790:  BSF    FA6.2
4792:  MOVF   FF2,W
4794:  MOVWF  00
4796:  BCF    FF2.7
4798:  MOVLB  F
479A:  MOVLW  55
479C:  MOVWF  FA7
479E:  MOVLW  AA
47A0:  MOVWF  FA7
47A2:  BSF    FA6.1
47A4:  BTFSC  FA6.1
47A6:  BRA    47A4
47A8:  BCF    FA6.2
47AA:  MOVF   00,W
47AC:  IORWF  FF2,F
47AE:  MOVLW  14
47B0:  MOVLB  6
47B2:  MOVWF  x53
47B4:  MOVLB  0
47B6:  CALL   0D1A
47BA:  MOVLW  0D
47BC:  MOVWF  FA9
47BE:  CLRF   FA8
47C0:  BCF    FA6.6
47C2:  BCF    FA6.7
47C4:  BSF    FA6.2
47C6:  MOVF   FF2,W
47C8:  MOVWF  00
47CA:  BCF    FF2.7
47CC:  MOVLB  F
47CE:  MOVLW  55
47D0:  MOVWF  FA7
47D2:  MOVLW  AA
47D4:  MOVWF  FA7
47D6:  BSF    FA6.1
47D8:  BTFSC  FA6.1
47DA:  BRA    47D8
47DC:  BCF    FA6.2
47DE:  MOVF   00,W
47E0:  IORWF  FF2,F
47E2:  MOVLW  14
47E4:  MOVLB  6
47E6:  MOVWF  x53
47E8:  MOVLB  0
47EA:  CALL   0D1A
....................              reset_cpu();}         
47EE:  RESET
47F0:  MOVLB  5
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
47F2:  MOVF   xC5,W
47F4:  SUBWF  xC1,W
47F6:  BNZ   48C8
47F8:  MOVF   xC6,W
47FA:  SUBWF  xC2,W
47FC:  BNZ   48C8
47FE:  MOVF   xC7,W
4800:  SUBWF  xC3,W
4802:  BNZ   48C8
4804:  MOVF   xC8,W
4806:  SUBWF  xC4,W
4808:  BNZ   48C8
....................          { 
....................             glcd_fillScreen(OFF); 
480A:  MOVLB  6
480C:  CLRF   x4E
480E:  MOVLB  0
4810:  CALL   1232
....................             strcpy(Menus.Letra,"Clave"); 
4814:  MOVLW  06
4816:  MOVWF  FEA
4818:  MOVLW  2D
481A:  MOVWF  FE9
481C:  MOVFF  FF2,64D
4820:  BCF    FF2.7
4822:  MOVLW  00
4824:  CALL   07A0
4828:  TBLRD*-
482A:  TBLRD*+
482C:  MOVF   FF5,W
482E:  MOVWF  FEE
4830:  IORLW  00
4832:  BNZ   482A
4834:  MOVLB  6
4836:  BTFSC  x4D.7
4838:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
483A:  MOVLW  06
483C:  MOVWF  x4E
483E:  MOVLW  2D
4840:  MOVWF  x4D
4842:  MOVLW  1E
4844:  MOVWF  x4F
4846:  CLRF   x50
4848:  CLRF   x51
484A:  MOVLW  02
484C:  MOVWF  x52
484E:  MOVLB  0
4850:  CALL   1860
....................             strcpy(Menus.Letra,"Correcta"); 
4854:  MOVLW  06
4856:  MOVWF  FEA
4858:  MOVLW  2D
485A:  MOVWF  FE9
485C:  MOVFF  FF2,64D
4860:  BCF    FF2.7
4862:  MOVLW  00
4864:  CALL   07C0
4868:  TBLRD*-
486A:  TBLRD*+
486C:  MOVF   FF5,W
486E:  MOVWF  FEE
4870:  IORLW  00
4872:  BNZ   486A
4874:  MOVLB  6
4876:  BTFSC  x4D.7
4878:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
487A:  MOVLW  06
487C:  MOVWF  x4E
487E:  MOVLW  2D
4880:  MOVWF  x4D
4882:  MOVLW  0F
4884:  MOVWF  x4F
4886:  MOVLW  1E
4888:  MOVWF  x50
488A:  CLRF   x51
488C:  MOVLW  02
488E:  MOVWF  x52
4890:  MOVLB  0
4892:  CALL   1860
....................             Menu=1;glcd_update();delay_ms(1000); 
4896:  MOVLW  01
4898:  MOVLB  5
489A:  MOVWF  x96
489C:  MOVLB  0
489E:  CALL   128C
48A2:  MOVLW  04
48A4:  MOVLB  6
48A6:  MOVWF  x4D
48A8:  MOVLW  FA
48AA:  MOVWF  x53
48AC:  MOVLB  0
48AE:  CALL   0D1A
48B2:  MOVLB  6
48B4:  DECFSZ x4D,F
48B6:  BRA    48A8
....................             glcd_fillScreen(OFF);unidad=1; 
48B8:  CLRF   x4E
48BA:  MOVLB  0
48BC:  CALL   1232
48C0:  MOVLW  01
48C2:  MOVLB  5
48C4:  MOVWF  x97
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
48C6:  BRA    49E4
....................          { 
....................             glcd_fillScreen(OFF); 
48C8:  MOVLB  6
48CA:  CLRF   x4E
48CC:  MOVLB  0
48CE:  CALL   1232
....................             strcpy(Menus.Letra,"Clave"); 
48D2:  MOVLW  06
48D4:  MOVWF  FEA
48D6:  MOVLW  2D
48D8:  MOVWF  FE9
48DA:  MOVFF  FF2,64D
48DE:  BCF    FF2.7
48E0:  MOVLW  00
48E2:  CALL   07A0
48E6:  TBLRD*-
48E8:  TBLRD*+
48EA:  MOVF   FF5,W
48EC:  MOVWF  FEE
48EE:  IORLW  00
48F0:  BNZ   48E8
48F2:  MOVLB  6
48F4:  BTFSC  x4D.7
48F6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
48F8:  MOVLW  06
48FA:  MOVWF  x4E
48FC:  MOVLW  2D
48FE:  MOVWF  x4D
4900:  MOVLW  1E
4902:  MOVWF  x4F
4904:  CLRF   x50
4906:  CLRF   x51
4908:  MOVLW  02
490A:  MOVWF  x52
490C:  MOVLB  0
490E:  CALL   1860
....................             strcpy(Menus.Letra,"Incorrecta"); 
4912:  MOVLW  06
4914:  MOVWF  FEA
4916:  MOVLW  2D
4918:  MOVWF  FE9
491A:  MOVFF  FF2,64D
491E:  BCF    FF2.7
4920:  MOVLW  00
4922:  CALL   07E4
4926:  TBLRD*-
4928:  TBLRD*+
492A:  MOVF   FF5,W
492C:  MOVWF  FEE
492E:  IORLW  00
4930:  BNZ   4928
4932:  MOVLB  6
4934:  BTFSC  x4D.7
4936:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
4938:  MOVLW  06
493A:  MOVWF  x4E
493C:  MOVLW  2D
493E:  MOVWF  x4D
4940:  CLRF   x4F
4942:  MOVLW  1E
4944:  MOVWF  x50
4946:  CLRF   x51
4948:  MOVLW  02
494A:  MOVWF  x52
494C:  MOVLB  0
494E:  CALL   1860
....................             Menu=0;glcd_update();delay_ms(1000); 
4952:  MOVLB  5
4954:  CLRF   x96
4956:  MOVLB  0
4958:  CALL   128C
495C:  MOVLW  04
495E:  MOVLB  6
4960:  MOVWF  x4D
4962:  MOVLW  FA
4964:  MOVWF  x53
4966:  MOVLB  0
4968:  CALL   0D1A
496C:  MOVLB  6
496E:  DECFSZ x4D,F
4970:  BRA    4962
....................             glcd_fillScreen(OFF);unidad=1; 
4972:  CLRF   x4E
4974:  MOVLB  0
4976:  CALL   1232
497A:  MOVLW  01
497C:  MOVLB  5
497E:  MOVWF  x97
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
4980:  CLRF   xC1
4982:  CLRF   xC2
4984:  CLRF   xC3
4986:  CLRF   xC4
....................             displayContrasena(Contrasena[0],20,30,1); 
4988:  MOVFF  5C1,64F
498C:  MOVLW  14
498E:  MOVLB  6
4990:  MOVWF  x50
4992:  MOVLW  1E
4994:  MOVWF  x51
4996:  MOVLW  01
4998:  MOVWF  x52
499A:  MOVLB  0
499C:  CALL   1A86
....................             displayContrasena(Contrasena[1],40,30,0); 
49A0:  MOVFF  5C2,64F
49A4:  MOVLW  28
49A6:  MOVLB  6
49A8:  MOVWF  x50
49AA:  MOVLW  1E
49AC:  MOVWF  x51
49AE:  CLRF   x52
49B0:  MOVLB  0
49B2:  CALL   1A86
....................             displayContrasena(Contrasena[2],60,30,0); 
49B6:  MOVFF  5C3,64F
49BA:  MOVLW  3C
49BC:  MOVLB  6
49BE:  MOVWF  x50
49C0:  MOVLW  1E
49C2:  MOVWF  x51
49C4:  CLRF   x52
49C6:  MOVLB  0
49C8:  CALL   1A86
....................             displayContrasena(Contrasena[3],80,30,0); 
49CC:  MOVFF  5C4,64F
49D0:  MOVLW  50
49D2:  MOVLB  6
49D4:  MOVWF  x50
49D6:  MOVLW  1E
49D8:  MOVWF  x51
49DA:  CLRF   x52
49DC:  MOVLB  0
49DE:  CALL   1A86
49E2:  MOVLB  5
....................          } 
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
49E4:  DECFSZ x96,W
49E6:  BRA    4CE4
....................        
....................          if(Opcion>4) 
49E8:  MOVF   x9C,W
49EA:  SUBLW  04
49EC:  BC    49F2
....................          {Opcion=1;} 
49EE:  MOVLW  01
49F0:  MOVWF  x9C
....................          if(Opcion<1) 
49F2:  MOVF   x9C,F
49F4:  BNZ   49FA
....................          {Opcion=4;} 
49F6:  MOVLW  04
49F8:  MOVWF  x9C
....................           
....................          strcpy(Menus.Letra,"Menu"); 
49FA:  MOVLW  06
49FC:  MOVWF  FEA
49FE:  MOVLW  2D
4A00:  MOVWF  FE9
4A02:  MOVFF  FF2,64D
4A06:  BCF    FF2.7
4A08:  MOVLW  00
4A0A:  MOVLB  0
4A0C:  CALL   080A
4A10:  TBLRD*-
4A12:  TBLRD*+
4A14:  MOVF   FF5,W
4A16:  MOVWF  FEE
4A18:  IORLW  00
4A1A:  BNZ   4A12
4A1C:  MOVLB  6
4A1E:  BTFSC  x4D.7
4A20:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
4A22:  MOVLW  06
4A24:  MOVWF  x4E
4A26:  MOVLW  2D
4A28:  MOVWF  x4D
4A2A:  MOVLW  1E
4A2C:  MOVWF  x4F
4A2E:  CLRF   x50
4A30:  MOVLW  01
4A32:  MOVWF  x51
4A34:  MOVLW  02
4A36:  MOVWF  x52
4A38:  MOVLB  0
4A3A:  CALL   1860
....................        
....................          if(Opcion==1)    
4A3E:  MOVLB  5
4A40:  DECFSZ x9C,W
4A42:  BRA    4A8A
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
4A44:  MOVLW  06
4A46:  MOVWF  FEA
4A48:  MOVLW  2D
4A4A:  MOVWF  FE9
4A4C:  MOVFF  FF2,64D
4A50:  BCF    FF2.7
4A52:  MOVLW  00
4A54:  MOVLB  0
4A56:  CALL   082A
4A5A:  TBLRD*-
4A5C:  TBLRD*+
4A5E:  MOVF   FF5,W
4A60:  MOVWF  FEE
4A62:  IORLW  00
4A64:  BNZ   4A5C
4A66:  MOVLB  6
4A68:  BTFSC  x4D.7
4A6A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
4A6C:  MOVLW  06
4A6E:  MOVWF  x4E
4A70:  MOVLW  2D
4A72:  MOVWF  x4D
4A74:  CLRF   x4F
4A76:  MOVLW  14
4A78:  MOVWF  x50
4A7A:  MOVLW  01
4A7C:  MOVWF  x51
4A7E:  MOVWF  x52
4A80:  MOVLB  0
4A82:  CALL   1860
....................          else 
4A86:  BRA    4ACC
4A88:  MOVLB  5
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
4A8A:  MOVLW  06
4A8C:  MOVWF  FEA
4A8E:  MOVLW  2D
4A90:  MOVWF  FE9
4A92:  MOVFF  FF2,64D
4A96:  BCF    FF2.7
4A98:  MOVLW  00
4A9A:  MOVLB  0
4A9C:  CALL   082A
4AA0:  TBLRD*-
4AA2:  TBLRD*+
4AA4:  MOVF   FF5,W
4AA6:  MOVWF  FEE
4AA8:  IORLW  00
4AAA:  BNZ   4AA2
4AAC:  MOVLB  6
4AAE:  BTFSC  x4D.7
4AB0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);} 
4AB2:  MOVLW  06
4AB4:  MOVWF  x4E
4AB6:  MOVLW  2D
4AB8:  MOVWF  x4D
4ABA:  CLRF   x4F
4ABC:  MOVLW  14
4ABE:  MOVWF  x50
4AC0:  CLRF   x51
4AC2:  MOVLW  01
4AC4:  MOVWF  x52
4AC6:  MOVLB  0
4AC8:  CALL   1860
....................           
....................          if(Opcion==2)    
4ACC:  MOVLB  5
4ACE:  MOVF   x9C,W
4AD0:  SUBLW  02
4AD2:  BNZ   4B1A
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
4AD4:  MOVLW  06
4AD6:  MOVWF  FEA
4AD8:  MOVLW  2D
4ADA:  MOVWF  FE9
4ADC:  MOVFF  FF2,64D
4AE0:  BCF    FF2.7
4AE2:  MOVLW  00
4AE4:  MOVLB  0
4AE6:  CALL   0854
4AEA:  TBLRD*-
4AEC:  TBLRD*+
4AEE:  MOVF   FF5,W
4AF0:  MOVWF  FEE
4AF2:  IORLW  00
4AF4:  BNZ   4AEC
4AF6:  MOVLB  6
4AF8:  BTFSC  x4D.7
4AFA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
4AFC:  MOVLW  06
4AFE:  MOVWF  x4E
4B00:  MOVLW  2D
4B02:  MOVWF  x4D
4B04:  CLRF   x4F
4B06:  MOVLW  1E
4B08:  MOVWF  x50
4B0A:  MOVLW  01
4B0C:  MOVWF  x51
4B0E:  MOVWF  x52
4B10:  MOVLB  0
4B12:  CALL   1860
....................          else 
4B16:  BRA    4B5C
4B18:  MOVLB  5
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
4B1A:  MOVLW  06
4B1C:  MOVWF  FEA
4B1E:  MOVLW  2D
4B20:  MOVWF  FE9
4B22:  MOVFF  FF2,64D
4B26:  BCF    FF2.7
4B28:  MOVLW  00
4B2A:  MOVLB  0
4B2C:  CALL   0854
4B30:  TBLRD*-
4B32:  TBLRD*+
4B34:  MOVF   FF5,W
4B36:  MOVWF  FEE
4B38:  IORLW  00
4B3A:  BNZ   4B32
4B3C:  MOVLB  6
4B3E:  BTFSC  x4D.7
4B40:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);} 
4B42:  MOVLW  06
4B44:  MOVWF  x4E
4B46:  MOVLW  2D
4B48:  MOVWF  x4D
4B4A:  CLRF   x4F
4B4C:  MOVLW  1E
4B4E:  MOVWF  x50
4B50:  CLRF   x51
4B52:  MOVLW  01
4B54:  MOVWF  x52
4B56:  MOVLB  0
4B58:  CALL   1860
....................              
....................          if(Opcion==3)    
4B5C:  MOVLB  5
4B5E:  MOVF   x9C,W
4B60:  SUBLW  03
4B62:  BNZ   4BAA
....................             {strcpy(Menus.Letra,"Temporizador"); 
4B64:  MOVLW  06
4B66:  MOVWF  FEA
4B68:  MOVLW  2D
4B6A:  MOVWF  FE9
4B6C:  MOVFF  FF2,64D
4B70:  BCF    FF2.7
4B72:  MOVLW  00
4B74:  MOVLB  0
4B76:  CALL   0884
4B7A:  TBLRD*-
4B7C:  TBLRD*+
4B7E:  MOVF   FF5,W
4B80:  MOVWF  FEE
4B82:  IORLW  00
4B84:  BNZ   4B7C
4B86:  MOVLB  6
4B88:  BTFSC  x4D.7
4B8A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
4B8C:  MOVLW  06
4B8E:  MOVWF  x4E
4B90:  MOVLW  2D
4B92:  MOVWF  x4D
4B94:  CLRF   x4F
4B96:  MOVLW  28
4B98:  MOVWF  x50
4B9A:  MOVLW  01
4B9C:  MOVWF  x51
4B9E:  MOVWF  x52
4BA0:  MOVLB  0
4BA2:  CALL   1860
....................          else 
4BA6:  BRA    4BEC
4BA8:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temporizador"); 
4BAA:  MOVLW  06
4BAC:  MOVWF  FEA
4BAE:  MOVLW  2D
4BB0:  MOVWF  FE9
4BB2:  MOVFF  FF2,64D
4BB6:  BCF    FF2.7
4BB8:  MOVLW  00
4BBA:  MOVLB  0
4BBC:  CALL   0884
4BC0:  TBLRD*-
4BC2:  TBLRD*+
4BC4:  MOVF   FF5,W
4BC6:  MOVWF  FEE
4BC8:  IORLW  00
4BCA:  BNZ   4BC2
4BCC:  MOVLB  6
4BCE:  BTFSC  x4D.7
4BD0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}    
4BD2:  MOVLW  06
4BD4:  MOVWF  x4E
4BD6:  MOVLW  2D
4BD8:  MOVWF  x4D
4BDA:  CLRF   x4F
4BDC:  MOVLW  28
4BDE:  MOVWF  x50
4BE0:  CLRF   x51
4BE2:  MOVLW  01
4BE4:  MOVWF  x52
4BE6:  MOVLB  0
4BE8:  CALL   1860
....................                          
....................          if(Opcion==4)    
4BEC:  MOVLB  5
4BEE:  MOVF   x9C,W
4BF0:  SUBLW  04
4BF2:  BNZ   4C3A
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
4BF4:  MOVLW  06
4BF6:  MOVWF  FEA
4BF8:  MOVLW  2D
4BFA:  MOVWF  FE9
4BFC:  MOVFF  FF2,64D
4C00:  BCF    FF2.7
4C02:  MOVLW  00
4C04:  MOVLB  0
4C06:  CALL   08AC
4C0A:  TBLRD*-
4C0C:  TBLRD*+
4C0E:  MOVF   FF5,W
4C10:  MOVWF  FEE
4C12:  IORLW  00
4C14:  BNZ   4C0C
4C16:  MOVLB  6
4C18:  BTFSC  x4D.7
4C1A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
4C1C:  MOVLW  06
4C1E:  MOVWF  x4E
4C20:  MOVLW  2D
4C22:  MOVWF  x4D
4C24:  CLRF   x4F
4C26:  MOVLW  32
4C28:  MOVWF  x50
4C2A:  MOVLW  01
4C2C:  MOVWF  x51
4C2E:  MOVWF  x52
4C30:  MOVLB  0
4C32:  CALL   1860
....................          else 
4C36:  BRA    4C7C
4C38:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
4C3A:  MOVLW  06
4C3C:  MOVWF  FEA
4C3E:  MOVLW  2D
4C40:  MOVWF  FE9
4C42:  MOVFF  FF2,64D
4C46:  BCF    FF2.7
4C48:  MOVLW  00
4C4A:  MOVLB  0
4C4C:  CALL   08AC
4C50:  TBLRD*-
4C52:  TBLRD*+
4C54:  MOVF   FF5,W
4C56:  MOVWF  FEE
4C58:  IORLW  00
4C5A:  BNZ   4C52
4C5C:  MOVLB  6
4C5E:  BTFSC  x4D.7
4C60:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}      
4C62:  MOVLW  06
4C64:  MOVWF  x4E
4C66:  MOVLW  2D
4C68:  MOVWF  x4D
4C6A:  CLRF   x4F
4C6C:  MOVLW  32
4C6E:  MOVWF  x50
4C70:  CLRF   x51
4C72:  MOVLW  01
4C74:  MOVWF  x52
4C76:  MOVLB  0
4C78:  CALL   1860
....................              
....................          if(UP)//Si oprime hacia arriba 
4C7C:  MOVLB  5
4C7E:  BTFSS  x86.0
4C80:  BRA    4C96
....................          { 
....................             UP=0;delay_ms(30);Opcion--;visual=1; 
4C82:  BCF    x86.0
4C84:  MOVLW  1E
4C86:  MOVLB  6
4C88:  MOVWF  x53
4C8A:  MOVLB  0
4C8C:  CALL   0D1A
4C90:  MOVLB  5
4C92:  DECF   x9C,F
4C94:  BSF    x87.4
....................          } 
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
4C96:  BTFSS  x86.1
4C98:  BRA    4CAE
....................          { 
....................             DOWN=0;delay_ms(30);Opcion++;visual=1;    
4C9A:  BCF    x86.1
4C9C:  MOVLW  1E
4C9E:  MOVLB  6
4CA0:  MOVWF  x53
4CA2:  MOVLB  0
4CA4:  CALL   0D1A
4CA8:  MOVLB  5
4CAA:  INCF   x9C,F
4CAC:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
4CAE:  BTFSS  x86.2
4CB0:  BRA    4CE4
....................          {  
....................             RIGHT=0;delay_ms(500);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
4CB2:  BCF    x86.2
4CB4:  MOVLW  02
4CB6:  MOVLB  6
4CB8:  MOVWF  x4D
4CBA:  MOVLW  FA
4CBC:  MOVWF  x53
4CBE:  MOVLB  0
4CC0:  CALL   0D1A
4CC4:  MOVLB  6
4CC6:  DECFSZ x4D,F
4CC8:  BRA    4CBA
4CCA:  MOVLW  03
4CCC:  MOVLB  5
4CCE:  ADDWF  x9C,W
4CD0:  MOVWF  x96
4CD2:  MOVLW  01
4CD4:  MOVWF  x9C
4CD6:  MOVLB  6
4CD8:  CLRF   x4E
4CDA:  MOVLB  0
4CDC:  CALL   1232
4CE0:  MOVLB  5
4CE2:  BSF    x87.4
....................          } 
....................        
....................  
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Continuar 
4CE4:  MOVF   x96,W
4CE6:  SUBLW  04
4CE8:  BTFSS  FD8.2
4CEA:  BRA    50A0
....................        
....................       if(Opcion>3) 
4CEC:  MOVF   x9C,W
4CEE:  SUBLW  03
4CF0:  BC    4CF6
....................          Opcion=1; 
4CF2:  MOVLW  01
4CF4:  MOVWF  x9C
....................           
....................       if(Opcion<1) 
4CF6:  MOVF   x9C,F
4CF8:  BNZ   4CFE
....................          Opcion=3; 
4CFA:  MOVLW  03
4CFC:  MOVWF  x9C
....................        
....................          strcpy(Menus.Letra,"Seleccione"); 
4CFE:  MOVLW  06
4D00:  MOVWF  FEA
4D02:  MOVLW  2D
4D04:  MOVWF  FE9
4D06:  MOVFF  FF2,64D
4D0A:  BCF    FF2.7
4D0C:  MOVLW  00
4D0E:  MOVLB  0
4D10:  CALL   08D4
4D14:  TBLRD*-
4D16:  TBLRD*+
4D18:  MOVF   FF5,W
4D1A:  MOVWF  FEE
4D1C:  IORLW  00
4D1E:  BNZ   4D16
4D20:  MOVLB  6
4D22:  BTFSC  x4D.7
4D24:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
4D26:  MOVLW  06
4D28:  MOVWF  x4E
4D2A:  MOVLW  2D
4D2C:  MOVWF  x4D
4D2E:  CLRF   x4F
4D30:  CLRF   x50
4D32:  MOVLW  01
4D34:  MOVWF  x51
4D36:  MOVLW  02
4D38:  MOVWF  x52
4D3A:  MOVLB  0
4D3C:  CALL   1860
....................           
....................          strcpy(Menus.Letra,"Temperatura"); 
4D40:  MOVLW  06
4D42:  MOVWF  FEA
4D44:  MOVLW  2D
4D46:  MOVWF  FE9
4D48:  MOVFF  FF2,64D
4D4C:  BCF    FF2.7
4D4E:  MOVLW  00
4D50:  CALL   08FA
4D54:  TBLRD*-
4D56:  TBLRD*+
4D58:  MOVF   FF5,W
4D5A:  MOVWF  FEE
4D5C:  IORLW  00
4D5E:  BNZ   4D56
4D60:  MOVLB  6
4D62:  BTFSC  x4D.7
4D64:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,16,1,2); 
4D66:  MOVLW  06
4D68:  MOVWF  x4E
4D6A:  MOVLW  2D
4D6C:  MOVWF  x4D
4D6E:  CLRF   x4F
4D70:  MOVLW  10
4D72:  MOVWF  x50
4D74:  MOVLW  01
4D76:  MOVWF  x51
4D78:  MOVLW  02
4D7A:  MOVWF  x52
4D7C:  MOVLB  0
4D7E:  CALL   1860
....................           
....................          displayContrasena(Opcion,10,38,1); 
4D82:  MOVFF  59C,64F
4D86:  MOVLW  0A
4D88:  MOVLB  6
4D8A:  MOVWF  x50
4D8C:  MOVLW  26
4D8E:  MOVWF  x51
4D90:  MOVLW  01
4D92:  MOVWF  x52
4D94:  MOVLB  0
4D96:  CALL   1A86
....................          glcd_circle(90,38,2,NO,ON); 
4D9A:  MOVLW  5A
4D9C:  MOVLB  6
4D9E:  MOVWF  x62
4DA0:  MOVLW  26
4DA2:  MOVWF  x63
4DA4:  MOVLW  02
4DA6:  MOVWF  x64
4DA8:  CLRF   x65
4DAA:  MOVLW  01
4DAC:  MOVWF  x66
4DAE:  MOVLB  0
4DB0:  CALL   2148
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,97,35,2,2);          
4DB4:  MOVLW  06
4DB6:  MOVWF  FEA
4DB8:  MOVLW  2D
4DBA:  MOVWF  FE9
4DBC:  MOVFF  FF2,64D
4DC0:  BCF    FF2.7
4DC2:  MOVLW  00
4DC4:  CALL   06BE
4DC8:  TBLRD*-
4DCA:  TBLRD*+
4DCC:  MOVF   FF5,W
4DCE:  MOVWF  FEE
4DD0:  IORLW  00
4DD2:  BNZ   4DCA
4DD4:  MOVLB  6
4DD6:  BTFSC  x4D.7
4DD8:  BSF    FF2.7
4DDA:  MOVLW  06
4DDC:  MOVWF  x4E
4DDE:  MOVLW  2D
4DE0:  MOVWF  x4D
4DE2:  MOVLW  61
4DE4:  MOVWF  x4F
4DE6:  MOVLW  23
4DE8:  MOVWF  x50
4DEA:  MOVLW  02
4DEC:  MOVWF  x51
4DEE:  MOVWF  x52
4DF0:  MOVLB  0
4DF2:  CALL   1860
....................           
....................          if(Opcion==1) 
4DF6:  MOVLB  5
4DF8:  DECFSZ x9C,W
4DFA:  BRA    4E3A
....................          { 
....................             displayTemperatura(Temperatura1,50,38,0,2); 
4DFC:  MOVFF  614,650
4E00:  MOVFF  613,64F
4E04:  MOVFF  612,64E
4E08:  MOVFF  611,64D
4E0C:  MOVLB  0
4E0E:  CALL   2372
4E12:  MOVFF  02,64E
4E16:  MOVFF  01,64D
4E1A:  MOVFF  02,650
4E1E:  MOVFF  01,64F
4E22:  MOVLW  32
4E24:  MOVLB  6
4E26:  MOVWF  x51
4E28:  MOVLW  26
4E2A:  MOVWF  x52
4E2C:  CLRF   x53
4E2E:  MOVLW  02
4E30:  MOVWF  x54
4E32:  MOVLB  0
4E34:  CALL   246C
4E38:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==2) 
4E3A:  MOVF   x9C,W
4E3C:  SUBLW  02
4E3E:  BNZ   4E7E
....................          { 
....................             displayTemperatura(Temperatura2,50,38,0,2); 
4E40:  MOVFF  618,650
4E44:  MOVFF  617,64F
4E48:  MOVFF  616,64E
4E4C:  MOVFF  615,64D
4E50:  MOVLB  0
4E52:  CALL   2372
4E56:  MOVFF  02,64E
4E5A:  MOVFF  01,64D
4E5E:  MOVFF  02,650
4E62:  MOVFF  01,64F
4E66:  MOVLW  32
4E68:  MOVLB  6
4E6A:  MOVWF  x51
4E6C:  MOVLW  26
4E6E:  MOVWF  x52
4E70:  CLRF   x53
4E72:  MOVLW  02
4E74:  MOVWF  x54
4E76:  MOVLB  0
4E78:  CALL   246C
4E7C:  MOVLB  5
....................          } 
....................           
....................          if(Opcion==3) 
4E7E:  MOVF   x9C,W
4E80:  SUBLW  03
4E82:  BNZ   4EC2
....................          { 
....................             displayTemperatura(Temperatura3,50,38,0,2); 
4E84:  MOVFF  61C,650
4E88:  MOVFF  61B,64F
4E8C:  MOVFF  61A,64E
4E90:  MOVFF  619,64D
4E94:  MOVLB  0
4E96:  CALL   2372
4E9A:  MOVFF  02,64E
4E9E:  MOVFF  01,64D
4EA2:  MOVFF  02,650
4EA6:  MOVFF  01,64F
4EAA:  MOVLW  32
4EAC:  MOVLB  6
4EAE:  MOVWF  x51
4EB0:  MOVLW  26
4EB2:  MOVWF  x52
4EB4:  CLRF   x53
4EB6:  MOVLW  02
4EB8:  MOVWF  x54
4EBA:  MOVLB  0
4EBC:  CALL   246C
4EC0:  MOVLB  5
....................          } 
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
4EC2:  BTFSS  x86.0
4EC4:  BRA    4EEA
....................       { 
....................          Opcion++; 
4EC6:  INCF   x9C,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
4EC8:  MOVLW  28
4ECA:  MOVLB  6
4ECC:  MOVWF  x62
4ECE:  MOVLW  23
4ED0:  MOVWF  x63
4ED2:  MOVLW  55
4ED4:  MOVWF  x64
4ED6:  MOVLW  3C
4ED8:  MOVWF  x65
4EDA:  MOVLW  01
4EDC:  MOVWF  x66
4EDE:  CLRF   x67
4EE0:  MOVLB  0
4EE2:  CALL   179E
....................          UP=0; 
4EE6:  MOVLB  5
4EE8:  BCF    x86.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
4EEA:  BTFSS  x86.1
4EEC:  BRA    4F12
....................       {   
....................          Opcion--;   
4EEE:  DECF   x9C,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
4EF0:  MOVLW  28
4EF2:  MOVLB  6
4EF4:  MOVWF  x62
4EF6:  MOVLW  23
4EF8:  MOVWF  x63
4EFA:  MOVLW  55
4EFC:  MOVWF  x64
4EFE:  MOVLW  3C
4F00:  MOVWF  x65
4F02:  MOVLW  01
4F04:  MOVWF  x66
4F06:  CLRF   x67
4F08:  MOVLB  0
4F0A:  CALL   179E
....................          DOWN=0; 
4F0E:  MOVLB  5
4F10:  BCF    x86.1
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
4F12:  BTFSS  x86.2
4F14:  BRA    506C
....................       {   
....................          if(Opcion==1) 
4F16:  DECFSZ x9C,W
4F18:  BRA    4F2A
....................          { 
....................             Setpoint=Temperatura1; 
4F1A:  MOVFF  614,610
4F1E:  MOVFF  613,60F
4F22:  MOVFF  612,60E
4F26:  MOVFF  611,60D
....................          } 
....................           
....................          if(Opcion==2) 
4F2A:  MOVF   x9C,W
4F2C:  SUBLW  02
4F2E:  BNZ   4F40
....................          { 
....................             Setpoint=Temperatura2; 
4F30:  MOVFF  618,610
4F34:  MOVFF  617,60F
4F38:  MOVFF  616,60E
4F3C:  MOVFF  615,60D
....................          } 
....................           
....................          if(Opcion==3) 
4F40:  MOVF   x9C,W
4F42:  SUBLW  03
4F44:  BNZ   4F56
....................          { 
....................             Setpoint=Temperatura3; 
4F46:  MOVFF  61C,610
4F4A:  MOVFF  61B,60F
4F4E:  MOVFF  61A,60E
4F52:  MOVFF  619,60D
....................          } 
....................           
....................          if(Setpoint<Temperatura) 
4F56:  MOVFF  610,650
4F5A:  MOVFF  60F,64F
4F5E:  MOVFF  60E,64E
4F62:  MOVFF  60D,64D
4F66:  MOVFF  604,654
4F6A:  MOVFF  603,653
4F6E:  MOVFF  602,652
4F72:  MOVFF  601,651
4F76:  MOVLB  0
4F78:  CALL   1178
4F7C:  BNC   4F94
....................          { 
....................             Enfria=1; 
4F7E:  MOVLW  01
4F80:  MOVLB  5
4F82:  MOVWF  x92
....................             Rele1_on;Rele2_on;Rele3_on; 
4F84:  BSF    F8B.0
4F86:  BCF    F94.0
4F88:  BSF    F8B.6
4F8A:  BCF    F94.6
4F8C:  BSF    F8B.7
4F8E:  BCF    F94.7
....................          } 
....................          else 
4F90:  BRA    4FA4
4F92:  MOVLB  0
....................          { 
....................             Enfria=0; 
4F94:  MOVLB  5
4F96:  CLRF   x92
....................             Rele1_off;Rele2_off;Rele3_off; 
4F98:  BCF    F8B.0
4F9A:  BCF    F94.0
4F9C:  BCF    F8B.6
4F9E:  BCF    F94.6
4FA0:  BCF    F8B.7
4FA2:  BCF    F94.7
....................          } 
....................           
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;glcd_fillScreen(OFF);pausa=0; 
4FA4:  MOVLW  14
4FA6:  MOVWF  x96
4FA8:  MOVLW  0F
4FAA:  MOVLB  6
4FAC:  MOVWF  x62
4FAE:  MOVLW  12
4FB0:  MOVWF  x63
4FB2:  MOVLW  1E
4FB4:  MOVWF  x64
4FB6:  MOVLW  35
4FB8:  MOVWF  x65
4FBA:  CLRF   x66
4FBC:  MOVLW  01
4FBE:  MOVWF  x67
4FC0:  MOVLB  0
4FC2:  CALL   179E
4FC6:  MOVLB  5
4FC8:  CLRF   x9E
4FCA:  MOVLB  6
4FCC:  CLRF   x4E
4FCE:  MOVLB  0
4FD0:  CALL   1232
4FD4:  MOVLB  5
4FD6:  CLRF   x99
....................          Ganancia=Setpoint*(Ganancia/Coeficiente); 
4FD8:  MOVFF  5F0,651
4FDC:  MOVFF  5EF,650
4FE0:  MOVFF  5EE,64F
4FE4:  MOVFF  5ED,64E
4FE8:  MOVFF  5FC,655
4FEC:  MOVFF  5FB,654
4FF0:  MOVFF  5FA,653
4FF4:  MOVFF  5F9,652
4FF8:  MOVLB  0
4FFA:  CALL   0DA2
4FFE:  MOVFF  610,670
5002:  MOVFF  60F,66F
5006:  MOVFF  60E,66E
500A:  MOVFF  60D,66D
500E:  MOVFF  03,674
5012:  MOVFF  02,673
5016:  MOVFF  01,672
501A:  MOVFF  00,671
501E:  CALL   1BB8
5022:  MOVFF  03,5F0
5026:  MOVFF  02,5EF
502A:  MOVFF  01,5EE
502E:  MOVFF  00,5ED
....................          //Tpulsomin=(Setpoint/150.0); 
....................          Gananciamax=(0.7)*Setpoint; 
5032:  MOVLW  33
5034:  MOVLB  6
5036:  MOVWF  x70
5038:  MOVWF  x6F
503A:  MOVWF  x6E
503C:  MOVLW  7E
503E:  MOVWF  x6D
5040:  MOVFF  610,674
5044:  MOVFF  60F,673
5048:  MOVFF  60E,672
504C:  MOVFF  60D,671
5050:  MOVLB  0
5052:  CALL   1BB8
5056:  MOVFF  03,5B8
505A:  MOVFF  02,5B7
505E:  MOVFF  01,5B6
5062:  MOVFF  00,5B5
....................          RIGHT=0;LEFT=0; 
5066:  MOVLB  5
5068:  BCF    x86.2
506A:  BCF    x86.3
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
506C:  BTFSS  x86.3
506E:  BRA    50A0
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5070:  MOVLW  04
5072:  MOVLB  6
5074:  MOVWF  x4D
5076:  MOVLW  AF
5078:  MOVWF  x53
507A:  MOVLB  0
507C:  CALL   0D1A
5080:  MOVLB  6
5082:  DECFSZ x4D,F
5084:  BRA    5076
5086:  MOVLW  01
5088:  MOVLB  5
508A:  MOVWF  x96
508C:  MOVLB  6
508E:  CLRF   x4E
5090:  MOVLB  0
5092:  CALL   1232
5096:  MOVLW  01
5098:  MOVLB  5
509A:  MOVWF  x9C
509C:  BSF    x87.4
....................          LEFT=0; 
509E:  BCF    x86.3
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Temperatura 
50A0:  MOVF   x96,W
50A2:  SUBLW  05
50A4:  BTFSS  FD8.2
50A6:  GOTO   591E
....................       
....................          if(Opcion>3) 
50AA:  MOVF   x9C,W
50AC:  SUBLW  03
50AE:  BC    50B4
....................          {Opcion=1;} 
50B0:  MOVLW  01
50B2:  MOVWF  x9C
....................          if(Opcion<1) 
50B4:  MOVF   x9C,F
50B6:  BNZ   50BC
....................          {Opcion=3;} 
50B8:  MOVLW  03
50BA:  MOVWF  x9C
....................           
....................        
....................          if(Opcion==1)    
50BC:  DECFSZ x9C,W
50BE:  BRA    5116
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 1"); 
50C0:  MOVLW  06
50C2:  MOVWF  FEA
50C4:  MOVLW  2D
50C6:  MOVWF  FE9
50C8:  MOVFF  FF2,64D
50CC:  BCF    FF2.7
50CE:  MOVLW  00
50D0:  MOVLB  0
50D2:  CALL   0920
50D6:  TBLRD*-
50D8:  TBLRD*+
50DA:  MOVF   FF5,W
50DC:  MOVWF  FEE
50DE:  IORLW  00
50E0:  BNZ   50D8
50E2:  MOVLB  6
50E4:  BTFSC  x4D.7
50E6:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,1,1); 
50E8:  MOVLW  06
50EA:  MOVWF  x4E
50EC:  MOVLW  2D
50EE:  MOVWF  x4D
50F0:  MOVFF  614,652
50F4:  MOVFF  613,651
50F8:  MOVFF  612,650
50FC:  MOVFF  611,64F
5100:  CLRF   x53
5102:  MOVLW  14
5104:  MOVWF  x54
5106:  MOVLW  01
5108:  MOVWF  x55
510A:  MOVWF  x56
510C:  MOVLB  0
510E:  CALL   289C
....................          } 
....................          else 
5112:  BRA    5168
5114:  MOVLB  5
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 1"); 
5116:  MOVLW  06
5118:  MOVWF  FEA
511A:  MOVLW  2D
511C:  MOVWF  FE9
511E:  MOVFF  FF2,64D
5122:  BCF    FF2.7
5124:  MOVLW  00
5126:  MOVLB  0
5128:  CALL   0920
512C:  TBLRD*-
512E:  TBLRD*+
5130:  MOVF   FF5,W
5132:  MOVWF  FEE
5134:  IORLW  00
5136:  BNZ   512E
5138:  MOVLB  6
513A:  BTFSC  x4D.7
513C:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,0,1); 
513E:  MOVLW  06
5140:  MOVWF  x4E
5142:  MOVLW  2D
5144:  MOVWF  x4D
5146:  MOVFF  614,652
514A:  MOVFF  613,651
514E:  MOVFF  612,650
5152:  MOVFF  611,64F
5156:  CLRF   x53
5158:  MOVLW  14
515A:  MOVWF  x54
515C:  CLRF   x55
515E:  MOVLW  01
5160:  MOVWF  x56
5162:  MOVLB  0
5164:  CALL   289C
....................          } 
....................           
....................          if(Opcion==2)    
5168:  MOVLB  5
516A:  MOVF   x9C,W
516C:  SUBLW  02
516E:  BNZ   51C6
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 2"); 
5170:  MOVLW  06
5172:  MOVWF  FEA
5174:  MOVLW  2D
5176:  MOVWF  FE9
5178:  MOVFF  FF2,64D
517C:  BCF    FF2.7
517E:  MOVLW  00
5180:  MOVLB  0
5182:  CALL   0948
5186:  TBLRD*-
5188:  TBLRD*+
518A:  MOVF   FF5,W
518C:  MOVWF  FEE
518E:  IORLW  00
5190:  BNZ   5188
5192:  MOVLB  6
5194:  BTFSC  x4D.7
5196:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,1,1); 
5198:  MOVLW  06
519A:  MOVWF  x4E
519C:  MOVLW  2D
519E:  MOVWF  x4D
51A0:  MOVFF  618,652
51A4:  MOVFF  617,651
51A8:  MOVFF  616,650
51AC:  MOVFF  615,64F
51B0:  CLRF   x53
51B2:  MOVLW  23
51B4:  MOVWF  x54
51B6:  MOVLW  01
51B8:  MOVWF  x55
51BA:  MOVWF  x56
51BC:  MOVLB  0
51BE:  CALL   289C
....................          } 
....................          else 
51C2:  BRA    5218
51C4:  MOVLB  5
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 2"); 
51C6:  MOVLW  06
51C8:  MOVWF  FEA
51CA:  MOVLW  2D
51CC:  MOVWF  FE9
51CE:  MOVFF  FF2,64D
51D2:  BCF    FF2.7
51D4:  MOVLW  00
51D6:  MOVLB  0
51D8:  CALL   0948
51DC:  TBLRD*-
51DE:  TBLRD*+
51E0:  MOVF   FF5,W
51E2:  MOVWF  FEE
51E4:  IORLW  00
51E6:  BNZ   51DE
51E8:  MOVLB  6
51EA:  BTFSC  x4D.7
51EC:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,0,1); 
51EE:  MOVLW  06
51F0:  MOVWF  x4E
51F2:  MOVLW  2D
51F4:  MOVWF  x4D
51F6:  MOVFF  618,652
51FA:  MOVFF  617,651
51FE:  MOVFF  616,650
5202:  MOVFF  615,64F
5206:  CLRF   x53
5208:  MOVLW  23
520A:  MOVWF  x54
520C:  CLRF   x55
520E:  MOVLW  01
5210:  MOVWF  x56
5212:  MOVLB  0
5214:  CALL   289C
....................          } 
....................              
....................          if(Opcion==3)    
5218:  MOVLB  5
521A:  MOVF   x9C,W
521C:  SUBLW  03
521E:  BNZ   5276
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 3"); 
5220:  MOVLW  06
5222:  MOVWF  FEA
5224:  MOVLW  2D
5226:  MOVWF  FE9
5228:  MOVFF  FF2,64D
522C:  BCF    FF2.7
522E:  MOVLW  00
5230:  MOVLB  0
5232:  CALL   0970
5236:  TBLRD*-
5238:  TBLRD*+
523A:  MOVF   FF5,W
523C:  MOVWF  FEE
523E:  IORLW  00
5240:  BNZ   5238
5242:  MOVLB  6
5244:  BTFSC  x4D.7
5246:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,1,1); 
5248:  MOVLW  06
524A:  MOVWF  x4E
524C:  MOVLW  2D
524E:  MOVWF  x4D
5250:  MOVFF  61C,652
5254:  MOVFF  61B,651
5258:  MOVFF  61A,650
525C:  MOVFF  619,64F
5260:  CLRF   x53
5262:  MOVLW  32
5264:  MOVWF  x54
5266:  MOVLW  01
5268:  MOVWF  x55
526A:  MOVWF  x56
526C:  MOVLB  0
526E:  CALL   289C
....................          } 
....................          else 
5272:  BRA    52C8
5274:  MOVLB  5
....................          { 
....................             strcpy(Menus.Letra,"Temperatura 3"); 
5276:  MOVLW  06
5278:  MOVWF  FEA
527A:  MOVLW  2D
527C:  MOVWF  FE9
527E:  MOVFF  FF2,64D
5282:  BCF    FF2.7
5284:  MOVLW  00
5286:  MOVLB  0
5288:  CALL   0970
528C:  TBLRD*-
528E:  TBLRD*+
5290:  MOVF   FF5,W
5292:  MOVWF  FEE
5294:  IORLW  00
5296:  BNZ   528E
5298:  MOVLB  6
529A:  BTFSC  x4D.7
529C:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,0,1); 
529E:  MOVLW  06
52A0:  MOVWF  x4E
52A2:  MOVLW  2D
52A4:  MOVWF  x4D
52A6:  MOVFF  61C,652
52AA:  MOVFF  61B,651
52AE:  MOVFF  61A,650
52B2:  MOVFF  619,64F
52B6:  CLRF   x53
52B8:  MOVLW  32
52BA:  MOVWF  x54
52BC:  CLRF   x55
52BE:  MOVLW  01
52C0:  MOVWF  x56
52C2:  MOVLB  0
52C4:  CALL   289C
....................          } 
....................                
....................                 
....................          if(RIGHT)//Si oprime SET 
52C8:  MOVLB  5
52CA:  BTFSS  x86.2
52CC:  BRA    52D2
....................          {  
....................             RIGHT=0;Opcion++; 
52CE:  BCF    x86.2
52D0:  INCF   x9C,F
....................          } 
....................        
....................          strcpy(Menus.Letra,"Temperatura"); 
52D2:  MOVLW  06
52D4:  MOVWF  FEA
52D6:  MOVLW  2D
52D8:  MOVWF  FE9
52DA:  MOVFF  FF2,64D
52DE:  BCF    FF2.7
52E0:  MOVLW  00
52E2:  MOVLB  0
52E4:  CALL   08FA
52E8:  TBLRD*-
52EA:  TBLRD*+
52EC:  MOVF   FF5,W
52EE:  MOVWF  FEE
52F0:  IORLW  00
52F2:  BNZ   52EA
52F4:  MOVLB  6
52F6:  BTFSC  x4D.7
52F8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
52FA:  MOVLW  06
52FC:  MOVWF  x4E
52FE:  MOVLW  2D
5300:  MOVWF  x4D
5302:  CLRF   x4F
5304:  CLRF   x50
5306:  MOVLW  01
5308:  MOVWF  x51
530A:  MOVLW  02
530C:  MOVWF  x52
530E:  MOVLB  0
5310:  CALL   1860
....................           
....................        
....................          if(UP)//Si oprime hacia arriba 
5314:  MOVLB  5
5316:  BTFSS  x86.0
5318:  BRA    53E0
....................          {   
....................             if(Opcion==1) 
531A:  DECFSZ x9C,W
531C:  BRA    535A
....................                Temperatura1+=0.1; 
531E:  BCF    FD8.1
5320:  MOVFF  614,655
5324:  MOVFF  613,654
5328:  MOVFF  612,653
532C:  MOVFF  611,652
5330:  MOVLW  CD
5332:  MOVLB  6
5334:  MOVWF  x59
5336:  MOVLW  CC
5338:  MOVWF  x58
533A:  MOVLW  4C
533C:  MOVWF  x57
533E:  MOVLW  7B
5340:  MOVWF  x56
5342:  MOVLB  0
5344:  CALL   0F00
5348:  MOVFF  03,614
534C:  MOVFF  02,613
5350:  MOVFF  01,612
5354:  MOVFF  00,611
5358:  MOVLB  5
....................              
....................             if(Opcion==2) 
535A:  MOVF   x9C,W
535C:  SUBLW  02
535E:  BNZ   539C
....................                Temperatura2+=0.1; 
5360:  BCF    FD8.1
5362:  MOVFF  618,655
5366:  MOVFF  617,654
536A:  MOVFF  616,653
536E:  MOVFF  615,652
5372:  MOVLW  CD
5374:  MOVLB  6
5376:  MOVWF  x59
5378:  MOVLW  CC
537A:  MOVWF  x58
537C:  MOVLW  4C
537E:  MOVWF  x57
5380:  MOVLW  7B
5382:  MOVWF  x56
5384:  MOVLB  0
5386:  CALL   0F00
538A:  MOVFF  03,618
538E:  MOVFF  02,617
5392:  MOVFF  01,616
5396:  MOVFF  00,615
539A:  MOVLB  5
....................                 
....................             if(Opcion==3) 
539C:  MOVF   x9C,W
539E:  SUBLW  03
53A0:  BNZ   53DE
....................                Temperatura3+=0.1;    
53A2:  BCF    FD8.1
53A4:  MOVFF  61C,655
53A8:  MOVFF  61B,654
53AC:  MOVFF  61A,653
53B0:  MOVFF  619,652
53B4:  MOVLW  CD
53B6:  MOVLB  6
53B8:  MOVWF  x59
53BA:  MOVLW  CC
53BC:  MOVWF  x58
53BE:  MOVLW  4C
53C0:  MOVWF  x57
53C2:  MOVLW  7B
53C4:  MOVWF  x56
53C6:  MOVLB  0
53C8:  CALL   0F00
53CC:  MOVFF  03,61C
53D0:  MOVFF  02,61B
53D4:  MOVFF  01,61A
53D8:  MOVFF  00,619
53DC:  MOVLB  5
....................             UP=0; 
53DE:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
53E0:  BTFSS  x86.1
53E2:  BRA    54AA
....................          {   
....................             if(Opcion==1) 
53E4:  DECFSZ x9C,W
53E6:  BRA    5424
....................                Temperatura1-=0.1; 
53E8:  BSF    FD8.1
53EA:  MOVFF  614,655
53EE:  MOVFF  613,654
53F2:  MOVFF  612,653
53F6:  MOVFF  611,652
53FA:  MOVLW  CD
53FC:  MOVLB  6
53FE:  MOVWF  x59
5400:  MOVLW  CC
5402:  MOVWF  x58
5404:  MOVLW  4C
5406:  MOVWF  x57
5408:  MOVLW  7B
540A:  MOVWF  x56
540C:  MOVLB  0
540E:  CALL   0F00
5412:  MOVFF  03,614
5416:  MOVFF  02,613
541A:  MOVFF  01,612
541E:  MOVFF  00,611
5422:  MOVLB  5
....................              
....................             if(Opcion==2) 
5424:  MOVF   x9C,W
5426:  SUBLW  02
5428:  BNZ   5466
....................                Temperatura2-=0.1; 
542A:  BSF    FD8.1
542C:  MOVFF  618,655
5430:  MOVFF  617,654
5434:  MOVFF  616,653
5438:  MOVFF  615,652
543C:  MOVLW  CD
543E:  MOVLB  6
5440:  MOVWF  x59
5442:  MOVLW  CC
5444:  MOVWF  x58
5446:  MOVLW  4C
5448:  MOVWF  x57
544A:  MOVLW  7B
544C:  MOVWF  x56
544E:  MOVLB  0
5450:  CALL   0F00
5454:  MOVFF  03,618
5458:  MOVFF  02,617
545C:  MOVFF  01,616
5460:  MOVFF  00,615
5464:  MOVLB  5
....................                 
....................             if(Opcion==3) 
5466:  MOVF   x9C,W
5468:  SUBLW  03
546A:  BNZ   54A8
....................                Temperatura3-=0.1;    
546C:  BSF    FD8.1
546E:  MOVFF  61C,655
5472:  MOVFF  61B,654
5476:  MOVFF  61A,653
547A:  MOVFF  619,652
547E:  MOVLW  CD
5480:  MOVLB  6
5482:  MOVWF  x59
5484:  MOVLW  CC
5486:  MOVWF  x58
5488:  MOVLW  4C
548A:  MOVWF  x57
548C:  MOVLW  7B
548E:  MOVWF  x56
5490:  MOVLB  0
5492:  CALL   0F00
5496:  MOVFF  03,61C
549A:  MOVFF  02,61B
549E:  MOVFF  01,61A
54A2:  MOVFF  00,619
54A6:  MOVLB  5
....................             DOWN=0; 
54A8:  BCF    x86.1
....................          } 
....................                            
....................          if(LEFT)//Si oprime boton de Toma. 
54AA:  BTFSS  x86.3
54AC:  BRA    57EE
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
54AE:  MOVLW  04
54B0:  MOVLB  6
54B2:  MOVWF  x4D
54B4:  MOVLW  AF
54B6:  MOVWF  x53
54B8:  MOVLB  0
54BA:  CALL   0D1A
54BE:  MOVLB  6
54C0:  DECFSZ x4D,F
54C2:  BRA    54B4
54C4:  MOVLW  01
54C6:  MOVLB  5
54C8:  MOVWF  x96
54CA:  MOVLB  6
54CC:  CLRF   x4E
54CE:  MOVLB  0
54D0:  CALL   1232
54D4:  MOVLW  01
54D6:  MOVLB  5
54D8:  MOVWF  x9C
54DA:  BSF    x87.4
....................              
....................             entero=(int8)Temperatura1; 
54DC:  MOVFF  614,650
54E0:  MOVFF  613,64F
54E4:  MOVFF  612,64E
54E8:  MOVFF  611,64D
54EC:  MOVLB  0
54EE:  CALL   2372
54F2:  MOVFF  01,5A0
....................             decimal=(Temperatura1-entero)*10; 
54F6:  MOVLB  6
54F8:  CLRF   x54
54FA:  MOVFF  5A0,653
54FE:  MOVLB  0
5500:  CALL   0D6C
5504:  BSF    FD8.1
5506:  MOVFF  614,655
550A:  MOVFF  613,654
550E:  MOVFF  612,653
5512:  MOVFF  611,652
5516:  MOVFF  03,659
551A:  MOVFF  02,658
551E:  MOVFF  01,657
5522:  MOVFF  00,656
5526:  CALL   0F00
552A:  MOVFF  00,64D
552E:  MOVFF  01,64E
5532:  MOVFF  02,64F
5536:  MOVFF  03,650
553A:  MOVFF  03,670
553E:  MOVFF  02,66F
5542:  MOVFF  01,66E
5546:  MOVFF  00,66D
554A:  MOVLB  6
554C:  CLRF   x74
554E:  CLRF   x73
5550:  MOVLW  20
5552:  MOVWF  x72
5554:  MOVLW  82
5556:  MOVWF  x71
5558:  MOVLB  0
555A:  CALL   1BB8
555E:  MOVFF  03,650
5562:  MOVFF  02,64F
5566:  MOVFF  01,64E
556A:  MOVFF  00,64D
556E:  CALL   2372
5572:  MOVFF  01,59F
....................             write_eeprom(80,entero); 
5576:  MOVLW  50
5578:  MOVWF  FA9
557A:  MOVFF  5A0,FA8
557E:  BCF    FA6.6
5580:  BCF    FA6.7
5582:  BSF    FA6.2
5584:  MOVF   FF2,W
5586:  MOVWF  00
5588:  BCF    FF2.7
558A:  MOVLB  F
558C:  MOVLW  55
558E:  MOVWF  FA7
5590:  MOVLW  AA
5592:  MOVWF  FA7
5594:  BSF    FA6.1
5596:  BTFSC  FA6.1
5598:  BRA    5596
559A:  BCF    FA6.2
559C:  MOVF   00,W
559E:  IORWF  FF2,F
....................             delay_ms(50);    
55A0:  MOVLW  32
55A2:  MOVLB  6
55A4:  MOVWF  x53
55A6:  MOVLB  0
55A8:  CALL   0D1A
....................             write_eeprom(81,decimal);//Guardar valor de Setpoint en eeprom 
55AC:  MOVLW  51
55AE:  MOVWF  FA9
55B0:  MOVFF  59F,FA8
55B4:  BCF    FA6.6
55B6:  BCF    FA6.7
55B8:  BSF    FA6.2
55BA:  MOVF   FF2,W
55BC:  MOVWF  00
55BE:  BCF    FF2.7
55C0:  MOVLB  F
55C2:  MOVLW  55
55C4:  MOVWF  FA7
55C6:  MOVLW  AA
55C8:  MOVWF  FA7
55CA:  BSF    FA6.1
55CC:  BTFSC  FA6.1
55CE:  BRA    55CC
55D0:  BCF    FA6.2
55D2:  MOVF   00,W
55D4:  IORWF  FF2,F
....................             delay_ms(50);   
55D6:  MOVLW  32
55D8:  MOVLB  6
55DA:  MOVWF  x53
55DC:  MOVLB  0
55DE:  CALL   0D1A
....................              
....................             entero=(int8)Temperatura2; 
55E2:  MOVFF  618,650
55E6:  MOVFF  617,64F
55EA:  MOVFF  616,64E
55EE:  MOVFF  615,64D
55F2:  CALL   2372
55F6:  MOVFF  01,5A0
....................             decimal=(Temperatura2-entero)*10; 
55FA:  MOVLB  6
55FC:  CLRF   x54
55FE:  MOVFF  5A0,653
5602:  MOVLB  0
5604:  CALL   0D6C
5608:  BSF    FD8.1
560A:  MOVFF  618,655
560E:  MOVFF  617,654
5612:  MOVFF  616,653
5616:  MOVFF  615,652
561A:  MOVFF  03,659
561E:  MOVFF  02,658
5622:  MOVFF  01,657
5626:  MOVFF  00,656
562A:  CALL   0F00
562E:  MOVFF  00,64D
5632:  MOVFF  01,64E
5636:  MOVFF  02,64F
563A:  MOVFF  03,650
563E:  MOVFF  03,670
5642:  MOVFF  02,66F
5646:  MOVFF  01,66E
564A:  MOVFF  00,66D
564E:  MOVLB  6
5650:  CLRF   x74
5652:  CLRF   x73
5654:  MOVLW  20
5656:  MOVWF  x72
5658:  MOVLW  82
565A:  MOVWF  x71
565C:  MOVLB  0
565E:  CALL   1BB8
5662:  MOVFF  03,650
5666:  MOVFF  02,64F
566A:  MOVFF  01,64E
566E:  MOVFF  00,64D
5672:  CALL   2372
5676:  MOVFF  01,59F
....................             write_eeprom(83,entero); 
567A:  MOVLW  53
567C:  MOVWF  FA9
567E:  MOVFF  5A0,FA8
5682:  BCF    FA6.6
5684:  BCF    FA6.7
5686:  BSF    FA6.2
5688:  MOVF   FF2,W
568A:  MOVWF  00
568C:  BCF    FF2.7
568E:  MOVLB  F
5690:  MOVLW  55
5692:  MOVWF  FA7
5694:  MOVLW  AA
5696:  MOVWF  FA7
5698:  BSF    FA6.1
569A:  BTFSC  FA6.1
569C:  BRA    569A
569E:  BCF    FA6.2
56A0:  MOVF   00,W
56A2:  IORWF  FF2,F
....................             delay_ms(50);    
56A4:  MOVLW  32
56A6:  MOVLB  6
56A8:  MOVWF  x53
56AA:  MOVLB  0
56AC:  CALL   0D1A
....................             write_eeprom(84,decimal);//Guardar valor de Setpoint en eeprom 
56B0:  MOVLW  54
56B2:  MOVWF  FA9
56B4:  MOVFF  59F,FA8
56B8:  BCF    FA6.6
56BA:  BCF    FA6.7
56BC:  BSF    FA6.2
56BE:  MOVF   FF2,W
56C0:  MOVWF  00
56C2:  BCF    FF2.7
56C4:  MOVLB  F
56C6:  MOVLW  55
56C8:  MOVWF  FA7
56CA:  MOVLW  AA
56CC:  MOVWF  FA7
56CE:  BSF    FA6.1
56D0:  BTFSC  FA6.1
56D2:  BRA    56D0
56D4:  BCF    FA6.2
56D6:  MOVF   00,W
56D8:  IORWF  FF2,F
....................             delay_ms(50);    
56DA:  MOVLW  32
56DC:  MOVLB  6
56DE:  MOVWF  x53
56E0:  MOVLB  0
56E2:  CALL   0D1A
....................              
....................             entero=(int8)Temperatura3; 
56E6:  MOVFF  61C,650
56EA:  MOVFF  61B,64F
56EE:  MOVFF  61A,64E
56F2:  MOVFF  619,64D
56F6:  CALL   2372
56FA:  MOVFF  01,5A0
....................             decimal=(Temperatura3-entero)*10; 
56FE:  MOVLB  6
5700:  CLRF   x54
5702:  MOVFF  5A0,653
5706:  MOVLB  0
5708:  CALL   0D6C
570C:  BSF    FD8.1
570E:  MOVFF  61C,655
5712:  MOVFF  61B,654
5716:  MOVFF  61A,653
571A:  MOVFF  619,652
571E:  MOVFF  03,659
5722:  MOVFF  02,658
5726:  MOVFF  01,657
572A:  MOVFF  00,656
572E:  CALL   0F00
5732:  MOVFF  00,64D
5736:  MOVFF  01,64E
573A:  MOVFF  02,64F
573E:  MOVFF  03,650
5742:  MOVFF  03,670
5746:  MOVFF  02,66F
574A:  MOVFF  01,66E
574E:  MOVFF  00,66D
5752:  MOVLB  6
5754:  CLRF   x74
5756:  CLRF   x73
5758:  MOVLW  20
575A:  MOVWF  x72
575C:  MOVLW  82
575E:  MOVWF  x71
5760:  MOVLB  0
5762:  CALL   1BB8
5766:  MOVFF  03,650
576A:  MOVFF  02,64F
576E:  MOVFF  01,64E
5772:  MOVFF  00,64D
5776:  CALL   2372
577A:  MOVFF  01,59F
....................             write_eeprom(86,entero); 
577E:  MOVLW  56
5780:  MOVWF  FA9
5782:  MOVFF  5A0,FA8
5786:  BCF    FA6.6
5788:  BCF    FA6.7
578A:  BSF    FA6.2
578C:  MOVF   FF2,W
578E:  MOVWF  00
5790:  BCF    FF2.7
5792:  MOVLB  F
5794:  MOVLW  55
5796:  MOVWF  FA7
5798:  MOVLW  AA
579A:  MOVWF  FA7
579C:  BSF    FA6.1
579E:  BTFSC  FA6.1
57A0:  BRA    579E
57A2:  BCF    FA6.2
57A4:  MOVF   00,W
57A6:  IORWF  FF2,F
....................             delay_ms(50);    
57A8:  MOVLW  32
57AA:  MOVLB  6
57AC:  MOVWF  x53
57AE:  MOVLB  0
57B0:  CALL   0D1A
....................             write_eeprom(87,decimal);//Guardar valor de Setpoint en eeprom 
57B4:  MOVLW  57
57B6:  MOVWF  FA9
57B8:  MOVFF  59F,FA8
57BC:  BCF    FA6.6
57BE:  BCF    FA6.7
57C0:  BSF    FA6.2
57C2:  MOVF   FF2,W
57C4:  MOVWF  00
57C6:  BCF    FF2.7
57C8:  MOVLB  F
57CA:  MOVLW  55
57CC:  MOVWF  FA7
57CE:  MOVLW  AA
57D0:  MOVWF  FA7
57D2:  BSF    FA6.1
57D4:  BTFSC  FA6.1
57D6:  BRA    57D4
57D8:  BCF    FA6.2
57DA:  MOVF   00,W
57DC:  IORWF  FF2,F
....................             delay_ms(50);    
57DE:  MOVLW  32
57E0:  MOVLB  6
57E2:  MOVWF  x53
57E4:  MOVLB  0
57E6:  CALL   0D1A
....................             LEFT=0; 
57EA:  MOVLB  5
57EC:  BCF    x86.3
....................          } 
....................           
....................          if(Temperatura1<1) 
57EE:  MOVFF  614,650
57F2:  MOVFF  613,64F
57F6:  MOVFF  612,64E
57FA:  MOVFF  611,64D
57FE:  MOVLB  6
5800:  CLRF   x54
5802:  CLRF   x53
5804:  CLRF   x52
5806:  MOVLW  7F
5808:  MOVWF  x51
580A:  MOVLB  0
580C:  CALL   1178
5810:  BNC   5820
....................             Temperatura1=60; 
5812:  MOVLB  6
5814:  CLRF   x14
5816:  CLRF   x13
5818:  MOVLW  70
581A:  MOVWF  x12
581C:  MOVLW  84
581E:  MOVWF  x11
....................              
....................          if(Temperatura2<1) 
5820:  MOVFF  618,650
5824:  MOVFF  617,64F
5828:  MOVFF  616,64E
582C:  MOVFF  615,64D
5830:  MOVLB  6
5832:  CLRF   x54
5834:  CLRF   x53
5836:  CLRF   x52
5838:  MOVLW  7F
583A:  MOVWF  x51
583C:  MOVLB  0
583E:  CALL   1178
5842:  BNC   5852
....................             Temperatura2=60; 
5844:  MOVLB  6
5846:  CLRF   x18
5848:  CLRF   x17
584A:  MOVLW  70
584C:  MOVWF  x16
584E:  MOVLW  84
5850:  MOVWF  x15
....................              
....................          if(Temperatura3<1) 
5852:  MOVFF  61C,650
5856:  MOVFF  61B,64F
585A:  MOVFF  61A,64E
585E:  MOVFF  619,64D
5862:  MOVLB  6
5864:  CLRF   x54
5866:  CLRF   x53
5868:  CLRF   x52
586A:  MOVLW  7F
586C:  MOVWF  x51
586E:  MOVLB  0
5870:  CALL   1178
5874:  BNC   5884
....................             Temperatura3=60; 
5876:  MOVLB  6
5878:  CLRF   x1C
587A:  CLRF   x1B
587C:  MOVLW  70
587E:  MOVWF  x1A
5880:  MOVLW  84
5882:  MOVWF  x19
....................              
....................          if(Temperatura1>60) 
5884:  MOVLB  6
5886:  CLRF   x50
5888:  CLRF   x4F
588A:  MOVLW  70
588C:  MOVWF  x4E
588E:  MOVLW  84
5890:  MOVWF  x4D
5892:  MOVFF  614,654
5896:  MOVFF  613,653
589A:  MOVFF  612,652
589E:  MOVFF  611,651
58A2:  MOVLB  0
58A4:  CALL   1178
58A8:  BNC   58B6
....................             Temperatura1=1;    
58AA:  MOVLB  6
58AC:  CLRF   x14
58AE:  CLRF   x13
58B0:  CLRF   x12
58B2:  MOVLW  7F
58B4:  MOVWF  x11
....................              
....................          if(Temperatura2>60) 
58B6:  MOVLB  6
58B8:  CLRF   x50
58BA:  CLRF   x4F
58BC:  MOVLW  70
58BE:  MOVWF  x4E
58C0:  MOVLW  84
58C2:  MOVWF  x4D
58C4:  MOVFF  618,654
58C8:  MOVFF  617,653
58CC:  MOVFF  616,652
58D0:  MOVFF  615,651
58D4:  MOVLB  0
58D6:  CALL   1178
58DA:  BNC   58E8
....................             Temperatura2=1;    
58DC:  MOVLB  6
58DE:  CLRF   x18
58E0:  CLRF   x17
58E2:  CLRF   x16
58E4:  MOVLW  7F
58E6:  MOVWF  x15
....................              
....................          if(Temperatura3>60) 
58E8:  MOVLB  6
58EA:  CLRF   x50
58EC:  CLRF   x4F
58EE:  MOVLW  70
58F0:  MOVWF  x4E
58F2:  MOVLW  84
58F4:  MOVWF  x4D
58F6:  MOVFF  61C,654
58FA:  MOVFF  61B,653
58FE:  MOVFF  61A,652
5902:  MOVFF  619,651
5906:  MOVLB  0
5908:  CALL   1178
590C:  BNC   591C
....................             Temperatura3=1;    
590E:  MOVLB  6
5910:  CLRF   x1C
5912:  CLRF   x1B
5914:  CLRF   x1A
5916:  MOVLW  7F
5918:  MOVWF  x19
591A:  MOVLB  0
591C:  MOVLB  5
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Temporizador 
591E:  MOVF   x96,W
5920:  SUBLW  06
5922:  BTFSS  FD8.2
5924:  BRA    5C56
....................       
....................        
....................          if(unidad<1) 
5926:  MOVF   x97,F
5928:  BNZ   592E
....................          {unidad=4;} 
592A:  MOVLW  04
592C:  MOVWF  x97
....................           
....................          strcpy(Menus.Letra,"Temporiza"); 
592E:  MOVLW  06
5930:  MOVWF  FEA
5932:  MOVLW  2D
5934:  MOVWF  FE9
5936:  MOVFF  FF2,64D
593A:  BCF    FF2.7
593C:  MOVLW  00
593E:  MOVLB  0
5940:  CALL   0998
5944:  TBLRD*-
5946:  TBLRD*+
5948:  MOVF   FF5,W
594A:  MOVWF  FEE
594C:  IORLW  00
594E:  BNZ   5946
5950:  MOVLB  6
5952:  BTFSC  x4D.7
5954:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
5956:  MOVLW  06
5958:  MOVWF  x4E
595A:  MOVLW  2D
595C:  MOVWF  x4D
595E:  CLRF   x4F
5960:  CLRF   x50
5962:  MOVLW  01
5964:  MOVWF  x51
5966:  MOVLW  02
5968:  MOVWF  x52
596A:  MOVLB  0
596C:  CALL   1860
....................           
....................          if(unidad==4) 
5970:  MOVLB  5
5972:  MOVF   x97,W
5974:  SUBLW  04
5976:  BNZ   5996
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
5978:  MOVFF  5C0,64E
597C:  MOVLW  14
597E:  MOVLB  6
5980:  MOVWF  x4F
5982:  MOVLW  28
5984:  MOVWF  x50
5986:  MOVLW  01
5988:  MOVWF  x51
598A:  MOVLW  02
598C:  MOVWF  x52
598E:  MOVLB  0
5990:  CALL   2BAA
....................          else 
5994:  BRA    59B0
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
5996:  MOVFF  5C0,64E
599A:  MOVLW  14
599C:  MOVLB  6
599E:  MOVWF  x4F
59A0:  MOVLW  28
59A2:  MOVWF  x50
59A4:  CLRF   x51
59A6:  MOVLW  02
59A8:  MOVWF  x52
59AA:  MOVLB  0
59AC:  CALL   2BAA
....................           
....................          if(unidad==3) 
59B0:  MOVLB  5
59B2:  MOVF   x97,W
59B4:  SUBLW  03
59B6:  BNZ   59D4
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
59B8:  MOVFF  5BF,64E
59BC:  MOVLW  28
59BE:  MOVLB  6
59C0:  MOVWF  x4F
59C2:  MOVWF  x50
59C4:  MOVLW  01
59C6:  MOVWF  x51
59C8:  MOVLW  02
59CA:  MOVWF  x52
59CC:  MOVLB  0
59CE:  CALL   2BAA
....................          else 
59D2:  BRA    59EC
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
59D4:  MOVFF  5BF,64E
59D8:  MOVLW  28
59DA:  MOVLB  6
59DC:  MOVWF  x4F
59DE:  MOVWF  x50
59E0:  CLRF   x51
59E2:  MOVLW  02
59E4:  MOVWF  x52
59E6:  MOVLB  0
59E8:  CALL   2BAA
....................           
....................          if(unidad==2) 
59EC:  MOVLB  5
59EE:  MOVF   x97,W
59F0:  SUBLW  02
59F2:  BNZ   5A12
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
59F4:  MOVFF  5BE,64E
59F8:  MOVLW  46
59FA:  MOVLB  6
59FC:  MOVWF  x4F
59FE:  MOVLW  28
5A00:  MOVWF  x50
5A02:  MOVLW  01
5A04:  MOVWF  x51
5A06:  MOVLW  02
5A08:  MOVWF  x52
5A0A:  MOVLB  0
5A0C:  CALL   2BAA
....................          else 
5A10:  BRA    5A2C
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
5A12:  MOVFF  5BE,64E
5A16:  MOVLW  46
5A18:  MOVLB  6
5A1A:  MOVWF  x4F
5A1C:  MOVLW  28
5A1E:  MOVWF  x50
5A20:  CLRF   x51
5A22:  MOVLW  02
5A24:  MOVWF  x52
5A26:  MOVLB  0
5A28:  CALL   2BAA
....................           
....................          if(unidad==1) 
5A2C:  MOVLB  5
5A2E:  DECFSZ x97,W
5A30:  BRA    5A50
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
5A32:  MOVFF  5BD,64E
5A36:  MOVLW  5A
5A38:  MOVLB  6
5A3A:  MOVWF  x4F
5A3C:  MOVLW  28
5A3E:  MOVWF  x50
5A40:  MOVLW  01
5A42:  MOVWF  x51
5A44:  MOVLW  02
5A46:  MOVWF  x52
5A48:  MOVLB  0
5A4A:  CALL   2BAA
....................          else 
5A4E:  BRA    5A6A
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
5A50:  MOVFF  5BD,64E
5A54:  MOVLW  5A
5A56:  MOVLB  6
5A58:  MOVWF  x4F
5A5A:  MOVLW  28
5A5C:  MOVWF  x50
5A5E:  CLRF   x51
5A60:  MOVLW  02
5A62:  MOVWF  x52
5A64:  MOVLB  0
5A66:  CALL   2BAA
....................           
....................          strcpy(Menus.Letra,":"); 
5A6A:  MOVLW  06
5A6C:  MOVWF  FEA
5A6E:  MOVLW  2D
5A70:  MOVWF  FE9
5A72:  MOVFF  FF2,64D
5A76:  BCF    FF2.7
5A78:  MOVLW  00
5A7A:  CALL   09BC
5A7E:  TBLRD*-
5A80:  TBLRD*+
5A82:  MOVF   FF5,W
5A84:  MOVWF  FEE
5A86:  IORLW  00
5A88:  BNZ   5A80
5A8A:  MOVLB  6
5A8C:  BTFSC  x4D.7
5A8E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);            
5A90:  MOVLW  06
5A92:  MOVWF  x4E
5A94:  MOVLW  2D
5A96:  MOVWF  x4D
5A98:  MOVLW  3C
5A9A:  MOVWF  x4F
5A9C:  MOVLW  2A
5A9E:  MOVWF  x50
5AA0:  MOVLW  02
5AA2:  MOVWF  x51
5AA4:  MOVWF  x52
5AA6:  MOVLB  0
5AA8:  CALL   1860
....................        
....................          if(UP)//Si oprime hacia arriba 
5AAC:  MOVLB  5
5AAE:  BTFSS  x86.0
5AB0:  BRA    5AF0
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
5AB2:  MOVLW  01
5AB4:  SUBWF  x97,W
5AB6:  CLRF   03
5AB8:  ADDLW  BD
5ABA:  MOVWF  FE9
5ABC:  MOVLW  05
5ABE:  ADDWFC 03,W
5AC0:  MOVWF  FEA
5AC2:  BTFSC  FEF.7
5AC4:  BRA    5ACC
5AC6:  MOVF   FEF,W
5AC8:  SUBLW  08
5ACA:  BNC   5AEE
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
5ACC:  MOVLW  1E
5ACE:  MOVLB  6
5AD0:  MOVWF  x53
5AD2:  MOVLB  0
5AD4:  CALL   0D1A
5AD8:  MOVLW  01
5ADA:  MOVLB  5
5ADC:  SUBWF  x97,W
5ADE:  CLRF   03
5AE0:  ADDLW  BD
5AE2:  MOVWF  FE9
5AE4:  MOVLW  05
5AE6:  ADDWFC 03,W
5AE8:  MOVWF  FEA
5AEA:  INCF   FEF,F
5AEC:  BSF    x87.4
....................             } 
....................             UP=0; 
5AEE:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
5AF0:  BTFSS  x86.1
5AF2:  BRA    5B32
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
5AF4:  MOVLW  01
5AF6:  SUBWF  x97,W
5AF8:  CLRF   03
5AFA:  ADDLW  BD
5AFC:  MOVWF  FE9
5AFE:  MOVLW  05
5B00:  ADDWFC 03,W
5B02:  MOVWF  FEA
5B04:  BTFSC  FEF.7
5B06:  BRA    5B30
5B08:  MOVF   FEF,W
5B0A:  SUBLW  00
5B0C:  BC    5B30
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
5B0E:  MOVLW  1E
5B10:  MOVLB  6
5B12:  MOVWF  x53
5B14:  MOVLB  0
5B16:  CALL   0D1A
5B1A:  MOVLW  01
5B1C:  MOVLB  5
5B1E:  SUBWF  x97,W
5B20:  CLRF   03
5B22:  ADDLW  BD
5B24:  MOVWF  FE9
5B26:  MOVLW  05
5B28:  ADDWFC 03,W
5B2A:  MOVWF  FEA
5B2C:  DECF   FEF,F
5B2E:  BSF    x87.4
....................             } 
....................             DOWN=0; 
5B30:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
5B32:  BTFSS  x86.2
5B34:  BRA    5B4A
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
5B36:  MOVLW  1E
5B38:  MOVLB  6
5B3A:  MOVWF  x53
5B3C:  MOVLB  0
5B3E:  CALL   0D1A
5B42:  MOVLB  5
5B44:  DECF   x97,F
5B46:  BSF    x87.4
....................             RIGHT=0; 
5B48:  BCF    x86.2
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
5B4A:  BTFSS  x86.3
5B4C:  BRA    5C56
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
5B4E:  MOVLW  04
5B50:  MOVLB  6
5B52:  MOVWF  x4D
5B54:  MOVLW  AF
5B56:  MOVWF  x53
5B58:  MOVLB  0
5B5A:  CALL   0D1A
5B5E:  MOVLB  6
5B60:  DECFSZ x4D,F
5B62:  BRA    5B54
5B64:  MOVLW  01
5B66:  MOVLB  5
5B68:  MOVWF  x96
5B6A:  MOVLB  6
5B6C:  CLRF   x4E
5B6E:  MOVLB  0
5B70:  CALL   1232
5B74:  MOVLW  01
5B76:  MOVLB  5
5B78:  MOVWF  x9C
5B7A:  BSF    x87.4
....................             write_eeprom(0,Testerilizacionp[0]); 
5B7C:  CLRF   FA9
5B7E:  MOVFF  5BD,FA8
5B82:  BCF    FA6.6
5B84:  BCF    FA6.7
5B86:  BSF    FA6.2
5B88:  MOVF   FF2,W
5B8A:  MOVWF  00
5B8C:  BCF    FF2.7
5B8E:  MOVLB  F
5B90:  MOVLW  55
5B92:  MOVWF  FA7
5B94:  MOVLW  AA
5B96:  MOVWF  FA7
5B98:  BSF    FA6.1
5B9A:  BTFSC  FA6.1
5B9C:  BRA    5B9A
5B9E:  BCF    FA6.2
5BA0:  MOVF   00,W
5BA2:  IORWF  FF2,F
....................             delay_ms(50);    
5BA4:  MOVLW  32
5BA6:  MOVLB  6
5BA8:  MOVWF  x53
5BAA:  MOVLB  0
5BAC:  CALL   0D1A
....................             write_eeprom(1,Testerilizacionp[1]); 
5BB0:  MOVLW  01
5BB2:  MOVWF  FA9
5BB4:  MOVFF  5BE,FA8
5BB8:  BCF    FA6.6
5BBA:  BCF    FA6.7
5BBC:  BSF    FA6.2
5BBE:  MOVF   FF2,W
5BC0:  MOVWF  00
5BC2:  BCF    FF2.7
5BC4:  MOVLB  F
5BC6:  MOVLW  55
5BC8:  MOVWF  FA7
5BCA:  MOVLW  AA
5BCC:  MOVWF  FA7
5BCE:  BSF    FA6.1
5BD0:  BTFSC  FA6.1
5BD2:  BRA    5BD0
5BD4:  BCF    FA6.2
5BD6:  MOVF   00,W
5BD8:  IORWF  FF2,F
....................             delay_ms(50);    
5BDA:  MOVLW  32
5BDC:  MOVLB  6
5BDE:  MOVWF  x53
5BE0:  MOVLB  0
5BE2:  CALL   0D1A
....................             write_eeprom(2,Testerilizacionp[2]); 
5BE6:  MOVLW  02
5BE8:  MOVWF  FA9
5BEA:  MOVFF  5BF,FA8
5BEE:  BCF    FA6.6
5BF0:  BCF    FA6.7
5BF2:  BSF    FA6.2
5BF4:  MOVF   FF2,W
5BF6:  MOVWF  00
5BF8:  BCF    FF2.7
5BFA:  MOVLB  F
5BFC:  MOVLW  55
5BFE:  MOVWF  FA7
5C00:  MOVLW  AA
5C02:  MOVWF  FA7
5C04:  BSF    FA6.1
5C06:  BTFSC  FA6.1
5C08:  BRA    5C06
5C0A:  BCF    FA6.2
5C0C:  MOVF   00,W
5C0E:  IORWF  FF2,F
....................             delay_ms(50);    
5C10:  MOVLW  32
5C12:  MOVLB  6
5C14:  MOVWF  x53
5C16:  MOVLB  0
5C18:  CALL   0D1A
....................             write_eeprom(3,Testerilizacionp[3]); 
5C1C:  MOVLW  03
5C1E:  MOVWF  FA9
5C20:  MOVFF  5C0,FA8
5C24:  BCF    FA6.6
5C26:  BCF    FA6.7
5C28:  BSF    FA6.2
5C2A:  MOVF   FF2,W
5C2C:  MOVWF  00
5C2E:  BCF    FF2.7
5C30:  MOVLB  F
5C32:  MOVLW  55
5C34:  MOVWF  FA7
5C36:  MOVLW  AA
5C38:  MOVWF  FA7
5C3A:  BSF    FA6.1
5C3C:  BTFSC  FA6.1
5C3E:  BRA    5C3C
5C40:  BCF    FA6.2
5C42:  MOVF   00,W
5C44:  IORWF  FF2,F
....................             delay_ms(50);    
5C46:  MOVLW  32
5C48:  MOVLB  6
5C4A:  MOVWF  x53
5C4C:  MOVLB  0
5C4E:  CALL   0D1A
....................             LEFT=0; 
5C52:  MOVLB  5
5C54:  BCF    x86.3
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==7){ // Menu de Cambio de Contraseña 
5C56:  MOVF   x96,W
5C58:  SUBLW  07
5C5A:  BTFSS  FD8.2
5C5C:  BRA    60EA
....................          
....................       strcpy(Menus.Letra,"Clave"); 
5C5E:  MOVLW  06
5C60:  MOVWF  FEA
5C62:  MOVLW  2D
5C64:  MOVWF  FE9
5C66:  MOVFF  FF2,64D
5C6A:  BCF    FF2.7
5C6C:  MOVLW  00
5C6E:  MOVLB  0
5C70:  CALL   07A0
5C74:  TBLRD*-
5C76:  TBLRD*+
5C78:  MOVF   FF5,W
5C7A:  MOVWF  FEE
5C7C:  IORLW  00
5C7E:  BNZ   5C76
5C80:  MOVLB  6
5C82:  BTFSC  x4D.7
5C84:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2);      
5C86:  MOVLW  06
5C88:  MOVWF  x4E
5C8A:  MOVLW  2D
5C8C:  MOVWF  x4D
5C8E:  MOVLW  1E
5C90:  MOVWF  x4F
5C92:  CLRF   x50
5C94:  MOVLW  01
5C96:  MOVWF  x51
5C98:  MOVLW  02
5C9A:  MOVWF  x52
5C9C:  MOVLB  0
5C9E:  CALL   1860
....................        
....................       if(unidad==1) 
5CA2:  MOVLB  5
5CA4:  DECFSZ x97,W
5CA6:  BRA    5D06
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1); 
5CA8:  MOVFF  5C1,64F
5CAC:  MOVLW  14
5CAE:  MOVLB  6
5CB0:  MOVWF  x50
5CB2:  MOVLW  1E
5CB4:  MOVWF  x51
5CB6:  MOVLW  01
5CB8:  MOVWF  x52
5CBA:  MOVLB  0
5CBC:  CALL   1A86
....................          displayContrasena(Contrasena[1],40,30,0); 
5CC0:  MOVFF  5C2,64F
5CC4:  MOVLW  28
5CC6:  MOVLB  6
5CC8:  MOVWF  x50
5CCA:  MOVLW  1E
5CCC:  MOVWF  x51
5CCE:  CLRF   x52
5CD0:  MOVLB  0
5CD2:  CALL   1A86
....................          displayContrasena(Contrasena[2],60,30,0); 
5CD6:  MOVFF  5C3,64F
5CDA:  MOVLW  3C
5CDC:  MOVLB  6
5CDE:  MOVWF  x50
5CE0:  MOVLW  1E
5CE2:  MOVWF  x51
5CE4:  CLRF   x52
5CE6:  MOVLB  0
5CE8:  CALL   1A86
....................          displayContrasena(Contrasena[3],80,30,0); 
5CEC:  MOVFF  5C4,64F
5CF0:  MOVLW  50
5CF2:  MOVLB  6
5CF4:  MOVWF  x50
5CF6:  MOVLW  1E
5CF8:  MOVWF  x51
5CFA:  CLRF   x52
5CFC:  MOVLB  0
5CFE:  CALL   1A86
....................       } 
....................       else 
5D02:  BRA    5E2E
5D04:  MOVLB  5
....................       { 
....................          if(unidad==2) 
5D06:  MOVF   x97,W
5D08:  SUBLW  02
5D0A:  BNZ   5D6A
....................          { 
....................             displayContrasena(Contrasena[0],20,30,0); 
5D0C:  MOVFF  5C1,64F
5D10:  MOVLW  14
5D12:  MOVLB  6
5D14:  MOVWF  x50
5D16:  MOVLW  1E
5D18:  MOVWF  x51
5D1A:  CLRF   x52
5D1C:  MOVLB  0
5D1E:  CALL   1A86
....................             displayContrasena(Contrasena[1],40,30,1); 
5D22:  MOVFF  5C2,64F
5D26:  MOVLW  28
5D28:  MOVLB  6
5D2A:  MOVWF  x50
5D2C:  MOVLW  1E
5D2E:  MOVWF  x51
5D30:  MOVLW  01
5D32:  MOVWF  x52
5D34:  MOVLB  0
5D36:  CALL   1A86
....................             displayContrasena(Contrasena[2],60,30,0); 
5D3A:  MOVFF  5C3,64F
5D3E:  MOVLW  3C
5D40:  MOVLB  6
5D42:  MOVWF  x50
5D44:  MOVLW  1E
5D46:  MOVWF  x51
5D48:  CLRF   x52
5D4A:  MOVLB  0
5D4C:  CALL   1A86
....................             displayContrasena(Contrasena[3],80,30,0); 
5D50:  MOVFF  5C4,64F
5D54:  MOVLW  50
5D56:  MOVLB  6
5D58:  MOVWF  x50
5D5A:  MOVLW  1E
5D5C:  MOVWF  x51
5D5E:  CLRF   x52
5D60:  MOVLB  0
5D62:  CALL   1A86
....................          } 
....................          else 
5D66:  BRA    5E2E
5D68:  MOVLB  5
....................          { 
....................             if(unidad==3) 
5D6A:  MOVF   x97,W
5D6C:  SUBLW  03
5D6E:  BNZ   5DCE
....................             { 
....................                displayContrasena(Contrasena[0],20,30,0); 
5D70:  MOVFF  5C1,64F
5D74:  MOVLW  14
5D76:  MOVLB  6
5D78:  MOVWF  x50
5D7A:  MOVLW  1E
5D7C:  MOVWF  x51
5D7E:  CLRF   x52
5D80:  MOVLB  0
5D82:  CALL   1A86
....................                displayContrasena(Contrasena[1],40,30,0); 
5D86:  MOVFF  5C2,64F
5D8A:  MOVLW  28
5D8C:  MOVLB  6
5D8E:  MOVWF  x50
5D90:  MOVLW  1E
5D92:  MOVWF  x51
5D94:  CLRF   x52
5D96:  MOVLB  0
5D98:  CALL   1A86
....................                displayContrasena(Contrasena[2],60,30,1); 
5D9C:  MOVFF  5C3,64F
5DA0:  MOVLW  3C
5DA2:  MOVLB  6
5DA4:  MOVWF  x50
5DA6:  MOVLW  1E
5DA8:  MOVWF  x51
5DAA:  MOVLW  01
5DAC:  MOVWF  x52
5DAE:  MOVLB  0
5DB0:  CALL   1A86
....................                displayContrasena(Contrasena[3],80,30,0); 
5DB4:  MOVFF  5C4,64F
5DB8:  MOVLW  50
5DBA:  MOVLB  6
5DBC:  MOVWF  x50
5DBE:  MOVLW  1E
5DC0:  MOVWF  x51
5DC2:  CLRF   x52
5DC4:  MOVLB  0
5DC6:  CALL   1A86
....................             } 
....................             else 
5DCA:  BRA    5E2E
5DCC:  MOVLB  5
....................             { 
....................                if(unidad==4) 
5DCE:  MOVF   x97,W
5DD0:  SUBLW  04
5DD2:  BNZ   5E30
....................                { 
....................                   displayContrasena(Contrasena[0],20,30,0); 
5DD4:  MOVFF  5C1,64F
5DD8:  MOVLW  14
5DDA:  MOVLB  6
5DDC:  MOVWF  x50
5DDE:  MOVLW  1E
5DE0:  MOVWF  x51
5DE2:  CLRF   x52
5DE4:  MOVLB  0
5DE6:  CALL   1A86
....................                   displayContrasena(Contrasena[1],40,30,0); 
5DEA:  MOVFF  5C2,64F
5DEE:  MOVLW  28
5DF0:  MOVLB  6
5DF2:  MOVWF  x50
5DF4:  MOVLW  1E
5DF6:  MOVWF  x51
5DF8:  CLRF   x52
5DFA:  MOVLB  0
5DFC:  CALL   1A86
....................                   displayContrasena(Contrasena[2],60,30,0); 
5E00:  MOVFF  5C3,64F
5E04:  MOVLW  3C
5E06:  MOVLB  6
5E08:  MOVWF  x50
5E0A:  MOVLW  1E
5E0C:  MOVWF  x51
5E0E:  CLRF   x52
5E10:  MOVLB  0
5E12:  CALL   1A86
....................                   displayContrasena(Contrasena[3],80,30,1); 
5E16:  MOVFF  5C4,64F
5E1A:  MOVLW  50
5E1C:  MOVLB  6
5E1E:  MOVWF  x50
5E20:  MOVLW  1E
5E22:  MOVWF  x51
5E24:  MOVLW  01
5E26:  MOVWF  x52
5E28:  MOVLB  0
5E2A:  CALL   1A86
5E2E:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
5E30:  BTFSS  x86.0
5E32:  BRA    5E96
....................       { 
....................          UP=0;delay_ms(30); 
5E34:  BCF    x86.0
5E36:  MOVLW  1E
5E38:  MOVLB  6
5E3A:  MOVWF  x53
5E3C:  MOVLB  0
5E3E:  CALL   0D1A
....................          for(i=1;i<=4;i++) 
5E42:  MOVLW  01
5E44:  MOVLB  5
5E46:  MOVWF  x98
5E48:  MOVF   x98,W
5E4A:  SUBLW  04
5E4C:  BNC   5E96
....................          { 
....................             if(unidad==i) 
5E4E:  MOVF   x98,W
5E50:  SUBWF  x97,W
5E52:  BNZ   5E92
....................             { 
....................                Contrasena[i-1]++; 
5E54:  MOVLW  01
5E56:  SUBWF  x98,W
5E58:  CLRF   03
5E5A:  ADDLW  C1
5E5C:  MOVWF  FE9
5E5E:  MOVLW  05
5E60:  ADDWFC 03,W
5E62:  MOVWF  FEA
5E64:  INCF   FEF,F
....................                if(Contrasena[i-1]>9)    
5E66:  MOVLW  01
5E68:  SUBWF  x98,W
5E6A:  CLRF   03
5E6C:  ADDLW  C1
5E6E:  MOVWF  FE9
5E70:  MOVLW  05
5E72:  ADDWFC 03,W
5E74:  MOVWF  FEA
5E76:  BTFSC  FEF.7
5E78:  BRA    5E92
5E7A:  MOVF   FEF,W
5E7C:  SUBLW  09
5E7E:  BC    5E92
....................                { 
....................                   Contrasena[i-1]=0; 
5E80:  MOVLW  01
5E82:  SUBWF  x98,W
5E84:  CLRF   03
5E86:  ADDLW  C1
5E88:  MOVWF  FE9
5E8A:  MOVLW  05
5E8C:  ADDWFC 03,W
5E8E:  MOVWF  FEA
5E90:  CLRF   FEF
....................                } 
....................             } 
....................          } 
5E92:  INCF   x98,F
5E94:  BRA    5E48
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5E96:  BTFSS  x86.1
5E98:  BRA    5EFA
....................       { 
....................          DOWN=0;delay_ms(30); 
5E9A:  BCF    x86.1
5E9C:  MOVLW  1E
5E9E:  MOVLB  6
5EA0:  MOVWF  x53
5EA2:  MOVLB  0
5EA4:  CALL   0D1A
....................          for(i=1;i<=4;i++) 
5EA8:  MOVLW  01
5EAA:  MOVLB  5
5EAC:  MOVWF  x98
5EAE:  MOVF   x98,W
5EB0:  SUBLW  04
5EB2:  BNC   5EFA
....................          { 
....................             if(unidad==i) 
5EB4:  MOVF   x98,W
5EB6:  SUBWF  x97,W
5EB8:  BNZ   5EF6
....................             {Contrasena[i-1]--;  
5EBA:  MOVLW  01
5EBC:  SUBWF  x98,W
5EBE:  CLRF   03
5EC0:  ADDLW  C1
5EC2:  MOVWF  FE9
5EC4:  MOVLW  05
5EC6:  ADDWFC 03,W
5EC8:  MOVWF  FEA
5ECA:  DECF   FEF,F
....................             if(Contrasena[i-1]<0) 
5ECC:  MOVLW  01
5ECE:  SUBWF  x98,W
5ED0:  CLRF   03
5ED2:  ADDLW  C1
5ED4:  MOVWF  FE9
5ED6:  MOVLW  05
5ED8:  ADDWFC 03,W
5EDA:  MOVWF  FEA
5EDC:  BTFSC  FEF.7
5EDE:  BRA    5EE2
5EE0:  BRA    5EF6
....................             {Contrasena[i-1]=9;} 
5EE2:  MOVLW  01
5EE4:  SUBWF  x98,W
5EE6:  CLRF   03
5EE8:  ADDLW  C1
5EEA:  MOVWF  FE9
5EEC:  MOVLW  05
5EEE:  ADDWFC 03,W
5EF0:  MOVWF  FEA
5EF2:  MOVLW  09
5EF4:  MOVWF  FEF
....................             } 
....................          }   
5EF6:  INCF   x98,F
5EF8:  BRA    5EAE
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
5EFA:  BTFSS  x86.2
5EFC:  BRA    5F10
....................       { 
....................          RIGHT=0;delay_ms(30);unidad++; 
5EFE:  BCF    x86.2
5F00:  MOVLW  1E
5F02:  MOVLB  6
5F04:  MOVWF  x53
5F06:  MOVLB  0
5F08:  CALL   0D1A
5F0C:  MOVLB  5
5F0E:  INCF   x97,F
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
5F10:  BTFSS  x86.3
5F12:  BRA    5F3E
....................       { 
....................          LEFT=0;delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
5F14:  BCF    x86.3
5F16:  MOVLW  04
5F18:  MOVLB  6
5F1A:  MOVWF  x4D
5F1C:  MOVLW  AF
5F1E:  MOVWF  x53
5F20:  MOVLB  0
5F22:  CALL   0D1A
5F26:  MOVLB  6
5F28:  DECFSZ x4D,F
5F2A:  BRA    5F1C
5F2C:  MOVLW  01
5F2E:  MOVLB  5
5F30:  MOVWF  x96
5F32:  MOVLB  6
5F34:  CLRF   x4E
5F36:  MOVLB  0
5F38:  CALL   1232
5F3C:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
5F3E:  MOVF   x97,W
5F40:  SUBLW  04
5F42:  BTFSC  FD8.0
5F44:  BRA    60EA
....................       {glcd_fillScreen(OFF); 
5F46:  MOVLB  6
5F48:  CLRF   x4E
5F4A:  MOVLB  0
5F4C:  CALL   1232
....................           
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
5F50:  MOVLB  5
5F52:  MOVF   xC5,W
5F54:  SUBWF  xC1,W
5F56:  BNZ   6028
5F58:  MOVF   xC6,W
5F5A:  SUBWF  xC2,W
5F5C:  BNZ   6028
5F5E:  MOVF   xC7,W
5F60:  SUBWF  xC3,W
5F62:  BNZ   6028
5F64:  MOVF   xC8,W
5F66:  SUBWF  xC4,W
5F68:  BNZ   6028
....................          { 
....................             glcd_fillScreen(OFF); 
5F6A:  MOVLB  6
5F6C:  CLRF   x4E
5F6E:  MOVLB  0
5F70:  CALL   1232
....................             strcpy(Menus.Letra,"Clave"); 
5F74:  MOVLW  06
5F76:  MOVWF  FEA
5F78:  MOVLW  2D
5F7A:  MOVWF  FE9
5F7C:  MOVFF  FF2,64D
5F80:  BCF    FF2.7
5F82:  MOVLW  00
5F84:  CALL   07A0
5F88:  TBLRD*-
5F8A:  TBLRD*+
5F8C:  MOVF   FF5,W
5F8E:  MOVWF  FEE
5F90:  IORLW  00
5F92:  BNZ   5F8A
5F94:  MOVLB  6
5F96:  BTFSC  x4D.7
5F98:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
5F9A:  MOVLW  06
5F9C:  MOVWF  x4E
5F9E:  MOVLW  2D
5FA0:  MOVWF  x4D
5FA2:  MOVLW  1E
5FA4:  MOVWF  x4F
5FA6:  CLRF   x50
5FA8:  CLRF   x51
5FAA:  MOVLW  02
5FAC:  MOVWF  x52
5FAE:  MOVLB  0
5FB0:  CALL   1860
....................             strcpy(Menus.Letra,"Correcta"); 
5FB4:  MOVLW  06
5FB6:  MOVWF  FEA
5FB8:  MOVLW  2D
5FBA:  MOVWF  FE9
5FBC:  MOVFF  FF2,64D
5FC0:  BCF    FF2.7
5FC2:  MOVLW  00
5FC4:  CALL   07C0
5FC8:  TBLRD*-
5FCA:  TBLRD*+
5FCC:  MOVF   FF5,W
5FCE:  MOVWF  FEE
5FD0:  IORLW  00
5FD2:  BNZ   5FCA
5FD4:  MOVLB  6
5FD6:  BTFSC  x4D.7
5FD8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
5FDA:  MOVLW  06
5FDC:  MOVWF  x4E
5FDE:  MOVLW  2D
5FE0:  MOVWF  x4D
5FE2:  MOVLW  0F
5FE4:  MOVWF  x4F
5FE6:  MOVLW  1E
5FE8:  MOVWF  x50
5FEA:  CLRF   x51
5FEC:  MOVLW  02
5FEE:  MOVWF  x52
5FF0:  MOVLB  0
5FF2:  CALL   1860
....................             Menu=91;glcd_update();delay_ms(1000); 
5FF6:  MOVLW  5B
5FF8:  MOVLB  5
5FFA:  MOVWF  x96
5FFC:  MOVLB  0
5FFE:  CALL   128C
6002:  MOVLW  04
6004:  MOVLB  6
6006:  MOVWF  x4D
6008:  MOVLW  FA
600A:  MOVWF  x53
600C:  MOVLB  0
600E:  CALL   0D1A
6012:  MOVLB  6
6014:  DECFSZ x4D,F
6016:  BRA    6008
....................             glcd_fillScreen(OFF);unidad=1; 
6018:  CLRF   x4E
601A:  MOVLB  0
601C:  CALL   1232
6020:  MOVLW  01
6022:  MOVLB  5
6024:  MOVWF  x97
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
6026:  BRA    60EA
....................          { 
....................             glcd_fillScreen(OFF); 
6028:  MOVLB  6
602A:  CLRF   x4E
602C:  MOVLB  0
602E:  CALL   1232
....................             strcpy(Menus.Letra,"Clave"); 
6032:  MOVLW  06
6034:  MOVWF  FEA
6036:  MOVLW  2D
6038:  MOVWF  FE9
603A:  MOVFF  FF2,64D
603E:  BCF    FF2.7
6040:  MOVLW  00
6042:  CALL   07A0
6046:  TBLRD*-
6048:  TBLRD*+
604A:  MOVF   FF5,W
604C:  MOVWF  FEE
604E:  IORLW  00
6050:  BNZ   6048
6052:  MOVLB  6
6054:  BTFSC  x4D.7
6056:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
6058:  MOVLW  06
605A:  MOVWF  x4E
605C:  MOVLW  2D
605E:  MOVWF  x4D
6060:  MOVLW  1E
6062:  MOVWF  x4F
6064:  CLRF   x50
6066:  CLRF   x51
6068:  MOVLW  02
606A:  MOVWF  x52
606C:  MOVLB  0
606E:  CALL   1860
....................             strcpy(Menus.Letra,"Incorrecta"); 
6072:  MOVLW  06
6074:  MOVWF  FEA
6076:  MOVLW  2D
6078:  MOVWF  FE9
607A:  MOVFF  FF2,64D
607E:  BCF    FF2.7
6080:  MOVLW  00
6082:  CALL   07E4
6086:  TBLRD*-
6088:  TBLRD*+
608A:  MOVF   FF5,W
608C:  MOVWF  FEE
608E:  IORLW  00
6090:  BNZ   6088
6092:  MOVLB  6
6094:  BTFSC  x4D.7
6096:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
6098:  MOVLW  06
609A:  MOVWF  x4E
609C:  MOVLW  2D
609E:  MOVWF  x4D
60A0:  CLRF   x4F
60A2:  MOVLW  1E
60A4:  MOVWF  x50
60A6:  CLRF   x51
60A8:  MOVLW  02
60AA:  MOVWF  x52
60AC:  MOVLB  0
60AE:  CALL   1860
....................             Menu=1;glcd_update();delay_ms(1000); 
60B2:  MOVLW  01
60B4:  MOVLB  5
60B6:  MOVWF  x96
60B8:  MOVLB  0
60BA:  CALL   128C
60BE:  MOVLW  04
60C0:  MOVLB  6
60C2:  MOVWF  x4D
60C4:  MOVLW  FA
60C6:  MOVWF  x53
60C8:  MOVLB  0
60CA:  CALL   0D1A
60CE:  MOVLB  6
60D0:  DECFSZ x4D,F
60D2:  BRA    60C4
....................             glcd_fillScreen(OFF);unidad=1; 
60D4:  CLRF   x4E
60D6:  MOVLB  0
60D8:  CALL   1232
60DC:  MOVLW  01
60DE:  MOVLB  5
60E0:  MOVWF  x97
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
60E2:  CLRF   xC1
60E4:  CLRF   xC2
60E6:  CLRF   xC3
60E8:  CLRF   xC4
....................          } 
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
60EA:  MOVF   x96,W
60EC:  SUBLW  5B
60EE:  BTFSS  FD8.2
60F0:  BRA    64CE
....................          
....................       strcpy(Menus.Letra,"Clave Nueva"); 
60F2:  MOVLW  06
60F4:  MOVWF  FEA
60F6:  MOVLW  2D
60F8:  MOVWF  FE9
60FA:  MOVFF  FF2,64D
60FE:  BCF    FF2.7
6100:  MOVLW  00
6102:  MOVLB  0
6104:  CALL   09D8
6108:  TBLRD*-
610A:  TBLRD*+
610C:  MOVF   FF5,W
610E:  MOVWF  FEE
6110:  IORLW  00
6112:  BNZ   610A
6114:  MOVLB  6
6116:  BTFSC  x4D.7
6118:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2);      
611A:  MOVLW  06
611C:  MOVWF  x4E
611E:  MOVLW  2D
6120:  MOVWF  x4D
6122:  CLRF   x4F
6124:  CLRF   x50
6126:  MOVLW  01
6128:  MOVWF  x51
612A:  MOVLW  02
612C:  MOVWF  x52
612E:  MOVLB  0
6130:  CALL   1860
....................        
....................       if(unidad==1) 
6134:  MOVLB  5
6136:  DECFSZ x97,W
6138:  BRA    6198
....................       { 
....................          displayContrasena(Password[0],20,30,1); 
613A:  MOVFF  5C5,64F
613E:  MOVLW  14
6140:  MOVLB  6
6142:  MOVWF  x50
6144:  MOVLW  1E
6146:  MOVWF  x51
6148:  MOVLW  01
614A:  MOVWF  x52
614C:  MOVLB  0
614E:  CALL   1A86
....................          displayContrasena(Password[1],40,30,0); 
6152:  MOVFF  5C6,64F
6156:  MOVLW  28
6158:  MOVLB  6
615A:  MOVWF  x50
615C:  MOVLW  1E
615E:  MOVWF  x51
6160:  CLRF   x52
6162:  MOVLB  0
6164:  CALL   1A86
....................          displayContrasena(Password[2],60,30,0); 
6168:  MOVFF  5C7,64F
616C:  MOVLW  3C
616E:  MOVLB  6
6170:  MOVWF  x50
6172:  MOVLW  1E
6174:  MOVWF  x51
6176:  CLRF   x52
6178:  MOVLB  0
617A:  CALL   1A86
....................          displayContrasena(Password[3],80,30,0); 
617E:  MOVFF  5C8,64F
6182:  MOVLW  50
6184:  MOVLB  6
6186:  MOVWF  x50
6188:  MOVLW  1E
618A:  MOVWF  x51
618C:  CLRF   x52
618E:  MOVLB  0
6190:  CALL   1A86
....................       } 
....................       else 
6194:  BRA    62C0
6196:  MOVLB  5
....................       { 
....................          if(unidad==2) 
6198:  MOVF   x97,W
619A:  SUBLW  02
619C:  BNZ   61FC
....................          { 
....................             displayContrasena(Password[0],20,30,0); 
619E:  MOVFF  5C5,64F
61A2:  MOVLW  14
61A4:  MOVLB  6
61A6:  MOVWF  x50
61A8:  MOVLW  1E
61AA:  MOVWF  x51
61AC:  CLRF   x52
61AE:  MOVLB  0
61B0:  CALL   1A86
....................             displayContrasena(Password[1],40,30,1); 
61B4:  MOVFF  5C6,64F
61B8:  MOVLW  28
61BA:  MOVLB  6
61BC:  MOVWF  x50
61BE:  MOVLW  1E
61C0:  MOVWF  x51
61C2:  MOVLW  01
61C4:  MOVWF  x52
61C6:  MOVLB  0
61C8:  CALL   1A86
....................             displayContrasena(Password[2],60,30,0); 
61CC:  MOVFF  5C7,64F
61D0:  MOVLW  3C
61D2:  MOVLB  6
61D4:  MOVWF  x50
61D6:  MOVLW  1E
61D8:  MOVWF  x51
61DA:  CLRF   x52
61DC:  MOVLB  0
61DE:  CALL   1A86
....................             displayContrasena(Password[3],80,30,0); 
61E2:  MOVFF  5C8,64F
61E6:  MOVLW  50
61E8:  MOVLB  6
61EA:  MOVWF  x50
61EC:  MOVLW  1E
61EE:  MOVWF  x51
61F0:  CLRF   x52
61F2:  MOVLB  0
61F4:  CALL   1A86
....................          } 
....................          else 
61F8:  BRA    62C0
61FA:  MOVLB  5
....................          { 
....................             if(unidad==3) 
61FC:  MOVF   x97,W
61FE:  SUBLW  03
6200:  BNZ   6260
....................             { 
....................                displayContrasena(Password[0],20,30,0); 
6202:  MOVFF  5C5,64F
6206:  MOVLW  14
6208:  MOVLB  6
620A:  MOVWF  x50
620C:  MOVLW  1E
620E:  MOVWF  x51
6210:  CLRF   x52
6212:  MOVLB  0
6214:  CALL   1A86
....................                displayContrasena(Password[1],40,30,0); 
6218:  MOVFF  5C6,64F
621C:  MOVLW  28
621E:  MOVLB  6
6220:  MOVWF  x50
6222:  MOVLW  1E
6224:  MOVWF  x51
6226:  CLRF   x52
6228:  MOVLB  0
622A:  CALL   1A86
....................                displayContrasena(Password[2],60,30,1); 
622E:  MOVFF  5C7,64F
6232:  MOVLW  3C
6234:  MOVLB  6
6236:  MOVWF  x50
6238:  MOVLW  1E
623A:  MOVWF  x51
623C:  MOVLW  01
623E:  MOVWF  x52
6240:  MOVLB  0
6242:  CALL   1A86
....................                displayContrasena(Password[3],80,30,0); 
6246:  MOVFF  5C8,64F
624A:  MOVLW  50
624C:  MOVLB  6
624E:  MOVWF  x50
6250:  MOVLW  1E
6252:  MOVWF  x51
6254:  CLRF   x52
6256:  MOVLB  0
6258:  CALL   1A86
....................             } 
....................             else 
625C:  BRA    62C0
625E:  MOVLB  5
....................             { 
....................                if(unidad==4) 
6260:  MOVF   x97,W
6262:  SUBLW  04
6264:  BNZ   62C2
....................                { 
....................                   displayContrasena(Password[0],20,30,0); 
6266:  MOVFF  5C5,64F
626A:  MOVLW  14
626C:  MOVLB  6
626E:  MOVWF  x50
6270:  MOVLW  1E
6272:  MOVWF  x51
6274:  CLRF   x52
6276:  MOVLB  0
6278:  CALL   1A86
....................                   displayContrasena(Password[1],40,30,0); 
627C:  MOVFF  5C6,64F
6280:  MOVLW  28
6282:  MOVLB  6
6284:  MOVWF  x50
6286:  MOVLW  1E
6288:  MOVWF  x51
628A:  CLRF   x52
628C:  MOVLB  0
628E:  CALL   1A86
....................                   displayContrasena(Password[2],60,30,0); 
6292:  MOVFF  5C7,64F
6296:  MOVLW  3C
6298:  MOVLB  6
629A:  MOVWF  x50
629C:  MOVLW  1E
629E:  MOVWF  x51
62A0:  CLRF   x52
62A2:  MOVLB  0
62A4:  CALL   1A86
....................                   displayContrasena(Password[3],80,30,1); 
62A8:  MOVFF  5C8,64F
62AC:  MOVLW  50
62AE:  MOVLB  6
62B0:  MOVWF  x50
62B2:  MOVLW  1E
62B4:  MOVWF  x51
62B6:  MOVLW  01
62B8:  MOVWF  x52
62BA:  MOVLB  0
62BC:  CALL   1A86
62C0:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(UP)//Si oprime hacia arriba 
62C2:  BTFSS  x86.0
62C4:  BRA    6328
....................       { 
....................          UP=0;delay_ms(30); 
62C6:  BCF    x86.0
62C8:  MOVLW  1E
62CA:  MOVLB  6
62CC:  MOVWF  x53
62CE:  MOVLB  0
62D0:  CALL   0D1A
....................          for(i=1;i<=4;i++) 
62D4:  MOVLW  01
62D6:  MOVLB  5
62D8:  MOVWF  x98
62DA:  MOVF   x98,W
62DC:  SUBLW  04
62DE:  BNC   6328
....................          { 
....................             if(unidad==i) 
62E0:  MOVF   x98,W
62E2:  SUBWF  x97,W
62E4:  BNZ   6324
....................             { 
....................                Password[i-1]++; 
62E6:  MOVLW  01
62E8:  SUBWF  x98,W
62EA:  CLRF   03
62EC:  ADDLW  C5
62EE:  MOVWF  FE9
62F0:  MOVLW  05
62F2:  ADDWFC 03,W
62F4:  MOVWF  FEA
62F6:  INCF   FEF,F
....................                if(Password[i-1]>9)    
62F8:  MOVLW  01
62FA:  SUBWF  x98,W
62FC:  CLRF   03
62FE:  ADDLW  C5
6300:  MOVWF  FE9
6302:  MOVLW  05
6304:  ADDWFC 03,W
6306:  MOVWF  FEA
6308:  BTFSC  FEF.7
630A:  BRA    6324
630C:  MOVF   FEF,W
630E:  SUBLW  09
6310:  BC    6324
....................                { 
....................                   Password[i-1]=0; 
6312:  MOVLW  01
6314:  SUBWF  x98,W
6316:  CLRF   03
6318:  ADDLW  C5
631A:  MOVWF  FE9
631C:  MOVLW  05
631E:  ADDWFC 03,W
6320:  MOVWF  FEA
6322:  CLRF   FEF
....................                } 
....................             } 
....................          } 
6324:  INCF   x98,F
6326:  BRA    62DA
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
6328:  BTFSS  x86.1
632A:  BRA    638C
....................       { 
....................          DOWN=0;delay_ms(30); 
632C:  BCF    x86.1
632E:  MOVLW  1E
6330:  MOVLB  6
6332:  MOVWF  x53
6334:  MOVLB  0
6336:  CALL   0D1A
....................          for(i=1;i<=4;i++) 
633A:  MOVLW  01
633C:  MOVLB  5
633E:  MOVWF  x98
6340:  MOVF   x98,W
6342:  SUBLW  04
6344:  BNC   638C
....................             { 
....................                if(unidad==i) 
6346:  MOVF   x98,W
6348:  SUBWF  x97,W
634A:  BNZ   6388
....................                { 
....................                   Password[i-1]--; 
634C:  MOVLW  01
634E:  SUBWF  x98,W
6350:  CLRF   03
6352:  ADDLW  C5
6354:  MOVWF  FE9
6356:  MOVLW  05
6358:  ADDWFC 03,W
635A:  MOVWF  FEA
635C:  DECF   FEF,F
....................                   if(Password[i-1]<0) 
635E:  MOVLW  01
6360:  SUBWF  x98,W
6362:  CLRF   03
6364:  ADDLW  C5
6366:  MOVWF  FE9
6368:  MOVLW  05
636A:  ADDWFC 03,W
636C:  MOVWF  FEA
636E:  BTFSC  FEF.7
6370:  BRA    6374
6372:  BRA    6388
....................                   { 
....................                      Password[i-1]=9; 
6374:  MOVLW  01
6376:  SUBWF  x98,W
6378:  CLRF   03
637A:  ADDLW  C5
637C:  MOVWF  FE9
637E:  MOVLW  05
6380:  ADDWFC 03,W
6382:  MOVWF  FEA
6384:  MOVLW  09
6386:  MOVWF  FEF
....................                   } 
....................                } 
....................             }        
6388:  INCF   x98,F
638A:  BRA    6340
....................       } 
....................              
....................       if(RIGHT)//Si oprime RIGHT 
638C:  BTFSS  x86.2
638E:  BRA    63A2
....................       { 
....................          RIGHT=0;delay_ms(30);unidad++; 
6390:  BCF    x86.2
6392:  MOVLW  1E
6394:  MOVLB  6
6396:  MOVWF  x53
6398:  MOVLB  0
639A:  CALL   0D1A
639E:  MOVLB  5
63A0:  INCF   x97,F
....................       } 
....................        
....................       if(LEFT)//Si oprime Izquierda 
63A2:  BTFSS  x86.3
63A4:  BRA    63D0
....................       { 
....................          LEFT=0;delay_ms(700);Menu=1;glcd_fillscreen(OFF); 
63A6:  BCF    x86.3
63A8:  MOVLW  04
63AA:  MOVLB  6
63AC:  MOVWF  x4D
63AE:  MOVLW  AF
63B0:  MOVWF  x53
63B2:  MOVLB  0
63B4:  CALL   0D1A
63B8:  MOVLB  6
63BA:  DECFSZ x4D,F
63BC:  BRA    63AE
63BE:  MOVLW  01
63C0:  MOVLB  5
63C2:  MOVWF  x96
63C4:  MOVLB  6
63C6:  CLRF   x4E
63C8:  MOVLB  0
63CA:  CALL   1232
63CE:  MOVLB  5
....................       } 
....................        
....................       if(unidad>4) 
63D0:  MOVF   x97,W
63D2:  SUBLW  04
63D4:  BTFSC  FD8.0
63D6:  BRA    64CE
....................       { 
....................          Opcion=1;unidad=1; 
63D8:  MOVLW  01
63DA:  MOVWF  x9C
63DC:  MOVWF  x97
....................          write_eeprom(10,Password[0]); 
63DE:  MOVLW  0A
63E0:  MOVWF  FA9
63E2:  MOVFF  5C5,FA8
63E6:  BCF    FA6.6
63E8:  BCF    FA6.7
63EA:  BSF    FA6.2
63EC:  MOVF   FF2,W
63EE:  MOVWF  00
63F0:  BCF    FF2.7
63F2:  MOVLB  F
63F4:  MOVLW  55
63F6:  MOVWF  FA7
63F8:  MOVLW  AA
63FA:  MOVWF  FA7
63FC:  BSF    FA6.1
63FE:  BTFSC  FA6.1
6400:  BRA    63FE
6402:  BCF    FA6.2
6404:  MOVF   00,W
6406:  IORWF  FF2,F
....................          delay_ms(50);    
6408:  MOVLW  32
640A:  MOVLB  6
640C:  MOVWF  x53
640E:  MOVLB  0
6410:  CALL   0D1A
....................          write_eeprom(11,Password[1]); 
6414:  MOVLW  0B
6416:  MOVWF  FA9
6418:  MOVFF  5C6,FA8
641C:  BCF    FA6.6
641E:  BCF    FA6.7
6420:  BSF    FA6.2
6422:  MOVF   FF2,W
6424:  MOVWF  00
6426:  BCF    FF2.7
6428:  MOVLB  F
642A:  MOVLW  55
642C:  MOVWF  FA7
642E:  MOVLW  AA
6430:  MOVWF  FA7
6432:  BSF    FA6.1
6434:  BTFSC  FA6.1
6436:  BRA    6434
6438:  BCF    FA6.2
643A:  MOVF   00,W
643C:  IORWF  FF2,F
....................          delay_ms(50);    
643E:  MOVLW  32
6440:  MOVLB  6
6442:  MOVWF  x53
6444:  MOVLB  0
6446:  CALL   0D1A
....................          write_eeprom(12,Password[2]); 
644A:  MOVLW  0C
644C:  MOVWF  FA9
644E:  MOVFF  5C7,FA8
6452:  BCF    FA6.6
6454:  BCF    FA6.7
6456:  BSF    FA6.2
6458:  MOVF   FF2,W
645A:  MOVWF  00
645C:  BCF    FF2.7
645E:  MOVLB  F
6460:  MOVLW  55
6462:  MOVWF  FA7
6464:  MOVLW  AA
6466:  MOVWF  FA7
6468:  BSF    FA6.1
646A:  BTFSC  FA6.1
646C:  BRA    646A
646E:  BCF    FA6.2
6470:  MOVF   00,W
6472:  IORWF  FF2,F
....................          delay_ms(50);    
6474:  MOVLW  32
6476:  MOVLB  6
6478:  MOVWF  x53
647A:  MOVLB  0
647C:  CALL   0D1A
....................          write_eeprom(13,Password[3]); 
6480:  MOVLW  0D
6482:  MOVWF  FA9
6484:  MOVFF  5C8,FA8
6488:  BCF    FA6.6
648A:  BCF    FA6.7
648C:  BSF    FA6.2
648E:  MOVF   FF2,W
6490:  MOVWF  00
6492:  BCF    FF2.7
6494:  MOVLB  F
6496:  MOVLW  55
6498:  MOVWF  FA7
649A:  MOVLW  AA
649C:  MOVWF  FA7
649E:  BSF    FA6.1
64A0:  BTFSC  FA6.1
64A2:  BRA    64A0
64A4:  BCF    FA6.2
64A6:  MOVF   00,W
64A8:  IORWF  FF2,F
....................          delay_ms(1000);glcd_fillScreen(OFF);Menu=1; 
64AA:  MOVLW  04
64AC:  MOVLB  6
64AE:  MOVWF  x4D
64B0:  MOVLW  FA
64B2:  MOVWF  x53
64B4:  MOVLB  0
64B6:  CALL   0D1A
64BA:  MOVLB  6
64BC:  DECFSZ x4D,F
64BE:  BRA    64B0
64C0:  CLRF   x4E
64C2:  MOVLB  0
64C4:  CALL   1232
64C8:  MOVLW  01
64CA:  MOVLB  5
64CC:  MOVWF  x96
....................       } 
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==20){ //Menu de Funcionamiento 
64CE:  MOVF   x96,W
64D0:  SUBLW  14
64D2:  BTFSS  FD8.2
64D4:  GOTO   6F56
....................        
....................       // Muestra imagen de fondo en Display GLCD 
....................       glcd_imagen(5); 
64D8:  MOVLW  05
64DA:  MOVLB  6
64DC:  MOVWF  x4D
64DE:  MOVLB  0
64E0:  GOTO   2D70
....................  
....................       if(UP && DOWN)//Si oprime hacia abajo 
64E4:  MOVLB  5
64E6:  BTFSS  x86.0
64E8:  BRA    6502
64EA:  BTFSS  x86.1
64EC:  BRA    6502
....................       { 
....................          glcd_init(ON);flag_display=!flag_display; 
64EE:  MOVLW  01
64F0:  MOVLB  6
64F2:  MOVWF  x4D
64F4:  MOVLB  0
64F6:  CALL   1344
64FA:  MOVLB  5
64FC:  BTG    x93.3
....................          UP=0;DOWN=0; 
64FE:  BCF    x86.0
6500:  BCF    x86.1
....................       } 
....................  
....................       if(!TERM && !DOOR) 
6502:  BSF    F92.3
6504:  BTFSC  F80.3
6506:  BRA    67DA
6508:  BSF    F92.4
650A:  BTFSC  F80.4
650C:  BRA    67DA
....................       { 
....................          if(Enfria==1) 
650E:  DECFSZ x92,W
6510:  BRA    664A
....................          { 
....................             Velocidades(Velocidad); 
6512:  MOVFF  590,64D
6516:  MOVLB  0
6518:  CALL   0D44
....................             if(Temperatura<=Setpoint+1.0) 
651C:  BCF    FD8.1
651E:  MOVFF  610,655
6522:  MOVFF  60F,654
6526:  MOVFF  60E,653
652A:  MOVFF  60D,652
652E:  MOVLB  6
6530:  CLRF   x59
6532:  CLRF   x58
6534:  CLRF   x57
6536:  MOVLW  7F
6538:  MOVWF  x56
653A:  MOVLB  0
653C:  CALL   0F00
6540:  MOVFF  604,650
6544:  MOVFF  603,64F
6548:  MOVFF  602,64E
654C:  MOVFF  601,64D
6550:  MOVFF  03,654
6554:  MOVFF  02,653
6558:  MOVFF  01,652
655C:  MOVFF  00,651
6560:  CALL   1178
6564:  BC    6568
6566:  BNZ   65DA
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6568:  MOVLB  6
656A:  CLRF   x62
656C:  MOVLW  37
656E:  MOVWF  x63
6570:  MOVLW  7F
6572:  MOVWF  x64
6574:  MOVLW  3F
6576:  MOVWF  x65
6578:  MOVLW  01
657A:  MOVWF  x66
657C:  CLRF   x67
657E:  MOVLB  0
6580:  CALL   179E
....................                strcpy(Menus.Letra,"Status:Controlando"); 
6584:  MOVLW  06
6586:  MOVWF  FEA
6588:  MOVLW  2D
658A:  MOVWF  FE9
658C:  MOVFF  FF2,64D
6590:  BCF    FF2.7
6592:  MOVLW  00
6594:  CALL   09FE
6598:  TBLRD*-
659A:  TBLRD*+
659C:  MOVF   FF5,W
659E:  MOVWF  FEE
65A0:  IORLW  00
65A2:  BNZ   659A
65A4:  MOVLB  6
65A6:  BTFSC  x4D.7
65A8:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
65AA:  MOVLW  06
65AC:  MOVWF  x4E
65AE:  MOVLW  2D
65B0:  MOVWF  x4D
65B2:  CLRF   x4F
65B4:  MOVLW  37
65B6:  MOVWF  x50
65B8:  MOVLW  02
65BA:  MOVWF  x51
65BC:  MOVLW  01
65BE:  MOVWF  x52
65C0:  MOVLB  0
65C2:  CALL   1860
....................                tiempo_esterilizacion=1; 
65C6:  MOVLW  01
65C8:  MOVLB  5
65CA:  MOVWF  x9D
....................                Controla(); 
65CC:  MOVLB  0
65CE:  CALL   2E90
....................                flag_tiempocalentamiento=0; 
65D2:  MOVLB  5
65D4:  BCF    x93.2
....................             } 
....................             else 
65D6:  BRA    6648
65D8:  MOVLB  0
....................             { 
....................                flag_tiempocalentamiento=0; 
65DA:  MOVLB  5
65DC:  BCF    x93.2
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
65DE:  MOVLB  6
65E0:  CLRF   x62
65E2:  MOVLW  37
65E4:  MOVWF  x63
65E6:  MOVLW  7F
65E8:  MOVWF  x64
65EA:  MOVLW  3F
65EC:  MOVWF  x65
65EE:  MOVLW  01
65F0:  MOVWF  x66
65F2:  CLRF   x67
65F4:  MOVLB  0
65F6:  CALL   179E
....................                strcpy(Menus.Letra,"Status:Enfriando"); 
65FA:  MOVLW  06
65FC:  MOVWF  FEA
65FE:  MOVLW  2D
6600:  MOVWF  FE9
6602:  MOVFF  FF2,64D
6606:  BCF    FF2.7
6608:  MOVLW  00
660A:  CALL   0A2C
660E:  TBLRD*-
6610:  TBLRD*+
6612:  MOVF   FF5,W
6614:  MOVWF  FEE
6616:  IORLW  00
6618:  BNZ   6610
661A:  MOVLB  6
661C:  BTFSC  x4D.7
661E:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
6620:  MOVLW  06
6622:  MOVWF  x4E
6624:  MOVLW  2D
6626:  MOVWF  x4D
6628:  CLRF   x4F
662A:  MOVLW  37
662C:  MOVWF  x50
662E:  MOVLW  02
6630:  MOVWF  x51
6632:  MOVLW  01
6634:  MOVWF  x52
6636:  MOVLB  0
6638:  CALL   1860
....................                tiempo_esterilizacion=0; 
663C:  MOVLB  5
663E:  CLRF   x9D
....................                Controla(); 
6640:  MOVLB  0
6642:  CALL   2E90
6646:  MOVLB  5
....................             } 
....................          } 
....................          else 
6648:  BRA    67DA
....................          { 
....................             if(Temperatura>Setpoint+1.2) 
664A:  BCF    FD8.1
664C:  MOVFF  610,655
6650:  MOVFF  60F,654
6654:  MOVFF  60E,653
6658:  MOVFF  60D,652
665C:  MOVLW  9A
665E:  MOVLB  6
6660:  MOVWF  x59
6662:  MOVLW  99
6664:  MOVWF  x58
6666:  MOVLW  19
6668:  MOVWF  x57
666A:  MOVLW  7F
666C:  MOVWF  x56
666E:  MOVLB  0
6670:  CALL   0F00
6674:  MOVFF  03,650
6678:  MOVFF  02,64F
667C:  MOVFF  01,64E
6680:  MOVFF  00,64D
6684:  MOVFF  604,654
6688:  MOVFF  603,653
668C:  MOVFF  602,652
6690:  MOVFF  601,651
6694:  CALL   1178
6698:  BNC   66A6
....................             { 
....................                Velocidades(0); 
669A:  MOVLB  6
669C:  CLRF   x4D
669E:  MOVLB  0
66A0:  CALL   0D44
....................             } 
....................             else 
66A4:  BRA    66AE
....................             { 
....................                Velocidades(Velocidad); 
66A6:  MOVFF  590,64D
66AA:  CALL   0D44
....................             } 
....................              
....................             if(Temperatura>=Setpoint-1.0) 
66AE:  BSF    FD8.1
66B0:  MOVFF  610,655
66B4:  MOVFF  60F,654
66B8:  MOVFF  60E,653
66BC:  MOVFF  60D,652
66C0:  MOVLB  6
66C2:  CLRF   x59
66C4:  CLRF   x58
66C6:  CLRF   x57
66C8:  MOVLW  7F
66CA:  MOVWF  x56
66CC:  MOVLB  0
66CE:  CALL   0F00
66D2:  MOVFF  03,650
66D6:  MOVFF  02,64F
66DA:  MOVFF  01,64E
66DE:  MOVFF  00,64D
66E2:  MOVFF  604,654
66E6:  MOVFF  603,653
66EA:  MOVFF  602,652
66EE:  MOVFF  601,651
66F2:  CALL   1178
66F6:  BC    66FA
66F8:  BNZ   676C
....................             { 
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
66FA:  MOVLB  6
66FC:  CLRF   x62
66FE:  MOVLW  37
6700:  MOVWF  x63
6702:  MOVLW  7F
6704:  MOVWF  x64
6706:  MOVLW  3F
6708:  MOVWF  x65
670A:  MOVLW  01
670C:  MOVWF  x66
670E:  CLRF   x67
6710:  MOVLB  0
6712:  CALL   179E
....................                strcpy(Menus.Letra,"Status:Controlando"); 
6716:  MOVLW  06
6718:  MOVWF  FEA
671A:  MOVLW  2D
671C:  MOVWF  FE9
671E:  MOVFF  FF2,64D
6722:  BCF    FF2.7
6724:  MOVLW  00
6726:  CALL   09FE
672A:  TBLRD*-
672C:  TBLRD*+
672E:  MOVF   FF5,W
6730:  MOVWF  FEE
6732:  IORLW  00
6734:  BNZ   672C
6736:  MOVLB  6
6738:  BTFSC  x4D.7
673A:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
673C:  MOVLW  06
673E:  MOVWF  x4E
6740:  MOVLW  2D
6742:  MOVWF  x4D
6744:  CLRF   x4F
6746:  MOVLW  37
6748:  MOVWF  x50
674A:  MOVLW  02
674C:  MOVWF  x51
674E:  MOVLW  01
6750:  MOVWF  x52
6752:  MOVLB  0
6754:  CALL   1860
....................                tiempo_esterilizacion=1; 
6758:  MOVLW  01
675A:  MOVLB  5
675C:  MOVWF  x9D
....................                Controla(); 
675E:  MOVLB  0
6760:  CALL   2E90
....................                flag_tiempocalentamiento=0; 
6764:  MOVLB  5
6766:  BCF    x93.2
....................             } 
....................             else 
6768:  BRA    67DA
676A:  MOVLB  0
....................             { 
....................                flag_tiempocalentamiento=1; 
676C:  MOVLB  5
676E:  BSF    x93.2
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
6770:  MOVLB  6
6772:  CLRF   x62
6774:  MOVLW  37
6776:  MOVWF  x63
6778:  MOVLW  7F
677A:  MOVWF  x64
677C:  MOVLW  3F
677E:  MOVWF  x65
6780:  MOVLW  01
6782:  MOVWF  x66
6784:  CLRF   x67
6786:  MOVLB  0
6788:  CALL   179E
....................                strcpy(Menus.Letra,"Status:Calentando"); 
678C:  MOVLW  06
678E:  MOVWF  FEA
6790:  MOVLW  2D
6792:  MOVWF  FE9
6794:  MOVFF  FF2,64D
6798:  BCF    FF2.7
679A:  MOVLW  00
679C:  CALL   0A58
67A0:  TBLRD*-
67A2:  TBLRD*+
67A4:  MOVF   FF5,W
67A6:  MOVWF  FEE
67A8:  IORLW  00
67AA:  BNZ   67A2
67AC:  MOVLB  6
67AE:  BTFSC  x4D.7
67B0:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
67B2:  MOVLW  06
67B4:  MOVWF  x4E
67B6:  MOVLW  2D
67B8:  MOVWF  x4D
67BA:  CLRF   x4F
67BC:  MOVLW  37
67BE:  MOVWF  x50
67C0:  MOVLW  02
67C2:  MOVWF  x51
67C4:  MOVLW  01
67C6:  MOVWF  x52
67C8:  MOVLB  0
67CA:  CALL   1860
....................                tiempo_esterilizacion=0; 
67CE:  MOVLB  5
67D0:  CLRF   x9D
....................                Controla(); 
67D2:  MOVLB  0
67D4:  CALL   2E90
67D8:  MOVLB  5
....................             } 
....................          } 
....................       } 
....................        
....................       /*if(Pausa==1 && !TERM && !DOOR) 
....................       { 
....................          Velocidades(0); 
....................          flag_tiempocalentamiento=0; 
....................          strcpy(Menus.Letra,"Status:Pausado"); 
....................          displayMenu(Menus.Letra,0,55,2,1); 
....................          tiempo_esterilizacion=0; 
....................          SSR_off; 
....................          //Peltierp_off; 
....................          //Peltiern_off; 
....................          Tpulso=0.0; 
....................       }*/ 
....................        
....................       if(DOOR) 
67DA:  BSF    F92.4
67DC:  BTFSS  F80.4
67DE:  BRA    6870
....................       { 
....................          Velocidades(0); 
67E0:  MOVLB  6
67E2:  CLRF   x4D
67E4:  MOVLB  0
67E6:  CALL   0D44
....................          flag_tiempocalentamiento=0; 
67EA:  MOVLB  5
67EC:  BCF    x93.2
....................          Ganancia=8; 
67EE:  CLRF   xF0
67F0:  CLRF   xEF
67F2:  CLRF   xEE
67F4:  MOVLW  82
67F6:  MOVWF  xED
....................          //Ganancia=Setpoint*(Ganancia/Coeficiente); 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
67F8:  MOVLB  6
67FA:  CLRF   x62
67FC:  MOVLW  37
67FE:  MOVWF  x63
6800:  MOVLW  7F
6802:  MOVWF  x64
6804:  MOVLW  3F
6806:  MOVWF  x65
6808:  MOVLW  01
680A:  MOVWF  x66
680C:  CLRF   x67
680E:  MOVLB  0
6810:  CALL   179E
....................          tiempo_esterilizacion=0; 
6814:  MOVLB  5
6816:  CLRF   x9D
....................          SSR_off; 
6818:  BCF    F8B.2
681A:  BCF    F94.2
....................          Tpulso=0.0; 
681C:  CLRF   xDC
681E:  CLRF   xDB
6820:  CLRF   xDA
6822:  CLRF   xD9
....................          flag_clear2=1; 
6824:  BSF    x87.7
....................          flag_ganancia=0; 
6826:  CLRF   x8E
....................          strcpy(Menus.Letra,"Status:Puerta Abierta"); 
6828:  MOVLW  06
682A:  MOVWF  FEA
682C:  MOVLW  2D
682E:  MOVWF  FE9
6830:  MOVFF  FF2,64D
6834:  BCF    FF2.7
6836:  MOVLW  00
6838:  MOVLB  0
683A:  CALL   0A84
683E:  TBLRD*-
6840:  TBLRD*+
6842:  MOVF   FF5,W
6844:  MOVWF  FEE
6846:  IORLW  00
6848:  BNZ   6840
684A:  MOVLB  6
684C:  BTFSC  x4D.7
684E:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
6850:  MOVLW  06
6852:  MOVWF  x4E
6854:  MOVLW  2D
6856:  MOVWF  x4D
6858:  CLRF   x4F
685A:  MOVLW  37
685C:  MOVWF  x50
685E:  MOVLW  02
6860:  MOVWF  x51
6862:  MOVLW  01
6864:  MOVWF  x52
6866:  MOVLB  0
6868:  CALL   1860
....................       } 
....................       else 
686C:  BRA    6896
686E:  MOVLB  5
....................       { 
....................          if(flag_clear2==1) 
6870:  BTFSS  x87.7
6872:  BRA    6894
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
6874:  MOVLB  6
6876:  CLRF   x62
6878:  MOVLW  37
687A:  MOVWF  x63
687C:  MOVLW  7F
687E:  MOVWF  x64
6880:  MOVLW  3F
6882:  MOVWF  x65
6884:  MOVLW  01
6886:  MOVWF  x66
6888:  CLRF   x67
688A:  MOVLB  0
688C:  CALL   179E
....................             flag_clear2=0; 
6890:  MOVLB  5
6892:  BCF    x87.7
6894:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(TERM) 
6896:  BSF    F92.3
6898:  BTFSS  F80.3
689A:  BRA    6958
....................       { 
....................          Velocidades(0); 
689C:  MOVLB  6
689E:  CLRF   x4D
68A0:  MOVLB  0
68A2:  CALL   0D44
....................          flag_tiempocalentamiento=0; 
68A6:  MOVLB  5
68A8:  BCF    x93.2
....................          if(flag_clear3==0) 
68AA:  BTFSC  x93.0
68AC:  BRA    68DE
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
68AE:  MOVLB  6
68B0:  CLRF   x62
68B2:  MOVLW  37
68B4:  MOVWF  x63
68B6:  MOVLW  7F
68B8:  MOVWF  x64
68BA:  MOVLW  3F
68BC:  MOVWF  x65
68BE:  MOVLW  01
68C0:  MOVWF  x66
68C2:  CLRF   x67
68C4:  MOVLB  0
68C6:  CALL   179E
....................             tiempo_esterilizacion=0; 
68CA:  MOVLB  5
68CC:  CLRF   x9D
....................             SSR_off; 
68CE:  BCF    F8B.2
68D0:  BCF    F94.2
....................             Tpulso=0.0; 
68D2:  CLRF   xDC
68D4:  CLRF   xDB
68D6:  CLRF   xDA
68D8:  CLRF   xD9
....................             flag_clear3=1; 
68DA:  BSF    x93.0
....................             flag_ganancia=0; 
68DC:  CLRF   x8E
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 01"); 
68DE:  MOVLW  06
68E0:  MOVWF  FEA
68E2:  MOVLW  2D
68E4:  MOVWF  FE9
68E6:  MOVFF  FF2,64D
68EA:  BCF    FF2.7
68EC:  MOVLW  00
68EE:  MOVLB  0
68F0:  CALL   0AB4
68F4:  TBLRD*-
68F6:  TBLRD*+
68F8:  MOVF   FF5,W
68FA:  MOVWF  FEE
68FC:  IORLW  00
68FE:  BNZ   68F6
6900:  MOVLB  6
6902:  BTFSC  x4D.7
6904:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
6906:  MOVLW  06
6908:  MOVWF  x4E
690A:  MOVLW  2D
690C:  MOVWF  x4D
690E:  CLRF   x4F
6910:  MOVLW  37
6912:  MOVWF  x50
6914:  MOVLW  02
6916:  MOVWF  x51
6918:  MOVLW  01
691A:  MOVWF  x52
691C:  MOVLB  0
691E:  CALL   1860
....................           
....................          Buzzer_on; 
6922:  BSF    F8A.7
6924:  BCF    F93.7
....................          delay_ms(1000); 
6926:  MOVLW  04
6928:  MOVLB  6
692A:  MOVWF  x4D
692C:  MOVLW  FA
692E:  MOVWF  x53
6930:  MOVLB  0
6932:  CALL   0D1A
6936:  MOVLB  6
6938:  DECFSZ x4D,F
693A:  BRA    692C
....................          Buzzer_off; 
693C:  BCF    F8A.7
693E:  BCF    F93.7
....................          delay_ms(1000); 
6940:  MOVLW  04
6942:  MOVWF  x4D
6944:  MOVLW  FA
6946:  MOVWF  x53
6948:  MOVLB  0
694A:  CALL   0D1A
694E:  MOVLB  6
6950:  DECFSZ x4D,F
6952:  BRA    6944
....................       } 
....................       else 
6954:  BRA    697E
6956:  MOVLB  0
....................       { 
....................          if(flag_clear3==1) 
6958:  MOVLB  5
695A:  BTFSS  x93.0
695C:  BRA    697E
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
695E:  MOVLB  6
6960:  CLRF   x62
6962:  MOVLW  37
6964:  MOVWF  x63
6966:  MOVLW  7F
6968:  MOVWF  x64
696A:  MOVLW  3F
696C:  MOVWF  x65
696E:  MOVLW  01
6970:  MOVWF  x66
6972:  CLRF   x67
6974:  MOVLB  0
6976:  CALL   179E
....................             flag_clear3=0; 
697A:  MOVLB  5
697C:  BCF    x93.0
....................          } 
....................       }   
....................        
....................       /* 
....................       if(UP)//Si oprime hacia arriba 
....................       { 
....................          Velocidad++; 
....................          UP=0; 
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
....................       {   
....................          Velocidad--; 
....................          DOWN=0; 
....................       }*/ 
....................        
....................       if(Velocidad>3) 
697E:  MOVLB  5
6980:  MOVF   x90,W
6982:  SUBLW  03
6984:  BC    698A
....................          Velocidad=1; 
6986:  MOVLW  01
6988:  MOVWF  x90
....................        
....................       if(Velocidad<1) 
698A:  MOVF   x90,F
698C:  BNZ   6992
....................          Velocidad=3;       
698E:  MOVLW  03
6990:  MOVWF  x90
....................       /* 
....................       if(RIGHT)//Si oprime SET 
....................       {   
....................          if(Pausa!=2) 
....................          { 
....................             if(Pausa==0) 
....................             { 
....................                delay_ms(200);Pausa=1; 
....................             } 
....................             else 
....................             { 
....................                delay_ms(200);Pausa=0; 
....................             } 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
....................          } 
....................          RIGHT=0; 
....................       }*/ 
....................        
....................          
....................       if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
6992:  BTFSS  x87.5
6994:  BRA    6F56
....................       {                  
....................           
....................          Lectura=0; 
6996:  BCF    x87.5
....................          Potencia=(100.0/Tciclo)*Tpulso; 
6998:  MOVLB  6
699A:  CLRF   x51
699C:  CLRF   x50
699E:  MOVLW  48
69A0:  MOVWF  x4F
69A2:  MOVLW  85
69A4:  MOVWF  x4E
69A6:  MOVFF  5D8,655
69AA:  MOVFF  5D7,654
69AE:  MOVFF  5D6,653
69B2:  MOVFF  5D5,652
69B6:  MOVLB  0
69B8:  CALL   0DA2
69BC:  MOVFF  00,64D
69C0:  MOVFF  01,64E
69C4:  MOVFF  02,64F
69C8:  MOVFF  03,650
69CC:  MOVFF  03,670
69D0:  MOVFF  02,66F
69D4:  MOVFF  01,66E
69D8:  MOVFF  00,66D
69DC:  MOVFF  5DC,674
69E0:  MOVFF  5DB,673
69E4:  MOVFF  5DA,672
69E8:  MOVFF  5D9,671
69EC:  CALL   1BB8
69F0:  MOVFF  03,5B0
69F4:  MOVFF  02,5AF
69F8:  MOVFF  01,5AE
69FC:  MOVFF  00,5AD
....................           
....................  //----------------Muestra Temperatura-------------------------- 
....................          if(Pt>=247) 
6A00:  MOVLB  6
6A02:  CLRF   x50
6A04:  CLRF   x4F
6A06:  MOVLW  77
6A08:  MOVWF  x4E
6A0A:  MOVLW  86
6A0C:  MOVWF  x4D
6A0E:  MOVFF  5D4,654
6A12:  MOVFF  5D3,653
6A16:  MOVFF  5D2,652
6A1A:  MOVFF  5D1,651
6A1E:  MOVLB  0
6A20:  CALL   1178
6A24:  BC    6A28
6A26:  BNZ   6A90
....................          { 
....................             glcd_rect(15, 29, 69, 45, YES, OFF); 
6A28:  MOVLW  0F
6A2A:  MOVLB  6
6A2C:  MOVWF  x62
6A2E:  MOVLW  1D
6A30:  MOVWF  x63
6A32:  MOVLW  45
6A34:  MOVWF  x64
6A36:  MOVLW  2D
6A38:  MOVWF  x65
6A3A:  MOVLW  01
6A3C:  MOVWF  x66
6A3E:  CLRF   x67
6A40:  MOVLB  0
6A42:  CALL   179E
....................             strcpy(Menus.Letra,"-----");displayMenu(Menus.Letra,15,29,2,2); 
6A46:  MOVLW  06
6A48:  MOVWF  FEA
6A4A:  MOVLW  2D
6A4C:  MOVWF  FE9
6A4E:  MOVFF  FF2,64D
6A52:  BCF    FF2.7
6A54:  MOVLW  00
6A56:  CALL   0AE0
6A5A:  TBLRD*-
6A5C:  TBLRD*+
6A5E:  MOVF   FF5,W
6A60:  MOVWF  FEE
6A62:  IORLW  00
6A64:  BNZ   6A5C
6A66:  MOVLB  6
6A68:  BTFSC  x4D.7
6A6A:  BSF    FF2.7
6A6C:  MOVLW  06
6A6E:  MOVWF  x4E
6A70:  MOVLW  2D
6A72:  MOVWF  x4D
6A74:  MOVLW  0F
6A76:  MOVWF  x4F
6A78:  MOVLW  1D
6A7A:  MOVWF  x50
6A7C:  MOVLW  02
6A7E:  MOVWF  x51
6A80:  MOVWF  x52
6A82:  MOVLB  0
6A84:  CALL   1860
....................             Desconectado=1; 
6A88:  MOVLB  5
6A8A:  BSF    x87.0
....................          } 
....................          else 
6A8C:  BRA    6AFE
6A8E:  MOVLB  0
....................          { 
....................             if(Desconectado==1) 
6A90:  MOVLB  5
6A92:  BTFSS  x87.0
6A94:  BRA    6ADA
....................             { 
....................                Desconectado=0; 
6A96:  BCF    x87.0
....................                delay_ms(2000); 
6A98:  MOVLW  08
6A9A:  MOVLB  6
6A9C:  MOVWF  x4D
6A9E:  MOVLW  FA
6AA0:  MOVWF  x53
6AA2:  MOVLB  0
6AA4:  CALL   0D1A
6AA8:  MOVLB  6
6AAA:  DECFSZ x4D,F
6AAC:  BRA    6A9E
....................                for(i=0;i<80;i++) 
6AAE:  MOVLB  5
6AB0:  CLRF   x98
6AB2:  MOVF   x98,W
6AB4:  SUBLW  4F
6AB6:  BNC   6ADA
....................                { 
....................                   Temperatura=Leer_Sensor(80); 
6AB8:  MOVLW  50
6ABA:  MOVLB  6
6ABC:  MOVWF  x4D
6ABE:  MOVLB  0
6AC0:  CALL   1CAE
6AC4:  MOVFF  03,604
6AC8:  MOVFF  02,603
6ACC:  MOVFF  01,602
6AD0:  MOVFF  00,601
....................                } 
6AD4:  MOVLB  5
6AD6:  INCF   x98,F
6AD8:  BRA    6AB2
....................             } 
....................             displayT(Temperatura,15,29,2); 
6ADA:  MOVFF  604,650
6ADE:  MOVFF  603,64F
6AE2:  MOVFF  602,64E
6AE6:  MOVFF  601,64D
6AEA:  MOVLW  0F
6AEC:  MOVLB  6
6AEE:  MOVWF  x51
6AF0:  MOVLW  1D
6AF2:  MOVWF  x52
6AF4:  MOVLW  02
6AF6:  MOVWF  x53
6AF8:  MOVLB  0
6AFA:  CALL   370A
....................          } 
....................  
....................          //displayT(Temperatura,15,29,2); 
....................          glcd_circle(74,30,2,NO,ON); 
6AFE:  MOVLW  4A
6B00:  MOVLB  6
6B02:  MOVWF  x62
6B04:  MOVLW  1E
6B06:  MOVWF  x63
6B08:  MOVLW  02
6B0A:  MOVWF  x64
6B0C:  CLRF   x65
6B0E:  MOVLW  01
6B10:  MOVWF  x66
6B12:  MOVLB  0
6B14:  CALL   2148
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,75,30,2,2); 
6B18:  MOVLW  06
6B1A:  MOVWF  FEA
6B1C:  MOVLW  2D
6B1E:  MOVWF  FE9
6B20:  MOVFF  FF2,64D
6B24:  BCF    FF2.7
6B26:  MOVLW  00
6B28:  CALL   06BE
6B2C:  TBLRD*-
6B2E:  TBLRD*+
6B30:  MOVF   FF5,W
6B32:  MOVWF  FEE
6B34:  IORLW  00
6B36:  BNZ   6B2E
6B38:  MOVLB  6
6B3A:  BTFSC  x4D.7
6B3C:  BSF    FF2.7
6B3E:  MOVLW  06
6B40:  MOVWF  x4E
6B42:  MOVLW  2D
6B44:  MOVWF  x4D
6B46:  MOVLW  4B
6B48:  MOVWF  x4F
6B4A:  MOVLW  1E
6B4C:  MOVWF  x50
6B4E:  MOVLW  02
6B50:  MOVWF  x51
6B52:  MOVWF  x52
6B54:  MOVLB  0
6B56:  CALL   1860
....................           
....................          //displayTemperatura(Setpoint,30,45,0,1); 
....................          displayT(Setpoint,30,45,1); 
6B5A:  MOVFF  610,650
6B5E:  MOVFF  60F,64F
6B62:  MOVFF  60E,64E
6B66:  MOVFF  60D,64D
6B6A:  MOVLW  1E
6B6C:  MOVLB  6
6B6E:  MOVWF  x51
6B70:  MOVLW  2D
6B72:  MOVWF  x52
6B74:  MOVLW  01
6B76:  MOVWF  x53
6B78:  MOVLB  0
6B7A:  CALL   370A
....................          glcd_circle(50,47,1,NO,ON); 
6B7E:  MOVLW  32
6B80:  MOVLB  6
6B82:  MOVWF  x62
6B84:  MOVLW  2F
6B86:  MOVWF  x63
6B88:  MOVLW  01
6B8A:  MOVWF  x64
6B8C:  CLRF   x65
6B8E:  MOVWF  x66
6B90:  MOVLB  0
6B92:  CALL   2148
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,53,45,2,1); 
6B96:  MOVLW  06
6B98:  MOVWF  FEA
6B9A:  MOVLW  2D
6B9C:  MOVWF  FE9
6B9E:  MOVFF  FF2,64D
6BA2:  BCF    FF2.7
6BA4:  MOVLW  00
6BA6:  CALL   06BE
6BAA:  TBLRD*-
6BAC:  TBLRD*+
6BAE:  MOVF   FF5,W
6BB0:  MOVWF  FEE
6BB2:  IORLW  00
6BB4:  BNZ   6BAC
6BB6:  MOVLB  6
6BB8:  BTFSC  x4D.7
6BBA:  BSF    FF2.7
6BBC:  MOVLW  06
6BBE:  MOVWF  x4E
6BC0:  MOVLW  2D
6BC2:  MOVWF  x4D
6BC4:  MOVLW  35
6BC6:  MOVWF  x4F
6BC8:  MOVLW  2D
6BCA:  MOVWF  x50
6BCC:  MOVLW  02
6BCE:  MOVWF  x51
6BD0:  MOVLW  01
6BD2:  MOVWF  x52
6BD4:  MOVLB  0
6BD6:  CALL   1860
....................          strcpy(Menus.Letra,"Temp:");displayMenu(Menus.Letra,0,45,2,1);  
6BDA:  MOVLW  06
6BDC:  MOVWF  FEA
6BDE:  MOVLW  2D
6BE0:  MOVWF  FE9
6BE2:  MOVFF  FF2,64D
6BE6:  BCF    FF2.7
6BE8:  MOVLW  00
6BEA:  CALL   0B00
6BEE:  TBLRD*-
6BF0:  TBLRD*+
6BF2:  MOVF   FF5,W
6BF4:  MOVWF  FEE
6BF6:  IORLW  00
6BF8:  BNZ   6BF0
6BFA:  MOVLB  6
6BFC:  BTFSC  x4D.7
6BFE:  BSF    FF2.7
6C00:  MOVLW  06
6C02:  MOVWF  x4E
6C04:  MOVLW  2D
6C06:  MOVWF  x4D
6C08:  CLRF   x4F
6C0A:  MOVWF  x50
6C0C:  MOVLW  02
6C0E:  MOVWF  x51
6C10:  MOVLW  01
6C12:  MOVWF  x52
6C14:  MOVLB  0
6C16:  CALL   1860
....................           
....................          displayTiempo(Potencia,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
6C1A:  MOVFF  5B0,650
6C1E:  MOVFF  5AF,64F
6C22:  MOVFF  5AE,64E
6C26:  MOVFF  5AD,64D
6C2A:  CALL   2372
6C2E:  MOVFF  01,64D
6C32:  MOVFF  01,64E
6C36:  MOVLW  61
6C38:  MOVLB  6
6C3A:  MOVWF  x4F
6C3C:  MOVLW  2A
6C3E:  MOVWF  x50
6C40:  MOVLW  03
6C42:  MOVWF  x51
6C44:  MOVLW  01
6C46:  MOVWF  x52
6C48:  MOVLB  0
6C4A:  CALL   2BAA
6C4E:  MOVLW  06
6C50:  MOVWF  FEA
6C52:  MOVLW  2D
6C54:  MOVWF  FE9
6C56:  MOVFF  FF2,64D
6C5A:  BCF    FF2.7
6C5C:  MOVLW  00
6C5E:  CALL   0B20
6C62:  TBLRD*-
6C64:  TBLRD*+
6C66:  MOVF   FF5,W
6C68:  MOVWF  FEE
6C6A:  IORLW  00
6C6C:  BNZ   6C64
6C6E:  MOVLB  6
6C70:  BTFSC  x4D.7
6C72:  BSF    FF2.7
6C74:  MOVLW  06
6C76:  MOVWF  x4E
6C78:  MOVLW  2D
6C7A:  MOVWF  x4D
6C7C:  MOVLW  73
6C7E:  MOVWF  x4F
6C80:  MOVLW  2A
6C82:  MOVWF  x50
6C84:  MOVLW  02
6C86:  MOVWF  x51
6C88:  MOVLW  01
6C8A:  MOVWF  x52
6C8C:  MOVLB  0
6C8E:  CALL   1860
....................          //displayTiempo(Tpulsomin*10,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
....................           
....................          strcpy(Menus.Letra,"Vel:");displayMenu(Menus.Letra,97,13,2,1); 
6C92:  MOVLW  06
6C94:  MOVWF  FEA
6C96:  MOVLW  2D
6C98:  MOVWF  FE9
6C9A:  MOVFF  FF2,64D
6C9E:  BCF    FF2.7
6CA0:  MOVLW  00
6CA2:  CALL   0B3C
6CA6:  TBLRD*-
6CA8:  TBLRD*+
6CAA:  MOVF   FF5,W
6CAC:  MOVWF  FEE
6CAE:  IORLW  00
6CB0:  BNZ   6CA8
6CB2:  MOVLB  6
6CB4:  BTFSC  x4D.7
6CB6:  BSF    FF2.7
6CB8:  MOVLW  06
6CBA:  MOVWF  x4E
6CBC:  MOVLW  2D
6CBE:  MOVWF  x4D
6CC0:  MOVLW  61
6CC2:  MOVWF  x4F
6CC4:  MOVLW  0D
6CC6:  MOVWF  x50
6CC8:  MOVLW  02
6CCA:  MOVWF  x51
6CCC:  MOVLW  01
6CCE:  MOVWF  x52
6CD0:  MOVLB  0
6CD2:  CALL   1860
....................          displayTiempo(Velocidad,115,13,0,1); 
6CD6:  MOVFF  590,64E
6CDA:  MOVLW  73
6CDC:  MOVLB  6
6CDE:  MOVWF  x4F
6CE0:  MOVLW  0D
6CE2:  MOVWF  x50
6CE4:  CLRF   x51
6CE6:  MOVLW  01
6CE8:  MOVWF  x52
6CEA:  MOVLB  0
6CEC:  CALL   2BAA
....................           
....................          if(flag_display==1) 
6CF0:  MOVLB  5
6CF2:  BTFSS  x93.3
6CF4:  BRA    6D2E
....................             displayTiempo(Ganancia,60,46,3,1); 
6CF6:  MOVFF  5F0,650
6CFA:  MOVFF  5EF,64F
6CFE:  MOVFF  5EE,64E
6D02:  MOVFF  5ED,64D
6D06:  MOVLB  0
6D08:  CALL   2372
6D0C:  MOVFF  01,64D
6D10:  MOVFF  01,64E
6D14:  MOVLW  3C
6D16:  MOVLB  6
6D18:  MOVWF  x4F
6D1A:  MOVLW  2E
6D1C:  MOVWF  x50
6D1E:  MOVLW  03
6D20:  MOVWF  x51
6D22:  MOVLW  01
6D24:  MOVWF  x52
6D26:  MOVLB  0
6D28:  CALL   2BAA
....................             //displayTemperatura(Prom,97,13,0,1); 
....................             //displayT(Prom,60,46,1); 
....................          else 
6D2C:  BRA    6D4C
....................             glcd_rect(60, 46, 88, 52, YES, OFF); 
6D2E:  MOVLW  3C
6D30:  MOVLB  6
6D32:  MOVWF  x62
6D34:  MOVLW  2E
6D36:  MOVWF  x63
6D38:  MOVLW  58
6D3A:  MOVWF  x64
6D3C:  MOVLW  34
6D3E:  MOVWF  x65
6D40:  MOVLW  01
6D42:  MOVWF  x66
6D44:  CLRF   x67
6D46:  MOVLB  0
6D48:  CALL   179E
....................           
....................          // Muestra Valor de esterilizacion Programado. 
....................          displayTiempo(Testerilizacion[3],20,2,0,2);displayTiempo(Testerilizacion[2],33,2,0,2); 
6D4C:  MOVFF  5BC,64E
6D50:  MOVLW  14
6D52:  MOVLB  6
6D54:  MOVWF  x4F
6D56:  MOVLW  02
6D58:  MOVWF  x50
6D5A:  CLRF   x51
6D5C:  MOVWF  x52
6D5E:  MOVLB  0
6D60:  CALL   2BAA
6D64:  MOVFF  5BB,64E
6D68:  MOVLW  21
6D6A:  MOVLB  6
6D6C:  MOVWF  x4F
6D6E:  MOVLW  02
6D70:  MOVWF  x50
6D72:  CLRF   x51
6D74:  MOVWF  x52
6D76:  MOVLB  0
6D78:  CALL   2BAA
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,46,2,2,2);  
6D7C:  MOVLW  06
6D7E:  MOVWF  FEA
6D80:  MOVLW  2D
6D82:  MOVWF  FE9
6D84:  MOVFF  FF2,64D
6D88:  BCF    FF2.7
6D8A:  MOVLW  00
6D8C:  CALL   09BC
6D90:  TBLRD*-
6D92:  TBLRD*+
6D94:  MOVF   FF5,W
6D96:  MOVWF  FEE
6D98:  IORLW  00
6D9A:  BNZ   6D92
6D9C:  MOVLB  6
6D9E:  BTFSC  x4D.7
6DA0:  BSF    FF2.7
6DA2:  MOVLW  06
6DA4:  MOVWF  x4E
6DA6:  MOVLW  2D
6DA8:  MOVWF  x4D
6DAA:  MOVLW  2E
6DAC:  MOVWF  x4F
6DAE:  MOVLW  02
6DB0:  MOVWF  x50
6DB2:  MOVWF  x51
6DB4:  MOVWF  x52
6DB6:  MOVLB  0
6DB8:  CALL   1860
....................          displayTiempo(Testerilizacion[1],55,2,0,2);displayTiempo(Testerilizacion[0],68,2,0,2); 
6DBC:  MOVFF  5BA,64E
6DC0:  MOVLW  37
6DC2:  MOVLB  6
6DC4:  MOVWF  x4F
6DC6:  MOVLW  02
6DC8:  MOVWF  x50
6DCA:  CLRF   x51
6DCC:  MOVWF  x52
6DCE:  MOVLB  0
6DD0:  CALL   2BAA
6DD4:  MOVFF  5B9,64E
6DD8:  MOVLW  44
6DDA:  MOVLB  6
6DDC:  MOVWF  x4F
6DDE:  MOVLW  02
6DE0:  MOVWF  x50
6DE2:  CLRF   x51
6DE4:  MOVWF  x52
6DE6:  MOVLB  0
6DE8:  CALL   2BAA
....................           
....................          // Muestra Valor de esterilizacion actual. 
....................          strcpy(Menus.Letra,"Time:");displayMenu(Menus.Letra,0,18,2,1);  
6DEC:  MOVLW  06
6DEE:  MOVWF  FEA
6DF0:  MOVLW  2D
6DF2:  MOVWF  FE9
6DF4:  MOVFF  FF2,64D
6DF8:  BCF    FF2.7
6DFA:  MOVLW  00
6DFC:  CALL   0B5C
6E00:  TBLRD*-
6E02:  TBLRD*+
6E04:  MOVF   FF5,W
6E06:  MOVWF  FEE
6E08:  IORLW  00
6E0A:  BNZ   6E02
6E0C:  MOVLB  6
6E0E:  BTFSC  x4D.7
6E10:  BSF    FF2.7
6E12:  MOVLW  06
6E14:  MOVWF  x4E
6E16:  MOVLW  2D
6E18:  MOVWF  x4D
6E1A:  CLRF   x4F
6E1C:  MOVLW  12
6E1E:  MOVWF  x50
6E20:  MOVLW  02
6E22:  MOVWF  x51
6E24:  MOVLW  01
6E26:  MOVWF  x52
6E28:  MOVLB  0
6E2A:  CALL   1860
....................          displayTiempo(Testerilizacionp[3],30,18,0,1);displayTiempo(Testerilizacionp[2],36,18,0,1); 
6E2E:  MOVFF  5C0,64E
6E32:  MOVLW  1E
6E34:  MOVLB  6
6E36:  MOVWF  x4F
6E38:  MOVLW  12
6E3A:  MOVWF  x50
6E3C:  CLRF   x51
6E3E:  MOVLW  01
6E40:  MOVWF  x52
6E42:  MOVLB  0
6E44:  CALL   2BAA
6E48:  MOVFF  5BF,64E
6E4C:  MOVLW  24
6E4E:  MOVLB  6
6E50:  MOVWF  x4F
6E52:  MOVLW  12
6E54:  MOVWF  x50
6E56:  CLRF   x51
6E58:  MOVLW  01
6E5A:  MOVWF  x52
6E5C:  MOVLB  0
6E5E:  CALL   2BAA
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,42,18,2,1);  
6E62:  MOVLW  06
6E64:  MOVWF  FEA
6E66:  MOVLW  2D
6E68:  MOVWF  FE9
6E6A:  MOVFF  FF2,64D
6E6E:  BCF    FF2.7
6E70:  MOVLW  00
6E72:  CALL   09BC
6E76:  TBLRD*-
6E78:  TBLRD*+
6E7A:  MOVF   FF5,W
6E7C:  MOVWF  FEE
6E7E:  IORLW  00
6E80:  BNZ   6E78
6E82:  MOVLB  6
6E84:  BTFSC  x4D.7
6E86:  BSF    FF2.7
6E88:  MOVLW  06
6E8A:  MOVWF  x4E
6E8C:  MOVLW  2D
6E8E:  MOVWF  x4D
6E90:  MOVLW  2A
6E92:  MOVWF  x4F
6E94:  MOVLW  12
6E96:  MOVWF  x50
6E98:  MOVLW  02
6E9A:  MOVWF  x51
6E9C:  MOVLW  01
6E9E:  MOVWF  x52
6EA0:  MOVLB  0
6EA2:  CALL   1860
....................          displayTiempo(Testerilizacionp[1],48,18,0,1);displayTiempo(Testerilizacionp[0],54,18,0,1); 
6EA6:  MOVFF  5BE,64E
6EAA:  MOVLW  30
6EAC:  MOVLB  6
6EAE:  MOVWF  x4F
6EB0:  MOVLW  12
6EB2:  MOVWF  x50
6EB4:  CLRF   x51
6EB6:  MOVLW  01
6EB8:  MOVWF  x52
6EBA:  MOVLB  0
6EBC:  CALL   2BAA
6EC0:  MOVFF  5BD,64E
6EC4:  MOVLW  36
6EC6:  MOVLB  6
6EC8:  MOVWF  x4F
6ECA:  MOVLW  12
6ECC:  MOVWF  x50
6ECE:  CLRF   x51
6ED0:  MOVLW  01
6ED2:  MOVWF  x52
6ED4:  MOVLB  0
6ED6:  CALL   2BAA
....................          strcpy(Menus.Letra,"(H:M)");displayMenu(Menus.Letra,60,18,2,1);  
6EDA:  MOVLW  06
6EDC:  MOVWF  FEA
6EDE:  MOVLW  2D
6EE0:  MOVWF  FE9
6EE2:  MOVFF  FF2,64D
6EE6:  BCF    FF2.7
6EE8:  MOVLW  00
6EEA:  CALL   0B7C
6EEE:  TBLRD*-
6EF0:  TBLRD*+
6EF2:  MOVF   FF5,W
6EF4:  MOVWF  FEE
6EF6:  IORLW  00
6EF8:  BNZ   6EF0
6EFA:  MOVLB  6
6EFC:  BTFSC  x4D.7
6EFE:  BSF    FF2.7
6F00:  MOVLW  06
6F02:  MOVWF  x4E
6F04:  MOVLW  2D
6F06:  MOVWF  x4D
6F08:  MOVLW  3C
6F0A:  MOVWF  x4F
6F0C:  MOVLW  12
6F0E:  MOVWF  x50
6F10:  MOVLW  02
6F12:  MOVWF  x51
6F14:  MOVLW  01
6F16:  MOVWF  x52
6F18:  MOVLB  0
6F1A:  CALL   1860
....................           
....................          glcd_rect(0, 0, 89, 27, NO, ON); 
6F1E:  MOVLB  6
6F20:  CLRF   x62
6F22:  CLRF   x63
6F24:  MOVLW  59
6F26:  MOVWF  x64
6F28:  MOVLW  1B
6F2A:  MOVWF  x65
6F2C:  CLRF   x66
6F2E:  MOVLW  01
6F30:  MOVWF  x67
6F32:  MOVLB  0
6F34:  CALL   179E
....................          glcd_rect(0, 27, 89, 54, NO, ON); 
6F38:  MOVLB  6
6F3A:  CLRF   x62
6F3C:  MOVLW  1B
6F3E:  MOVWF  x63
6F40:  MOVLW  59
6F42:  MOVWF  x64
6F44:  MOVLW  36
6F46:  MOVWF  x65
6F48:  CLRF   x66
6F4A:  MOVLW  01
6F4C:  MOVWF  x67
6F4E:  MOVLB  0
6F50:  CALL   179E
6F54:  MOVLB  5
....................       }  
....................              
....................       /*if(LEFT)//Si oprime boton de Toma. 
....................       { 
....................          if(Pausa!=2) 
....................          { 
....................             delay_ms(500);Menu=30;glcd_fillscreen(OFF);Opcion=1;visual=1;Pausa=1; 
....................          } 
....................          LEFT=0; 
....................       }*/ 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==100){ //Menu de Configuración de Parametros de Control 
6F56:  MOVF   x96,W
6F58:  SUBLW  64
6F5A:  BTFSS  FD8.2
6F5C:  BRA    72C2
....................        
....................       if(Opcion>5) 
6F5E:  MOVF   x9C,W
6F60:  SUBLW  05
6F62:  BC    6F68
....................       {Opcion=1;} 
6F64:  MOVLW  01
6F66:  MOVWF  x9C
....................       if(Opcion<1) 
6F68:  MOVF   x9C,F
6F6A:  BNZ   6F70
....................       {Opcion=5;} 
6F6C:  MOVLW  05
6F6E:  MOVWF  x9C
....................        
....................          if(Opcion==1)    
6F70:  DECFSZ x9C,W
6F72:  BRA    6FB8
....................             {strcpy(Menus.Letra,"Ganancia"); 
6F74:  MOVLW  06
6F76:  MOVWF  FEA
6F78:  MOVLW  2D
6F7A:  MOVWF  FE9
6F7C:  MOVFF  FF2,64D
6F80:  BCF    FF2.7
6F82:  MOVLW  00
6F84:  MOVLB  0
6F86:  CALL   0B9C
6F8A:  TBLRD*-
6F8C:  TBLRD*+
6F8E:  MOVF   FF5,W
6F90:  MOVWF  FEE
6F92:  IORLW  00
6F94:  BNZ   6F8C
6F96:  MOVLB  6
6F98:  BTFSC  x4D.7
6F9A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
6F9C:  MOVLW  06
6F9E:  MOVWF  x4E
6FA0:  MOVLW  2D
6FA2:  MOVWF  x4D
6FA4:  CLRF   x4F
6FA6:  CLRF   x50
6FA8:  MOVLW  01
6FAA:  MOVWF  x51
6FAC:  MOVWF  x52
6FAE:  MOVLB  0
6FB0:  CALL   1860
....................          else 
6FB4:  BRA    6FF8
6FB6:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ganancia"); 
6FB8:  MOVLW  06
6FBA:  MOVWF  FEA
6FBC:  MOVLW  2D
6FBE:  MOVWF  FE9
6FC0:  MOVFF  FF2,64D
6FC4:  BCF    FF2.7
6FC6:  MOVLW  00
6FC8:  MOVLB  0
6FCA:  CALL   0B9C
6FCE:  TBLRD*-
6FD0:  TBLRD*+
6FD2:  MOVF   FF5,W
6FD4:  MOVWF  FEE
6FD6:  IORLW  00
6FD8:  BNZ   6FD0
6FDA:  MOVLB  6
6FDC:  BTFSC  x4D.7
6FDE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);} 
6FE0:  MOVLW  06
6FE2:  MOVWF  x4E
6FE4:  MOVLW  2D
6FE6:  MOVWF  x4D
6FE8:  CLRF   x4F
6FEA:  CLRF   x50
6FEC:  CLRF   x51
6FEE:  MOVLW  01
6FF0:  MOVWF  x52
6FF2:  MOVLB  0
6FF4:  CALL   1860
....................           
....................          if(Opcion==2)    
6FF8:  MOVLB  5
6FFA:  MOVF   x9C,W
6FFC:  SUBLW  02
6FFE:  BNZ   7046
....................             {strcpy(Menus.Letra,"Tciclo"); 
7000:  MOVLW  06
7002:  MOVWF  FEA
7004:  MOVLW  2D
7006:  MOVWF  FE9
7008:  MOVFF  FF2,64D
700C:  BCF    FF2.7
700E:  MOVLW  00
7010:  MOVLB  0
7012:  CALL   0BC0
7016:  TBLRD*-
7018:  TBLRD*+
701A:  MOVF   FF5,W
701C:  MOVWF  FEE
701E:  IORLW  00
7020:  BNZ   7018
7022:  MOVLB  6
7024:  BTFSC  x4D.7
7026:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
7028:  MOVLW  06
702A:  MOVWF  x4E
702C:  MOVLW  2D
702E:  MOVWF  x4D
7030:  CLRF   x4F
7032:  MOVLW  09
7034:  MOVWF  x50
7036:  MOVLW  01
7038:  MOVWF  x51
703A:  MOVWF  x52
703C:  MOVLB  0
703E:  CALL   1860
....................          else 
7042:  BRA    7088
7044:  MOVLB  5
....................             {strcpy(Menus.Letra,"Tciclo"); 
7046:  MOVLW  06
7048:  MOVWF  FEA
704A:  MOVLW  2D
704C:  MOVWF  FE9
704E:  MOVFF  FF2,64D
7052:  BCF    FF2.7
7054:  MOVLW  00
7056:  MOVLB  0
7058:  CALL   0BC0
705C:  TBLRD*-
705E:  TBLRD*+
7060:  MOVF   FF5,W
7062:  MOVWF  FEE
7064:  IORLW  00
7066:  BNZ   705E
7068:  MOVLB  6
706A:  BTFSC  x4D.7
706C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);} 
706E:  MOVLW  06
7070:  MOVWF  x4E
7072:  MOVLW  2D
7074:  MOVWF  x4D
7076:  CLRF   x4F
7078:  MOVLW  09
707A:  MOVWF  x50
707C:  CLRF   x51
707E:  MOVLW  01
7080:  MOVWF  x52
7082:  MOVLB  0
7084:  CALL   1860
....................              
....................          if(Opcion==3)    
7088:  MOVLB  5
708A:  MOVF   x9C,W
708C:  SUBLW  03
708E:  BNZ   70D6
....................             {strcpy(Menus.Letra,"Ajuste +"); 
7090:  MOVLW  06
7092:  MOVWF  FEA
7094:  MOVLW  2D
7096:  MOVWF  FE9
7098:  MOVFF  FF2,64D
709C:  BCF    FF2.7
709E:  MOVLW  00
70A0:  MOVLB  0
70A2:  CALL   0BE2
70A6:  TBLRD*-
70A8:  TBLRD*+
70AA:  MOVF   FF5,W
70AC:  MOVWF  FEE
70AE:  IORLW  00
70B0:  BNZ   70A8
70B2:  MOVLB  6
70B4:  BTFSC  x4D.7
70B6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
70B8:  MOVLW  06
70BA:  MOVWF  x4E
70BC:  MOVLW  2D
70BE:  MOVWF  x4D
70C0:  CLRF   x4F
70C2:  MOVLW  12
70C4:  MOVWF  x50
70C6:  MOVLW  01
70C8:  MOVWF  x51
70CA:  MOVWF  x52
70CC:  MOVLB  0
70CE:  CALL   1860
....................          else 
70D2:  BRA    7118
70D4:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste +"); 
70D6:  MOVLW  06
70D8:  MOVWF  FEA
70DA:  MOVLW  2D
70DC:  MOVWF  FE9
70DE:  MOVFF  FF2,64D
70E2:  BCF    FF2.7
70E4:  MOVLW  00
70E6:  MOVLB  0
70E8:  CALL   0BE2
70EC:  TBLRD*-
70EE:  TBLRD*+
70F0:  MOVF   FF5,W
70F2:  MOVWF  FEE
70F4:  IORLW  00
70F6:  BNZ   70EE
70F8:  MOVLB  6
70FA:  BTFSC  x4D.7
70FC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}    
70FE:  MOVLW  06
7100:  MOVWF  x4E
7102:  MOVLW  2D
7104:  MOVWF  x4D
7106:  CLRF   x4F
7108:  MOVLW  12
710A:  MOVWF  x50
710C:  CLRF   x51
710E:  MOVLW  01
7110:  MOVWF  x52
7112:  MOVLB  0
7114:  CALL   1860
....................                          
....................          if(Opcion==4)    
7118:  MOVLB  5
711A:  MOVF   x9C,W
711C:  SUBLW  04
711E:  BNZ   7166
....................             {strcpy(Menus.Letra,"Ajuste -"); 
7120:  MOVLW  06
7122:  MOVWF  FEA
7124:  MOVLW  2D
7126:  MOVWF  FE9
7128:  MOVFF  FF2,64D
712C:  BCF    FF2.7
712E:  MOVLW  00
7130:  MOVLB  0
7132:  CALL   0C06
7136:  TBLRD*-
7138:  TBLRD*+
713A:  MOVF   FF5,W
713C:  MOVWF  FEE
713E:  IORLW  00
7140:  BNZ   7138
7142:  MOVLB  6
7144:  BTFSC  x4D.7
7146:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
7148:  MOVLW  06
714A:  MOVWF  x4E
714C:  MOVLW  2D
714E:  MOVWF  x4D
7150:  CLRF   x4F
7152:  MOVLW  1B
7154:  MOVWF  x50
7156:  MOVLW  01
7158:  MOVWF  x51
715A:  MOVWF  x52
715C:  MOVLB  0
715E:  CALL   1860
....................          else 
7162:  BRA    71A8
7164:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste -"); 
7166:  MOVLW  06
7168:  MOVWF  FEA
716A:  MOVLW  2D
716C:  MOVWF  FE9
716E:  MOVFF  FF2,64D
7172:  BCF    FF2.7
7174:  MOVLW  00
7176:  MOVLB  0
7178:  CALL   0C06
717C:  TBLRD*-
717E:  TBLRD*+
7180:  MOVF   FF5,W
7182:  MOVWF  FEE
7184:  IORLW  00
7186:  BNZ   717E
7188:  MOVLB  6
718A:  BTFSC  x4D.7
718C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);}      
718E:  MOVLW  06
7190:  MOVWF  x4E
7192:  MOVLW  2D
7194:  MOVWF  x4D
7196:  CLRF   x4F
7198:  MOVLW  1B
719A:  MOVWF  x50
719C:  CLRF   x51
719E:  MOVLW  01
71A0:  MOVWF  x52
71A2:  MOVLB  0
71A4:  CALL   1860
....................              
....................          if(Opcion==5)    
71A8:  MOVLB  5
71AA:  MOVF   x9C,W
71AC:  SUBLW  05
71AE:  BNZ   71F6
....................             {strcpy(Menus.Letra,"Media Movil"); 
71B0:  MOVLW  06
71B2:  MOVWF  FEA
71B4:  MOVLW  2D
71B6:  MOVWF  FE9
71B8:  MOVFF  FF2,64D
71BC:  BCF    FF2.7
71BE:  MOVLW  00
71C0:  MOVLB  0
71C2:  CALL   0C2A
71C6:  TBLRD*-
71C8:  TBLRD*+
71CA:  MOVF   FF5,W
71CC:  MOVWF  FEE
71CE:  IORLW  00
71D0:  BNZ   71C8
71D2:  MOVLB  6
71D4:  BTFSC  x4D.7
71D6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
71D8:  MOVLW  06
71DA:  MOVWF  x4E
71DC:  MOVLW  2D
71DE:  MOVWF  x4D
71E0:  CLRF   x4F
71E2:  MOVLW  24
71E4:  MOVWF  x50
71E6:  MOVLW  01
71E8:  MOVWF  x51
71EA:  MOVWF  x52
71EC:  MOVLB  0
71EE:  CALL   1860
....................          else 
71F2:  BRA    7238
71F4:  MOVLB  5
....................             {strcpy(Menus.Letra,"Media Movil"); 
71F6:  MOVLW  06
71F8:  MOVWF  FEA
71FA:  MOVLW  2D
71FC:  MOVWF  FE9
71FE:  MOVFF  FF2,64D
7202:  BCF    FF2.7
7204:  MOVLW  00
7206:  MOVLB  0
7208:  CALL   0C2A
720C:  TBLRD*-
720E:  TBLRD*+
7210:  MOVF   FF5,W
7212:  MOVWF  FEE
7214:  IORLW  00
7216:  BNZ   720E
7218:  MOVLB  6
721A:  BTFSC  x4D.7
721C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}      
721E:  MOVLW  06
7220:  MOVWF  x4E
7222:  MOVLW  2D
7224:  MOVWF  x4D
7226:  CLRF   x4F
7228:  MOVLW  24
722A:  MOVWF  x50
722C:  CLRF   x51
722E:  MOVLW  01
7230:  MOVWF  x52
7232:  MOVLB  0
7234:  CALL   1860
....................                
....................        
....................          if(UP)//Si oprime hacia arriba 
7238:  MOVLB  5
723A:  BTFSS  x86.0
723C:  BRA    7252
....................          { 
....................             UP=0;delay_ms(30); 
723E:  BCF    x86.0
7240:  MOVLW  1E
7242:  MOVLB  6
7244:  MOVWF  x53
7246:  MOVLB  0
7248:  CALL   0D1A
....................             Opcion--;visual=1; 
724C:  MOVLB  5
724E:  DECF   x9C,F
7250:  BSF    x87.4
....................          } 
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
7252:  BTFSS  x86.1
7254:  BRA    726A
....................          { 
....................             DOWN=0;delay_ms(30); 
7256:  BCF    x86.1
7258:  MOVLW  1E
725A:  MOVLB  6
725C:  MOVWF  x53
725E:  MOVLB  0
7260:  CALL   0D1A
....................             Opcion++;visual=1; 
7264:  MOVLB  5
7266:  INCF   x9C,F
7268:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
726A:  BTFSS  x86.2
726C:  BRA    7296
....................          {  
....................             RIGHT=0;delay_ms(30); 
726E:  BCF    x86.2
7270:  MOVLW  1E
7272:  MOVLB  6
7274:  MOVWF  x53
7276:  MOVLB  0
7278:  CALL   0D1A
....................             Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
727C:  MOVLW  64
727E:  MOVLB  5
7280:  ADDWF  x9C,W
7282:  MOVWF  x96
7284:  MOVLW  01
7286:  MOVWF  x9C
7288:  MOVLB  6
728A:  CLRF   x4E
728C:  MOVLB  0
728E:  CALL   1232
7292:  MOVLB  5
7294:  BSF    x87.4
....................          } 
....................           
....................          if(LEFT)//Si oprime SET 
7296:  BTFSS  x86.3
7298:  BRA    72C2
....................          {  
....................             LEFT=0;delay_ms(30); 
729A:  BCF    x86.3
729C:  MOVLW  1E
729E:  MOVLB  6
72A0:  MOVWF  x53
72A2:  MOVLB  0
72A4:  CALL   0D1A
....................             Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
72A8:  MOVLW  64
72AA:  MOVLB  5
72AC:  ADDWF  x9C,W
72AE:  MOVWF  x96
72B0:  MOVLW  01
72B2:  MOVWF  x9C
72B4:  MOVLB  6
72B6:  CLRF   x4E
72B8:  MOVLB  0
72BA:  CALL   1232
72BE:  MOVLB  5
72C0:  BSF    x87.4
....................          } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==101){ // Menu de Ajuste de Ganancia 
72C2:  MOVF   x96,W
72C4:  SUBLW  65
72C6:  BTFSS  FD8.2
72C8:  BRA    751A
....................        
....................       if(Ganancia>40) 
72CA:  MOVLB  6
72CC:  CLRF   x50
72CE:  CLRF   x4F
72D0:  MOVLW  20
72D2:  MOVWF  x4E
72D4:  MOVLW  84
72D6:  MOVWF  x4D
72D8:  MOVFF  5F0,654
72DC:  MOVFF  5EF,653
72E0:  MOVFF  5EE,652
72E4:  MOVFF  5ED,651
72E8:  MOVLB  0
72EA:  CALL   1178
72EE:  BNC   72FC
....................       { 
....................          Ganancia=2; 
72F0:  MOVLB  5
72F2:  CLRF   xF0
72F4:  CLRF   xEF
72F6:  CLRF   xEE
72F8:  MOVLW  80
72FA:  MOVWF  xED
....................       } 
....................        
....................       if(visual==1) 
72FC:  MOVLB  5
72FE:  BTFSS  x87.4
7300:  BRA    7388
....................       { 
....................          glcd_fillScreen(OFF); 
7302:  MOVLB  6
7304:  CLRF   x4E
7306:  MOVLB  0
7308:  CALL   1232
....................          strcpy(Menus.Letra,"Ganancia"); 
730C:  MOVLW  06
730E:  MOVWF  FEA
7310:  MOVLW  2D
7312:  MOVWF  FE9
7314:  MOVFF  FF2,64D
7318:  BCF    FF2.7
731A:  MOVLW  00
731C:  CALL   0B9C
7320:  TBLRD*-
7322:  TBLRD*+
7324:  MOVF   FF5,W
7326:  MOVWF  FEE
7328:  IORLW  00
732A:  BNZ   7322
732C:  MOVLB  6
732E:  BTFSC  x4D.7
7330:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
7332:  MOVLW  06
7334:  MOVWF  x4E
7336:  MOVLW  2D
7338:  MOVWF  x4D
733A:  CLRF   x4F
733C:  CLRF   x50
733E:  MOVLW  01
7340:  MOVWF  x51
7342:  MOVLW  02
7344:  MOVWF  x52
7346:  MOVLB  0
7348:  CALL   1860
....................           
....................          displayTemperatura(Ganancia,30,30,0,3); 
734C:  MOVFF  5F0,650
7350:  MOVFF  5EF,64F
7354:  MOVFF  5EE,64E
7358:  MOVFF  5ED,64D
735C:  CALL   2372
7360:  MOVFF  02,64E
7364:  MOVFF  01,64D
7368:  MOVFF  02,650
736C:  MOVFF  01,64F
7370:  MOVLW  1E
7372:  MOVLB  6
7374:  MOVWF  x51
7376:  MOVWF  x52
7378:  CLRF   x53
737A:  MOVLW  03
737C:  MOVWF  x54
737E:  MOVLB  0
7380:  CALL   246C
....................           
....................          visual=0; 
7384:  MOVLB  5
7386:  BCF    x87.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
7388:  BTFSS  x86.0
738A:  BRA    741A
....................          {   
....................             if(Ganancia>40) 
738C:  MOVLB  6
738E:  CLRF   x50
7390:  CLRF   x4F
7392:  MOVLW  20
7394:  MOVWF  x4E
7396:  MOVLW  84
7398:  MOVWF  x4D
739A:  MOVFF  5F0,654
739E:  MOVFF  5EF,653
73A2:  MOVFF  5EE,652
73A6:  MOVFF  5ED,651
73AA:  MOVLB  0
73AC:  CALL   1178
73B0:  BNC   73D4
....................             { 
....................                Ganancia=40;delay_ms(100);visual=1; 
73B2:  MOVLB  5
73B4:  CLRF   xF0
73B6:  CLRF   xEF
73B8:  MOVLW  20
73BA:  MOVWF  xEE
73BC:  MOVLW  84
73BE:  MOVWF  xED
73C0:  MOVLW  64
73C2:  MOVLB  6
73C4:  MOVWF  x53
73C6:  MOVLB  0
73C8:  CALL   0D1A
73CC:  MOVLB  5
73CE:  BSF    x87.4
....................             } 
....................             else 
73D0:  BRA    7418
73D2:  MOVLB  0
....................             { 
....................                delay_ms(30);Ganancia+=1.0;visual=1; 
73D4:  MOVLW  1E
73D6:  MOVLB  6
73D8:  MOVWF  x53
73DA:  MOVLB  0
73DC:  CALL   0D1A
73E0:  BCF    FD8.1
73E2:  MOVFF  5F0,655
73E6:  MOVFF  5EF,654
73EA:  MOVFF  5EE,653
73EE:  MOVFF  5ED,652
73F2:  MOVLB  6
73F4:  CLRF   x59
73F6:  CLRF   x58
73F8:  CLRF   x57
73FA:  MOVLW  7F
73FC:  MOVWF  x56
73FE:  MOVLB  0
7400:  CALL   0F00
7404:  MOVFF  03,5F0
7408:  MOVFF  02,5EF
740C:  MOVFF  01,5EE
7410:  MOVFF  00,5ED
7414:  MOVLB  5
7416:  BSF    x87.4
....................             } 
....................             UP=0; 
7418:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
741A:  BTFSS  x86.1
741C:  BRA    748A
....................          {   
....................             if(Ganancia>1) 
741E:  MOVLB  6
7420:  CLRF   x50
7422:  CLRF   x4F
7424:  CLRF   x4E
7426:  MOVLW  7F
7428:  MOVWF  x4D
742A:  MOVFF  5F0,654
742E:  MOVFF  5EF,653
7432:  MOVFF  5EE,652
7436:  MOVFF  5ED,651
743A:  MOVLB  0
743C:  CALL   1178
7440:  BNC   7486
....................             { 
....................                delay_ms(30);Ganancia-=1.0;visual=1;      
7442:  MOVLW  1E
7444:  MOVLB  6
7446:  MOVWF  x53
7448:  MOVLB  0
744A:  CALL   0D1A
744E:  BSF    FD8.1
7450:  MOVFF  5F0,655
7454:  MOVFF  5EF,654
7458:  MOVFF  5EE,653
745C:  MOVFF  5ED,652
7460:  MOVLB  6
7462:  CLRF   x59
7464:  CLRF   x58
7466:  CLRF   x57
7468:  MOVLW  7F
746A:  MOVWF  x56
746C:  MOVLB  0
746E:  CALL   0F00
7472:  MOVFF  03,5F0
7476:  MOVFF  02,5EF
747A:  MOVFF  01,5EE
747E:  MOVFF  00,5ED
7482:  MOVLB  5
7484:  BSF    x87.4
....................             } 
....................             DOWN=0; 
7486:  MOVLB  5
7488:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
748A:  BTFSS  x86.2
748C:  BRA    74A0
....................          {   
....................             RIGHT=0;delay_ms(30);visual=1; 
748E:  BCF    x86.2
7490:  MOVLW  1E
7492:  MOVLB  6
7494:  MOVWF  x53
7496:  MOVLB  0
7498:  CALL   0D1A
749C:  MOVLB  5
749E:  BSF    x87.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
74A0:  BTFSS  x86.3
74A2:  BRA    751A
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
74A4:  MOVLW  04
74A6:  MOVLB  6
74A8:  MOVWF  x4D
74AA:  MOVLW  AF
74AC:  MOVWF  x53
74AE:  MOVLB  0
74B0:  CALL   0D1A
74B4:  MOVLB  6
74B6:  DECFSZ x4D,F
74B8:  BRA    74AA
74BA:  MOVLW  64
74BC:  MOVLB  5
74BE:  MOVWF  x96
74C0:  MOVLB  6
74C2:  CLRF   x4E
74C4:  MOVLB  0
74C6:  CALL   1232
74CA:  MOVLW  01
74CC:  MOVLB  5
74CE:  MOVWF  x9C
74D0:  BSF    x87.4
....................             write_eeprom(90,(int8)Ganancia); 
74D2:  MOVFF  5F0,650
74D6:  MOVFF  5EF,64F
74DA:  MOVFF  5EE,64E
74DE:  MOVFF  5ED,64D
74E2:  MOVLB  0
74E4:  CALL   2372
74E8:  MOVFF  01,64D
74EC:  MOVLW  5A
74EE:  MOVWF  FA9
74F0:  MOVFF  64D,FA8
74F4:  BCF    FA6.6
74F6:  BCF    FA6.7
74F8:  BSF    FA6.2
74FA:  MOVF   FF2,W
74FC:  MOVWF  00
74FE:  BCF    FF2.7
7500:  MOVLB  F
7502:  MOVLW  55
7504:  MOVWF  FA7
7506:  MOVLW  AA
7508:  MOVWF  FA7
750A:  BSF    FA6.1
750C:  BTFSC  FA6.1
750E:  BRA    750C
7510:  BCF    FA6.2
7512:  MOVF   00,W
7514:  IORWF  FF2,F
....................             LEFT=0; 
7516:  MOVLB  5
7518:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==102){ // Menu de Ajuste de Ganancia2 
751A:  MOVF   x96,W
751C:  SUBLW  66
751E:  BTFSS  FD8.2
7520:  BRA    7774
....................        
....................       if(Tciclo>40) 
7522:  MOVLB  6
7524:  CLRF   x50
7526:  CLRF   x4F
7528:  MOVLW  20
752A:  MOVWF  x4E
752C:  MOVLW  84
752E:  MOVWF  x4D
7530:  MOVFF  5D8,654
7534:  MOVFF  5D7,653
7538:  MOVFF  5D6,652
753C:  MOVFF  5D5,651
7540:  MOVLB  0
7542:  CALL   1178
7546:  BNC   7556
....................       { 
....................          Tciclo=40; 
7548:  MOVLB  5
754A:  CLRF   xD8
754C:  CLRF   xD7
754E:  MOVLW  20
7550:  MOVWF  xD6
7552:  MOVLW  84
7554:  MOVWF  xD5
....................       } 
....................        
....................       if(visual==1) 
7556:  MOVLB  5
7558:  BTFSS  x87.4
755A:  BRA    75E2
....................       { 
....................          glcd_fillScreen(OFF); 
755C:  MOVLB  6
755E:  CLRF   x4E
7560:  MOVLB  0
7562:  CALL   1232
....................          strcpy(Menus.Letra,"Tciclo"); 
7566:  MOVLW  06
7568:  MOVWF  FEA
756A:  MOVLW  2D
756C:  MOVWF  FE9
756E:  MOVFF  FF2,64D
7572:  BCF    FF2.7
7574:  MOVLW  00
7576:  CALL   0BC0
757A:  TBLRD*-
757C:  TBLRD*+
757E:  MOVF   FF5,W
7580:  MOVWF  FEE
7582:  IORLW  00
7584:  BNZ   757C
7586:  MOVLB  6
7588:  BTFSC  x4D.7
758A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
758C:  MOVLW  06
758E:  MOVWF  x4E
7590:  MOVLW  2D
7592:  MOVWF  x4D
7594:  CLRF   x4F
7596:  CLRF   x50
7598:  MOVLW  01
759A:  MOVWF  x51
759C:  MOVLW  02
759E:  MOVWF  x52
75A0:  MOVLB  0
75A2:  CALL   1860
....................           
....................          displayTemperatura(Tciclo,30,30,0,3); 
75A6:  MOVFF  5D8,650
75AA:  MOVFF  5D7,64F
75AE:  MOVFF  5D6,64E
75B2:  MOVFF  5D5,64D
75B6:  CALL   2372
75BA:  MOVFF  02,64E
75BE:  MOVFF  01,64D
75C2:  MOVFF  02,650
75C6:  MOVFF  01,64F
75CA:  MOVLW  1E
75CC:  MOVLB  6
75CE:  MOVWF  x51
75D0:  MOVWF  x52
75D2:  CLRF   x53
75D4:  MOVLW  03
75D6:  MOVWF  x54
75D8:  MOVLB  0
75DA:  CALL   246C
....................           
....................          visual=0; 
75DE:  MOVLB  5
75E0:  BCF    x87.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
75E2:  BTFSS  x86.0
75E4:  BRA    7674
....................          {   
....................             if(Tciclo>40) 
75E6:  MOVLB  6
75E8:  CLRF   x50
75EA:  CLRF   x4F
75EC:  MOVLW  20
75EE:  MOVWF  x4E
75F0:  MOVLW  84
75F2:  MOVWF  x4D
75F4:  MOVFF  5D8,654
75F8:  MOVFF  5D7,653
75FC:  MOVFF  5D6,652
7600:  MOVFF  5D5,651
7604:  MOVLB  0
7606:  CALL   1178
760A:  BNC   762E
....................             { 
....................                Tciclo=40;delay_ms(100);visual=1; 
760C:  MOVLB  5
760E:  CLRF   xD8
7610:  CLRF   xD7
7612:  MOVLW  20
7614:  MOVWF  xD6
7616:  MOVLW  84
7618:  MOVWF  xD5
761A:  MOVLW  64
761C:  MOVLB  6
761E:  MOVWF  x53
7620:  MOVLB  0
7622:  CALL   0D1A
7626:  MOVLB  5
7628:  BSF    x87.4
....................             } 
....................             else 
762A:  BRA    7672
762C:  MOVLB  0
....................             { 
....................                delay_ms(30);Tciclo+=1.0;visual=1; 
762E:  MOVLW  1E
7630:  MOVLB  6
7632:  MOVWF  x53
7634:  MOVLB  0
7636:  CALL   0D1A
763A:  BCF    FD8.1
763C:  MOVFF  5D8,655
7640:  MOVFF  5D7,654
7644:  MOVFF  5D6,653
7648:  MOVFF  5D5,652
764C:  MOVLB  6
764E:  CLRF   x59
7650:  CLRF   x58
7652:  CLRF   x57
7654:  MOVLW  7F
7656:  MOVWF  x56
7658:  MOVLB  0
765A:  CALL   0F00
765E:  MOVFF  03,5D8
7662:  MOVFF  02,5D7
7666:  MOVFF  01,5D6
766A:  MOVFF  00,5D5
766E:  MOVLB  5
7670:  BSF    x87.4
....................             } 
....................             UP=0; 
7672:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
7674:  BTFSS  x86.1
7676:  BRA    76E4
....................          {   
....................             if(Tciclo>1) 
7678:  MOVLB  6
767A:  CLRF   x50
767C:  CLRF   x4F
767E:  CLRF   x4E
7680:  MOVLW  7F
7682:  MOVWF  x4D
7684:  MOVFF  5D8,654
7688:  MOVFF  5D7,653
768C:  MOVFF  5D6,652
7690:  MOVFF  5D5,651
7694:  MOVLB  0
7696:  CALL   1178
769A:  BNC   76E0
....................             { 
....................                delay_ms(30);Tciclo-=1.0;visual=1;      
769C:  MOVLW  1E
769E:  MOVLB  6
76A0:  MOVWF  x53
76A2:  MOVLB  0
76A4:  CALL   0D1A
76A8:  BSF    FD8.1
76AA:  MOVFF  5D8,655
76AE:  MOVFF  5D7,654
76B2:  MOVFF  5D6,653
76B6:  MOVFF  5D5,652
76BA:  MOVLB  6
76BC:  CLRF   x59
76BE:  CLRF   x58
76C0:  CLRF   x57
76C2:  MOVLW  7F
76C4:  MOVWF  x56
76C6:  MOVLB  0
76C8:  CALL   0F00
76CC:  MOVFF  03,5D8
76D0:  MOVFF  02,5D7
76D4:  MOVFF  01,5D6
76D8:  MOVFF  00,5D5
76DC:  MOVLB  5
76DE:  BSF    x87.4
....................             } 
....................             DOWN=0; 
76E0:  MOVLB  5
76E2:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
76E4:  BTFSS  x86.2
76E6:  BRA    76FA
....................          {   
....................             RIGHT=0;delay_ms(30);visual=1; 
76E8:  BCF    x86.2
76EA:  MOVLW  1E
76EC:  MOVLB  6
76EE:  MOVWF  x53
76F0:  MOVLB  0
76F2:  CALL   0D1A
76F6:  MOVLB  5
76F8:  BSF    x87.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
76FA:  BTFSS  x86.3
76FC:  BRA    7774
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
76FE:  MOVLW  04
7700:  MOVLB  6
7702:  MOVWF  x4D
7704:  MOVLW  AF
7706:  MOVWF  x53
7708:  MOVLB  0
770A:  CALL   0D1A
770E:  MOVLB  6
7710:  DECFSZ x4D,F
7712:  BRA    7704
7714:  MOVLW  64
7716:  MOVLB  5
7718:  MOVWF  x96
771A:  MOVLB  6
771C:  CLRF   x4E
771E:  MOVLB  0
7720:  CALL   1232
7724:  MOVLW  01
7726:  MOVLB  5
7728:  MOVWF  x9C
772A:  BSF    x87.4
....................             write_eeprom(30,(int8)Tciclo); 
772C:  MOVFF  5D8,650
7730:  MOVFF  5D7,64F
7734:  MOVFF  5D6,64E
7738:  MOVFF  5D5,64D
773C:  MOVLB  0
773E:  CALL   2372
7742:  MOVFF  01,64D
7746:  MOVLW  1E
7748:  MOVWF  FA9
774A:  MOVFF  64D,FA8
774E:  BCF    FA6.6
7750:  BCF    FA6.7
7752:  BSF    FA6.2
7754:  MOVF   FF2,W
7756:  MOVWF  00
7758:  BCF    FF2.7
775A:  MOVLB  F
775C:  MOVLW  55
775E:  MOVWF  FA7
7760:  MOVLW  AA
7762:  MOVWF  FA7
7764:  BSF    FA6.1
7766:  BTFSC  FA6.1
7768:  BRA    7766
776A:  BCF    FA6.2
776C:  MOVF   00,W
776E:  IORWF  FF2,F
....................             LEFT=0; 
7770:  MOVLB  5
7772:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==103){ // Menu de Ajuste de Ajuste 
7774:  MOVF   x96,W
7776:  SUBLW  67
7778:  BTFSS  FD8.2
777A:  BRA    7944
....................        
....................       if(Ajuste>100) 
777C:  MOVF   x8A,W
777E:  SUBLW  64
7780:  BC    7784
....................       { 
....................          Ajuste=0; 
7782:  CLRF   x8A
....................       } 
....................        
....................       if(visual==1) 
7784:  BTFSS  x87.4
7786:  BRA    77F0
....................       { 
....................          glcd_fillScreen(OFF); 
7788:  MOVLB  6
778A:  CLRF   x4E
778C:  MOVLB  0
778E:  CALL   1232
....................          strcpy(Menus.Letra,"Ajuste"); 
7792:  MOVLW  06
7794:  MOVWF  FEA
7796:  MOVLW  2D
7798:  MOVWF  FE9
779A:  MOVFF  FF2,64D
779E:  BCF    FF2.7
77A0:  MOVLW  00
77A2:  CALL   0C50
77A6:  TBLRD*-
77A8:  TBLRD*+
77AA:  MOVF   FF5,W
77AC:  MOVWF  FEE
77AE:  IORLW  00
77B0:  BNZ   77A8
77B2:  MOVLB  6
77B4:  BTFSC  x4D.7
77B6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
77B8:  MOVLW  06
77BA:  MOVWF  x4E
77BC:  MOVLW  2D
77BE:  MOVWF  x4D
77C0:  CLRF   x4F
77C2:  CLRF   x50
77C4:  MOVLW  01
77C6:  MOVWF  x51
77C8:  MOVLW  02
77CA:  MOVWF  x52
77CC:  MOVLB  0
77CE:  CALL   1860
....................           
....................          displayTemperatura(Ajuste,30,30,0,3); 
77D2:  MOVLB  6
77D4:  CLRF   x50
77D6:  MOVFF  58A,64F
77DA:  MOVLW  1E
77DC:  MOVWF  x51
77DE:  MOVWF  x52
77E0:  CLRF   x53
77E2:  MOVLW  03
77E4:  MOVWF  x54
77E6:  MOVLB  0
77E8:  CALL   246C
....................           
....................          visual=0; 
77EC:  MOVLB  5
77EE:  BCF    x87.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
77F0:  BTFSS  x86.0
77F2:  BRA    786A
....................          {   
....................             if(Ajuste>100) 
77F4:  MOVF   x8A,W
77F6:  SUBLW  64
77F8:  BC    780E
....................             { 
....................                Ajuste=100;delay_ms(100);visual=1; 
77FA:  MOVLW  64
77FC:  MOVWF  x8A
77FE:  MOVLB  6
7800:  MOVWF  x53
7802:  MOVLB  0
7804:  CALL   0D1A
7808:  MOVLB  5
780A:  BSF    x87.4
....................             } 
....................             else 
780C:  BRA    7868
....................             { 
....................                delay_ms(30);Ajuste+=1.0;visual=1; 
780E:  MOVLW  1E
7810:  MOVLB  6
7812:  MOVWF  x53
7814:  MOVLB  0
7816:  CALL   0D1A
781A:  MOVLB  6
781C:  CLRF   x54
781E:  MOVFF  58A,653
7822:  MOVLB  0
7824:  CALL   0D6C
7828:  BCF    FD8.1
782A:  MOVFF  03,655
782E:  MOVFF  02,654
7832:  MOVFF  01,653
7836:  MOVFF  00,652
783A:  MOVLB  6
783C:  CLRF   x59
783E:  CLRF   x58
7840:  CLRF   x57
7842:  MOVLW  7F
7844:  MOVWF  x56
7846:  MOVLB  0
7848:  CALL   0F00
784C:  MOVFF  03,650
7850:  MOVFF  02,64F
7854:  MOVFF  01,64E
7858:  MOVFF  00,64D
785C:  CALL   2372
7860:  MOVFF  01,58A
7864:  MOVLB  5
7866:  BSF    x87.4
....................             } 
....................             UP=0; 
7868:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
786A:  BTFSS  x86.1
786C:  BRA    78CE
....................          {   
....................             if(Ajuste>0) 
786E:  MOVF   x8A,F
7870:  BZ    78CC
....................             { 
....................                delay_ms(30);Ajuste-=1.0;visual=1;      
7872:  MOVLW  1E
7874:  MOVLB  6
7876:  MOVWF  x53
7878:  MOVLB  0
787A:  CALL   0D1A
787E:  MOVLB  6
7880:  CLRF   x54
7882:  MOVFF  58A,653
7886:  MOVLB  0
7888:  CALL   0D6C
788C:  BSF    FD8.1
788E:  MOVFF  03,655
7892:  MOVFF  02,654
7896:  MOVFF  01,653
789A:  MOVFF  00,652
789E:  MOVLB  6
78A0:  CLRF   x59
78A2:  CLRF   x58
78A4:  CLRF   x57
78A6:  MOVLW  7F
78A8:  MOVWF  x56
78AA:  MOVLB  0
78AC:  CALL   0F00
78B0:  MOVFF  03,650
78B4:  MOVFF  02,64F
78B8:  MOVFF  01,64E
78BC:  MOVFF  00,64D
78C0:  CALL   2372
78C4:  MOVFF  01,58A
78C8:  MOVLB  5
78CA:  BSF    x87.4
....................             } 
....................             DOWN=0; 
78CC:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
78CE:  BTFSS  x86.2
78D0:  BRA    78E4
....................          {   
....................             RIGHT=0;delay_ms(30);visual=1; 
78D2:  BCF    x86.2
78D4:  MOVLW  1E
78D6:  MOVLB  6
78D8:  MOVWF  x53
78DA:  MOVLB  0
78DC:  CALL   0D1A
78E0:  MOVLB  5
78E2:  BSF    x87.4
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
78E4:  BTFSS  x86.3
78E6:  BRA    7944
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
78E8:  MOVLW  04
78EA:  MOVLB  6
78EC:  MOVWF  x4D
78EE:  MOVLW  AF
78F0:  MOVWF  x53
78F2:  MOVLB  0
78F4:  CALL   0D1A
78F8:  MOVLB  6
78FA:  DECFSZ x4D,F
78FC:  BRA    78EE
78FE:  MOVLW  64
7900:  MOVLB  5
7902:  MOVWF  x96
7904:  MOVLB  6
7906:  CLRF   x4E
7908:  MOVLB  0
790A:  CALL   1232
790E:  MOVLW  01
7910:  MOVLB  5
7912:  MOVWF  x9C
7914:  BSF    x87.4
....................             write_eeprom(40,Ajuste); 
7916:  MOVLW  28
7918:  MOVWF  FA9
791A:  MOVFF  58A,FA8
791E:  BCF    FA6.6
7920:  BCF    FA6.7
7922:  BSF    FA6.2
7924:  MOVF   FF2,W
7926:  MOVWF  00
7928:  BCF    FF2.7
792A:  MOVLB  F
792C:  MOVLW  55
792E:  MOVWF  FA7
7930:  MOVLW  AA
7932:  MOVWF  FA7
7934:  BSF    FA6.1
7936:  BTFSC  FA6.1
7938:  BRA    7936
793A:  BCF    FA6.2
793C:  MOVF   00,W
793E:  IORWF  FF2,F
....................             LEFT=0; 
7940:  MOVLB  5
7942:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==104){ // Menu de Ajuste de Ajusten 
7944:  MOVF   x96,W
7946:  SUBLW  68
7948:  BTFSS  FD8.2
794A:  BRA    7B14
....................        
....................       if(Ajusten>100) 
794C:  MOVF   x8B,W
794E:  SUBLW  64
7950:  BC    7954
....................       { 
....................          Ajusten=0; 
7952:  CLRF   x8B
....................       } 
....................        
....................       if(visual==1) 
7954:  BTFSS  x87.4
7956:  BRA    79C0
....................       { 
....................          glcd_fillScreen(OFF); 
7958:  MOVLB  6
795A:  CLRF   x4E
795C:  MOVLB  0
795E:  CALL   1232
....................          strcpy(Menus.Letra,"Ajusten"); 
7962:  MOVLW  06
7964:  MOVWF  FEA
7966:  MOVLW  2D
7968:  MOVWF  FE9
796A:  MOVFF  FF2,64D
796E:  BCF    FF2.7
7970:  MOVLW  00
7972:  CALL   0C72
7976:  TBLRD*-
7978:  TBLRD*+
797A:  MOVF   FF5,W
797C:  MOVWF  FEE
797E:  IORLW  00
7980:  BNZ   7978
7982:  MOVLB  6
7984:  BTFSC  x4D.7
7986:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
7988:  MOVLW  06
798A:  MOVWF  x4E
798C:  MOVLW  2D
798E:  MOVWF  x4D
7990:  CLRF   x4F
7992:  CLRF   x50
7994:  MOVLW  01
7996:  MOVWF  x51
7998:  MOVLW  02
799A:  MOVWF  x52
799C:  MOVLB  0
799E:  CALL   1860
....................           
....................          displayTemperatura(Ajusten,30,30,0,3); 
79A2:  MOVLB  6
79A4:  CLRF   x50
79A6:  MOVFF  58B,64F
79AA:  MOVLW  1E
79AC:  MOVWF  x51
79AE:  MOVWF  x52
79B0:  CLRF   x53
79B2:  MOVLW  03
79B4:  MOVWF  x54
79B6:  MOVLB  0
79B8:  CALL   246C
....................           
....................          visual=0; 
79BC:  MOVLB  5
79BE:  BCF    x87.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
79C0:  BTFSS  x86.0
79C2:  BRA    7A3A
....................          {   
....................             if(Ajusten>100) 
79C4:  MOVF   x8B,W
79C6:  SUBLW  64
79C8:  BC    79DE
....................             { 
....................                Ajusten=100;delay_ms(100);visual=1; 
79CA:  MOVLW  64
79CC:  MOVWF  x8B
79CE:  MOVLB  6
79D0:  MOVWF  x53
79D2:  MOVLB  0
79D4:  CALL   0D1A
79D8:  MOVLB  5
79DA:  BSF    x87.4
....................             } 
....................             else 
79DC:  BRA    7A38
....................             { 
....................                delay_ms(30);Ajusten+=1.0;visual=1; 
79DE:  MOVLW  1E
79E0:  MOVLB  6
79E2:  MOVWF  x53
79E4:  MOVLB  0
79E6:  CALL   0D1A
79EA:  MOVLB  6
79EC:  CLRF   x54
79EE:  MOVFF  58B,653
79F2:  MOVLB  0
79F4:  CALL   0D6C
79F8:  BCF    FD8.1
79FA:  MOVFF  03,655
79FE:  MOVFF  02,654
7A02:  MOVFF  01,653
7A06:  MOVFF  00,652
7A0A:  MOVLB  6
7A0C:  CLRF   x59
7A0E:  CLRF   x58
7A10:  CLRF   x57
7A12:  MOVLW  7F
7A14:  MOVWF  x56
7A16:  MOVLB  0
7A18:  CALL   0F00
7A1C:  MOVFF  03,650
7A20:  MOVFF  02,64F
7A24:  MOVFF  01,64E
7A28:  MOVFF  00,64D
7A2C:  CALL   2372
7A30:  MOVFF  01,58B
7A34:  MOVLB  5
7A36:  BSF    x87.4
....................             } 
....................             UP=0; 
7A38:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
7A3A:  BTFSS  x86.1
7A3C:  BRA    7A9E
....................          {   
....................             if(Ajusten>0) 
7A3E:  MOVF   x8B,F
7A40:  BZ    7A9C
....................             { 
....................                delay_ms(30);Ajusten-=1.0;visual=1;      
7A42:  MOVLW  1E
7A44:  MOVLB  6
7A46:  MOVWF  x53
7A48:  MOVLB  0
7A4A:  CALL   0D1A
7A4E:  MOVLB  6
7A50:  CLRF   x54
7A52:  MOVFF  58B,653
7A56:  MOVLB  0
7A58:  CALL   0D6C
7A5C:  BSF    FD8.1
7A5E:  MOVFF  03,655
7A62:  MOVFF  02,654
7A66:  MOVFF  01,653
7A6A:  MOVFF  00,652
7A6E:  MOVLB  6
7A70:  CLRF   x59
7A72:  CLRF   x58
7A74:  CLRF   x57
7A76:  MOVLW  7F
7A78:  MOVWF  x56
7A7A:  MOVLB  0
7A7C:  CALL   0F00
7A80:  MOVFF  03,650
7A84:  MOVFF  02,64F
7A88:  MOVFF  01,64E
7A8C:  MOVFF  00,64D
7A90:  CALL   2372
7A94:  MOVFF  01,58B
7A98:  MOVLB  5
7A9A:  BSF    x87.4
....................             } 
....................             DOWN=0; 
7A9C:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
7A9E:  BTFSS  x86.2
7AA0:  BRA    7AB4
....................          {   
....................             delay_ms(30);visual=1; 
7AA2:  MOVLW  1E
7AA4:  MOVLB  6
7AA6:  MOVWF  x53
7AA8:  MOVLB  0
7AAA:  CALL   0D1A
7AAE:  MOVLB  5
7AB0:  BSF    x87.4
....................             RIGHT=0; 
7AB2:  BCF    x86.2
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
7AB4:  BTFSS  x86.3
7AB6:  BRA    7B14
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
7AB8:  MOVLW  04
7ABA:  MOVLB  6
7ABC:  MOVWF  x4D
7ABE:  MOVLW  AF
7AC0:  MOVWF  x53
7AC2:  MOVLB  0
7AC4:  CALL   0D1A
7AC8:  MOVLB  6
7ACA:  DECFSZ x4D,F
7ACC:  BRA    7ABE
7ACE:  MOVLW  64
7AD0:  MOVLB  5
7AD2:  MOVWF  x96
7AD4:  MOVLB  6
7AD6:  CLRF   x4E
7AD8:  MOVLB  0
7ADA:  CALL   1232
7ADE:  MOVLW  01
7AE0:  MOVLB  5
7AE2:  MOVWF  x9C
7AE4:  BSF    x87.4
....................             write_eeprom(50,Ajusten); 
7AE6:  MOVLW  32
7AE8:  MOVWF  FA9
7AEA:  MOVFF  58B,FA8
7AEE:  BCF    FA6.6
7AF0:  BCF    FA6.7
7AF2:  BSF    FA6.2
7AF4:  MOVF   FF2,W
7AF6:  MOVWF  00
7AF8:  BCF    FF2.7
7AFA:  MOVLB  F
7AFC:  MOVLW  55
7AFE:  MOVWF  FA7
7B00:  MOVLW  AA
7B02:  MOVWF  FA7
7B04:  BSF    FA6.1
7B06:  BTFSC  FA6.1
7B08:  BRA    7B06
7B0A:  BCF    FA6.2
7B0C:  MOVF   00,W
7B0E:  IORWF  FF2,F
....................             LEFT=0; 
7B10:  MOVLB  5
7B12:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==105){ // Menu de Ajuste de Media Movil 
7B14:  MOVF   x96,W
7B16:  SUBLW  69
7B18:  BTFSS  FD8.2
7B1A:  BRA    7CEA
....................        
....................       if(MediaMovil>80) 
7B1C:  MOVF   x8C,W
7B1E:  SUBLW  50
7B20:  BC    7B26
....................       { 
....................          MediaMovil=10; 
7B22:  MOVLW  0A
7B24:  MOVWF  x8C
....................       } 
....................        
....................       if(visual==1) 
7B26:  BTFSS  x87.4
7B28:  BRA    7B92
....................       { 
....................          glcd_fillScreen(OFF); 
7B2A:  MOVLB  6
7B2C:  CLRF   x4E
7B2E:  MOVLB  0
7B30:  CALL   1232
....................          strcpy(Menus.Letra,"Media"); 
7B34:  MOVLW  06
7B36:  MOVWF  FEA
7B38:  MOVLW  2D
7B3A:  MOVWF  FE9
7B3C:  MOVFF  FF2,64D
7B40:  BCF    FF2.7
7B42:  MOVLW  00
7B44:  CALL   0C94
7B48:  TBLRD*-
7B4A:  TBLRD*+
7B4C:  MOVF   FF5,W
7B4E:  MOVWF  FEE
7B50:  IORLW  00
7B52:  BNZ   7B4A
7B54:  MOVLB  6
7B56:  BTFSC  x4D.7
7B58:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
7B5A:  MOVLW  06
7B5C:  MOVWF  x4E
7B5E:  MOVLW  2D
7B60:  MOVWF  x4D
7B62:  CLRF   x4F
7B64:  CLRF   x50
7B66:  MOVLW  01
7B68:  MOVWF  x51
7B6A:  MOVLW  02
7B6C:  MOVWF  x52
7B6E:  MOVLB  0
7B70:  CALL   1860
....................           
....................          displayTemperatura(MediaMovil,30,30,0,3); 
7B74:  MOVLB  6
7B76:  CLRF   x50
7B78:  MOVFF  58C,64F
7B7C:  MOVLW  1E
7B7E:  MOVWF  x51
7B80:  MOVWF  x52
7B82:  CLRF   x53
7B84:  MOVLW  03
7B86:  MOVWF  x54
7B88:  MOVLB  0
7B8A:  CALL   246C
....................           
....................          visual=0; 
7B8E:  MOVLB  5
7B90:  BCF    x87.4
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
7B92:  BTFSS  x86.0
7B94:  BRA    7C0E
....................          {   
....................             if(MediaMovil>79) 
7B96:  MOVF   x8C,W
7B98:  SUBLW  4F
7B9A:  BC    7BB2
....................             { 
....................                MediaMovil=79;delay_ms(100);visual=1; 
7B9C:  MOVLW  4F
7B9E:  MOVWF  x8C
7BA0:  MOVLW  64
7BA2:  MOVLB  6
7BA4:  MOVWF  x53
7BA6:  MOVLB  0
7BA8:  CALL   0D1A
7BAC:  MOVLB  5
7BAE:  BSF    x87.4
....................             } 
....................             else 
7BB0:  BRA    7C0C
....................             { 
....................                delay_ms(30);MediaMovil+=1.0;visual=1; 
7BB2:  MOVLW  1E
7BB4:  MOVLB  6
7BB6:  MOVWF  x53
7BB8:  MOVLB  0
7BBA:  CALL   0D1A
7BBE:  MOVLB  6
7BC0:  CLRF   x54
7BC2:  MOVFF  58C,653
7BC6:  MOVLB  0
7BC8:  CALL   0D6C
7BCC:  BCF    FD8.1
7BCE:  MOVFF  03,655
7BD2:  MOVFF  02,654
7BD6:  MOVFF  01,653
7BDA:  MOVFF  00,652
7BDE:  MOVLB  6
7BE0:  CLRF   x59
7BE2:  CLRF   x58
7BE4:  CLRF   x57
7BE6:  MOVLW  7F
7BE8:  MOVWF  x56
7BEA:  MOVLB  0
7BEC:  CALL   0F00
7BF0:  MOVFF  03,650
7BF4:  MOVFF  02,64F
7BF8:  MOVFF  01,64E
7BFC:  MOVFF  00,64D
7C00:  CALL   2372
7C04:  MOVFF  01,58C
7C08:  MOVLB  5
7C0A:  BSF    x87.4
....................             } 
....................             UP=0; 
7C0C:  BCF    x86.0
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
7C0E:  BTFSS  x86.1
7C10:  BRA    7C74
....................          {   
....................             if(MediaMovil>1) 
7C12:  MOVF   x8C,W
7C14:  SUBLW  01
7C16:  BC    7C72
....................             { 
....................                delay_ms(30);MediaMovil-=1.0;visual=1;      
7C18:  MOVLW  1E
7C1A:  MOVLB  6
7C1C:  MOVWF  x53
7C1E:  MOVLB  0
7C20:  CALL   0D1A
7C24:  MOVLB  6
7C26:  CLRF   x54
7C28:  MOVFF  58C,653
7C2C:  MOVLB  0
7C2E:  CALL   0D6C
7C32:  BSF    FD8.1
7C34:  MOVFF  03,655
7C38:  MOVFF  02,654
7C3C:  MOVFF  01,653
7C40:  MOVFF  00,652
7C44:  MOVLB  6
7C46:  CLRF   x59
7C48:  CLRF   x58
7C4A:  CLRF   x57
7C4C:  MOVLW  7F
7C4E:  MOVWF  x56
7C50:  MOVLB  0
7C52:  CALL   0F00
7C56:  MOVFF  03,650
7C5A:  MOVFF  02,64F
7C5E:  MOVFF  01,64E
7C62:  MOVFF  00,64D
7C66:  CALL   2372
7C6A:  MOVFF  01,58C
7C6E:  MOVLB  5
7C70:  BSF    x87.4
....................             } 
....................             DOWN=0; 
7C72:  BCF    x86.1
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
7C74:  BTFSS  x86.2
7C76:  BRA    7C8A
....................          {   
....................             delay_ms(30);visual=1; 
7C78:  MOVLW  1E
7C7A:  MOVLB  6
7C7C:  MOVWF  x53
7C7E:  MOVLB  0
7C80:  CALL   0D1A
7C84:  MOVLB  5
7C86:  BSF    x87.4
....................             RIGHT=0; 
7C88:  BCF    x86.2
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
7C8A:  BTFSS  x86.3
7C8C:  BRA    7CEA
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
7C8E:  MOVLW  04
7C90:  MOVLB  6
7C92:  MOVWF  x4D
7C94:  MOVLW  AF
7C96:  MOVWF  x53
7C98:  MOVLB  0
7C9A:  CALL   0D1A
7C9E:  MOVLB  6
7CA0:  DECFSZ x4D,F
7CA2:  BRA    7C94
7CA4:  MOVLW  64
7CA6:  MOVLB  5
7CA8:  MOVWF  x96
7CAA:  MOVLB  6
7CAC:  CLRF   x4E
7CAE:  MOVLB  0
7CB0:  CALL   1232
7CB4:  MOVLW  01
7CB6:  MOVLB  5
7CB8:  MOVWF  x9C
7CBA:  BSF    x87.4
....................             write_eeprom(60,MediaMovil); 
7CBC:  MOVLW  3C
7CBE:  MOVWF  FA9
7CC0:  MOVFF  58C,FA8
7CC4:  BCF    FA6.6
7CC6:  BCF    FA6.7
7CC8:  BSF    FA6.2
7CCA:  MOVF   FF2,W
7CCC:  MOVWF  00
7CCE:  BCF    FF2.7
7CD0:  MOVLB  F
7CD2:  MOVLW  55
7CD4:  MOVWF  FA7
7CD6:  MOVLW  AA
7CD8:  MOVWF  FA7
7CDA:  BSF    FA6.1
7CDC:  BTFSC  FA6.1
7CDE:  BRA    7CDC
7CE0:  BCF    FA6.2
7CE2:  MOVF   00,W
7CE4:  IORWF  FF2,F
....................             LEFT=0; 
7CE6:  MOVLB  5
7CE8:  BCF    x86.3
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
....................       if(tiemporeset>=60) 
7CEA:  MOVF   x95,W
7CEC:  SUBLW  3B
7CEE:  BC    7D00
....................       { 
....................          glcd_init(ON); 
7CF0:  MOVLW  01
7CF2:  MOVLB  6
7CF4:  MOVWF  x4D
7CF6:  MOVLB  0
7CF8:  CALL   1344
....................          tiemporeset=0; 
7CFC:  MOVLB  5
7CFE:  CLRF   x95
....................       }  
....................  
....................    } 
7D00:  GOTO   443C
.................... } 
7D04:  SLEEP 

Configuration Fuses:
   Word  1: C220   XTPLL IESO FCMEN PLL1 CPUDIV1 USBDIV
   Word  2: 1E1E   BROWNOUT NOWDT BORV20 PUT WDT32768 NOVREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
