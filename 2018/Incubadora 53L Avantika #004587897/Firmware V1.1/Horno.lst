CCS PCH C Compiler, Version 4.104, 5967               27-nov.-18 08:23

               Filename: H:\JP\JP\Laboratorio\Incubadora\2018\Incubadora 53L Avantika #004587897\Firmware V1.1\Horno.lst

               ROM used: 38992 bytes (40%)
                         Largest free fragment is 32768
               RAM used: 1629 (49%) at main() level
                         1687 (51%) worst case
               Stack:    7 worst case (6 in main + 1 for interrupts)

*
00000:  GOTO   58D2
*
00008:  MOVWF  04
0000A:  MOVFF  FD8,05
0000E:  MOVFF  FE0,06
00012:  MOVLB  0
00014:  MOVFF  FE9,0C
00018:  MOVFF  FEA,07
0001C:  MOVFF  FE1,08
00020:  MOVFF  FE2,09
00024:  MOVFF  FD9,0A
00028:  MOVFF  FDA,0B
0002C:  MOVFF  FF3,12
00030:  MOVFF  FF4,13
00034:  MOVFF  FFA,14
00038:  MOVFF  FFB,15
0003C:  MOVFF  00,0E
00040:  MOVFF  01,0F
00044:  MOVFF  02,10
00048:  MOVFF  03,11
0004C:  BTFSS  F9D.0
0004E:  GOTO   0058
00052:  BTFSC  F9E.0
00054:  GOTO   0FBE
00058:  MOVFF  0E,00
0005C:  MOVFF  0F,01
00060:  MOVFF  10,02
00064:  MOVFF  11,03
00068:  MOVFF  0C,FE9
0006C:  MOVFF  07,FEA
00070:  BSF    07.7
00072:  MOVFF  08,FE1
00076:  MOVFF  09,FE2
0007A:  MOVFF  0A,FD9
0007E:  MOVFF  0B,FDA
00082:  MOVFF  12,FF3
00086:  MOVFF  13,FF4
0008A:  MOVFF  14,FFA
0008E:  MOVFF  15,FFB
00092:  MOVF   04,W
00094:  MOVFF  06,FE0
00098:  MOVFF  05,FD8
0009C:  RETFIE 0
.................... /// Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4685.h> 
.................... //////// Standard Header file for the PIC18F4685 device //////////////// 
.................... #device PIC18F4685 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP,NODEBUG,NOSTVREN,NOPUT,NOCPD,NOWRT,NOIESO,NOFCMEN,NOPBADEN,NOWRTC,NOWRTB,NOEBTR,NOEBTRB,NOCPB,NOXINST,NOLPT1OSC,NOMCLR 
.................... #use delay(clock=20000000) 
*
01052:  MOVLW  06
01054:  MOVWF  FEA
01056:  MOVLW  62
01058:  MOVWF  FE9
0105A:  MOVF   FEF,W
0105C:  BZ    1078
0105E:  MOVLW  06
01060:  MOVWF  01
01062:  CLRF   00
01064:  DECFSZ 00,F
01066:  BRA    1064
01068:  DECFSZ 01,F
0106A:  BRA    1062
0106C:  MOVLW  7B
0106E:  MOVWF  00
01070:  DECFSZ 00,F
01072:  BRA    1070
01074:  DECFSZ FEF,F
01076:  BRA    105E
01078:  RETLW  00
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B0   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B1   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B4   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B3   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
026CE:  BCF    F93.2
026D0:  BSF    F8A.2
....................    output_low(GLCD_E); 
026D2:  BCF    F93.3
026D4:  BCF    F8A.3
....................    output_low(GLCD_CS1); 
026D6:  BCF    F93.0
026D8:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
026DA:  BCF    F93.1
026DC:  BCF    F8A.1
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
026DE:  BCF    F93.5
026E0:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
026E2:  MOVLB  6
026E4:  CLRF   x73
026E6:  MOVLW  C0
026E8:  MOVWF  x74
026EA:  MOVLB  0
026EC:  RCALL  2586
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
026EE:  MOVLW  01
026F0:  MOVLB  6
026F2:  MOVWF  x73
026F4:  MOVLW  C0
026F6:  MOVWF  x74
026F8:  MOVLB  0
026FA:  RCALL  2586
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
026FC:  MOVLB  6
026FE:  CLRF   x73
02700:  MOVLW  40
02702:  MOVWF  x74
02704:  MOVLB  0
02706:  RCALL  2586
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
02708:  MOVLW  01
0270A:  MOVLB  6
0270C:  MOVWF  x73
0270E:  MOVLW  40
02710:  MOVWF  x74
02712:  MOVLB  0
02714:  RCALL  2586
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
02716:  MOVLB  6
02718:  CLRF   x73
0271A:  MOVLW  B8
0271C:  MOVWF  x74
0271E:  MOVLB  0
02720:  RCALL  2586
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
02722:  MOVLW  01
02724:  MOVLB  6
02726:  MOVWF  x73
02728:  MOVLW  B8
0272A:  MOVWF  x74
0272C:  MOVLB  0
0272E:  RCALL  2586
....................  
....................    if(mode == ON) 
02730:  MOVLB  6
02732:  DECFSZ x59,W
02734:  BRA    2752
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
02736:  CLRF   x73
02738:  MOVLW  3F
0273A:  MOVWF  x74
0273C:  MOVLB  0
0273E:  RCALL  2586
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
02740:  MOVLW  01
02742:  MOVLB  6
02744:  MOVWF  x73
02746:  MOVLW  3F
02748:  MOVWF  x74
0274A:  MOVLB  0
0274C:  RCALL  2586
....................    } 
....................    else 
0274E:  BRA    276A
02750:  MOVLB  6
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
02752:  CLRF   x73
02754:  MOVLW  3E
02756:  MOVWF  x74
02758:  MOVLB  0
0275A:  RCALL  2586
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
0275C:  MOVLW  01
0275E:  MOVLB  6
02760:  MOVWF  x73
02762:  MOVLW  3E
02764:  MOVWF  x74
02766:  MOVLB  0
02768:  RCALL  2586
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
0276A:  MOVLB  6
0276C:  CLRF   x61
0276E:  MOVLB  0
02770:  RCALL  25BC
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
02772:  RCALL  2616
....................    #endif 
.................... } 
02774:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
02616:  MOVLB  6
02618:  CLRF   x6F
0261A:  MOVLW  17
0261C:  MOVWF  x6E
....................    p2 = displayData.right; 
0261E:  MOVLW  02
02620:  MOVWF  x71
02622:  MOVLW  17
02624:  MOVWF  x70
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
02626:  CLRF   x6C
02628:  MOVF   x6C,W
0262A:  SUBLW  07
0262C:  BNC   26CA
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
0262E:  BCF    F93.5
02630:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
02632:  CLRF   x73
02634:  MOVLW  40
02636:  MOVWF  x74
02638:  MOVLB  0
0263A:  RCALL  2586
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
0263C:  MOVLW  01
0263E:  MOVLB  6
02640:  MOVWF  x73
02642:  MOVLW  40
02644:  MOVWF  x74
02646:  MOVLB  0
02648:  RCALL  2586
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
0264A:  MOVLB  6
0264C:  MOVF   x6C,W
0264E:  IORLW  B8
02650:  MOVWF  x72
02652:  CLRF   x73
02654:  MOVWF  x74
02656:  MOVLB  0
02658:  RCALL  2586
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
0265A:  MOVLB  6
0265C:  MOVF   x6C,W
0265E:  IORLW  B8
02660:  MOVWF  x72
02662:  MOVLW  01
02664:  MOVWF  x73
02666:  MOVFF  672,674
0266A:  MOVLB  0
0266C:  RCALL  2586
....................       output_high(GLCD_DI);                     // Set for data 
0266E:  BCF    F93.5
02670:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
02672:  MOVLB  6
02674:  CLRF   x6D
02676:  MOVF   x6D,W
02678:  SUBLW  3F
0267A:  BNC   26C6
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
0267C:  MOVFF  66F,03
02680:  MOVF   x6E,W
02682:  INCF   x6E,F
02684:  BTFSC  FD8.2
02686:  INCF   x6F,F
02688:  MOVWF  FE9
0268A:  MOVFF  03,FEA
0268E:  MOVFF  FEF,672
02692:  CLRF   x73
02694:  MOVFF  672,674
02698:  MOVLB  0
0269A:  RCALL  2586
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
0269C:  MOVLB  6
0269E:  MOVFF  671,03
026A2:  MOVF   x70,W
026A4:  INCF   x70,F
026A6:  BTFSC  FD8.2
026A8:  INCF   x71,F
026AA:  MOVWF  FE9
026AC:  MOVFF  03,FEA
026B0:  MOVFF  FEF,672
026B4:  MOVLW  01
026B6:  MOVWF  x73
026B8:  MOVFF  672,674
026BC:  MOVLB  0
026BE:  RCALL  2586
....................       } 
026C0:  MOVLB  6
026C2:  INCF   x6D,F
026C4:  BRA    2676
....................    } 
026C6:  INCF   x6C,F
026C8:  BRA    2628
.................... } 
026CA:  MOVLB  0
026CC:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
02776:  MOVLB  6
02778:  CLRF   x93
0277A:  RRCF   x8E,W
0277C:  MOVWF  x92
0277E:  RRCF   x92,F
02780:  RRCF   x92,F
02782:  MOVLW  1F
02784:  ANDWF  x92,F
....................    temp *= 64; 
02786:  RLCF   x92,F
02788:  RLCF   x93,F
0278A:  RLCF   x92,F
0278C:  RLCF   x93,F
0278E:  RLCF   x92,F
02790:  RLCF   x93,F
02792:  RLCF   x92,F
02794:  RLCF   x93,F
02796:  RLCF   x92,F
02798:  RLCF   x93,F
0279A:  RLCF   x92,F
0279C:  RLCF   x93,F
0279E:  MOVLW  C0
027A0:  ANDWF  x92,F
....................    temp += x; 
027A2:  MOVF   x8D,W
027A4:  ADDWF  x92,F
027A6:  MOVLW  00
027A8:  ADDWFC x93,F
....................  
....................    if(x > 63) 
027AA:  MOVF   x8D,W
027AC:  SUBLW  3F
027AE:  BC    27CA
....................    { 
....................       p = displayData.right + temp - 64; 
027B0:  MOVLW  17
027B2:  ADDWF  x92,W
027B4:  MOVWF  x94
027B6:  MOVLW  02
027B8:  ADDWFC x93,W
027BA:  MOVWF  x95
027BC:  MOVLW  40
027BE:  SUBWF  x94,W
027C0:  MOVWF  x90
027C2:  MOVLW  00
027C4:  SUBWFB x95,W
027C6:  MOVWF  x91
....................    } 
....................    else 
027C8:  BRA    27D6
....................    { 
....................       p = displayData.left + temp; 
027CA:  MOVLW  17
027CC:  ADDWF  x92,W
027CE:  MOVWF  x90
027D0:  MOVLW  00
027D2:  ADDWFC x93,W
027D4:  MOVWF  x91
....................    } 
....................  
....................    if(color) 
027D6:  MOVF   x8F,F
027D8:  BZ    2804
....................    { 
....................       bit_set(*p, y%8); 
027DA:  MOVFF  691,03
027DE:  MOVFF  690,FE9
027E2:  MOVFF  691,FEA
027E6:  MOVF   x8E,W
027E8:  ANDLW  07
027EA:  MOVWF  x94
027EC:  MOVLW  01
027EE:  MOVWF  00
027F0:  MOVF   x94,W
027F2:  MOVWF  01
027F4:  BZ    27FE
027F6:  BCF    FD8.0
027F8:  RLCF   00,F
027FA:  DECFSZ 01,F
027FC:  BRA    27F6
027FE:  MOVF   00,W
02800:  IORWF  FEF,F
....................    } 
....................    else 
02802:  BRA    282E
....................    { 
....................       bit_clear(*p, y%8); 
02804:  MOVFF  691,03
02808:  MOVFF  690,FE9
0280C:  MOVFF  691,FEA
02810:  MOVF   x8E,W
02812:  ANDLW  07
02814:  MOVWF  x94
02816:  MOVLW  01
02818:  MOVWF  00
0281A:  MOVF   x94,W
0281C:  MOVWF  01
0281E:  BZ    2828
02820:  BCF    FD8.0
02822:  RLCF   00,F
02824:  DECFSZ 01,F
02826:  BRA    2820
02828:  MOVF   00,W
0282A:  XORLW  FF
0282C:  ANDWF  FEF,F
....................    } 
.................... } 
0282E:  MOVLB  0
02830:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
025BC:  MOVLB  6
025BE:  CLRF   x64
025C0:  MOVLW  17
025C2:  MOVWF  x63
....................    p2 = displayData.right; 
025C4:  MOVLW  02
025C6:  MOVWF  x66
025C8:  MOVLW  17
025CA:  MOVWF  x65
....................    data = 0xFF * color; 
025CC:  MOVF   x61,W
025CE:  MULLW  FF
025D0:  MOVFF  FF3,662
....................  
....................    for(i=0; i<512; ++i) 
025D4:  CLRF   x68
025D6:  CLRF   x67
025D8:  MOVF   x68,W
025DA:  SUBLW  01
025DC:  BNC   2612
....................    { 
....................       *p1++ = data; 
025DE:  MOVFF  664,03
025E2:  MOVF   x63,W
025E4:  INCF   x63,F
025E6:  BTFSC  FD8.2
025E8:  INCF   x64,F
025EA:  MOVWF  FE9
025EC:  MOVFF  03,FEA
025F0:  MOVFF  662,FEF
....................       *p2++ = data; 
025F4:  MOVFF  666,03
025F8:  MOVF   x65,W
025FA:  INCF   x65,F
025FC:  BTFSC  FD8.2
025FE:  INCF   x66,F
02600:  MOVWF  FE9
02602:  MOVFF  03,FEA
02606:  MOVFF  662,FEF
....................    } 
0260A:  INCF   x67,F
0260C:  BTFSC  FD8.2
0260E:  INCF   x68,F
02610:  BRA    25D8
.................... } 
02612:  MOVLB  0
02614:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
02586:  MOVLB  6
02588:  MOVF   x73,F
0258A:  BZ    2592
....................       output_high(GLCD_CS2); 
0258C:  BCF    F93.1
0258E:  BSF    F8A.1
....................    else 
02590:  BRA    2596
....................       output_high(GLCD_CS1); 
02592:  BCF    F93.0
02594:  BSF    F8A.0
....................  
....................    output_low(GLCD_RW);       // Set for writing 
02596:  BCF    F93.4
02598:  BCF    F8A.4
....................    output_d(data);            // Put the data on the port 
0259A:  CLRF   F95
0259C:  MOVFF  674,F8C
....................    delay_cycles(1); 
025A0:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
025A2:  BCF    F93.3
025A4:  BSF    F8A.3
....................    delay_cycles(5); 
025A6:  BRA    25A8
025A8:  BRA    25AA
025AA:  NOP   
....................    output_low(GLCD_E); 
025AC:  BCF    F93.3
025AE:  BCF    F8A.3
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
025B0:  BCF    F93.0
025B2:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
025B4:  BCF    F93.1
025B6:  BCF    F8A.1
.................... } 
025B8:  MOVLB  0
025BA:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(1); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(4); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
029EA:  MOVLW  01
029EC:  MOVLB  6
029EE:  MOVWF  x86
029F0:  MOVWF  x87
029F2:  CLRF   x8C
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
029F4:  MOVF   x7D,W
029F6:  SUBWF  x7F,W
029F8:  MOVWF  x8D
029FA:  MOVF   x8D,W
029FC:  BTFSS  x8D.7
029FE:  BRA    2A06
02A00:  MOVLW  00
02A02:  BSF    FD8.0
02A04:  SUBFWB x8D,W
02A06:  CLRF   03
02A08:  MOVWF  x84
02A0A:  MOVFF  03,685
....................    dy = abs((signed int8)(y2 - y1)); 
02A0E:  MOVF   x7E,W
02A10:  SUBWF  x80,W
02A12:  MOVWF  x8D
02A14:  MOVF   x8D,W
02A16:  BTFSS  x8D.7
02A18:  BRA    2A20
02A1A:  MOVLW  00
02A1C:  BSF    FD8.0
02A1E:  SUBFWB x8D,W
02A20:  CLRF   03
02A22:  MOVWF  x82
02A24:  MOVFF  03,683
....................    #endif 
....................  
....................    if(x1 > x2) 
02A28:  MOVF   x7D,W
02A2A:  SUBWF  x7F,W
02A2C:  BC    2A32
....................       addx = -1; 
02A2E:  MOVLW  FF
02A30:  MOVWF  x86
....................    if(y1 > y2) 
02A32:  MOVF   x7E,W
02A34:  SUBWF  x80,W
02A36:  BC    2A3C
....................       addy = -1; 
02A38:  MOVLW  FF
02A3A:  MOVWF  x87
....................  
....................    if(dx >= dy) 
02A3C:  MOVF   x83,W
02A3E:  SUBWF  x85,W
02A40:  BNC   2AB8
02A42:  BNZ   2A4A
02A44:  MOVF   x82,W
02A46:  SUBWF  x84,W
02A48:  BNC   2AB8
....................    { 
....................       dy *= 2; 
02A4A:  BCF    FD8.0
02A4C:  RLCF   x82,F
02A4E:  RLCF   x83,F
....................       P = dy - dx; 
02A50:  MOVF   x84,W
02A52:  SUBWF  x82,W
02A54:  MOVWF  00
02A56:  MOVF   x85,W
02A58:  SUBWFB x83,W
02A5A:  MOVFF  00,688
02A5E:  MOVWF  x89
....................       diff = P - dx; 
02A60:  MOVF   x84,W
02A62:  SUBWF  x88,W
02A64:  MOVWF  x8A
02A66:  MOVF   x85,W
02A68:  SUBWFB x89,W
02A6A:  MOVWF  x8B
....................  
....................       for(; i<=dx; ++i) 
02A6C:  MOVF   x85,F
02A6E:  BNZ   2A76
02A70:  MOVF   x8C,W
02A72:  SUBWF  x84,W
02A74:  BNC   2AB6
....................       { 
....................          glcd_pixel(x1, y1, color); 
02A76:  MOVFF  67D,68D
02A7A:  MOVFF  67E,68E
02A7E:  MOVFF  681,68F
02A82:  MOVLB  0
02A84:  RCALL  2776
....................  
....................          if(P < 0) 
02A86:  MOVLB  6
02A88:  BTFSC  x89.7
02A8A:  BRA    2A8E
02A8C:  BRA    2A9E
....................          { 
....................             P  += dy; 
02A8E:  MOVF   x82,W
02A90:  ADDWF  x88,F
02A92:  MOVF   x83,W
02A94:  ADDWFC x89,F
....................             x1 += addx; 
02A96:  MOVF   x86,W
02A98:  ADDWF  x7D,W
02A9A:  MOVWF  x7D
....................          } 
....................          else 
02A9C:  BRA    2AB2
....................          { 
....................             P  += diff; 
02A9E:  MOVF   x8A,W
02AA0:  ADDWF  x88,F
02AA2:  MOVF   x8B,W
02AA4:  ADDWFC x89,F
....................             x1 += addx; 
02AA6:  MOVF   x86,W
02AA8:  ADDWF  x7D,W
02AAA:  MOVWF  x7D
....................             y1 += addy; 
02AAC:  MOVF   x87,W
02AAE:  ADDWF  x7E,W
02AB0:  MOVWF  x7E
....................          } 
....................       } 
02AB2:  INCF   x8C,F
02AB4:  BRA    2A6C
....................    } 
....................    else 
02AB6:  BRA    2B24
....................    { 
....................       dx *= 2; 
02AB8:  BCF    FD8.0
02ABA:  RLCF   x84,F
02ABC:  RLCF   x85,F
....................       P = dx - dy; 
02ABE:  MOVF   x82,W
02AC0:  SUBWF  x84,W
02AC2:  MOVWF  00
02AC4:  MOVF   x83,W
02AC6:  SUBWFB x85,W
02AC8:  MOVFF  00,688
02ACC:  MOVWF  x89
....................       diff = P - dy; 
02ACE:  MOVF   x82,W
02AD0:  SUBWF  x88,W
02AD2:  MOVWF  x8A
02AD4:  MOVF   x83,W
02AD6:  SUBWFB x89,W
02AD8:  MOVWF  x8B
....................  
....................       for(; i<=dy; ++i) 
02ADA:  MOVF   x83,F
02ADC:  BNZ   2AE4
02ADE:  MOVF   x8C,W
02AE0:  SUBWF  x82,W
02AE2:  BNC   2B24
....................       { 
....................          glcd_pixel(x1, y1, color); 
02AE4:  MOVFF  67D,68D
02AE8:  MOVFF  67E,68E
02AEC:  MOVFF  681,68F
02AF0:  MOVLB  0
02AF2:  RCALL  2776
....................  
....................          if(P < 0) 
02AF4:  MOVLB  6
02AF6:  BTFSC  x89.7
02AF8:  BRA    2AFC
02AFA:  BRA    2B0C
....................          { 
....................             P  += dx; 
02AFC:  MOVF   x84,W
02AFE:  ADDWF  x88,F
02B00:  MOVF   x85,W
02B02:  ADDWFC x89,F
....................             y1 += addy; 
02B04:  MOVF   x87,W
02B06:  ADDWF  x7E,W
02B08:  MOVWF  x7E
....................          } 
....................          else 
02B0A:  BRA    2B20
....................          { 
....................             P  += diff; 
02B0C:  MOVF   x8A,W
02B0E:  ADDWF  x88,F
02B10:  MOVF   x8B,W
02B12:  ADDWFC x89,F
....................             x1 += addx; 
02B14:  MOVF   x86,W
02B16:  ADDWF  x7D,W
02B18:  MOVWF  x7D
....................             y1 += addy; 
02B1A:  MOVF   x87,W
02B1C:  ADDWF  x7E,W
02B1E:  MOVWF  x7E
....................          } 
....................       } 
02B20:  INCF   x8C,F
02B22:  BRA    2ADA
....................    } 
.................... } 
02B24:  MOVLB  0
02B26:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
02B28:  MOVLB  6
02B2A:  MOVF   x76,F
02B2C:  BZ    2B8A
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
02B2E:  MOVF   x74,W
02B30:  SUBWF  x72,W
02B32:  BC    2B3E
....................       { 
....................          xmin = x1; 
02B34:  MOVFF  672,679
....................          xmax = x2; 
02B38:  MOVFF  674,67A
....................       } 
....................       else 
02B3C:  BRA    2B46
....................       { 
....................          xmin = x2; 
02B3E:  MOVFF  674,679
....................          xmax = x1; 
02B42:  MOVFF  672,67A
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
02B46:  MOVF   x75,W
02B48:  SUBWF  x73,W
02B4A:  BC    2B56
....................       { 
....................          ymin = y1; 
02B4C:  MOVFF  673,67B
....................          ymax = y2; 
02B50:  MOVFF  675,67C
....................       } 
....................       else 
02B54:  BRA    2B5E
....................       { 
....................          ymin = y2; 
02B56:  MOVFF  675,67B
....................          ymax = y1; 
02B5A:  MOVFF  673,67C
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
02B5E:  MOVF   x79,W
02B60:  SUBWF  x7A,W
02B62:  BNC   2B88
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
02B64:  MOVFF  67B,678
02B68:  MOVF   x78,W
02B6A:  SUBWF  x7C,W
02B6C:  BNC   2B84
....................          { 
....................             glcd_pixel(xmin, i, color); 
02B6E:  MOVFF  679,68D
02B72:  MOVFF  678,68E
02B76:  MOVFF  677,68F
02B7A:  MOVLB  0
02B7C:  RCALL  2776
....................          } 
02B7E:  MOVLB  6
02B80:  INCF   x78,F
02B82:  BRA    2B68
....................       } 
02B84:  INCF   x79,F
02B86:  BRA    2B5E
....................    } 
....................    else 
02B88:  BRA    2BE6
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
02B8A:  MOVFF  672,67D
02B8E:  MOVFF  673,67E
02B92:  MOVFF  674,67F
02B96:  MOVFF  673,680
02B9A:  MOVFF  677,681
02B9E:  MOVLB  0
02BA0:  RCALL  29EA
....................       glcd_line(x1, y2, x2, y2, color); 
02BA2:  MOVFF  672,67D
02BA6:  MOVFF  675,67E
02BAA:  MOVFF  674,67F
02BAE:  MOVFF  675,680
02BB2:  MOVFF  677,681
02BB6:  RCALL  29EA
....................       glcd_line(x1, y1, x1, y2, color); 
02BB8:  MOVFF  672,67D
02BBC:  MOVFF  673,67E
02BC0:  MOVFF  672,67F
02BC4:  MOVFF  675,680
02BC8:  MOVFF  677,681
02BCC:  RCALL  29EA
....................       glcd_line(x2, y1, x2, y2, color); 
02BCE:  MOVFF  674,67D
02BD2:  MOVFF  673,67E
02BD6:  MOVFF  674,67F
02BDA:  MOVFF  675,680
02BDE:  MOVFF  677,681
02BE2:  RCALL  29EA
02BE4:  MOVLB  6
....................    } 
.................... } 
02BE6:  MOVLB  0
02BE8:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
04118:  MOVLB  6
0411A:  CLRF   x73
....................    b = radius; 
0411C:  MOVFF  670,674
....................    P = 1 - radius; 
04120:  MOVLW  01
04122:  BSF    FD8.0
04124:  SUBFWB x70,W
04126:  MOVWF  x75
....................  
....................    do 
....................    { 
....................       if(fill) 
04128:  MOVF   x71,F
0412A:  BZ    41F6
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
0412C:  MOVF   x73,W
0412E:  SUBWF  x6E,W
04130:  MOVWF  x76
04132:  MOVF   x74,W
04134:  ADDWF  x6F,W
04136:  MOVWF  x77
04138:  MOVF   x73,W
0413A:  ADDWF  x6E,W
0413C:  MOVWF  x78
0413E:  MOVF   x74,W
04140:  ADDWF  x6F,W
04142:  MOVWF  x79
04144:  MOVFF  676,67D
04148:  MOVFF  677,67E
0414C:  MOVFF  678,67F
04150:  MOVWF  x80
04152:  MOVFF  672,681
04156:  MOVLB  0
04158:  CALL   29EA
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
0415C:  MOVLB  6
0415E:  MOVF   x73,W
04160:  SUBWF  x6E,W
04162:  MOVWF  x76
04164:  MOVF   x74,W
04166:  SUBWF  x6F,W
04168:  MOVWF  x77
0416A:  MOVF   x73,W
0416C:  ADDWF  x6E,W
0416E:  MOVWF  x78
04170:  MOVF   x74,W
04172:  SUBWF  x6F,W
04174:  MOVWF  x79
04176:  MOVFF  676,67D
0417A:  MOVFF  677,67E
0417E:  MOVFF  678,67F
04182:  MOVWF  x80
04184:  MOVFF  672,681
04188:  MOVLB  0
0418A:  CALL   29EA
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
0418E:  MOVLB  6
04190:  MOVF   x74,W
04192:  SUBWF  x6E,W
04194:  MOVWF  x76
04196:  MOVF   x73,W
04198:  ADDWF  x6F,W
0419A:  MOVWF  x77
0419C:  MOVF   x74,W
0419E:  ADDWF  x6E,W
041A0:  MOVWF  x78
041A2:  MOVF   x73,W
041A4:  ADDWF  x6F,W
041A6:  MOVWF  x79
041A8:  MOVFF  676,67D
041AC:  MOVFF  677,67E
041B0:  MOVFF  678,67F
041B4:  MOVWF  x80
041B6:  MOVFF  672,681
041BA:  MOVLB  0
041BC:  CALL   29EA
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
041C0:  MOVLB  6
041C2:  MOVF   x74,W
041C4:  SUBWF  x6E,W
041C6:  MOVWF  x76
041C8:  MOVF   x73,W
041CA:  SUBWF  x6F,W
041CC:  MOVWF  x77
041CE:  MOVF   x74,W
041D0:  ADDWF  x6E,W
041D2:  MOVWF  x78
041D4:  MOVF   x73,W
041D6:  SUBWF  x6F,W
041D8:  MOVWF  x79
041DA:  MOVFF  676,67D
041DE:  MOVFF  677,67E
041E2:  MOVFF  678,67F
041E6:  MOVWF  x80
041E8:  MOVFF  672,681
041EC:  MOVLB  0
041EE:  CALL   29EA
....................       } 
....................       else 
041F2:  BRA    42E4
041F4:  MOVLB  6
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
041F6:  MOVF   x6E,W
041F8:  ADDWF  x73,W
041FA:  MOVWF  x76
041FC:  MOVF   x6F,W
041FE:  ADDWF  x74,W
04200:  MOVWF  x77
04202:  MOVFF  676,68D
04206:  MOVWF  x8E
04208:  MOVFF  672,68F
0420C:  MOVLB  0
0420E:  CALL   2776
....................          glcd_pixel(b+x, a+y, color); 
04212:  MOVLB  6
04214:  MOVF   x6E,W
04216:  ADDWF  x74,W
04218:  MOVWF  x76
0421A:  MOVF   x6F,W
0421C:  ADDWF  x73,W
0421E:  MOVWF  x77
04220:  MOVFF  676,68D
04224:  MOVWF  x8E
04226:  MOVFF  672,68F
0422A:  MOVLB  0
0422C:  CALL   2776
....................          glcd_pixel(x-a, b+y, color); 
04230:  MOVLB  6
04232:  MOVF   x73,W
04234:  SUBWF  x6E,W
04236:  MOVWF  x76
04238:  MOVF   x6F,W
0423A:  ADDWF  x74,W
0423C:  MOVWF  x77
0423E:  MOVFF  676,68D
04242:  MOVWF  x8E
04244:  MOVFF  672,68F
04248:  MOVLB  0
0424A:  CALL   2776
....................          glcd_pixel(x-b, a+y, color); 
0424E:  MOVLB  6
04250:  MOVF   x74,W
04252:  SUBWF  x6E,W
04254:  MOVWF  x76
04256:  MOVF   x6F,W
04258:  ADDWF  x73,W
0425A:  MOVWF  x77
0425C:  MOVFF  676,68D
04260:  MOVWF  x8E
04262:  MOVFF  672,68F
04266:  MOVLB  0
04268:  CALL   2776
....................          glcd_pixel(b+x, y-a, color); 
0426C:  MOVLB  6
0426E:  MOVF   x6E,W
04270:  ADDWF  x74,W
04272:  MOVWF  x76
04274:  MOVF   x73,W
04276:  SUBWF  x6F,W
04278:  MOVWF  x77
0427A:  MOVFF  676,68D
0427E:  MOVWF  x8E
04280:  MOVFF  672,68F
04284:  MOVLB  0
04286:  CALL   2776
....................          glcd_pixel(a+x, y-b, color); 
0428A:  MOVLB  6
0428C:  MOVF   x6E,W
0428E:  ADDWF  x73,W
04290:  MOVWF  x76
04292:  MOVF   x74,W
04294:  SUBWF  x6F,W
04296:  MOVWF  x77
04298:  MOVFF  676,68D
0429C:  MOVWF  x8E
0429E:  MOVFF  672,68F
042A2:  MOVLB  0
042A4:  CALL   2776
....................          glcd_pixel(x-a, y-b, color); 
042A8:  MOVLB  6
042AA:  MOVF   x73,W
042AC:  SUBWF  x6E,W
042AE:  MOVWF  x76
042B0:  MOVF   x74,W
042B2:  SUBWF  x6F,W
042B4:  MOVWF  x77
042B6:  MOVFF  676,68D
042BA:  MOVWF  x8E
042BC:  MOVFF  672,68F
042C0:  MOVLB  0
042C2:  CALL   2776
....................          glcd_pixel(x-b, y-a, color); 
042C6:  MOVLB  6
042C8:  MOVF   x74,W
042CA:  SUBWF  x6E,W
042CC:  MOVWF  x76
042CE:  MOVF   x73,W
042D0:  SUBWF  x6F,W
042D2:  MOVWF  x77
042D4:  MOVFF  676,68D
042D8:  MOVWF  x8E
042DA:  MOVFF  672,68F
042DE:  MOVLB  0
042E0:  CALL   2776
....................       } 
....................  
....................       if(P < 0) 
042E4:  MOVLB  6
042E6:  BTFSC  x75.7
042E8:  BRA    42EC
042EA:  BRA    4308
....................          P += 3 + 2 * a++; 
042EC:  MOVF   x73,W
042EE:  INCF   x73,F
042F0:  MOVWF  x76
042F2:  MOVLW  02
042F4:  MOVWF  x77
042F6:  MOVFF  676,678
042FA:  MOVLB  0
042FC:  RCALL  40CA
042FE:  MOVF   01,W
04300:  ADDLW  03
04302:  MOVLB  6
04304:  ADDWF  x75,F
....................       else 
04306:  BRA    432A
....................          P += 5 + 2 * (a++ - b--); 
04308:  MOVF   x73,W
0430A:  INCF   x73,F
0430C:  MOVWF  x76
0430E:  MOVF   x74,W
04310:  DECF   x74,F
04312:  SUBWF  x76,W
04314:  MOVWF  x76
04316:  MOVLW  02
04318:  MOVWF  x77
0431A:  MOVFF  676,678
0431E:  MOVLB  0
04320:  RCALL  40CA
04322:  MOVF   01,W
04324:  ADDLW  05
04326:  MOVLB  6
04328:  ADDWF  x75,F
....................     } while(a <= b); 
0432A:  MOVF   x73,W
0432C:  XORLW  80
0432E:  MOVWF  00
04330:  MOVF   x74,W
04332:  XORLW  80
04334:  SUBWF  00,W
04336:  BTFSC  FD8.2
04338:  BRA    4128
0433A:  BTFSS  FD8.0
0433C:  BRA    4128
.................... } 
0433E:  MOVLB  0
04340:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
02832:  MOVFF  675,03
02836:  MOVLB  6
02838:  MOVFF  674,FE9
0283C:  MOVFF  675,FEA
02840:  MOVF   FEF,F
02842:  BTFSC  FD8.2
02844:  BRA    29E6
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
02846:  MOVFF  675,03
0284A:  MOVFF  674,FE9
0284E:  MOVFF  675,FEA
02852:  MOVF   FEF,W
02854:  SUBLW  52
02856:  BNC   28A6
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
02858:  MOVFF  675,03
0285C:  MOVFF  674,FE9
02860:  MOVFF  675,FEA
02864:  MOVLW  20
02866:  SUBWF  FEF,W
02868:  MULLW  05
0286A:  MOVF   FF3,W
0286C:  CLRF   03
0286E:  MOVWF  x81
02870:  MOVLW  06
02872:  MOVWF  FEA
02874:  MOVLW  7C
02876:  MOVWF  FE9
02878:  CLRF   x85
0287A:  MOVFF  681,684
0287E:  MOVFF  FF2,682
02882:  BCF    FF2.7
02884:  MOVLW  05
02886:  MOVWF  01
02888:  CLRF   FF7
0288A:  MOVF   x81,W
0288C:  MOVLB  0
0288E:  CALL   009E
02892:  TBLRD*-
02894:  TBLRD*+
02896:  MOVFF  FF5,FEE
0289A:  DECFSZ 01,F
0289C:  BRA    2894
0289E:  MOVLB  6
028A0:  BTFSC  x82.7
028A2:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
028A4:  BRA    2910
028A6:  MOVFF  675,03
028AA:  MOVFF  674,FE9
028AE:  MOVFF  675,FEA
028B2:  MOVF   FEF,W
028B4:  SUBLW  7E
028B6:  BNC   2906
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
028B8:  MOVFF  675,03
028BC:  MOVFF  674,FE9
028C0:  MOVFF  675,FEA
028C4:  MOVLW  53
028C6:  SUBWF  FEF,W
028C8:  MULLW  05
028CA:  MOVF   FF3,W
028CC:  CLRF   03
028CE:  MOVWF  x81
028D0:  MOVLW  06
028D2:  MOVWF  FEA
028D4:  MOVLW  7C
028D6:  MOVWF  FE9
028D8:  CLRF   x85
028DA:  MOVFF  681,684
028DE:  MOVFF  FF2,682
028E2:  BCF    FF2.7
028E4:  MOVLW  05
028E6:  MOVWF  01
028E8:  CLRF   FF7
028EA:  MOVF   x81,W
028EC:  MOVLB  0
028EE:  CALL   01BC
028F2:  TBLRD*-
028F4:  TBLRD*+
028F6:  MOVFF  FF5,FEE
028FA:  DECFSZ 01,F
028FC:  BRA    28F4
028FE:  MOVLB  6
02900:  BTFSC  x82.7
02902:  BSF    FF2.7
....................       else 
02904:  BRA    2910
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
02906:  CLRF   x7C
02908:  CLRF   x7D
0290A:  CLRF   x7E
0290C:  CLRF   x7F
0290E:  CLRF   x80
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
02910:  MOVFF  675,03
02914:  MOVF   x74,W
02916:  MOVWF  FE9
02918:  MOVFF  03,FEA
0291C:  MOVF   FEF,W
0291E:  XORLW  0A
02920:  MOVLB  0
02922:  BZ    292A
02924:  XORLW  07
02926:  BZ    293A
02928:  BRA    2940
....................          case '\n': 
....................             y += 7*size + 1; 
0292A:  MOVLB  6
0292C:  MOVF   x76,W
0292E:  MULLW  07
02930:  MOVF   FF3,W
02932:  ADDLW  01
02934:  ADDWF  x73,F
....................             continue; 
02936:  BRA    29D8
02938:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
0293A:  MOVLB  6
0293C:  CLRF   x72
....................             continue; 
0293E:  BRA    29D8
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
02940:  MOVLB  6
02942:  MOVF   x76,W
02944:  MULLW  05
02946:  MOVF   FF3,W
02948:  ADDWF  x72,W
0294A:  SUBLW  7F
0294C:  BC    295A
....................       { 
....................          x = 0;                           // Set x at far left position 
0294E:  CLRF   x72
....................          y += 7*size + 1;                 // Set y at next position down 
02950:  MOVF   x76,W
02952:  MULLW  07
02954:  MOVF   FF3,W
02956:  ADDLW  01
02958:  ADDWF  x73,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
0295A:  CLRF   x78
0295C:  MOVF   x78,W
0295E:  SUBLW  04
02960:  BNC   29D8
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
02962:  CLRF   x79
02964:  MOVF   x79,W
02966:  SUBLW  06
02968:  BNC   29D0
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
0296A:  CLRF   03
0296C:  MOVF   x78,W
0296E:  ADDLW  7C
02970:  MOVWF  FE9
02972:  MOVLW  06
02974:  ADDWFC 03,W
02976:  MOVWF  FEA
02978:  MOVFF  FEF,681
0297C:  MOVFF  681,00
02980:  MOVF   x79,W
02982:  MOVWF  01
02984:  BZ    298E
02986:  BCF    FD8.0
02988:  RRCF   00,F
0298A:  DECFSZ 01,F
0298C:  BRA    2986
0298E:  BTFSS  00.0
02990:  BRA    29CC
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
02992:  CLRF   x7A
02994:  MOVF   x76,W
02996:  SUBWF  x7A,W
02998:  BC    29CC
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
0299A:  CLRF   x7B
0299C:  MOVF   x76,W
0299E:  SUBWF  x7B,W
029A0:  BC    29C8
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
029A2:  MOVF   x7B,W
029A4:  ADDWF  x72,W
029A6:  MOVWF  x81
029A8:  MOVF   x79,W
029AA:  MULWF  x76
029AC:  MOVF   FF3,W
029AE:  ADDWF  x73,W
029B0:  ADDWF  x7A,W
029B2:  MOVWF  x82
029B4:  MOVFF  681,68D
029B8:  MOVWF  x8E
029BA:  MOVFF  677,68F
029BE:  MOVLB  0
029C0:  RCALL  2776
....................                   } 
029C2:  MOVLB  6
029C4:  INCF   x7B,F
029C6:  BRA    299C
....................                } 
029C8:  INCF   x7A,F
029CA:  BRA    2994
....................             } 
....................          } 
029CC:  INCF   x79,F
029CE:  BRA    2964
....................       } 
029D0:  INCF   x78,F
029D2:  MOVF   x76,W
029D4:  ADDWF  x72,F
029D6:  BRA    295C
....................    } 
029D8:  INCF   x74,F
029DA:  BTFSC  FD8.2
029DC:  INCF   x75,F
029DE:  INCF   x72,F
029E0:  MOVLB  0
029E2:  BRA    2832
029E4:  MOVLB  6
.................... } 
029E6:  MOVLB  0
029E8:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Horno [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x00, 0x00, 0x0E, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x02, 0x00, 0x0E, 
.................... 0x60, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x05, 0x00, 0x0E, 
.................... 0x70, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x02, 0x00, 0x0E, 
.................... 0x60, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xE1, 0xC0, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x01, 0x80, 0x60, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x78, 0x10, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x06, 0x7C, 0x18, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0x7C, 0x08, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x3C, 0x04, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x10, 0x04, 0x0E, 
.................... 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x0C, 0xE4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x2D, 0xF4, 0x0E, 
.................... 0x02, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x63, 0xF4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0xF1, 0xE4, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x70, 0x10, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x30, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xC0, 0xC0, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x7F, 0x80, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
.................... // Definición de teclado - NO 
.................... #define   UP            !input(PIN_A4) 
.................... #define   DOWN          !input(PIN_A5) 
.................... #define   RIGHT         !input(PIN_E0) 
.................... #define   LEFT          !input(PIN_E1) 
....................  
.................... #define   DOOR          input(PIN_E2) 
.................... #define   TERM          input(PIN_B7) 
....................  
....................  
.................... // Definición de Salidas 
.................... #define   SSR_on            output_bit(PIN_C2,0) 
.................... #define   SSR_off           output_bit(PIN_C2,1) 
.................... #define   Motor1_on         output_bit(PIN_C5,0) 
.................... #define   Motor1_off        output_bit(PIN_C5,1) 
.................... #define   Motor2_on         output_bit(PIN_C6,0) 
.................... #define   Motor2_off        output_bit(PIN_C6,1) 
.................... #define   Display_on        output_bit(PIN_C7,1) 
.................... #define   Display_off       output_bit(PIN_C7,0) 
....................  
.................... float promedio[90]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float X[2]={0.0,0.0}; 
.................... short Desconectado=0; 
.................... int8 h=0,l=0,Ajuste=0,Ajusten=0,MediaMovil=10,tiemporecta=0,flag_ganancia=0,Lectura2=0,Controlando=0,Ajusto=10,n=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,visual=1,Lectura=0,flag_ajuste=0,flag_ajuste2=0,flag_clear=0,Infinito=0; 
.................... short flag_clear2=0,flag_clear3=0,flag_tiempocalentamiento=0,flag_display=0,flag_setpoint=0,Finalizo=0; 
.................... int8 y=0,tiemporeset=0,Source=1; 
.................... int8 Menu=0, unidad=1,i=0,Pausa=0,TiempoControl=0; 
.................... int8 Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,decimal=0,entero=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,tinicio=0,tiempocalentamiento=0,tiemposetpoint=0,Tp=0,Tc=0; 
.................... float Potencia=0.0,Tpulsomin=0.0,Gananciamax=0.0,Gain=0.0,RPT100=0.0,Integral=0,Derivativo=0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float V0=0.0,R1=10000.0,Pt,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=2.0,desvio=0.5,Coeficiente=44.5; 
.................... float Aumento=0.0,Temperatura=0.0,TpulsoMax=0.0,Setpoint=0,Temperatura1=0,Temperatura2=0,Temperatura3=0,Temporal=0.0; 
.................... float a=0.0011,b=2.3302,c=-244.0723; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... #include "Funciones.h" 
.................... void ActualizaRecta(){ 
....................    X[y]=Temperatura; 
*
04DF2:  MOVLB  5
04DF4:  MOVF   x94,W
04DF6:  MULLW  04
04DF8:  MOVF   FF3,W
04DFA:  CLRF   03
04DFC:  ADDLW  7F
04DFE:  MOVWF  FE9
04E00:  MOVLW  05
04E02:  ADDWFC 03,W
04E04:  MOVWF  FEA
04E06:  MOVFF  611,FEF
04E0A:  MOVFF  612,FEC
04E0E:  MOVFF  613,FEC
04E12:  MOVFF  614,FEC
....................    y++; 
04E16:  INCF   x94,F
....................    if(y>=2){ 
04E18:  MOVF   x94,W
04E1A:  SUBLW  01
04E1C:  BC    4E5A
....................       y=0; 
04E1E:  CLRF   x94
....................       Aumento=X[1]-X[0]; 
04E20:  BSF    FD8.1
04E22:  MOVFF  586,661
04E26:  MOVFF  585,660
04E2A:  MOVFF  584,65F
04E2E:  MOVFF  583,65E
04E32:  MOVFF  582,665
04E36:  MOVFF  581,664
04E3A:  MOVFF  580,663
04E3E:  MOVFF  57F,662
04E42:  MOVLB  0
04E44:  CALL   1246
04E48:  MOVFF  03,610
04E4C:  MOVFF  02,60F
04E50:  MOVFF  01,60E
04E54:  MOVFF  00,60D
04E58:  MOVLB  5
....................    } 
.................... } 
04E5A:  MOVLB  0
04E5C:  GOTO   4E98 (RETURN)
....................  
.................... // Funcion para conversor analogo-digital 
.................... float sensores(int x){ 
.................... float y;set_adc_channel(x);delay_ms(1);y=read_adc();return (y); 
*
02CE4:  MOVLB  6
02CE6:  RLCF   x5A,W
02CE8:  MOVWF  00
02CEA:  RLCF   00,F
02CEC:  MOVLW  FC
02CEE:  ANDWF  00,F
02CF0:  MOVFF  00,01
02CF4:  MOVF   FC2,W
02CF6:  ANDLW  C3
02CF8:  IORWF  00,W
02CFA:  MOVWF  FC2
02CFC:  MOVLW  01
02CFE:  MOVWF  x62
02D00:  MOVLB  0
02D02:  CALL   1052
02D06:  BSF    FC2.1
02D08:  BTFSC  FC2.1
02D0A:  BRA    2D08
02D0C:  MOVFF  FC4,660
02D10:  MOVFF  FC3,65F
02D14:  MOVLB  0
02D16:  CALL   10B2
02D1A:  MOVFF  03,65E
02D1E:  MOVFF  02,65D
02D22:  MOVFF  01,65C
02D26:  MOVFF  00,65B
02D2A:  MOVFF  65B,00
02D2E:  MOVFF  65C,01
02D32:  MOVFF  65D,02
02D36:  MOVFF  65E,03
.................... } 
02D3A:  RETLW  00
....................  
.................... float Leer_Sensor(int media){ 
....................    if(Source==1){ 
*
02E54:  MOVLB  5
02E56:  DECFSZ x96,W
02E58:  BRA    30D2
....................       Prom=0.0; 
02E5A:  CLRF   xF8
02E5C:  CLRF   xF7
02E5E:  CLRF   xF6
02E60:  CLRF   xF5
....................       V0 = sensores(1);   //Lectura de 4-20mA Transmisor PT100 
02E62:  MOVLW  01
02E64:  MOVLB  6
02E66:  MOVWF  x5A
02E68:  MOVLB  0
02E6A:  RCALL  2CE4
02E6C:  MOVFF  03,5E0
02E70:  MOVFF  02,5DF
02E74:  MOVFF  01,5DE
02E78:  MOVFF  00,5DD
....................       Temperature=(0.1272*V0)-25.002;//0-100°C 
02E7C:  MOVLW  B8
02E7E:  MOVLB  6
02E80:  MOVWF  x7C
02E82:  MOVLW  40
02E84:  MOVWF  x7B
02E86:  MOVLW  02
02E88:  MOVWF  x7A
02E8A:  MOVLW  7C
02E8C:  MOVWF  x79
02E8E:  MOVFF  5E0,680
02E92:  MOVFF  5DF,67F
02E96:  MOVFF  5DE,67E
02E9A:  MOVFF  5DD,67D
02E9E:  MOVLB  0
02EA0:  RCALL  2D3C
02EA2:  MOVFF  00,65A
02EA6:  MOVFF  01,65B
02EAA:  MOVFF  02,65C
02EAE:  MOVFF  03,65D
02EB2:  BSF    FD8.1
02EB4:  MOVFF  03,661
02EB8:  MOVFF  02,660
02EBC:  MOVFF  01,65F
02EC0:  MOVFF  00,65E
02EC4:  MOVLW  19
02EC6:  MOVLB  6
02EC8:  MOVWF  x65
02ECA:  MOVLW  04
02ECC:  MOVWF  x64
02ECE:  MOVLW  48
02ED0:  MOVWF  x63
02ED2:  MOVLW  83
02ED4:  MOVWF  x62
02ED6:  MOVLB  0
02ED8:  CALL   1246
02EDC:  MOVFF  03,5FC
02EE0:  MOVFF  02,5FB
02EE4:  MOVFF  01,5FA
02EE8:  MOVFF  00,5F9
....................        
....................       if(l>(media-1)) 
02EEC:  MOVLW  01
02EEE:  MOVLB  6
02EF0:  SUBWF  x59,W
02EF2:  MOVLB  5
02EF4:  SUBWF  x89,W
02EF6:  BZ    2EFC
02EF8:  BNC   2EFC
....................       {l=0;} 
02EFA:  CLRF   x89
....................       promedio[l]=Temperature;l++; 
02EFC:  MOVLB  6
02EFE:  CLRF   x5E
02F00:  MOVFF  589,65D
02F04:  CLRF   x60
02F06:  MOVLW  04
02F08:  MOVWF  x5F
02F0A:  MOVLB  0
02F0C:  RCALL  2E32
02F0E:  MOVF   01,W
02F10:  ADDLW  17
02F12:  MOVWF  FE9
02F14:  MOVLW  04
02F16:  ADDWFC 02,W
02F18:  MOVWF  FEA
02F1A:  MOVFF  5F9,FEF
02F1E:  MOVFF  5FA,FEC
02F22:  MOVFF  5FB,FEC
02F26:  MOVFF  5FC,FEC
02F2A:  MOVLB  5
02F2C:  INCF   x89,F
....................       //promedio[l]=V0;l++; 
....................              
....................       for(h=0;h<media;h++) 
02F2E:  CLRF   x88
02F30:  MOVLB  6
02F32:  MOVF   x59,W
02F34:  MOVLB  5
02F36:  SUBWF  x88,W
02F38:  BC    2FB8
....................       { 
....................          Prom+=promedio[h]; 
02F3A:  MOVLB  6
02F3C:  CLRF   x5E
02F3E:  MOVFF  588,65D
02F42:  CLRF   x60
02F44:  MOVLW  04
02F46:  MOVWF  x5F
02F48:  MOVLB  0
02F4A:  RCALL  2E32
02F4C:  MOVFF  02,03
02F50:  MOVF   01,W
02F52:  ADDLW  17
02F54:  MOVWF  FE9
02F56:  MOVLW  04
02F58:  ADDWFC 02,W
02F5A:  MOVWF  FEA
02F5C:  MOVFF  FEF,00
02F60:  MOVFF  FEC,01
02F64:  MOVFF  FEC,02
02F68:  MOVFF  FEC,03
02F6C:  MOVFF  FEA,65B
02F70:  MOVFF  FE9,65A
02F74:  BCF    FD8.1
02F76:  MOVFF  5F8,661
02F7A:  MOVFF  5F7,660
02F7E:  MOVFF  5F6,65F
02F82:  MOVFF  5F5,65E
02F86:  MOVFF  03,665
02F8A:  MOVFF  02,664
02F8E:  MOVFF  01,663
02F92:  MOVFF  00,662
02F96:  CALL   1246
02F9A:  MOVFF  65B,FEA
02F9E:  MOVFF  65A,FE9
02FA2:  MOVFF  03,5F8
02FA6:  MOVFF  02,5F7
02FAA:  MOVFF  01,5F6
02FAE:  MOVFF  00,5F5
....................       }  
02FB2:  MOVLB  5
02FB4:  INCF   x88,F
02FB6:  BRA    2F30
....................       Prom=Prom/media;   
02FB8:  MOVLB  6
02FBA:  CLRF   x60
02FBC:  MOVFF  659,65F
02FC0:  MOVLB  0
02FC2:  CALL   10B2
02FC6:  MOVFF  5F8,65D
02FCA:  MOVFF  5F7,65C
02FCE:  MOVFF  5F6,65B
02FD2:  MOVFF  5F5,65A
02FD6:  MOVFF  03,661
02FDA:  MOVFF  02,660
02FDE:  MOVFF  01,65F
02FE2:  MOVFF  00,65E
02FE6:  CALL   10E8
02FEA:  MOVFF  03,5F8
02FEE:  MOVFF  02,5F7
02FF2:  MOVFF  01,5F6
02FF6:  MOVFF  00,5F5
....................       Prom-=0.4; //Ajuste de error por resistencia de 240ohm 
02FFA:  BSF    FD8.1
02FFC:  MOVFF  5F8,661
03000:  MOVFF  5F7,660
03004:  MOVFF  5F6,65F
03008:  MOVFF  5F5,65E
0300C:  MOVLW  CD
0300E:  MOVLB  6
03010:  MOVWF  x65
03012:  MOVLW  CC
03014:  MOVWF  x64
03016:  MOVLW  4C
03018:  MOVWF  x63
0301A:  MOVLW  7D
0301C:  MOVWF  x62
0301E:  MOVLB  0
03020:  CALL   1246
03024:  MOVFF  03,5F8
03028:  MOVFF  02,5F7
0302C:  MOVFF  01,5F6
03030:  MOVFF  00,5F5
....................       Prom+=((float)Ajuste-(float)Ajusten); 
03034:  MOVLB  6
03036:  CLRF   x60
03038:  MOVFF  58A,65F
0303C:  MOVLB  0
0303E:  CALL   10B2
03042:  MOVFF  00,65A
03046:  MOVFF  01,65B
0304A:  MOVFF  02,65C
0304E:  MOVFF  03,65D
03052:  MOVLB  6
03054:  CLRF   x60
03056:  MOVFF  58B,65F
0305A:  MOVLB  0
0305C:  CALL   10B2
03060:  BSF    FD8.1
03062:  MOVFF  65D,661
03066:  MOVFF  65C,660
0306A:  MOVFF  65B,65F
0306E:  MOVFF  65A,65E
03072:  MOVFF  03,665
03076:  MOVFF  02,664
0307A:  MOVFF  01,663
0307E:  MOVFF  00,662
03082:  CALL   1246
03086:  BCF    FD8.1
03088:  MOVFF  5F8,661
0308C:  MOVFF  5F7,660
03090:  MOVFF  5F6,65F
03094:  MOVFF  5F5,65E
03098:  MOVFF  03,665
0309C:  MOVFF  02,664
030A0:  MOVFF  01,663
030A4:  MOVFF  00,662
030A8:  CALL   1246
030AC:  MOVFF  03,5F8
030B0:  MOVFF  02,5F7
030B4:  MOVFF  01,5F6
030B8:  MOVFF  00,5F5
....................       return Prom;    
030BC:  MOVFF  5F5,00
030C0:  MOVFF  5F6,01
030C4:  MOVFF  5F7,02
030C8:  MOVFF  5F8,03
030CC:  BRA    3486
....................    }else if(Source==0){ 
030CE:  BRA    3486
030D0:  MOVLB  5
030D2:  MOVF   x96,F
030D4:  BTFSS  FD8.2
030D6:  BRA    3488
....................       Prom=0.0; 
030D8:  CLRF   xF8
030DA:  CLRF   xF7
030DC:  CLRF   xF6
030DE:  CLRF   xF5
....................       V0 = sensores(0);   //Lectura de Divisor de Voltaje de PT100 con resistencia de 6.18k (+-2%) 
030E0:  MOVLB  6
030E2:  CLRF   x5A
030E4:  MOVLB  0
030E6:  RCALL  2CE4
030E8:  MOVFF  03,5E0
030EC:  MOVFF  02,5DF
030F0:  MOVFF  01,5DE
030F4:  MOVFF  00,5DD
....................       V0 = V0/Gain; // Se elimina la ganancia 
030F8:  MOVFF  5E0,65D
030FC:  MOVFF  5DF,65C
03100:  MOVFF  5DE,65B
03104:  MOVFF  5DD,65A
03108:  MOVFF  5C0,661
0310C:  MOVFF  5BF,660
03110:  MOVFF  5BE,65F
03114:  MOVFF  5BD,65E
03118:  CALL   10E8
0311C:  MOVFF  03,5E0
03120:  MOVFF  02,5DF
03124:  MOVFF  01,5DE
03128:  MOVFF  00,5DD
....................       Pt=(R1)/((1024.0/V0)-1.0); // Se calcula el valor de la PT100 
0312C:  MOVLB  6
0312E:  CLRF   x5D
03130:  CLRF   x5C
03132:  CLRF   x5B
03134:  MOVLW  89
03136:  MOVWF  x5A
03138:  MOVFF  5E0,661
0313C:  MOVFF  5DF,660
03140:  MOVFF  5DE,65F
03144:  MOVFF  5DD,65E
03148:  MOVLB  0
0314A:  CALL   10E8
0314E:  MOVFF  00,65A
03152:  MOVFF  01,65B
03156:  MOVFF  02,65C
0315A:  MOVFF  03,65D
0315E:  BSF    FD8.1
03160:  MOVFF  03,661
03164:  MOVFF  02,660
03168:  MOVFF  01,65F
0316C:  MOVFF  00,65E
03170:  MOVLB  6
03172:  CLRF   x65
03174:  CLRF   x64
03176:  CLRF   x63
03178:  MOVLW  7F
0317A:  MOVWF  x62
0317C:  MOVLB  0
0317E:  CALL   1246
03182:  MOVFF  5E4,65D
03186:  MOVFF  5E3,65C
0318A:  MOVFF  5E2,65B
0318E:  MOVFF  5E1,65A
03192:  MOVFF  03,661
03196:  MOVFF  02,660
0319A:  MOVFF  01,65F
0319E:  MOVFF  00,65E
031A2:  CALL   10E8
031A6:  MOVFF  03,5E8
031AA:  MOVFF  02,5E7
031AE:  MOVFF  01,5E6
031B2:  MOVFF  00,5E5
....................       Pt=Pt-RPT100; //Ajuste de impedancia de cableado de PT100 
031B6:  BSF    FD8.1
031B8:  MOVFF  5E8,661
031BC:  MOVFF  5E7,660
031C0:  MOVFF  5E6,65F
031C4:  MOVFF  5E5,65E
031C8:  MOVFF  5C4,665
031CC:  MOVFF  5C3,664
031D0:  MOVFF  5C2,663
031D4:  MOVFF  5C1,662
031D8:  CALL   1246
031DC:  MOVFF  03,5E8
031E0:  MOVFF  02,5E7
031E4:  MOVFF  01,5E6
031E8:  MOVFF  00,5E5
....................       //Temperature=(Pt-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
....................                 
....................       if(l>(media-1)) 
031EC:  MOVLW  01
031EE:  MOVLB  6
031F0:  SUBWF  x59,W
031F2:  MOVLB  5
031F4:  SUBWF  x89,W
031F6:  BZ    31FC
031F8:  BNC   31FC
....................       {l=0;} 
031FA:  CLRF   x89
....................       //promedio[l]=Temperature;l++; 
....................       promedio[l]=Pt;l++; 
031FC:  MOVLB  6
031FE:  CLRF   x5E
03200:  MOVFF  589,65D
03204:  CLRF   x60
03206:  MOVLW  04
03208:  MOVWF  x5F
0320A:  MOVLB  0
0320C:  RCALL  2E32
0320E:  MOVF   01,W
03210:  ADDLW  17
03212:  MOVWF  FE9
03214:  MOVLW  04
03216:  ADDWFC 02,W
03218:  MOVWF  FEA
0321A:  MOVFF  5E5,FEF
0321E:  MOVFF  5E6,FEC
03222:  MOVFF  5E7,FEC
03226:  MOVFF  5E8,FEC
0322A:  MOVLB  5
0322C:  INCF   x89,F
....................              
....................       for(h=0;h<media;h++) 
0322E:  CLRF   x88
03230:  MOVLB  6
03232:  MOVF   x59,W
03234:  MOVLB  5
03236:  SUBWF  x88,W
03238:  BC    32B8
....................       { 
....................          Prom+=promedio[h]; 
0323A:  MOVLB  6
0323C:  CLRF   x5E
0323E:  MOVFF  588,65D
03242:  CLRF   x60
03244:  MOVLW  04
03246:  MOVWF  x5F
03248:  MOVLB  0
0324A:  RCALL  2E32
0324C:  MOVFF  02,03
03250:  MOVF   01,W
03252:  ADDLW  17
03254:  MOVWF  FE9
03256:  MOVLW  04
03258:  ADDWFC 02,W
0325A:  MOVWF  FEA
0325C:  MOVFF  FEF,00
03260:  MOVFF  FEC,01
03264:  MOVFF  FEC,02
03268:  MOVFF  FEC,03
0326C:  MOVFF  FEA,65B
03270:  MOVFF  FE9,65A
03274:  BCF    FD8.1
03276:  MOVFF  5F8,661
0327A:  MOVFF  5F7,660
0327E:  MOVFF  5F6,65F
03282:  MOVFF  5F5,65E
03286:  MOVFF  03,665
0328A:  MOVFF  02,664
0328E:  MOVFF  01,663
03292:  MOVFF  00,662
03296:  CALL   1246
0329A:  MOVFF  65B,FEA
0329E:  MOVFF  65A,FE9
032A2:  MOVFF  03,5F8
032A6:  MOVFF  02,5F7
032AA:  MOVFF  01,5F6
032AE:  MOVFF  00,5F5
....................       }  
032B2:  MOVLB  5
032B4:  INCF   x88,F
032B6:  BRA    3230
....................       Prom=Prom/media;    
032B8:  MOVLB  6
032BA:  CLRF   x60
032BC:  MOVFF  659,65F
032C0:  MOVLB  0
032C2:  CALL   10B2
032C6:  MOVFF  5F8,65D
032CA:  MOVFF  5F7,65C
032CE:  MOVFF  5F6,65B
032D2:  MOVFF  5F5,65A
032D6:  MOVFF  03,661
032DA:  MOVFF  02,660
032DE:  MOVFF  01,65F
032E2:  MOVFF  00,65E
032E6:  CALL   10E8
032EA:  MOVFF  03,5F8
032EE:  MOVFF  02,5F7
032F2:  MOVFF  01,5F6
032F6:  MOVFF  00,5F5
....................       //Temperature=(Prom-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
....................       Temperature=((Prom*Prom)*a)+(Prom*b)+c;  // Ecuación determinada por linealización en Matlab. Revisar este polinomio. 
032FA:  MOVFF  5F8,67C
032FE:  MOVFF  5F7,67B
03302:  MOVFF  5F6,67A
03306:  MOVFF  5F5,679
0330A:  MOVFF  5F8,680
0330E:  MOVFF  5F7,67F
03312:  MOVFF  5F6,67E
03316:  MOVFF  5F5,67D
0331A:  RCALL  2D3C
0331C:  MOVFF  00,65A
03320:  MOVFF  01,65B
03324:  MOVFF  02,65C
03328:  MOVFF  03,65D
0332C:  MOVFF  03,67C
03330:  MOVFF  02,67B
03334:  MOVFF  01,67A
03338:  MOVFF  00,679
0333C:  MOVFF  630,680
03340:  MOVFF  62F,67F
03344:  MOVFF  62E,67E
03348:  MOVFF  62D,67D
0334C:  RCALL  2D3C
0334E:  MOVFF  00,65A
03352:  MOVFF  01,65B
03356:  MOVFF  02,65C
0335A:  MOVFF  03,65D
0335E:  MOVFF  5F8,67C
03362:  MOVFF  5F7,67B
03366:  MOVFF  5F6,67A
0336A:  MOVFF  5F5,679
0336E:  MOVFF  634,680
03372:  MOVFF  633,67F
03376:  MOVFF  632,67E
0337A:  MOVFF  631,67D
0337E:  RCALL  2D3C
03380:  BCF    FD8.1
03382:  MOVFF  65D,661
03386:  MOVFF  65C,660
0338A:  MOVFF  65B,65F
0338E:  MOVFF  65A,65E
03392:  MOVFF  03,665
03396:  MOVFF  02,664
0339A:  MOVFF  01,663
0339E:  MOVFF  00,662
033A2:  CALL   1246
033A6:  MOVFF  00,65A
033AA:  MOVFF  01,65B
033AE:  MOVFF  02,65C
033B2:  MOVFF  03,65D
033B6:  BCF    FD8.1
033B8:  MOVFF  03,661
033BC:  MOVFF  02,660
033C0:  MOVFF  01,65F
033C4:  MOVFF  00,65E
033C8:  MOVFF  638,665
033CC:  MOVFF  637,664
033D0:  MOVFF  636,663
033D4:  MOVFF  635,662
033D8:  CALL   1246
033DC:  MOVFF  03,5FC
033E0:  MOVFF  02,5FB
033E4:  MOVFF  01,5FA
033E8:  MOVFF  00,5F9
....................       Temperature+=((float)Ajuste-(float)Ajusten); 
033EC:  MOVLB  6
033EE:  CLRF   x60
033F0:  MOVFF  58A,65F
033F4:  MOVLB  0
033F6:  CALL   10B2
033FA:  MOVFF  00,65A
033FE:  MOVFF  01,65B
03402:  MOVFF  02,65C
03406:  MOVFF  03,65D
0340A:  MOVLB  6
0340C:  CLRF   x60
0340E:  MOVFF  58B,65F
03412:  MOVLB  0
03414:  CALL   10B2
03418:  BSF    FD8.1
0341A:  MOVFF  65D,661
0341E:  MOVFF  65C,660
03422:  MOVFF  65B,65F
03426:  MOVFF  65A,65E
0342A:  MOVFF  03,665
0342E:  MOVFF  02,664
03432:  MOVFF  01,663
03436:  MOVFF  00,662
0343A:  CALL   1246
0343E:  BCF    FD8.1
03440:  MOVFF  5FC,661
03444:  MOVFF  5FB,660
03448:  MOVFF  5FA,65F
0344C:  MOVFF  5F9,65E
03450:  MOVFF  03,665
03454:  MOVFF  02,664
03458:  MOVFF  01,663
0345C:  MOVFF  00,662
03460:  CALL   1246
03464:  MOVFF  03,5FC
03468:  MOVFF  02,5FB
0346C:  MOVFF  01,5FA
03470:  MOVFF  00,5F9
....................        
....................       //return Prom; 
....................       return Temperature; 
03474:  MOVFF  5F9,00
03478:  MOVFF  5FA,01
0347C:  MOVFF  5FB,02
03480:  MOVFF  5FC,03
03484:  BRA    3486
03486:  MOVLB  5
....................       //return Temperature; 
....................    } 
.................... } 
03488:  MOVLB  0
0348A:  RETLW  00
....................  
.................... void Controla(){ 
.................... //-------------------------------Control de Calentamiento------------------------------------------------------------//          
....................       if(tiemporecta>=Derivativo)//40 
*
04E60:  MOVLB  6
04E62:  CLRF   x60
04E64:  MOVFF  58D,65F
04E68:  MOVLB  0
04E6A:  CALL   10B2
04E6E:  MOVFF  5CC,660
04E72:  MOVFF  5CB,65F
04E76:  MOVFF  5CA,65E
04E7A:  MOVFF  5C9,65D
04E7E:  MOVFF  03,664
04E82:  MOVFF  02,663
04E86:  MOVFF  01,662
04E8A:  MOVFF  00,661
04E8E:  CALL   1C42
04E92:  BC    4E96
04E94:  BNZ   4E9E
....................       { 
....................          ActualizaRecta(); 
04E96:  BRA    4DF2
....................          tiemporecta=0; 
04E98:  MOVLB  5
04E9A:  CLRF   x8D
04E9C:  MOVLB  0
....................       }  
....................     
....................       Motor1_on; 
04E9E:  BCF    F8B.5
04EA0:  BCF    F94.5
....................       Motor2_on; 
04EA2:  BCF    F8B.6
04EA4:  BCF    F94.6
....................     
....................       error=desvio+Setpoint-Temperatura;      // Cálculo del error ****** 
04EA6:  BCF    FD8.1
04EA8:  MOVFF  608,661
04EAC:  MOVFF  607,660
04EB0:  MOVFF  606,65F
04EB4:  MOVFF  605,65E
04EB8:  MOVFF  61C,665
04EBC:  MOVFF  61B,664
04EC0:  MOVFF  61A,663
04EC4:  MOVFF  619,662
04EC8:  CALL   1246
04ECC:  MOVFF  00,659
04ED0:  MOVFF  01,65A
04ED4:  MOVFF  02,65B
04ED8:  MOVFF  03,65C
04EDC:  BSF    FD8.1
04EDE:  MOVFF  03,661
04EE2:  MOVFF  02,660
04EE6:  MOVFF  01,65F
04EEA:  MOVFF  00,65E
04EEE:  MOVFF  614,665
04EF2:  MOVFF  613,664
04EF6:  MOVFF  612,663
04EFA:  MOVFF  611,662
04EFE:  CALL   1246
04F02:  MOVFF  03,5F4
04F06:  MOVFF  02,5F3
04F0A:  MOVFF  01,5F2
04F0E:  MOVFF  00,5F1
....................     
....................       if(error>=0.8 && error<30 && Aumento<0.3 && flag_setpoint==0) 
04F12:  MOVLW  CD
04F14:  MOVLB  6
04F16:  MOVWF  x60
04F18:  MOVLW  CC
04F1A:  MOVWF  x5F
04F1C:  MOVLW  4C
04F1E:  MOVWF  x5E
04F20:  MOVLW  7E
04F22:  MOVWF  x5D
04F24:  MOVFF  5F4,664
04F28:  MOVFF  5F3,663
04F2C:  MOVFF  5F2,662
04F30:  MOVFF  5F1,661
04F34:  MOVLB  0
04F36:  CALL   1C42
04F3A:  BC    4F40
04F3C:  BTFSS  FD8.2
04F3E:  BRA    5354
04F40:  MOVFF  5F4,660
04F44:  MOVFF  5F3,65F
04F48:  MOVFF  5F2,65E
04F4C:  MOVFF  5F1,65D
04F50:  MOVLB  6
04F52:  CLRF   x64
04F54:  CLRF   x63
04F56:  MOVLW  70
04F58:  MOVWF  x62
04F5A:  MOVLW  83
04F5C:  MOVWF  x61
04F5E:  MOVLB  0
04F60:  CALL   1C42
04F64:  BTFSS  FD8.0
04F66:  BRA    5354
04F68:  MOVFF  610,660
04F6C:  MOVFF  60F,65F
04F70:  MOVFF  60E,65E
04F74:  MOVFF  60D,65D
04F78:  MOVLW  9A
04F7A:  MOVLB  6
04F7C:  MOVWF  x64
04F7E:  MOVLW  99
04F80:  MOVWF  x63
04F82:  MOVLW  19
04F84:  MOVWF  x62
04F86:  MOVLW  7D
04F88:  MOVWF  x61
04F8A:  MOVLB  0
04F8C:  CALL   1C42
04F90:  BTFSS  FD8.0
04F92:  BRA    5354
04F94:  MOVLB  5
04F96:  BTFSS  x93.6
04F98:  BRA    4F9E
04F9A:  MOVLB  0
04F9C:  BRA    5354
....................       { 
....................          flag_ajuste=0; 
04F9E:  BCF    x87.6
....................          flag_ajuste2=0; 
04FA0:  BCF    x87.7
....................          Ajusto=10; 
04FA2:  MOVLW  0A
04FA4:  MOVWF  x91
....................          if(Potencia<90.0){ 
04FA6:  MOVFF  5B4,660
04FAA:  MOVFF  5B3,65F
04FAE:  MOVFF  5B2,65E
04FB2:  MOVFF  5B1,65D
04FB6:  MOVLB  6
04FB8:  CLRF   x64
04FBA:  CLRF   x63
04FBC:  MOVLW  34
04FBE:  MOVWF  x62
04FC0:  MOVLW  85
04FC2:  MOVWF  x61
04FC4:  MOVLB  0
04FC6:  CALL   1C42
04FCA:  BTFSS  FD8.0
04FCC:  BRA    5352
....................             if(error>1.1){ 
04FCE:  MOVLW  CD
04FD0:  MOVLB  6
04FD2:  MOVWF  x60
04FD4:  MOVLW  CC
04FD6:  MOVWF  x5F
04FD8:  MOVLW  0C
04FDA:  MOVWF  x5E
04FDC:  MOVLW  7F
04FDE:  MOVWF  x5D
04FE0:  MOVFF  5F4,664
04FE4:  MOVFF  5F3,663
04FE8:  MOVFF  5F2,662
04FEC:  MOVFF  5F1,661
04FF0:  MOVLB  0
04FF2:  CALL   1C42
04FF6:  BTFSS  FD8.0
04FF8:  BRA    51A6
....................                if(TiempoControl>=(Derivativo*2))//80 
04FFA:  MOVFF  5CC,67C
04FFE:  MOVFF  5CB,67B
05002:  MOVFF  5CA,67A
05006:  MOVFF  5C9,679
0500A:  MOVLB  6
0500C:  CLRF   x80
0500E:  CLRF   x7F
05010:  CLRF   x7E
05012:  MOVLW  80
05014:  MOVWF  x7D
05016:  MOVLB  0
05018:  CALL   2D3C
0501C:  MOVFF  00,659
05020:  MOVFF  01,65A
05024:  MOVFF  02,65B
05028:  MOVFF  03,65C
0502C:  MOVLB  6
0502E:  CLRF   x60
05030:  MOVFF  59B,65F
05034:  MOVLB  0
05036:  CALL   10B2
0503A:  MOVFF  65C,660
0503E:  MOVFF  65B,65F
05042:  MOVFF  65A,65E
05046:  MOVFF  659,65D
0504A:  MOVFF  03,664
0504E:  MOVFF  02,663
05052:  MOVFF  01,662
05056:  MOVFF  00,661
0505A:  CALL   1C42
0505E:  BC    5064
05060:  BTFSS  FD8.2
05062:  BRA    51A4
....................                { 
....................                   TiempoControl=0; 
05064:  MOVLB  5
05066:  CLRF   x9B
....................                   if(Aumento<-0.5) 
05068:  MOVFF  610,660
0506C:  MOVFF  60F,65F
05070:  MOVFF  60E,65E
05074:  MOVFF  60D,65D
05078:  MOVLB  6
0507A:  CLRF   x64
0507C:  CLRF   x63
0507E:  MOVLW  80
05080:  MOVWF  x62
05082:  MOVLW  7E
05084:  MOVWF  x61
05086:  MOVLB  0
05088:  CALL   1C42
0508C:  BNC   50EA
....................                   { 
....................                      Ganancia+=Integral+1;//2 
0508E:  BCF    FD8.1
05090:  MOVFF  5C8,661
05094:  MOVFF  5C7,660
05098:  MOVFF  5C6,65F
0509C:  MOVFF  5C5,65E
050A0:  MOVLB  6
050A2:  CLRF   x65
050A4:  CLRF   x64
050A6:  CLRF   x63
050A8:  MOVLW  7F
050AA:  MOVWF  x62
050AC:  MOVLB  0
050AE:  CALL   1246
050B2:  BCF    FD8.1
050B4:  MOVFF  604,661
050B8:  MOVFF  603,660
050BC:  MOVFF  602,65F
050C0:  MOVFF  601,65E
050C4:  MOVFF  03,665
050C8:  MOVFF  02,664
050CC:  MOVFF  01,663
050D0:  MOVFF  00,662
050D4:  CALL   1246
050D8:  MOVFF  03,604
050DC:  MOVFF  02,603
050E0:  MOVFF  01,602
050E4:  MOVFF  00,601
....................                   } 
....................                   else 
050E8:  BRA    51A4
....................                   { 
....................                      if(Aumento<-0.1) 
050EA:  MOVFF  610,660
050EE:  MOVFF  60F,65F
050F2:  MOVFF  60E,65E
050F6:  MOVFF  60D,65D
050FA:  MOVLW  CD
050FC:  MOVLB  6
050FE:  MOVWF  x64
05100:  MOVLW  CC
05102:  MOVWF  x63
05104:  MOVWF  x62
05106:  MOVLW  7B
05108:  MOVWF  x61
0510A:  MOVLB  0
0510C:  CALL   1C42
05110:  BNC   514A
....................                      { 
....................                         Ganancia+=Integral;//1 
05112:  BCF    FD8.1
05114:  MOVFF  604,661
05118:  MOVFF  603,660
0511C:  MOVFF  602,65F
05120:  MOVFF  601,65E
05124:  MOVFF  5C8,665
05128:  MOVFF  5C7,664
0512C:  MOVFF  5C6,663
05130:  MOVFF  5C5,662
05134:  CALL   1246
05138:  MOVFF  03,604
0513C:  MOVFF  02,603
05140:  MOVFF  01,602
05144:  MOVFF  00,601
....................                      }    
....................                      else 
05148:  BRA    51A4
....................                      { 
....................                         Ganancia+=Integral-0.5;//0.5 
0514A:  BSF    FD8.1
0514C:  MOVFF  5C8,661
05150:  MOVFF  5C7,660
05154:  MOVFF  5C6,65F
05158:  MOVFF  5C5,65E
0515C:  MOVLB  6
0515E:  CLRF   x65
05160:  CLRF   x64
05162:  CLRF   x63
05164:  MOVLW  7E
05166:  MOVWF  x62
05168:  MOVLB  0
0516A:  CALL   1246
0516E:  BCF    FD8.1
05170:  MOVFF  604,661
05174:  MOVFF  603,660
05178:  MOVFF  602,65F
0517C:  MOVFF  601,65E
05180:  MOVFF  03,665
05184:  MOVFF  02,664
05188:  MOVFF  01,663
0518C:  MOVFF  00,662
05190:  CALL   1246
05194:  MOVFF  03,604
05198:  MOVFF  02,603
0519C:  MOVFF  01,602
051A0:  MOVFF  00,601
....................                      } 
....................                   } 
....................                } 
....................             }else{ 
051A4:  BRA    5352
....................                if(TiempoControl>=(Derivativo*6))//80 
051A6:  MOVFF  5CC,67C
051AA:  MOVFF  5CB,67B
051AE:  MOVFF  5CA,67A
051B2:  MOVFF  5C9,679
051B6:  MOVLB  6
051B8:  CLRF   x80
051BA:  CLRF   x7F
051BC:  MOVLW  40
051BE:  MOVWF  x7E
051C0:  MOVLW  81
051C2:  MOVWF  x7D
051C4:  MOVLB  0
051C6:  CALL   2D3C
051CA:  MOVFF  00,659
051CE:  MOVFF  01,65A
051D2:  MOVFF  02,65B
051D6:  MOVFF  03,65C
051DA:  MOVLB  6
051DC:  CLRF   x60
051DE:  MOVFF  59B,65F
051E2:  MOVLB  0
051E4:  CALL   10B2
051E8:  MOVFF  65C,660
051EC:  MOVFF  65B,65F
051F0:  MOVFF  65A,65E
051F4:  MOVFF  659,65D
051F8:  MOVFF  03,664
051FC:  MOVFF  02,663
05200:  MOVFF  01,662
05204:  MOVFF  00,661
05208:  CALL   1C42
0520C:  BC    5212
0520E:  BTFSS  FD8.2
05210:  BRA    5352
....................                { 
....................                   TiempoControl=0; 
05212:  MOVLB  5
05214:  CLRF   x9B
....................                   if(Aumento<-0.5) 
05216:  MOVFF  610,660
0521A:  MOVFF  60F,65F
0521E:  MOVFF  60E,65E
05222:  MOVFF  60D,65D
05226:  MOVLB  6
05228:  CLRF   x64
0522A:  CLRF   x63
0522C:  MOVLW  80
0522E:  MOVWF  x62
05230:  MOVLW  7E
05232:  MOVWF  x61
05234:  MOVLB  0
05236:  CALL   1C42
0523A:  BNC   5298
....................                   { 
....................                      Ganancia+=Integral+1;//2 
0523C:  BCF    FD8.1
0523E:  MOVFF  5C8,661
05242:  MOVFF  5C7,660
05246:  MOVFF  5C6,65F
0524A:  MOVFF  5C5,65E
0524E:  MOVLB  6
05250:  CLRF   x65
05252:  CLRF   x64
05254:  CLRF   x63
05256:  MOVLW  7F
05258:  MOVWF  x62
0525A:  MOVLB  0
0525C:  CALL   1246
05260:  BCF    FD8.1
05262:  MOVFF  604,661
05266:  MOVFF  603,660
0526A:  MOVFF  602,65F
0526E:  MOVFF  601,65E
05272:  MOVFF  03,665
05276:  MOVFF  02,664
0527A:  MOVFF  01,663
0527E:  MOVFF  00,662
05282:  CALL   1246
05286:  MOVFF  03,604
0528A:  MOVFF  02,603
0528E:  MOVFF  01,602
05292:  MOVFF  00,601
....................                   } 
....................                   else 
05296:  BRA    5352
....................                   { 
....................                      if(Aumento<-0.1) 
05298:  MOVFF  610,660
0529C:  MOVFF  60F,65F
052A0:  MOVFF  60E,65E
052A4:  MOVFF  60D,65D
052A8:  MOVLW  CD
052AA:  MOVLB  6
052AC:  MOVWF  x64
052AE:  MOVLW  CC
052B0:  MOVWF  x63
052B2:  MOVWF  x62
052B4:  MOVLW  7B
052B6:  MOVWF  x61
052B8:  MOVLB  0
052BA:  CALL   1C42
052BE:  BNC   52F8
....................                      { 
....................                         Ganancia+=Integral;//1 
052C0:  BCF    FD8.1
052C2:  MOVFF  604,661
052C6:  MOVFF  603,660
052CA:  MOVFF  602,65F
052CE:  MOVFF  601,65E
052D2:  MOVFF  5C8,665
052D6:  MOVFF  5C7,664
052DA:  MOVFF  5C6,663
052DE:  MOVFF  5C5,662
052E2:  CALL   1246
052E6:  MOVFF  03,604
052EA:  MOVFF  02,603
052EE:  MOVFF  01,602
052F2:  MOVFF  00,601
....................                      }    
....................                      else 
052F6:  BRA    5352
....................                      { 
....................                         Ganancia+=Integral-0.5;//0.5 
052F8:  BSF    FD8.1
052FA:  MOVFF  5C8,661
052FE:  MOVFF  5C7,660
05302:  MOVFF  5C6,65F
05306:  MOVFF  5C5,65E
0530A:  MOVLB  6
0530C:  CLRF   x65
0530E:  CLRF   x64
05310:  CLRF   x63
05312:  MOVLW  7E
05314:  MOVWF  x62
05316:  MOVLB  0
05318:  CALL   1246
0531C:  BCF    FD8.1
0531E:  MOVFF  604,661
05322:  MOVFF  603,660
05326:  MOVFF  602,65F
0532A:  MOVFF  601,65E
0532E:  MOVFF  03,665
05332:  MOVFF  02,664
05336:  MOVFF  01,663
0533A:  MOVFF  00,662
0533E:  CALL   1246
05342:  MOVFF  03,604
05346:  MOVFF  02,603
0534A:  MOVFF  01,602
0534E:  MOVFF  00,601
....................                      } 
....................                   } 
....................                } 
....................             } 
....................          } 
....................       }else if(error<0.0){ 
05352:  BRA    5424
05354:  MOVFF  5F4,660
05358:  MOVFF  5F3,65F
0535C:  MOVFF  5F2,65E
05360:  MOVFF  5F1,65D
05364:  MOVLB  6
05366:  CLRF   x64
05368:  CLRF   x63
0536A:  CLRF   x62
0536C:  CLRF   x61
0536E:  MOVLB  0
05370:  CALL   1C42
05374:  BNC   5424
....................          if(TiempoControl>=(Derivativo*2)){ 
05376:  MOVFF  5CC,67C
0537A:  MOVFF  5CB,67B
0537E:  MOVFF  5CA,67A
05382:  MOVFF  5C9,679
05386:  MOVLB  6
05388:  CLRF   x80
0538A:  CLRF   x7F
0538C:  CLRF   x7E
0538E:  MOVLW  80
05390:  MOVWF  x7D
05392:  MOVLB  0
05394:  CALL   2D3C
05398:  MOVFF  00,659
0539C:  MOVFF  01,65A
053A0:  MOVFF  02,65B
053A4:  MOVFF  03,65C
053A8:  MOVLB  6
053AA:  CLRF   x60
053AC:  MOVFF  59B,65F
053B0:  MOVLB  0
053B2:  CALL   10B2
053B6:  MOVFF  65C,660
053BA:  MOVFF  65B,65F
053BE:  MOVFF  65A,65E
053C2:  MOVFF  659,65D
053C6:  MOVFF  03,664
053CA:  MOVFF  02,663
053CE:  MOVFF  01,662
053D2:  MOVFF  00,661
053D6:  CALL   1C42
053DA:  BC    53DE
053DC:  BNZ   5424
....................             TiempoControl=0; 
053DE:  MOVLB  5
053E0:  CLRF   x9B
....................             Ganancia-=0.2; 
053E2:  BSF    FD8.1
053E4:  MOVFF  604,661
053E8:  MOVFF  603,660
053EC:  MOVFF  602,65F
053F0:  MOVFF  601,65E
053F4:  MOVLW  CD
053F6:  MOVLB  6
053F8:  MOVWF  x65
053FA:  MOVLW  CC
053FC:  MOVWF  x64
053FE:  MOVLW  4C
05400:  MOVWF  x63
05402:  MOVLW  7C
05404:  MOVWF  x62
05406:  MOVLB  0
05408:  CALL   1246
0540C:  MOVFF  03,604
05410:  MOVFF  02,603
05414:  MOVFF  01,602
05418:  MOVFF  00,601
....................             flag_ajuste=0; 
0541C:  MOVLB  5
0541E:  BCF    x87.6
....................             flag_ajuste2=0; 
05420:  BCF    x87.7
05422:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(Ganancia<0.1) 
05424:  MOVFF  604,660
05428:  MOVFF  603,65F
0542C:  MOVFF  602,65E
05430:  MOVFF  601,65D
05434:  MOVLW  CD
05436:  MOVLB  6
05438:  MOVWF  x64
0543A:  MOVLW  CC
0543C:  MOVWF  x63
0543E:  MOVLW  4C
05440:  MOVWF  x62
05442:  MOVLW  7B
05444:  MOVWF  x61
05446:  MOVLB  0
05448:  CALL   1C42
0544C:  BNC   5462
....................       { 
....................          Ganancia=0.1; 
0544E:  MOVLW  CD
05450:  MOVLB  6
05452:  MOVWF  x04
05454:  MOVLW  CC
05456:  MOVWF  x03
05458:  MOVLW  4C
0545A:  MOVWF  x02
0545C:  MOVLW  7B
0545E:  MOVWF  x01
05460:  MOVLB  0
....................       } 
....................       if(Ganancia>Gananciamax) 
05462:  MOVFF  5BC,660
05466:  MOVFF  5BB,65F
0546A:  MOVFF  5BA,65E
0546E:  MOVFF  5B9,65D
05472:  MOVFF  604,664
05476:  MOVFF  603,663
0547A:  MOVFF  602,662
0547E:  MOVFF  601,661
05482:  CALL   1C42
05486:  BNC   5498
....................       { 
....................          Ganancia=Gananciamax; 
05488:  MOVFF  5BC,604
0548C:  MOVFF  5BB,603
05490:  MOVFF  5BA,602
05494:  MOVFF  5B9,601
....................       } 
....................     
....................       if(error<0.0)     // Anti Wind_DOWN     
05498:  MOVFF  5F4,660
0549C:  MOVFF  5F3,65F
054A0:  MOVFF  5F2,65E
054A4:  MOVFF  5F1,65D
054A8:  MOVLB  6
054AA:  CLRF   x64
054AC:  CLRF   x63
054AE:  CLRF   x62
054B0:  CLRF   x61
054B2:  MOVLB  0
054B4:  CALL   1C42
054B8:  BNC   54C6
....................       { 
....................          error=0.0; 
054BA:  MOVLB  5
054BC:  CLRF   xF4
054BE:  CLRF   xF3
054C0:  CLRF   xF2
054C2:  CLRF   xF1
054C4:  MOVLB  0
....................       } 
....................       //tmp=(Setpoint-Prom)*Ganancia;  // Control Proporcional. 
....................       tmp=error*Ganancia;  // Control Proporcional. 
054C6:  MOVFF  5F4,67C
054CA:  MOVFF  5F3,67B
054CE:  MOVFF  5F2,67A
054D2:  MOVFF  5F1,679
054D6:  MOVFF  604,680
054DA:  MOVFF  603,67F
054DE:  MOVFF  602,67E
054E2:  MOVFF  601,67D
054E6:  CALL   2D3C
054EA:  MOVFF  03,600
054EE:  MOVFF  02,5FF
054F2:  MOVFF  01,5FE
054F6:  MOVFF  00,5FD
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
054FA:  MOVFF  61C,660
054FE:  MOVFF  61B,65F
05502:  MOVFF  61A,65E
05506:  MOVFF  619,65D
0550A:  MOVFF  600,664
0550E:  MOVFF  5FF,663
05512:  MOVFF  5FE,662
05516:  MOVFF  5FD,661
0551A:  CALL   1C42
0551E:  BNC   5530
....................       { 
....................          tmp=Setpoint; 
05520:  MOVFF  61C,600
05524:  MOVFF  61B,5FF
05528:  MOVFF  61A,5FE
0552C:  MOVFF  619,5FD
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
05530:  MOVFF  600,660
05534:  MOVFF  5FF,65F
05538:  MOVFF  5FE,65E
0553C:  MOVFF  5FD,65D
05540:  MOVLB  6
05542:  CLRF   x64
05544:  CLRF   x63
05546:  CLRF   x62
05548:  CLRF   x61
0554A:  MOVLB  0
0554C:  CALL   1C42
05550:  BNC   5560
....................       { 
....................          tmp=0.0; 
05552:  MOVLB  6
05554:  CLRF   x00
05556:  MOVLB  5
05558:  CLRF   xFF
0555A:  CLRF   xFE
0555C:  CLRF   xFD
0555E:  MOVLB  0
....................       } 
....................     
....................       Tpulso=(tmp/Setpoint)*Tciclo; 
05560:  MOVFF  600,65D
05564:  MOVFF  5FF,65C
05568:  MOVFF  5FE,65B
0556C:  MOVFF  5FD,65A
05570:  MOVFF  61C,661
05574:  MOVFF  61B,660
05578:  MOVFF  61A,65F
0557C:  MOVFF  619,65E
05580:  CALL   10E8
05584:  MOVFF  00,659
05588:  MOVFF  01,65A
0558C:  MOVFF  02,65B
05590:  MOVFF  03,65C
05594:  MOVFF  03,67C
05598:  MOVFF  02,67B
0559C:  MOVFF  01,67A
055A0:  MOVFF  00,679
055A4:  MOVFF  5EC,680
055A8:  MOVFF  5EB,67F
055AC:  MOVFF  5EA,67E
055B0:  MOVFF  5E9,67D
055B4:  CALL   2D3C
055B8:  MOVFF  03,5F0
055BC:  MOVFF  02,5EF
055C0:  MOVFF  01,5EE
055C4:  MOVFF  00,5ED
....................        
....................       if(error<0.9) 
055C8:  MOVFF  5F4,660
055CC:  MOVFF  5F3,65F
055D0:  MOVFF  5F2,65E
055D4:  MOVFF  5F1,65D
055D8:  MOVLW  66
055DA:  MOVLB  6
055DC:  MOVWF  x64
055DE:  MOVWF  x63
055E0:  MOVWF  x62
055E2:  MOVLW  7E
055E4:  MOVWF  x61
055E6:  MOVLB  0
055E8:  CALL   1C42
055EC:  BTFSS  FD8.0
055EE:  BRA    56FC
....................       { 
....................          if(error<=0.8){    
055F0:  MOVFF  5F4,660
055F4:  MOVFF  5F3,65F
055F8:  MOVFF  5F2,65E
055FC:  MOVFF  5F1,65D
05600:  MOVLW  CD
05602:  MOVLB  6
05604:  MOVWF  x64
05606:  MOVLW  CC
05608:  MOVWF  x63
0560A:  MOVLW  4C
0560C:  MOVWF  x62
0560E:  MOVLW  7E
05610:  MOVWF  x61
05612:  MOVLB  0
05614:  CALL   1C42
05618:  BC    561C
0561A:  BNZ   5638
....................             if(flag_ajuste==0){ 
0561C:  MOVLB  5
0561E:  BTFSC  x87.6
05620:  BRA    5638
....................                TpulsoMax=Tpulso; 
05622:  MOVFF  5F0,618
05626:  MOVFF  5EF,617
0562A:  MOVFF  5EE,616
0562E:  MOVFF  5ED,615
....................                flag_ajuste=1;   
05632:  BSF    x87.6
....................                Ajusto=5; 
05634:  MOVLW  05
05636:  MOVWF  x91
....................             } 
....................          } 
....................           
....................          if(error<=0.4){    
05638:  MOVFF  5F4,660
0563C:  MOVFF  5F3,65F
05640:  MOVFF  5F2,65E
05644:  MOVFF  5F1,65D
05648:  MOVLW  CD
0564A:  MOVLB  6
0564C:  MOVWF  x64
0564E:  MOVLW  CC
05650:  MOVWF  x63
05652:  MOVLW  4C
05654:  MOVWF  x62
05656:  MOVLW  7D
05658:  MOVWF  x61
0565A:  MOVLB  0
0565C:  CALL   1C42
05660:  BC    5664
05662:  BNZ   5680
....................             if(flag_ajuste2==0){ 
05664:  MOVLB  5
05666:  BTFSC  x87.7
05668:  BRA    5680
....................                Tpulsomin=Tpulso; 
0566A:  MOVFF  5F0,5B8
0566E:  MOVFF  5EF,5B7
05672:  MOVFF  5EE,5B6
05676:  MOVFF  5ED,5B5
....................                flag_ajuste2=1;            
0567A:  BSF    x87.7
....................                Ajusto=5; 
0567C:  MOVLW  05
0567E:  MOVWF  x91
....................             } 
....................          } 
....................           
....................          if(flag_ajuste2==1){ 
05680:  MOVLB  5
05682:  BTFSS  x87.7
05684:  BRA    56C0
....................             if(Tpulso<Tpulsomin){ 
05686:  MOVFF  5F0,660
0568A:  MOVFF  5EF,65F
0568E:  MOVFF  5EE,65E
05692:  MOVFF  5ED,65D
05696:  MOVFF  5B8,664
0569A:  MOVFF  5B7,663
0569E:  MOVFF  5B6,662
056A2:  MOVFF  5B5,661
056A6:  MOVLB  0
056A8:  CALL   1C42
056AC:  BNC   56BE
....................                Tpulso=Tpulsomin; 
056AE:  MOVFF  5B8,5F0
056B2:  MOVFF  5B7,5EF
056B6:  MOVFF  5B6,5EE
056BA:  MOVFF  5B5,5ED
056BE:  MOVLB  5
....................             } 
....................          } 
....................          if(flag_ajuste==1){    
056C0:  BTFSS  x87.6
056C2:  BRA    56FE
....................             if(Tpulso>TpulsoMax){ 
056C4:  MOVFF  618,660
056C8:  MOVFF  617,65F
056CC:  MOVFF  616,65E
056D0:  MOVFF  615,65D
056D4:  MOVFF  5F0,664
056D8:  MOVFF  5EF,663
056DC:  MOVFF  5EE,662
056E0:  MOVFF  5ED,661
056E4:  MOVLB  0
056E6:  CALL   1C42
056EA:  BNC   56FC
....................                Tpulso=TpulsoMax; 
056EC:  MOVFF  618,5F0
056F0:  MOVFF  617,5EF
056F4:  MOVFF  616,5EE
056F8:  MOVFF  615,5ED
056FC:  MOVLB  5
....................             }  
....................          } 
....................       } 
....................       Tp=(Tpulso/0.005); 
056FE:  MOVFF  5F0,65D
05702:  MOVFF  5EF,65C
05706:  MOVFF  5EE,65B
0570A:  MOVFF  5ED,65A
0570E:  MOVLW  0A
05710:  MOVLB  6
05712:  MOVWF  x61
05714:  MOVLW  D7
05716:  MOVWF  x60
05718:  MOVLW  23
0571A:  MOVWF  x5F
0571C:  MOVLW  77
0571E:  MOVWF  x5E
05720:  MOVLB  0
05722:  CALL   10E8
05726:  MOVFF  03,65C
0572A:  MOVFF  02,65B
0572E:  MOVFF  01,65A
05732:  MOVFF  00,659
05736:  CALL   4342
0573A:  MOVFF  02,5AE
0573E:  MOVFF  01,5AD
....................       Tc=(Tciclo/0.005); 
05742:  MOVFF  5EC,65D
05746:  MOVFF  5EB,65C
0574A:  MOVFF  5EA,65B
0574E:  MOVFF  5E9,65A
05752:  MOVLW  0A
05754:  MOVLB  6
05756:  MOVWF  x61
05758:  MOVLW  D7
0575A:  MOVWF  x60
0575C:  MOVLW  23
0575E:  MOVWF  x5F
05760:  MOVLW  77
05762:  MOVWF  x5E
05764:  MOVLB  0
05766:  CALL   10E8
0576A:  MOVFF  03,65C
0576E:  MOVFF  02,65B
05772:  MOVFF  01,65A
05776:  MOVFF  00,659
0577A:  CALL   4342
0577E:  MOVFF  02,5B0
05782:  MOVFF  01,5AF
....................       Controlando=1;      
05786:  MOVLW  01
05788:  MOVLB  5
0578A:  MOVWF  x90
....................     
.................... //--------------------------------------------------------------------------------------------------------------------//    
....................    
.................... } 
0578C:  MOVLB  0
0578E:  RETLW  00
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
02BEA:  MOVLB  6
02BEC:  MOVFF  661,01
02BF0:  MOVFF  662,03
02BF4:  MOVFF  661,667
02BF8:  MOVFF  662,668
02BFC:  MOVLW  06
02BFE:  MOVWF  FEA
02C00:  MOVLW  39
02C02:  MOVWF  FE9
02C04:  MOVFF  662,FE2
02C08:  MOVFF  661,FE1
02C0C:  MOVF   FE7,F
02C0E:  MOVFF  FE6,FEE
02C12:  BNZ   2C0C
....................    if(sombreado==2) 
02C14:  MOVF   x65,W
02C16:  SUBLW  02
02C18:  BNZ   2C42
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
02C1A:  MOVLW  01
02C1C:  ADDWF  x63,W
02C1E:  MOVWF  x67
02C20:  MOVLW  01
02C22:  ADDWF  x64,W
02C24:  MOVWF  x68
02C26:  MOVFF  667,672
02C2A:  MOVWF  x73
02C2C:  MOVLW  06
02C2E:  MOVWF  x75
02C30:  MOVLW  39
02C32:  MOVWF  x74
02C34:  MOVFF  666,676
02C38:  MOVLW  01
02C3A:  MOVWF  x77
02C3C:  MOVLB  0
02C3E:  RCALL  2832
02C40:  MOVLB  6
....................    if(sombreado==1) 
02C42:  DECFSZ x65,W
02C44:  BRA    2C90
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
02C46:  MOVF   x66,W
02C48:  MULLW  08
02C4A:  MOVF   FF3,W
02C4C:  ADDWF  x64,W
02C4E:  MOVWF  x67
02C50:  CLRF   x72
02C52:  MOVFF  664,673
02C56:  MOVLW  7F
02C58:  MOVWF  x74
02C5A:  MOVFF  667,675
02C5E:  MOVLW  01
02C60:  MOVWF  x76
02C62:  MOVWF  x77
02C64:  MOVLB  0
02C66:  RCALL  2B28
02C68:  MOVLW  01
02C6A:  MOVLB  6
02C6C:  ADDWF  x63,W
02C6E:  MOVWF  x67
02C70:  MOVLW  01
02C72:  ADDWF  x64,W
02C74:  MOVWF  x68
02C76:  MOVFF  667,672
02C7A:  MOVWF  x73
02C7C:  MOVLW  06
02C7E:  MOVWF  x75
02C80:  MOVLW  39
02C82:  MOVWF  x74
02C84:  MOVFF  666,676
02C88:  CLRF   x77
02C8A:  MOVLB  0
02C8C:  RCALL  2832
02C8E:  MOVLB  6
....................    if(sombreado==0) 
02C90:  MOVF   x65,F
02C92:  BNZ   2CDE
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
02C94:  MOVF   x66,W
02C96:  MULLW  08
02C98:  MOVF   FF3,W
02C9A:  ADDWF  x64,W
02C9C:  MOVWF  x67
02C9E:  CLRF   x72
02CA0:  MOVFF  664,673
02CA4:  MOVLW  7F
02CA6:  MOVWF  x74
02CA8:  MOVFF  667,675
02CAC:  MOVLW  01
02CAE:  MOVWF  x76
02CB0:  CLRF   x77
02CB2:  MOVLB  0
02CB4:  RCALL  2B28
02CB6:  MOVLW  01
02CB8:  MOVLB  6
02CBA:  ADDWF  x63,W
02CBC:  MOVWF  x67
02CBE:  MOVLW  01
02CC0:  ADDWF  x64,W
02CC2:  MOVWF  x68
02CC4:  MOVFF  667,672
02CC8:  MOVWF  x73
02CCA:  MOVLW  06
02CCC:  MOVWF  x75
02CCE:  MOVLW  39
02CD0:  MOVWF  x74
02CD2:  MOVFF  666,676
02CD6:  MOVLW  01
02CD8:  MOVWF  x77
02CDA:  MOVLB  0
02CDC:  RCALL  2832
....................    glcd_update(); 
02CDE:  MOVLB  0
02CE0:  RCALL  2616
.................... } 
02CE2:  RETLW  00
....................  
.................... void displayTemps(char palabra[30], float digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==1) 
*
0486C:  MOVLB  6
0486E:  DECFSZ x61,W
04870:  BRA    49AA
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
04872:  MOVLW  06
04874:  MOVWF  x58
04876:  MOVLW  63
04878:  MOVWF  x57
0487A:  MOVLW  42
0487C:  MOVWF  FE9
0487E:  MOVFF  65E,66F
04882:  MOVFF  65D,66E
04886:  MOVFF  65C,66D
0488A:  MOVFF  65B,66C
0488E:  MOVLW  01
04890:  MOVWF  x70
04892:  MOVLB  0
04894:  RCALL  46B8
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, ON); 
04896:  MOVLW  02
04898:  MOVLB  6
0489A:  SUBWF  x60,W
0489C:  MOVWF  x6C
0489E:  MOVF   x62,W
048A0:  MULLW  08
048A2:  MOVF   FF3,W
048A4:  ADDWF  x60,W
048A6:  MOVWF  x6D
048A8:  CLRF   x72
048AA:  MOVFF  66C,673
048AE:  MOVLW  7F
048B0:  MOVWF  x74
048B2:  MOVFF  66D,675
048B6:  MOVLW  01
048B8:  MOVWF  x76
048BA:  MOVWF  x77
048BC:  MOVLB  0
048BE:  CALL   2B28
....................       strcpy(Menus.Letra,palabra); 
048C2:  MOVLB  6
048C4:  MOVFF  659,01
048C8:  MOVFF  65A,03
048CC:  MOVFF  659,66C
048D0:  MOVFF  65A,66D
048D4:  MOVLW  06
048D6:  MOVWF  FEA
048D8:  MOVLW  39
048DA:  MOVWF  FE9
048DC:  MOVFF  65A,FE2
048E0:  MOVFF  659,FE1
048E4:  MOVF   FE7,F
048E6:  MOVFF  FE6,FEE
048EA:  BNZ   48E4
....................       glcd_text57(x+90, y+1, voltage, tamano, OFF); 
048EC:  MOVLW  5A
048EE:  ADDWF  x5F,W
048F0:  MOVWF  x6C
048F2:  MOVLW  01
048F4:  ADDWF  x60,W
048F6:  MOVWF  x6D
048F8:  MOVFF  66C,672
048FC:  MOVWF  x73
048FE:  MOVLW  06
04900:  MOVWF  x75
04902:  MOVLW  63
04904:  MOVWF  x74
04906:  MOVFF  662,676
0490A:  CLRF   x77
0490C:  MOVLB  0
0490E:  CALL   2832
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF); 
04912:  MOVLW  01
04914:  MOVLB  6
04916:  ADDWF  x5F,W
04918:  MOVWF  x6C
0491A:  MOVLW  01
0491C:  ADDWF  x60,W
0491E:  MOVWF  x6D
04920:  MOVFF  66C,672
04924:  MOVWF  x73
04926:  MOVLW  06
04928:  MOVWF  x75
0492A:  MOVLW  39
0492C:  MOVWF  x74
0492E:  MOVFF  662,676
04932:  CLRF   x77
04934:  MOVLB  0
04936:  CALL   2832
....................       strcpy(Menus.Letra,"C"); 
0493A:  MOVLW  06
0493C:  MOVWF  FEA
0493E:  MOVLW  39
04940:  MOVWF  FE9
04942:  MOVFF  FF2,66C
04946:  BCF    FF2.7
04948:  MOVLW  00
0494A:  CALL   06D2
0494E:  TBLRD*-
04950:  TBLRD*+
04952:  MOVF   FF5,W
04954:  MOVWF  FEE
04956:  IORLW  00
04958:  BNZ   4950
0495A:  MOVLB  6
0495C:  BTFSC  x6C.7
0495E:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, OFF); 
04960:  MOVLW  78
04962:  ADDWF  x5F,W
04964:  MOVWF  x6C
04966:  MOVLW  01
04968:  ADDWF  x60,W
0496A:  MOVWF  x6D
0496C:  MOVFF  66C,672
04970:  MOVWF  x73
04972:  MOVLW  06
04974:  MOVWF  x75
04976:  MOVLW  39
04978:  MOVWF  x74
0497A:  MOVFF  662,676
0497E:  CLRF   x77
04980:  MOVLB  0
04982:  CALL   2832
....................       glcd_circle(x+115,y-1,1,NO,OFF); 
04986:  MOVLW  73
04988:  MOVLB  6
0498A:  ADDWF  x5F,W
0498C:  MOVWF  x6C
0498E:  MOVLW  01
04990:  SUBWF  x60,W
04992:  MOVWF  x6D
04994:  MOVFF  66C,66E
04998:  MOVWF  x6F
0499A:  MOVLW  01
0499C:  MOVWF  x70
0499E:  CLRF   x71
049A0:  CLRF   x72
049A2:  MOVLB  0
049A4:  CALL   4118
049A8:  MOVLB  6
....................    } 
....................    if(sombreado==0) 
049AA:  MOVF   x61,F
049AC:  BTFSS  FD8.2
049AE:  BRA    4AEC
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
049B0:  MOVLW  06
049B2:  MOVWF  x58
049B4:  MOVLW  63
049B6:  MOVWF  x57
049B8:  MOVLW  42
049BA:  MOVWF  FE9
049BC:  MOVFF  65E,66F
049C0:  MOVFF  65D,66E
049C4:  MOVFF  65C,66D
049C8:  MOVFF  65B,66C
049CC:  MOVLW  01
049CE:  MOVWF  x70
049D0:  MOVLB  0
049D2:  RCALL  46B8
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, OFF); 
049D4:  MOVLW  02
049D6:  MOVLB  6
049D8:  SUBWF  x60,W
049DA:  MOVWF  x6C
049DC:  MOVF   x62,W
049DE:  MULLW  08
049E0:  MOVF   FF3,W
049E2:  ADDWF  x60,W
049E4:  MOVWF  x6D
049E6:  CLRF   x72
049E8:  MOVFF  66C,673
049EC:  MOVLW  7F
049EE:  MOVWF  x74
049F0:  MOVFF  66D,675
049F4:  MOVLW  01
049F6:  MOVWF  x76
049F8:  CLRF   x77
049FA:  MOVLB  0
049FC:  CALL   2B28
....................       strcpy(Menus.Letra,palabra); 
04A00:  MOVLB  6
04A02:  MOVFF  659,01
04A06:  MOVFF  65A,03
04A0A:  MOVFF  659,66C
04A0E:  MOVFF  65A,66D
04A12:  MOVLW  06
04A14:  MOVWF  FEA
04A16:  MOVLW  39
04A18:  MOVWF  FE9
04A1A:  MOVFF  65A,FE2
04A1E:  MOVFF  659,FE1
04A22:  MOVF   FE7,F
04A24:  MOVFF  FE6,FEE
04A28:  BNZ   4A22
....................       glcd_text57(x+90, y+1, voltage, tamano, ON); 
04A2A:  MOVLW  5A
04A2C:  ADDWF  x5F,W
04A2E:  MOVWF  x6C
04A30:  MOVLW  01
04A32:  ADDWF  x60,W
04A34:  MOVWF  x6D
04A36:  MOVFF  66C,672
04A3A:  MOVWF  x73
04A3C:  MOVLW  06
04A3E:  MOVWF  x75
04A40:  MOVLW  63
04A42:  MOVWF  x74
04A44:  MOVFF  662,676
04A48:  MOVLW  01
04A4A:  MOVWF  x77
04A4C:  MOVLB  0
04A4E:  CALL   2832
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, ON); 
04A52:  MOVLW  01
04A54:  MOVLB  6
04A56:  ADDWF  x5F,W
04A58:  MOVWF  x6C
04A5A:  MOVLW  01
04A5C:  ADDWF  x60,W
04A5E:  MOVWF  x6D
04A60:  MOVFF  66C,672
04A64:  MOVWF  x73
04A66:  MOVLW  06
04A68:  MOVWF  x75
04A6A:  MOVLW  39
04A6C:  MOVWF  x74
04A6E:  MOVFF  662,676
04A72:  MOVLW  01
04A74:  MOVWF  x77
04A76:  MOVLB  0
04A78:  CALL   2832
....................       strcpy(Menus.Letra,"C"); 
04A7C:  MOVLW  06
04A7E:  MOVWF  FEA
04A80:  MOVLW  39
04A82:  MOVWF  FE9
04A84:  MOVFF  FF2,66C
04A88:  BCF    FF2.7
04A8A:  MOVLW  00
04A8C:  CALL   06D2
04A90:  TBLRD*-
04A92:  TBLRD*+
04A94:  MOVF   FF5,W
04A96:  MOVWF  FEE
04A98:  IORLW  00
04A9A:  BNZ   4A92
04A9C:  MOVLB  6
04A9E:  BTFSC  x6C.7
04AA0:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, ON); 
04AA2:  MOVLW  78
04AA4:  ADDWF  x5F,W
04AA6:  MOVWF  x6C
04AA8:  MOVLW  01
04AAA:  ADDWF  x60,W
04AAC:  MOVWF  x6D
04AAE:  MOVFF  66C,672
04AB2:  MOVWF  x73
04AB4:  MOVLW  06
04AB6:  MOVWF  x75
04AB8:  MOVLW  39
04ABA:  MOVWF  x74
04ABC:  MOVFF  662,676
04AC0:  MOVLW  01
04AC2:  MOVWF  x77
04AC4:  MOVLB  0
04AC6:  CALL   2832
....................       glcd_circle(x+115,y-1,1,NO,ON); 
04ACA:  MOVLW  73
04ACC:  MOVLB  6
04ACE:  ADDWF  x5F,W
04AD0:  MOVWF  x6C
04AD2:  MOVLW  01
04AD4:  SUBWF  x60,W
04AD6:  MOVWF  x6D
04AD8:  MOVFF  66C,66E
04ADC:  MOVWF  x6F
04ADE:  MOVLW  01
04AE0:  MOVWF  x70
04AE2:  CLRF   x71
04AE4:  MOVWF  x72
04AE6:  MOVLB  0
04AE8:  CALL   4118
....................    } 
....................    glcd_update(); 
04AEC:  MOVLB  0
04AEE:  CALL   2616
.................... } 
04AF2:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
04B7A:  MOVLB  6
04B7C:  MOVF   x5D,W
04B7E:  SUBLW  02
04B80:  BNZ   4BF2
....................    { 
....................       sprintf(voltage, "%03u", digito); 
04B82:  MOVLW  06
04B84:  MOVWF  x58
04B86:  MOVLW  5F
04B88:  MOVWF  x57
04B8A:  MOVFF  65A,668
04B8E:  MOVLW  03
04B90:  MOVWF  x69
04B92:  MOVLB  0
04B94:  RCALL  4AF4
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
04B96:  MOVLB  6
04B98:  MOVF   x5E,W
04B9A:  MULLW  12
04B9C:  MOVF   FF3,W
04B9E:  ADDWF  x5B,W
04BA0:  MOVWF  x68
04BA2:  MOVF   x5E,W
04BA4:  MULLW  08
04BA6:  MOVF   FF3,W
04BA8:  ADDWF  x5C,W
04BAA:  MOVWF  x69
04BAC:  MOVFF  65B,672
04BB0:  MOVFF  65C,673
04BB4:  MOVFF  668,674
04BB8:  MOVWF  x75
04BBA:  MOVLW  01
04BBC:  MOVWF  x76
04BBE:  MOVWF  x77
04BC0:  MOVLB  0
04BC2:  CALL   2B28
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
04BC6:  MOVLW  01
04BC8:  MOVLB  6
04BCA:  ADDWF  x5B,W
04BCC:  MOVWF  x68
04BCE:  MOVLW  01
04BD0:  ADDWF  x5C,W
04BD2:  MOVWF  x69
04BD4:  MOVFF  668,672
04BD8:  MOVWF  x73
04BDA:  MOVLW  06
04BDC:  MOVWF  x75
04BDE:  MOVLW  5F
04BE0:  MOVWF  x74
04BE2:  MOVFF  65E,676
04BE6:  CLRF   x77
04BE8:  MOVLB  0
04BEA:  CALL   2832
....................    } 
....................    else 
04BEE:  BRA    4D36
04BF0:  MOVLB  6
....................    { 
....................       if(sombreado==3) 
04BF2:  MOVF   x5D,W
04BF4:  SUBLW  03
04BF6:  BNZ   4C68
....................       { 
....................          sprintf(voltage, "%03u", digito); 
04BF8:  MOVLW  06
04BFA:  MOVWF  x58
04BFC:  MOVLW  5F
04BFE:  MOVWF  x57
04C00:  MOVFF  65A,668
04C04:  MOVLW  03
04C06:  MOVWF  x69
04C08:  MOVLB  0
04C0A:  RCALL  4AF4
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
04C0C:  MOVLB  6
04C0E:  MOVF   x5E,W
04C10:  MULLW  12
04C12:  MOVF   FF3,W
04C14:  ADDWF  x5B,W
04C16:  MOVWF  x68
04C18:  MOVF   x5E,W
04C1A:  MULLW  08
04C1C:  MOVF   FF3,W
04C1E:  ADDWF  x5C,W
04C20:  MOVWF  x69
04C22:  MOVFF  65B,672
04C26:  MOVFF  65C,673
04C2A:  MOVFF  668,674
04C2E:  MOVWF  x75
04C30:  MOVLW  01
04C32:  MOVWF  x76
04C34:  CLRF   x77
04C36:  MOVLB  0
04C38:  CALL   2B28
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
04C3C:  MOVLW  01
04C3E:  MOVLB  6
04C40:  ADDWF  x5B,W
04C42:  MOVWF  x68
04C44:  MOVLW  01
04C46:  ADDWF  x5C,W
04C48:  MOVWF  x69
04C4A:  MOVFF  668,672
04C4E:  MOVWF  x73
04C50:  MOVLW  06
04C52:  MOVWF  x75
04C54:  MOVLW  5F
04C56:  MOVWF  x74
04C58:  MOVFF  65E,676
04C5C:  MOVLW  01
04C5E:  MOVWF  x77
04C60:  MOVLB  0
04C62:  CALL   2832
04C66:  MOVLB  6
....................       } 
....................       sprintf(voltage, "%u", digito); 
04C68:  MOVLW  06
04C6A:  MOVWF  x58
04C6C:  MOVLW  5F
04C6E:  MOVWF  x57
04C70:  MOVFF  65A,668
04C74:  MOVLW  1B
04C76:  MOVWF  x69
04C78:  MOVLB  0
04C7A:  RCALL  4AF4
....................       if(sombreado==1) 
04C7C:  MOVLB  6
04C7E:  DECFSZ x5D,W
04C80:  BRA    4CDA
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
04C82:  MOVF   x5E,W
04C84:  MULLW  05
04C86:  MOVF   FF3,W
04C88:  ADDWF  x5B,W
04C8A:  MOVWF  x68
04C8C:  MOVF   x5E,W
04C8E:  MULLW  08
04C90:  MOVF   FF3,W
04C92:  ADDWF  x5C,W
04C94:  MOVWF  x69
04C96:  MOVFF  65B,672
04C9A:  MOVFF  65C,673
04C9E:  MOVFF  668,674
04CA2:  MOVWF  x75
04CA4:  MOVLW  01
04CA6:  MOVWF  x76
04CA8:  MOVWF  x77
04CAA:  MOVLB  0
04CAC:  CALL   2B28
04CB0:  MOVLW  01
04CB2:  MOVLB  6
04CB4:  ADDWF  x5B,W
04CB6:  MOVWF  x68
04CB8:  MOVLW  01
04CBA:  ADDWF  x5C,W
04CBC:  MOVWF  x69
04CBE:  MOVFF  668,672
04CC2:  MOVWF  x73
04CC4:  MOVLW  06
04CC6:  MOVWF  x75
04CC8:  MOVLW  5F
04CCA:  MOVWF  x74
04CCC:  MOVFF  65E,676
04CD0:  CLRF   x77
04CD2:  MOVLB  0
04CD4:  CALL   2832
04CD8:  MOVLB  6
....................       if(sombreado==0) 
04CDA:  MOVF   x5D,F
04CDC:  BNZ   4D38
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
04CDE:  MOVF   x5E,W
04CE0:  MULLW  05
04CE2:  MOVF   FF3,W
04CE4:  ADDWF  x5B,W
04CE6:  MOVWF  x68
04CE8:  MOVF   x5E,W
04CEA:  MULLW  08
04CEC:  MOVF   FF3,W
04CEE:  ADDWF  x5C,W
04CF0:  MOVWF  x69
04CF2:  MOVFF  65B,672
04CF6:  MOVFF  65C,673
04CFA:  MOVFF  668,674
04CFE:  MOVWF  x75
04D00:  MOVLW  01
04D02:  MOVWF  x76
04D04:  CLRF   x77
04D06:  MOVLB  0
04D08:  CALL   2B28
04D0C:  MOVLW  01
04D0E:  MOVLB  6
04D10:  ADDWF  x5B,W
04D12:  MOVWF  x68
04D14:  MOVLW  01
04D16:  ADDWF  x5C,W
04D18:  MOVWF  x69
04D1A:  MOVFF  668,672
04D1E:  MOVWF  x73
04D20:  MOVLW  06
04D22:  MOVWF  x75
04D24:  MOVLW  5F
04D26:  MOVWF  x74
04D28:  MOVFF  65E,676
04D2C:  MOVLW  01
04D2E:  MOVWF  x77
04D30:  MOVLB  0
04D32:  CALL   2832
04D36:  MOVLB  6
....................    } 
....................    glcd_update(); 
04D38:  MOVLB  0
04D3A:  CALL   2616
.................... } 
04D3E:  RETLW  00
....................  
.................... void displayTT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
05858:  MOVLW  06
0585A:  MOVLB  6
0585C:  MOVWF  x58
0585E:  MOVLW  60
05860:  MOVWF  x57
05862:  MOVLW  42
05864:  MOVWF  FE9
05866:  MOVFF  65C,66F
0586A:  MOVFF  65B,66E
0586E:  MOVFF  65A,66D
05872:  MOVFF  659,66C
05876:  MOVLW  01
05878:  MOVWF  x70
0587A:  MOVLB  0
0587C:  CALL   46B8
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
05880:  MOVLB  6
05882:  MOVF   x5F,W
05884:  MULLW  1B
05886:  MOVF   FF3,W
05888:  ADDWF  x5D,W
0588A:  MOVWF  x69
0588C:  MOVF   x5F,W
0588E:  MULLW  08
05890:  MOVF   FF3,W
05892:  ADDWF  x5E,W
05894:  MOVWF  x6A
05896:  MOVFF  65D,672
0589A:  MOVFF  65E,673
0589E:  MOVFF  669,674
058A2:  MOVWF  x75
058A4:  MOVLW  01
058A6:  MOVWF  x76
058A8:  CLRF   x77
058AA:  MOVLB  0
058AC:  CALL   2B28
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
058B0:  MOVFF  65D,672
058B4:  MOVFF  65E,673
058B8:  MOVLW  06
058BA:  MOVLB  6
058BC:  MOVWF  x75
058BE:  MOVLW  60
058C0:  MOVWF  x74
058C2:  MOVFF  65F,676
058C6:  MOVLW  01
058C8:  MOVWF  x77
058CA:  MOVLB  0
058CC:  CALL   2832
.................... } 
058D0:  RETLW  00
....................  
.................... void displayTemperatura(int16 digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
0443C:  MOVLB  6
0443E:  MOVF   x5F,W
04440:  SUBLW  02
04442:  BNZ   44B8
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
04444:  MOVLW  06
04446:  MOVWF  x58
04448:  MOVLW  61
0444A:  MOVWF  x57
0444C:  MOVLW  0A
0444E:  MOVWF  FE9
04450:  MOVFF  65C,66B
04454:  MOVFF  65B,66A
04458:  MOVLB  0
0445A:  RCALL  437E
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
0445C:  MOVLB  6
0445E:  MOVF   x60,W
04460:  MULLW  12
04462:  MOVF   FF3,W
04464:  ADDWF  x5D,W
04466:  MOVWF  x6A
04468:  MOVF   x60,W
0446A:  MULLW  08
0446C:  MOVF   FF3,W
0446E:  ADDWF  x5E,W
04470:  MOVWF  x6B
04472:  MOVFF  65D,672
04476:  MOVFF  65E,673
0447A:  MOVFF  66A,674
0447E:  MOVWF  x75
04480:  MOVLW  01
04482:  MOVWF  x76
04484:  MOVWF  x77
04486:  MOVLB  0
04488:  CALL   2B28
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
0448C:  MOVLW  01
0448E:  MOVLB  6
04490:  ADDWF  x5D,W
04492:  MOVWF  x6A
04494:  MOVLW  01
04496:  ADDWF  x5E,W
04498:  MOVWF  x6B
0449A:  MOVFF  66A,672
0449E:  MOVWF  x73
044A0:  MOVLW  06
044A2:  MOVWF  x75
044A4:  MOVLW  61
044A6:  MOVWF  x74
044A8:  MOVFF  660,676
044AC:  CLRF   x77
044AE:  MOVLB  0
044B0:  CALL   2832
....................    } 
....................    else 
044B4:  BRA    45EA
044B6:  MOVLB  6
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
044B8:  MOVLW  06
044BA:  MOVWF  x58
044BC:  MOVLW  61
044BE:  MOVWF  x57
044C0:  MOVLW  0A
044C2:  MOVWF  FE9
044C4:  MOVFF  65C,66B
044C8:  MOVFF  65B,66A
044CC:  MOVLB  0
044CE:  RCALL  437E
....................     
....................       if(sombreado==4) 
044D0:  MOVLB  6
044D2:  MOVF   x5F,W
044D4:  SUBLW  04
044D6:  BNZ   4532
....................       { 
....................          glcd_rect(x, y, x+(tamano*16), y+(tamano*8), YES, OFF); 
044D8:  MOVF   x60,W
044DA:  MULLW  10
044DC:  MOVF   FF3,W
044DE:  ADDWF  x5D,W
044E0:  MOVWF  x6A
044E2:  MOVF   x60,W
044E4:  MULLW  08
044E6:  MOVF   FF3,W
044E8:  ADDWF  x5E,W
044EA:  MOVWF  x6B
044EC:  MOVFF  65D,672
044F0:  MOVFF  65E,673
044F4:  MOVFF  66A,674
044F8:  MOVWF  x75
044FA:  MOVLW  01
044FC:  MOVWF  x76
044FE:  CLRF   x77
04500:  MOVLB  0
04502:  CALL   2B28
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
04506:  MOVLW  01
04508:  MOVLB  6
0450A:  ADDWF  x5D,W
0450C:  MOVWF  x6A
0450E:  MOVLW  01
04510:  ADDWF  x5E,W
04512:  MOVWF  x6B
04514:  MOVFF  66A,672
04518:  MOVWF  x73
0451A:  MOVLW  06
0451C:  MOVWF  x75
0451E:  MOVLW  61
04520:  MOVWF  x74
04522:  MOVFF  660,676
04526:  MOVLW  01
04528:  MOVWF  x77
0452A:  MOVLB  0
0452C:  CALL   2832
04530:  MOVLB  6
....................       } 
....................       if(sombreado==1) 
04532:  DECFSZ x5F,W
04534:  BRA    458E
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
04536:  MOVF   x60,W
04538:  MULLW  05
0453A:  MOVF   FF3,W
0453C:  ADDWF  x5D,W
0453E:  MOVWF  x6A
04540:  MOVF   x60,W
04542:  MULLW  08
04544:  MOVF   FF3,W
04546:  ADDWF  x5E,W
04548:  MOVWF  x6B
0454A:  MOVFF  65D,672
0454E:  MOVFF  65E,673
04552:  MOVFF  66A,674
04556:  MOVWF  x75
04558:  MOVLW  01
0455A:  MOVWF  x76
0455C:  MOVWF  x77
0455E:  MOVLB  0
04560:  CALL   2B28
04564:  MOVLW  01
04566:  MOVLB  6
04568:  ADDWF  x5D,W
0456A:  MOVWF  x6A
0456C:  MOVLW  01
0456E:  ADDWF  x5E,W
04570:  MOVWF  x6B
04572:  MOVFF  66A,672
04576:  MOVWF  x73
04578:  MOVLW  06
0457A:  MOVWF  x75
0457C:  MOVLW  61
0457E:  MOVWF  x74
04580:  MOVFF  660,676
04584:  CLRF   x77
04586:  MOVLB  0
04588:  CALL   2832
0458C:  MOVLB  6
....................       if(sombreado==0) 
0458E:  MOVF   x5F,F
04590:  BNZ   45EC
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
04592:  MOVF   x60,W
04594:  MULLW  05
04596:  MOVF   FF3,W
04598:  ADDWF  x5D,W
0459A:  MOVWF  x6A
0459C:  MOVF   x60,W
0459E:  MULLW  08
045A0:  MOVF   FF3,W
045A2:  ADDWF  x5E,W
045A4:  MOVWF  x6B
045A6:  MOVFF  65D,672
045AA:  MOVFF  65E,673
045AE:  MOVFF  66A,674
045B2:  MOVWF  x75
045B4:  MOVLW  01
045B6:  MOVWF  x76
045B8:  CLRF   x77
045BA:  MOVLB  0
045BC:  CALL   2B28
045C0:  MOVLW  01
045C2:  MOVLB  6
045C4:  ADDWF  x5D,W
045C6:  MOVWF  x6A
045C8:  MOVLW  01
045CA:  ADDWF  x5E,W
045CC:  MOVWF  x6B
045CE:  MOVFF  66A,672
045D2:  MOVWF  x73
045D4:  MOVLW  06
045D6:  MOVWF  x75
045D8:  MOVLW  61
045DA:  MOVWF  x74
045DC:  MOVFF  660,676
045E0:  MOVLW  01
045E2:  MOVWF  x77
045E4:  MOVLB  0
045E6:  CALL   2832
045EA:  MOVLB  6
....................    } 
....................    glcd_update(); 
045EC:  MOVLB  0
045EE:  CALL   2616
.................... } 
045F2:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
04D40:  MOVLB  6
04D42:  MOVF   x59,W
04D44:  SUBLW  05
04D46:  BNZ   4DEC
....................    for( i = 0 ; i < 64 ; i ++ ) 
04D48:  CLRF   x5A
04D4A:  MOVF   x5A,W
04D4C:  SUBLW  3F
04D4E:  BNC   4DEC
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
04D50:  CLRF   x5B
04D52:  MOVF   x5B,W
04D54:  SUBLW  0F
04D56:  BNC   4DE8
....................       {     
....................          for(k=7;k>-1;k--) 
04D58:  MOVLW  07
04D5A:  MOVWF  x5C
04D5C:  MOVF   x5C,W
04D5E:  XORLW  80
04D60:  SUBLW  7F
04D62:  BC    4DE4
....................          {       
....................             if( bit_test(Horno[i][j] ,7-k ))  
04D64:  CLRF   x5E
04D66:  MOVFF  65A,65D
04D6A:  CLRF   x60
04D6C:  MOVLW  10
04D6E:  MOVWF  x5F
04D70:  MOVLB  0
04D72:  CALL   2E32
04D76:  MOVFF  02,65E
04D7A:  MOVFF  01,65D
04D7E:  MOVLB  6
04D80:  MOVF   x5B,W
04D82:  ADDWF  01,W
04D84:  MOVWF  01
04D86:  MOVLW  00
04D88:  ADDWFC 02,W
04D8A:  MOVWF  03
04D8C:  MOVF   01,W
04D8E:  MOVFF  FF2,65D
04D92:  BCF    FF2.7
04D94:  MOVFF  03,FF7
04D98:  MOVLB  0
04D9A:  CALL   02B6
04D9E:  MOVLB  6
04DA0:  BTFSC  x5D.7
04DA2:  BSF    FF2.7
04DA4:  MOVWF  x5D
04DA6:  MOVLW  07
04DA8:  BSF    FD8.0
04DAA:  SUBFWB x5C,W
04DAC:  MOVWF  x5E
04DAE:  MOVFF  65D,00
04DB2:  MOVF   x5E,W
04DB4:  MOVWF  01
04DB6:  BZ    4DC0
04DB8:  BCF    FD8.0
04DBA:  RRCF   00,F
04DBC:  DECFSZ 01,F
04DBE:  BRA    4DB8
04DC0:  BTFSS  00.0
04DC2:  BRA    4DE0
....................                glcd_pixel( j*8+k,i, ON ); 
04DC4:  MOVF   x5B,W
04DC6:  MULLW  08
04DC8:  MOVF   FF3,W
04DCA:  ADDWF  x5C,W
04DCC:  MOVWF  x5D
04DCE:  MOVWF  x8D
04DD0:  MOVFF  65A,68E
04DD4:  MOVLW  01
04DD6:  MOVWF  x8F
04DD8:  MOVLB  0
04DDA:  CALL   2776
04DDE:  MOVLB  6
....................          }   
04DE0:  DECF   x5C,F
04DE2:  BRA    4D5C
....................       } 
04DE4:  INCF   x5B,F
04DE6:  BRA    4D52
....................    } 
04DE8:  INCF   x5A,F
04DEA:  BRA    4D4A
....................    } 
....................     
.................... } 
04DEC:  MOVLB  0
04DEE:  GOTO   7188 (RETURN)
....................  
....................     
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
.................... } 
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
05790:  MOVLW  06
05792:  MOVLB  6
05794:  MOVWF  x58
05796:  MOVLW  60
05798:  MOVWF  x57
0579A:  MOVLW  42
0579C:  MOVWF  FE9
0579E:  MOVFF  65C,66F
057A2:  MOVFF  65B,66E
057A6:  MOVFF  65A,66D
057AA:  MOVFF  659,66C
057AE:  MOVLW  01
057B0:  MOVWF  x70
057B2:  MOVLB  0
057B4:  CALL   46B8
....................    glcd_rect(x, y, x+(w*27), y+(w*7), YES, OFF); 
057B8:  MOVLB  6
057BA:  MOVF   x5F,W
057BC:  MULLW  1B
057BE:  MOVF   FF3,W
057C0:  ADDWF  x5D,W
057C2:  MOVWF  x69
057C4:  MOVF   x5F,W
057C6:  MULLW  07
057C8:  MOVF   FF3,W
057CA:  ADDWF  x5E,W
057CC:  MOVWF  x6A
057CE:  MOVFF  65D,672
057D2:  MOVFF  65E,673
057D6:  MOVFF  669,674
057DA:  MOVWF  x75
057DC:  MOVLW  01
057DE:  MOVWF  x76
057E0:  CLRF   x77
057E2:  MOVLB  0
057E4:  CALL   2B28
....................    glcd_text57(x, y, voltage, w, ON); 
057E8:  MOVFF  65D,672
057EC:  MOVFF  65E,673
057F0:  MOVLW  06
057F2:  MOVLB  6
057F4:  MOVWF  x75
057F6:  MOVLW  60
057F8:  MOVWF  x74
057FA:  MOVFF  65F,676
057FE:  MOVLW  01
05800:  MOVWF  x77
05802:  MOVLB  0
05804:  CALL   2832
.................... } 
05808:  RETLW  00
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
03718:  MOVLW  06
0371A:  MOVLB  6
0371C:  MOVWF  x58
0371E:  MOVLW  67
03720:  MOVWF  x57
03722:  MOVFF  663,670
03726:  MOVLW  1F
03728:  MOVWF  x71
0372A:  MOVLB  0
0372C:  BRA    3638
....................     
....................    if(sombreado==1) 
0372E:  MOVLB  6
03730:  DECFSZ x66,W
03732:  BRA    3786
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
03734:  MOVLW  12
03736:  ADDWF  x64,W
03738:  MOVWF  x70
0373A:  MOVLW  18
0373C:  ADDWF  x65,W
0373E:  MOVWF  x71
03740:  MOVFF  664,672
03744:  MOVFF  665,673
03748:  MOVFF  670,674
0374C:  MOVWF  x75
0374E:  MOVLW  01
03750:  MOVWF  x76
03752:  MOVWF  x77
03754:  MOVLB  0
03756:  CALL   2B28
0375A:  MOVLW  02
0375C:  MOVLB  6
0375E:  ADDWF  x64,W
03760:  MOVWF  x70
03762:  MOVLW  01
03764:  ADDWF  x65,W
03766:  MOVWF  x71
03768:  MOVFF  670,672
0376C:  MOVWF  x73
0376E:  MOVLW  06
03770:  MOVWF  x75
03772:  MOVLW  67
03774:  MOVWF  x74
03776:  MOVLW  02
03778:  MOVWF  x76
0377A:  CLRF   x77
0377C:  MOVLB  0
0377E:  CALL   2832
....................    else    
03782:  BRA    37D4
03784:  MOVLB  6
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
03786:  MOVLW  12
03788:  ADDWF  x64,W
0378A:  MOVWF  x70
0378C:  MOVLW  18
0378E:  ADDWF  x65,W
03790:  MOVWF  x71
03792:  MOVFF  664,672
03796:  MOVFF  665,673
0379A:  MOVFF  670,674
0379E:  MOVWF  x75
037A0:  CLRF   x76
037A2:  CLRF   x77
037A4:  MOVLB  0
037A6:  CALL   2B28
037AA:  MOVLW  02
037AC:  MOVLB  6
037AE:  ADDWF  x64,W
037B0:  MOVWF  x70
037B2:  MOVLW  01
037B4:  ADDWF  x65,W
037B6:  MOVWF  x71
037B8:  MOVFF  670,672
037BC:  MOVWF  x73
037BE:  MOVLW  06
037C0:  MOVWF  x75
037C2:  MOVLW  67
037C4:  MOVWF  x74
037C6:  MOVLW  02
037C8:  MOVWF  x76
037CA:  MOVLW  01
037CC:  MOVWF  x77
037CE:  MOVLB  0
037D0:  CALL   2832
....................  
.................... } 
037D4:  RETLW  00
....................  
.................... void MensajeAlmacenado(){ 
....................    glcd_fillScreen(OFF); 
*
037E4:  MOVLB  6
037E6:  CLRF   x61
037E8:  MOVLB  0
037EA:  CALL   25BC
....................    strcpy(Menus.Letra,"Valor"); 
037EE:  MOVLW  06
037F0:  MOVWF  FEA
037F2:  MOVLW  39
037F4:  MOVWF  FE9
037F6:  MOVFF  FF2,661
037FA:  BCF    FF2.7
037FC:  MOVLW  00
037FE:  CALL   06F2
03802:  TBLRD*-
03804:  TBLRD*+
03806:  MOVF   FF5,W
03808:  MOVWF  FEE
0380A:  IORLW  00
0380C:  BNZ   3804
0380E:  MOVLB  6
03810:  BTFSC  x61.7
03812:  BSF    FF2.7
....................    displayMenu(Menus.Letra,30,0,0,2); 
03814:  MOVLW  06
03816:  MOVWF  x62
03818:  MOVLW  39
0381A:  MOVWF  x61
0381C:  MOVLW  1E
0381E:  MOVWF  x63
03820:  CLRF   x64
03822:  CLRF   x65
03824:  MOVLW  02
03826:  MOVWF  x66
03828:  MOVLB  0
0382A:  CALL   2BEA
....................    strcpy(Menus.Letra," Almacenado"); 
0382E:  MOVLW  06
03830:  MOVWF  FEA
03832:  MOVLW  39
03834:  MOVWF  FE9
03836:  MOVFF  FF2,661
0383A:  BCF    FF2.7
0383C:  MOVLW  00
0383E:  CALL   0716
03842:  TBLRD*-
03844:  TBLRD*+
03846:  MOVF   FF5,W
03848:  MOVWF  FEE
0384A:  IORLW  00
0384C:  BNZ   3844
0384E:  MOVLB  6
03850:  BTFSC  x61.7
03852:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,2); 
03854:  MOVLW  06
03856:  MOVWF  x62
03858:  MOVLW  39
0385A:  MOVWF  x61
0385C:  CLRF   x63
0385E:  MOVLW  1E
03860:  MOVWF  x64
03862:  CLRF   x65
03864:  MOVLW  02
03866:  MOVWF  x66
03868:  MOVLB  0
0386A:  CALL   2BEA
....................    glcd_update(); 
0386E:  CALL   2616
....................    delay_ms(2000); 
03872:  MOVLW  08
03874:  MOVLB  6
03876:  MOVWF  x61
03878:  MOVLW  FA
0387A:  MOVWF  x62
0387C:  MOVLB  0
0387E:  CALL   1052
03882:  MOVLB  6
03884:  DECFSZ x61,F
03886:  BRA    3878
....................    glcd_fillScreen(OFF); 
03888:  CLRF   x61
0388A:  MOVLB  0
0388C:  CALL   25BC
.................... } 
03890:  RETLW  00
....................  
.................... void ConfiguraInterrupciones(){ 
....................    delay_ms(1000);    
*
0107A:  MOVLW  04
0107C:  MOVLB  6
0107E:  MOVWF  x59
01080:  MOVLW  FA
01082:  MOVWF  x62
01084:  MOVLB  0
01086:  RCALL  1052
01088:  MOVLB  6
0108A:  DECFSZ x59,F
0108C:  BRA    1080
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
0108E:  MOVLW  85
01090:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
01092:  BSF    F9D.0
....................    setup_adc_ports(AN0_TO_AN1); 
01094:  MOVF   FC1,W
01096:  ANDLW  C0
01098:  IORLW  0D
0109A:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_64); 
0109C:  MOVF   FC0,W
0109E:  ANDLW  C0
010A0:  IORLW  06
010A2:  MOVWF  FC0
010A4:  BSF    FC0.7
010A6:  BSF    FC2.0
....................    enable_interrupts(global); 
010A8:  MOVLW  C0
010AA:  IORWF  FF2,F
.................... } 
010AC:  MOVLB  0
010AE:  GOTO   5D96 (RETURN)
....................  
.................... void MensajeBienvenida(){ 
....................    glcd_init(ON);             //Inicializa la glcd 
*
0348C:  MOVLW  01
0348E:  MOVLB  6
03490:  MOVWF  x59
03492:  MOVLB  0
03494:  CALL   26CE
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
03498:  MOVLB  6
0349A:  CLRF   x61
0349C:  MOVLB  0
0349E:  CALL   25BC
....................    strcpy(Menus.Letra,"JP Inglobal"); 
034A2:  MOVLW  06
034A4:  MOVWF  FEA
034A6:  MOVLW  39
034A8:  MOVWF  FE9
034AA:  MOVFF  FF2,659
034AE:  BCF    FF2.7
034B0:  MOVLW  00
034B2:  CALL   0740
034B6:  TBLRD*-
034B8:  TBLRD*+
034BA:  MOVF   FF5,W
034BC:  MOVWF  FEE
034BE:  IORLW  00
034C0:  BNZ   34B8
034C2:  MOVLB  6
034C4:  BTFSC  x59.7
034C6:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
034C8:  MOVLW  06
034CA:  MOVWF  x62
034CC:  MOVLW  39
034CE:  MOVWF  x61
034D0:  CLRF   x63
034D2:  CLRF   x64
034D4:  CLRF   x65
034D6:  MOVLW  02
034D8:  MOVWF  x66
034DA:  MOVLB  0
034DC:  CALL   2BEA
....................    strcpy(Menus.Letra,"    Incubadora"); 
034E0:  MOVLW  06
034E2:  MOVWF  FEA
034E4:  MOVLW  39
034E6:  MOVWF  FE9
034E8:  MOVFF  FF2,659
034EC:  BCF    FF2.7
034EE:  MOVLW  00
034F0:  CALL   076A
034F4:  TBLRD*-
034F6:  TBLRD*+
034F8:  MOVF   FF5,W
034FA:  MOVWF  FEE
034FC:  IORLW  00
034FE:  BNZ   34F6
03500:  MOVLB  6
03502:  BTFSC  x59.7
03504:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
03506:  MOVLW  06
03508:  MOVWF  x62
0350A:  MOVLW  39
0350C:  MOVWF  x61
0350E:  CLRF   x63
03510:  MOVLW  14
03512:  MOVWF  x64
03514:  CLRF   x65
03516:  MOVLW  01
03518:  MOVWF  x66
0351A:  MOVLB  0
0351C:  CALL   2BEA
....................    strcpy(Menus.Letra,"     Digital  "); 
03520:  MOVLW  06
03522:  MOVWF  FEA
03524:  MOVLW  39
03526:  MOVWF  FE9
03528:  MOVFF  FF2,659
0352C:  BCF    FF2.7
0352E:  MOVLW  00
03530:  CALL   0798
03534:  TBLRD*-
03536:  TBLRD*+
03538:  MOVF   FF5,W
0353A:  MOVWF  FEE
0353C:  IORLW  00
0353E:  BNZ   3536
03540:  MOVLB  6
03542:  BTFSC  x59.7
03544:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,1); 
03546:  MOVLW  06
03548:  MOVWF  x62
0354A:  MOVLW  39
0354C:  MOVWF  x61
0354E:  CLRF   x63
03550:  MOVLW  1E
03552:  MOVWF  x64
03554:  CLRF   x65
03556:  MOVLW  01
03558:  MOVWF  x66
0355A:  MOVLB  0
0355C:  CALL   2BEA
....................    strcpy(Menus.Letra,"    53 Lts"); 
03560:  MOVLW  06
03562:  MOVWF  FEA
03564:  MOVLW  39
03566:  MOVWF  FE9
03568:  MOVFF  FF2,659
0356C:  BCF    FF2.7
0356E:  MOVLW  00
03570:  CALL   07C6
03574:  TBLRD*-
03576:  TBLRD*+
03578:  MOVF   FF5,W
0357A:  MOVWF  FEE
0357C:  IORLW  00
0357E:  BNZ   3576
03580:  MOVLB  6
03582:  BTFSC  x59.7
03584:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,45,0,2); 
03586:  MOVLW  06
03588:  MOVWF  x62
0358A:  MOVLW  39
0358C:  MOVWF  x61
0358E:  CLRF   x63
03590:  MOVLW  2D
03592:  MOVWF  x64
03594:  CLRF   x65
03596:  MOVLW  02
03598:  MOVWF  x66
0359A:  MOVLB  0
0359C:  CALL   2BEA
....................    delay_ms(1000); 
035A0:  MOVLW  04
035A2:  MOVLB  6
035A4:  MOVWF  x59
035A6:  MOVLW  FA
035A8:  MOVWF  x62
035AA:  MOVLB  0
035AC:  CALL   1052
035B0:  MOVLB  6
035B2:  DECFSZ x59,F
035B4:  BRA    35A6
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
035B6:  CLRF   x61
035B8:  MOVLB  0
035BA:  CALL   25BC
....................     
....................    for(i=0;i<80;i++) 
035BE:  MOVLB  5
035C0:  CLRF   x99
035C2:  MOVF   x99,W
035C4:  SUBLW  4F
035C6:  BNC   35E6
....................    { 
....................       Temperatura=Leer_Sensor(MediaMovil); 
035C8:  MOVFF  58C,659
035CC:  MOVLB  0
035CE:  RCALL  2E54
035D0:  MOVFF  03,614
035D4:  MOVFF  02,613
035D8:  MOVFF  01,612
035DC:  MOVFF  00,611
....................    } 
035E0:  MOVLB  5
035E2:  INCF   x99,F
035E4:  BRA    35C2
.................... } 
035E6:  MOVLB  0
035E8:  GOTO   5DA2 (RETURN)
....................  
.................... void LeeEEPROM(){ 
....................    Testerilizacionp[0]=read_eeprom(0); 
*
014BE:  MOVFF  FF2,659
014C2:  BCF    FF2.7
014C4:  CLRF   FAA
014C6:  CLRF   FA9
014C8:  BCF    FA6.6
014CA:  BCF    FA6.7
014CC:  BSF    FA6.0
014CE:  MOVF   FA8,W
014D0:  MOVLB  6
014D2:  BTFSC  x59.7
014D4:  BSF    FF2.7
014D6:  MOVLB  5
014D8:  MOVWF  xD1
....................    delay_ms(20);    
014DA:  MOVLW  14
014DC:  MOVLB  6
014DE:  MOVWF  x62
014E0:  MOVLB  0
014E2:  RCALL  1052
....................    Testerilizacionp[1]=read_eeprom(1); 
014E4:  MOVFF  FF2,659
014E8:  BCF    FF2.7
014EA:  CLRF   FAA
014EC:  MOVLW  01
014EE:  MOVWF  FA9
014F0:  BCF    FA6.6
014F2:  BCF    FA6.7
014F4:  BSF    FA6.0
014F6:  MOVF   FA8,W
014F8:  MOVLB  6
014FA:  BTFSC  x59.7
014FC:  BSF    FF2.7
014FE:  MOVLB  5
01500:  MOVWF  xD2
....................    delay_ms(20);    
01502:  MOVLW  14
01504:  MOVLB  6
01506:  MOVWF  x62
01508:  MOVLB  0
0150A:  RCALL  1052
....................    Testerilizacionp[2]=read_eeprom(2); 
0150C:  MOVFF  FF2,659
01510:  BCF    FF2.7
01512:  CLRF   FAA
01514:  MOVLW  02
01516:  MOVWF  FA9
01518:  BCF    FA6.6
0151A:  BCF    FA6.7
0151C:  BSF    FA6.0
0151E:  MOVF   FA8,W
01520:  MOVLB  6
01522:  BTFSC  x59.7
01524:  BSF    FF2.7
01526:  MOVLB  5
01528:  MOVWF  xD3
....................    delay_ms(20); 
0152A:  MOVLW  14
0152C:  MOVLB  6
0152E:  MOVWF  x62
01530:  MOVLB  0
01532:  RCALL  1052
....................    Testerilizacionp[3]=read_eeprom(3); 
01534:  MOVFF  FF2,659
01538:  BCF    FF2.7
0153A:  CLRF   FAA
0153C:  MOVLW  03
0153E:  MOVWF  FA9
01540:  BCF    FA6.6
01542:  BCF    FA6.7
01544:  BSF    FA6.0
01546:  MOVF   FA8,W
01548:  MOVLB  6
0154A:  BTFSC  x59.7
0154C:  BSF    FF2.7
0154E:  MOVLB  5
01550:  MOVWF  xD4
....................    delay_ms(20);    
01552:  MOVLW  14
01554:  MOVLB  6
01556:  MOVWF  x62
01558:  MOVLB  0
0155A:  RCALL  1052
....................    Password[0]=read_eeprom(4); 
0155C:  MOVFF  FF2,659
01560:  BCF    FF2.7
01562:  CLRF   FAA
01564:  MOVLW  04
01566:  MOVWF  FA9
01568:  BCF    FA6.6
0156A:  BCF    FA6.7
0156C:  BSF    FA6.0
0156E:  MOVF   FA8,W
01570:  MOVLB  6
01572:  BTFSC  x59.7
01574:  BSF    FF2.7
01576:  MOVLB  5
01578:  MOVWF  xD9
....................    delay_ms(20);    
0157A:  MOVLW  14
0157C:  MOVLB  6
0157E:  MOVWF  x62
01580:  MOVLB  0
01582:  RCALL  1052
....................    Password[1]=read_eeprom(5); 
01584:  MOVFF  FF2,659
01588:  BCF    FF2.7
0158A:  CLRF   FAA
0158C:  MOVLW  05
0158E:  MOVWF  FA9
01590:  BCF    FA6.6
01592:  BCF    FA6.7
01594:  BSF    FA6.0
01596:  MOVF   FA8,W
01598:  MOVLB  6
0159A:  BTFSC  x59.7
0159C:  BSF    FF2.7
0159E:  MOVLB  5
015A0:  MOVWF  xDA
....................    delay_ms(20);    
015A2:  MOVLW  14
015A4:  MOVLB  6
015A6:  MOVWF  x62
015A8:  MOVLB  0
015AA:  RCALL  1052
....................    Password[2]=read_eeprom(6); 
015AC:  MOVFF  FF2,659
015B0:  BCF    FF2.7
015B2:  CLRF   FAA
015B4:  MOVLW  06
015B6:  MOVWF  FA9
015B8:  BCF    FA6.6
015BA:  BCF    FA6.7
015BC:  BSF    FA6.0
015BE:  MOVF   FA8,W
015C0:  MOVLB  6
015C2:  BTFSC  x59.7
015C4:  BSF    FF2.7
015C6:  MOVLB  5
015C8:  MOVWF  xDB
....................    delay_ms(20);    
015CA:  MOVLW  14
015CC:  MOVLB  6
015CE:  MOVWF  x62
015D0:  MOVLB  0
015D2:  RCALL  1052
....................    Password[3]=read_eeprom(7); 
015D4:  MOVFF  FF2,659
015D8:  BCF    FF2.7
015DA:  CLRF   FAA
015DC:  MOVLW  07
015DE:  MOVWF  FA9
015E0:  BCF    FA6.6
015E2:  BCF    FA6.7
015E4:  BSF    FA6.0
015E6:  MOVF   FA8,W
015E8:  MOVLB  6
015EA:  BTFSC  x59.7
015EC:  BSF    FF2.7
015EE:  MOVLB  5
015F0:  MOVWF  xDC
....................    delay_ms(20);    
015F2:  MOVLW  14
015F4:  MOVLB  6
015F6:  MOVWF  x62
015F8:  MOVLB  0
015FA:  RCALL  1052
....................  
....................    entero=read_eeprom(8); 
015FC:  MOVFF  FF2,659
01600:  BCF    FF2.7
01602:  CLRF   FAA
01604:  MOVLW  08
01606:  MOVWF  FA9
01608:  BCF    FA6.6
0160A:  BCF    FA6.7
0160C:  BSF    FA6.0
0160E:  MOVF   FA8,W
01610:  MOVLB  6
01612:  BTFSC  x59.7
01614:  BSF    FF2.7
01616:  MOVLB  5
01618:  MOVWF  xA0
....................    delay_ms(20);    
0161A:  MOVLW  14
0161C:  MOVLB  6
0161E:  MOVWF  x62
01620:  MOVLB  0
01622:  RCALL  1052
....................    Temporal=read_eeprom(9); 
01624:  MOVFF  FF2,659
01628:  BCF    FF2.7
0162A:  CLRF   FAA
0162C:  MOVLW  09
0162E:  MOVWF  FA9
01630:  BCF    FA6.6
01632:  BCF    FA6.7
01634:  BSF    FA6.0
01636:  MOVF   FA8,W
01638:  MOVLB  6
0163A:  BTFSC  x59.7
0163C:  BSF    FF2.7
0163E:  CLRF   x60
01640:  MOVWF  x5F
01642:  MOVLB  0
01644:  RCALL  10B2
01646:  MOVFF  03,62C
0164A:  MOVFF  02,62B
0164E:  MOVFF  01,62A
01652:  MOVFF  00,629
....................    Temporal=Temporal/10.0; 
01656:  MOVFF  62C,65D
0165A:  MOVFF  62B,65C
0165E:  MOVFF  62A,65B
01662:  MOVFF  629,65A
01666:  MOVLB  6
01668:  CLRF   x61
0166A:  CLRF   x60
0166C:  MOVLW  20
0166E:  MOVWF  x5F
01670:  MOVLW  82
01672:  MOVWF  x5E
01674:  MOVLB  0
01676:  RCALL  10E8
01678:  MOVFF  03,62C
0167C:  MOVFF  02,62B
01680:  MOVFF  01,62A
01684:  MOVFF  00,629
....................    Temperatura1=entero+Temporal; 
01688:  MOVLB  6
0168A:  CLRF   x60
0168C:  MOVFF  5A0,65F
01690:  MOVLB  0
01692:  RCALL  10B2
01694:  BCF    FD8.1
01696:  MOVFF  03,661
0169A:  MOVFF  02,660
0169E:  MOVFF  01,65F
016A2:  MOVFF  00,65E
016A6:  MOVFF  62C,665
016AA:  MOVFF  62B,664
016AE:  MOVFF  62A,663
016B2:  MOVFF  629,662
016B6:  RCALL  1246
016B8:  MOVFF  03,620
016BC:  MOVFF  02,61F
016C0:  MOVFF  01,61E
016C4:  MOVFF  00,61D
....................    delay_ms(20);    
016C8:  MOVLW  14
016CA:  MOVLB  6
016CC:  MOVWF  x62
016CE:  MOVLB  0
016D0:  RCALL  1052
....................     
....................    entero=read_eeprom(10); 
016D2:  MOVFF  FF2,659
016D6:  BCF    FF2.7
016D8:  CLRF   FAA
016DA:  MOVLW  0A
016DC:  MOVWF  FA9
016DE:  BCF    FA6.6
016E0:  BCF    FA6.7
016E2:  BSF    FA6.0
016E4:  MOVF   FA8,W
016E6:  MOVLB  6
016E8:  BTFSC  x59.7
016EA:  BSF    FF2.7
016EC:  MOVLB  5
016EE:  MOVWF  xA0
....................    delay_ms(20);    
016F0:  MOVLW  14
016F2:  MOVLB  6
016F4:  MOVWF  x62
016F6:  MOVLB  0
016F8:  RCALL  1052
....................    Temporal=read_eeprom(11); 
016FA:  MOVFF  FF2,659
016FE:  BCF    FF2.7
01700:  CLRF   FAA
01702:  MOVLW  0B
01704:  MOVWF  FA9
01706:  BCF    FA6.6
01708:  BCF    FA6.7
0170A:  BSF    FA6.0
0170C:  MOVF   FA8,W
0170E:  MOVLB  6
01710:  BTFSC  x59.7
01712:  BSF    FF2.7
01714:  CLRF   x60
01716:  MOVWF  x5F
01718:  MOVLB  0
0171A:  RCALL  10B2
0171C:  MOVFF  03,62C
01720:  MOVFF  02,62B
01724:  MOVFF  01,62A
01728:  MOVFF  00,629
....................    Temporal=Temporal/10.0; 
0172C:  MOVFF  62C,65D
01730:  MOVFF  62B,65C
01734:  MOVFF  62A,65B
01738:  MOVFF  629,65A
0173C:  MOVLB  6
0173E:  CLRF   x61
01740:  CLRF   x60
01742:  MOVLW  20
01744:  MOVWF  x5F
01746:  MOVLW  82
01748:  MOVWF  x5E
0174A:  MOVLB  0
0174C:  RCALL  10E8
0174E:  MOVFF  03,62C
01752:  MOVFF  02,62B
01756:  MOVFF  01,62A
0175A:  MOVFF  00,629
....................    Temperatura2=entero+Temporal; 
0175E:  MOVLB  6
01760:  CLRF   x60
01762:  MOVFF  5A0,65F
01766:  MOVLB  0
01768:  RCALL  10B2
0176A:  BCF    FD8.1
0176C:  MOVFF  03,661
01770:  MOVFF  02,660
01774:  MOVFF  01,65F
01778:  MOVFF  00,65E
0177C:  MOVFF  62C,665
01780:  MOVFF  62B,664
01784:  MOVFF  62A,663
01788:  MOVFF  629,662
0178C:  RCALL  1246
0178E:  MOVFF  03,624
01792:  MOVFF  02,623
01796:  MOVFF  01,622
0179A:  MOVFF  00,621
....................    delay_ms(20);    
0179E:  MOVLW  14
017A0:  MOVLB  6
017A2:  MOVWF  x62
017A4:  MOVLB  0
017A6:  RCALL  1052
....................     
....................    entero=read_eeprom(12); 
017A8:  MOVFF  FF2,659
017AC:  BCF    FF2.7
017AE:  CLRF   FAA
017B0:  MOVLW  0C
017B2:  MOVWF  FA9
017B4:  BCF    FA6.6
017B6:  BCF    FA6.7
017B8:  BSF    FA6.0
017BA:  MOVF   FA8,W
017BC:  MOVLB  6
017BE:  BTFSC  x59.7
017C0:  BSF    FF2.7
017C2:  MOVLB  5
017C4:  MOVWF  xA0
....................    delay_ms(20);    
017C6:  MOVLW  14
017C8:  MOVLB  6
017CA:  MOVWF  x62
017CC:  MOVLB  0
017CE:  RCALL  1052
....................    Temporal=read_eeprom(13); 
017D0:  MOVFF  FF2,659
017D4:  BCF    FF2.7
017D6:  CLRF   FAA
017D8:  MOVLW  0D
017DA:  MOVWF  FA9
017DC:  BCF    FA6.6
017DE:  BCF    FA6.7
017E0:  BSF    FA6.0
017E2:  MOVF   FA8,W
017E4:  MOVLB  6
017E6:  BTFSC  x59.7
017E8:  BSF    FF2.7
017EA:  CLRF   x60
017EC:  MOVWF  x5F
017EE:  MOVLB  0
017F0:  RCALL  10B2
017F2:  MOVFF  03,62C
017F6:  MOVFF  02,62B
017FA:  MOVFF  01,62A
017FE:  MOVFF  00,629
....................    Temporal=Temporal/10.0; 
01802:  MOVFF  62C,65D
01806:  MOVFF  62B,65C
0180A:  MOVFF  62A,65B
0180E:  MOVFF  629,65A
01812:  MOVLB  6
01814:  CLRF   x61
01816:  CLRF   x60
01818:  MOVLW  20
0181A:  MOVWF  x5F
0181C:  MOVLW  82
0181E:  MOVWF  x5E
01820:  MOVLB  0
01822:  RCALL  10E8
01824:  MOVFF  03,62C
01828:  MOVFF  02,62B
0182C:  MOVFF  01,62A
01830:  MOVFF  00,629
....................    Temperatura3=entero+Temporal; 
01834:  MOVLB  6
01836:  CLRF   x60
01838:  MOVFF  5A0,65F
0183C:  MOVLB  0
0183E:  RCALL  10B2
01840:  BCF    FD8.1
01842:  MOVFF  03,661
01846:  MOVFF  02,660
0184A:  MOVFF  01,65F
0184E:  MOVFF  00,65E
01852:  MOVFF  62C,665
01856:  MOVFF  62B,664
0185A:  MOVFF  62A,663
0185E:  MOVFF  629,662
01862:  RCALL  1246
01864:  MOVFF  03,628
01868:  MOVFF  02,627
0186C:  MOVFF  01,626
01870:  MOVFF  00,625
....................    delay_ms(20);    
01874:  MOVLW  14
01876:  MOVLB  6
01878:  MOVWF  x62
0187A:  MOVLB  0
0187C:  CALL   1052
....................     
....................     
....................    Ganancia=read_eeprom(14); 
01880:  MOVFF  FF2,659
01884:  BCF    FF2.7
01886:  CLRF   FAA
01888:  MOVLW  0E
0188A:  MOVWF  FA9
0188C:  BCF    FA6.6
0188E:  BCF    FA6.7
01890:  BSF    FA6.0
01892:  MOVF   FA8,W
01894:  MOVLB  6
01896:  BTFSC  x59.7
01898:  BSF    FF2.7
0189A:  CLRF   x60
0189C:  MOVWF  x5F
0189E:  MOVLB  0
018A0:  RCALL  10B2
018A2:  MOVFF  03,604
018A6:  MOVFF  02,603
018AA:  MOVFF  01,602
018AE:  MOVFF  00,601
....................    delay_ms(10); 
018B2:  MOVLW  0A
018B4:  MOVLB  6
018B6:  MOVWF  x62
018B8:  MOVLB  0
018BA:  CALL   1052
....................    Integral=read_eeprom(15); 
018BE:  MOVFF  FF2,659
018C2:  BCF    FF2.7
018C4:  CLRF   FAA
018C6:  MOVLW  0F
018C8:  MOVWF  FA9
018CA:  BCF    FA6.6
018CC:  BCF    FA6.7
018CE:  BSF    FA6.0
018D0:  MOVF   FA8,W
018D2:  MOVLB  6
018D4:  BTFSC  x59.7
018D6:  BSF    FF2.7
018D8:  CLRF   x60
018DA:  MOVWF  x5F
018DC:  MOVLB  0
018DE:  CALL   10B2
018E2:  MOVFF  03,5C8
018E6:  MOVFF  02,5C7
018EA:  MOVFF  01,5C6
018EE:  MOVFF  00,5C5
....................    delay_ms(10); 
018F2:  MOVLW  0A
018F4:  MOVLB  6
018F6:  MOVWF  x62
018F8:  MOVLB  0
018FA:  CALL   1052
....................    Derivativo=read_eeprom(16); 
018FE:  MOVFF  FF2,659
01902:  BCF    FF2.7
01904:  CLRF   FAA
01906:  MOVLW  10
01908:  MOVWF  FA9
0190A:  BCF    FA6.6
0190C:  BCF    FA6.7
0190E:  BSF    FA6.0
01910:  MOVF   FA8,W
01912:  MOVLB  6
01914:  BTFSC  x59.7
01916:  BSF    FF2.7
01918:  CLRF   x60
0191A:  MOVWF  x5F
0191C:  MOVLB  0
0191E:  CALL   10B2
01922:  MOVFF  03,5CC
01926:  MOVFF  02,5CB
0192A:  MOVFF  01,5CA
0192E:  MOVFF  00,5C9
....................    delay_ms(10); 
01932:  MOVLW  0A
01934:  MOVLB  6
01936:  MOVWF  x62
01938:  MOVLB  0
0193A:  CALL   1052
....................    Tciclo=read_eeprom(17); 
0193E:  MOVFF  FF2,659
01942:  BCF    FF2.7
01944:  CLRF   FAA
01946:  MOVLW  11
01948:  MOVWF  FA9
0194A:  BCF    FA6.6
0194C:  BCF    FA6.7
0194E:  BSF    FA6.0
01950:  MOVF   FA8,W
01952:  MOVLB  6
01954:  BTFSC  x59.7
01956:  BSF    FF2.7
01958:  CLRF   x60
0195A:  MOVWF  x5F
0195C:  MOVLB  0
0195E:  CALL   10B2
01962:  MOVFF  03,5EC
01966:  MOVFF  02,5EB
0196A:  MOVFF  01,5EA
0196E:  MOVFF  00,5E9
....................    delay_ms(10); 
01972:  MOVLW  0A
01974:  MOVLB  6
01976:  MOVWF  x62
01978:  MOVLB  0
0197A:  CALL   1052
....................    Ajuste=read_eeprom(18); 
0197E:  MOVFF  FF2,659
01982:  BCF    FF2.7
01984:  CLRF   FAA
01986:  MOVLW  12
01988:  MOVWF  FA9
0198A:  BCF    FA6.6
0198C:  BCF    FA6.7
0198E:  BSF    FA6.0
01990:  MOVF   FA8,W
01992:  MOVLB  6
01994:  BTFSC  x59.7
01996:  BSF    FF2.7
01998:  MOVLB  5
0199A:  MOVWF  x8A
....................    delay_ms(10); 
0199C:  MOVLW  0A
0199E:  MOVLB  6
019A0:  MOVWF  x62
019A2:  MOVLB  0
019A4:  CALL   1052
....................    Ajusten=read_eeprom(19); 
019A8:  MOVFF  FF2,659
019AC:  BCF    FF2.7
019AE:  CLRF   FAA
019B0:  MOVLW  13
019B2:  MOVWF  FA9
019B4:  BCF    FA6.6
019B6:  BCF    FA6.7
019B8:  BSF    FA6.0
019BA:  MOVF   FA8,W
019BC:  MOVLB  6
019BE:  BTFSC  x59.7
019C0:  BSF    FF2.7
019C2:  MOVLB  5
019C4:  MOVWF  x8B
....................    delay_ms(10); 
019C6:  MOVLW  0A
019C8:  MOVLB  6
019CA:  MOVWF  x62
019CC:  MOVLB  0
019CE:  CALL   1052
....................    //Desvio=read_eeprom(23); 
....................    MediaMovil=read_eeprom(20); 
019D2:  MOVFF  FF2,659
019D6:  BCF    FF2.7
019D8:  CLRF   FAA
019DA:  MOVLW  14
019DC:  MOVWF  FA9
019DE:  BCF    FA6.6
019E0:  BCF    FA6.7
019E2:  BSF    FA6.0
019E4:  MOVF   FA8,W
019E6:  MOVLB  6
019E8:  BTFSC  x59.7
019EA:  BSF    FF2.7
019EC:  MOVLB  5
019EE:  MOVWF  x8C
....................    delay_ms(10);  
019F0:  MOVLW  0A
019F2:  MOVLB  6
019F4:  MOVWF  x62
019F6:  MOVLB  0
019F8:  CALL   1052
....................     
....................    Temporal=read_eeprom(22); 
019FC:  MOVFF  FF2,659
01A00:  BCF    FF2.7
01A02:  CLRF   FAA
01A04:  MOVLW  16
01A06:  MOVWF  FA9
01A08:  BCF    FA6.6
01A0A:  BCF    FA6.7
01A0C:  BSF    FA6.0
01A0E:  MOVF   FA8,W
01A10:  MOVLB  6
01A12:  BTFSC  x59.7
01A14:  BSF    FF2.7
01A16:  CLRF   x60
01A18:  MOVWF  x5F
01A1A:  MOVLB  0
01A1C:  CALL   10B2
01A20:  MOVFF  03,62C
01A24:  MOVFF  02,62B
01A28:  MOVFF  01,62A
01A2C:  MOVFF  00,629
....................    Temporal=Temporal/10.0; 
01A30:  MOVFF  62C,65D
01A34:  MOVFF  62B,65C
01A38:  MOVFF  62A,65B
01A3C:  MOVFF  629,65A
01A40:  MOVLB  6
01A42:  CLRF   x61
01A44:  CLRF   x60
01A46:  MOVLW  20
01A48:  MOVWF  x5F
01A4A:  MOVLW  82
01A4C:  MOVWF  x5E
01A4E:  MOVLB  0
01A50:  CALL   10E8
01A54:  MOVFF  03,62C
01A58:  MOVFF  02,62B
01A5C:  MOVFF  01,62A
01A60:  MOVFF  00,629
....................    delay_ms(10); 
01A64:  MOVLW  0A
01A66:  MOVLB  6
01A68:  MOVWF  x62
01A6A:  MOVLB  0
01A6C:  CALL   1052
....................    Gain=read_eeprom(21)+Temporal; 
01A70:  MOVFF  FF2,659
01A74:  BCF    FF2.7
01A76:  CLRF   FAA
01A78:  MOVLW  15
01A7A:  MOVWF  FA9
01A7C:  BCF    FA6.6
01A7E:  BCF    FA6.7
01A80:  BSF    FA6.0
01A82:  MOVF   FA8,W
01A84:  MOVLB  6
01A86:  BTFSC  x59.7
01A88:  BSF    FF2.7
01A8A:  CLRF   x60
01A8C:  MOVWF  x5F
01A8E:  MOVLB  0
01A90:  CALL   10B2
01A94:  BCF    FD8.1
01A96:  MOVFF  03,661
01A9A:  MOVFF  02,660
01A9E:  MOVFF  01,65F
01AA2:  MOVFF  00,65E
01AA6:  MOVFF  62C,665
01AAA:  MOVFF  62B,664
01AAE:  MOVFF  62A,663
01AB2:  MOVFF  629,662
01AB6:  CALL   1246
01ABA:  MOVFF  03,5C0
01ABE:  MOVFF  02,5BF
01AC2:  MOVFF  01,5BE
01AC6:  MOVFF  00,5BD
....................    delay_ms(10); 
01ACA:  MOVLW  0A
01ACC:  MOVLB  6
01ACE:  MOVWF  x62
01AD0:  MOVLB  0
01AD2:  CALL   1052
....................    R1=make16(read_eeprom(24),read_eeprom(23)); 
01AD6:  MOVFF  FF2,659
01ADA:  BCF    FF2.7
01ADC:  CLRF   FAA
01ADE:  MOVLW  18
01AE0:  MOVWF  FA9
01AE2:  BCF    FA6.6
01AE4:  BCF    FA6.7
01AE6:  BSF    FA6.0
01AE8:  MOVF   FA8,W
01AEA:  MOVLB  6
01AEC:  BTFSC  x59.7
01AEE:  BSF    FF2.7
01AF0:  MOVWF  x5A
01AF2:  MOVFF  FF2,65B
01AF6:  BCF    FF2.7
01AF8:  CLRF   FAA
01AFA:  MOVLW  17
01AFC:  MOVWF  FA9
01AFE:  BCF    FA6.6
01B00:  BCF    FA6.7
01B02:  BSF    FA6.0
01B04:  MOVF   FA8,W
01B06:  BTFSC  x5B.7
01B08:  BSF    FF2.7
01B0A:  MOVWF  x5C
01B0C:  MOVFF  65A,03
01B10:  MOVF   x5C,W
01B12:  MOVWF  x5F
01B14:  MOVFF  03,660
01B18:  MOVLB  0
01B1A:  CALL   10B2
01B1E:  MOVFF  03,5E4
01B22:  MOVFF  02,5E3
01B26:  MOVFF  01,5E2
01B2A:  MOVFF  00,5E1
....................    delay_ms(10); 
01B2E:  MOVLW  0A
01B30:  MOVLB  6
01B32:  MOVWF  x62
01B34:  MOVLB  0
01B36:  CALL   1052
....................    Temporal=read_eeprom(26); 
01B3A:  MOVFF  FF2,659
01B3E:  BCF    FF2.7
01B40:  CLRF   FAA
01B42:  MOVLW  1A
01B44:  MOVWF  FA9
01B46:  BCF    FA6.6
01B48:  BCF    FA6.7
01B4A:  BSF    FA6.0
01B4C:  MOVF   FA8,W
01B4E:  MOVLB  6
01B50:  BTFSC  x59.7
01B52:  BSF    FF2.7
01B54:  CLRF   x60
01B56:  MOVWF  x5F
01B58:  MOVLB  0
01B5A:  CALL   10B2
01B5E:  MOVFF  03,62C
01B62:  MOVFF  02,62B
01B66:  MOVFF  01,62A
01B6A:  MOVFF  00,629
....................    Temporal=Temporal/10.0; 
01B6E:  MOVFF  62C,65D
01B72:  MOVFF  62B,65C
01B76:  MOVFF  62A,65B
01B7A:  MOVFF  629,65A
01B7E:  MOVLB  6
01B80:  CLRF   x61
01B82:  CLRF   x60
01B84:  MOVLW  20
01B86:  MOVWF  x5F
01B88:  MOVLW  82
01B8A:  MOVWF  x5E
01B8C:  MOVLB  0
01B8E:  CALL   10E8
01B92:  MOVFF  03,62C
01B96:  MOVFF  02,62B
01B9A:  MOVFF  01,62A
01B9E:  MOVFF  00,629
....................    delay_ms(10); 
01BA2:  MOVLW  0A
01BA4:  MOVLB  6
01BA6:  MOVWF  x62
01BA8:  MOVLB  0
01BAA:  CALL   1052
....................    RPT100=read_eeprom(25)+Temporal; 
01BAE:  MOVFF  FF2,659
01BB2:  BCF    FF2.7
01BB4:  CLRF   FAA
01BB6:  MOVLW  19
01BB8:  MOVWF  FA9
01BBA:  BCF    FA6.6
01BBC:  BCF    FA6.7
01BBE:  BSF    FA6.0
01BC0:  MOVF   FA8,W
01BC2:  MOVLB  6
01BC4:  BTFSC  x59.7
01BC6:  BSF    FF2.7
01BC8:  CLRF   x60
01BCA:  MOVWF  x5F
01BCC:  MOVLB  0
01BCE:  CALL   10B2
01BD2:  BCF    FD8.1
01BD4:  MOVFF  03,661
01BD8:  MOVFF  02,660
01BDC:  MOVFF  01,65F
01BE0:  MOVFF  00,65E
01BE4:  MOVFF  62C,665
01BE8:  MOVFF  62B,664
01BEC:  MOVFF  62A,663
01BF0:  MOVFF  629,662
01BF4:  CALL   1246
01BF8:  MOVFF  03,5C4
01BFC:  MOVFF  02,5C3
01C00:  MOVFF  01,5C2
01C04:  MOVFF  00,5C1
....................    delay_ms(10); 
01C08:  MOVLW  0A
01C0A:  MOVLB  6
01C0C:  MOVWF  x62
01C0E:  MOVLB  0
01C10:  CALL   1052
....................    Source=read_eeprom(27); 
01C14:  MOVFF  FF2,659
01C18:  BCF    FF2.7
01C1A:  CLRF   FAA
01C1C:  MOVLW  1B
01C1E:  MOVWF  FA9
01C20:  BCF    FA6.6
01C22:  BCF    FA6.7
01C24:  BSF    FA6.0
01C26:  MOVF   FA8,W
01C28:  MOVLB  6
01C2A:  BTFSC  x59.7
01C2C:  BSF    FF2.7
01C2E:  MOVLB  5
01C30:  MOVWF  x96
....................    delay_ms(10); 
01C32:  MOVLW  0A
01C34:  MOVLB  6
01C36:  MOVWF  x62
01C38:  MOVLB  0
01C3A:  CALL   1052
.................... } 
01C3E:  GOTO   5D9A (RETURN)
....................  
.................... void LimitaValores(){ 
....................    if(Testerilizacionp[0]>9 || Testerilizacionp[0]<0){ 
*
01CBC:  MOVLB  5
01CBE:  BTFSC  xD1.7
01CC0:  BRA    1CC8
01CC2:  MOVF   xD1,W
01CC4:  SUBLW  09
01CC6:  BNC   1CCE
01CC8:  BTFSC  xD1.7
01CCA:  BRA    1CCE
01CCC:  BRA    1D06
....................       Testerilizacionp[0]=0;write_eeprom(0,0);delay_ms(20); 
01CCE:  CLRF   xD1
01CD0:  CLRF   FAA
01CD2:  CLRF   FA9
01CD4:  CLRF   FA8
01CD6:  BCF    FA6.6
01CD8:  BCF    FA6.7
01CDA:  BSF    FA6.2
01CDC:  MOVF   FF2,W
01CDE:  MOVWF  00
01CE0:  BCF    FF2.7
01CE2:  MOVLB  F
01CE4:  MOVLW  55
01CE6:  MOVWF  FA7
01CE8:  MOVLW  AA
01CEA:  MOVWF  FA7
01CEC:  BSF    FA6.1
01CEE:  BTFSC  FA6.1
01CF0:  BRA    1CEE
01CF2:  BCF    FA6.2
01CF4:  MOVF   00,W
01CF6:  IORWF  FF2,F
01CF8:  MOVLW  14
01CFA:  MOVLB  6
01CFC:  MOVWF  x62
01CFE:  MOVLB  0
01D00:  CALL   1052
01D04:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[1]>9 || Testerilizacionp[1]<0){ 
01D06:  BTFSC  xD2.7
01D08:  BRA    1D10
01D0A:  MOVF   xD2,W
01D0C:  SUBLW  09
01D0E:  BNC   1D16
01D10:  BTFSC  xD2.7
01D12:  BRA    1D16
01D14:  BRA    1D50
....................       Testerilizacionp[1]=0;write_eeprom(1,0);delay_ms(20); 
01D16:  CLRF   xD2
01D18:  CLRF   FAA
01D1A:  MOVLW  01
01D1C:  MOVWF  FA9
01D1E:  CLRF   FA8
01D20:  BCF    FA6.6
01D22:  BCF    FA6.7
01D24:  BSF    FA6.2
01D26:  MOVF   FF2,W
01D28:  MOVWF  00
01D2A:  BCF    FF2.7
01D2C:  MOVLB  F
01D2E:  MOVLW  55
01D30:  MOVWF  FA7
01D32:  MOVLW  AA
01D34:  MOVWF  FA7
01D36:  BSF    FA6.1
01D38:  BTFSC  FA6.1
01D3A:  BRA    1D38
01D3C:  BCF    FA6.2
01D3E:  MOVF   00,W
01D40:  IORWF  FF2,F
01D42:  MOVLW  14
01D44:  MOVLB  6
01D46:  MOVWF  x62
01D48:  MOVLB  0
01D4A:  CALL   1052
01D4E:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[2]>9 || Testerilizacionp[2]<0){ 
01D50:  BTFSC  xD3.7
01D52:  BRA    1D5A
01D54:  MOVF   xD3,W
01D56:  SUBLW  09
01D58:  BNC   1D60
01D5A:  BTFSC  xD3.7
01D5C:  BRA    1D60
01D5E:  BRA    1D9A
....................       Testerilizacionp[2]=0;write_eeprom(2,0);delay_ms(20); 
01D60:  CLRF   xD3
01D62:  CLRF   FAA
01D64:  MOVLW  02
01D66:  MOVWF  FA9
01D68:  CLRF   FA8
01D6A:  BCF    FA6.6
01D6C:  BCF    FA6.7
01D6E:  BSF    FA6.2
01D70:  MOVF   FF2,W
01D72:  MOVWF  00
01D74:  BCF    FF2.7
01D76:  MOVLB  F
01D78:  MOVLW  55
01D7A:  MOVWF  FA7
01D7C:  MOVLW  AA
01D7E:  MOVWF  FA7
01D80:  BSF    FA6.1
01D82:  BTFSC  FA6.1
01D84:  BRA    1D82
01D86:  BCF    FA6.2
01D88:  MOVF   00,W
01D8A:  IORWF  FF2,F
01D8C:  MOVLW  14
01D8E:  MOVLB  6
01D90:  MOVWF  x62
01D92:  MOVLB  0
01D94:  CALL   1052
01D98:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[3]>9 || Testerilizacionp[3]<0){ 
01D9A:  BTFSC  xD4.7
01D9C:  BRA    1DA4
01D9E:  MOVF   xD4,W
01DA0:  SUBLW  09
01DA2:  BNC   1DAA
01DA4:  BTFSC  xD4.7
01DA6:  BRA    1DAA
01DA8:  BRA    1DE4
....................       Testerilizacionp[3]=0;write_eeprom(3,0);delay_ms(20); 
01DAA:  CLRF   xD4
01DAC:  CLRF   FAA
01DAE:  MOVLW  03
01DB0:  MOVWF  FA9
01DB2:  CLRF   FA8
01DB4:  BCF    FA6.6
01DB6:  BCF    FA6.7
01DB8:  BSF    FA6.2
01DBA:  MOVF   FF2,W
01DBC:  MOVWF  00
01DBE:  BCF    FF2.7
01DC0:  MOVLB  F
01DC2:  MOVLW  55
01DC4:  MOVWF  FA7
01DC6:  MOVLW  AA
01DC8:  MOVWF  FA7
01DCA:  BSF    FA6.1
01DCC:  BTFSC  FA6.1
01DCE:  BRA    1DCC
01DD0:  BCF    FA6.2
01DD2:  MOVF   00,W
01DD4:  IORWF  FF2,F
01DD6:  MOVLW  14
01DD8:  MOVLB  6
01DDA:  MOVWF  x62
01DDC:  MOVLB  0
01DDE:  CALL   1052
01DE2:  MOVLB  5
....................    } 
....................    if(Password[0]>9 || Password[0]<0){ 
01DE4:  BTFSC  xD9.7
01DE6:  BRA    1DEE
01DE8:  MOVF   xD9,W
01DEA:  SUBLW  09
01DEC:  BNC   1DF4
01DEE:  BTFSC  xD9.7
01DF0:  BRA    1DF4
01DF2:  BRA    1E2E
....................       Password[0]=0;write_eeprom(4,0);delay_ms(20); 
01DF4:  CLRF   xD9
01DF6:  CLRF   FAA
01DF8:  MOVLW  04
01DFA:  MOVWF  FA9
01DFC:  CLRF   FA8
01DFE:  BCF    FA6.6
01E00:  BCF    FA6.7
01E02:  BSF    FA6.2
01E04:  MOVF   FF2,W
01E06:  MOVWF  00
01E08:  BCF    FF2.7
01E0A:  MOVLB  F
01E0C:  MOVLW  55
01E0E:  MOVWF  FA7
01E10:  MOVLW  AA
01E12:  MOVWF  FA7
01E14:  BSF    FA6.1
01E16:  BTFSC  FA6.1
01E18:  BRA    1E16
01E1A:  BCF    FA6.2
01E1C:  MOVF   00,W
01E1E:  IORWF  FF2,F
01E20:  MOVLW  14
01E22:  MOVLB  6
01E24:  MOVWF  x62
01E26:  MOVLB  0
01E28:  CALL   1052
01E2C:  MOVLB  5
....................    } 
....................    if(Password[1]>9 || Password[1]<0){ 
01E2E:  BTFSC  xDA.7
01E30:  BRA    1E38
01E32:  MOVF   xDA,W
01E34:  SUBLW  09
01E36:  BNC   1E3E
01E38:  BTFSC  xDA.7
01E3A:  BRA    1E3E
01E3C:  BRA    1E78
....................       Password[1]=0;write_eeprom(5,0);delay_ms(20); 
01E3E:  CLRF   xDA
01E40:  CLRF   FAA
01E42:  MOVLW  05
01E44:  MOVWF  FA9
01E46:  CLRF   FA8
01E48:  BCF    FA6.6
01E4A:  BCF    FA6.7
01E4C:  BSF    FA6.2
01E4E:  MOVF   FF2,W
01E50:  MOVWF  00
01E52:  BCF    FF2.7
01E54:  MOVLB  F
01E56:  MOVLW  55
01E58:  MOVWF  FA7
01E5A:  MOVLW  AA
01E5C:  MOVWF  FA7
01E5E:  BSF    FA6.1
01E60:  BTFSC  FA6.1
01E62:  BRA    1E60
01E64:  BCF    FA6.2
01E66:  MOVF   00,W
01E68:  IORWF  FF2,F
01E6A:  MOVLW  14
01E6C:  MOVLB  6
01E6E:  MOVWF  x62
01E70:  MOVLB  0
01E72:  CALL   1052
01E76:  MOVLB  5
....................    } 
....................    if(Password[2]>9 || Password[2]<0){ 
01E78:  BTFSC  xDB.7
01E7A:  BRA    1E82
01E7C:  MOVF   xDB,W
01E7E:  SUBLW  09
01E80:  BNC   1E88
01E82:  BTFSC  xDB.7
01E84:  BRA    1E88
01E86:  BRA    1EC2
....................       Password[2]=0;write_eeprom(6,0);delay_ms(20); 
01E88:  CLRF   xDB
01E8A:  CLRF   FAA
01E8C:  MOVLW  06
01E8E:  MOVWF  FA9
01E90:  CLRF   FA8
01E92:  BCF    FA6.6
01E94:  BCF    FA6.7
01E96:  BSF    FA6.2
01E98:  MOVF   FF2,W
01E9A:  MOVWF  00
01E9C:  BCF    FF2.7
01E9E:  MOVLB  F
01EA0:  MOVLW  55
01EA2:  MOVWF  FA7
01EA4:  MOVLW  AA
01EA6:  MOVWF  FA7
01EA8:  BSF    FA6.1
01EAA:  BTFSC  FA6.1
01EAC:  BRA    1EAA
01EAE:  BCF    FA6.2
01EB0:  MOVF   00,W
01EB2:  IORWF  FF2,F
01EB4:  MOVLW  14
01EB6:  MOVLB  6
01EB8:  MOVWF  x62
01EBA:  MOVLB  0
01EBC:  CALL   1052
01EC0:  MOVLB  5
....................    } 
....................    if(Password[3]>9 || Password[3]<0){ 
01EC2:  BTFSC  xDC.7
01EC4:  BRA    1ECC
01EC6:  MOVF   xDC,W
01EC8:  SUBLW  09
01ECA:  BNC   1ED2
01ECC:  BTFSC  xDC.7
01ECE:  BRA    1ED2
01ED0:  BRA    1F0A
....................       Password[3]=0;write_eeprom(7,0);delay_ms(20); 
01ED2:  CLRF   xDC
01ED4:  CLRF   FAA
01ED6:  MOVLW  07
01ED8:  MOVWF  FA9
01EDA:  CLRF   FA8
01EDC:  BCF    FA6.6
01EDE:  BCF    FA6.7
01EE0:  BSF    FA6.2
01EE2:  MOVF   FF2,W
01EE4:  MOVWF  00
01EE6:  BCF    FF2.7
01EE8:  MOVLB  F
01EEA:  MOVLW  55
01EEC:  MOVWF  FA7
01EEE:  MOVLW  AA
01EF0:  MOVWF  FA7
01EF2:  BSF    FA6.1
01EF4:  BTFSC  FA6.1
01EF6:  BRA    1EF4
01EF8:  BCF    FA6.2
01EFA:  MOVF   00,W
01EFC:  IORWF  FF2,F
01EFE:  MOVLW  14
01F00:  MOVLB  6
01F02:  MOVWF  x62
01F04:  MOVLB  0
01F06:  CALL   1052
....................    } 
....................    if(Temperatura1>80.0){ 
01F0A:  MOVLB  6
01F0C:  CLRF   x60
01F0E:  CLRF   x5F
01F10:  MOVLW  20
01F12:  MOVWF  x5E
01F14:  MOVLW  85
01F16:  MOVWF  x5D
01F18:  MOVFF  620,664
01F1C:  MOVFF  61F,663
01F20:  MOVFF  61E,662
01F24:  MOVFF  61D,661
01F28:  MOVLB  0
01F2A:  RCALL  1C42
01F2C:  BNC   1FAA
....................       Temperatura1=30.0;write_eeprom(8,30);delay_ms(20);write_eeprom(9,0);delay_ms(20); 
01F2E:  MOVLB  6
01F30:  CLRF   x20
01F32:  CLRF   x1F
01F34:  MOVLW  70
01F36:  MOVWF  x1E
01F38:  MOVLW  83
01F3A:  MOVWF  x1D
01F3C:  CLRF   FAA
01F3E:  MOVLW  08
01F40:  MOVWF  FA9
01F42:  MOVLW  1E
01F44:  MOVWF  FA8
01F46:  BCF    FA6.6
01F48:  BCF    FA6.7
01F4A:  BSF    FA6.2
01F4C:  MOVF   FF2,W
01F4E:  MOVWF  00
01F50:  BCF    FF2.7
01F52:  MOVLB  F
01F54:  MOVLW  55
01F56:  MOVWF  FA7
01F58:  MOVLW  AA
01F5A:  MOVWF  FA7
01F5C:  BSF    FA6.1
01F5E:  BTFSC  FA6.1
01F60:  BRA    1F5E
01F62:  BCF    FA6.2
01F64:  MOVF   00,W
01F66:  IORWF  FF2,F
01F68:  MOVLW  14
01F6A:  MOVLB  6
01F6C:  MOVWF  x62
01F6E:  MOVLB  0
01F70:  CALL   1052
01F74:  CLRF   FAA
01F76:  MOVLW  09
01F78:  MOVWF  FA9
01F7A:  CLRF   FA8
01F7C:  BCF    FA6.6
01F7E:  BCF    FA6.7
01F80:  BSF    FA6.2
01F82:  MOVF   FF2,W
01F84:  MOVWF  00
01F86:  BCF    FF2.7
01F88:  MOVLB  F
01F8A:  MOVLW  55
01F8C:  MOVWF  FA7
01F8E:  MOVLW  AA
01F90:  MOVWF  FA7
01F92:  BSF    FA6.1
01F94:  BTFSC  FA6.1
01F96:  BRA    1F94
01F98:  BCF    FA6.2
01F9A:  MOVF   00,W
01F9C:  IORWF  FF2,F
01F9E:  MOVLW  14
01FA0:  MOVLB  6
01FA2:  MOVWF  x62
01FA4:  MOVLB  0
01FA6:  CALL   1052
....................    } 
....................    if(Temperatura2>80.0){ 
01FAA:  MOVLB  6
01FAC:  CLRF   x60
01FAE:  CLRF   x5F
01FB0:  MOVLW  20
01FB2:  MOVWF  x5E
01FB4:  MOVLW  85
01FB6:  MOVWF  x5D
01FB8:  MOVFF  624,664
01FBC:  MOVFF  623,663
01FC0:  MOVFF  622,662
01FC4:  MOVFF  621,661
01FC8:  MOVLB  0
01FCA:  RCALL  1C42
01FCC:  BNC   204A
....................       Temperatura2=30.0;write_eeprom(10,30);delay_ms(20);write_eeprom(11,0);delay_ms(20); 
01FCE:  MOVLB  6
01FD0:  CLRF   x24
01FD2:  CLRF   x23
01FD4:  MOVLW  70
01FD6:  MOVWF  x22
01FD8:  MOVLW  83
01FDA:  MOVWF  x21
01FDC:  CLRF   FAA
01FDE:  MOVLW  0A
01FE0:  MOVWF  FA9
01FE2:  MOVLW  1E
01FE4:  MOVWF  FA8
01FE6:  BCF    FA6.6
01FE8:  BCF    FA6.7
01FEA:  BSF    FA6.2
01FEC:  MOVF   FF2,W
01FEE:  MOVWF  00
01FF0:  BCF    FF2.7
01FF2:  MOVLB  F
01FF4:  MOVLW  55
01FF6:  MOVWF  FA7
01FF8:  MOVLW  AA
01FFA:  MOVWF  FA7
01FFC:  BSF    FA6.1
01FFE:  BTFSC  FA6.1
02000:  BRA    1FFE
02002:  BCF    FA6.2
02004:  MOVF   00,W
02006:  IORWF  FF2,F
02008:  MOVLW  14
0200A:  MOVLB  6
0200C:  MOVWF  x62
0200E:  MOVLB  0
02010:  CALL   1052
02014:  CLRF   FAA
02016:  MOVLW  0B
02018:  MOVWF  FA9
0201A:  CLRF   FA8
0201C:  BCF    FA6.6
0201E:  BCF    FA6.7
02020:  BSF    FA6.2
02022:  MOVF   FF2,W
02024:  MOVWF  00
02026:  BCF    FF2.7
02028:  MOVLB  F
0202A:  MOVLW  55
0202C:  MOVWF  FA7
0202E:  MOVLW  AA
02030:  MOVWF  FA7
02032:  BSF    FA6.1
02034:  BTFSC  FA6.1
02036:  BRA    2034
02038:  BCF    FA6.2
0203A:  MOVF   00,W
0203C:  IORWF  FF2,F
0203E:  MOVLW  14
02040:  MOVLB  6
02042:  MOVWF  x62
02044:  MOVLB  0
02046:  CALL   1052
....................    } 
....................    if(Temperatura3>80.0){ 
0204A:  MOVLB  6
0204C:  CLRF   x60
0204E:  CLRF   x5F
02050:  MOVLW  20
02052:  MOVWF  x5E
02054:  MOVLW  85
02056:  MOVWF  x5D
02058:  MOVFF  628,664
0205C:  MOVFF  627,663
02060:  MOVFF  626,662
02064:  MOVFF  625,661
02068:  MOVLB  0
0206A:  RCALL  1C42
0206C:  BNC   20EA
....................       Temperatura3=30.0;write_eeprom(12,30);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
0206E:  MOVLB  6
02070:  CLRF   x28
02072:  CLRF   x27
02074:  MOVLW  70
02076:  MOVWF  x26
02078:  MOVLW  83
0207A:  MOVWF  x25
0207C:  CLRF   FAA
0207E:  MOVLW  0C
02080:  MOVWF  FA9
02082:  MOVLW  1E
02084:  MOVWF  FA8
02086:  BCF    FA6.6
02088:  BCF    FA6.7
0208A:  BSF    FA6.2
0208C:  MOVF   FF2,W
0208E:  MOVWF  00
02090:  BCF    FF2.7
02092:  MOVLB  F
02094:  MOVLW  55
02096:  MOVWF  FA7
02098:  MOVLW  AA
0209A:  MOVWF  FA7
0209C:  BSF    FA6.1
0209E:  BTFSC  FA6.1
020A0:  BRA    209E
020A2:  BCF    FA6.2
020A4:  MOVF   00,W
020A6:  IORWF  FF2,F
020A8:  MOVLW  14
020AA:  MOVLB  6
020AC:  MOVWF  x62
020AE:  MOVLB  0
020B0:  CALL   1052
020B4:  CLRF   FAA
020B6:  MOVLW  0D
020B8:  MOVWF  FA9
020BA:  CLRF   FA8
020BC:  BCF    FA6.6
020BE:  BCF    FA6.7
020C0:  BSF    FA6.2
020C2:  MOVF   FF2,W
020C4:  MOVWF  00
020C6:  BCF    FF2.7
020C8:  MOVLB  F
020CA:  MOVLW  55
020CC:  MOVWF  FA7
020CE:  MOVLW  AA
020D0:  MOVWF  FA7
020D2:  BSF    FA6.1
020D4:  BTFSC  FA6.1
020D6:  BRA    20D4
020D8:  BCF    FA6.2
020DA:  MOVF   00,W
020DC:  IORWF  FF2,F
020DE:  MOVLW  14
020E0:  MOVLB  6
020E2:  MOVWF  x62
020E4:  MOVLB  0
020E6:  CALL   1052
....................    } 
....................    if(Ganancia>40){ 
020EA:  MOVLB  6
020EC:  CLRF   x60
020EE:  CLRF   x5F
020F0:  MOVLW  20
020F2:  MOVWF  x5E
020F4:  MOVLW  84
020F6:  MOVWF  x5D
020F8:  MOVFF  604,664
020FC:  MOVFF  603,663
02100:  MOVFF  602,662
02104:  MOVFF  601,661
02108:  MOVLB  0
0210A:  RCALL  1C42
0210C:  BNC   2152
....................       Ganancia=2;write_eeprom(14,2);delay_ms(20); 
0210E:  MOVLB  6
02110:  CLRF   x04
02112:  CLRF   x03
02114:  CLRF   x02
02116:  MOVLW  80
02118:  MOVWF  x01
0211A:  CLRF   FAA
0211C:  MOVLW  0E
0211E:  MOVWF  FA9
02120:  MOVLW  02
02122:  MOVWF  FA8
02124:  BCF    FA6.6
02126:  BCF    FA6.7
02128:  BSF    FA6.2
0212A:  MOVF   FF2,W
0212C:  MOVWF  00
0212E:  BCF    FF2.7
02130:  MOVLB  F
02132:  MOVLW  55
02134:  MOVWF  FA7
02136:  MOVLW  AA
02138:  MOVWF  FA7
0213A:  BSF    FA6.1
0213C:  BTFSC  FA6.1
0213E:  BRA    213C
02140:  BCF    FA6.2
02142:  MOVF   00,W
02144:  IORWF  FF2,F
02146:  MOVLW  14
02148:  MOVLB  6
0214A:  MOVWF  x62
0214C:  MOVLB  0
0214E:  CALL   1052
....................    } 
....................    if(Integral>40){ 
02152:  MOVLB  6
02154:  CLRF   x60
02156:  CLRF   x5F
02158:  MOVLW  20
0215A:  MOVWF  x5E
0215C:  MOVLW  84
0215E:  MOVWF  x5D
02160:  MOVFF  5C8,664
02164:  MOVFF  5C7,663
02168:  MOVFF  5C6,662
0216C:  MOVFF  5C5,661
02170:  MOVLB  0
02172:  RCALL  1C42
02174:  BNC   21BA
....................       Integral=1;write_eeprom(15,1);delay_ms(20); 
02176:  MOVLB  5
02178:  CLRF   xC8
0217A:  CLRF   xC7
0217C:  CLRF   xC6
0217E:  MOVLW  7F
02180:  MOVWF  xC5
02182:  CLRF   FAA
02184:  MOVLW  0F
02186:  MOVWF  FA9
02188:  MOVLW  01
0218A:  MOVWF  FA8
0218C:  BCF    FA6.6
0218E:  BCF    FA6.7
02190:  BSF    FA6.2
02192:  MOVF   FF2,W
02194:  MOVWF  00
02196:  BCF    FF2.7
02198:  MOVLB  F
0219A:  MOVLW  55
0219C:  MOVWF  FA7
0219E:  MOVLW  AA
021A0:  MOVWF  FA7
021A2:  BSF    FA6.1
021A4:  BTFSC  FA6.1
021A6:  BRA    21A4
021A8:  BCF    FA6.2
021AA:  MOVF   00,W
021AC:  IORWF  FF2,F
021AE:  MOVLW  14
021B0:  MOVLB  6
021B2:  MOVWF  x62
021B4:  MOVLB  0
021B6:  CALL   1052
....................    } 
....................    if(Derivativo>200){ 
021BA:  MOVLB  6
021BC:  CLRF   x60
021BE:  CLRF   x5F
021C0:  MOVLW  48
021C2:  MOVWF  x5E
021C4:  MOVLW  86
021C6:  MOVWF  x5D
021C8:  MOVFF  5CC,664
021CC:  MOVFF  5CB,663
021D0:  MOVFF  5CA,662
021D4:  MOVFF  5C9,661
021D8:  MOVLB  0
021DA:  RCALL  1C42
021DC:  BNC   2224
....................       Derivativo=40;write_eeprom(16,40);delay_ms(20); 
021DE:  MOVLB  5
021E0:  CLRF   xCC
021E2:  CLRF   xCB
021E4:  MOVLW  20
021E6:  MOVWF  xCA
021E8:  MOVLW  84
021EA:  MOVWF  xC9
021EC:  CLRF   FAA
021EE:  MOVLW  10
021F0:  MOVWF  FA9
021F2:  MOVLW  28
021F4:  MOVWF  FA8
021F6:  BCF    FA6.6
021F8:  BCF    FA6.7
021FA:  BSF    FA6.2
021FC:  MOVF   FF2,W
021FE:  MOVWF  00
02200:  BCF    FF2.7
02202:  MOVLB  F
02204:  MOVLW  55
02206:  MOVWF  FA7
02208:  MOVLW  AA
0220A:  MOVWF  FA7
0220C:  BSF    FA6.1
0220E:  BTFSC  FA6.1
02210:  BRA    220E
02212:  BCF    FA6.2
02214:  MOVF   00,W
02216:  IORWF  FF2,F
02218:  MOVLW  14
0221A:  MOVLB  6
0221C:  MOVWF  x62
0221E:  MOVLB  0
02220:  CALL   1052
....................    } 
....................    if(Tciclo>40){ 
02224:  MOVLB  6
02226:  CLRF   x60
02228:  CLRF   x5F
0222A:  MOVLW  20
0222C:  MOVWF  x5E
0222E:  MOVLW  84
02230:  MOVWF  x5D
02232:  MOVFF  5EC,664
02236:  MOVFF  5EB,663
0223A:  MOVFF  5EA,662
0223E:  MOVFF  5E9,661
02242:  MOVLB  0
02244:  RCALL  1C42
02246:  BNC   228E
....................       Tciclo=5;write_eeprom(17,5);delay_ms(20); 
02248:  MOVLB  5
0224A:  CLRF   xEC
0224C:  CLRF   xEB
0224E:  MOVLW  20
02250:  MOVWF  xEA
02252:  MOVLW  81
02254:  MOVWF  xE9
02256:  CLRF   FAA
02258:  MOVLW  11
0225A:  MOVWF  FA9
0225C:  MOVLW  05
0225E:  MOVWF  FA8
02260:  BCF    FA6.6
02262:  BCF    FA6.7
02264:  BSF    FA6.2
02266:  MOVF   FF2,W
02268:  MOVWF  00
0226A:  BCF    FF2.7
0226C:  MOVLB  F
0226E:  MOVLW  55
02270:  MOVWF  FA7
02272:  MOVLW  AA
02274:  MOVWF  FA7
02276:  BSF    FA6.1
02278:  BTFSC  FA6.1
0227A:  BRA    2278
0227C:  BCF    FA6.2
0227E:  MOVF   00,W
02280:  IORWF  FF2,F
02282:  MOVLW  14
02284:  MOVLB  6
02286:  MOVWF  x62
02288:  MOVLB  0
0228A:  CALL   1052
....................    } 
....................    if(Ajuste>100){ 
0228E:  MOVLB  5
02290:  MOVF   x8A,W
02292:  SUBLW  64
02294:  BC    22D0
....................       Ajuste=0;write_eeprom(18,0);delay_ms(20); 
02296:  CLRF   x8A
02298:  CLRF   FAA
0229A:  MOVLW  12
0229C:  MOVWF  FA9
0229E:  CLRF   FA8
022A0:  BCF    FA6.6
022A2:  BCF    FA6.7
022A4:  BSF    FA6.2
022A6:  MOVF   FF2,W
022A8:  MOVWF  00
022AA:  BCF    FF2.7
022AC:  MOVLB  F
022AE:  MOVLW  55
022B0:  MOVWF  FA7
022B2:  MOVLW  AA
022B4:  MOVWF  FA7
022B6:  BSF    FA6.1
022B8:  BTFSC  FA6.1
022BA:  BRA    22B8
022BC:  BCF    FA6.2
022BE:  MOVF   00,W
022C0:  IORWF  FF2,F
022C2:  MOVLW  14
022C4:  MOVLB  6
022C6:  MOVWF  x62
022C8:  MOVLB  0
022CA:  CALL   1052
022CE:  MOVLB  5
....................    } 
....................    if(Ajusten>100){ 
022D0:  MOVF   x8B,W
022D2:  SUBLW  64
022D4:  BC    2310
....................       Ajusten=0;write_eeprom(19,0);delay_ms(20); 
022D6:  CLRF   x8B
022D8:  CLRF   FAA
022DA:  MOVLW  13
022DC:  MOVWF  FA9
022DE:  CLRF   FA8
022E0:  BCF    FA6.6
022E2:  BCF    FA6.7
022E4:  BSF    FA6.2
022E6:  MOVF   FF2,W
022E8:  MOVWF  00
022EA:  BCF    FF2.7
022EC:  MOVLB  F
022EE:  MOVLW  55
022F0:  MOVWF  FA7
022F2:  MOVLW  AA
022F4:  MOVWF  FA7
022F6:  BSF    FA6.1
022F8:  BTFSC  FA6.1
022FA:  BRA    22F8
022FC:  BCF    FA6.2
022FE:  MOVF   00,W
02300:  IORWF  FF2,F
02302:  MOVLW  14
02304:  MOVLB  6
02306:  MOVWF  x62
02308:  MOVLB  0
0230A:  CALL   1052
0230E:  MOVLB  5
....................    } 
....................    if(MediaMovil>80){ 
02310:  MOVF   x8C,W
02312:  SUBLW  50
02314:  BC    2352
....................       MediaMovil=80;write_eeprom(20,80);delay_ms(20); 
02316:  MOVLW  50
02318:  MOVWF  x8C
0231A:  CLRF   FAA
0231C:  MOVLW  14
0231E:  MOVWF  FA9
02320:  MOVLW  50
02322:  MOVWF  FA8
02324:  BCF    FA6.6
02326:  BCF    FA6.7
02328:  BSF    FA6.2
0232A:  MOVF   FF2,W
0232C:  MOVWF  00
0232E:  BCF    FF2.7
02330:  MOVLB  F
02332:  MOVLW  55
02334:  MOVWF  FA7
02336:  MOVLW  AA
02338:  MOVWF  FA7
0233A:  BSF    FA6.1
0233C:  BTFSC  FA6.1
0233E:  BRA    233C
02340:  BCF    FA6.2
02342:  MOVF   00,W
02344:  IORWF  FF2,F
02346:  MOVLW  14
02348:  MOVLB  6
0234A:  MOVWF  x62
0234C:  MOVLB  0
0234E:  CALL   1052
....................    } 
....................    if(Gain>50){ 
02352:  MOVLB  6
02354:  CLRF   x60
02356:  CLRF   x5F
02358:  MOVLW  48
0235A:  MOVWF  x5E
0235C:  MOVLW  84
0235E:  MOVWF  x5D
02360:  MOVFF  5C0,664
02364:  MOVFF  5BF,663
02368:  MOVFF  5BE,662
0236C:  MOVFF  5BD,661
02370:  MOVLB  0
02372:  RCALL  1C42
02374:  BNC   23F8
....................       Gain=40.2;write_eeprom(21,40);delay_ms(20);write_eeprom(22,2);delay_ms(20); 
02376:  MOVLW  CD
02378:  MOVLB  5
0237A:  MOVWF  xC0
0237C:  MOVLW  CC
0237E:  MOVWF  xBF
02380:  MOVLW  20
02382:  MOVWF  xBE
02384:  MOVLW  84
02386:  MOVWF  xBD
02388:  CLRF   FAA
0238A:  MOVLW  15
0238C:  MOVWF  FA9
0238E:  MOVLW  28
02390:  MOVWF  FA8
02392:  BCF    FA6.6
02394:  BCF    FA6.7
02396:  BSF    FA6.2
02398:  MOVF   FF2,W
0239A:  MOVWF  00
0239C:  BCF    FF2.7
0239E:  MOVLB  F
023A0:  MOVLW  55
023A2:  MOVWF  FA7
023A4:  MOVLW  AA
023A6:  MOVWF  FA7
023A8:  BSF    FA6.1
023AA:  BTFSC  FA6.1
023AC:  BRA    23AA
023AE:  BCF    FA6.2
023B0:  MOVF   00,W
023B2:  IORWF  FF2,F
023B4:  MOVLW  14
023B6:  MOVLB  6
023B8:  MOVWF  x62
023BA:  MOVLB  0
023BC:  CALL   1052
023C0:  CLRF   FAA
023C2:  MOVLW  16
023C4:  MOVWF  FA9
023C6:  MOVLW  02
023C8:  MOVWF  FA8
023CA:  BCF    FA6.6
023CC:  BCF    FA6.7
023CE:  BSF    FA6.2
023D0:  MOVF   FF2,W
023D2:  MOVWF  00
023D4:  BCF    FF2.7
023D6:  MOVLB  F
023D8:  MOVLW  55
023DA:  MOVWF  FA7
023DC:  MOVLW  AA
023DE:  MOVWF  FA7
023E0:  BSF    FA6.1
023E2:  BTFSC  FA6.1
023E4:  BRA    23E2
023E6:  BCF    FA6.2
023E8:  MOVF   00,W
023EA:  IORWF  FF2,F
023EC:  MOVLW  14
023EE:  MOVLB  6
023F0:  MOVWF  x62
023F2:  MOVLB  0
023F4:  CALL   1052
....................    } 
....................    if(R1>6400){ 
023F8:  MOVLB  6
023FA:  CLRF   x60
023FC:  CLRF   x5F
023FE:  MOVLW  48
02400:  MOVWF  x5E
02402:  MOVLW  8B
02404:  MOVWF  x5D
02406:  MOVFF  5E4,664
0240A:  MOVFF  5E3,663
0240E:  MOVFF  5E2,662
02412:  MOVFF  5E1,661
02416:  MOVLB  0
02418:  RCALL  1C42
0241A:  BNC   249C
....................       R1=6200;write_eeprom(23,0x18);delay_ms(20);write_eeprom(24,0x38);delay_ms(20); 
0241C:  MOVLB  5
0241E:  CLRF   xE4
02420:  MOVLW  C0
02422:  MOVWF  xE3
02424:  MOVLW  41
02426:  MOVWF  xE2
02428:  MOVLW  8B
0242A:  MOVWF  xE1
0242C:  CLRF   FAA
0242E:  MOVLW  17
02430:  MOVWF  FA9
02432:  MOVLW  18
02434:  MOVWF  FA8
02436:  BCF    FA6.6
02438:  BCF    FA6.7
0243A:  BSF    FA6.2
0243C:  MOVF   FF2,W
0243E:  MOVWF  00
02440:  BCF    FF2.7
02442:  MOVLB  F
02444:  MOVLW  55
02446:  MOVWF  FA7
02448:  MOVLW  AA
0244A:  MOVWF  FA7
0244C:  BSF    FA6.1
0244E:  BTFSC  FA6.1
02450:  BRA    244E
02452:  BCF    FA6.2
02454:  MOVF   00,W
02456:  IORWF  FF2,F
02458:  MOVLW  14
0245A:  MOVLB  6
0245C:  MOVWF  x62
0245E:  MOVLB  0
02460:  CALL   1052
02464:  CLRF   FAA
02466:  MOVLW  18
02468:  MOVWF  FA9
0246A:  MOVLW  38
0246C:  MOVWF  FA8
0246E:  BCF    FA6.6
02470:  BCF    FA6.7
02472:  BSF    FA6.2
02474:  MOVF   FF2,W
02476:  MOVWF  00
02478:  BCF    FF2.7
0247A:  MOVLB  F
0247C:  MOVLW  55
0247E:  MOVWF  FA7
02480:  MOVLW  AA
02482:  MOVWF  FA7
02484:  BSF    FA6.1
02486:  BTFSC  FA6.1
02488:  BRA    2486
0248A:  BCF    FA6.2
0248C:  MOVF   00,W
0248E:  IORWF  FF2,F
02490:  MOVLW  14
02492:  MOVLB  6
02494:  MOVWF  x62
02496:  MOVLB  0
02498:  CALL   1052
....................    } 
....................    if(RPT100>2.0){ 
0249C:  MOVLB  6
0249E:  CLRF   x60
024A0:  CLRF   x5F
024A2:  CLRF   x5E
024A4:  MOVLW  80
024A6:  MOVWF  x5D
024A8:  MOVFF  5C4,664
024AC:  MOVFF  5C3,663
024B0:  MOVFF  5C2,662
024B4:  MOVFF  5C1,661
024B8:  MOVLB  0
024BA:  CALL   1C42
024BE:  BNC   253A
....................       RPT100=0.5;write_eeprom(25,0);delay_ms(20);write_eeprom(26,5);delay_ms(20); 
024C0:  MOVLB  5
024C2:  CLRF   xC4
024C4:  CLRF   xC3
024C6:  CLRF   xC2
024C8:  MOVLW  7E
024CA:  MOVWF  xC1
024CC:  CLRF   FAA
024CE:  MOVLW  19
024D0:  MOVWF  FA9
024D2:  CLRF   FA8
024D4:  BCF    FA6.6
024D6:  BCF    FA6.7
024D8:  BSF    FA6.2
024DA:  MOVF   FF2,W
024DC:  MOVWF  00
024DE:  BCF    FF2.7
024E0:  MOVLB  F
024E2:  MOVLW  55
024E4:  MOVWF  FA7
024E6:  MOVLW  AA
024E8:  MOVWF  FA7
024EA:  BSF    FA6.1
024EC:  BTFSC  FA6.1
024EE:  BRA    24EC
024F0:  BCF    FA6.2
024F2:  MOVF   00,W
024F4:  IORWF  FF2,F
024F6:  MOVLW  14
024F8:  MOVLB  6
024FA:  MOVWF  x62
024FC:  MOVLB  0
024FE:  CALL   1052
02502:  CLRF   FAA
02504:  MOVLW  1A
02506:  MOVWF  FA9
02508:  MOVLW  05
0250A:  MOVWF  FA8
0250C:  BCF    FA6.6
0250E:  BCF    FA6.7
02510:  BSF    FA6.2
02512:  MOVF   FF2,W
02514:  MOVWF  00
02516:  BCF    FF2.7
02518:  MOVLB  F
0251A:  MOVLW  55
0251C:  MOVWF  FA7
0251E:  MOVLW  AA
02520:  MOVWF  FA7
02522:  BSF    FA6.1
02524:  BTFSC  FA6.1
02526:  BRA    2524
02528:  BCF    FA6.2
0252A:  MOVF   00,W
0252C:  IORWF  FF2,F
0252E:  MOVLW  14
02530:  MOVLB  6
02532:  MOVWF  x62
02534:  MOVLB  0
02536:  CALL   1052
....................    } 
....................    if(Source>1){ 
0253A:  MOVLB  5
0253C:  MOVF   x96,W
0253E:  SUBLW  01
02540:  BC    2580
....................       Source=1;write_eeprom(27,1);delay_ms(20); 
02542:  MOVLW  01
02544:  MOVWF  x96
02546:  CLRF   FAA
02548:  MOVLW  1B
0254A:  MOVWF  FA9
0254C:  MOVLW  01
0254E:  MOVWF  FA8
02550:  BCF    FA6.6
02552:  BCF    FA6.7
02554:  BSF    FA6.2
02556:  MOVF   FF2,W
02558:  MOVWF  00
0255A:  BCF    FF2.7
0255C:  MOVLB  F
0255E:  MOVLW  55
02560:  MOVWF  FA7
02562:  MOVLW  AA
02564:  MOVWF  FA7
02566:  BSF    FA6.1
02568:  BTFSC  FA6.1
0256A:  BRA    2568
0256C:  BCF    FA6.2
0256E:  MOVF   00,W
02570:  IORWF  FF2,F
02572:  MOVLW  14
02574:  MOVLB  6
02576:  MOVWF  x62
02578:  MOVLB  0
0257A:  CALL   1052
0257E:  MOVLB  5
....................    } 
.................... } 
02580:  MOVLB  0
02582:  GOTO   5D9E (RETURN)
....................  
.................... void DelayPuls(){ 
....................    delay_ms(2); 
*
037D6:  MOVLW  02
037D8:  MOVLB  6
037DA:  MOVWF  x62
037DC:  MOVLB  0
037DE:  CALL   1052
.................... } 
037E2:  RETLW  00
....................  
.................... short PidePassword(int8 MenuAnt, int8 MenuActual, int8 MenuPost, int8 clave0,int8 clave1, int8 clave2,int8 clave3,short cambia){ 
....................       if(n==0) 
*
03892:  MOVLB  5
03894:  MOVF   x92,F
03896:  BTFSS  FD8.2
03898:  BRA    3982
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1);displayContrasena(Contrasena[1],40,30,0); 
0389A:  MOVFF  5D5,663
0389E:  MOVLW  14
038A0:  MOVLB  6
038A2:  MOVWF  x64
038A4:  MOVLW  1E
038A6:  MOVWF  x65
038A8:  MOVLW  01
038AA:  MOVWF  x66
038AC:  MOVLB  0
038AE:  RCALL  3718
038B0:  MOVFF  5D6,663
038B4:  MOVLW  28
038B6:  MOVLB  6
038B8:  MOVWF  x64
038BA:  MOVLW  1E
038BC:  MOVWF  x65
038BE:  CLRF   x66
038C0:  MOVLB  0
038C2:  RCALL  3718
....................          displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
038C4:  MOVFF  5D7,663
038C8:  MOVLW  3C
038CA:  MOVLB  6
038CC:  MOVWF  x64
038CE:  MOVLW  1E
038D0:  MOVWF  x65
038D2:  CLRF   x66
038D4:  MOVLB  0
038D6:  RCALL  3718
038D8:  MOVFF  5D5,663
038DC:  MOVLW  50
038DE:  MOVLB  6
038E0:  MOVWF  x64
038E2:  MOVLW  1E
038E4:  MOVWF  x65
038E6:  CLRF   x66
038E8:  MOVLB  0
038EA:  RCALL  3718
....................          if(!cambia){ 
038EC:  MOVLB  6
038EE:  MOVF   x60,F
038F0:  BNZ   393A
....................             strcpy(Menus.Letra,"Clave"); 
038F2:  MOVLW  06
038F4:  MOVWF  FEA
038F6:  MOVLW  39
038F8:  MOVWF  FE9
038FA:  MOVFF  FF2,661
038FE:  BCF    FF2.7
03900:  MOVLW  00
03902:  MOVLB  0
03904:  CALL   07F0
03908:  TBLRD*-
0390A:  TBLRD*+
0390C:  MOVF   FF5,W
0390E:  MOVWF  FEE
03910:  IORLW  00
03912:  BNZ   390A
03914:  MOVLB  6
03916:  BTFSC  x61.7
03918:  BSF    FF2.7
....................             displayMenu(Menus.Letra,20,0,1,3); 
0391A:  MOVLW  06
0391C:  MOVWF  x62
0391E:  MOVLW  39
03920:  MOVWF  x61
03922:  MOVLW  14
03924:  MOVWF  x63
03926:  CLRF   x64
03928:  MOVLW  01
0392A:  MOVWF  x65
0392C:  MOVLW  03
0392E:  MOVWF  x66
03930:  MOVLB  0
03932:  CALL   2BEA
....................          }else{ 
03936:  BRA    397C
03938:  MOVLB  6
....................             strcpy(Menus.Letra,"Clave Nueva"); 
0393A:  MOVLW  06
0393C:  MOVWF  FEA
0393E:  MOVLW  39
03940:  MOVWF  FE9
03942:  MOVFF  FF2,661
03946:  BCF    FF2.7
03948:  MOVLW  00
0394A:  MOVLB  0
0394C:  CALL   0814
03950:  TBLRD*-
03952:  TBLRD*+
03954:  MOVF   FF5,W
03956:  MOVWF  FEE
03958:  IORLW  00
0395A:  BNZ   3952
0395C:  MOVLB  6
0395E:  BTFSC  x61.7
03960:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);   
03962:  MOVLW  06
03964:  MOVWF  x62
03966:  MOVLW  39
03968:  MOVWF  x61
0396A:  CLRF   x63
0396C:  CLRF   x64
0396E:  MOVLW  01
03970:  MOVWF  x65
03972:  MOVLW  02
03974:  MOVWF  x66
03976:  MOVLB  0
03978:  CALL   2BEA
....................          } 
....................          n=1; 
0397C:  MOVLW  01
0397E:  MOVLB  5
03980:  MOVWF  x92
....................       } 
....................        
....................       if(UP){ 
03982:  BSF    F92.4
03984:  BTFSC  F80.4
03986:  BRA    3A50
....................          if(Flanco == 0){ 
03988:  BTFSC  x87.1
0398A:  BRA    3A4E
....................             Flanco = 1;DelayPuls(); 
0398C:  BSF    x87.1
0398E:  MOVLB  0
03990:  RCALL  37D6
....................             for(i=1;i<=4;i++){ 
03992:  MOVLW  01
03994:  MOVLB  5
03996:  MOVWF  x99
03998:  MOVF   x99,W
0399A:  SUBLW  04
0399C:  BNC   3A4E
....................                if(unidad==i){ 
0399E:  MOVF   x99,W
039A0:  SUBWF  x98,W
039A2:  BNZ   3A18
....................                   Contrasena[i-1]++; 
039A4:  MOVLW  01
039A6:  SUBWF  x99,W
039A8:  CLRF   03
039AA:  ADDLW  D5
039AC:  MOVWF  FE9
039AE:  MOVLW  05
039B0:  ADDWFC 03,W
039B2:  MOVWF  FEA
039B4:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9){ 
039B6:  MOVLW  01
039B8:  SUBWF  x99,W
039BA:  CLRF   03
039BC:  ADDLW  D5
039BE:  MOVWF  FE9
039C0:  MOVLW  05
039C2:  ADDWFC 03,W
039C4:  MOVWF  FEA
039C6:  BTFSC  FEF.7
039C8:  BRA    39E2
039CA:  MOVF   FEF,W
039CC:  SUBLW  09
039CE:  BC    39E2
....................                      Contrasena[i-1]=0; 
039D0:  MOVLW  01
039D2:  SUBWF  x99,W
039D4:  CLRF   03
039D6:  ADDLW  D5
039D8:  MOVWF  FE9
039DA:  MOVLW  05
039DC:  ADDWFC 03,W
039DE:  MOVWF  FEA
039E0:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
039E2:  MOVLW  01
039E4:  SUBWF  x99,W
039E6:  CLRF   03
039E8:  ADDLW  D5
039EA:  MOVWF  FE9
039EC:  MOVLW  05
039EE:  ADDWFC 03,W
039F0:  MOVWF  FEA
039F2:  MOVFF  FEF,661
039F6:  MOVF   x99,W
039F8:  MULLW  14
039FA:  MOVFF  FF3,662
039FE:  MOVLB  6
03A00:  MOVFF  661,663
03A04:  MOVFF  662,664
03A08:  MOVLW  1E
03A0A:  MOVWF  x65
03A0C:  MOVLW  01
03A0E:  MOVWF  x66
03A10:  MOVLB  0
03A12:  RCALL  3718
....................                }else{ 
03A14:  BRA    3A48
03A16:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
03A18:  MOVLW  01
03A1A:  SUBWF  x99,W
03A1C:  CLRF   03
03A1E:  ADDLW  D5
03A20:  MOVWF  FE9
03A22:  MOVLW  05
03A24:  ADDWFC 03,W
03A26:  MOVWF  FEA
03A28:  MOVFF  FEF,661
03A2C:  MOVF   x99,W
03A2E:  MULLW  14
03A30:  MOVFF  FF3,662
03A34:  MOVLB  6
03A36:  MOVFF  661,663
03A3A:  MOVFF  662,664
03A3E:  MOVLW  1E
03A40:  MOVWF  x65
03A42:  CLRF   x66
03A44:  MOVLB  0
03A46:  RCALL  3718
....................                } 
....................             } 
03A48:  MOVLB  5
03A4A:  INCF   x99,F
03A4C:  BRA    3998
....................          } 
....................       }else{ 
03A4E:  BRA    3A52
....................          Flanco = 0; 
03A50:  BCF    x87.1
....................       } 
....................              
....................       if(DOWN){ 
03A52:  BSF    F92.5
03A54:  BTFSC  F80.5
03A56:  BRA    3B1E
....................          if(Flanco2 == 0){ 
03A58:  BTFSC  x87.3
03A5A:  BRA    3B1C
....................             Flanco2 = 1;DelayPuls(); 
03A5C:  BSF    x87.3
03A5E:  MOVLB  0
03A60:  RCALL  37D6
....................             for(i=1;i<=4;i++){ 
03A62:  MOVLW  01
03A64:  MOVLB  5
03A66:  MOVWF  x99
03A68:  MOVF   x99,W
03A6A:  SUBLW  04
03A6C:  BNC   3B1C
....................                if(unidad==i){ 
03A6E:  MOVF   x99,W
03A70:  SUBWF  x98,W
03A72:  BNZ   3AE6
....................                   Contrasena[i-1]--; 
03A74:  MOVLW  01
03A76:  SUBWF  x99,W
03A78:  CLRF   03
03A7A:  ADDLW  D5
03A7C:  MOVWF  FE9
03A7E:  MOVLW  05
03A80:  ADDWFC 03,W
03A82:  MOVWF  FEA
03A84:  DECF   FEF,F
....................                   if(Contrasena[i-1]<0){ 
03A86:  MOVLW  01
03A88:  SUBWF  x99,W
03A8A:  CLRF   03
03A8C:  ADDLW  D5
03A8E:  MOVWF  FE9
03A90:  MOVLW  05
03A92:  ADDWFC 03,W
03A94:  MOVWF  FEA
03A96:  BTFSC  FEF.7
03A98:  BRA    3A9C
03A9A:  BRA    3AB0
....................                      Contrasena[i-1]=9; 
03A9C:  MOVLW  01
03A9E:  SUBWF  x99,W
03AA0:  CLRF   03
03AA2:  ADDLW  D5
03AA4:  MOVWF  FE9
03AA6:  MOVLW  05
03AA8:  ADDWFC 03,W
03AAA:  MOVWF  FEA
03AAC:  MOVLW  09
03AAE:  MOVWF  FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
03AB0:  MOVLW  01
03AB2:  SUBWF  x99,W
03AB4:  CLRF   03
03AB6:  ADDLW  D5
03AB8:  MOVWF  FE9
03ABA:  MOVLW  05
03ABC:  ADDWFC 03,W
03ABE:  MOVWF  FEA
03AC0:  MOVFF  FEF,661
03AC4:  MOVF   x99,W
03AC6:  MULLW  14
03AC8:  MOVFF  FF3,662
03ACC:  MOVLB  6
03ACE:  MOVFF  661,663
03AD2:  MOVFF  662,664
03AD6:  MOVLW  1E
03AD8:  MOVWF  x65
03ADA:  MOVLW  01
03ADC:  MOVWF  x66
03ADE:  MOVLB  0
03AE0:  RCALL  3718
....................                }else{ 
03AE2:  BRA    3B16
03AE4:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
03AE6:  MOVLW  01
03AE8:  SUBWF  x99,W
03AEA:  CLRF   03
03AEC:  ADDLW  D5
03AEE:  MOVWF  FE9
03AF0:  MOVLW  05
03AF2:  ADDWFC 03,W
03AF4:  MOVWF  FEA
03AF6:  MOVFF  FEF,661
03AFA:  MOVF   x99,W
03AFC:  MULLW  14
03AFE:  MOVFF  FF3,662
03B02:  MOVLB  6
03B04:  MOVFF  661,663
03B08:  MOVFF  662,664
03B0C:  MOVLW  1E
03B0E:  MOVWF  x65
03B10:  CLRF   x66
03B12:  MOVLB  0
03B14:  RCALL  3718
....................                } 
....................             }       
03B16:  MOVLB  5
03B18:  INCF   x99,F
03B1A:  BRA    3A68
....................          }      
....................       }else{ 
03B1C:  BRA    3B20
....................          Flanco2 = 0; 
03B1E:  BCF    x87.3
....................       } 
....................              
....................       if(RIGHT){ 
03B20:  BSF    F96.0
03B22:  BTFSC  F84.0
03B24:  BRA    3BB2
....................          if(Flanco1 == 0){ 
03B26:  BTFSC  x87.2
03B28:  BRA    3BB0
....................             Flanco1 = 1;DelayPuls();unidad++; 
03B2A:  BSF    x87.2
03B2C:  MOVLB  0
03B2E:  RCALL  37D6
03B30:  MOVLB  5
03B32:  INCF   x98,F
....................             for(i=1;i<=4;i++){ 
03B34:  MOVLW  01
03B36:  MOVWF  x99
03B38:  MOVF   x99,W
03B3A:  SUBLW  04
03B3C:  BNC   3BB0
....................                if(unidad==i){ 
03B3E:  MOVF   x99,W
03B40:  SUBWF  x98,W
03B42:  BNZ   3B7A
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
03B44:  MOVLW  01
03B46:  SUBWF  x99,W
03B48:  CLRF   03
03B4A:  ADDLW  D5
03B4C:  MOVWF  FE9
03B4E:  MOVLW  05
03B50:  ADDWFC 03,W
03B52:  MOVWF  FEA
03B54:  MOVFF  FEF,661
03B58:  MOVF   x99,W
03B5A:  MULLW  14
03B5C:  MOVFF  FF3,662
03B60:  MOVLB  6
03B62:  MOVFF  661,663
03B66:  MOVFF  662,664
03B6A:  MOVLW  1E
03B6C:  MOVWF  x65
03B6E:  MOVLW  01
03B70:  MOVWF  x66
03B72:  MOVLB  0
03B74:  RCALL  3718
....................                }else{ 
03B76:  BRA    3BAA
03B78:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
03B7A:  MOVLW  01
03B7C:  SUBWF  x99,W
03B7E:  CLRF   03
03B80:  ADDLW  D5
03B82:  MOVWF  FE9
03B84:  MOVLW  05
03B86:  ADDWFC 03,W
03B88:  MOVWF  FEA
03B8A:  MOVFF  FEF,661
03B8E:  MOVF   x99,W
03B90:  MULLW  14
03B92:  MOVFF  FF3,662
03B96:  MOVLB  6
03B98:  MOVFF  661,663
03B9C:  MOVFF  662,664
03BA0:  MOVLW  1E
03BA2:  MOVWF  x65
03BA4:  CLRF   x66
03BA6:  MOVLB  0
03BA8:  RCALL  3718
....................                } 
....................             } 
03BAA:  MOVLB  5
03BAC:  INCF   x99,F
03BAE:  BRA    3B38
....................          } 
....................       }else{ 
03BB0:  BRA    3BB4
....................          Flanco1 = 0; 
03BB2:  BCF    x87.2
....................       } 
....................        
....................       if(LEFT){ 
03BB4:  BSF    F96.1
03BB6:  BTFSC  F84.1
03BB8:  BRA    3C02
....................          delay_ms(100); 
03BBA:  MOVLW  64
03BBC:  MOVLB  6
03BBE:  MOVWF  x62
03BC0:  MOVLB  0
03BC2:  CALL   1052
....................          if(LEFT){ 
03BC6:  BSF    F96.1
03BC8:  BTFSC  F84.1
03BCA:  BRA    3C00
....................             Menu=MenuAnt;glcd_fillScreen(OFF);n=0;Opcion=1;unidad=1; 
03BCC:  MOVFF  659,597
03BD0:  MOVLB  6
03BD2:  CLRF   x61
03BD4:  MOVLB  0
03BD6:  CALL   25BC
03BDA:  MOVLB  5
03BDC:  CLRF   x92
03BDE:  MOVLW  01
03BE0:  MOVWF  x9C
03BE2:  MOVWF  x98
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
03BE4:  CLRF   xD5
03BE6:  CLRF   xD6
03BE8:  CLRF   xD7
03BEA:  CLRF   xD8
....................             glcd_fillScreen(OFF);glcd_update(); 
03BEC:  MOVLB  6
03BEE:  CLRF   x61
03BF0:  MOVLB  0
03BF2:  CALL   25BC
03BF6:  CALL   2616
....................             return 1; 
03BFA:  MOVLW  01
03BFC:  MOVWF  01
03BFE:  BRA    40C4
03C00:  MOVLB  5
....................          } 
....................       } 
....................      
....................       if(unidad>4){ 
03C02:  MOVF   x98,W
03C04:  SUBLW  04
03C06:  BTFSC  FD8.0
03C08:  BRA    40C6
....................          glcd_fillScreen(OFF);unidad=1; 
03C0A:  MOVLB  6
03C0C:  CLRF   x61
03C0E:  MOVLB  0
03C10:  CALL   25BC
03C14:  MOVLW  01
03C16:  MOVLB  5
03C18:  MOVWF  x98
....................           
....................          if(!cambia){ 
03C1A:  MOVLB  6
03C1C:  MOVF   x60,F
03C1E:  BTFSS  FD8.2
03C20:  BRA    3FAE
....................             if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2 && MenuActual==0){ // Si Ingresa clave para reset general del sistema. 
03C22:  MOVLB  5
03C24:  MOVF   xD5,W
03C26:  SUBLW  03
03C28:  BTFSS  FD8.2
03C2A:  BRA    3D26
03C2C:  MOVF   xD6,W
03C2E:  SUBLW  08
03C30:  BTFSS  FD8.2
03C32:  BRA    3D26
03C34:  MOVF   xD7,W
03C36:  SUBLW  09
03C38:  BNZ   3D26
03C3A:  MOVF   xD8,W
03C3C:  SUBLW  02
03C3E:  BNZ   3D26
03C40:  MOVLB  6
03C42:  MOVF   x5A,F
03C44:  BTFSC  FD8.2
03C46:  BRA    3C4C
03C48:  MOVLB  5
03C4A:  BRA    3D26
....................                write_eeprom(4,0);delay_ms(20);write_eeprom(5,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
03C4C:  CLRF   FAA
03C4E:  MOVLW  04
03C50:  MOVWF  FA9
03C52:  CLRF   FA8
03C54:  BCF    FA6.6
03C56:  BCF    FA6.7
03C58:  BSF    FA6.2
03C5A:  MOVF   FF2,W
03C5C:  MOVWF  00
03C5E:  BCF    FF2.7
03C60:  MOVLB  F
03C62:  MOVLW  55
03C64:  MOVWF  FA7
03C66:  MOVLW  AA
03C68:  MOVWF  FA7
03C6A:  BSF    FA6.1
03C6C:  BTFSC  FA6.1
03C6E:  BRA    3C6C
03C70:  BCF    FA6.2
03C72:  MOVF   00,W
03C74:  IORWF  FF2,F
03C76:  MOVLW  14
03C78:  MOVLB  6
03C7A:  MOVWF  x62
03C7C:  MOVLB  0
03C7E:  CALL   1052
03C82:  CLRF   FAA
03C84:  MOVLW  05
03C86:  MOVWF  FA9
03C88:  CLRF   FA8
03C8A:  BCF    FA6.6
03C8C:  BCF    FA6.7
03C8E:  BSF    FA6.2
03C90:  MOVF   FF2,W
03C92:  MOVWF  00
03C94:  BCF    FF2.7
03C96:  MOVLB  F
03C98:  MOVLW  55
03C9A:  MOVWF  FA7
03C9C:  MOVLW  AA
03C9E:  MOVWF  FA7
03CA0:  BSF    FA6.1
03CA2:  BTFSC  FA6.1
03CA4:  BRA    3CA2
03CA6:  BCF    FA6.2
03CA8:  MOVF   00,W
03CAA:  IORWF  FF2,F
03CAC:  MOVLW  14
03CAE:  MOVLB  6
03CB0:  MOVWF  x62
03CB2:  MOVLB  0
03CB4:  CALL   1052
....................                write_eeprom(6,0);delay_ms(20);write_eeprom(7,0);delay_ms(20); 
03CB8:  CLRF   FAA
03CBA:  MOVLW  06
03CBC:  MOVWF  FA9
03CBE:  CLRF   FA8
03CC0:  BCF    FA6.6
03CC2:  BCF    FA6.7
03CC4:  BSF    FA6.2
03CC6:  MOVF   FF2,W
03CC8:  MOVWF  00
03CCA:  BCF    FF2.7
03CCC:  MOVLB  F
03CCE:  MOVLW  55
03CD0:  MOVWF  FA7
03CD2:  MOVLW  AA
03CD4:  MOVWF  FA7
03CD6:  BSF    FA6.1
03CD8:  BTFSC  FA6.1
03CDA:  BRA    3CD8
03CDC:  BCF    FA6.2
03CDE:  MOVF   00,W
03CE0:  IORWF  FF2,F
03CE2:  MOVLW  14
03CE4:  MOVLB  6
03CE6:  MOVWF  x62
03CE8:  MOVLB  0
03CEA:  CALL   1052
03CEE:  CLRF   FAA
03CF0:  MOVLW  07
03CF2:  MOVWF  FA9
03CF4:  CLRF   FA8
03CF6:  BCF    FA6.6
03CF8:  BCF    FA6.7
03CFA:  BSF    FA6.2
03CFC:  MOVF   FF2,W
03CFE:  MOVWF  00
03D00:  BCF    FF2.7
03D02:  MOVLB  F
03D04:  MOVLW  55
03D06:  MOVWF  FA7
03D08:  MOVLW  AA
03D0A:  MOVWF  FA7
03D0C:  BSF    FA6.1
03D0E:  BTFSC  FA6.1
03D10:  BRA    3D0E
03D12:  BCF    FA6.2
03D14:  MOVF   00,W
03D16:  IORWF  FF2,F
03D18:  MOVLW  14
03D1A:  MOVLB  6
03D1C:  MOVWF  x62
03D1E:  MOVLB  0
03D20:  CALL   1052
....................                reset_cpu(); 
03D24:  RESET
....................             } 
....................           
....................             if((Contrasena[0]==clave0)&&(Contrasena[1]==clave1)&&(Contrasena[2]==clave2)&&(Contrasena[3]==clave3)){ 
03D26:  MOVLB  6
03D28:  MOVF   x5C,W
03D2A:  MOVLB  5
03D2C:  SUBWF  xD5,W
03D2E:  BTFSS  FD8.2
03D30:  BRA    3E1A
03D32:  MOVLB  6
03D34:  MOVF   x5D,W
03D36:  MOVLB  5
03D38:  SUBWF  xD6,W
03D3A:  BNZ   3E1A
03D3C:  MOVLB  6
03D3E:  MOVF   x5E,W
03D40:  MOVLB  5
03D42:  SUBWF  xD7,W
03D44:  BNZ   3E1A
03D46:  MOVLB  6
03D48:  MOVF   x5F,W
03D4A:  MOVLB  5
03D4C:  SUBWF  xD8,W
03D4E:  BNZ   3E1A
....................                glcd_fillScreen(OFF); 
03D50:  MOVLB  6
03D52:  CLRF   x61
03D54:  MOVLB  0
03D56:  CALL   25BC
....................                strcpy(Menus.Letra,"Clave"); 
03D5A:  MOVLW  06
03D5C:  MOVWF  FEA
03D5E:  MOVLW  39
03D60:  MOVWF  FE9
03D62:  MOVFF  FF2,661
03D66:  BCF    FF2.7
03D68:  MOVLW  00
03D6A:  CALL   07F0
03D6E:  TBLRD*-
03D70:  TBLRD*+
03D72:  MOVF   FF5,W
03D74:  MOVWF  FEE
03D76:  IORLW  00
03D78:  BNZ   3D70
03D7A:  MOVLB  6
03D7C:  BTFSC  x61.7
03D7E:  BSF    FF2.7
....................                displayMenu(Menus.Letra,30,0,0,2); 
03D80:  MOVLW  06
03D82:  MOVWF  x62
03D84:  MOVLW  39
03D86:  MOVWF  x61
03D88:  MOVLW  1E
03D8A:  MOVWF  x63
03D8C:  CLRF   x64
03D8E:  CLRF   x65
03D90:  MOVLW  02
03D92:  MOVWF  x66
03D94:  MOVLB  0
03D96:  CALL   2BEA
....................                strcpy(Menus.Letra,"Correcta"); 
03D9A:  MOVLW  06
03D9C:  MOVWF  FEA
03D9E:  MOVLW  39
03DA0:  MOVWF  FE9
03DA2:  MOVFF  FF2,661
03DA6:  BCF    FF2.7
03DA8:  MOVLW  00
03DAA:  CALL   083E
03DAE:  TBLRD*-
03DB0:  TBLRD*+
03DB2:  MOVF   FF5,W
03DB4:  MOVWF  FEE
03DB6:  IORLW  00
03DB8:  BNZ   3DB0
03DBA:  MOVLB  6
03DBC:  BTFSC  x61.7
03DBE:  BSF    FF2.7
....................                displayMenu(Menus.Letra,15,30,0,2); 
03DC0:  MOVLW  06
03DC2:  MOVWF  x62
03DC4:  MOVLW  39
03DC6:  MOVWF  x61
03DC8:  MOVLW  0F
03DCA:  MOVWF  x63
03DCC:  MOVLW  1E
03DCE:  MOVWF  x64
03DD0:  CLRF   x65
03DD2:  MOVLW  02
03DD4:  MOVWF  x66
03DD6:  MOVLB  0
03DD8:  CALL   2BEA
....................                Menu=MenuPost;glcd_update();delay_ms(1000);glcd_fillScreen(OFF); 
03DDC:  MOVFF  65B,597
03DE0:  CALL   2616
03DE4:  MOVLW  04
03DE6:  MOVLB  6
03DE8:  MOVWF  x61
03DEA:  MOVLW  FA
03DEC:  MOVWF  x62
03DEE:  MOVLB  0
03DF0:  CALL   1052
03DF4:  MOVLB  6
03DF6:  DECFSZ x61,F
03DF8:  BRA    3DEA
03DFA:  CLRF   x61
03DFC:  MOVLB  0
03DFE:  CALL   25BC
....................                Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
03E02:  MOVLB  5
03E04:  CLRF   xD5
03E06:  CLRF   xD6
03E08:  CLRF   xD7
03E0A:  CLRF   xD8
....................                n=0; 
03E0C:  CLRF   x92
....................                return 1; 
03E0E:  MOVLW  01
03E10:  MOVWF  01
03E12:  MOVLB  0
03E14:  BRA    40C4
....................             }else{ 
03E16:  BRA    3FAA
03E18:  MOVLB  5
....................                glcd_fillScreen(OFF); 
03E1A:  MOVLB  6
03E1C:  CLRF   x61
03E1E:  MOVLB  0
03E20:  CALL   25BC
....................                strcpy(Menus.Letra,"Clave"); 
03E24:  MOVLW  06
03E26:  MOVWF  FEA
03E28:  MOVLW  39
03E2A:  MOVWF  FE9
03E2C:  MOVFF  FF2,661
03E30:  BCF    FF2.7
03E32:  MOVLW  00
03E34:  CALL   07F0
03E38:  TBLRD*-
03E3A:  TBLRD*+
03E3C:  MOVF   FF5,W
03E3E:  MOVWF  FEE
03E40:  IORLW  00
03E42:  BNZ   3E3A
03E44:  MOVLB  6
03E46:  BTFSC  x61.7
03E48:  BSF    FF2.7
....................                displayMenu(Menus.Letra,30,0,0,2); 
03E4A:  MOVLW  06
03E4C:  MOVWF  x62
03E4E:  MOVLW  39
03E50:  MOVWF  x61
03E52:  MOVLW  1E
03E54:  MOVWF  x63
03E56:  CLRF   x64
03E58:  CLRF   x65
03E5A:  MOVLW  02
03E5C:  MOVWF  x66
03E5E:  MOVLB  0
03E60:  CALL   2BEA
....................                strcpy(Menus.Letra,"Incorrecta"); 
03E64:  MOVLW  06
03E66:  MOVWF  FEA
03E68:  MOVLW  39
03E6A:  MOVWF  FE9
03E6C:  MOVFF  FF2,661
03E70:  BCF    FF2.7
03E72:  MOVLW  00
03E74:  CALL   0866
03E78:  TBLRD*-
03E7A:  TBLRD*+
03E7C:  MOVF   FF5,W
03E7E:  MOVWF  FEE
03E80:  IORLW  00
03E82:  BNZ   3E7A
03E84:  MOVLB  6
03E86:  BTFSC  x61.7
03E88:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,2); 
03E8A:  MOVLW  06
03E8C:  MOVWF  x62
03E8E:  MOVLW  39
03E90:  MOVWF  x61
03E92:  CLRF   x63
03E94:  MOVLW  1E
03E96:  MOVWF  x64
03E98:  CLRF   x65
03E9A:  MOVLW  02
03E9C:  MOVWF  x66
03E9E:  MOVLB  0
03EA0:  CALL   2BEA
....................                unidad=1;glcd_update();delay_ms(1000);Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0;glcd_fillScreen(OFF); 
03EA4:  MOVLW  01
03EA6:  MOVLB  5
03EA8:  MOVWF  x98
03EAA:  MOVLB  0
03EAC:  CALL   2616
03EB0:  MOVLW  04
03EB2:  MOVLB  6
03EB4:  MOVWF  x61
03EB6:  MOVLW  FA
03EB8:  MOVWF  x62
03EBA:  MOVLB  0
03EBC:  CALL   1052
03EC0:  MOVLB  6
03EC2:  DECFSZ x61,F
03EC4:  BRA    3EB6
03EC6:  MOVLB  5
03EC8:  CLRF   xD5
03ECA:  CLRF   xD6
03ECC:  CLRF   xD7
03ECE:  CLRF   xD8
03ED0:  MOVLB  6
03ED2:  CLRF   x61
03ED4:  MOVLB  0
03ED6:  CALL   25BC
....................                glcd_rect(0, 0, 127, 25, YES, ON);strcpy(Menus.Letra,"Clave");glcd_text57(25, 1, Menus.Letra, 3, OFF);displayContrasena(Contrasena[0],20,30,1); 
03EDA:  MOVLB  6
03EDC:  CLRF   x72
03EDE:  CLRF   x73
03EE0:  MOVLW  7F
03EE2:  MOVWF  x74
03EE4:  MOVLW  19
03EE6:  MOVWF  x75
03EE8:  MOVLW  01
03EEA:  MOVWF  x76
03EEC:  MOVWF  x77
03EEE:  MOVLB  0
03EF0:  CALL   2B28
03EF4:  MOVLW  06
03EF6:  MOVWF  FEA
03EF8:  MOVLW  39
03EFA:  MOVWF  FE9
03EFC:  MOVFF  FF2,661
03F00:  BCF    FF2.7
03F02:  MOVLW  00
03F04:  CALL   07F0
03F08:  TBLRD*-
03F0A:  TBLRD*+
03F0C:  MOVF   FF5,W
03F0E:  MOVWF  FEE
03F10:  IORLW  00
03F12:  BNZ   3F0A
03F14:  MOVLB  6
03F16:  BTFSC  x61.7
03F18:  BSF    FF2.7
03F1A:  MOVLW  19
03F1C:  MOVWF  x72
03F1E:  MOVLW  01
03F20:  MOVWF  x73
03F22:  MOVLW  06
03F24:  MOVWF  x75
03F26:  MOVLW  39
03F28:  MOVWF  x74
03F2A:  MOVLW  03
03F2C:  MOVWF  x76
03F2E:  CLRF   x77
03F30:  MOVLB  0
03F32:  CALL   2832
03F36:  MOVFF  5D5,663
03F3A:  MOVLW  14
03F3C:  MOVLB  6
03F3E:  MOVWF  x64
03F40:  MOVLW  1E
03F42:  MOVWF  x65
03F44:  MOVLW  01
03F46:  MOVWF  x66
03F48:  MOVLB  0
03F4A:  CALL   3718
....................                displayContrasena(Contrasena[1],40,30,0);displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
03F4E:  MOVFF  5D6,663
03F52:  MOVLW  28
03F54:  MOVLB  6
03F56:  MOVWF  x64
03F58:  MOVLW  1E
03F5A:  MOVWF  x65
03F5C:  CLRF   x66
03F5E:  MOVLB  0
03F60:  CALL   3718
03F64:  MOVFF  5D7,663
03F68:  MOVLW  3C
03F6A:  MOVLB  6
03F6C:  MOVWF  x64
03F6E:  MOVLW  1E
03F70:  MOVWF  x65
03F72:  CLRF   x66
03F74:  MOVLB  0
03F76:  CALL   3718
03F7A:  MOVFF  5D5,663
03F7E:  MOVLW  50
03F80:  MOVLB  6
03F82:  MOVWF  x64
03F84:  MOVLW  1E
03F86:  MOVWF  x65
03F88:  CLRF   x66
03F8A:  MOVLB  0
03F8C:  CALL   3718
....................                Menu=MenuAnt;glcd_fillScreen(OFF);n=0; 
03F90:  MOVFF  659,597
03F94:  MOVLB  6
03F96:  CLRF   x61
03F98:  MOVLB  0
03F9A:  CALL   25BC
03F9E:  MOVLB  5
03FA0:  CLRF   x92
....................                return 0; 
03FA2:  MOVLW  00
03FA4:  MOVWF  01
03FA6:  MOVLB  0
03FA8:  BRA    40C4
....................             } 
....................          }else{ 
03FAA:  BRA    40C4
03FAC:  MOVLB  6
....................             Opcion=1;unidad=1; 
03FAE:  MOVLW  01
03FB0:  MOVLB  5
03FB2:  MOVWF  x9C
03FB4:  MOVWF  x98
....................             write_eeprom(4,Contrasena[0]); 
03FB6:  CLRF   FAA
03FB8:  MOVLW  04
03FBA:  MOVWF  FA9
03FBC:  MOVFF  5D5,FA8
03FC0:  BCF    FA6.6
03FC2:  BCF    FA6.7
03FC4:  BSF    FA6.2
03FC6:  MOVF   FF2,W
03FC8:  MOVWF  00
03FCA:  BCF    FF2.7
03FCC:  MOVLB  F
03FCE:  MOVLW  55
03FD0:  MOVWF  FA7
03FD2:  MOVLW  AA
03FD4:  MOVWF  FA7
03FD6:  BSF    FA6.1
03FD8:  BTFSC  FA6.1
03FDA:  BRA    3FD8
03FDC:  BCF    FA6.2
03FDE:  MOVF   00,W
03FE0:  IORWF  FF2,F
....................             delay_ms(50);    
03FE2:  MOVLW  32
03FE4:  MOVLB  6
03FE6:  MOVWF  x62
03FE8:  MOVLB  0
03FEA:  CALL   1052
....................             write_eeprom(5,Contrasena[1]); 
03FEE:  CLRF   FAA
03FF0:  MOVLW  05
03FF2:  MOVWF  FA9
03FF4:  MOVFF  5D6,FA8
03FF8:  BCF    FA6.6
03FFA:  BCF    FA6.7
03FFC:  BSF    FA6.2
03FFE:  MOVF   FF2,W
04000:  MOVWF  00
04002:  BCF    FF2.7
04004:  MOVLB  F
04006:  MOVLW  55
04008:  MOVWF  FA7
0400A:  MOVLW  AA
0400C:  MOVWF  FA7
0400E:  BSF    FA6.1
04010:  BTFSC  FA6.1
04012:  BRA    4010
04014:  BCF    FA6.2
04016:  MOVF   00,W
04018:  IORWF  FF2,F
....................             delay_ms(50);    
0401A:  MOVLW  32
0401C:  MOVLB  6
0401E:  MOVWF  x62
04020:  MOVLB  0
04022:  CALL   1052
....................             write_eeprom(6,Contrasena[2]); 
04026:  CLRF   FAA
04028:  MOVLW  06
0402A:  MOVWF  FA9
0402C:  MOVFF  5D7,FA8
04030:  BCF    FA6.6
04032:  BCF    FA6.7
04034:  BSF    FA6.2
04036:  MOVF   FF2,W
04038:  MOVWF  00
0403A:  BCF    FF2.7
0403C:  MOVLB  F
0403E:  MOVLW  55
04040:  MOVWF  FA7
04042:  MOVLW  AA
04044:  MOVWF  FA7
04046:  BSF    FA6.1
04048:  BTFSC  FA6.1
0404A:  BRA    4048
0404C:  BCF    FA6.2
0404E:  MOVF   00,W
04050:  IORWF  FF2,F
....................             delay_ms(50);    
04052:  MOVLW  32
04054:  MOVLB  6
04056:  MOVWF  x62
04058:  MOVLB  0
0405A:  CALL   1052
....................             write_eeprom(7,Contrasena[3]); 
0405E:  CLRF   FAA
04060:  MOVLW  07
04062:  MOVWF  FA9
04064:  MOVFF  5D8,FA8
04068:  BCF    FA6.6
0406A:  BCF    FA6.7
0406C:  BSF    FA6.2
0406E:  MOVF   FF2,W
04070:  MOVWF  00
04072:  BCF    FF2.7
04074:  MOVLB  F
04076:  MOVLW  55
04078:  MOVWF  FA7
0407A:  MOVLW  AA
0407C:  MOVWF  FA7
0407E:  BSF    FA6.1
04080:  BTFSC  FA6.1
04082:  BRA    4080
04084:  BCF    FA6.2
04086:  MOVF   00,W
04088:  IORWF  FF2,F
....................             delay_ms(1000);glcd_fillScreen(OFF);Menu=MenuAnt; 
0408A:  MOVLW  04
0408C:  MOVLB  6
0408E:  MOVWF  x61
04090:  MOVLW  FA
04092:  MOVWF  x62
04094:  MOVLB  0
04096:  CALL   1052
0409A:  MOVLB  6
0409C:  DECFSZ x61,F
0409E:  BRA    4090
040A0:  CLRF   x61
040A2:  MOVLB  0
040A4:  CALL   25BC
040A8:  MOVFF  659,597
....................             n=0; 
040AC:  MOVLB  5
040AE:  CLRF   x92
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
040B0:  CLRF   xD5
040B2:  CLRF   xD6
040B4:  CLRF   xD7
040B6:  CLRF   xD8
....................             MensajeAlmacenado(); 
040B8:  MOVLB  0
040BA:  CALL   37E4
....................             return 0; 
040BE:  MOVLW  00
040C0:  MOVWF  01
040C2:  BRA    40C4
040C4:  MOVLB  5
....................          } 
....................       } 
.................... } 
040C6:  MOVLB  0
040C8:  RETLW  00
....................  
.................... void CuentaTiempo(){ 
....................       if(tinicio>=60) 
*
0580A:  MOVLB  5
0580C:  MOVF   xA8,F
0580E:  BNZ   5816
05810:  MOVF   xA7,W
05812:  SUBLW  3B
05814:  BC    5852
....................       { 
....................          tinicio=0; 
05816:  CLRF   xA8
05818:  CLRF   xA7
....................          Testerilizacion[0]++; 
0581A:  INCF   xCD,F
....................          if(Testerilizacion[0]>9) 
0581C:  BTFSC  xCD.7
0581E:  BRA    582A
05820:  MOVF   xCD,W
05822:  SUBLW  09
05824:  BC    582A
....................          { 
....................             Testerilizacion[0]=0; 
05826:  CLRF   xCD
....................             Testerilizacion[1]++; 
05828:  INCF   xCE,F
....................          } 
....................          if(Testerilizacion[1]>5) 
0582A:  BTFSC  xCE.7
0582C:  BRA    5838
0582E:  MOVF   xCE,W
05830:  SUBLW  05
05832:  BC    5838
....................          { 
....................             Testerilizacion[1]=0; 
05834:  CLRF   xCE
....................             Testerilizacion[2]++; 
05836:  INCF   xCF,F
....................          } 
....................          if(Testerilizacion[2]>9) 
05838:  BTFSC  xCF.7
0583A:  BRA    5846
0583C:  MOVF   xCF,W
0583E:  SUBLW  09
05840:  BC    5846
....................          { 
....................             Testerilizacion[2]=0; 
05842:  CLRF   xCF
....................             Testerilizacion[3]++; 
05844:  INCF   xD0,F
....................          } 
....................          if(Testerilizacion[3]>9) 
05846:  BTFSC  xD0.7
05848:  BRA    5852
0584A:  MOVF   xD0,W
0584C:  SUBLW  09
0584E:  BC    5852
....................          { 
....................             Testerilizacion[3]=0; 
05850:  CLRF   xD0
....................          } 
....................       } 
.................... } 
05852:  MOVLB  0
05854:  GOTO   7BD4 (RETURN)
....................  
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(40536); 
*
00FBE:  MOVLW  9E
00FC0:  MOVWF  FCF
00FC2:  MOVLW  58
00FC4:  MOVWF  FCE
....................    tiempos++; 
00FC6:  MOVLB  5
00FC8:  INCF   xA1,F
00FCA:  BTFSC  FD8.2
00FCC:  INCF   xA2,F
....................    tiempos3++; 
00FCE:  INCF   xA3,F
00FD0:  BTFSC  FD8.2
00FD2:  INCF   xA4,F
....................    tiempoctrl++; 
00FD4:  INCF   xA5,F
00FD6:  BTFSC  FD8.2
00FD8:  INCF   xA6,F
....................     
....................    if(tiempos3>=200) 
00FDA:  MOVF   xA4,F
00FDC:  BNZ   0FE4
00FDE:  MOVF   xA3,W
00FE0:  SUBLW  C7
00FE2:  BC    0FE8
....................       Lectura2=1; 
00FE4:  MOVLW  01
00FE6:  MOVWF  x8F
....................     
....................    if(Controlando==1){ 
00FE8:  DECFSZ x90,W
00FEA:  BRA    1016
....................       if(tiempoctrl<Tp) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
00FEC:  MOVF   xA6,W
00FEE:  SUBWF  xAE,W
00FF0:  BNC   1000
00FF2:  BNZ   0FFA
00FF4:  MOVF   xAD,W
00FF6:  SUBWF  xA5,W
00FF8:  BC    1000
....................          SSR_on; 
00FFA:  BCF    F8B.2
00FFC:  BCF    F94.2
....................       else          
00FFE:  BRA    1004
....................          SSR_off; 
01000:  BSF    F8B.2
01002:  BCF    F94.2
....................        
....................       if(tiempoctrl>=Tc) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
01004:  MOVF   xB0,W
01006:  SUBWF  xA6,W
01008:  BNC   1016
0100A:  BNZ   1012
0100C:  MOVF   xAF,W
0100E:  SUBWF  xA5,W
01010:  BNC   1016
....................          tiempoctrl=0; // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
01012:  CLRF   xA6
01014:  CLRF   xA5
....................    } 
....................      
....................    if(tiempos>=200){  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
01016:  MOVF   xA2,F
01018:  BNZ   1020
0101A:  MOVF   xA1,W
0101C:  SUBLW  C7
0101E:  BC    104A
....................       tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++; 
01020:  CLRF   xA2
01022:  CLRF   xA1
01024:  BSF    x87.5
01026:  INCF   x95,F
01028:  INCF   x9B,F
0102A:  INCF   x8D,F
....................     
....................       if(flag_setpoint==1) 
0102C:  BTFSS  x93.6
0102E:  BRA    1036
....................          tiemposetpoint++; 
01030:  INCF   xAB,F
01032:  BTFSC  FD8.2
01034:  INCF   xAC,F
....................           
....................       if(tiempo_esterilizacion==1)    
01036:  DECFSZ x9D,W
01038:  BRA    1040
....................          tinicio++; 
0103A:  INCF   xA7,F
0103C:  BTFSC  FD8.2
0103E:  INCF   xA8,F
....................        
....................       if(flag_tiempocalentamiento==1) 
01040:  BTFSS  x93.4
01042:  BRA    104A
....................          tiempocalentamiento++; 
01044:  INCF   xA9,F
01046:  BTFSC  FD8.2
01048:  INCF   xAA,F
....................    }         
.................... } 
....................  
0104A:  BCF    F9E.0
0104C:  MOVLB  0
0104E:  GOTO   0058
.................... void main() 
.................... { 
*
058D2:  CLRF   FF8
058D4:  BCF    FD0.7
058D6:  BSF    07.7
058D8:  CLRF   FEA
058DA:  CLRF   FE9
058DC:  MOVLB  5
058DE:  BCF    x87.0
058E0:  CLRF   x88
058E2:  CLRF   x89
058E4:  CLRF   x8A
058E6:  CLRF   x8B
058E8:  MOVLW  0A
058EA:  MOVWF  x8C
058EC:  CLRF   x8D
058EE:  CLRF   x8E
058F0:  CLRF   x8F
058F2:  CLRF   x90
058F4:  MOVWF  x91
058F6:  CLRF   x92
058F8:  BCF    x87.1
058FA:  BCF    x87.2
058FC:  BCF    x87.3
058FE:  BSF    x87.4
05900:  BCF    x87.5
05902:  BCF    x87.6
05904:  BCF    x87.7
05906:  BCF    x93.0
05908:  BCF    x93.1
0590A:  BCF    x93.2
0590C:  BCF    x93.3
0590E:  BCF    x93.4
05910:  BCF    x93.5
05912:  BCF    x93.6
05914:  BCF    x93.7
05916:  CLRF   x94
05918:  CLRF   x95
0591A:  MOVLW  01
0591C:  MOVWF  x96
0591E:  CLRF   x97
05920:  MOVWF  x98
05922:  CLRF   x99
05924:  CLRF   x9A
05926:  CLRF   x9B
05928:  MOVWF  x9C
0592A:  CLRF   x9D
0592C:  CLRF   x9E
0592E:  CLRF   x9F
05930:  CLRF   xA0
05932:  CLRF   xA2
05934:  CLRF   xA1
05936:  CLRF   xA4
05938:  CLRF   xA3
0593A:  CLRF   xA6
0593C:  CLRF   xA5
0593E:  CLRF   xA8
05940:  CLRF   xA7
05942:  CLRF   xAA
05944:  CLRF   xA9
05946:  CLRF   xAC
05948:  CLRF   xAB
0594A:  CLRF   xAE
0594C:  CLRF   xAD
0594E:  CLRF   xB0
05950:  CLRF   xAF
05952:  CLRF   xB4
05954:  CLRF   xB3
05956:  CLRF   xB2
05958:  CLRF   xB1
0595A:  CLRF   xB8
0595C:  CLRF   xB7
0595E:  CLRF   xB6
05960:  CLRF   xB5
05962:  CLRF   xBC
05964:  CLRF   xBB
05966:  CLRF   xBA
05968:  CLRF   xB9
0596A:  CLRF   xC0
0596C:  CLRF   xBF
0596E:  CLRF   xBE
05970:  CLRF   xBD
05972:  CLRF   xC4
05974:  CLRF   xC3
05976:  CLRF   xC2
05978:  CLRF   xC1
0597A:  CLRF   xC8
0597C:  CLRF   xC7
0597E:  CLRF   xC6
05980:  CLRF   xC5
05982:  CLRF   xCC
05984:  CLRF   xCB
05986:  CLRF   xCA
05988:  CLRF   xC9
0598A:  CLRF   xE0
0598C:  CLRF   xDF
0598E:  CLRF   xDE
05990:  CLRF   xDD
05992:  CLRF   xE4
05994:  MOVLW  40
05996:  MOVWF  xE3
05998:  MOVLW  1C
0599A:  MOVWF  xE2
0599C:  MOVLW  8C
0599E:  MOVWF  xE1
059A0:  CLRF   xEC
059A2:  CLRF   xEB
059A4:  MOVLW  20
059A6:  MOVWF  xEA
059A8:  MOVLW  82
059AA:  MOVWF  xE9
059AC:  CLRF   xF0
059AE:  CLRF   xEF
059B0:  CLRF   xEE
059B2:  CLRF   xED
059B4:  CLRF   xF4
059B6:  CLRF   xF3
059B8:  CLRF   xF2
059BA:  CLRF   xF1
059BC:  CLRF   xF8
059BE:  CLRF   xF7
059C0:  CLRF   xF6
059C2:  CLRF   xF5
059C4:  CLRF   xFC
059C6:  CLRF   xFB
059C8:  CLRF   xFA
059CA:  CLRF   xF9
059CC:  MOVLB  6
059CE:  CLRF   x00
059D0:  MOVLB  5
059D2:  CLRF   xFF
059D4:  CLRF   xFE
059D6:  CLRF   xFD
059D8:  MOVLB  6
059DA:  CLRF   x04
059DC:  CLRF   x03
059DE:  CLRF   x02
059E0:  MOVLW  80
059E2:  MOVWF  x01
059E4:  CLRF   x08
059E6:  CLRF   x07
059E8:  CLRF   x06
059EA:  MOVLW  7E
059EC:  MOVWF  x05
059EE:  CLRF   x0C
059F0:  CLRF   x0B
059F2:  MOVLW  32
059F4:  MOVWF  x0A
059F6:  MOVLW  84
059F8:  MOVWF  x09
059FA:  CLRF   x10
059FC:  CLRF   x0F
059FE:  CLRF   x0E
05A00:  CLRF   x0D
05A02:  CLRF   x14
05A04:  CLRF   x13
05A06:  CLRF   x12
05A08:  CLRF   x11
05A0A:  CLRF   x18
05A0C:  CLRF   x17
05A0E:  CLRF   x16
05A10:  CLRF   x15
05A12:  CLRF   x1C
05A14:  CLRF   x1B
05A16:  CLRF   x1A
05A18:  CLRF   x19
05A1A:  CLRF   x20
05A1C:  CLRF   x1F
05A1E:  CLRF   x1E
05A20:  CLRF   x1D
05A22:  CLRF   x24
05A24:  CLRF   x23
05A26:  CLRF   x22
05A28:  CLRF   x21
05A2A:  CLRF   x28
05A2C:  CLRF   x27
05A2E:  CLRF   x26
05A30:  CLRF   x25
05A32:  CLRF   x2C
05A34:  CLRF   x2B
05A36:  CLRF   x2A
05A38:  CLRF   x29
05A3A:  MOVLW  E0
05A3C:  MOVWF  x30
05A3E:  MOVLW  2D
05A40:  MOVWF  x2F
05A42:  MOVLW  10
05A44:  MOVWF  x2E
05A46:  MOVLW  75
05A48:  MOVWF  x2D
05A4A:  MOVLW  FF
05A4C:  MOVWF  x34
05A4E:  MOVLW  21
05A50:  MOVWF  x33
05A52:  MOVLW  15
05A54:  MOVWF  x32
05A56:  MOVLW  80
05A58:  MOVWF  x31
05A5A:  MOVLW  82
05A5C:  MOVWF  x38
05A5E:  MOVLW  12
05A60:  MOVWF  x37
05A62:  MOVLW  F4
05A64:  MOVWF  x36
05A66:  MOVLW  86
05A68:  MOVWF  x35
05A6A:  MOVF   FC1,W
05A6C:  ANDLW  C0
05A6E:  IORLW  0F
05A70:  MOVWF  FC1
05A72:  MOVLW  07
05A74:  MOVWF  FB4
05A76:  MOVLB  4
05A78:  CLRF   x17
05A7A:  CLRF   x18
05A7C:  CLRF   x19
05A7E:  CLRF   x1A
05A80:  CLRF   x1B
05A82:  CLRF   x1C
05A84:  CLRF   x1D
05A86:  CLRF   x1E
05A88:  CLRF   x1F
05A8A:  CLRF   x20
05A8C:  CLRF   x21
05A8E:  CLRF   x22
05A90:  CLRF   x23
05A92:  CLRF   x24
05A94:  CLRF   x25
05A96:  CLRF   x26
05A98:  CLRF   x27
05A9A:  CLRF   x28
05A9C:  CLRF   x29
05A9E:  CLRF   x2A
05AA0:  CLRF   x2B
05AA2:  CLRF   x2C
05AA4:  CLRF   x2D
05AA6:  CLRF   x2E
05AA8:  CLRF   x2F
05AAA:  CLRF   x30
05AAC:  CLRF   x31
05AAE:  CLRF   x32
05AB0:  CLRF   x33
05AB2:  CLRF   x34
05AB4:  CLRF   x35
05AB6:  CLRF   x36
05AB8:  CLRF   x37
05ABA:  CLRF   x38
05ABC:  CLRF   x39
05ABE:  CLRF   x3A
05AC0:  CLRF   x3B
05AC2:  CLRF   x3C
05AC4:  CLRF   x3D
05AC6:  CLRF   x3E
05AC8:  CLRF   x3F
05ACA:  CLRF   x40
05ACC:  CLRF   x41
05ACE:  CLRF   x42
05AD0:  CLRF   x43
05AD2:  CLRF   x44
05AD4:  CLRF   x45
05AD6:  CLRF   x46
05AD8:  CLRF   x47
05ADA:  CLRF   x48
05ADC:  CLRF   x49
05ADE:  CLRF   x4A
05AE0:  CLRF   x4B
05AE2:  CLRF   x4C
05AE4:  CLRF   x4D
05AE6:  CLRF   x4E
05AE8:  CLRF   x4F
05AEA:  CLRF   x50
05AEC:  CLRF   x51
05AEE:  CLRF   x52
05AF0:  CLRF   x53
05AF2:  CLRF   x54
05AF4:  CLRF   x55
05AF6:  CLRF   x56
05AF8:  CLRF   x57
05AFA:  CLRF   x58
05AFC:  CLRF   x59
05AFE:  CLRF   x5A
05B00:  CLRF   x5B
05B02:  CLRF   x5C
05B04:  CLRF   x5D
05B06:  CLRF   x5E
05B08:  CLRF   x5F
05B0A:  CLRF   x60
05B0C:  CLRF   x61
05B0E:  CLRF   x62
05B10:  CLRF   x63
05B12:  CLRF   x64
05B14:  CLRF   x65
05B16:  CLRF   x66
05B18:  CLRF   x67
05B1A:  CLRF   x68
05B1C:  CLRF   x69
05B1E:  CLRF   x6A
05B20:  CLRF   x6B
05B22:  CLRF   x6C
05B24:  CLRF   x6D
05B26:  CLRF   x6E
05B28:  CLRF   x6F
05B2A:  CLRF   x70
05B2C:  CLRF   x71
05B2E:  CLRF   x72
05B30:  CLRF   x73
05B32:  CLRF   x74
05B34:  CLRF   x75
05B36:  CLRF   x76
05B38:  CLRF   x77
05B3A:  CLRF   x78
05B3C:  CLRF   x79
05B3E:  CLRF   x7A
05B40:  CLRF   x7B
05B42:  CLRF   x7C
05B44:  CLRF   x7D
05B46:  CLRF   x7E
05B48:  CLRF   x7F
05B4A:  CLRF   x80
05B4C:  CLRF   x81
05B4E:  CLRF   x82
05B50:  CLRF   x83
05B52:  CLRF   x84
05B54:  CLRF   x85
05B56:  CLRF   x86
05B58:  CLRF   x87
05B5A:  CLRF   x88
05B5C:  CLRF   x89
05B5E:  CLRF   x8A
05B60:  CLRF   x8B
05B62:  CLRF   x8C
05B64:  CLRF   x8D
05B66:  CLRF   x8E
05B68:  CLRF   x8F
05B6A:  CLRF   x90
05B6C:  CLRF   x91
05B6E:  CLRF   x92
05B70:  CLRF   x93
05B72:  CLRF   x94
05B74:  CLRF   x95
05B76:  CLRF   x96
05B78:  CLRF   x97
05B7A:  CLRF   x98
05B7C:  CLRF   x99
05B7E:  CLRF   x9A
05B80:  CLRF   x9B
05B82:  CLRF   x9C
05B84:  CLRF   x9D
05B86:  CLRF   x9E
05B88:  CLRF   x9F
05B8A:  CLRF   xA0
05B8C:  CLRF   xA1
05B8E:  CLRF   xA2
05B90:  CLRF   xA3
05B92:  CLRF   xA4
05B94:  CLRF   xA5
05B96:  CLRF   xA6
05B98:  CLRF   xA7
05B9A:  CLRF   xA8
05B9C:  CLRF   xA9
05B9E:  CLRF   xAA
05BA0:  CLRF   xAB
05BA2:  CLRF   xAC
05BA4:  CLRF   xAD
05BA6:  CLRF   xAE
05BA8:  CLRF   xAF
05BAA:  CLRF   xB0
05BAC:  CLRF   xB1
05BAE:  CLRF   xB2
05BB0:  CLRF   xB3
05BB2:  CLRF   xB4
05BB4:  CLRF   xB5
05BB6:  CLRF   xB6
05BB8:  CLRF   xB7
05BBA:  CLRF   xB8
05BBC:  CLRF   xB9
05BBE:  CLRF   xBA
05BC0:  CLRF   xBB
05BC2:  CLRF   xBC
05BC4:  CLRF   xBD
05BC6:  CLRF   xBE
05BC8:  CLRF   xBF
05BCA:  CLRF   xC0
05BCC:  CLRF   xC1
05BCE:  CLRF   xC2
05BD0:  CLRF   xC3
05BD2:  CLRF   xC4
05BD4:  CLRF   xC5
05BD6:  CLRF   xC6
05BD8:  CLRF   xC7
05BDA:  CLRF   xC8
05BDC:  CLRF   xC9
05BDE:  CLRF   xCA
05BE0:  CLRF   xCB
05BE2:  CLRF   xCC
05BE4:  CLRF   xCD
05BE6:  CLRF   xCE
05BE8:  CLRF   xCF
05BEA:  CLRF   xD0
05BEC:  CLRF   xD1
05BEE:  CLRF   xD2
05BF0:  CLRF   xD3
05BF2:  CLRF   xD4
05BF4:  CLRF   xD5
05BF6:  CLRF   xD6
05BF8:  CLRF   xD7
05BFA:  CLRF   xD8
05BFC:  CLRF   xD9
05BFE:  CLRF   xDA
05C00:  CLRF   xDB
05C02:  CLRF   xDC
05C04:  CLRF   xDD
05C06:  CLRF   xDE
05C08:  CLRF   xDF
05C0A:  CLRF   xE0
05C0C:  CLRF   xE1
05C0E:  CLRF   xE2
05C10:  CLRF   xE3
05C12:  CLRF   xE4
05C14:  CLRF   xE5
05C16:  CLRF   xE6
05C18:  CLRF   xE7
05C1A:  CLRF   xE8
05C1C:  CLRF   xE9
05C1E:  CLRF   xEA
05C20:  CLRF   xEB
05C22:  CLRF   xEC
05C24:  CLRF   xED
05C26:  CLRF   xEE
05C28:  CLRF   xEF
05C2A:  CLRF   xF0
05C2C:  CLRF   xF1
05C2E:  CLRF   xF2
05C30:  CLRF   xF3
05C32:  CLRF   xF4
05C34:  CLRF   xF5
05C36:  CLRF   xF6
05C38:  CLRF   xF7
05C3A:  CLRF   xF8
05C3C:  CLRF   xF9
05C3E:  CLRF   xFA
05C40:  CLRF   xFB
05C42:  CLRF   xFC
05C44:  CLRF   xFD
05C46:  CLRF   xFE
05C48:  CLRF   xFF
05C4A:  MOVLB  5
05C4C:  CLRF   x00
05C4E:  CLRF   x01
05C50:  CLRF   x02
05C52:  CLRF   x03
05C54:  CLRF   x04
05C56:  CLRF   x05
05C58:  CLRF   x06
05C5A:  CLRF   x07
05C5C:  CLRF   x08
05C5E:  CLRF   x09
05C60:  CLRF   x0A
05C62:  CLRF   x0B
05C64:  CLRF   x0C
05C66:  CLRF   x0D
05C68:  CLRF   x0E
05C6A:  CLRF   x0F
05C6C:  CLRF   x10
05C6E:  CLRF   x11
05C70:  CLRF   x12
05C72:  CLRF   x13
05C74:  CLRF   x14
05C76:  CLRF   x15
05C78:  CLRF   x16
05C7A:  CLRF   x17
05C7C:  CLRF   x18
05C7E:  CLRF   x19
05C80:  CLRF   x1A
05C82:  CLRF   x1B
05C84:  CLRF   x1C
05C86:  CLRF   x1D
05C88:  CLRF   x1E
05C8A:  CLRF   x1F
05C8C:  CLRF   x20
05C8E:  CLRF   x21
05C90:  CLRF   x22
05C92:  CLRF   x23
05C94:  CLRF   x24
05C96:  CLRF   x25
05C98:  CLRF   x26
05C9A:  CLRF   x27
05C9C:  CLRF   x28
05C9E:  CLRF   x29
05CA0:  CLRF   x2A
05CA2:  CLRF   x2B
05CA4:  CLRF   x2C
05CA6:  CLRF   x2D
05CA8:  CLRF   x2E
05CAA:  CLRF   x2F
05CAC:  CLRF   x30
05CAE:  CLRF   x31
05CB0:  CLRF   x32
05CB2:  CLRF   x33
05CB4:  CLRF   x34
05CB6:  CLRF   x35
05CB8:  CLRF   x36
05CBA:  CLRF   x37
05CBC:  CLRF   x38
05CBE:  CLRF   x39
05CC0:  CLRF   x3A
05CC2:  CLRF   x3B
05CC4:  CLRF   x3C
05CC6:  CLRF   x3D
05CC8:  CLRF   x3E
05CCA:  CLRF   x3F
05CCC:  CLRF   x40
05CCE:  CLRF   x41
05CD0:  CLRF   x42
05CD2:  CLRF   x43
05CD4:  CLRF   x44
05CD6:  CLRF   x45
05CD8:  CLRF   x46
05CDA:  CLRF   x47
05CDC:  CLRF   x48
05CDE:  CLRF   x49
05CE0:  CLRF   x4A
05CE2:  CLRF   x4B
05CE4:  CLRF   x4C
05CE6:  CLRF   x4D
05CE8:  CLRF   x4E
05CEA:  CLRF   x4F
05CEC:  CLRF   x50
05CEE:  CLRF   x51
05CF0:  CLRF   x52
05CF2:  CLRF   x53
05CF4:  CLRF   x54
05CF6:  CLRF   x55
05CF8:  CLRF   x56
05CFA:  CLRF   x57
05CFC:  CLRF   x58
05CFE:  CLRF   x59
05D00:  CLRF   x5A
05D02:  CLRF   x5B
05D04:  CLRF   x5C
05D06:  CLRF   x5D
05D08:  CLRF   x5E
05D0A:  CLRF   x5F
05D0C:  CLRF   x60
05D0E:  CLRF   x61
05D10:  CLRF   x62
05D12:  CLRF   x63
05D14:  CLRF   x64
05D16:  CLRF   x65
05D18:  CLRF   x66
05D1A:  CLRF   x67
05D1C:  CLRF   x68
05D1E:  CLRF   x69
05D20:  CLRF   x6A
05D22:  CLRF   x6B
05D24:  CLRF   x6C
05D26:  CLRF   x6D
05D28:  CLRF   x6E
05D2A:  CLRF   x6F
05D2C:  CLRF   x70
05D2E:  CLRF   x71
05D30:  CLRF   x72
05D32:  CLRF   x73
05D34:  CLRF   x74
05D36:  CLRF   x75
05D38:  CLRF   x76
05D3A:  CLRF   x77
05D3C:  CLRF   x78
05D3E:  CLRF   x79
05D40:  CLRF   x7A
05D42:  CLRF   x7B
05D44:  CLRF   x7C
05D46:  CLRF   x7D
05D48:  CLRF   x7E
05D4A:  CLRF   x7F
05D4C:  CLRF   x80
05D4E:  CLRF   x81
05D50:  CLRF   x82
05D52:  CLRF   x83
05D54:  CLRF   x84
05D56:  CLRF   x85
05D58:  CLRF   x86
05D5A:  CLRF   xCD
05D5C:  CLRF   xCE
05D5E:  CLRF   xCF
05D60:  CLRF   xD0
05D62:  CLRF   xD1
05D64:  CLRF   xD2
05D66:  CLRF   xD3
05D68:  CLRF   xD4
05D6A:  CLRF   xD5
05D6C:  CLRF   xD6
05D6E:  CLRF   xD7
05D70:  CLRF   xD8
05D72:  CLRF   xD9
05D74:  CLRF   xDA
05D76:  CLRF   xDB
05D78:  CLRF   xDC
05D7A:  MOVLB  6
05D7C:  CLRF   x57
05D7E:  CLRF   x58
....................    Motor1_off; 
05D80:  BSF    F8B.5
05D82:  BCF    F94.5
....................    Motor2_off; 
05D84:  BSF    F8B.6
05D86:  BCF    F94.6
....................    SSR_off; 
05D88:  BSF    F8B.2
05D8A:  BCF    F94.2
....................    Display_on; 
05D8C:  BSF    F8B.7
05D8E:  BCF    F94.7
....................    ConfiguraInterrupciones(); 
05D90:  MOVLB  0
05D92:  GOTO   107A
....................    LeeEEPROM(); 
05D96:  GOTO   14BE
....................    LimitaValores(); 
05D9A:  GOTO   1CBC
....................    MensajeBienvenida(); 
05D9E:  GOTO   348C
....................     
....................    if(UP && DOWN) 
05DA2:  BSF    F92.4
05DA4:  BTFSC  F80.4
05DA6:  BRA    5E2C
05DA8:  BSF    F92.5
05DAA:  BTFSC  F80.5
05DAC:  BRA    5E2C
....................    { 
....................       delay_ms(500); 
05DAE:  MOVLW  02
05DB0:  MOVLB  6
05DB2:  MOVWF  x59
05DB4:  MOVLW  FA
05DB6:  MOVWF  x62
05DB8:  MOVLB  0
05DBA:  CALL   1052
05DBE:  MOVLB  6
05DC0:  DECFSZ x59,F
05DC2:  BRA    5DB4
....................       strcpy(Menus.Letra,"Cargando.."); 
05DC4:  MOVLW  06
05DC6:  MOVWF  FEA
05DC8:  MOVLW  39
05DCA:  MOVWF  FE9
05DCC:  MOVFF  FF2,659
05DD0:  BCF    FF2.7
05DD2:  MOVLW  00
05DD4:  MOVLB  0
05DD6:  CALL   0890
05DDA:  TBLRD*-
05DDC:  TBLRD*+
05DDE:  MOVF   FF5,W
05DE0:  MOVWF  FEE
05DE2:  IORLW  00
05DE4:  BNZ   5DDC
05DE6:  MOVLB  6
05DE8:  BTFSC  x59.7
05DEA:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,30,1,1); 
05DEC:  MOVLW  06
05DEE:  MOVWF  x62
05DF0:  MOVLW  39
05DF2:  MOVWF  x61
05DF4:  CLRF   x63
05DF6:  MOVLW  1E
05DF8:  MOVWF  x64
05DFA:  MOVLW  01
05DFC:  MOVWF  x65
05DFE:  MOVWF  x66
05E00:  MOVLB  0
05E02:  CALL   2BEA
....................       delay_ms(2000); 
05E06:  MOVLW  08
05E08:  MOVLB  6
05E0A:  MOVWF  x59
05E0C:  MOVLW  FA
05E0E:  MOVWF  x62
05E10:  MOVLB  0
05E12:  CALL   1052
05E16:  MOVLB  6
05E18:  DECFSZ x59,F
05E1A:  BRA    5E0C
....................       Menu=100; 
05E1C:  MOVLW  64
05E1E:  MOVLB  5
05E20:  MOVWF  x97
....................       glcd_fillScreen(OFF); 
05E22:  MOVLB  6
05E24:  CLRF   x61
05E26:  MOVLB  0
05E28:  CALL   25BC
....................    } 
....................     
.................... while(true) 
.................... { 
....................  
....................       if(Lectura2==1) 
05E2C:  MOVLB  5
05E2E:  DECFSZ x8F,W
05E30:  BRA    5E50
....................       { 
....................          Temperatura=Leer_Sensor(MediaMovil); 
05E32:  MOVFF  58C,659
05E36:  MOVLB  0
05E38:  CALL   2E54
05E3C:  MOVFF  03,614
05E40:  MOVFF  02,613
05E44:  MOVFF  01,612
05E48:  MOVFF  00,611
....................          Lectura2=0; 
05E4C:  MOVLB  5
05E4E:  CLRF   x8F
....................       } 
....................     
....................       glcd_update();             
05E50:  MOVLB  0
05E52:  CALL   2616
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
05E56:  MOVLB  5
05E58:  MOVF   x97,F
05E5A:  BNZ   5E80
....................          PidePassword(0,0,1,Password[0],Password[1],Password[2],Password[3],0); 
05E5C:  MOVLB  6
05E5E:  CLRF   x59
05E60:  CLRF   x5A
05E62:  MOVLW  01
05E64:  MOVWF  x5B
05E66:  MOVFF  5D9,65C
05E6A:  MOVFF  5DA,65D
05E6E:  MOVFF  5DB,65E
05E72:  MOVFF  5DC,65F
05E76:  CLRF   x60
05E78:  MOVLB  0
05E7A:  CALL   3892
05E7E:  MOVLB  5
....................       } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
05E80:  DECFSZ x97,W
05E82:  BRA    6168
....................        
....................          if(Opcion>4) 
05E84:  MOVF   x9C,W
05E86:  SUBLW  04
05E88:  BC    5E8E
....................             Opcion=1; 
05E8A:  MOVLW  01
05E8C:  MOVWF  x9C
....................              
....................          if(Opcion<1) 
05E8E:  MOVF   x9C,F
05E90:  BNZ   5E96
....................             Opcion=4; 
05E92:  MOVLW  04
05E94:  MOVWF  x9C
....................           
....................          strcpy(Menus.Letra,"Menu"); 
05E96:  MOVLW  06
05E98:  MOVWF  FEA
05E9A:  MOVLW  39
05E9C:  MOVWF  FE9
05E9E:  MOVFF  FF2,659
05EA2:  BCF    FF2.7
05EA4:  MOVLW  00
05EA6:  MOVLB  0
05EA8:  CALL   08BA
05EAC:  TBLRD*-
05EAE:  TBLRD*+
05EB0:  MOVF   FF5,W
05EB2:  MOVWF  FEE
05EB4:  IORLW  00
05EB6:  BNZ   5EAE
05EB8:  MOVLB  6
05EBA:  BTFSC  x59.7
05EBC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
05EBE:  MOVLW  06
05EC0:  MOVWF  x62
05EC2:  MOVLW  39
05EC4:  MOVWF  x61
05EC6:  MOVLW  1E
05EC8:  MOVWF  x63
05ECA:  CLRF   x64
05ECC:  MOVLW  01
05ECE:  MOVWF  x65
05ED0:  MOVLW  02
05ED2:  MOVWF  x66
05ED4:  MOVLB  0
05ED6:  CALL   2BEA
....................        
....................          if(Opcion==1)    
05EDA:  MOVLB  5
05EDC:  DECFSZ x9C,W
05EDE:  BRA    5F26
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
05EE0:  MOVLW  06
05EE2:  MOVWF  FEA
05EE4:  MOVLW  39
05EE6:  MOVWF  FE9
05EE8:  MOVFF  FF2,659
05EEC:  BCF    FF2.7
05EEE:  MOVLW  00
05EF0:  MOVLB  0
05EF2:  CALL   08DE
05EF6:  TBLRD*-
05EF8:  TBLRD*+
05EFA:  MOVF   FF5,W
05EFC:  MOVWF  FEE
05EFE:  IORLW  00
05F00:  BNZ   5EF8
05F02:  MOVLB  6
05F04:  BTFSC  x59.7
05F06:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
05F08:  MOVLW  06
05F0A:  MOVWF  x62
05F0C:  MOVLW  39
05F0E:  MOVWF  x61
05F10:  CLRF   x63
05F12:  MOVLW  14
05F14:  MOVWF  x64
05F16:  MOVLW  01
05F18:  MOVWF  x65
05F1A:  MOVWF  x66
05F1C:  MOVLB  0
05F1E:  CALL   2BEA
....................          else 
05F22:  BRA    5F68
05F24:  MOVLB  5
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
05F26:  MOVLW  06
05F28:  MOVWF  FEA
05F2A:  MOVLW  39
05F2C:  MOVWF  FE9
05F2E:  MOVFF  FF2,659
05F32:  BCF    FF2.7
05F34:  MOVLW  00
05F36:  MOVLB  0
05F38:  CALL   08DE
05F3C:  TBLRD*-
05F3E:  TBLRD*+
05F40:  MOVF   FF5,W
05F42:  MOVWF  FEE
05F44:  IORLW  00
05F46:  BNZ   5F3E
05F48:  MOVLB  6
05F4A:  BTFSC  x59.7
05F4C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);} 
05F4E:  MOVLW  06
05F50:  MOVWF  x62
05F52:  MOVLW  39
05F54:  MOVWF  x61
05F56:  CLRF   x63
05F58:  MOVLW  14
05F5A:  MOVWF  x64
05F5C:  CLRF   x65
05F5E:  MOVLW  01
05F60:  MOVWF  x66
05F62:  MOVLB  0
05F64:  CALL   2BEA
....................           
....................          if(Opcion==2)    
05F68:  MOVLB  5
05F6A:  MOVF   x9C,W
05F6C:  SUBLW  02
05F6E:  BNZ   5FB6
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
05F70:  MOVLW  06
05F72:  MOVWF  FEA
05F74:  MOVLW  39
05F76:  MOVWF  FE9
05F78:  MOVFF  FF2,659
05F7C:  BCF    FF2.7
05F7E:  MOVLW  00
05F80:  MOVLB  0
05F82:  CALL   090C
05F86:  TBLRD*-
05F88:  TBLRD*+
05F8A:  MOVF   FF5,W
05F8C:  MOVWF  FEE
05F8E:  IORLW  00
05F90:  BNZ   5F88
05F92:  MOVLB  6
05F94:  BTFSC  x59.7
05F96:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
05F98:  MOVLW  06
05F9A:  MOVWF  x62
05F9C:  MOVLW  39
05F9E:  MOVWF  x61
05FA0:  CLRF   x63
05FA2:  MOVLW  1E
05FA4:  MOVWF  x64
05FA6:  MOVLW  01
05FA8:  MOVWF  x65
05FAA:  MOVWF  x66
05FAC:  MOVLB  0
05FAE:  CALL   2BEA
....................          else 
05FB2:  BRA    5FF8
05FB4:  MOVLB  5
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
05FB6:  MOVLW  06
05FB8:  MOVWF  FEA
05FBA:  MOVLW  39
05FBC:  MOVWF  FE9
05FBE:  MOVFF  FF2,659
05FC2:  BCF    FF2.7
05FC4:  MOVLW  00
05FC6:  MOVLB  0
05FC8:  CALL   090C
05FCC:  TBLRD*-
05FCE:  TBLRD*+
05FD0:  MOVF   FF5,W
05FD2:  MOVWF  FEE
05FD4:  IORLW  00
05FD6:  BNZ   5FCE
05FD8:  MOVLB  6
05FDA:  BTFSC  x59.7
05FDC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);} 
05FDE:  MOVLW  06
05FE0:  MOVWF  x62
05FE2:  MOVLW  39
05FE4:  MOVWF  x61
05FE6:  CLRF   x63
05FE8:  MOVLW  1E
05FEA:  MOVWF  x64
05FEC:  CLRF   x65
05FEE:  MOVLW  01
05FF0:  MOVWF  x66
05FF2:  MOVLB  0
05FF4:  CALL   2BEA
....................              
....................          if(Opcion==3)    
05FF8:  MOVLB  5
05FFA:  MOVF   x9C,W
05FFC:  SUBLW  03
05FFE:  BNZ   6046
....................             {strcpy(Menus.Letra,"Temporizador"); 
06000:  MOVLW  06
06002:  MOVWF  FEA
06004:  MOVLW  39
06006:  MOVWF  FE9
06008:  MOVFF  FF2,659
0600C:  BCF    FF2.7
0600E:  MOVLW  00
06010:  MOVLB  0
06012:  CALL   0940
06016:  TBLRD*-
06018:  TBLRD*+
0601A:  MOVF   FF5,W
0601C:  MOVWF  FEE
0601E:  IORLW  00
06020:  BNZ   6018
06022:  MOVLB  6
06024:  BTFSC  x59.7
06026:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
06028:  MOVLW  06
0602A:  MOVWF  x62
0602C:  MOVLW  39
0602E:  MOVWF  x61
06030:  CLRF   x63
06032:  MOVLW  28
06034:  MOVWF  x64
06036:  MOVLW  01
06038:  MOVWF  x65
0603A:  MOVWF  x66
0603C:  MOVLB  0
0603E:  CALL   2BEA
....................          else 
06042:  BRA    6088
06044:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temporizador"); 
06046:  MOVLW  06
06048:  MOVWF  FEA
0604A:  MOVLW  39
0604C:  MOVWF  FE9
0604E:  MOVFF  FF2,659
06052:  BCF    FF2.7
06054:  MOVLW  00
06056:  MOVLB  0
06058:  CALL   0940
0605C:  TBLRD*-
0605E:  TBLRD*+
06060:  MOVF   FF5,W
06062:  MOVWF  FEE
06064:  IORLW  00
06066:  BNZ   605E
06068:  MOVLB  6
0606A:  BTFSC  x59.7
0606C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}    
0606E:  MOVLW  06
06070:  MOVWF  x62
06072:  MOVLW  39
06074:  MOVWF  x61
06076:  CLRF   x63
06078:  MOVLW  28
0607A:  MOVWF  x64
0607C:  CLRF   x65
0607E:  MOVLW  01
06080:  MOVWF  x66
06082:  MOVLB  0
06084:  CALL   2BEA
....................                          
....................          if(Opcion==4)    
06088:  MOVLB  5
0608A:  MOVF   x9C,W
0608C:  SUBLW  04
0608E:  BNZ   60D6
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
06090:  MOVLW  06
06092:  MOVWF  FEA
06094:  MOVLW  39
06096:  MOVWF  FE9
06098:  MOVFF  FF2,659
0609C:  BCF    FF2.7
0609E:  MOVLW  00
060A0:  MOVLB  0
060A2:  CALL   096C
060A6:  TBLRD*-
060A8:  TBLRD*+
060AA:  MOVF   FF5,W
060AC:  MOVWF  FEE
060AE:  IORLW  00
060B0:  BNZ   60A8
060B2:  MOVLB  6
060B4:  BTFSC  x59.7
060B6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
060B8:  MOVLW  06
060BA:  MOVWF  x62
060BC:  MOVLW  39
060BE:  MOVWF  x61
060C0:  CLRF   x63
060C2:  MOVLW  32
060C4:  MOVWF  x64
060C6:  MOVLW  01
060C8:  MOVWF  x65
060CA:  MOVWF  x66
060CC:  MOVLB  0
060CE:  CALL   2BEA
....................          else 
060D2:  BRA    6118
060D4:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
060D6:  MOVLW  06
060D8:  MOVWF  FEA
060DA:  MOVLW  39
060DC:  MOVWF  FE9
060DE:  MOVFF  FF2,659
060E2:  BCF    FF2.7
060E4:  MOVLW  00
060E6:  MOVLB  0
060E8:  CALL   096C
060EC:  TBLRD*-
060EE:  TBLRD*+
060F0:  MOVF   FF5,W
060F2:  MOVWF  FEE
060F4:  IORLW  00
060F6:  BNZ   60EE
060F8:  MOVLB  6
060FA:  BTFSC  x59.7
060FC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}      
060FE:  MOVLW  06
06100:  MOVWF  x62
06102:  MOVLW  39
06104:  MOVWF  x61
06106:  CLRF   x63
06108:  MOVLW  32
0610A:  MOVWF  x64
0610C:  CLRF   x65
0610E:  MOVLW  01
06110:  MOVWF  x66
06112:  MOVLB  0
06114:  CALL   2BEA
....................              
....................          if(UP){ 
06118:  BSF    F92.4
0611A:  BTFSC  F80.4
0611C:  BRA    612A
....................             DelayPuls();Opcion--;visual=1; 
0611E:  CALL   37D6
06122:  MOVLB  5
06124:  DECF   x9C,F
06126:  BSF    x87.4
06128:  MOVLB  0
....................          } 
....................                    
....................          if(DOWN){ 
0612A:  BSF    F92.5
0612C:  BTFSC  F80.5
0612E:  BRA    613C
....................             DelayPuls();Opcion++;visual=1;    
06130:  CALL   37D6
06134:  MOVLB  5
06136:  INCF   x9C,F
06138:  BSF    x87.4
0613A:  MOVLB  0
....................          } 
....................                 
....................          if(RIGHT){  
0613C:  BSF    F96.0
0613E:  BTFSC  F84.0
06140:  BRA    616A
....................             delay_ms(200);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
06142:  MOVLW  C8
06144:  MOVLB  6
06146:  MOVWF  x62
06148:  MOVLB  0
0614A:  CALL   1052
0614E:  MOVLW  03
06150:  MOVLB  5
06152:  ADDWF  x9C,W
06154:  MOVWF  x97
06156:  MOVLW  01
06158:  MOVWF  x9C
0615A:  MOVLB  6
0615C:  CLRF   x61
0615E:  MOVLB  0
06160:  CALL   25BC
06164:  MOVLB  5
06166:  BSF    x87.4
06168:  MOVLB  0
....................          } 
....................       } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Continuar 
0616A:  MOVLB  5
0616C:  MOVF   x97,W
0616E:  SUBLW  04
06170:  BTFSS  FD8.2
06172:  BRA    64F8
....................        
....................       if(Opcion>3) 
06174:  MOVF   x9C,W
06176:  SUBLW  03
06178:  BC    617E
....................          Opcion=1; 
0617A:  MOVLW  01
0617C:  MOVWF  x9C
....................           
....................       if(Opcion<1) 
0617E:  MOVF   x9C,F
06180:  BNZ   6186
....................          Opcion=3; 
06182:  MOVLW  03
06184:  MOVWF  x9C
....................        
....................          strcpy(Menus.Letra,"Seleccione"); 
06186:  MOVLW  06
06188:  MOVWF  FEA
0618A:  MOVLW  39
0618C:  MOVWF  FE9
0618E:  MOVFF  FF2,659
06192:  BCF    FF2.7
06194:  MOVLW  00
06196:  MOVLB  0
06198:  CALL   0998
0619C:  TBLRD*-
0619E:  TBLRD*+
061A0:  MOVF   FF5,W
061A2:  MOVWF  FEE
061A4:  IORLW  00
061A6:  BNZ   619E
061A8:  MOVLB  6
061AA:  BTFSC  x59.7
061AC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
061AE:  MOVLW  06
061B0:  MOVWF  x62
061B2:  MOVLW  39
061B4:  MOVWF  x61
061B6:  CLRF   x63
061B8:  CLRF   x64
061BA:  MOVLW  01
061BC:  MOVWF  x65
061BE:  MOVLW  02
061C0:  MOVWF  x66
061C2:  MOVLB  0
061C4:  CALL   2BEA
....................           
....................          strcpy(Menus.Letra,"Temperatura"); 
061C8:  MOVLW  06
061CA:  MOVWF  FEA
061CC:  MOVLW  39
061CE:  MOVWF  FE9
061D0:  MOVFF  FF2,659
061D4:  BCF    FF2.7
061D6:  MOVLW  00
061D8:  CALL   09C2
061DC:  TBLRD*-
061DE:  TBLRD*+
061E0:  MOVF   FF5,W
061E2:  MOVWF  FEE
061E4:  IORLW  00
061E6:  BNZ   61DE
061E8:  MOVLB  6
061EA:  BTFSC  x59.7
061EC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,16,1,2); 
061EE:  MOVLW  06
061F0:  MOVWF  x62
061F2:  MOVLW  39
061F4:  MOVWF  x61
061F6:  CLRF   x63
061F8:  MOVLW  10
061FA:  MOVWF  x64
061FC:  MOVLW  01
061FE:  MOVWF  x65
06200:  MOVLW  02
06202:  MOVWF  x66
06204:  MOVLB  0
06206:  CALL   2BEA
....................           
....................          displayContrasena(Opcion,10,38,1); 
0620A:  MOVFF  59C,663
0620E:  MOVLW  0A
06210:  MOVLB  6
06212:  MOVWF  x64
06214:  MOVLW  26
06216:  MOVWF  x65
06218:  MOVLW  01
0621A:  MOVWF  x66
0621C:  MOVLB  0
0621E:  CALL   3718
....................          glcd_circle(90,38,2,NO,ON); 
06222:  MOVLW  5A
06224:  MOVLB  6
06226:  MOVWF  x6E
06228:  MOVLW  26
0622A:  MOVWF  x6F
0622C:  MOVLW  02
0622E:  MOVWF  x70
06230:  CLRF   x71
06232:  MOVLW  01
06234:  MOVWF  x72
06236:  MOVLB  0
06238:  CALL   4118
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,97,35,2,2);          
0623C:  MOVLW  06
0623E:  MOVWF  FEA
06240:  MOVLW  39
06242:  MOVWF  FE9
06244:  MOVFF  FF2,659
06248:  BCF    FF2.7
0624A:  MOVLW  00
0624C:  CALL   06D2
06250:  TBLRD*-
06252:  TBLRD*+
06254:  MOVF   FF5,W
06256:  MOVWF  FEE
06258:  IORLW  00
0625A:  BNZ   6252
0625C:  MOVLB  6
0625E:  BTFSC  x59.7
06260:  BSF    FF2.7
06262:  MOVLW  06
06264:  MOVWF  x62
06266:  MOVLW  39
06268:  MOVWF  x61
0626A:  MOVLW  61
0626C:  MOVWF  x63
0626E:  MOVLW  23
06270:  MOVWF  x64
06272:  MOVLW  02
06274:  MOVWF  x65
06276:  MOVWF  x66
06278:  MOVLB  0
0627A:  CALL   2BEA
....................           
....................          if(Opcion==1) 
0627E:  MOVLB  5
06280:  DECFSZ x9C,W
06282:  BRA    62C4
....................             displayTemperatura(Temperatura1,50,38,0,2); 
06284:  MOVFF  620,65C
06288:  MOVFF  61F,65B
0628C:  MOVFF  61E,65A
06290:  MOVFF  61D,659
06294:  MOVLB  0
06296:  CALL   4342
0629A:  MOVFF  02,65A
0629E:  MOVFF  01,659
062A2:  MOVFF  02,65C
062A6:  MOVFF  01,65B
062AA:  MOVLW  32
062AC:  MOVLB  6
062AE:  MOVWF  x5D
062B0:  MOVLW  26
062B2:  MOVWF  x5E
062B4:  CLRF   x5F
062B6:  MOVLW  02
062B8:  MOVWF  x60
062BA:  MOVLB  0
062BC:  CALL   443C
....................          else if(Opcion==2) 
062C0:  BRA    634C
062C2:  MOVLB  5
062C4:  MOVF   x9C,W
062C6:  SUBLW  02
062C8:  BNZ   630A
....................             displayTemperatura(Temperatura2,50,38,0,2);  
062CA:  MOVFF  624,65C
062CE:  MOVFF  623,65B
062D2:  MOVFF  622,65A
062D6:  MOVFF  621,659
062DA:  MOVLB  0
062DC:  CALL   4342
062E0:  MOVFF  02,65A
062E4:  MOVFF  01,659
062E8:  MOVFF  02,65C
062EC:  MOVFF  01,65B
062F0:  MOVLW  32
062F2:  MOVLB  6
062F4:  MOVWF  x5D
062F6:  MOVLW  26
062F8:  MOVWF  x5E
062FA:  CLRF   x5F
062FC:  MOVLW  02
062FE:  MOVWF  x60
06300:  MOVLB  0
06302:  CALL   443C
....................          else if(Opcion==3) 
06306:  BRA    634C
06308:  MOVLB  5
0630A:  MOVF   x9C,W
0630C:  SUBLW  03
0630E:  BNZ   634E
....................             displayTemperatura(Temperatura3,50,38,0,2);  
06310:  MOVFF  628,65C
06314:  MOVFF  627,65B
06318:  MOVFF  626,65A
0631C:  MOVFF  625,659
06320:  MOVLB  0
06322:  CALL   4342
06326:  MOVFF  02,65A
0632A:  MOVFF  01,659
0632E:  MOVFF  02,65C
06332:  MOVFF  01,65B
06336:  MOVLW  32
06338:  MOVLB  6
0633A:  MOVWF  x5D
0633C:  MOVLW  26
0633E:  MOVWF  x5E
06340:  CLRF   x5F
06342:  MOVLW  02
06344:  MOVWF  x60
06346:  MOVLB  0
06348:  CALL   443C
0634C:  MOVLB  5
....................          
....................       if(UP){ 
0634E:  BSF    F92.4
06350:  BTFSC  F80.4
06352:  BRA    6376
....................          Opcion++; 
06354:  INCF   x9C,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
06356:  MOVLW  28
06358:  MOVLB  6
0635A:  MOVWF  x72
0635C:  MOVLW  23
0635E:  MOVWF  x73
06360:  MOVLW  55
06362:  MOVWF  x74
06364:  MOVLW  3C
06366:  MOVWF  x75
06368:  MOVLW  01
0636A:  MOVWF  x76
0636C:  CLRF   x77
0636E:  MOVLB  0
06370:  CALL   2B28
06374:  MOVLB  5
....................       } 
....................              
....................       if(DOWN){   
06376:  BSF    F92.5
06378:  BTFSC  F80.5
0637A:  BRA    639E
....................          Opcion--;   
0637C:  DECF   x9C,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
0637E:  MOVLW  28
06380:  MOVLB  6
06382:  MOVWF  x72
06384:  MOVLW  23
06386:  MOVWF  x73
06388:  MOVLW  55
0638A:  MOVWF  x74
0638C:  MOVLW  3C
0638E:  MOVWF  x75
06390:  MOVLW  01
06392:  MOVWF  x76
06394:  CLRF   x77
06396:  MOVLB  0
06398:  CALL   2B28
0639C:  MOVLB  5
....................       } 
....................              
....................       if(RIGHT){   
0639E:  BSF    F96.0
063A0:  BTFSC  F84.0
063A2:  BRA    64C4
....................          if(Opcion==1) 
063A4:  DECFSZ x9C,W
063A6:  BRA    63BA
....................             Setpoint=Temperatura1;           
063A8:  MOVFF  620,61C
063AC:  MOVFF  61F,61B
063B0:  MOVFF  61E,61A
063B4:  MOVFF  61D,619
....................          else if(Opcion==2) 
063B8:  BRA    63E8
063BA:  MOVF   x9C,W
063BC:  SUBLW  02
063BE:  BNZ   63D2
....................             Setpoint=Temperatura2;  
063C0:  MOVFF  624,61C
063C4:  MOVFF  623,61B
063C8:  MOVFF  622,61A
063CC:  MOVFF  621,619
....................          else if(Opcion==3) 
063D0:  BRA    63E8
063D2:  MOVF   x9C,W
063D4:  SUBLW  03
063D6:  BNZ   63E8
....................             Setpoint=Temperatura3; 
063D8:  MOVFF  628,61C
063DC:  MOVFF  627,61B
063E0:  MOVFF  626,61A
063E4:  MOVFF  625,619
....................           
....................          Ganancia=Ganancia*(Setpoint/44.5); 
063E8:  MOVFF  61C,65D
063EC:  MOVFF  61B,65C
063F0:  MOVFF  61A,65B
063F4:  MOVFF  619,65A
063F8:  MOVLB  6
063FA:  CLRF   x61
063FC:  CLRF   x60
063FE:  MOVLW  32
06400:  MOVWF  x5F
06402:  MOVLW  84
06404:  MOVWF  x5E
06406:  MOVLB  0
06408:  CALL   10E8
0640C:  MOVFF  604,67C
06410:  MOVFF  603,67B
06414:  MOVFF  602,67A
06418:  MOVFF  601,679
0641C:  MOVFF  03,680
06420:  MOVFF  02,67F
06424:  MOVFF  01,67E
06428:  MOVFF  00,67D
0642C:  CALL   2D3C
06430:  MOVFF  03,604
06434:  MOVFF  02,603
06438:  MOVFF  01,602
0643C:  MOVFF  00,601
....................          Gananciamax=(0.27)*Setpoint;  
06440:  MOVLW  71
06442:  MOVLB  6
06444:  MOVWF  x7C
06446:  MOVLW  3D
06448:  MOVWF  x7B
0644A:  MOVLW  0A
0644C:  MOVWF  x7A
0644E:  MOVLW  7D
06450:  MOVWF  x79
06452:  MOVFF  61C,680
06456:  MOVFF  61B,67F
0645A:  MOVFF  61A,67E
0645E:  MOVFF  619,67D
06462:  MOVLB  0
06464:  CALL   2D3C
06468:  MOVFF  03,5BC
0646C:  MOVFF  02,5BB
06470:  MOVFF  01,5BA
06474:  MOVFF  00,5B9
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;glcd_fillScreen(OFF);pausa=0;         
06478:  MOVLW  14
0647A:  MOVLB  5
0647C:  MOVWF  x97
0647E:  MOVLW  0F
06480:  MOVLB  6
06482:  MOVWF  x72
06484:  MOVLW  12
06486:  MOVWF  x73
06488:  MOVLW  1E
0648A:  MOVWF  x74
0648C:  MOVLW  35
0648E:  MOVWF  x75
06490:  CLRF   x76
06492:  MOVLW  01
06494:  MOVWF  x77
06496:  MOVLB  0
06498:  CALL   2B28
0649C:  MOVLB  5
0649E:  CLRF   x9E
064A0:  MOVLB  6
064A2:  CLRF   x61
064A4:  MOVLB  0
064A6:  CALL   25BC
064AA:  MOVLB  5
064AC:  CLRF   x9A
....................           
....................          if((Testerilizacionp[0]==0)&&(Testerilizacionp[1]==0)&&(Testerilizacionp[2]==0)&&(Testerilizacionp[3]==0)) 
064AE:  MOVF   xD1,F
064B0:  BNZ   64C2
064B2:  MOVF   xD2,F
064B4:  BNZ   64C2
064B6:  MOVF   xD3,F
064B8:  BNZ   64C2
064BA:  MOVF   xD4,F
064BC:  BNZ   64C2
....................             Infinito=1; 
064BE:  BSF    x93.1
....................          else 
064C0:  BRA    64C4
....................             Infinito=0; 
064C2:  BCF    x93.1
....................       }  
....................                    
....................       if(LEFT){ 
064C4:  BSF    F96.1
064C6:  BTFSC  F84.1
064C8:  BRA    64F8
....................          delay_ms(300);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
064CA:  MOVLW  02
064CC:  MOVLB  6
064CE:  MOVWF  x59
064D0:  MOVLW  96
064D2:  MOVWF  x62
064D4:  MOVLB  0
064D6:  CALL   1052
064DA:  MOVLB  6
064DC:  DECFSZ x59,F
064DE:  BRA    64D0
064E0:  MOVLW  01
064E2:  MOVLB  5
064E4:  MOVWF  x97
064E6:  MOVLB  6
064E8:  CLRF   x61
064EA:  MOVLB  0
064EC:  CALL   25BC
064F0:  MOVLW  01
064F2:  MOVLB  5
064F4:  MOVWF  x9C
064F6:  BSF    x87.4
....................       }  
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Temperatura 
064F8:  MOVF   x97,W
064FA:  SUBLW  05
064FC:  BTFSS  FD8.2
064FE:  GOTO   6D84
....................       
....................          if(Opcion>3) 
06502:  MOVF   x9C,W
06504:  SUBLW  03
06506:  BC    650C
....................             Opcion=1; 
06508:  MOVLW  01
0650A:  MOVWF  x9C
....................          if(Opcion<1) 
0650C:  MOVF   x9C,F
0650E:  BNZ   6514
....................             Opcion=3; 
06510:  MOVLW  03
06512:  MOVWF  x9C
....................           
....................          if(Opcion==1)   { 
06514:  DECFSZ x9C,W
06516:  BRA    656E
....................             strcpy(Menus.Letra,"Temperatura 1"); 
06518:  MOVLW  06
0651A:  MOVWF  FEA
0651C:  MOVLW  39
0651E:  MOVWF  FE9
06520:  MOVFF  FF2,659
06524:  BCF    FF2.7
06526:  MOVLW  00
06528:  MOVLB  0
0652A:  CALL   09EC
0652E:  TBLRD*-
06530:  TBLRD*+
06532:  MOVF   FF5,W
06534:  MOVWF  FEE
06536:  IORLW  00
06538:  BNZ   6530
0653A:  MOVLB  6
0653C:  BTFSC  x59.7
0653E:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,1,1); 
06540:  MOVLW  06
06542:  MOVWF  x5A
06544:  MOVLW  39
06546:  MOVWF  x59
06548:  MOVFF  620,65E
0654C:  MOVFF  61F,65D
06550:  MOVFF  61E,65C
06554:  MOVFF  61D,65B
06558:  CLRF   x5F
0655A:  MOVLW  14
0655C:  MOVWF  x60
0655E:  MOVLW  01
06560:  MOVWF  x61
06562:  MOVWF  x62
06564:  MOVLB  0
06566:  CALL   486C
....................          }else{ 
0656A:  BRA    65C0
0656C:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 1"); 
0656E:  MOVLW  06
06570:  MOVWF  FEA
06572:  MOVLW  39
06574:  MOVWF  FE9
06576:  MOVFF  FF2,659
0657A:  BCF    FF2.7
0657C:  MOVLW  00
0657E:  MOVLB  0
06580:  CALL   09EC
06584:  TBLRD*-
06586:  TBLRD*+
06588:  MOVF   FF5,W
0658A:  MOVWF  FEE
0658C:  IORLW  00
0658E:  BNZ   6586
06590:  MOVLB  6
06592:  BTFSC  x59.7
06594:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,0,1); 
06596:  MOVLW  06
06598:  MOVWF  x5A
0659A:  MOVLW  39
0659C:  MOVWF  x59
0659E:  MOVFF  620,65E
065A2:  MOVFF  61F,65D
065A6:  MOVFF  61E,65C
065AA:  MOVFF  61D,65B
065AE:  CLRF   x5F
065B0:  MOVLW  14
065B2:  MOVWF  x60
065B4:  CLRF   x61
065B6:  MOVLW  01
065B8:  MOVWF  x62
065BA:  MOVLB  0
065BC:  CALL   486C
....................          } 
....................           
....................          if(Opcion==2)   { 
065C0:  MOVLB  5
065C2:  MOVF   x9C,W
065C4:  SUBLW  02
065C6:  BNZ   661E
....................             strcpy(Menus.Letra,"Temperatura 2"); 
065C8:  MOVLW  06
065CA:  MOVWF  FEA
065CC:  MOVLW  39
065CE:  MOVWF  FE9
065D0:  MOVFF  FF2,659
065D4:  BCF    FF2.7
065D6:  MOVLW  00
065D8:  MOVLB  0
065DA:  CALL   0A18
065DE:  TBLRD*-
065E0:  TBLRD*+
065E2:  MOVF   FF5,W
065E4:  MOVWF  FEE
065E6:  IORLW  00
065E8:  BNZ   65E0
065EA:  MOVLB  6
065EC:  BTFSC  x59.7
065EE:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,1,1); 
065F0:  MOVLW  06
065F2:  MOVWF  x5A
065F4:  MOVLW  39
065F6:  MOVWF  x59
065F8:  MOVFF  624,65E
065FC:  MOVFF  623,65D
06600:  MOVFF  622,65C
06604:  MOVFF  621,65B
06608:  CLRF   x5F
0660A:  MOVLW  23
0660C:  MOVWF  x60
0660E:  MOVLW  01
06610:  MOVWF  x61
06612:  MOVWF  x62
06614:  MOVLB  0
06616:  CALL   486C
....................          }else{ 
0661A:  BRA    6670
0661C:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 2"); 
0661E:  MOVLW  06
06620:  MOVWF  FEA
06622:  MOVLW  39
06624:  MOVWF  FE9
06626:  MOVFF  FF2,659
0662A:  BCF    FF2.7
0662C:  MOVLW  00
0662E:  MOVLB  0
06630:  CALL   0A18
06634:  TBLRD*-
06636:  TBLRD*+
06638:  MOVF   FF5,W
0663A:  MOVWF  FEE
0663C:  IORLW  00
0663E:  BNZ   6636
06640:  MOVLB  6
06642:  BTFSC  x59.7
06644:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,0,1); 
06646:  MOVLW  06
06648:  MOVWF  x5A
0664A:  MOVLW  39
0664C:  MOVWF  x59
0664E:  MOVFF  624,65E
06652:  MOVFF  623,65D
06656:  MOVFF  622,65C
0665A:  MOVFF  621,65B
0665E:  CLRF   x5F
06660:  MOVLW  23
06662:  MOVWF  x60
06664:  CLRF   x61
06666:  MOVLW  01
06668:  MOVWF  x62
0666A:  MOVLB  0
0666C:  CALL   486C
....................          } 
....................              
....................          if(Opcion==3)   { 
06670:  MOVLB  5
06672:  MOVF   x9C,W
06674:  SUBLW  03
06676:  BNZ   66CE
....................             strcpy(Menus.Letra,"Temperatura 3"); 
06678:  MOVLW  06
0667A:  MOVWF  FEA
0667C:  MOVLW  39
0667E:  MOVWF  FE9
06680:  MOVFF  FF2,659
06684:  BCF    FF2.7
06686:  MOVLW  00
06688:  MOVLB  0
0668A:  CALL   0A44
0668E:  TBLRD*-
06690:  TBLRD*+
06692:  MOVF   FF5,W
06694:  MOVWF  FEE
06696:  IORLW  00
06698:  BNZ   6690
0669A:  MOVLB  6
0669C:  BTFSC  x59.7
0669E:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,1,1); 
066A0:  MOVLW  06
066A2:  MOVWF  x5A
066A4:  MOVLW  39
066A6:  MOVWF  x59
066A8:  MOVFF  628,65E
066AC:  MOVFF  627,65D
066B0:  MOVFF  626,65C
066B4:  MOVFF  625,65B
066B8:  CLRF   x5F
066BA:  MOVLW  32
066BC:  MOVWF  x60
066BE:  MOVLW  01
066C0:  MOVWF  x61
066C2:  MOVWF  x62
066C4:  MOVLB  0
066C6:  CALL   486C
....................          }else{ 
066CA:  BRA    6720
066CC:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 3"); 
066CE:  MOVLW  06
066D0:  MOVWF  FEA
066D2:  MOVLW  39
066D4:  MOVWF  FE9
066D6:  MOVFF  FF2,659
066DA:  BCF    FF2.7
066DC:  MOVLW  00
066DE:  MOVLB  0
066E0:  CALL   0A44
066E4:  TBLRD*-
066E6:  TBLRD*+
066E8:  MOVF   FF5,W
066EA:  MOVWF  FEE
066EC:  IORLW  00
066EE:  BNZ   66E6
066F0:  MOVLB  6
066F2:  BTFSC  x59.7
066F4:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,0,1); 
066F6:  MOVLW  06
066F8:  MOVWF  x5A
066FA:  MOVLW  39
066FC:  MOVWF  x59
066FE:  MOVFF  628,65E
06702:  MOVFF  627,65D
06706:  MOVFF  626,65C
0670A:  MOVFF  625,65B
0670E:  CLRF   x5F
06710:  MOVLW  32
06712:  MOVWF  x60
06714:  CLRF   x61
06716:  MOVLW  01
06718:  MOVWF  x62
0671A:  MOVLB  0
0671C:  CALL   486C
....................          } 
....................                
....................                 
....................          if(RIGHT)//Si oprime SET          
06720:  BSF    F96.0
06722:  BTFSC  F84.0
06724:  BRA    672C
....................             Opcion++;          
06726:  MOVLB  5
06728:  INCF   x9C,F
0672A:  MOVLB  0
....................        
....................          strcpy(Menus.Letra,"Temperatura"); 
0672C:  MOVLW  06
0672E:  MOVWF  FEA
06730:  MOVLW  39
06732:  MOVWF  FE9
06734:  MOVFF  FF2,659
06738:  BCF    FF2.7
0673A:  MOVLW  00
0673C:  CALL   09C2
06740:  TBLRD*-
06742:  TBLRD*+
06744:  MOVF   FF5,W
06746:  MOVWF  FEE
06748:  IORLW  00
0674A:  BNZ   6742
0674C:  MOVLB  6
0674E:  BTFSC  x59.7
06750:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
06752:  MOVLW  06
06754:  MOVWF  x62
06756:  MOVLW  39
06758:  MOVWF  x61
0675A:  CLRF   x63
0675C:  CLRF   x64
0675E:  MOVLW  01
06760:  MOVWF  x65
06762:  MOVLW  02
06764:  MOVWF  x66
06766:  MOVLB  0
06768:  CALL   2BEA
....................           
....................        
....................          if(UP){   
0676C:  BSF    F92.4
0676E:  BTFSC  F80.4
06770:  BRA    6836
....................             if(Opcion==1) 
06772:  MOVLB  5
06774:  DECFSZ x9C,W
06776:  BRA    67B4
....................                Temperatura1+=0.1; 
06778:  BCF    FD8.1
0677A:  MOVFF  620,661
0677E:  MOVFF  61F,660
06782:  MOVFF  61E,65F
06786:  MOVFF  61D,65E
0678A:  MOVLW  CD
0678C:  MOVLB  6
0678E:  MOVWF  x65
06790:  MOVLW  CC
06792:  MOVWF  x64
06794:  MOVLW  4C
06796:  MOVWF  x63
06798:  MOVLW  7B
0679A:  MOVWF  x62
0679C:  MOVLB  0
0679E:  CALL   1246
067A2:  MOVFF  03,620
067A6:  MOVFF  02,61F
067AA:  MOVFF  01,61E
067AE:  MOVFF  00,61D
067B2:  MOVLB  5
....................              
....................             if(Opcion==2) 
067B4:  MOVF   x9C,W
067B6:  SUBLW  02
067B8:  BNZ   67F6
....................                Temperatura2+=0.1; 
067BA:  BCF    FD8.1
067BC:  MOVFF  624,661
067C0:  MOVFF  623,660
067C4:  MOVFF  622,65F
067C8:  MOVFF  621,65E
067CC:  MOVLW  CD
067CE:  MOVLB  6
067D0:  MOVWF  x65
067D2:  MOVLW  CC
067D4:  MOVWF  x64
067D6:  MOVLW  4C
067D8:  MOVWF  x63
067DA:  MOVLW  7B
067DC:  MOVWF  x62
067DE:  MOVLB  0
067E0:  CALL   1246
067E4:  MOVFF  03,624
067E8:  MOVFF  02,623
067EC:  MOVFF  01,622
067F0:  MOVFF  00,621
067F4:  MOVLB  5
....................                 
....................             if(Opcion==3) 
067F6:  MOVF   x9C,W
067F8:  SUBLW  03
067FA:  BNZ   6838
....................                Temperatura3+=0.1;    
067FC:  BCF    FD8.1
067FE:  MOVFF  628,661
06802:  MOVFF  627,660
06806:  MOVFF  626,65F
0680A:  MOVFF  625,65E
0680E:  MOVLW  CD
06810:  MOVLB  6
06812:  MOVWF  x65
06814:  MOVLW  CC
06816:  MOVWF  x64
06818:  MOVLW  4C
0681A:  MOVWF  x63
0681C:  MOVLW  7B
0681E:  MOVWF  x62
06820:  MOVLB  0
06822:  CALL   1246
06826:  MOVFF  03,628
0682A:  MOVFF  02,627
0682E:  MOVFF  01,626
06832:  MOVFF  00,625
06836:  MOVLB  5
....................          } 
....................                 
....................          if(DOWN){   
06838:  BSF    F92.5
0683A:  BTFSC  F80.5
0683C:  BRA    6902
....................             if(Opcion==1) 
0683E:  DECFSZ x9C,W
06840:  BRA    687E
....................                Temperatura1-=0.1; 
06842:  BSF    FD8.1
06844:  MOVFF  620,661
06848:  MOVFF  61F,660
0684C:  MOVFF  61E,65F
06850:  MOVFF  61D,65E
06854:  MOVLW  CD
06856:  MOVLB  6
06858:  MOVWF  x65
0685A:  MOVLW  CC
0685C:  MOVWF  x64
0685E:  MOVLW  4C
06860:  MOVWF  x63
06862:  MOVLW  7B
06864:  MOVWF  x62
06866:  MOVLB  0
06868:  CALL   1246
0686C:  MOVFF  03,620
06870:  MOVFF  02,61F
06874:  MOVFF  01,61E
06878:  MOVFF  00,61D
0687C:  MOVLB  5
....................              
....................             if(Opcion==2) 
0687E:  MOVF   x9C,W
06880:  SUBLW  02
06882:  BNZ   68C0
....................                Temperatura2-=0.1; 
06884:  BSF    FD8.1
06886:  MOVFF  624,661
0688A:  MOVFF  623,660
0688E:  MOVFF  622,65F
06892:  MOVFF  621,65E
06896:  MOVLW  CD
06898:  MOVLB  6
0689A:  MOVWF  x65
0689C:  MOVLW  CC
0689E:  MOVWF  x64
068A0:  MOVLW  4C
068A2:  MOVWF  x63
068A4:  MOVLW  7B
068A6:  MOVWF  x62
068A8:  MOVLB  0
068AA:  CALL   1246
068AE:  MOVFF  03,624
068B2:  MOVFF  02,623
068B6:  MOVFF  01,622
068BA:  MOVFF  00,621
068BE:  MOVLB  5
....................                 
....................             if(Opcion==3) 
068C0:  MOVF   x9C,W
068C2:  SUBLW  03
068C4:  BNZ   6902
....................                Temperatura3-=0.1;    
068C6:  BSF    FD8.1
068C8:  MOVFF  628,661
068CC:  MOVFF  627,660
068D0:  MOVFF  626,65F
068D4:  MOVFF  625,65E
068D8:  MOVLW  CD
068DA:  MOVLB  6
068DC:  MOVWF  x65
068DE:  MOVLW  CC
068E0:  MOVWF  x64
068E2:  MOVLW  4C
068E4:  MOVWF  x63
068E6:  MOVLW  7B
068E8:  MOVWF  x62
068EA:  MOVLB  0
068EC:  CALL   1246
068F0:  MOVFF  03,628
068F4:  MOVFF  02,627
068F8:  MOVFF  01,626
068FC:  MOVFF  00,625
06900:  MOVLB  5
....................          } 
....................                            
....................          if(LEFT){ 
06902:  BSF    F96.1
06904:  BTFSC  F84.1
06906:  BRA    6C54
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
06908:  MOVLW  04
0690A:  MOVLB  6
0690C:  MOVWF  x59
0690E:  MOVLW  AF
06910:  MOVWF  x62
06912:  MOVLB  0
06914:  CALL   1052
06918:  MOVLB  6
0691A:  DECFSZ x59,F
0691C:  BRA    690E
0691E:  MOVLW  01
06920:  MOVLB  5
06922:  MOVWF  x97
06924:  MOVLB  6
06926:  CLRF   x61
06928:  MOVLB  0
0692A:  CALL   25BC
0692E:  MOVLW  01
06930:  MOVLB  5
06932:  MOVWF  x9C
06934:  BSF    x87.4
....................              
....................             entero=(int8)Temperatura1; 
06936:  MOVFF  620,65C
0693A:  MOVFF  61F,65B
0693E:  MOVFF  61E,65A
06942:  MOVFF  61D,659
06946:  MOVLB  0
06948:  CALL   4342
0694C:  MOVFF  01,5A0
....................             decimal=(Temperatura1-entero)*10; 
06950:  MOVLB  6
06952:  CLRF   x60
06954:  MOVFF  5A0,65F
06958:  MOVLB  0
0695A:  CALL   10B2
0695E:  BSF    FD8.1
06960:  MOVFF  620,661
06964:  MOVFF  61F,660
06968:  MOVFF  61E,65F
0696C:  MOVFF  61D,65E
06970:  MOVFF  03,665
06974:  MOVFF  02,664
06978:  MOVFF  01,663
0697C:  MOVFF  00,662
06980:  CALL   1246
06984:  MOVFF  00,659
06988:  MOVFF  01,65A
0698C:  MOVFF  02,65B
06990:  MOVFF  03,65C
06994:  MOVFF  03,67C
06998:  MOVFF  02,67B
0699C:  MOVFF  01,67A
069A0:  MOVFF  00,679
069A4:  MOVLB  6
069A6:  CLRF   x80
069A8:  CLRF   x7F
069AA:  MOVLW  20
069AC:  MOVWF  x7E
069AE:  MOVLW  82
069B0:  MOVWF  x7D
069B2:  MOVLB  0
069B4:  CALL   2D3C
069B8:  MOVFF  03,65C
069BC:  MOVFF  02,65B
069C0:  MOVFF  01,65A
069C4:  MOVFF  00,659
069C8:  CALL   4342
069CC:  MOVFF  01,59F
....................             write_eeprom(8,entero); 
069D0:  CLRF   FAA
069D2:  MOVLW  08
069D4:  MOVWF  FA9
069D6:  MOVFF  5A0,FA8
069DA:  BCF    FA6.6
069DC:  BCF    FA6.7
069DE:  BSF    FA6.2
069E0:  MOVF   FF2,W
069E2:  MOVWF  00
069E4:  BCF    FF2.7
069E6:  MOVLB  F
069E8:  MOVLW  55
069EA:  MOVWF  FA7
069EC:  MOVLW  AA
069EE:  MOVWF  FA7
069F0:  BSF    FA6.1
069F2:  BTFSC  FA6.1
069F4:  BRA    69F2
069F6:  BCF    FA6.2
069F8:  MOVF   00,W
069FA:  IORWF  FF2,F
....................             delay_ms(50);    
069FC:  MOVLW  32
069FE:  MOVLB  6
06A00:  MOVWF  x62
06A02:  MOVLB  0
06A04:  CALL   1052
....................             write_eeprom(9,decimal);//Guardar valor de Setpoint en eeprom 
06A08:  CLRF   FAA
06A0A:  MOVLW  09
06A0C:  MOVWF  FA9
06A0E:  MOVFF  59F,FA8
06A12:  BCF    FA6.6
06A14:  BCF    FA6.7
06A16:  BSF    FA6.2
06A18:  MOVF   FF2,W
06A1A:  MOVWF  00
06A1C:  BCF    FF2.7
06A1E:  MOVLB  F
06A20:  MOVLW  55
06A22:  MOVWF  FA7
06A24:  MOVLW  AA
06A26:  MOVWF  FA7
06A28:  BSF    FA6.1
06A2A:  BTFSC  FA6.1
06A2C:  BRA    6A2A
06A2E:  BCF    FA6.2
06A30:  MOVF   00,W
06A32:  IORWF  FF2,F
....................             delay_ms(50);   
06A34:  MOVLW  32
06A36:  MOVLB  6
06A38:  MOVWF  x62
06A3A:  MOVLB  0
06A3C:  CALL   1052
....................              
....................             entero=(int8)Temperatura2; 
06A40:  MOVFF  624,65C
06A44:  MOVFF  623,65B
06A48:  MOVFF  622,65A
06A4C:  MOVFF  621,659
06A50:  CALL   4342
06A54:  MOVFF  01,5A0
....................             decimal=(Temperatura2-entero)*10; 
06A58:  MOVLB  6
06A5A:  CLRF   x60
06A5C:  MOVFF  5A0,65F
06A60:  MOVLB  0
06A62:  CALL   10B2
06A66:  BSF    FD8.1
06A68:  MOVFF  624,661
06A6C:  MOVFF  623,660
06A70:  MOVFF  622,65F
06A74:  MOVFF  621,65E
06A78:  MOVFF  03,665
06A7C:  MOVFF  02,664
06A80:  MOVFF  01,663
06A84:  MOVFF  00,662
06A88:  CALL   1246
06A8C:  MOVFF  00,659
06A90:  MOVFF  01,65A
06A94:  MOVFF  02,65B
06A98:  MOVFF  03,65C
06A9C:  MOVFF  03,67C
06AA0:  MOVFF  02,67B
06AA4:  MOVFF  01,67A
06AA8:  MOVFF  00,679
06AAC:  MOVLB  6
06AAE:  CLRF   x80
06AB0:  CLRF   x7F
06AB2:  MOVLW  20
06AB4:  MOVWF  x7E
06AB6:  MOVLW  82
06AB8:  MOVWF  x7D
06ABA:  MOVLB  0
06ABC:  CALL   2D3C
06AC0:  MOVFF  03,65C
06AC4:  MOVFF  02,65B
06AC8:  MOVFF  01,65A
06ACC:  MOVFF  00,659
06AD0:  CALL   4342
06AD4:  MOVFF  01,59F
....................             write_eeprom(10,entero); 
06AD8:  CLRF   FAA
06ADA:  MOVLW  0A
06ADC:  MOVWF  FA9
06ADE:  MOVFF  5A0,FA8
06AE2:  BCF    FA6.6
06AE4:  BCF    FA6.7
06AE6:  BSF    FA6.2
06AE8:  MOVF   FF2,W
06AEA:  MOVWF  00
06AEC:  BCF    FF2.7
06AEE:  MOVLB  F
06AF0:  MOVLW  55
06AF2:  MOVWF  FA7
06AF4:  MOVLW  AA
06AF6:  MOVWF  FA7
06AF8:  BSF    FA6.1
06AFA:  BTFSC  FA6.1
06AFC:  BRA    6AFA
06AFE:  BCF    FA6.2
06B00:  MOVF   00,W
06B02:  IORWF  FF2,F
....................             delay_ms(50);    
06B04:  MOVLW  32
06B06:  MOVLB  6
06B08:  MOVWF  x62
06B0A:  MOVLB  0
06B0C:  CALL   1052
....................             write_eeprom(11,decimal);//Guardar valor de Setpoint en eeprom 
06B10:  CLRF   FAA
06B12:  MOVLW  0B
06B14:  MOVWF  FA9
06B16:  MOVFF  59F,FA8
06B1A:  BCF    FA6.6
06B1C:  BCF    FA6.7
06B1E:  BSF    FA6.2
06B20:  MOVF   FF2,W
06B22:  MOVWF  00
06B24:  BCF    FF2.7
06B26:  MOVLB  F
06B28:  MOVLW  55
06B2A:  MOVWF  FA7
06B2C:  MOVLW  AA
06B2E:  MOVWF  FA7
06B30:  BSF    FA6.1
06B32:  BTFSC  FA6.1
06B34:  BRA    6B32
06B36:  BCF    FA6.2
06B38:  MOVF   00,W
06B3A:  IORWF  FF2,F
....................             delay_ms(50);    
06B3C:  MOVLW  32
06B3E:  MOVLB  6
06B40:  MOVWF  x62
06B42:  MOVLB  0
06B44:  CALL   1052
....................              
....................             entero=(int8)Temperatura3; 
06B48:  MOVFF  628,65C
06B4C:  MOVFF  627,65B
06B50:  MOVFF  626,65A
06B54:  MOVFF  625,659
06B58:  CALL   4342
06B5C:  MOVFF  01,5A0
....................             decimal=(Temperatura3-entero)*10; 
06B60:  MOVLB  6
06B62:  CLRF   x60
06B64:  MOVFF  5A0,65F
06B68:  MOVLB  0
06B6A:  CALL   10B2
06B6E:  BSF    FD8.1
06B70:  MOVFF  628,661
06B74:  MOVFF  627,660
06B78:  MOVFF  626,65F
06B7C:  MOVFF  625,65E
06B80:  MOVFF  03,665
06B84:  MOVFF  02,664
06B88:  MOVFF  01,663
06B8C:  MOVFF  00,662
06B90:  CALL   1246
06B94:  MOVFF  00,659
06B98:  MOVFF  01,65A
06B9C:  MOVFF  02,65B
06BA0:  MOVFF  03,65C
06BA4:  MOVFF  03,67C
06BA8:  MOVFF  02,67B
06BAC:  MOVFF  01,67A
06BB0:  MOVFF  00,679
06BB4:  MOVLB  6
06BB6:  CLRF   x80
06BB8:  CLRF   x7F
06BBA:  MOVLW  20
06BBC:  MOVWF  x7E
06BBE:  MOVLW  82
06BC0:  MOVWF  x7D
06BC2:  MOVLB  0
06BC4:  CALL   2D3C
06BC8:  MOVFF  03,65C
06BCC:  MOVFF  02,65B
06BD0:  MOVFF  01,65A
06BD4:  MOVFF  00,659
06BD8:  CALL   4342
06BDC:  MOVFF  01,59F
....................             write_eeprom(12,entero); 
06BE0:  CLRF   FAA
06BE2:  MOVLW  0C
06BE4:  MOVWF  FA9
06BE6:  MOVFF  5A0,FA8
06BEA:  BCF    FA6.6
06BEC:  BCF    FA6.7
06BEE:  BSF    FA6.2
06BF0:  MOVF   FF2,W
06BF2:  MOVWF  00
06BF4:  BCF    FF2.7
06BF6:  MOVLB  F
06BF8:  MOVLW  55
06BFA:  MOVWF  FA7
06BFC:  MOVLW  AA
06BFE:  MOVWF  FA7
06C00:  BSF    FA6.1
06C02:  BTFSC  FA6.1
06C04:  BRA    6C02
06C06:  BCF    FA6.2
06C08:  MOVF   00,W
06C0A:  IORWF  FF2,F
....................             delay_ms(50);    
06C0C:  MOVLW  32
06C0E:  MOVLB  6
06C10:  MOVWF  x62
06C12:  MOVLB  0
06C14:  CALL   1052
....................             write_eeprom(13,decimal);//Guardar valor de Setpoint en eeprom 
06C18:  CLRF   FAA
06C1A:  MOVLW  0D
06C1C:  MOVWF  FA9
06C1E:  MOVFF  59F,FA8
06C22:  BCF    FA6.6
06C24:  BCF    FA6.7
06C26:  BSF    FA6.2
06C28:  MOVF   FF2,W
06C2A:  MOVWF  00
06C2C:  BCF    FF2.7
06C2E:  MOVLB  F
06C30:  MOVLW  55
06C32:  MOVWF  FA7
06C34:  MOVLW  AA
06C36:  MOVWF  FA7
06C38:  BSF    FA6.1
06C3A:  BTFSC  FA6.1
06C3C:  BRA    6C3A
06C3E:  BCF    FA6.2
06C40:  MOVF   00,W
06C42:  IORWF  FF2,F
....................             delay_ms(50);  
06C44:  MOVLW  32
06C46:  MOVLB  6
06C48:  MOVWF  x62
06C4A:  MOVLB  0
06C4C:  CALL   1052
....................             MensajeAlmacenado(); 
06C50:  CALL   37E4
....................          } 
....................           
....................          if(Temperatura1<1) 
06C54:  MOVFF  620,660
06C58:  MOVFF  61F,65F
06C5C:  MOVFF  61E,65E
06C60:  MOVFF  61D,65D
06C64:  MOVLB  6
06C66:  CLRF   x64
06C68:  CLRF   x63
06C6A:  CLRF   x62
06C6C:  MOVLW  7F
06C6E:  MOVWF  x61
06C70:  MOVLB  0
06C72:  CALL   1C42
06C76:  BNC   6C86
....................             Temperatura1=80; 
06C78:  MOVLB  6
06C7A:  CLRF   x20
06C7C:  CLRF   x1F
06C7E:  MOVLW  20
06C80:  MOVWF  x1E
06C82:  MOVLW  85
06C84:  MOVWF  x1D
....................              
....................          if(Temperatura2<1) 
06C86:  MOVFF  624,660
06C8A:  MOVFF  623,65F
06C8E:  MOVFF  622,65E
06C92:  MOVFF  621,65D
06C96:  MOVLB  6
06C98:  CLRF   x64
06C9A:  CLRF   x63
06C9C:  CLRF   x62
06C9E:  MOVLW  7F
06CA0:  MOVWF  x61
06CA2:  MOVLB  0
06CA4:  CALL   1C42
06CA8:  BNC   6CB8
....................             Temperatura2=80; 
06CAA:  MOVLB  6
06CAC:  CLRF   x24
06CAE:  CLRF   x23
06CB0:  MOVLW  20
06CB2:  MOVWF  x22
06CB4:  MOVLW  85
06CB6:  MOVWF  x21
....................              
....................          if(Temperatura3<1) 
06CB8:  MOVFF  628,660
06CBC:  MOVFF  627,65F
06CC0:  MOVFF  626,65E
06CC4:  MOVFF  625,65D
06CC8:  MOVLB  6
06CCA:  CLRF   x64
06CCC:  CLRF   x63
06CCE:  CLRF   x62
06CD0:  MOVLW  7F
06CD2:  MOVWF  x61
06CD4:  MOVLB  0
06CD6:  CALL   1C42
06CDA:  BNC   6CEA
....................             Temperatura3=80; 
06CDC:  MOVLB  6
06CDE:  CLRF   x28
06CE0:  CLRF   x27
06CE2:  MOVLW  20
06CE4:  MOVWF  x26
06CE6:  MOVLW  85
06CE8:  MOVWF  x25
....................              
....................          if(Temperatura1>80) 
06CEA:  MOVLB  6
06CEC:  CLRF   x60
06CEE:  CLRF   x5F
06CF0:  MOVLW  20
06CF2:  MOVWF  x5E
06CF4:  MOVLW  85
06CF6:  MOVWF  x5D
06CF8:  MOVFF  620,664
06CFC:  MOVFF  61F,663
06D00:  MOVFF  61E,662
06D04:  MOVFF  61D,661
06D08:  MOVLB  0
06D0A:  CALL   1C42
06D0E:  BNC   6D1C
....................             Temperatura1=1;    
06D10:  MOVLB  6
06D12:  CLRF   x20
06D14:  CLRF   x1F
06D16:  CLRF   x1E
06D18:  MOVLW  7F
06D1A:  MOVWF  x1D
....................              
....................          if(Temperatura2>80) 
06D1C:  MOVLB  6
06D1E:  CLRF   x60
06D20:  CLRF   x5F
06D22:  MOVLW  20
06D24:  MOVWF  x5E
06D26:  MOVLW  85
06D28:  MOVWF  x5D
06D2A:  MOVFF  624,664
06D2E:  MOVFF  623,663
06D32:  MOVFF  622,662
06D36:  MOVFF  621,661
06D3A:  MOVLB  0
06D3C:  CALL   1C42
06D40:  BNC   6D4E
....................             Temperatura2=1;    
06D42:  MOVLB  6
06D44:  CLRF   x24
06D46:  CLRF   x23
06D48:  CLRF   x22
06D4A:  MOVLW  7F
06D4C:  MOVWF  x21
....................              
....................          if(Temperatura3>80) 
06D4E:  MOVLB  6
06D50:  CLRF   x60
06D52:  CLRF   x5F
06D54:  MOVLW  20
06D56:  MOVWF  x5E
06D58:  MOVLW  85
06D5A:  MOVWF  x5D
06D5C:  MOVFF  628,664
06D60:  MOVFF  627,663
06D64:  MOVFF  626,662
06D68:  MOVFF  625,661
06D6C:  MOVLB  0
06D6E:  CALL   1C42
06D72:  BNC   6D82
....................             Temperatura3=1;    
06D74:  MOVLB  6
06D76:  CLRF   x28
06D78:  CLRF   x27
06D7A:  CLRF   x26
06D7C:  MOVLW  7F
06D7E:  MOVWF  x25
06D80:  MOVLB  0
06D82:  MOVLB  5
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Temporizador 
06D84:  MOVF   x97,W
06D86:  SUBLW  06
06D88:  BTFSS  FD8.2
06D8A:  BRA    7112
....................       
....................          if(unidad<1) 
06D8C:  MOVF   x98,F
06D8E:  BNZ   6D94
....................             unidad=4; 
06D90:  MOVLW  04
06D92:  MOVWF  x98
....................           
....................          strcpy(Menus.Letra,"Tiempo"); 
06D94:  MOVLW  06
06D96:  MOVWF  FEA
06D98:  MOVLW  39
06D9A:  MOVWF  FE9
06D9C:  MOVFF  FF2,659
06DA0:  BCF    FF2.7
06DA2:  MOVLW  00
06DA4:  MOVLB  0
06DA6:  CALL   0A70
06DAA:  TBLRD*-
06DAC:  TBLRD*+
06DAE:  MOVF   FF5,W
06DB0:  MOVWF  FEE
06DB2:  IORLW  00
06DB4:  BNZ   6DAC
06DB6:  MOVLB  6
06DB8:  BTFSC  x59.7
06DBA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,10,0,1,2); 
06DBC:  MOVLW  06
06DBE:  MOVWF  x62
06DC0:  MOVLW  39
06DC2:  MOVWF  x61
06DC4:  MOVLW  0A
06DC6:  MOVWF  x63
06DC8:  CLRF   x64
06DCA:  MOVLW  01
06DCC:  MOVWF  x65
06DCE:  MOVLW  02
06DD0:  MOVWF  x66
06DD2:  MOVLB  0
06DD4:  CALL   2BEA
....................           
....................          if(unidad==4) 
06DD8:  MOVLB  5
06DDA:  MOVF   x98,W
06DDC:  SUBLW  04
06DDE:  BNZ   6DFE
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
06DE0:  MOVFF  5D4,65A
06DE4:  MOVLW  14
06DE6:  MOVLB  6
06DE8:  MOVWF  x5B
06DEA:  MOVLW  28
06DEC:  MOVWF  x5C
06DEE:  MOVLW  01
06DF0:  MOVWF  x5D
06DF2:  MOVLW  02
06DF4:  MOVWF  x5E
06DF6:  MOVLB  0
06DF8:  CALL   4B7A
....................          else 
06DFC:  BRA    6E18
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
06DFE:  MOVFF  5D4,65A
06E02:  MOVLW  14
06E04:  MOVLB  6
06E06:  MOVWF  x5B
06E08:  MOVLW  28
06E0A:  MOVWF  x5C
06E0C:  CLRF   x5D
06E0E:  MOVLW  02
06E10:  MOVWF  x5E
06E12:  MOVLB  0
06E14:  CALL   4B7A
....................           
....................          if(unidad==3) 
06E18:  MOVLB  5
06E1A:  MOVF   x98,W
06E1C:  SUBLW  03
06E1E:  BNZ   6E3C
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
06E20:  MOVFF  5D3,65A
06E24:  MOVLW  28
06E26:  MOVLB  6
06E28:  MOVWF  x5B
06E2A:  MOVWF  x5C
06E2C:  MOVLW  01
06E2E:  MOVWF  x5D
06E30:  MOVLW  02
06E32:  MOVWF  x5E
06E34:  MOVLB  0
06E36:  CALL   4B7A
....................          else 
06E3A:  BRA    6E54
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
06E3C:  MOVFF  5D3,65A
06E40:  MOVLW  28
06E42:  MOVLB  6
06E44:  MOVWF  x5B
06E46:  MOVWF  x5C
06E48:  CLRF   x5D
06E4A:  MOVLW  02
06E4C:  MOVWF  x5E
06E4E:  MOVLB  0
06E50:  CALL   4B7A
....................           
....................          if(unidad==2) 
06E54:  MOVLB  5
06E56:  MOVF   x98,W
06E58:  SUBLW  02
06E5A:  BNZ   6E7A
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
06E5C:  MOVFF  5D2,65A
06E60:  MOVLW  46
06E62:  MOVLB  6
06E64:  MOVWF  x5B
06E66:  MOVLW  28
06E68:  MOVWF  x5C
06E6A:  MOVLW  01
06E6C:  MOVWF  x5D
06E6E:  MOVLW  02
06E70:  MOVWF  x5E
06E72:  MOVLB  0
06E74:  CALL   4B7A
....................          else 
06E78:  BRA    6E94
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
06E7A:  MOVFF  5D2,65A
06E7E:  MOVLW  46
06E80:  MOVLB  6
06E82:  MOVWF  x5B
06E84:  MOVLW  28
06E86:  MOVWF  x5C
06E88:  CLRF   x5D
06E8A:  MOVLW  02
06E8C:  MOVWF  x5E
06E8E:  MOVLB  0
06E90:  CALL   4B7A
....................           
....................          if(unidad==1) 
06E94:  MOVLB  5
06E96:  DECFSZ x98,W
06E98:  BRA    6EB8
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
06E9A:  MOVFF  5D1,65A
06E9E:  MOVLW  5A
06EA0:  MOVLB  6
06EA2:  MOVWF  x5B
06EA4:  MOVLW  28
06EA6:  MOVWF  x5C
06EA8:  MOVLW  01
06EAA:  MOVWF  x5D
06EAC:  MOVLW  02
06EAE:  MOVWF  x5E
06EB0:  MOVLB  0
06EB2:  CALL   4B7A
....................          else 
06EB6:  BRA    6ED2
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
06EB8:  MOVFF  5D1,65A
06EBC:  MOVLW  5A
06EBE:  MOVLB  6
06EC0:  MOVWF  x5B
06EC2:  MOVLW  28
06EC4:  MOVWF  x5C
06EC6:  CLRF   x5D
06EC8:  MOVLW  02
06ECA:  MOVWF  x5E
06ECC:  MOVLB  0
06ECE:  CALL   4B7A
....................           
....................          strcpy(Menus.Letra,":"); 
06ED2:  MOVLW  06
06ED4:  MOVWF  FEA
06ED6:  MOVLW  39
06ED8:  MOVWF  FE9
06EDA:  MOVFF  FF2,659
06EDE:  BCF    FF2.7
06EE0:  MOVLW  00
06EE2:  CALL   0A96
06EE6:  TBLRD*-
06EE8:  TBLRD*+
06EEA:  MOVF   FF5,W
06EEC:  MOVWF  FEE
06EEE:  IORLW  00
06EF0:  BNZ   6EE8
06EF2:  MOVLB  6
06EF4:  BTFSC  x59.7
06EF6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);            
06EF8:  MOVLW  06
06EFA:  MOVWF  x62
06EFC:  MOVLW  39
06EFE:  MOVWF  x61
06F00:  MOVLW  3C
06F02:  MOVWF  x63
06F04:  MOVLW  2A
06F06:  MOVWF  x64
06F08:  MOVLW  02
06F0A:  MOVWF  x65
06F0C:  MOVWF  x66
06F0E:  MOVLB  0
06F10:  CALL   2BEA
....................        
....................          if(UP){   
06F14:  BSF    F92.4
06F16:  BTFSC  F80.4
06F18:  BRA    6F92
....................             if(unidad==2){ 
06F1A:  MOVLB  5
06F1C:  MOVF   x98,W
06F1E:  SUBLW  02
06F20:  BNZ   6F5A
....................                if(Testerilizacionp[unidad-1]<5){ 
06F22:  MOVLW  01
06F24:  SUBWF  x98,W
06F26:  CLRF   03
06F28:  ADDLW  D1
06F2A:  MOVWF  FE9
06F2C:  MOVLW  05
06F2E:  ADDWFC 03,W
06F30:  MOVWF  FEA
06F32:  BTFSC  FEF.7
06F34:  BRA    6F3C
06F36:  MOVF   FEF,W
06F38:  SUBLW  04
06F3A:  BNC   6F58
....................                   DelayPuls();Testerilizacionp[unidad-1]++;visual=1; 
06F3C:  MOVLB  0
06F3E:  CALL   37D6
06F42:  MOVLW  01
06F44:  MOVLB  5
06F46:  SUBWF  x98,W
06F48:  CLRF   03
06F4A:  ADDLW  D1
06F4C:  MOVWF  FE9
06F4E:  MOVLW  05
06F50:  ADDWFC 03,W
06F52:  MOVWF  FEA
06F54:  INCF   FEF,F
06F56:  BSF    x87.4
....................                } 
....................             }else{ 
06F58:  BRA    6F90
....................                if(Testerilizacionp[unidad-1]<9){ 
06F5A:  MOVLW  01
06F5C:  SUBWF  x98,W
06F5E:  CLRF   03
06F60:  ADDLW  D1
06F62:  MOVWF  FE9
06F64:  MOVLW  05
06F66:  ADDWFC 03,W
06F68:  MOVWF  FEA
06F6A:  BTFSC  FEF.7
06F6C:  BRA    6F74
06F6E:  MOVF   FEF,W
06F70:  SUBLW  08
06F72:  BNC   6F90
....................                   DelayPuls();Testerilizacionp[unidad-1]++;visual=1; 
06F74:  MOVLB  0
06F76:  CALL   37D6
06F7A:  MOVLW  01
06F7C:  MOVLB  5
06F7E:  SUBWF  x98,W
06F80:  CLRF   03
06F82:  ADDLW  D1
06F84:  MOVWF  FE9
06F86:  MOVLW  05
06F88:  ADDWFC 03,W
06F8A:  MOVWF  FEA
06F8C:  INCF   FEF,F
06F8E:  BSF    x87.4
06F90:  MOVLB  0
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN){   
06F92:  BSF    F92.5
06F94:  BTFSC  F80.5
06F96:  BRA    6FD2
....................             if(Testerilizacionp[unidad-1]>0){ 
06F98:  MOVLW  01
06F9A:  MOVLB  5
06F9C:  SUBWF  x98,W
06F9E:  CLRF   03
06FA0:  ADDLW  D1
06FA2:  MOVWF  FE9
06FA4:  MOVLW  05
06FA6:  ADDWFC 03,W
06FA8:  MOVWF  FEA
06FAA:  BTFSC  FEF.7
06FAC:  BRA    6FD0
06FAE:  MOVF   FEF,W
06FB0:  SUBLW  00
06FB2:  BC    6FD0
....................                DelayPuls();Testerilizacionp[unidad-1]--;visual=1;      
06FB4:  MOVLB  0
06FB6:  CALL   37D6
06FBA:  MOVLW  01
06FBC:  MOVLB  5
06FBE:  SUBWF  x98,W
06FC0:  CLRF   03
06FC2:  ADDLW  D1
06FC4:  MOVWF  FE9
06FC6:  MOVLW  05
06FC8:  ADDWFC 03,W
06FCA:  MOVWF  FEA
06FCC:  DECF   FEF,F
06FCE:  BSF    x87.4
06FD0:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT){   
06FD2:  BSF    F96.0
06FD4:  BTFSC  F84.0
06FD6:  BRA    6FE4
....................             DelayPuls();unidad--;visual=1; 
06FD8:  CALL   37D6
06FDC:  MOVLB  5
06FDE:  DECF   x98,F
06FE0:  BSF    x87.4
06FE2:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT){ 
06FE4:  BSF    F96.1
06FE6:  BTFSC  F84.1
06FE8:  BRA    7114
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
06FEA:  MOVLW  04
06FEC:  MOVLB  6
06FEE:  MOVWF  x59
06FF0:  MOVLW  AF
06FF2:  MOVWF  x62
06FF4:  MOVLB  0
06FF6:  CALL   1052
06FFA:  MOVLB  6
06FFC:  DECFSZ x59,F
06FFE:  BRA    6FF0
07000:  MOVLW  01
07002:  MOVLB  5
07004:  MOVWF  x97
07006:  MOVLB  6
07008:  CLRF   x61
0700A:  MOVLB  0
0700C:  CALL   25BC
07010:  MOVLW  01
07012:  MOVLB  5
07014:  MOVWF  x9C
07016:  BSF    x87.4
....................             write_eeprom(0,Testerilizacionp[0]); 
07018:  CLRF   FAA
0701A:  CLRF   FA9
0701C:  MOVFF  5D1,FA8
07020:  BCF    FA6.6
07022:  BCF    FA6.7
07024:  BSF    FA6.2
07026:  MOVF   FF2,W
07028:  MOVWF  00
0702A:  BCF    FF2.7
0702C:  MOVLB  F
0702E:  MOVLW  55
07030:  MOVWF  FA7
07032:  MOVLW  AA
07034:  MOVWF  FA7
07036:  BSF    FA6.1
07038:  BTFSC  FA6.1
0703A:  BRA    7038
0703C:  BCF    FA6.2
0703E:  MOVF   00,W
07040:  IORWF  FF2,F
....................             delay_ms(50);    
07042:  MOVLW  32
07044:  MOVLB  6
07046:  MOVWF  x62
07048:  MOVLB  0
0704A:  CALL   1052
....................             write_eeprom(1,Testerilizacionp[1]); 
0704E:  CLRF   FAA
07050:  MOVLW  01
07052:  MOVWF  FA9
07054:  MOVFF  5D2,FA8
07058:  BCF    FA6.6
0705A:  BCF    FA6.7
0705C:  BSF    FA6.2
0705E:  MOVF   FF2,W
07060:  MOVWF  00
07062:  BCF    FF2.7
07064:  MOVLB  F
07066:  MOVLW  55
07068:  MOVWF  FA7
0706A:  MOVLW  AA
0706C:  MOVWF  FA7
0706E:  BSF    FA6.1
07070:  BTFSC  FA6.1
07072:  BRA    7070
07074:  BCF    FA6.2
07076:  MOVF   00,W
07078:  IORWF  FF2,F
....................             delay_ms(50);    
0707A:  MOVLW  32
0707C:  MOVLB  6
0707E:  MOVWF  x62
07080:  MOVLB  0
07082:  CALL   1052
....................             write_eeprom(2,Testerilizacionp[2]); 
07086:  CLRF   FAA
07088:  MOVLW  02
0708A:  MOVWF  FA9
0708C:  MOVFF  5D3,FA8
07090:  BCF    FA6.6
07092:  BCF    FA6.7
07094:  BSF    FA6.2
07096:  MOVF   FF2,W
07098:  MOVWF  00
0709A:  BCF    FF2.7
0709C:  MOVLB  F
0709E:  MOVLW  55
070A0:  MOVWF  FA7
070A2:  MOVLW  AA
070A4:  MOVWF  FA7
070A6:  BSF    FA6.1
070A8:  BTFSC  FA6.1
070AA:  BRA    70A8
070AC:  BCF    FA6.2
070AE:  MOVF   00,W
070B0:  IORWF  FF2,F
....................             delay_ms(50);    
070B2:  MOVLW  32
070B4:  MOVLB  6
070B6:  MOVWF  x62
070B8:  MOVLB  0
070BA:  CALL   1052
....................             write_eeprom(3,Testerilizacionp[3]); 
070BE:  CLRF   FAA
070C0:  MOVLW  03
070C2:  MOVWF  FA9
070C4:  MOVFF  5D4,FA8
070C8:  BCF    FA6.6
070CA:  BCF    FA6.7
070CC:  BSF    FA6.2
070CE:  MOVF   FF2,W
070D0:  MOVWF  00
070D2:  BCF    FF2.7
070D4:  MOVLB  F
070D6:  MOVLW  55
070D8:  MOVWF  FA7
070DA:  MOVLW  AA
070DC:  MOVWF  FA7
070DE:  BSF    FA6.1
070E0:  BTFSC  FA6.1
070E2:  BRA    70E0
070E4:  BCF    FA6.2
070E6:  MOVF   00,W
070E8:  IORWF  FF2,F
....................             delay_ms(50);    
070EA:  MOVLW  32
070EC:  MOVLB  6
070EE:  MOVWF  x62
070F0:  MOVLB  0
070F2:  CALL   1052
....................             MensajeAlmacenado(); 
070F6:  CALL   37E4
....................             if((Testerilizacionp[0]==0)&&(Testerilizacionp[1]==0)&&(Testerilizacionp[2]==0)&&(Testerilizacionp[3]==0)) 
070FA:  MOVLB  5
070FC:  MOVF   xD1,F
070FE:  BNZ   7110
07100:  MOVF   xD2,F
07102:  BNZ   7110
07104:  MOVF   xD3,F
07106:  BNZ   7110
07108:  MOVF   xD4,F
0710A:  BNZ   7110
....................                Infinito=1; 
0710C:  BSF    x93.1
....................             else 
0710E:  BRA    7112
....................                Infinito=0; 
07110:  BCF    x93.1
07112:  MOVLB  0
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==7){ // Menu de Cambio de Contraseña 
07114:  MOVLB  5
07116:  MOVF   x97,W
07118:  SUBLW  07
0711A:  BNZ   7144
....................          PidePassword(1,7,91,Password[0],Password[1],Password[2],Password[3],0); 
0711C:  MOVLW  01
0711E:  MOVLB  6
07120:  MOVWF  x59
07122:  MOVLW  07
07124:  MOVWF  x5A
07126:  MOVLW  5B
07128:  MOVWF  x5B
0712A:  MOVFF  5D9,65C
0712E:  MOVFF  5DA,65D
07132:  MOVFF  5DB,65E
07136:  MOVFF  5DC,65F
0713A:  CLRF   x60
0713C:  MOVLB  0
0713E:  CALL   3892
07142:  MOVLB  5
....................       }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
07144:  MOVF   x97,W
07146:  SUBLW  5B
07148:  BNZ   7172
....................        PidePassword(1,91,91,Password[0],Password[1],Password[2],Password[3],1); 
0714A:  MOVLW  01
0714C:  MOVLB  6
0714E:  MOVWF  x59
07150:  MOVLW  5B
07152:  MOVWF  x5A
07154:  MOVWF  x5B
07156:  MOVFF  5D9,65C
0715A:  MOVFF  5DA,65D
0715E:  MOVFF  5DB,65E
07162:  MOVFF  5DC,65F
07166:  MOVLW  01
07168:  MOVWF  x60
0716A:  MOVLB  0
0716C:  CALL   3892
07170:  MOVLB  5
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==20){ //Menu de Funcionamiento 
07172:  MOVF   x97,W
07174:  SUBLW  14
07176:  BTFSS  FD8.2
07178:  GOTO   7BD6
....................        
....................       // Muestra imagen de fondo en Display GLCD 
....................       glcd_imagen(5); 
0717C:  MOVLW  05
0717E:  MOVLB  6
07180:  MOVWF  x59
07182:  MOVLB  0
07184:  GOTO   4D40
....................        
....................       if(UP && DOWN){ 
07188:  BSF    F92.4
0718A:  BTFSC  F80.4
0718C:  BRA    71A6
0718E:  BSF    F92.5
07190:  BTFSC  F80.5
07192:  BRA    71A6
....................          glcd_init(ON);flag_display=!flag_display; 
07194:  MOVLW  01
07196:  MOVLB  6
07198:  MOVWF  x59
0719A:  MOVLB  0
0719C:  CALL   26CE
071A0:  MOVLB  5
071A2:  BTG    x93.5
071A4:  MOVLB  0
....................       } 
....................   
....................       if(!TERM && !DOOR && !Finalizo){ 
071A6:  BSF    F93.7
071A8:  BTFSC  F81.7
071AA:  BRA    72F2
071AC:  BSF    F96.2
071AE:  BTFSC  F84.2
071B0:  BRA    72F2
071B2:  MOVLB  5
071B4:  BTFSS  x93.7
071B6:  BRA    71BC
071B8:  MOVLB  0
071BA:  BRA    72F2
....................          Motor1_on; 
071BC:  BCF    F8B.5
071BE:  BCF    F94.5
....................          Motor2_on; 
071C0:  BCF    F8B.6
071C2:  BCF    F94.6
....................          if(Temperatura>=Setpoint-1.0){ 
071C4:  BSF    FD8.1
071C6:  MOVFF  61C,661
071CA:  MOVFF  61B,660
071CE:  MOVFF  61A,65F
071D2:  MOVFF  619,65E
071D6:  MOVLB  6
071D8:  CLRF   x65
071DA:  CLRF   x64
071DC:  CLRF   x63
071DE:  MOVLW  7F
071E0:  MOVWF  x62
071E2:  MOVLB  0
071E4:  CALL   1246
071E8:  MOVFF  03,660
071EC:  MOVFF  02,65F
071F0:  MOVFF  01,65E
071F4:  MOVFF  00,65D
071F8:  MOVFF  614,664
071FC:  MOVFF  613,663
07200:  MOVFF  612,662
07204:  MOVFF  611,661
07208:  CALL   1C42
0720C:  BC    7210
0720E:  BNZ   7286
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
07210:  MOVLB  6
07212:  CLRF   x72
07214:  MOVLW  37
07216:  MOVWF  x73
07218:  MOVLW  7F
0721A:  MOVWF  x74
0721C:  MOVLW  3F
0721E:  MOVWF  x75
07220:  MOVLW  01
07222:  MOVWF  x76
07224:  CLRF   x77
07226:  MOVLB  0
07228:  CALL   2B28
....................             strcpy(Menus.Letra,"Status:Controlando"); 
0722C:  MOVLW  06
0722E:  MOVWF  FEA
07230:  MOVLW  39
07232:  MOVWF  FE9
07234:  MOVFF  FF2,659
07238:  BCF    FF2.7
0723A:  MOVLW  00
0723C:  CALL   0AB6
07240:  TBLRD*-
07242:  TBLRD*+
07244:  MOVF   FF5,W
07246:  MOVWF  FEE
07248:  IORLW  00
0724A:  BNZ   7242
0724C:  MOVLB  6
0724E:  BTFSC  x59.7
07250:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
07252:  MOVLW  06
07254:  MOVWF  x62
07256:  MOVLW  39
07258:  MOVWF  x61
0725A:  CLRF   x63
0725C:  MOVLW  37
0725E:  MOVWF  x64
07260:  MOVLW  02
07262:  MOVWF  x65
07264:  MOVLW  01
07266:  MOVWF  x66
07268:  MOVLB  0
0726A:  CALL   2BEA
....................             if(!Infinito) 
0726E:  MOVLB  5
07270:  BTFSC  x93.1
07272:  BRA    7278
....................                tiempo_esterilizacion=1; 
07274:  MOVLW  01
07276:  MOVWF  x9D
....................                 
....................             Controla(); 
07278:  MOVLB  0
0727A:  CALL   4E60
....................             flag_tiempocalentamiento=0; 
0727E:  MOVLB  5
07280:  BCF    x93.4
....................          }else{ 
07282:  BRA    72F4
07284:  MOVLB  0
....................             flag_tiempocalentamiento=1; 
07286:  MOVLB  5
07288:  BSF    x93.4
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
0728A:  MOVLB  6
0728C:  CLRF   x72
0728E:  MOVLW  37
07290:  MOVWF  x73
07292:  MOVLW  7F
07294:  MOVWF  x74
07296:  MOVLW  3F
07298:  MOVWF  x75
0729A:  MOVLW  01
0729C:  MOVWF  x76
0729E:  CLRF   x77
072A0:  MOVLB  0
072A2:  CALL   2B28
....................             strcpy(Menus.Letra,"Status:Calentando"); 
072A6:  MOVLW  06
072A8:  MOVWF  FEA
072AA:  MOVLW  39
072AC:  MOVWF  FE9
072AE:  MOVFF  FF2,659
072B2:  BCF    FF2.7
072B4:  MOVLW  00
072B6:  CALL   0AE8
072BA:  TBLRD*-
072BC:  TBLRD*+
072BE:  MOVF   FF5,W
072C0:  MOVWF  FEE
072C2:  IORLW  00
072C4:  BNZ   72BC
072C6:  MOVLB  6
072C8:  BTFSC  x59.7
072CA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
072CC:  MOVLW  06
072CE:  MOVWF  x62
072D0:  MOVLW  39
072D2:  MOVWF  x61
072D4:  CLRF   x63
072D6:  MOVLW  37
072D8:  MOVWF  x64
072DA:  MOVLW  02
072DC:  MOVWF  x65
072DE:  MOVLW  01
072E0:  MOVWF  x66
072E2:  MOVLB  0
072E4:  CALL   2BEA
....................             tiempo_esterilizacion=0; 
072E8:  MOVLB  5
072EA:  CLRF   x9D
....................             Controla(); 
072EC:  MOVLB  0
072EE:  CALL   4E60
072F2:  MOVLB  5
....................          } 
....................       } 
....................           
....................       if(DOOR){ 
072F4:  BSF    F96.2
072F6:  BTFSS  F84.2
072F8:  BRA    741A
....................          Controlando=0; 
072FA:  CLRF   x90
....................          Motor1_off; 
072FC:  BSF    F8B.5
072FE:  BCF    F94.5
....................          Motor2_off; 
07300:  BSF    F8B.6
07302:  BCF    F94.6
....................          flag_tiempocalentamiento=0; 
07304:  BCF    x93.4
....................          if(flag_clear2==0){ 
07306:  BTFSC  x93.2
07308:  BRA    73A2
....................             Ganancia=read_eeprom(14); 
0730A:  MOVFF  FF2,659
0730E:  BCF    FF2.7
07310:  CLRF   FAA
07312:  MOVLW  0E
07314:  MOVWF  FA9
07316:  BCF    FA6.6
07318:  BCF    FA6.7
0731A:  BSF    FA6.0
0731C:  MOVF   FA8,W
0731E:  MOVLB  6
07320:  BTFSC  x59.7
07322:  BSF    FF2.7
07324:  CLRF   x60
07326:  MOVWF  x5F
07328:  MOVLB  0
0732A:  CALL   10B2
0732E:  MOVFF  03,604
07332:  MOVFF  02,603
07336:  MOVFF  01,602
0733A:  MOVFF  00,601
....................             delay_ms(10); 
0733E:  MOVLW  0A
07340:  MOVLB  6
07342:  MOVWF  x62
07344:  MOVLB  0
07346:  CALL   1052
....................             Ganancia=Ganancia*(Setpoint/44.5); 
0734A:  MOVFF  61C,65D
0734E:  MOVFF  61B,65C
07352:  MOVFF  61A,65B
07356:  MOVFF  619,65A
0735A:  MOVLB  6
0735C:  CLRF   x61
0735E:  CLRF   x60
07360:  MOVLW  32
07362:  MOVWF  x5F
07364:  MOVLW  84
07366:  MOVWF  x5E
07368:  MOVLB  0
0736A:  CALL   10E8
0736E:  MOVFF  604,67C
07372:  MOVFF  603,67B
07376:  MOVFF  602,67A
0737A:  MOVFF  601,679
0737E:  MOVFF  03,680
07382:  MOVFF  02,67F
07386:  MOVFF  01,67E
0738A:  MOVFF  00,67D
0738E:  CALL   2D3C
07392:  MOVFF  03,604
07396:  MOVFF  02,603
0739A:  MOVFF  01,602
0739E:  MOVFF  00,601
....................          } 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
073A2:  MOVLB  6
073A4:  CLRF   x72
073A6:  MOVLW  37
073A8:  MOVWF  x73
073AA:  MOVLW  7F
073AC:  MOVWF  x74
073AE:  MOVLW  3F
073B0:  MOVWF  x75
073B2:  MOVLW  01
073B4:  MOVWF  x76
073B6:  CLRF   x77
073B8:  MOVLB  0
073BA:  CALL   2B28
....................          tiempo_esterilizacion=0; 
073BE:  MOVLB  5
073C0:  CLRF   x9D
....................          SSR_off; 
073C2:  BSF    F8B.2
073C4:  BCF    F94.2
....................          Tpulso=0.0; 
073C6:  CLRF   xF0
073C8:  CLRF   xEF
073CA:  CLRF   xEE
073CC:  CLRF   xED
....................          flag_clear2=1; 
073CE:  BSF    x93.2
....................          flag_ganancia=0; 
073D0:  CLRF   x8E
....................          strcpy(Menus.Letra,"Status:Puerta Abierta"); 
073D2:  MOVLW  06
073D4:  MOVWF  FEA
073D6:  MOVLW  39
073D8:  MOVWF  FE9
073DA:  MOVFF  FF2,659
073DE:  BCF    FF2.7
073E0:  MOVLW  00
073E2:  MOVLB  0
073E4:  CALL   0B18
073E8:  TBLRD*-
073EA:  TBLRD*+
073EC:  MOVF   FF5,W
073EE:  MOVWF  FEE
073F0:  IORLW  00
073F2:  BNZ   73EA
073F4:  MOVLB  6
073F6:  BTFSC  x59.7
073F8:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
073FA:  MOVLW  06
073FC:  MOVWF  x62
073FE:  MOVLW  39
07400:  MOVWF  x61
07402:  CLRF   x63
07404:  MOVLW  37
07406:  MOVWF  x64
07408:  MOVLW  02
0740A:  MOVWF  x65
0740C:  MOVLW  01
0740E:  MOVWF  x66
07410:  MOVLB  0
07412:  CALL   2BEA
....................       }else{ 
07416:  BRA    7440
07418:  MOVLB  5
....................          if(flag_clear2==1) 
0741A:  BTFSS  x93.2
0741C:  BRA    743E
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
0741E:  MOVLB  6
07420:  CLRF   x72
07422:  MOVLW  37
07424:  MOVWF  x73
07426:  MOVLW  7F
07428:  MOVWF  x74
0742A:  MOVLW  3F
0742C:  MOVWF  x75
0742E:  MOVLW  01
07430:  MOVWF  x76
07432:  CLRF   x77
07434:  MOVLB  0
07436:  CALL   2B28
....................             flag_clear2=0; 
0743A:  MOVLB  5
0743C:  BCF    x93.2
0743E:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(TERM){ 
07440:  BSF    F93.7
07442:  BTFSS  F81.7
07444:  BRA    74CE
....................          Controlando=0; 
07446:  MOVLB  5
07448:  CLRF   x90
....................          Motor1_off; 
0744A:  BSF    F8B.5
0744C:  BCF    F94.5
....................          Motor2_off;          
0744E:  BSF    F8B.6
07450:  BCF    F94.6
....................          flag_tiempocalentamiento=0; 
07452:  BCF    x93.4
....................          if(flag_clear3==0){ 
07454:  BTFSC  x93.3
07456:  BRA    7488
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
07458:  MOVLB  6
0745A:  CLRF   x72
0745C:  MOVLW  37
0745E:  MOVWF  x73
07460:  MOVLW  7F
07462:  MOVWF  x74
07464:  MOVLW  3F
07466:  MOVWF  x75
07468:  MOVLW  01
0746A:  MOVWF  x76
0746C:  CLRF   x77
0746E:  MOVLB  0
07470:  CALL   2B28
....................             tiempo_esterilizacion=0; 
07474:  MOVLB  5
07476:  CLRF   x9D
....................             SSR_off; 
07478:  BSF    F8B.2
0747A:  BCF    F94.2
....................             Tpulso=0.0; 
0747C:  CLRF   xF0
0747E:  CLRF   xEF
07480:  CLRF   xEE
07482:  CLRF   xED
....................             flag_clear3=1; 
07484:  BSF    x93.3
....................             flag_ganancia=0; 
07486:  CLRF   x8E
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 01"); 
07488:  MOVLW  06
0748A:  MOVWF  FEA
0748C:  MOVLW  39
0748E:  MOVWF  FE9
07490:  MOVFF  FF2,659
07494:  BCF    FF2.7
07496:  MOVLW  00
07498:  MOVLB  0
0749A:  CALL   0B4C
0749E:  TBLRD*-
074A0:  TBLRD*+
074A2:  MOVF   FF5,W
074A4:  MOVWF  FEE
074A6:  IORLW  00
074A8:  BNZ   74A0
074AA:  MOVLB  6
074AC:  BTFSC  x59.7
074AE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1);          
074B0:  MOVLW  06
074B2:  MOVWF  x62
074B4:  MOVLW  39
074B6:  MOVWF  x61
074B8:  CLRF   x63
074BA:  MOVLW  37
074BC:  MOVWF  x64
074BE:  MOVLW  02
074C0:  MOVWF  x65
074C2:  MOVLW  01
074C4:  MOVWF  x66
074C6:  MOVLB  0
074C8:  CALL   2BEA
....................       }else{ 
074CC:  BRA    74F4
....................          if(flag_clear3==1){ 
074CE:  MOVLB  5
074D0:  BTFSS  x93.3
074D2:  BRA    74F4
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
074D4:  MOVLB  6
074D6:  CLRF   x72
074D8:  MOVLW  37
074DA:  MOVWF  x73
074DC:  MOVLW  7F
074DE:  MOVWF  x74
074E0:  MOVLW  3F
074E2:  MOVWF  x75
074E4:  MOVLW  01
074E6:  MOVWF  x76
074E8:  CLRF   x77
074EA:  MOVLB  0
074EC:  CALL   2B28
....................             flag_clear3=0; 
074F0:  MOVLB  5
074F2:  BCF    x93.3
....................          } 
....................       }    
....................          
....................       if(Lectura==1){                   
074F4:  MOVLB  5
074F6:  BTFSS  x87.5
074F8:  BRA    7A88
....................          Lectura=0; 
074FA:  BCF    x87.5
....................          Potencia=(100.0/Tciclo)*Tpulso; 
074FC:  MOVLB  6
074FE:  CLRF   x5D
07500:  CLRF   x5C
07502:  MOVLW  48
07504:  MOVWF  x5B
07506:  MOVLW  85
07508:  MOVWF  x5A
0750A:  MOVFF  5EC,661
0750E:  MOVFF  5EB,660
07512:  MOVFF  5EA,65F
07516:  MOVFF  5E9,65E
0751A:  MOVLB  0
0751C:  CALL   10E8
07520:  MOVFF  00,659
07524:  MOVFF  01,65A
07528:  MOVFF  02,65B
0752C:  MOVFF  03,65C
07530:  MOVFF  03,67C
07534:  MOVFF  02,67B
07538:  MOVFF  01,67A
0753C:  MOVFF  00,679
07540:  MOVFF  5F0,680
07544:  MOVFF  5EF,67F
07548:  MOVFF  5EE,67E
0754C:  MOVFF  5ED,67D
07550:  CALL   2D3C
07554:  MOVFF  03,5B4
07558:  MOVFF  02,5B3
0755C:  MOVFF  01,5B2
07560:  MOVFF  00,5B1
....................           
....................  //----------------Muestra Temperatura-------------------------- 
....................          if(Source==1){ 
07564:  MOVLB  5
07566:  DECFSZ x96,W
07568:  BRA    7668
....................             if((V0<180 || V0>1000)){ 
0756A:  MOVFF  5E0,660
0756E:  MOVFF  5DF,65F
07572:  MOVFF  5DE,65E
07576:  MOVFF  5DD,65D
0757A:  MOVLB  6
0757C:  CLRF   x64
0757E:  CLRF   x63
07580:  MOVLW  34
07582:  MOVWF  x62
07584:  MOVLW  86
07586:  MOVWF  x61
07588:  MOVLB  0
0758A:  CALL   1C42
0758E:  BC    75B6
07590:  MOVLB  6
07592:  CLRF   x60
07594:  CLRF   x5F
07596:  MOVLW  7A
07598:  MOVWF  x5E
0759A:  MOVLW  88
0759C:  MOVWF  x5D
0759E:  MOVFF  5E0,664
075A2:  MOVFF  5DF,663
075A6:  MOVFF  5DE,662
075AA:  MOVFF  5DD,661
075AE:  MOVLB  0
075B0:  CALL   1C42
075B4:  BNC   761E
....................                glcd_rect(15, 29, 69, 45, YES, OFF); 
075B6:  MOVLW  0F
075B8:  MOVLB  6
075BA:  MOVWF  x72
075BC:  MOVLW  1D
075BE:  MOVWF  x73
075C0:  MOVLW  45
075C2:  MOVWF  x74
075C4:  MOVLW  2D
075C6:  MOVWF  x75
075C8:  MOVLW  01
075CA:  MOVWF  x76
075CC:  CLRF   x77
075CE:  MOVLB  0
075D0:  CALL   2B28
....................                strcpy(Menus.Letra,"-----");displayMenu(Menus.Letra,15,29,2,2); 
075D4:  MOVLW  06
075D6:  MOVWF  FEA
075D8:  MOVLW  39
075DA:  MOVWF  FE9
075DC:  MOVFF  FF2,659
075E0:  BCF    FF2.7
075E2:  MOVLW  00
075E4:  CALL   0B7C
075E8:  TBLRD*-
075EA:  TBLRD*+
075EC:  MOVF   FF5,W
075EE:  MOVWF  FEE
075F0:  IORLW  00
075F2:  BNZ   75EA
075F4:  MOVLB  6
075F6:  BTFSC  x59.7
075F8:  BSF    FF2.7
075FA:  MOVLW  06
075FC:  MOVWF  x62
075FE:  MOVLW  39
07600:  MOVWF  x61
07602:  MOVLW  0F
07604:  MOVWF  x63
07606:  MOVLW  1D
07608:  MOVWF  x64
0760A:  MOVLW  02
0760C:  MOVWF  x65
0760E:  MOVWF  x66
07610:  MOVLB  0
07612:  CALL   2BEA
....................                Desconectado=1; 
07616:  MOVLB  5
07618:  BSF    x87.0
....................             }else{ 
0761A:  BRA    7668
0761C:  MOVLB  0
....................                if(Desconectado==1){ 
0761E:  MOVLB  5
07620:  BTFSS  x87.0
07622:  BRA    7668
....................                   Desconectado=0; 
07624:  BCF    x87.0
....................                   delay_ms(2000); 
07626:  MOVLW  08
07628:  MOVLB  6
0762A:  MOVWF  x59
0762C:  MOVLW  FA
0762E:  MOVWF  x62
07630:  MOVLB  0
07632:  CALL   1052
07636:  MOVLB  6
07638:  DECFSZ x59,F
0763A:  BRA    762C
....................                   for(i=0;i<80;i++){ 
0763C:  MOVLB  5
0763E:  CLRF   x99
07640:  MOVF   x99,W
07642:  SUBLW  4F
07644:  BNC   7668
....................                      Temperatura=Leer_Sensor(80); 
07646:  MOVLW  50
07648:  MOVLB  6
0764A:  MOVWF  x59
0764C:  MOVLB  0
0764E:  CALL   2E54
07652:  MOVFF  03,614
07656:  MOVFF  02,613
0765A:  MOVFF  01,612
0765E:  MOVFF  00,611
....................                   } 
07662:  MOVLB  5
07664:  INCF   x99,F
07666:  BRA    7640
....................                } 
....................             } 
....................          } 
....................          displayT(Temperatura,15,29,2); 
07668:  MOVFF  614,65C
0766C:  MOVFF  613,65B
07670:  MOVFF  612,65A
07674:  MOVFF  611,659
07678:  MOVLW  0F
0767A:  MOVLB  6
0767C:  MOVWF  x5D
0767E:  MOVLW  1D
07680:  MOVWF  x5E
07682:  MOVLW  02
07684:  MOVWF  x5F
07686:  MOVLB  0
07688:  CALL   5790
....................          glcd_circle(74,30,2,NO,ON); 
0768C:  MOVLW  4A
0768E:  MOVLB  6
07690:  MOVWF  x6E
07692:  MOVLW  1E
07694:  MOVWF  x6F
07696:  MOVLW  02
07698:  MOVWF  x70
0769A:  CLRF   x71
0769C:  MOVLW  01
0769E:  MOVWF  x72
076A0:  MOVLB  0
076A2:  CALL   4118
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,75,30,2,2); 
076A6:  MOVLW  06
076A8:  MOVWF  FEA
076AA:  MOVLW  39
076AC:  MOVWF  FE9
076AE:  MOVFF  FF2,659
076B2:  BCF    FF2.7
076B4:  MOVLW  00
076B6:  CALL   06D2
076BA:  TBLRD*-
076BC:  TBLRD*+
076BE:  MOVF   FF5,W
076C0:  MOVWF  FEE
076C2:  IORLW  00
076C4:  BNZ   76BC
076C6:  MOVLB  6
076C8:  BTFSC  x59.7
076CA:  BSF    FF2.7
076CC:  MOVLW  06
076CE:  MOVWF  x62
076D0:  MOVLW  39
076D2:  MOVWF  x61
076D4:  MOVLW  4B
076D6:  MOVWF  x63
076D8:  MOVLW  1E
076DA:  MOVWF  x64
076DC:  MOVLW  02
076DE:  MOVWF  x65
076E0:  MOVWF  x66
076E2:  MOVLB  0
076E4:  CALL   2BEA
....................           
....................          displayT(Setpoint,30,46,1); 
076E8:  MOVFF  61C,65C
076EC:  MOVFF  61B,65B
076F0:  MOVFF  61A,65A
076F4:  MOVFF  619,659
076F8:  MOVLW  1E
076FA:  MOVLB  6
076FC:  MOVWF  x5D
076FE:  MOVLW  2E
07700:  MOVWF  x5E
07702:  MOVLW  01
07704:  MOVWF  x5F
07706:  MOVLB  0
07708:  CALL   5790
....................          glcd_circle(55,47,1,NO,ON); 
0770C:  MOVLW  37
0770E:  MOVLB  6
07710:  MOVWF  x6E
07712:  MOVLW  2F
07714:  MOVWF  x6F
07716:  MOVLW  01
07718:  MOVWF  x70
0771A:  CLRF   x71
0771C:  MOVWF  x72
0771E:  MOVLB  0
07720:  CALL   4118
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,58,45,2,1); 
07724:  MOVLW  06
07726:  MOVWF  FEA
07728:  MOVLW  39
0772A:  MOVWF  FE9
0772C:  MOVFF  FF2,659
07730:  BCF    FF2.7
07732:  MOVLW  00
07734:  CALL   06D2
07738:  TBLRD*-
0773A:  TBLRD*+
0773C:  MOVF   FF5,W
0773E:  MOVWF  FEE
07740:  IORLW  00
07742:  BNZ   773A
07744:  MOVLB  6
07746:  BTFSC  x59.7
07748:  BSF    FF2.7
0774A:  MOVLW  06
0774C:  MOVWF  x62
0774E:  MOVLW  39
07750:  MOVWF  x61
07752:  MOVLW  3A
07754:  MOVWF  x63
07756:  MOVLW  2D
07758:  MOVWF  x64
0775A:  MOVLW  02
0775C:  MOVWF  x65
0775E:  MOVLW  01
07760:  MOVWF  x66
07762:  MOVLB  0
07764:  CALL   2BEA
....................          strcpy(Menus.Letra,"Temp:");displayMenu(Menus.Letra,0,45,2,1);  
07768:  MOVLW  06
0776A:  MOVWF  FEA
0776C:  MOVLW  39
0776E:  MOVWF  FE9
07770:  MOVFF  FF2,659
07774:  BCF    FF2.7
07776:  MOVLW  00
07778:  CALL   0BA0
0777C:  TBLRD*-
0777E:  TBLRD*+
07780:  MOVF   FF5,W
07782:  MOVWF  FEE
07784:  IORLW  00
07786:  BNZ   777E
07788:  MOVLB  6
0778A:  BTFSC  x59.7
0778C:  BSF    FF2.7
0778E:  MOVLW  06
07790:  MOVWF  x62
07792:  MOVLW  39
07794:  MOVWF  x61
07796:  CLRF   x63
07798:  MOVLW  2D
0779A:  MOVWF  x64
0779C:  MOVLW  02
0779E:  MOVWF  x65
077A0:  MOVLW  01
077A2:  MOVWF  x66
077A4:  MOVLB  0
077A6:  CALL   2BEA
....................           
....................          displayTiempo(Potencia,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
077AA:  MOVFF  5B4,65C
077AE:  MOVFF  5B3,65B
077B2:  MOVFF  5B2,65A
077B6:  MOVFF  5B1,659
077BA:  CALL   4342
077BE:  MOVFF  01,659
077C2:  MOVFF  01,65A
077C6:  MOVLW  61
077C8:  MOVLB  6
077CA:  MOVWF  x5B
077CC:  MOVLW  2A
077CE:  MOVWF  x5C
077D0:  MOVLW  03
077D2:  MOVWF  x5D
077D4:  MOVLW  01
077D6:  MOVWF  x5E
077D8:  MOVLB  0
077DA:  CALL   4B7A
077DE:  MOVLW  06
077E0:  MOVWF  FEA
077E2:  MOVLW  39
077E4:  MOVWF  FE9
077E6:  MOVFF  FF2,659
077EA:  BCF    FF2.7
077EC:  MOVLW  00
077EE:  CALL   0BC4
077F2:  TBLRD*-
077F4:  TBLRD*+
077F6:  MOVF   FF5,W
077F8:  MOVWF  FEE
077FA:  IORLW  00
077FC:  BNZ   77F4
077FE:  MOVLB  6
07800:  BTFSC  x59.7
07802:  BSF    FF2.7
07804:  MOVLW  06
07806:  MOVWF  x62
07808:  MOVLW  39
0780A:  MOVWF  x61
0780C:  MOVLW  73
0780E:  MOVWF  x63
07810:  MOVLW  2A
07812:  MOVWF  x64
07814:  MOVLW  02
07816:  MOVWF  x65
07818:  MOVLW  01
0781A:  MOVWF  x66
0781C:  MOVLB  0
0781E:  CALL   2BEA
....................          
....................          if(flag_display==1) 
07822:  MOVLB  5
07824:  BTFSS  x93.5
07826:  BRA    7860
....................             displayTiempo(Ganancia,66,45,3,1); 
07828:  MOVFF  604,65C
0782C:  MOVFF  603,65B
07830:  MOVFF  602,65A
07834:  MOVFF  601,659
07838:  MOVLB  0
0783A:  CALL   4342
0783E:  MOVFF  01,659
07842:  MOVFF  01,65A
07846:  MOVLW  42
07848:  MOVLB  6
0784A:  MOVWF  x5B
0784C:  MOVLW  2D
0784E:  MOVWF  x5C
07850:  MOVLW  03
07852:  MOVWF  x5D
07854:  MOVLW  01
07856:  MOVWF  x5E
07858:  MOVLB  0
0785A:  CALL   4B7A
....................             //displayTemperatura(Prom,97,13,0,1); 
....................             //displayT(Tpulsomin,60,46,1); 
....................          else 
0785E:  BRA    787E
....................             //displayT(V0,66,45,1); 
....................             glcd_rect(66, 45, 88, 52, YES, OFF); 
07860:  MOVLW  42
07862:  MOVLB  6
07864:  MOVWF  x72
07866:  MOVLW  2D
07868:  MOVWF  x73
0786A:  MOVLW  58
0786C:  MOVWF  x74
0786E:  MOVLW  34
07870:  MOVWF  x75
07872:  MOVLW  01
07874:  MOVWF  x76
07876:  CLRF   x77
07878:  MOVLB  0
0787A:  CALL   2B28
....................           
....................          // Muestra Valor de esterilizacion Programado. 
....................          displayTiempo(Testerilizacion[3],20,2,0,2);displayTiempo(Testerilizacion[2],33,2,0,2); 
0787E:  MOVFF  5D0,65A
07882:  MOVLW  14
07884:  MOVLB  6
07886:  MOVWF  x5B
07888:  MOVLW  02
0788A:  MOVWF  x5C
0788C:  CLRF   x5D
0788E:  MOVWF  x5E
07890:  MOVLB  0
07892:  CALL   4B7A
07896:  MOVFF  5CF,65A
0789A:  MOVLW  21
0789C:  MOVLB  6
0789E:  MOVWF  x5B
078A0:  MOVLW  02
078A2:  MOVWF  x5C
078A4:  CLRF   x5D
078A6:  MOVWF  x5E
078A8:  MOVLB  0
078AA:  CALL   4B7A
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,46,2,2,2);  
078AE:  MOVLW  06
078B0:  MOVWF  FEA
078B2:  MOVLW  39
078B4:  MOVWF  FE9
078B6:  MOVFF  FF2,659
078BA:  BCF    FF2.7
078BC:  MOVLW  00
078BE:  CALL   0A96
078C2:  TBLRD*-
078C4:  TBLRD*+
078C6:  MOVF   FF5,W
078C8:  MOVWF  FEE
078CA:  IORLW  00
078CC:  BNZ   78C4
078CE:  MOVLB  6
078D0:  BTFSC  x59.7
078D2:  BSF    FF2.7
078D4:  MOVLW  06
078D6:  MOVWF  x62
078D8:  MOVLW  39
078DA:  MOVWF  x61
078DC:  MOVLW  2E
078DE:  MOVWF  x63
078E0:  MOVLW  02
078E2:  MOVWF  x64
078E4:  MOVWF  x65
078E6:  MOVWF  x66
078E8:  MOVLB  0
078EA:  CALL   2BEA
....................          displayTiempo(Testerilizacion[1],55,2,0,2);displayTiempo(Testerilizacion[0],68,2,0,2); 
078EE:  MOVFF  5CE,65A
078F2:  MOVLW  37
078F4:  MOVLB  6
078F6:  MOVWF  x5B
078F8:  MOVLW  02
078FA:  MOVWF  x5C
078FC:  CLRF   x5D
078FE:  MOVWF  x5E
07900:  MOVLB  0
07902:  CALL   4B7A
07906:  MOVFF  5CD,65A
0790A:  MOVLW  44
0790C:  MOVLB  6
0790E:  MOVWF  x5B
07910:  MOVLW  02
07912:  MOVWF  x5C
07914:  CLRF   x5D
07916:  MOVWF  x5E
07918:  MOVLB  0
0791A:  CALL   4B7A
....................           
....................          // Muestra Valor de esterilizacion actual. 
....................          strcpy(Menus.Letra,"Time:");displayMenu(Menus.Letra,0,18,2,1);  
0791E:  MOVLW  06
07920:  MOVWF  FEA
07922:  MOVLW  39
07924:  MOVWF  FE9
07926:  MOVFF  FF2,659
0792A:  BCF    FF2.7
0792C:  MOVLW  00
0792E:  CALL   0BE4
07932:  TBLRD*-
07934:  TBLRD*+
07936:  MOVF   FF5,W
07938:  MOVWF  FEE
0793A:  IORLW  00
0793C:  BNZ   7934
0793E:  MOVLB  6
07940:  BTFSC  x59.7
07942:  BSF    FF2.7
07944:  MOVLW  06
07946:  MOVWF  x62
07948:  MOVLW  39
0794A:  MOVWF  x61
0794C:  CLRF   x63
0794E:  MOVLW  12
07950:  MOVWF  x64
07952:  MOVLW  02
07954:  MOVWF  x65
07956:  MOVLW  01
07958:  MOVWF  x66
0795A:  MOVLB  0
0795C:  CALL   2BEA
....................          displayTiempo(Testerilizacionp[3],30,18,0,1);displayTiempo(Testerilizacionp[2],36,18,0,1); 
07960:  MOVFF  5D4,65A
07964:  MOVLW  1E
07966:  MOVLB  6
07968:  MOVWF  x5B
0796A:  MOVLW  12
0796C:  MOVWF  x5C
0796E:  CLRF   x5D
07970:  MOVLW  01
07972:  MOVWF  x5E
07974:  MOVLB  0
07976:  CALL   4B7A
0797A:  MOVFF  5D3,65A
0797E:  MOVLW  24
07980:  MOVLB  6
07982:  MOVWF  x5B
07984:  MOVLW  12
07986:  MOVWF  x5C
07988:  CLRF   x5D
0798A:  MOVLW  01
0798C:  MOVWF  x5E
0798E:  MOVLB  0
07990:  CALL   4B7A
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,42,18,2,1);  
07994:  MOVLW  06
07996:  MOVWF  FEA
07998:  MOVLW  39
0799A:  MOVWF  FE9
0799C:  MOVFF  FF2,659
079A0:  BCF    FF2.7
079A2:  MOVLW  00
079A4:  CALL   0A96
079A8:  TBLRD*-
079AA:  TBLRD*+
079AC:  MOVF   FF5,W
079AE:  MOVWF  FEE
079B0:  IORLW  00
079B2:  BNZ   79AA
079B4:  MOVLB  6
079B6:  BTFSC  x59.7
079B8:  BSF    FF2.7
079BA:  MOVLW  06
079BC:  MOVWF  x62
079BE:  MOVLW  39
079C0:  MOVWF  x61
079C2:  MOVLW  2A
079C4:  MOVWF  x63
079C6:  MOVLW  12
079C8:  MOVWF  x64
079CA:  MOVLW  02
079CC:  MOVWF  x65
079CE:  MOVLW  01
079D0:  MOVWF  x66
079D2:  MOVLB  0
079D4:  CALL   2BEA
....................          displayTiempo(Testerilizacionp[1],48,18,0,1);displayTiempo(Testerilizacionp[0],54,18,0,1); 
079D8:  MOVFF  5D2,65A
079DC:  MOVLW  30
079DE:  MOVLB  6
079E0:  MOVWF  x5B
079E2:  MOVLW  12
079E4:  MOVWF  x5C
079E6:  CLRF   x5D
079E8:  MOVLW  01
079EA:  MOVWF  x5E
079EC:  MOVLB  0
079EE:  CALL   4B7A
079F2:  MOVFF  5D1,65A
079F6:  MOVLW  36
079F8:  MOVLB  6
079FA:  MOVWF  x5B
079FC:  MOVLW  12
079FE:  MOVWF  x5C
07A00:  CLRF   x5D
07A02:  MOVLW  01
07A04:  MOVWF  x5E
07A06:  MOVLB  0
07A08:  CALL   4B7A
....................          strcpy(Menus.Letra,"(H:M)");displayMenu(Menus.Letra,60,18,2,1);  
07A0C:  MOVLW  06
07A0E:  MOVWF  FEA
07A10:  MOVLW  39
07A12:  MOVWF  FE9
07A14:  MOVFF  FF2,659
07A18:  BCF    FF2.7
07A1A:  MOVLW  00
07A1C:  CALL   0C08
07A20:  TBLRD*-
07A22:  TBLRD*+
07A24:  MOVF   FF5,W
07A26:  MOVWF  FEE
07A28:  IORLW  00
07A2A:  BNZ   7A22
07A2C:  MOVLB  6
07A2E:  BTFSC  x59.7
07A30:  BSF    FF2.7
07A32:  MOVLW  06
07A34:  MOVWF  x62
07A36:  MOVLW  39
07A38:  MOVWF  x61
07A3A:  MOVLW  3C
07A3C:  MOVWF  x63
07A3E:  MOVLW  12
07A40:  MOVWF  x64
07A42:  MOVLW  02
07A44:  MOVWF  x65
07A46:  MOVLW  01
07A48:  MOVWF  x66
07A4A:  MOVLB  0
07A4C:  CALL   2BEA
....................           
....................          glcd_rect(0, 0, 89, 27, NO, ON); 
07A50:  MOVLB  6
07A52:  CLRF   x72
07A54:  CLRF   x73
07A56:  MOVLW  59
07A58:  MOVWF  x74
07A5A:  MOVLW  1B
07A5C:  MOVWF  x75
07A5E:  CLRF   x76
07A60:  MOVLW  01
07A62:  MOVWF  x77
07A64:  MOVLB  0
07A66:  CALL   2B28
....................          glcd_rect(0, 27, 89, 54, NO, ON); 
07A6A:  MOVLB  6
07A6C:  CLRF   x72
07A6E:  MOVLW  1B
07A70:  MOVWF  x73
07A72:  MOVLW  59
07A74:  MOVWF  x74
07A76:  MOVLW  36
07A78:  MOVWF  x75
07A7A:  CLRF   x76
07A7C:  MOVLW  01
07A7E:  MOVWF  x77
07A80:  MOVLB  0
07A82:  CALL   2B28
07A86:  MOVLB  5
....................       }  
....................        
....................       // Si cumplio el tiempo de esterilización, Muestre ciclo finalizado y detenga control de temperatura. 
....................       if((Testerilizacionp[0]>0)||(Testerilizacionp[1]>0)||(Testerilizacionp[2]>0)||(Testerilizacionp[3]>0)){ 
07A88:  BTFSC  xD1.7
07A8A:  BRA    7A92
07A8C:  MOVF   xD1,W
07A8E:  SUBLW  00
07A90:  BNC   7AB0
07A92:  BTFSC  xD2.7
07A94:  BRA    7A9C
07A96:  MOVF   xD2,W
07A98:  SUBLW  00
07A9A:  BNC   7AB0
07A9C:  BTFSC  xD3.7
07A9E:  BRA    7AA6
07AA0:  MOVF   xD3,W
07AA2:  SUBLW  00
07AA4:  BNC   7AB0
07AA6:  BTFSC  xD4.7
07AA8:  BRA    7B6C
07AAA:  MOVF   xD4,W
07AAC:  SUBLW  00
07AAE:  BC    7B6C
....................          if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1){ 
07AB0:  MOVF   xD1,W
07AB2:  XORLW  80
07AB4:  MOVWF  00
07AB6:  MOVF   xCD,W
07AB8:  XORLW  80
07ABA:  SUBWF  00,W
07ABC:  BZ    7AC0
07ABE:  BC    7B6C
07AC0:  MOVF   xD2,W
07AC2:  XORLW  80
07AC4:  MOVWF  00
07AC6:  MOVF   xCE,W
07AC8:  XORLW  80
07ACA:  SUBWF  00,W
07ACC:  BZ    7AD0
07ACE:  BC    7B6C
07AD0:  MOVF   xD3,W
07AD2:  XORLW  80
07AD4:  MOVWF  00
07AD6:  MOVF   xCF,W
07AD8:  XORLW  80
07ADA:  SUBWF  00,W
07ADC:  BZ    7AE0
07ADE:  BC    7B6C
07AE0:  MOVF   xD4,W
07AE2:  XORLW  80
07AE4:  MOVWF  00
07AE6:  MOVF   xD0,W
07AE8:  XORLW  80
07AEA:  SUBWF  00,W
07AEC:  BZ    7AF0
07AEE:  BC    7B6C
07AF0:  DECFSZ x9D,W
07AF2:  BRA    7B6C
....................             if(flag_clear==0){ 
07AF4:  BTFSC  x93.0
07AF6:  BRA    7B26
....................                glcd_fillScreen(OFF); 
07AF8:  MOVLB  6
07AFA:  CLRF   x61
07AFC:  MOVLB  0
07AFE:  CALL   25BC
....................                //glcd_rect(0, 55, 127, 63, YES, OFF); 
....................                tiempo_esterilizacion=0; 
07B02:  MOVLB  5
07B04:  CLRF   x9D
....................                Pausa=2; 
07B06:  MOVLW  02
07B08:  MOVWF  x9A
....................                flag_clear=1; 
07B0A:  BSF    x93.0
....................                SSR_off; 
07B0C:  BSF    F8B.2
07B0E:  BCF    F94.2
....................                Motor1_off; 
07B10:  BSF    F8B.5
07B12:  BCF    F94.5
....................                Motor2_off; 
07B14:  BSF    F8B.6
07B16:  BCF    F94.6
....................                Controlando=0; 
07B18:  CLRF   x90
....................                Tpulso=0.0; 
07B1A:  CLRF   xF0
07B1C:  CLRF   xEF
07B1E:  CLRF   xEE
07B20:  CLRF   xED
....................                flag_ganancia=0; 
07B22:  CLRF   x8E
....................                Finalizo=1; 
07B24:  BSF    x93.7
....................             } 
....................             strcpy(Menus.Letra,"Status:Finalizado"); 
07B26:  MOVLW  06
07B28:  MOVWF  FEA
07B2A:  MOVLW  39
07B2C:  MOVWF  FE9
07B2E:  MOVFF  FF2,659
07B32:  BCF    FF2.7
07B34:  MOVLW  00
07B36:  MOVLB  0
07B38:  CALL   0C2C
07B3C:  TBLRD*-
07B3E:  TBLRD*+
07B40:  MOVF   FF5,W
07B42:  MOVWF  FEE
07B44:  IORLW  00
07B46:  BNZ   7B3E
07B48:  MOVLB  6
07B4A:  BTFSC  x59.7
07B4C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
07B4E:  MOVLW  06
07B50:  MOVWF  x62
07B52:  MOVLW  39
07B54:  MOVWF  x61
07B56:  CLRF   x63
07B58:  MOVLW  37
07B5A:  MOVWF  x64
07B5C:  MOVLW  02
07B5E:  MOVWF  x65
07B60:  MOVLW  01
07B62:  MOVWF  x66
07B64:  MOVLB  0
07B66:  CALL   2BEA
07B6A:  MOVLB  5
....................          } 
....................       } 
....................         
....................       if(Finalizo){ 
07B6C:  BTFSS  x93.7
07B6E:  BRA    7BCE
....................          strcpy(Menus.Letra,"Status:Finalizado"); 
07B70:  MOVLW  06
07B72:  MOVWF  FEA
07B74:  MOVLW  39
07B76:  MOVWF  FE9
07B78:  MOVFF  FF2,659
07B7C:  BCF    FF2.7
07B7E:  MOVLW  00
07B80:  MOVLB  0
07B82:  CALL   0C2C
07B86:  TBLRD*-
07B88:  TBLRD*+
07B8A:  MOVF   FF5,W
07B8C:  MOVWF  FEE
07B8E:  IORLW  00
07B90:  BNZ   7B88
07B92:  MOVLB  6
07B94:  BTFSC  x59.7
07B96:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
07B98:  MOVLW  06
07B9A:  MOVWF  x62
07B9C:  MOVLW  39
07B9E:  MOVWF  x61
07BA0:  CLRF   x63
07BA2:  MOVLW  37
07BA4:  MOVWF  x64
07BA6:  MOVLW  02
07BA8:  MOVWF  x65
07BAA:  MOVLW  01
07BAC:  MOVWF  x66
07BAE:  MOVLB  0
07BB0:  CALL   2BEA
....................          SSR_off; 
07BB4:  BSF    F8B.2
07BB6:  BCF    F94.2
....................          Motor1_off; 
07BB8:  BSF    F8B.5
07BBA:  BCF    F94.5
....................          Motor2_off; 
07BBC:  BSF    F8B.6
07BBE:  BCF    F94.6
....................          Controlando=0; 
07BC0:  MOVLB  5
07BC2:  CLRF   x90
....................          Tpulso=0.0; 
07BC4:  CLRF   xF0
07BC6:  CLRF   xEF
07BC8:  CLRF   xEE
07BCA:  CLRF   xED
....................          tiempo_esterilizacion=0; 
07BCC:  CLRF   x9D
....................       } 
....................        
....................       CuentaTiempo(); 
07BCE:  MOVLB  0
07BD0:  GOTO   580A
07BD4:  MOVLB  5
....................       /*if(LEFT)//Si oprime boton de Toma. 
....................       { 
....................          if(Pausa!=2) 
....................          { 
....................             delay_ms(500);Menu=30;glcd_fillscreen(OFF);Opcion=1;visual=1;Pausa=1; 
....................          } 
....................          LEFT=0; 
....................       }*/         
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==100){ //Menu de Configuración de Parametros de Control 
07BD6:  MOVF   x97,W
07BD8:  SUBLW  64
07BDA:  BTFSS  FD8.2
07BDC:  GOTO   8332
....................        
....................       if(Opcion>11) 
07BE0:  MOVF   x9C,W
07BE2:  SUBLW  0B
07BE4:  BC    7BEA
....................       {Opcion=1;} 
07BE6:  MOVLW  01
07BE8:  MOVWF  x9C
....................       if(Opcion<1) 
07BEA:  MOVF   x9C,F
07BEC:  BNZ   7BF2
....................       {Opcion=11;} 
07BEE:  MOVLW  0B
07BF0:  MOVWF  x9C
....................        
....................       if(Opcion<=6){ 
07BF2:  MOVF   x9C,W
07BF4:  SUBLW  06
07BF6:  BTFSS  FD8.0
07BF8:  BRA    7F56
....................          if(Opcion==1)    
07BFA:  DECFSZ x9C,W
07BFC:  BRA    7C42
....................             {strcpy(Menus.Letra,"Proporcional"); 
07BFE:  MOVLW  06
07C00:  MOVWF  FEA
07C02:  MOVLW  39
07C04:  MOVWF  FE9
07C06:  MOVFF  FF2,659
07C0A:  BCF    FF2.7
07C0C:  MOVLW  00
07C0E:  MOVLB  0
07C10:  CALL   0C5C
07C14:  TBLRD*-
07C16:  TBLRD*+
07C18:  MOVF   FF5,W
07C1A:  MOVWF  FEE
07C1C:  IORLW  00
07C1E:  BNZ   7C16
07C20:  MOVLB  6
07C22:  BTFSC  x59.7
07C24:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
07C26:  MOVLW  06
07C28:  MOVWF  x62
07C2A:  MOVLW  39
07C2C:  MOVWF  x61
07C2E:  CLRF   x63
07C30:  CLRF   x64
07C32:  MOVLW  01
07C34:  MOVWF  x65
07C36:  MOVWF  x66
07C38:  MOVLB  0
07C3A:  CALL   2BEA
....................          else 
07C3E:  BRA    7C82
07C40:  MOVLB  5
....................             {strcpy(Menus.Letra,"Proporcional"); 
07C42:  MOVLW  06
07C44:  MOVWF  FEA
07C46:  MOVLW  39
07C48:  MOVWF  FE9
07C4A:  MOVFF  FF2,659
07C4E:  BCF    FF2.7
07C50:  MOVLW  00
07C52:  MOVLB  0
07C54:  CALL   0C5C
07C58:  TBLRD*-
07C5A:  TBLRD*+
07C5C:  MOVF   FF5,W
07C5E:  MOVWF  FEE
07C60:  IORLW  00
07C62:  BNZ   7C5A
07C64:  MOVLB  6
07C66:  BTFSC  x59.7
07C68:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);} 
07C6A:  MOVLW  06
07C6C:  MOVWF  x62
07C6E:  MOVLW  39
07C70:  MOVWF  x61
07C72:  CLRF   x63
07C74:  CLRF   x64
07C76:  CLRF   x65
07C78:  MOVLW  01
07C7A:  MOVWF  x66
07C7C:  MOVLB  0
07C7E:  CALL   2BEA
....................           
....................          if(Opcion==2)    
07C82:  MOVLB  5
07C84:  MOVF   x9C,W
07C86:  SUBLW  02
07C88:  BNZ   7CD0
....................             {strcpy(Menus.Letra,"Integral"); 
07C8A:  MOVLW  06
07C8C:  MOVWF  FEA
07C8E:  MOVLW  39
07C90:  MOVWF  FE9
07C92:  MOVFF  FF2,659
07C96:  BCF    FF2.7
07C98:  MOVLW  00
07C9A:  MOVLB  0
07C9C:  CALL   0C88
07CA0:  TBLRD*-
07CA2:  TBLRD*+
07CA4:  MOVF   FF5,W
07CA6:  MOVWF  FEE
07CA8:  IORLW  00
07CAA:  BNZ   7CA2
07CAC:  MOVLB  6
07CAE:  BTFSC  x59.7
07CB0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
07CB2:  MOVLW  06
07CB4:  MOVWF  x62
07CB6:  MOVLW  39
07CB8:  MOVWF  x61
07CBA:  CLRF   x63
07CBC:  MOVLW  09
07CBE:  MOVWF  x64
07CC0:  MOVLW  01
07CC2:  MOVWF  x65
07CC4:  MOVWF  x66
07CC6:  MOVLB  0
07CC8:  CALL   2BEA
....................          else 
07CCC:  BRA    7D12
07CCE:  MOVLB  5
....................             {strcpy(Menus.Letra,"Integral"); 
07CD0:  MOVLW  06
07CD2:  MOVWF  FEA
07CD4:  MOVLW  39
07CD6:  MOVWF  FE9
07CD8:  MOVFF  FF2,659
07CDC:  BCF    FF2.7
07CDE:  MOVLW  00
07CE0:  MOVLB  0
07CE2:  CALL   0C88
07CE6:  TBLRD*-
07CE8:  TBLRD*+
07CEA:  MOVF   FF5,W
07CEC:  MOVWF  FEE
07CEE:  IORLW  00
07CF0:  BNZ   7CE8
07CF2:  MOVLB  6
07CF4:  BTFSC  x59.7
07CF6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);} 
07CF8:  MOVLW  06
07CFA:  MOVWF  x62
07CFC:  MOVLW  39
07CFE:  MOVWF  x61
07D00:  CLRF   x63
07D02:  MOVLW  09
07D04:  MOVWF  x64
07D06:  CLRF   x65
07D08:  MOVLW  01
07D0A:  MOVWF  x66
07D0C:  MOVLB  0
07D0E:  CALL   2BEA
....................              
....................          if(Opcion==3)    
07D12:  MOVLB  5
07D14:  MOVF   x9C,W
07D16:  SUBLW  03
07D18:  BNZ   7D60
....................             {strcpy(Menus.Letra,"Derivativo"); 
07D1A:  MOVLW  06
07D1C:  MOVWF  FEA
07D1E:  MOVLW  39
07D20:  MOVWF  FE9
07D22:  MOVFF  FF2,659
07D26:  BCF    FF2.7
07D28:  MOVLW  00
07D2A:  MOVLB  0
07D2C:  CALL   0CB0
07D30:  TBLRD*-
07D32:  TBLRD*+
07D34:  MOVF   FF5,W
07D36:  MOVWF  FEE
07D38:  IORLW  00
07D3A:  BNZ   7D32
07D3C:  MOVLB  6
07D3E:  BTFSC  x59.7
07D40:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
07D42:  MOVLW  06
07D44:  MOVWF  x62
07D46:  MOVLW  39
07D48:  MOVWF  x61
07D4A:  CLRF   x63
07D4C:  MOVLW  12
07D4E:  MOVWF  x64
07D50:  MOVLW  01
07D52:  MOVWF  x65
07D54:  MOVWF  x66
07D56:  MOVLB  0
07D58:  CALL   2BEA
....................          else 
07D5C:  BRA    7DA2
07D5E:  MOVLB  5
....................             {strcpy(Menus.Letra,"Derivativo"); 
07D60:  MOVLW  06
07D62:  MOVWF  FEA
07D64:  MOVLW  39
07D66:  MOVWF  FE9
07D68:  MOVFF  FF2,659
07D6C:  BCF    FF2.7
07D6E:  MOVLW  00
07D70:  MOVLB  0
07D72:  CALL   0CB0
07D76:  TBLRD*-
07D78:  TBLRD*+
07D7A:  MOVF   FF5,W
07D7C:  MOVWF  FEE
07D7E:  IORLW  00
07D80:  BNZ   7D78
07D82:  MOVLB  6
07D84:  BTFSC  x59.7
07D86:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}    
07D88:  MOVLW  06
07D8A:  MOVWF  x62
07D8C:  MOVLW  39
07D8E:  MOVWF  x61
07D90:  CLRF   x63
07D92:  MOVLW  12
07D94:  MOVWF  x64
07D96:  CLRF   x65
07D98:  MOVLW  01
07D9A:  MOVWF  x66
07D9C:  MOVLB  0
07D9E:  CALL   2BEA
....................           
....................          if(Opcion==4)    
07DA2:  MOVLB  5
07DA4:  MOVF   x9C,W
07DA6:  SUBLW  04
07DA8:  BNZ   7DF0
....................             {strcpy(Menus.Letra,"Tciclo"); 
07DAA:  MOVLW  06
07DAC:  MOVWF  FEA
07DAE:  MOVLW  39
07DB0:  MOVWF  FE9
07DB2:  MOVFF  FF2,659
07DB6:  BCF    FF2.7
07DB8:  MOVLW  00
07DBA:  MOVLB  0
07DBC:  CALL   0CDA
07DC0:  TBLRD*-
07DC2:  TBLRD*+
07DC4:  MOVF   FF5,W
07DC6:  MOVWF  FEE
07DC8:  IORLW  00
07DCA:  BNZ   7DC2
07DCC:  MOVLB  6
07DCE:  BTFSC  x59.7
07DD0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
07DD2:  MOVLW  06
07DD4:  MOVWF  x62
07DD6:  MOVLW  39
07DD8:  MOVWF  x61
07DDA:  CLRF   x63
07DDC:  MOVLW  1B
07DDE:  MOVWF  x64
07DE0:  MOVLW  01
07DE2:  MOVWF  x65
07DE4:  MOVWF  x66
07DE6:  MOVLB  0
07DE8:  CALL   2BEA
....................          else 
07DEC:  BRA    7E32
07DEE:  MOVLB  5
....................             {strcpy(Menus.Letra,"Tciclo"); 
07DF0:  MOVLW  06
07DF2:  MOVWF  FEA
07DF4:  MOVLW  39
07DF6:  MOVWF  FE9
07DF8:  MOVFF  FF2,659
07DFC:  BCF    FF2.7
07DFE:  MOVLW  00
07E00:  MOVLB  0
07E02:  CALL   0CDA
07E06:  TBLRD*-
07E08:  TBLRD*+
07E0A:  MOVF   FF5,W
07E0C:  MOVWF  FEE
07E0E:  IORLW  00
07E10:  BNZ   7E08
07E12:  MOVLB  6
07E14:  BTFSC  x59.7
07E16:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);} 
07E18:  MOVLW  06
07E1A:  MOVWF  x62
07E1C:  MOVLW  39
07E1E:  MOVWF  x61
07E20:  CLRF   x63
07E22:  MOVLW  1B
07E24:  MOVWF  x64
07E26:  CLRF   x65
07E28:  MOVLW  01
07E2A:  MOVWF  x66
07E2C:  MOVLB  0
07E2E:  CALL   2BEA
....................              
....................          if(Opcion==5)    
07E32:  MOVLB  5
07E34:  MOVF   x9C,W
07E36:  SUBLW  05
07E38:  BNZ   7E80
....................             {strcpy(Menus.Letra,"Ajuste +"); 
07E3A:  MOVLW  06
07E3C:  MOVWF  FEA
07E3E:  MOVLW  39
07E40:  MOVWF  FE9
07E42:  MOVFF  FF2,659
07E46:  BCF    FF2.7
07E48:  MOVLW  00
07E4A:  MOVLB  0
07E4C:  CALL   0D00
07E50:  TBLRD*-
07E52:  TBLRD*+
07E54:  MOVF   FF5,W
07E56:  MOVWF  FEE
07E58:  IORLW  00
07E5A:  BNZ   7E52
07E5C:  MOVLB  6
07E5E:  BTFSC  x59.7
07E60:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
07E62:  MOVLW  06
07E64:  MOVWF  x62
07E66:  MOVLW  39
07E68:  MOVWF  x61
07E6A:  CLRF   x63
07E6C:  MOVLW  24
07E6E:  MOVWF  x64
07E70:  MOVLW  01
07E72:  MOVWF  x65
07E74:  MOVWF  x66
07E76:  MOVLB  0
07E78:  CALL   2BEA
....................          else 
07E7C:  BRA    7EC2
07E7E:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste +"); 
07E80:  MOVLW  06
07E82:  MOVWF  FEA
07E84:  MOVLW  39
07E86:  MOVWF  FE9
07E88:  MOVFF  FF2,659
07E8C:  BCF    FF2.7
07E8E:  MOVLW  00
07E90:  MOVLB  0
07E92:  CALL   0D00
07E96:  TBLRD*-
07E98:  TBLRD*+
07E9A:  MOVF   FF5,W
07E9C:  MOVWF  FEE
07E9E:  IORLW  00
07EA0:  BNZ   7E98
07EA2:  MOVLB  6
07EA4:  BTFSC  x59.7
07EA6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}    
07EA8:  MOVLW  06
07EAA:  MOVWF  x62
07EAC:  MOVLW  39
07EAE:  MOVWF  x61
07EB0:  CLRF   x63
07EB2:  MOVLW  24
07EB4:  MOVWF  x64
07EB6:  CLRF   x65
07EB8:  MOVLW  01
07EBA:  MOVWF  x66
07EBC:  MOVLB  0
07EBE:  CALL   2BEA
....................                          
....................          if(Opcion==6)    
07EC2:  MOVLB  5
07EC4:  MOVF   x9C,W
07EC6:  SUBLW  06
07EC8:  BNZ   7F10
....................             {strcpy(Menus.Letra,"Ajuste -"); 
07ECA:  MOVLW  06
07ECC:  MOVWF  FEA
07ECE:  MOVLW  39
07ED0:  MOVWF  FE9
07ED2:  MOVFF  FF2,659
07ED6:  BCF    FF2.7
07ED8:  MOVLW  00
07EDA:  MOVLB  0
07EDC:  CALL   0D28
07EE0:  TBLRD*-
07EE2:  TBLRD*+
07EE4:  MOVF   FF5,W
07EE6:  MOVWF  FEE
07EE8:  IORLW  00
07EEA:  BNZ   7EE2
07EEC:  MOVLB  6
07EEE:  BTFSC  x59.7
07EF0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,1,1);} 
07EF2:  MOVLW  06
07EF4:  MOVWF  x62
07EF6:  MOVLW  39
07EF8:  MOVWF  x61
07EFA:  CLRF   x63
07EFC:  MOVLW  2D
07EFE:  MOVWF  x64
07F00:  MOVLW  01
07F02:  MOVWF  x65
07F04:  MOVWF  x66
07F06:  MOVLB  0
07F08:  CALL   2BEA
....................          else 
07F0C:  BRA    7F52
07F0E:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste -"); 
07F10:  MOVLW  06
07F12:  MOVWF  FEA
07F14:  MOVLW  39
07F16:  MOVWF  FE9
07F18:  MOVFF  FF2,659
07F1C:  BCF    FF2.7
07F1E:  MOVLW  00
07F20:  MOVLB  0
07F22:  CALL   0D28
07F26:  TBLRD*-
07F28:  TBLRD*+
07F2A:  MOVF   FF5,W
07F2C:  MOVWF  FEE
07F2E:  IORLW  00
07F30:  BNZ   7F28
07F32:  MOVLB  6
07F34:  BTFSC  x59.7
07F36:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,0,1);}      
07F38:  MOVLW  06
07F3A:  MOVWF  x62
07F3C:  MOVLW  39
07F3E:  MOVWF  x61
07F40:  CLRF   x63
07F42:  MOVLW  2D
07F44:  MOVWF  x64
07F46:  CLRF   x65
07F48:  MOVLW  01
07F4A:  MOVWF  x66
07F4C:  MOVLB  0
07F4E:  CALL   2BEA
....................       } 
....................       else{ 
07F52:  BRA    8260
07F54:  MOVLB  5
....................          if(Opcion==7)    
07F56:  MOVF   x9C,W
07F58:  SUBLW  07
07F5A:  BNZ   7FA0
....................             {strcpy(Menus.Letra,"Media Movil"); 
07F5C:  MOVLW  06
07F5E:  MOVWF  FEA
07F60:  MOVLW  39
07F62:  MOVWF  FE9
07F64:  MOVFF  FF2,659
07F68:  BCF    FF2.7
07F6A:  MOVLW  00
07F6C:  MOVLB  0
07F6E:  CALL   0D50
07F72:  TBLRD*-
07F74:  TBLRD*+
07F76:  MOVF   FF5,W
07F78:  MOVWF  FEE
07F7A:  IORLW  00
07F7C:  BNZ   7F74
07F7E:  MOVLB  6
07F80:  BTFSC  x59.7
07F82:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
07F84:  MOVLW  06
07F86:  MOVWF  x62
07F88:  MOVLW  39
07F8A:  MOVWF  x61
07F8C:  CLRF   x63
07F8E:  CLRF   x64
07F90:  MOVLW  01
07F92:  MOVWF  x65
07F94:  MOVWF  x66
07F96:  MOVLB  0
07F98:  CALL   2BEA
....................          else 
07F9C:  BRA    7FE0
07F9E:  MOVLB  5
....................             {strcpy(Menus.Letra,"Media Movil"); 
07FA0:  MOVLW  06
07FA2:  MOVWF  FEA
07FA4:  MOVLW  39
07FA6:  MOVWF  FE9
07FA8:  MOVFF  FF2,659
07FAC:  BCF    FF2.7
07FAE:  MOVLW  00
07FB0:  MOVLB  0
07FB2:  CALL   0D50
07FB6:  TBLRD*-
07FB8:  TBLRD*+
07FBA:  MOVF   FF5,W
07FBC:  MOVWF  FEE
07FBE:  IORLW  00
07FC0:  BNZ   7FB8
07FC2:  MOVLB  6
07FC4:  BTFSC  x59.7
07FC6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);}      
07FC8:  MOVLW  06
07FCA:  MOVWF  x62
07FCC:  MOVLW  39
07FCE:  MOVWF  x61
07FD0:  CLRF   x63
07FD2:  CLRF   x64
07FD4:  CLRF   x65
07FD6:  MOVLW  01
07FD8:  MOVWF  x66
07FDA:  MOVLB  0
07FDC:  CALL   2BEA
....................              
....................          if(Opcion==8)    
07FE0:  MOVLB  5
07FE2:  MOVF   x9C,W
07FE4:  SUBLW  08
07FE6:  BNZ   802E
....................             {strcpy(Menus.Letra,"Ganancia    "); 
07FE8:  MOVLW  06
07FEA:  MOVWF  FEA
07FEC:  MOVLW  39
07FEE:  MOVWF  FE9
07FF0:  MOVFF  FF2,659
07FF4:  BCF    FF2.7
07FF6:  MOVLW  00
07FF8:  MOVLB  0
07FFA:  CALL   0D7A
07FFE:  TBLRD*-
08000:  TBLRD*+
08002:  MOVF   FF5,W
08004:  MOVWF  FEE
08006:  IORLW  00
08008:  BNZ   8000
0800A:  MOVLB  6
0800C:  BTFSC  x59.7
0800E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
08010:  MOVLW  06
08012:  MOVWF  x62
08014:  MOVLW  39
08016:  MOVWF  x61
08018:  CLRF   x63
0801A:  MOVLW  09
0801C:  MOVWF  x64
0801E:  MOVLW  01
08020:  MOVWF  x65
08022:  MOVWF  x66
08024:  MOVLB  0
08026:  CALL   2BEA
....................          else 
0802A:  BRA    8070
0802C:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ganancia    "); 
0802E:  MOVLW  06
08030:  MOVWF  FEA
08032:  MOVLW  39
08034:  MOVWF  FE9
08036:  MOVFF  FF2,659
0803A:  BCF    FF2.7
0803C:  MOVLW  00
0803E:  MOVLB  0
08040:  CALL   0D7A
08044:  TBLRD*-
08046:  TBLRD*+
08048:  MOVF   FF5,W
0804A:  MOVWF  FEE
0804C:  IORLW  00
0804E:  BNZ   8046
08050:  MOVLB  6
08052:  BTFSC  x59.7
08054:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);}   
08056:  MOVLW  06
08058:  MOVWF  x62
0805A:  MOVLW  39
0805C:  MOVWF  x61
0805E:  CLRF   x63
08060:  MOVLW  09
08062:  MOVWF  x64
08064:  CLRF   x65
08066:  MOVLW  01
08068:  MOVWF  x66
0806A:  MOVLB  0
0806C:  CALL   2BEA
....................              
....................          if(Opcion==9)    
08070:  MOVLB  5
08072:  MOVF   x9C,W
08074:  SUBLW  09
08076:  BNZ   80BE
....................             {strcpy(Menus.Letra,"R51         "); 
08078:  MOVLW  06
0807A:  MOVWF  FEA
0807C:  MOVLW  39
0807E:  MOVWF  FE9
08080:  MOVFF  FF2,659
08084:  BCF    FF2.7
08086:  MOVLW  00
08088:  MOVLB  0
0808A:  CALL   0DA6
0808E:  TBLRD*-
08090:  TBLRD*+
08092:  MOVF   FF5,W
08094:  MOVWF  FEE
08096:  IORLW  00
08098:  BNZ   8090
0809A:  MOVLB  6
0809C:  BTFSC  x59.7
0809E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
080A0:  MOVLW  06
080A2:  MOVWF  x62
080A4:  MOVLW  39
080A6:  MOVWF  x61
080A8:  CLRF   x63
080AA:  MOVLW  12
080AC:  MOVWF  x64
080AE:  MOVLW  01
080B0:  MOVWF  x65
080B2:  MOVWF  x66
080B4:  MOVLB  0
080B6:  CALL   2BEA
....................          else 
080BA:  BRA    8100
080BC:  MOVLB  5
....................             {strcpy(Menus.Letra,"R51         "); 
080BE:  MOVLW  06
080C0:  MOVWF  FEA
080C2:  MOVLW  39
080C4:  MOVWF  FE9
080C6:  MOVFF  FF2,659
080CA:  BCF    FF2.7
080CC:  MOVLW  00
080CE:  MOVLB  0
080D0:  CALL   0DA6
080D4:  TBLRD*-
080D6:  TBLRD*+
080D8:  MOVF   FF5,W
080DA:  MOVWF  FEE
080DC:  IORLW  00
080DE:  BNZ   80D6
080E0:  MOVLB  6
080E2:  BTFSC  x59.7
080E4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}      
080E6:  MOVLW  06
080E8:  MOVWF  x62
080EA:  MOVLW  39
080EC:  MOVWF  x61
080EE:  CLRF   x63
080F0:  MOVLW  12
080F2:  MOVWF  x64
080F4:  CLRF   x65
080F6:  MOVLW  01
080F8:  MOVWF  x66
080FA:  MOVLB  0
080FC:  CALL   2BEA
....................           
....................          if(Opcion==10)    
08100:  MOVLB  5
08102:  MOVF   x9C,W
08104:  SUBLW  0A
08106:  BNZ   814E
....................             {strcpy(Menus.Letra,"RPT100 B     "); 
08108:  MOVLW  06
0810A:  MOVWF  FEA
0810C:  MOVLW  39
0810E:  MOVWF  FE9
08110:  MOVFF  FF2,659
08114:  BCF    FF2.7
08116:  MOVLW  00
08118:  MOVLB  0
0811A:  CALL   0DD2
0811E:  TBLRD*-
08120:  TBLRD*+
08122:  MOVF   FF5,W
08124:  MOVWF  FEE
08126:  IORLW  00
08128:  BNZ   8120
0812A:  MOVLB  6
0812C:  BTFSC  x59.7
0812E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
08130:  MOVLW  06
08132:  MOVWF  x62
08134:  MOVLW  39
08136:  MOVWF  x61
08138:  CLRF   x63
0813A:  MOVLW  1B
0813C:  MOVWF  x64
0813E:  MOVLW  01
08140:  MOVWF  x65
08142:  MOVWF  x66
08144:  MOVLB  0
08146:  CALL   2BEA
....................          else 
0814A:  BRA    8190
0814C:  MOVLB  5
....................             {strcpy(Menus.Letra,"RPT100 B     "); 
0814E:  MOVLW  06
08150:  MOVWF  FEA
08152:  MOVLW  39
08154:  MOVWF  FE9
08156:  MOVFF  FF2,659
0815A:  BCF    FF2.7
0815C:  MOVLW  00
0815E:  MOVLB  0
08160:  CALL   0DD2
08164:  TBLRD*-
08166:  TBLRD*+
08168:  MOVF   FF5,W
0816A:  MOVWF  FEE
0816C:  IORLW  00
0816E:  BNZ   8166
08170:  MOVLB  6
08172:  BTFSC  x59.7
08174:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);}      
08176:  MOVLW  06
08178:  MOVWF  x62
0817A:  MOVLW  39
0817C:  MOVWF  x61
0817E:  CLRF   x63
08180:  MOVLW  1B
08182:  MOVWF  x64
08184:  CLRF   x65
08186:  MOVLW  01
08188:  MOVWF  x66
0818A:  MOVLB  0
0818C:  CALL   2BEA
....................           
....................          if(Opcion==11)    
08190:  MOVLB  5
08192:  MOVF   x9C,W
08194:  SUBLW  0B
08196:  BNZ   81DE
....................             {strcpy(Menus.Letra,"In Temperatura"); 
08198:  MOVLW  06
0819A:  MOVWF  FEA
0819C:  MOVLW  39
0819E:  MOVWF  FE9
081A0:  MOVFF  FF2,659
081A4:  BCF    FF2.7
081A6:  MOVLW  00
081A8:  MOVLB  0
081AA:  CALL   0DFE
081AE:  TBLRD*-
081B0:  TBLRD*+
081B2:  MOVF   FF5,W
081B4:  MOVWF  FEE
081B6:  IORLW  00
081B8:  BNZ   81B0
081BA:  MOVLB  6
081BC:  BTFSC  x59.7
081BE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
081C0:  MOVLW  06
081C2:  MOVWF  x62
081C4:  MOVLW  39
081C6:  MOVWF  x61
081C8:  CLRF   x63
081CA:  MOVLW  24
081CC:  MOVWF  x64
081CE:  MOVLW  01
081D0:  MOVWF  x65
081D2:  MOVWF  x66
081D4:  MOVLB  0
081D6:  CALL   2BEA
....................          else 
081DA:  BRA    8220
081DC:  MOVLB  5
....................             {strcpy(Menus.Letra,"In Temperatura"); 
081DE:  MOVLW  06
081E0:  MOVWF  FEA
081E2:  MOVLW  39
081E4:  MOVWF  FE9
081E6:  MOVFF  FF2,659
081EA:  BCF    FF2.7
081EC:  MOVLW  00
081EE:  MOVLB  0
081F0:  CALL   0DFE
081F4:  TBLRD*-
081F6:  TBLRD*+
081F8:  MOVF   FF5,W
081FA:  MOVWF  FEE
081FC:  IORLW  00
081FE:  BNZ   81F6
08200:  MOVLB  6
08202:  BTFSC  x59.7
08204:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}  
08206:  MOVLW  06
08208:  MOVWF  x62
0820A:  MOVLW  39
0820C:  MOVWF  x61
0820E:  CLRF   x63
08210:  MOVLW  24
08212:  MOVWF  x64
08214:  CLRF   x65
08216:  MOVLW  01
08218:  MOVWF  x66
0821A:  MOVLB  0
0821C:  CALL   2BEA
....................              
....................             strcpy(Menus.Letra,"            "); 
08220:  MOVLW  06
08222:  MOVWF  FEA
08224:  MOVLW  39
08226:  MOVWF  FE9
08228:  MOVFF  FF2,659
0822C:  BCF    FF2.7
0822E:  MOVLW  00
08230:  CALL   0E2C
08234:  TBLRD*-
08236:  TBLRD*+
08238:  MOVF   FF5,W
0823A:  MOVWF  FEE
0823C:  IORLW  00
0823E:  BNZ   8236
08240:  MOVLB  6
08242:  BTFSC  x59.7
08244:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,0,1); 
08246:  MOVLW  06
08248:  MOVWF  x62
0824A:  MOVLW  39
0824C:  MOVWF  x61
0824E:  CLRF   x63
08250:  MOVLW  2D
08252:  MOVWF  x64
08254:  CLRF   x65
08256:  MOVLW  01
08258:  MOVWF  x66
0825A:  MOVLB  0
0825C:  CALL   2BEA
....................       }    
....................        
....................          if(UP)//Si oprime hacia arriba 
08260:  BSF    F92.4
08262:  BTFSC  F80.4
08264:  BRA    828E
....................          { 
....................             delay_ms(10); 
08266:  MOVLW  0A
08268:  MOVLB  6
0826A:  MOVWF  x62
0826C:  MOVLB  0
0826E:  CALL   1052
....................             if(Flanco == 0) 
08272:  MOVLB  5
08274:  BTFSC  x87.1
08276:  BRA    828C
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
08278:  BSF    x87.1
0827A:  MOVLW  1E
0827C:  MOVLB  6
0827E:  MOVWF  x62
08280:  MOVLB  0
08282:  CALL   1052
08286:  MOVLB  5
08288:  DECF   x9C,F
0828A:  BSF    x87.4
....................                } 
....................          } 
....................             else 
0828C:  BRA    8292
....................                {Flanco = 0;} 
0828E:  MOVLB  5
08290:  BCF    x87.1
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
08292:  BSF    F92.5
08294:  BTFSC  F80.5
08296:  BRA    82C0
....................          { 
....................             delay_ms(10); 
08298:  MOVLW  0A
0829A:  MOVLB  6
0829C:  MOVWF  x62
0829E:  MOVLB  0
082A0:  CALL   1052
....................             if(Flanco2 == 0) 
082A4:  MOVLB  5
082A6:  BTFSC  x87.3
082A8:  BRA    82BE
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
082AA:  BSF    x87.3
082AC:  MOVLW  1E
082AE:  MOVLB  6
082B0:  MOVWF  x62
082B2:  MOVLB  0
082B4:  CALL   1052
082B8:  MOVLB  5
082BA:  INCF   x9C,F
082BC:  BSF    x87.4
....................                }      
....................          } 
....................             else 
082BE:  BRA    82C2
....................                {Flanco2 = 0;}   
082C0:  BCF    x87.3
....................                 
....................          if(RIGHT)//Si oprime SET 
082C2:  BSF    F96.0
082C4:  BTFSC  F84.0
082C6:  BRA    8304
....................          {   
....................             delay_ms(10); 
082C8:  MOVLW  0A
082CA:  MOVLB  6
082CC:  MOVWF  x62
082CE:  MOVLB  0
082D0:  CALL   1052
....................             if(Flanco1 == 0) 
082D4:  MOVLB  5
082D6:  BTFSC  x87.2
082D8:  BRA    8302
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
082DA:  BSF    x87.2
082DC:  MOVLW  1E
082DE:  MOVLB  6
082E0:  MOVWF  x62
082E2:  MOVLB  0
082E4:  CALL   1052
082E8:  MOVLW  64
082EA:  MOVLB  5
082EC:  ADDWF  x9C,W
082EE:  MOVWF  x97
082F0:  MOVLW  01
082F2:  MOVWF  x9C
082F4:  MOVLB  6
082F6:  CLRF   x61
082F8:  MOVLB  0
082FA:  CALL   25BC
082FE:  MOVLB  5
08300:  BSF    x87.4
....................                } 
....................          } 
....................             else 
08302:  BRA    8306
....................                {Flanco1 = 0;}  
08304:  BCF    x87.2
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
08306:  BSF    F96.1
08308:  BTFSC  F84.1
0830A:  BRA    8332
....................          { 
....................             delay_ms(10); 
0830C:  MOVLW  0A
0830E:  MOVLB  6
08310:  MOVWF  x62
08312:  MOVLB  0
08314:  CALL   1052
....................             delay_ms(700);reset_cpu();          
08318:  MOVLW  04
0831A:  MOVLB  6
0831C:  MOVWF  x59
0831E:  MOVLW  AF
08320:  MOVWF  x62
08322:  MOVLB  0
08324:  CALL   1052
08328:  MOVLB  6
0832A:  DECFSZ x59,F
0832C:  BRA    831E
0832E:  RESET
08330:  MOVLB  5
....................          }       
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==101){ // Menu de Ajuste de Ganancia 
08332:  MOVF   x97,W
08334:  SUBLW  65
08336:  BTFSS  FD8.2
08338:  BRA    8544
....................          if(Ganancia>40)       
0833A:  MOVLB  6
0833C:  CLRF   x60
0833E:  CLRF   x5F
08340:  MOVLW  20
08342:  MOVWF  x5E
08344:  MOVLW  84
08346:  MOVWF  x5D
08348:  MOVFF  604,664
0834C:  MOVFF  603,663
08350:  MOVFF  602,662
08354:  MOVFF  601,661
08358:  MOVLB  0
0835A:  CALL   1C42
0835E:  BNC   836E
....................             Ganancia=1; 
08360:  MOVLB  6
08362:  CLRF   x04
08364:  CLRF   x03
08366:  CLRF   x02
08368:  MOVLW  7F
0836A:  MOVWF  x01
....................          else if(Ganancia<1) 
0836C:  BRA    83A0
0836E:  MOVFF  604,660
08372:  MOVFF  603,65F
08376:  MOVFF  602,65E
0837A:  MOVFF  601,65D
0837E:  MOVLB  6
08380:  CLRF   x64
08382:  CLRF   x63
08384:  CLRF   x62
08386:  MOVLW  7F
08388:  MOVWF  x61
0838A:  MOVLB  0
0838C:  CALL   1C42
08390:  BNC   83A0
....................             Ganancia=40; 
08392:  MOVLB  6
08394:  CLRF   x04
08396:  CLRF   x03
08398:  MOVLW  20
0839A:  MOVWF  x02
0839C:  MOVLW  84
0839E:  MOVWF  x01
....................           
....................          if(visual==1){ 
083A0:  MOVLB  5
083A2:  BTFSS  x87.4
083A4:  BRA    842C
....................             glcd_fillScreen(OFF); 
083A6:  MOVLB  6
083A8:  CLRF   x61
083AA:  MOVLB  0
083AC:  CALL   25BC
....................             strcpy(Menus.Letra,"P"); 
083B0:  MOVLW  06
083B2:  MOVWF  FEA
083B4:  MOVLW  39
083B6:  MOVWF  FE9
083B8:  MOVFF  FF2,659
083BC:  BCF    FF2.7
083BE:  MOVLW  00
083C0:  CALL   0E58
083C4:  TBLRD*-
083C6:  TBLRD*+
083C8:  MOVF   FF5,W
083CA:  MOVWF  FEE
083CC:  IORLW  00
083CE:  BNZ   83C6
083D0:  MOVLB  6
083D2:  BTFSC  x59.7
083D4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);  
083D6:  MOVLW  06
083D8:  MOVWF  x62
083DA:  MOVLW  39
083DC:  MOVWF  x61
083DE:  CLRF   x63
083E0:  CLRF   x64
083E2:  MOVLW  01
083E4:  MOVWF  x65
083E6:  MOVLW  02
083E8:  MOVWF  x66
083EA:  MOVLB  0
083EC:  CALL   2BEA
....................             displayTemperatura(Ganancia,30,30,0,3);          
083F0:  MOVFF  604,65C
083F4:  MOVFF  603,65B
083F8:  MOVFF  602,65A
083FC:  MOVFF  601,659
08400:  CALL   4342
08404:  MOVFF  02,65A
08408:  MOVFF  01,659
0840C:  MOVFF  02,65C
08410:  MOVFF  01,65B
08414:  MOVLW  1E
08416:  MOVLB  6
08418:  MOVWF  x5D
0841A:  MOVWF  x5E
0841C:  CLRF   x5F
0841E:  MOVLW  03
08420:  MOVWF  x60
08422:  MOVLB  0
08424:  CALL   443C
....................             visual=0; 
08428:  MOVLB  5
0842A:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
0842C:  BSF    F92.4
0842E:  BTFSC  F80.4
08430:  BRA    8470
....................             DelayPuls();Ganancia+=1.0;visual=1;             
08432:  MOVLB  0
08434:  CALL   37D6
08438:  BCF    FD8.1
0843A:  MOVFF  604,661
0843E:  MOVFF  603,660
08442:  MOVFF  602,65F
08446:  MOVFF  601,65E
0844A:  MOVLB  6
0844C:  CLRF   x65
0844E:  CLRF   x64
08450:  CLRF   x63
08452:  MOVLW  7F
08454:  MOVWF  x62
08456:  MOVLB  0
08458:  CALL   1246
0845C:  MOVFF  03,604
08460:  MOVFF  02,603
08464:  MOVFF  01,602
08468:  MOVFF  00,601
0846C:  MOVLB  5
0846E:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08470:  BSF    F92.5
08472:  BTFSC  F80.5
08474:  BRA    84B4
....................             DelayPuls();Ganancia-=1.0;visual=1;      
08476:  MOVLB  0
08478:  CALL   37D6
0847C:  BSF    FD8.1
0847E:  MOVFF  604,661
08482:  MOVFF  603,660
08486:  MOVFF  602,65F
0848A:  MOVFF  601,65E
0848E:  MOVLB  6
08490:  CLRF   x65
08492:  CLRF   x64
08494:  CLRF   x63
08496:  MOVLW  7F
08498:  MOVWF  x62
0849A:  MOVLB  0
0849C:  CALL   1246
084A0:  MOVFF  03,604
084A4:  MOVFF  02,603
084A8:  MOVFF  01,602
084AC:  MOVFF  00,601
084B0:  MOVLB  5
084B2:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
084B4:  BSF    F96.0
084B6:  BTFSC  F84.0
084B8:  BRA    84BC
....................             visual=1;           
084BA:  BSF    x87.4
....................                    
....................          if(LEFT){ 
084BC:  BSF    F96.1
084BE:  BTFSC  F84.1
084C0:  BRA    8544
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
084C2:  MOVLW  04
084C4:  MOVLB  6
084C6:  MOVWF  x59
084C8:  MOVLW  AF
084CA:  MOVWF  x62
084CC:  MOVLB  0
084CE:  CALL   1052
084D2:  MOVLB  6
084D4:  DECFSZ x59,F
084D6:  BRA    84C8
084D8:  MOVLW  64
084DA:  MOVLB  5
084DC:  MOVWF  x97
084DE:  MOVLB  6
084E0:  CLRF   x61
084E2:  MOVLB  0
084E4:  CALL   25BC
084E8:  MOVLW  01
084EA:  MOVLB  5
084EC:  MOVWF  x9C
084EE:  BSF    x87.4
....................             write_eeprom(14,(int8)Ganancia);delay_ms(20); 
084F0:  MOVFF  604,65C
084F4:  MOVFF  603,65B
084F8:  MOVFF  602,65A
084FC:  MOVFF  601,659
08500:  MOVLB  0
08502:  CALL   4342
08506:  MOVFF  01,659
0850A:  CLRF   FAA
0850C:  MOVLW  0E
0850E:  MOVWF  FA9
08510:  MOVFF  659,FA8
08514:  BCF    FA6.6
08516:  BCF    FA6.7
08518:  BSF    FA6.2
0851A:  MOVF   FF2,W
0851C:  MOVWF  00
0851E:  BCF    FF2.7
08520:  MOVLB  F
08522:  MOVLW  55
08524:  MOVWF  FA7
08526:  MOVLW  AA
08528:  MOVWF  FA7
0852A:  BSF    FA6.1
0852C:  BTFSC  FA6.1
0852E:  BRA    852C
08530:  BCF    FA6.2
08532:  MOVF   00,W
08534:  IORWF  FF2,F
08536:  MOVLW  14
08538:  MOVLB  6
0853A:  MOVWF  x62
0853C:  MOVLB  0
0853E:  CALL   1052
08542:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==102){ // Menu de Ajuste de Integral    
08544:  MOVF   x97,W
08546:  SUBLW  66
08548:  BTFSS  FD8.2
0854A:  BRA    8762
....................          if(Integral>40)       
0854C:  MOVLB  6
0854E:  CLRF   x60
08550:  CLRF   x5F
08552:  MOVLW  20
08554:  MOVWF  x5E
08556:  MOVLW  84
08558:  MOVWF  x5D
0855A:  MOVFF  5C8,664
0855E:  MOVFF  5C7,663
08562:  MOVFF  5C6,662
08566:  MOVFF  5C5,661
0856A:  MOVLB  0
0856C:  CALL   1C42
08570:  BNC   8580
....................             Integral=1; 
08572:  MOVLB  5
08574:  CLRF   xC8
08576:  CLRF   xC7
08578:  CLRF   xC6
0857A:  MOVLW  7F
0857C:  MOVWF  xC5
....................          else if(Integral<1) 
0857E:  BRA    85B2
08580:  MOVFF  5C8,660
08584:  MOVFF  5C7,65F
08588:  MOVFF  5C6,65E
0858C:  MOVFF  5C5,65D
08590:  MOVLB  6
08592:  CLRF   x64
08594:  CLRF   x63
08596:  CLRF   x62
08598:  MOVLW  7F
0859A:  MOVWF  x61
0859C:  MOVLB  0
0859E:  CALL   1C42
085A2:  BNC   85B2
....................             Integral=40; 
085A4:  MOVLB  5
085A6:  CLRF   xC8
085A8:  CLRF   xC7
085AA:  MOVLW  20
085AC:  MOVWF  xC6
085AE:  MOVLW  84
085B0:  MOVWF  xC5
....................        
....................          if(visual==1){ 
085B2:  MOVLB  5
085B4:  BTFSS  x87.4
085B6:  BRA    863E
....................             glcd_fillScreen(OFF); 
085B8:  MOVLB  6
085BA:  CLRF   x61
085BC:  MOVLB  0
085BE:  CALL   25BC
....................             strcpy(Menus.Letra,"I"); 
085C2:  MOVLW  06
085C4:  MOVWF  FEA
085C6:  MOVLW  39
085C8:  MOVWF  FE9
085CA:  MOVFF  FF2,659
085CE:  BCF    FF2.7
085D0:  MOVLW  00
085D2:  CALL   0E78
085D6:  TBLRD*-
085D8:  TBLRD*+
085DA:  MOVF   FF5,W
085DC:  MOVWF  FEE
085DE:  IORLW  00
085E0:  BNZ   85D8
085E2:  MOVLB  6
085E4:  BTFSC  x59.7
085E6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
085E8:  MOVLW  06
085EA:  MOVWF  x62
085EC:  MOVLW  39
085EE:  MOVWF  x61
085F0:  CLRF   x63
085F2:  CLRF   x64
085F4:  MOVLW  01
085F6:  MOVWF  x65
085F8:  MOVLW  02
085FA:  MOVWF  x66
085FC:  MOVLB  0
085FE:  CALL   2BEA
....................             displayTemperatura(Integral,30,30,0,3);  
08602:  MOVFF  5C8,65C
08606:  MOVFF  5C7,65B
0860A:  MOVFF  5C6,65A
0860E:  MOVFF  5C5,659
08612:  CALL   4342
08616:  MOVFF  02,65A
0861A:  MOVFF  01,659
0861E:  MOVFF  02,65C
08622:  MOVFF  01,65B
08626:  MOVLW  1E
08628:  MOVLB  6
0862A:  MOVWF  x5D
0862C:  MOVWF  x5E
0862E:  CLRF   x5F
08630:  MOVLW  03
08632:  MOVWF  x60
08634:  MOVLB  0
08636:  CALL   443C
....................             visual=0; 
0863A:  MOVLB  5
0863C:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
0863E:  BSF    F92.4
08640:  BTFSC  F80.4
08642:  BRA    8682
....................             DelayPuls();Integral+=1.0;visual=1;  
08644:  MOVLB  0
08646:  CALL   37D6
0864A:  BCF    FD8.1
0864C:  MOVFF  5C8,661
08650:  MOVFF  5C7,660
08654:  MOVFF  5C6,65F
08658:  MOVFF  5C5,65E
0865C:  MOVLB  6
0865E:  CLRF   x65
08660:  CLRF   x64
08662:  CLRF   x63
08664:  MOVLW  7F
08666:  MOVWF  x62
08668:  MOVLB  0
0866A:  CALL   1246
0866E:  MOVFF  03,5C8
08672:  MOVFF  02,5C7
08676:  MOVFF  01,5C6
0867A:  MOVFF  00,5C5
0867E:  MOVLB  5
08680:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){               
08682:  BSF    F92.5
08684:  BTFSC  F80.5
08686:  BRA    86C6
....................             DelayPuls();Integral-=1.0;visual=1;      
08688:  MOVLB  0
0868A:  CALL   37D6
0868E:  BSF    FD8.1
08690:  MOVFF  5C8,661
08694:  MOVFF  5C7,660
08698:  MOVFF  5C6,65F
0869C:  MOVFF  5C5,65E
086A0:  MOVLB  6
086A2:  CLRF   x65
086A4:  CLRF   x64
086A6:  CLRF   x63
086A8:  MOVLW  7F
086AA:  MOVWF  x62
086AC:  MOVLB  0
086AE:  CALL   1246
086B2:  MOVFF  03,5C8
086B6:  MOVFF  02,5C7
086BA:  MOVFF  01,5C6
086BE:  MOVFF  00,5C5
086C2:  MOVLB  5
086C4:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
086C6:  BSF    F96.0
086C8:  BTFSC  F84.0
086CA:  BRA    86CE
....................             visual=1;  
086CC:  BSF    x87.4
....................                    
....................          if(LEFT){ 
086CE:  BSF    F96.1
086D0:  BTFSC  F84.1
086D2:  BRA    8762
....................             delay_ms(10); 
086D4:  MOVLW  0A
086D6:  MOVLB  6
086D8:  MOVWF  x62
086DA:  MOVLB  0
086DC:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
086E0:  MOVLW  04
086E2:  MOVLB  6
086E4:  MOVWF  x59
086E6:  MOVLW  AF
086E8:  MOVWF  x62
086EA:  MOVLB  0
086EC:  CALL   1052
086F0:  MOVLB  6
086F2:  DECFSZ x59,F
086F4:  BRA    86E6
086F6:  MOVLW  64
086F8:  MOVLB  5
086FA:  MOVWF  x97
086FC:  MOVLB  6
086FE:  CLRF   x61
08700:  MOVLB  0
08702:  CALL   25BC
08706:  MOVLW  01
08708:  MOVLB  5
0870A:  MOVWF  x9C
0870C:  BSF    x87.4
....................             write_eeprom(15,(int8)Integral);delay_ms(20); 
0870E:  MOVFF  5C8,65C
08712:  MOVFF  5C7,65B
08716:  MOVFF  5C6,65A
0871A:  MOVFF  5C5,659
0871E:  MOVLB  0
08720:  CALL   4342
08724:  MOVFF  01,659
08728:  CLRF   FAA
0872A:  MOVLW  0F
0872C:  MOVWF  FA9
0872E:  MOVFF  659,FA8
08732:  BCF    FA6.6
08734:  BCF    FA6.7
08736:  BSF    FA6.2
08738:  MOVF   FF2,W
0873A:  MOVWF  00
0873C:  BCF    FF2.7
0873E:  MOVLB  F
08740:  MOVLW  55
08742:  MOVWF  FA7
08744:  MOVLW  AA
08746:  MOVWF  FA7
08748:  BSF    FA6.1
0874A:  BTFSC  FA6.1
0874C:  BRA    874A
0874E:  BCF    FA6.2
08750:  MOVF   00,W
08752:  IORWF  FF2,F
08754:  MOVLW  14
08756:  MOVLB  6
08758:  MOVWF  x62
0875A:  MOVLB  0
0875C:  CALL   1052
08760:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==103){ // Menu de Ajuste de Derivativo 
08762:  MOVF   x97,W
08764:  SUBLW  67
08766:  BTFSS  FD8.2
08768:  BRA    898A
....................        
....................          if(Derivativo>200) 
0876A:  MOVLB  6
0876C:  CLRF   x60
0876E:  CLRF   x5F
08770:  MOVLW  48
08772:  MOVWF  x5E
08774:  MOVLW  86
08776:  MOVWF  x5D
08778:  MOVFF  5CC,664
0877C:  MOVFF  5CB,663
08780:  MOVFF  5CA,662
08784:  MOVFF  5C9,661
08788:  MOVLB  0
0878A:  CALL   1C42
0878E:  BNC   879E
....................             Derivativo=2; 
08790:  MOVLB  5
08792:  CLRF   xCC
08794:  CLRF   xCB
08796:  CLRF   xCA
08798:  MOVLW  80
0879A:  MOVWF  xC9
....................          else if(Derivativo<2) 
0879C:  BRA    87D0
0879E:  MOVFF  5CC,660
087A2:  MOVFF  5CB,65F
087A6:  MOVFF  5CA,65E
087AA:  MOVFF  5C9,65D
087AE:  MOVLB  6
087B0:  CLRF   x64
087B2:  CLRF   x63
087B4:  CLRF   x62
087B6:  MOVLW  80
087B8:  MOVWF  x61
087BA:  MOVLB  0
087BC:  CALL   1C42
087C0:  BNC   87D0
....................             Derivativo=200; 
087C2:  MOVLB  5
087C4:  CLRF   xCC
087C6:  CLRF   xCB
087C8:  MOVLW  48
087CA:  MOVWF  xCA
087CC:  MOVLW  86
087CE:  MOVWF  xC9
....................        
....................          if(visual==1){ 
087D0:  MOVLB  5
087D2:  BTFSS  x87.4
087D4:  BRA    885C
....................             glcd_fillScreen(OFF); 
087D6:  MOVLB  6
087D8:  CLRF   x61
087DA:  MOVLB  0
087DC:  CALL   25BC
....................             strcpy(Menus.Letra,"D"); 
087E0:  MOVLW  06
087E2:  MOVWF  FEA
087E4:  MOVLW  39
087E6:  MOVWF  FE9
087E8:  MOVFF  FF2,659
087EC:  BCF    FF2.7
087EE:  MOVLW  00
087F0:  CALL   0E98
087F4:  TBLRD*-
087F6:  TBLRD*+
087F8:  MOVF   FF5,W
087FA:  MOVWF  FEE
087FC:  IORLW  00
087FE:  BNZ   87F6
08800:  MOVLB  6
08802:  BTFSC  x59.7
08804:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);          
08806:  MOVLW  06
08808:  MOVWF  x62
0880A:  MOVLW  39
0880C:  MOVWF  x61
0880E:  CLRF   x63
08810:  CLRF   x64
08812:  MOVLW  01
08814:  MOVWF  x65
08816:  MOVLW  02
08818:  MOVWF  x66
0881A:  MOVLB  0
0881C:  CALL   2BEA
....................             displayTemperatura(Derivativo,30,30,0,3); 
08820:  MOVFF  5CC,65C
08824:  MOVFF  5CB,65B
08828:  MOVFF  5CA,65A
0882C:  MOVFF  5C9,659
08830:  CALL   4342
08834:  MOVFF  02,65A
08838:  MOVFF  01,659
0883C:  MOVFF  02,65C
08840:  MOVFF  01,65B
08844:  MOVLW  1E
08846:  MOVLB  6
08848:  MOVWF  x5D
0884A:  MOVWF  x5E
0884C:  CLRF   x5F
0884E:  MOVLW  03
08850:  MOVWF  x60
08852:  MOVLB  0
08854:  CALL   443C
....................             visual=0; 
08858:  MOVLB  5
0885A:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
0885C:  BSF    F92.4
0885E:  BTFSC  F80.4
08860:  BRA    88AA
....................             delay_ms(10); 
08862:  MOVLW  0A
08864:  MOVLB  6
08866:  MOVWF  x62
08868:  MOVLB  0
0886A:  CALL   1052
....................             DelayPuls();Derivativo+=1.0;visual=1; 
0886E:  CALL   37D6
08872:  BCF    FD8.1
08874:  MOVFF  5CC,661
08878:  MOVFF  5CB,660
0887C:  MOVFF  5CA,65F
08880:  MOVFF  5C9,65E
08884:  MOVLB  6
08886:  CLRF   x65
08888:  CLRF   x64
0888A:  CLRF   x63
0888C:  MOVLW  7F
0888E:  MOVWF  x62
08890:  MOVLB  0
08892:  CALL   1246
08896:  MOVFF  03,5CC
0889A:  MOVFF  02,5CB
0889E:  MOVFF  01,5CA
088A2:  MOVFF  00,5C9
088A6:  MOVLB  5
088A8:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
088AA:  BSF    F92.5
088AC:  BTFSC  F80.5
088AE:  BRA    88EE
....................             DelayPuls();Derivativo-=1.0;visual=1;      
088B0:  MOVLB  0
088B2:  CALL   37D6
088B6:  BSF    FD8.1
088B8:  MOVFF  5CC,661
088BC:  MOVFF  5CB,660
088C0:  MOVFF  5CA,65F
088C4:  MOVFF  5C9,65E
088C8:  MOVLB  6
088CA:  CLRF   x65
088CC:  CLRF   x64
088CE:  CLRF   x63
088D0:  MOVLW  7F
088D2:  MOVWF  x62
088D4:  MOVLB  0
088D6:  CALL   1246
088DA:  MOVFF  03,5CC
088DE:  MOVFF  02,5CB
088E2:  MOVFF  01,5CA
088E6:  MOVFF  00,5C9
088EA:  MOVLB  5
088EC:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
088EE:  BSF    F96.0
088F0:  BTFSC  F84.0
088F2:  BRA    88F6
....................             visual=1;  
088F4:  BSF    x87.4
....................                    
....................          if(LEFT){ 
088F6:  BSF    F96.1
088F8:  BTFSC  F84.1
088FA:  BRA    898A
....................             delay_ms(10); 
088FC:  MOVLW  0A
088FE:  MOVLB  6
08900:  MOVWF  x62
08902:  MOVLB  0
08904:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08908:  MOVLW  04
0890A:  MOVLB  6
0890C:  MOVWF  x59
0890E:  MOVLW  AF
08910:  MOVWF  x62
08912:  MOVLB  0
08914:  CALL   1052
08918:  MOVLB  6
0891A:  DECFSZ x59,F
0891C:  BRA    890E
0891E:  MOVLW  64
08920:  MOVLB  5
08922:  MOVWF  x97
08924:  MOVLB  6
08926:  CLRF   x61
08928:  MOVLB  0
0892A:  CALL   25BC
0892E:  MOVLW  01
08930:  MOVLB  5
08932:  MOVWF  x9C
08934:  BSF    x87.4
....................             write_eeprom(16,(int8)Derivativo);delay_ms(20); 
08936:  MOVFF  5CC,65C
0893A:  MOVFF  5CB,65B
0893E:  MOVFF  5CA,65A
08942:  MOVFF  5C9,659
08946:  MOVLB  0
08948:  CALL   4342
0894C:  MOVFF  01,659
08950:  CLRF   FAA
08952:  MOVLW  10
08954:  MOVWF  FA9
08956:  MOVFF  659,FA8
0895A:  BCF    FA6.6
0895C:  BCF    FA6.7
0895E:  BSF    FA6.2
08960:  MOVF   FF2,W
08962:  MOVWF  00
08964:  BCF    FF2.7
08966:  MOVLB  F
08968:  MOVLW  55
0896A:  MOVWF  FA7
0896C:  MOVLW  AA
0896E:  MOVWF  FA7
08970:  BSF    FA6.1
08972:  BTFSC  FA6.1
08974:  BRA    8972
08976:  BCF    FA6.2
08978:  MOVF   00,W
0897A:  IORWF  FF2,F
0897C:  MOVLW  14
0897E:  MOVLB  6
08980:  MOVWF  x62
08982:  MOVLB  0
08984:  CALL   1052
08988:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==104){ // Menu de Tiempo de Ciclo 
0898A:  MOVF   x97,W
0898C:  SUBLW  68
0898E:  BTFSS  FD8.2
08990:  BRA    8B9E
....................        
....................          if(Tciclo>40) 
08992:  MOVLB  6
08994:  CLRF   x60
08996:  CLRF   x5F
08998:  MOVLW  20
0899A:  MOVWF  x5E
0899C:  MOVLW  84
0899E:  MOVWF  x5D
089A0:  MOVFF  5EC,664
089A4:  MOVFF  5EB,663
089A8:  MOVFF  5EA,662
089AC:  MOVFF  5E9,661
089B0:  MOVLB  0
089B2:  CALL   1C42
089B6:  BNC   89C8
....................             Tciclo=40; 
089B8:  MOVLB  5
089BA:  CLRF   xEC
089BC:  CLRF   xEB
089BE:  MOVLW  20
089C0:  MOVWF  xEA
089C2:  MOVLW  84
089C4:  MOVWF  xE9
....................          else if(Tciclo<1) 
089C6:  BRA    89FA
089C8:  MOVFF  5EC,660
089CC:  MOVFF  5EB,65F
089D0:  MOVFF  5EA,65E
089D4:  MOVFF  5E9,65D
089D8:  MOVLB  6
089DA:  CLRF   x64
089DC:  CLRF   x63
089DE:  CLRF   x62
089E0:  MOVLW  7F
089E2:  MOVWF  x61
089E4:  MOVLB  0
089E6:  CALL   1C42
089EA:  BNC   89FA
....................             Tciclo=40; 
089EC:  MOVLB  5
089EE:  CLRF   xEC
089F0:  CLRF   xEB
089F2:  MOVLW  20
089F4:  MOVWF  xEA
089F6:  MOVLW  84
089F8:  MOVWF  xE9
....................        
....................          if(visual==1){ 
089FA:  MOVLB  5
089FC:  BTFSS  x87.4
089FE:  BRA    8A86
....................             glcd_fillScreen(OFF); 
08A00:  MOVLB  6
08A02:  CLRF   x61
08A04:  MOVLB  0
08A06:  CALL   25BC
....................             strcpy(Menus.Letra,"Tciclo"); 
08A0A:  MOVLW  06
08A0C:  MOVWF  FEA
08A0E:  MOVLW  39
08A10:  MOVWF  FE9
08A12:  MOVFF  FF2,659
08A16:  BCF    FF2.7
08A18:  MOVLW  00
08A1A:  CALL   0CDA
08A1E:  TBLRD*-
08A20:  TBLRD*+
08A22:  MOVF   FF5,W
08A24:  MOVWF  FEE
08A26:  IORLW  00
08A28:  BNZ   8A20
08A2A:  MOVLB  6
08A2C:  BTFSC  x59.7
08A2E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);          
08A30:  MOVLW  06
08A32:  MOVWF  x62
08A34:  MOVLW  39
08A36:  MOVWF  x61
08A38:  CLRF   x63
08A3A:  CLRF   x64
08A3C:  MOVLW  01
08A3E:  MOVWF  x65
08A40:  MOVLW  02
08A42:  MOVWF  x66
08A44:  MOVLB  0
08A46:  CALL   2BEA
....................             displayTemperatura(Tciclo,30,30,0,3); 
08A4A:  MOVFF  5EC,65C
08A4E:  MOVFF  5EB,65B
08A52:  MOVFF  5EA,65A
08A56:  MOVFF  5E9,659
08A5A:  CALL   4342
08A5E:  MOVFF  02,65A
08A62:  MOVFF  01,659
08A66:  MOVFF  02,65C
08A6A:  MOVFF  01,65B
08A6E:  MOVLW  1E
08A70:  MOVLB  6
08A72:  MOVWF  x5D
08A74:  MOVWF  x5E
08A76:  CLRF   x5F
08A78:  MOVLW  03
08A7A:  MOVWF  x60
08A7C:  MOVLB  0
08A7E:  CALL   443C
....................             visual=0; 
08A82:  MOVLB  5
08A84:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08A86:  BSF    F92.4
08A88:  BTFSC  F80.4
08A8A:  BRA    8ACA
....................             DelayPuls();Tciclo+=1.0;visual=1; 
08A8C:  MOVLB  0
08A8E:  CALL   37D6
08A92:  BCF    FD8.1
08A94:  MOVFF  5EC,661
08A98:  MOVFF  5EB,660
08A9C:  MOVFF  5EA,65F
08AA0:  MOVFF  5E9,65E
08AA4:  MOVLB  6
08AA6:  CLRF   x65
08AA8:  CLRF   x64
08AAA:  CLRF   x63
08AAC:  MOVLW  7F
08AAE:  MOVWF  x62
08AB0:  MOVLB  0
08AB2:  CALL   1246
08AB6:  MOVFF  03,5EC
08ABA:  MOVFF  02,5EB
08ABE:  MOVFF  01,5EA
08AC2:  MOVFF  00,5E9
08AC6:  MOVLB  5
08AC8:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08ACA:  BSF    F92.5
08ACC:  BTFSC  F80.5
08ACE:  BRA    8B0E
....................             DelayPuls();Tciclo-=1.0;visual=1;      
08AD0:  MOVLB  0
08AD2:  CALL   37D6
08AD6:  BSF    FD8.1
08AD8:  MOVFF  5EC,661
08ADC:  MOVFF  5EB,660
08AE0:  MOVFF  5EA,65F
08AE4:  MOVFF  5E9,65E
08AE8:  MOVLB  6
08AEA:  CLRF   x65
08AEC:  CLRF   x64
08AEE:  CLRF   x63
08AF0:  MOVLW  7F
08AF2:  MOVWF  x62
08AF4:  MOVLB  0
08AF6:  CALL   1246
08AFA:  MOVFF  03,5EC
08AFE:  MOVFF  02,5EB
08B02:  MOVFF  01,5EA
08B06:  MOVFF  00,5E9
08B0A:  MOVLB  5
08B0C:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT) 
08B0E:  BSF    F96.0
08B10:  BTFSC  F84.0
08B12:  BRA    8B16
....................             visual=1;  
08B14:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08B16:  BSF    F96.1
08B18:  BTFSC  F84.1
08B1A:  BRA    8B9E
....................             delay_ms(10); 
08B1C:  MOVLW  0A
08B1E:  MOVLB  6
08B20:  MOVWF  x62
08B22:  MOVLB  0
08B24:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08B28:  MOVLW  04
08B2A:  MOVLB  6
08B2C:  MOVWF  x59
08B2E:  MOVLW  AF
08B30:  MOVWF  x62
08B32:  MOVLB  0
08B34:  CALL   1052
08B38:  MOVLB  6
08B3A:  DECFSZ x59,F
08B3C:  BRA    8B2E
08B3E:  MOVLW  64
08B40:  MOVLB  5
08B42:  MOVWF  x97
08B44:  MOVLB  6
08B46:  CLRF   x61
08B48:  MOVLB  0
08B4A:  CALL   25BC
08B4E:  MOVLW  01
08B50:  MOVLB  5
08B52:  MOVWF  x9C
08B54:  BSF    x87.4
....................             write_eeprom(17,(int8)Tciclo); 
08B56:  MOVFF  5EC,65C
08B5A:  MOVFF  5EB,65B
08B5E:  MOVFF  5EA,65A
08B62:  MOVFF  5E9,659
08B66:  MOVLB  0
08B68:  CALL   4342
08B6C:  MOVFF  01,659
08B70:  CLRF   FAA
08B72:  MOVLW  11
08B74:  MOVWF  FA9
08B76:  MOVFF  659,FA8
08B7A:  BCF    FA6.6
08B7C:  BCF    FA6.7
08B7E:  BSF    FA6.2
08B80:  MOVF   FF2,W
08B82:  MOVWF  00
08B84:  BCF    FF2.7
08B86:  MOVLB  F
08B88:  MOVLW  55
08B8A:  MOVWF  FA7
08B8C:  MOVLW  AA
08B8E:  MOVWF  FA7
08B90:  BSF    FA6.1
08B92:  BTFSC  FA6.1
08B94:  BRA    8B92
08B96:  BCF    FA6.2
08B98:  MOVF   00,W
08B9A:  IORWF  FF2,F
08B9C:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==105){ // Menu de Ajuste de Ajuste+ 
08B9E:  MOVF   x97,W
08BA0:  SUBLW  69
08BA2:  BTFSS  FD8.2
08BA4:  BRA    8CC4
....................        
....................          if(Ajuste>100) 
08BA6:  MOVF   x8A,W
08BA8:  SUBLW  64
08BAA:  BC    8BAE
....................             Ajuste=0; 
08BAC:  CLRF   x8A
....................        
....................          if(visual==1) 
08BAE:  BTFSS  x87.4
08BB0:  BRA    8C1A
....................          { 
....................             glcd_fillScreen(OFF); 
08BB2:  MOVLB  6
08BB4:  CLRF   x61
08BB6:  MOVLB  0
08BB8:  CALL   25BC
....................             strcpy(Menus.Letra,"Ajuste"); 
08BBC:  MOVLW  06
08BBE:  MOVWF  FEA
08BC0:  MOVLW  39
08BC2:  MOVWF  FE9
08BC4:  MOVFF  FF2,659
08BC8:  BCF    FF2.7
08BCA:  MOVLW  00
08BCC:  CALL   0EB8
08BD0:  TBLRD*-
08BD2:  TBLRD*+
08BD4:  MOVF   FF5,W
08BD6:  MOVWF  FEE
08BD8:  IORLW  00
08BDA:  BNZ   8BD2
08BDC:  MOVLB  6
08BDE:  BTFSC  x59.7
08BE0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);       
08BE2:  MOVLW  06
08BE4:  MOVWF  x62
08BE6:  MOVLW  39
08BE8:  MOVWF  x61
08BEA:  CLRF   x63
08BEC:  CLRF   x64
08BEE:  MOVLW  01
08BF0:  MOVWF  x65
08BF2:  MOVLW  02
08BF4:  MOVWF  x66
08BF6:  MOVLB  0
08BF8:  CALL   2BEA
....................             displayTemperatura(Ajuste,30,30,0,3); 
08BFC:  MOVLB  6
08BFE:  CLRF   x5C
08C00:  MOVFF  58A,65B
08C04:  MOVLW  1E
08C06:  MOVWF  x5D
08C08:  MOVWF  x5E
08C0A:  CLRF   x5F
08C0C:  MOVLW  03
08C0E:  MOVWF  x60
08C10:  MOVLB  0
08C12:  CALL   443C
....................             visual=0; 
08C16:  MOVLB  5
08C18:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08C1A:  BSF    F92.4
08C1C:  BTFSC  F80.4
08C1E:  BRA    8C2C
....................             DelayPuls();Ajuste++;visual=1; 
08C20:  MOVLB  0
08C22:  CALL   37D6
08C26:  MOVLB  5
08C28:  INCF   x8A,F
08C2A:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
08C2C:  BSF    F92.5
08C2E:  BTFSC  F80.5
08C30:  BRA    8C42
....................          {   
....................             if(Ajuste>0){ 
08C32:  MOVF   x8A,F
08C34:  BZ    8C42
....................                DelayPuls();Ajuste--;visual=1;      
08C36:  MOVLB  0
08C38:  CALL   37D6
08C3C:  MOVLB  5
08C3E:  DECF   x8A,F
08C40:  BSF    x87.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT) 
08C42:  BSF    F96.0
08C44:  BTFSC  F84.0
08C46:  BRA    8C4A
....................             visual=1; 
08C48:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08C4A:  BSF    F96.1
08C4C:  BTFSC  F84.1
08C4E:  BRA    8CC4
....................             delay_ms(10); 
08C50:  MOVLW  0A
08C52:  MOVLB  6
08C54:  MOVWF  x62
08C56:  MOVLB  0
08C58:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08C5C:  MOVLW  04
08C5E:  MOVLB  6
08C60:  MOVWF  x59
08C62:  MOVLW  AF
08C64:  MOVWF  x62
08C66:  MOVLB  0
08C68:  CALL   1052
08C6C:  MOVLB  6
08C6E:  DECFSZ x59,F
08C70:  BRA    8C62
08C72:  MOVLW  64
08C74:  MOVLB  5
08C76:  MOVWF  x97
08C78:  MOVLB  6
08C7A:  CLRF   x61
08C7C:  MOVLB  0
08C7E:  CALL   25BC
08C82:  MOVLW  01
08C84:  MOVLB  5
08C86:  MOVWF  x9C
08C88:  BSF    x87.4
....................             write_eeprom(18,Ajuste);delay_ms(20); 
08C8A:  CLRF   FAA
08C8C:  MOVLW  12
08C8E:  MOVWF  FA9
08C90:  MOVFF  58A,FA8
08C94:  BCF    FA6.6
08C96:  BCF    FA6.7
08C98:  BSF    FA6.2
08C9A:  MOVF   FF2,W
08C9C:  MOVWF  00
08C9E:  BCF    FF2.7
08CA0:  MOVLB  F
08CA2:  MOVLW  55
08CA4:  MOVWF  FA7
08CA6:  MOVLW  AA
08CA8:  MOVWF  FA7
08CAA:  BSF    FA6.1
08CAC:  BTFSC  FA6.1
08CAE:  BRA    8CAC
08CB0:  BCF    FA6.2
08CB2:  MOVF   00,W
08CB4:  IORWF  FF2,F
08CB6:  MOVLW  14
08CB8:  MOVLB  6
08CBA:  MOVWF  x62
08CBC:  MOVLB  0
08CBE:  CALL   1052
08CC2:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==106){ // Menu de Ajuste de Ajuste - 
08CC4:  MOVF   x97,W
08CC6:  SUBLW  6A
08CC8:  BTFSS  FD8.2
08CCA:  BRA    8DEA
....................        
....................          if(Ajusten>100) 
08CCC:  MOVF   x8B,W
08CCE:  SUBLW  64
08CD0:  BC    8CD4
....................             Ajusten=0; 
08CD2:  CLRF   x8B
....................         
....................          if(visual==1){ 
08CD4:  BTFSS  x87.4
08CD6:  BRA    8D40
....................             glcd_fillScreen(OFF); 
08CD8:  MOVLB  6
08CDA:  CLRF   x61
08CDC:  MOVLB  0
08CDE:  CALL   25BC
....................             strcpy(Menus.Letra,"Ajusten"); 
08CE2:  MOVLW  06
08CE4:  MOVWF  FEA
08CE6:  MOVLW  39
08CE8:  MOVWF  FE9
08CEA:  MOVFF  FF2,659
08CEE:  BCF    FF2.7
08CF0:  MOVLW  00
08CF2:  CALL   0EDE
08CF6:  TBLRD*-
08CF8:  TBLRD*+
08CFA:  MOVF   FF5,W
08CFC:  MOVWF  FEE
08CFE:  IORLW  00
08D00:  BNZ   8CF8
08D02:  MOVLB  6
08D04:  BTFSC  x59.7
08D06:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
08D08:  MOVLW  06
08D0A:  MOVWF  x62
08D0C:  MOVLW  39
08D0E:  MOVWF  x61
08D10:  CLRF   x63
08D12:  CLRF   x64
08D14:  MOVLW  01
08D16:  MOVWF  x65
08D18:  MOVLW  02
08D1A:  MOVWF  x66
08D1C:  MOVLB  0
08D1E:  CALL   2BEA
....................             displayTemperatura(Ajusten,30,30,0,3); 
08D22:  MOVLB  6
08D24:  CLRF   x5C
08D26:  MOVFF  58B,65B
08D2A:  MOVLW  1E
08D2C:  MOVWF  x5D
08D2E:  MOVWF  x5E
08D30:  CLRF   x5F
08D32:  MOVLW  03
08D34:  MOVWF  x60
08D36:  MOVLB  0
08D38:  CALL   443C
....................             visual=0; 
08D3C:  MOVLB  5
08D3E:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08D40:  BSF    F92.4
08D42:  BTFSC  F80.4
08D44:  BRA    8D52
....................             DelayPuls();Ajusten++;visual=1; 
08D46:  MOVLB  0
08D48:  CALL   37D6
08D4C:  MOVLB  5
08D4E:  INCF   x8B,F
08D50:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08D52:  BSF    F92.5
08D54:  BTFSC  F80.5
08D56:  BRA    8D68
....................             if(Ajusten>0){ 
08D58:  MOVF   x8B,F
08D5A:  BZ    8D68
....................                DelayPuls();Ajusten--;visual=1;      
08D5C:  MOVLB  0
08D5E:  CALL   37D6
08D62:  MOVLB  5
08D64:  DECF   x8B,F
08D66:  BSF    x87.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT) 
08D68:  BSF    F96.0
08D6A:  BTFSC  F84.0
08D6C:  BRA    8D70
....................             visual=1; 
08D6E:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08D70:  BSF    F96.1
08D72:  BTFSC  F84.1
08D74:  BRA    8DEA
....................             delay_ms(10); 
08D76:  MOVLW  0A
08D78:  MOVLB  6
08D7A:  MOVWF  x62
08D7C:  MOVLB  0
08D7E:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08D82:  MOVLW  04
08D84:  MOVLB  6
08D86:  MOVWF  x59
08D88:  MOVLW  AF
08D8A:  MOVWF  x62
08D8C:  MOVLB  0
08D8E:  CALL   1052
08D92:  MOVLB  6
08D94:  DECFSZ x59,F
08D96:  BRA    8D88
08D98:  MOVLW  64
08D9A:  MOVLB  5
08D9C:  MOVWF  x97
08D9E:  MOVLB  6
08DA0:  CLRF   x61
08DA2:  MOVLB  0
08DA4:  CALL   25BC
08DA8:  MOVLW  01
08DAA:  MOVLB  5
08DAC:  MOVWF  x9C
08DAE:  BSF    x87.4
....................             write_eeprom(19,Ajusten);delay_ms(20); 
08DB0:  CLRF   FAA
08DB2:  MOVLW  13
08DB4:  MOVWF  FA9
08DB6:  MOVFF  58B,FA8
08DBA:  BCF    FA6.6
08DBC:  BCF    FA6.7
08DBE:  BSF    FA6.2
08DC0:  MOVF   FF2,W
08DC2:  MOVWF  00
08DC4:  BCF    FF2.7
08DC6:  MOVLB  F
08DC8:  MOVLW  55
08DCA:  MOVWF  FA7
08DCC:  MOVLW  AA
08DCE:  MOVWF  FA7
08DD0:  BSF    FA6.1
08DD2:  BTFSC  FA6.1
08DD4:  BRA    8DD2
08DD6:  BCF    FA6.2
08DD8:  MOVF   00,W
08DDA:  IORWF  FF2,F
08DDC:  MOVLW  14
08DDE:  MOVLB  6
08DE0:  MOVWF  x62
08DE2:  MOVLB  0
08DE4:  CALL   1052
08DE8:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==107){ // Menu de Ajuste de Media Movil 
08DEA:  MOVF   x97,W
08DEC:  SUBLW  6B
08DEE:  BTFSS  FD8.2
08DF0:  BRA    8F1A
....................        
....................          if(MediaMovil>80) 
08DF2:  MOVF   x8C,W
08DF4:  SUBLW  50
08DF6:  BC    8DFE
....................             MediaMovil=10; 
08DF8:  MOVLW  0A
08DFA:  MOVWF  x8C
....................          else if(MediaMovil<10) 
08DFC:  BRA    8E08
08DFE:  MOVF   x8C,W
08E00:  SUBLW  09
08E02:  BNC   8E08
....................             MediaMovil=80; 
08E04:  MOVLW  50
08E06:  MOVWF  x8C
....................        
....................          if(visual==1){ 
08E08:  BTFSS  x87.4
08E0A:  BRA    8E74
....................             glcd_fillScreen(OFF); 
08E0C:  MOVLB  6
08E0E:  CLRF   x61
08E10:  MOVLB  0
08E12:  CALL   25BC
....................             strcpy(Menus.Letra,"Media"); 
08E16:  MOVLW  06
08E18:  MOVWF  FEA
08E1A:  MOVLW  39
08E1C:  MOVWF  FE9
08E1E:  MOVFF  FF2,659
08E22:  BCF    FF2.7
08E24:  MOVLW  00
08E26:  CALL   0F04
08E2A:  TBLRD*-
08E2C:  TBLRD*+
08E2E:  MOVF   FF5,W
08E30:  MOVWF  FEE
08E32:  IORLW  00
08E34:  BNZ   8E2C
08E36:  MOVLB  6
08E38:  BTFSC  x59.7
08E3A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
08E3C:  MOVLW  06
08E3E:  MOVWF  x62
08E40:  MOVLW  39
08E42:  MOVWF  x61
08E44:  CLRF   x63
08E46:  CLRF   x64
08E48:  MOVLW  01
08E4A:  MOVWF  x65
08E4C:  MOVLW  02
08E4E:  MOVWF  x66
08E50:  MOVLB  0
08E52:  CALL   2BEA
....................             displayTemperatura(MediaMovil,30,30,0,3); 
08E56:  MOVLB  6
08E58:  CLRF   x5C
08E5A:  MOVFF  58C,65B
08E5E:  MOVLW  1E
08E60:  MOVWF  x5D
08E62:  MOVWF  x5E
08E64:  CLRF   x5F
08E66:  MOVLW  03
08E68:  MOVWF  x60
08E6A:  MOVLB  0
08E6C:  CALL   443C
....................             visual=0; 
08E70:  MOVLB  5
08E72:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08E74:  BSF    F92.4
08E76:  BTFSC  F80.4
08E78:  BRA    8E86
....................             DelayPuls();MediaMovil++;visual=1; 
08E7A:  MOVLB  0
08E7C:  CALL   37D6
08E80:  MOVLB  5
08E82:  INCF   x8C,F
08E84:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08E86:  BSF    F92.5
08E88:  BTFSC  F80.5
08E8A:  BRA    8E98
....................             DelayPuls();MediaMovil--;visual=1;      
08E8C:  MOVLB  0
08E8E:  CALL   37D6
08E92:  MOVLB  5
08E94:  DECF   x8C,F
08E96:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT) 
08E98:  BSF    F96.0
08E9A:  BTFSC  F84.0
08E9C:  BRA    8EA0
....................             visual=1; 
08E9E:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08EA0:  BSF    F96.1
08EA2:  BTFSC  F84.1
08EA4:  BRA    8F1A
....................             delay_ms(10); 
08EA6:  MOVLW  0A
08EA8:  MOVLB  6
08EAA:  MOVWF  x62
08EAC:  MOVLB  0
08EAE:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08EB2:  MOVLW  04
08EB4:  MOVLB  6
08EB6:  MOVWF  x59
08EB8:  MOVLW  AF
08EBA:  MOVWF  x62
08EBC:  MOVLB  0
08EBE:  CALL   1052
08EC2:  MOVLB  6
08EC4:  DECFSZ x59,F
08EC6:  BRA    8EB8
08EC8:  MOVLW  64
08ECA:  MOVLB  5
08ECC:  MOVWF  x97
08ECE:  MOVLB  6
08ED0:  CLRF   x61
08ED2:  MOVLB  0
08ED4:  CALL   25BC
08ED8:  MOVLW  01
08EDA:  MOVLB  5
08EDC:  MOVWF  x9C
08EDE:  BSF    x87.4
....................             write_eeprom(20,(int8)MediaMovil);delay_ms(20); 
08EE0:  CLRF   FAA
08EE2:  MOVLW  14
08EE4:  MOVWF  FA9
08EE6:  MOVFF  58C,FA8
08EEA:  BCF    FA6.6
08EEC:  BCF    FA6.7
08EEE:  BSF    FA6.2
08EF0:  MOVF   FF2,W
08EF2:  MOVWF  00
08EF4:  BCF    FF2.7
08EF6:  MOVLB  F
08EF8:  MOVLW  55
08EFA:  MOVWF  FA7
08EFC:  MOVLW  AA
08EFE:  MOVWF  FA7
08F00:  BSF    FA6.1
08F02:  BTFSC  FA6.1
08F04:  BRA    8F02
08F06:  BCF    FA6.2
08F08:  MOVF   00,W
08F0A:  IORWF  FF2,F
08F0C:  MOVLW  14
08F0E:  MOVLB  6
08F10:  MOVWF  x62
08F12:  MOVLB  0
08F14:  CALL   1052
08F18:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==108){ // Menu de Ganancia Instrumentacion 
08F1A:  MOVF   x97,W
08F1C:  SUBLW  6C
08F1E:  BTFSS  FD8.2
08F20:  BRA    91E4
....................        
....................          if(Gain>50 || Gain<30) 
08F22:  MOVLB  6
08F24:  CLRF   x60
08F26:  CLRF   x5F
08F28:  MOVLW  48
08F2A:  MOVWF  x5E
08F2C:  MOVLW  84
08F2E:  MOVWF  x5D
08F30:  MOVFF  5C0,664
08F34:  MOVFF  5BF,663
08F38:  MOVFF  5BE,662
08F3C:  MOVFF  5BD,661
08F40:  MOVLB  0
08F42:  CALL   1C42
08F46:  BC    8F6E
08F48:  MOVFF  5C0,660
08F4C:  MOVFF  5BF,65F
08F50:  MOVFF  5BE,65E
08F54:  MOVFF  5BD,65D
08F58:  MOVLB  6
08F5A:  CLRF   x64
08F5C:  CLRF   x63
08F5E:  MOVLW  70
08F60:  MOVWF  x62
08F62:  MOVLW  83
08F64:  MOVWF  x61
08F66:  MOVLB  0
08F68:  CALL   1C42
08F6C:  BNC   8F7E
....................             Gain=40; 
08F6E:  MOVLB  5
08F70:  CLRF   xC0
08F72:  CLRF   xBF
08F74:  MOVLW  20
08F76:  MOVWF  xBE
08F78:  MOVLW  84
08F7A:  MOVWF  xBD
08F7C:  MOVLB  0
....................        
....................          strcpy(Menus.Letra,"Ganancia"); 
08F7E:  MOVLW  06
08F80:  MOVWF  FEA
08F82:  MOVLW  39
08F84:  MOVWF  FE9
08F86:  MOVFF  FF2,659
08F8A:  BCF    FF2.7
08F8C:  MOVLW  00
08F8E:  CALL   0F28
08F92:  TBLRD*-
08F94:  TBLRD*+
08F96:  MOVF   FF5,W
08F98:  MOVWF  FEE
08F9A:  IORLW  00
08F9C:  BNZ   8F94
08F9E:  MOVLB  6
08FA0:  BTFSC  x59.7
08FA2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
08FA4:  MOVLW  06
08FA6:  MOVWF  x62
08FA8:  MOVLW  39
08FAA:  MOVWF  x61
08FAC:  CLRF   x63
08FAE:  CLRF   x64
08FB0:  MOVLW  01
08FB2:  MOVWF  x65
08FB4:  MOVLW  02
08FB6:  MOVWF  x66
08FB8:  MOVLB  0
08FBA:  CALL   2BEA
....................          displayTT(Gain,30,30,2); 
08FBE:  MOVFF  5C0,65C
08FC2:  MOVFF  5BF,65B
08FC6:  MOVFF  5BE,65A
08FCA:  MOVFF  5BD,659
08FCE:  MOVLW  1E
08FD0:  MOVLB  6
08FD2:  MOVWF  x5D
08FD4:  MOVWF  x5E
08FD6:  MOVLW  02
08FD8:  MOVWF  x5F
08FDA:  MOVLB  0
08FDC:  CALL   5858
....................  
....................          if(UP){   
08FE0:  BSF    F92.4
08FE2:  BTFSC  F80.4
08FE4:  BRA    9024
....................             DelayPuls(); 
08FE6:  CALL   37D6
....................             Gain+=0.1; 
08FEA:  BCF    FD8.1
08FEC:  MOVFF  5C0,661
08FF0:  MOVFF  5BF,660
08FF4:  MOVFF  5BE,65F
08FF8:  MOVFF  5BD,65E
08FFC:  MOVLW  CD
08FFE:  MOVLB  6
09000:  MOVWF  x65
09002:  MOVLW  CC
09004:  MOVWF  x64
09006:  MOVLW  4C
09008:  MOVWF  x63
0900A:  MOVLW  7B
0900C:  MOVWF  x62
0900E:  MOVLB  0
09010:  CALL   1246
09014:  MOVFF  03,5C0
09018:  MOVFF  02,5BF
0901C:  MOVFF  01,5BE
09020:  MOVFF  00,5BD
....................          } 
....................                 
....................          if(DOWN){   
09024:  BSF    F92.5
09026:  BTFSC  F80.5
09028:  BRA    9068
....................             DelayPuls(); 
0902A:  CALL   37D6
....................             Gain-=0.1; 
0902E:  BSF    FD8.1
09030:  MOVFF  5C0,661
09034:  MOVFF  5BF,660
09038:  MOVFF  5BE,65F
0903C:  MOVFF  5BD,65E
09040:  MOVLW  CD
09042:  MOVLB  6
09044:  MOVWF  x65
09046:  MOVLW  CC
09048:  MOVWF  x64
0904A:  MOVLW  4C
0904C:  MOVWF  x63
0904E:  MOVLW  7B
09050:  MOVWF  x62
09052:  MOVLB  0
09054:  CALL   1246
09058:  MOVFF  03,5C0
0905C:  MOVFF  02,5BF
09060:  MOVFF  01,5BE
09064:  MOVFF  00,5BD
....................          } 
....................                 
....................          if(RIGHT) 
09068:  BSF    F96.0
0906A:  BTFSC  F84.0
0906C:  BRA    9074
....................             visual=1; 
0906E:  MOVLB  5
09070:  BSF    x87.4
09072:  MOVLB  0
....................                    
....................          if(LEFT){ 
09074:  BSF    F96.1
09076:  BTFSC  F84.1
09078:  BRA    91E2
....................             delay_ms(10); 
0907A:  MOVLW  0A
0907C:  MOVLB  6
0907E:  MOVWF  x62
09080:  MOVLB  0
09082:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
09086:  MOVLW  04
09088:  MOVLB  6
0908A:  MOVWF  x59
0908C:  MOVLW  AF
0908E:  MOVWF  x62
09090:  MOVLB  0
09092:  CALL   1052
09096:  MOVLB  6
09098:  DECFSZ x59,F
0909A:  BRA    908C
0909C:  MOVLW  64
0909E:  MOVLB  5
090A0:  MOVWF  x97
090A2:  MOVLB  6
090A4:  CLRF   x61
090A6:  MOVLB  0
090A8:  CALL   25BC
090AC:  MOVLW  01
090AE:  MOVLB  5
090B0:  MOVWF  x9C
090B2:  BSF    x87.4
....................             write_eeprom(21,(int8)Gain); 
090B4:  MOVFF  5C0,65C
090B8:  MOVFF  5BF,65B
090BC:  MOVFF  5BE,65A
090C0:  MOVFF  5BD,659
090C4:  MOVLB  0
090C6:  CALL   4342
090CA:  MOVFF  01,659
090CE:  CLRF   FAA
090D0:  MOVLW  15
090D2:  MOVWF  FA9
090D4:  MOVFF  659,FA8
090D8:  BCF    FA6.6
090DA:  BCF    FA6.7
090DC:  BSF    FA6.2
090DE:  MOVF   FF2,W
090E0:  MOVWF  00
090E2:  BCF    FF2.7
090E4:  MOVLB  F
090E6:  MOVLW  55
090E8:  MOVWF  FA7
090EA:  MOVLW  AA
090EC:  MOVWF  FA7
090EE:  BSF    FA6.1
090F0:  BTFSC  FA6.1
090F2:  BRA    90F0
090F4:  BCF    FA6.2
090F6:  MOVF   00,W
090F8:  IORWF  FF2,F
....................             delay_ms(10); 
090FA:  MOVLW  0A
090FC:  MOVLB  6
090FE:  MOVWF  x62
09100:  MOVLB  0
09102:  CALL   1052
....................             Temporal=Gain-((int8)Gain); 
09106:  MOVFF  5C0,65C
0910A:  MOVFF  5BF,65B
0910E:  MOVFF  5BE,65A
09112:  MOVFF  5BD,659
09116:  CALL   4342
0911A:  MOVLB  6
0911C:  CLRF   x60
0911E:  MOVFF  01,65F
09122:  MOVLB  0
09124:  CALL   10B2
09128:  BSF    FD8.1
0912A:  MOVFF  5C0,661
0912E:  MOVFF  5BF,660
09132:  MOVFF  5BE,65F
09136:  MOVFF  5BD,65E
0913A:  MOVFF  03,665
0913E:  MOVFF  02,664
09142:  MOVFF  01,663
09146:  MOVFF  00,662
0914A:  CALL   1246
0914E:  MOVFF  03,62C
09152:  MOVFF  02,62B
09156:  MOVFF  01,62A
0915A:  MOVFF  00,629
....................             Temporal=Temporal*10; 
0915E:  MOVFF  62C,67C
09162:  MOVFF  62B,67B
09166:  MOVFF  62A,67A
0916A:  MOVFF  629,679
0916E:  MOVLB  6
09170:  CLRF   x80
09172:  CLRF   x7F
09174:  MOVLW  20
09176:  MOVWF  x7E
09178:  MOVLW  82
0917A:  MOVWF  x7D
0917C:  MOVLB  0
0917E:  CALL   2D3C
09182:  MOVFF  03,62C
09186:  MOVFF  02,62B
0918A:  MOVFF  01,62A
0918E:  MOVFF  00,629
....................             write_eeprom(22,(int8)Temporal); 
09192:  MOVFF  62C,65C
09196:  MOVFF  62B,65B
0919A:  MOVFF  62A,65A
0919E:  MOVFF  629,659
091A2:  CALL   4342
091A6:  MOVFF  01,659
091AA:  CLRF   FAA
091AC:  MOVLW  16
091AE:  MOVWF  FA9
091B0:  MOVFF  659,FA8
091B4:  BCF    FA6.6
091B6:  BCF    FA6.7
091B8:  BSF    FA6.2
091BA:  MOVF   FF2,W
091BC:  MOVWF  00
091BE:  BCF    FF2.7
091C0:  MOVLB  F
091C2:  MOVLW  55
091C4:  MOVWF  FA7
091C6:  MOVLW  AA
091C8:  MOVWF  FA7
091CA:  BSF    FA6.1
091CC:  BTFSC  FA6.1
091CE:  BRA    91CC
091D0:  BCF    FA6.2
091D2:  MOVF   00,W
091D4:  IORWF  FF2,F
....................             delay_ms(10); 
091D6:  MOVLW  0A
091D8:  MOVLB  6
091DA:  MOVWF  x62
091DC:  MOVLB  0
091DE:  CALL   1052
091E2:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==109){ // Menu de Ajuste R1 
091E4:  MOVF   x97,W
091E6:  SUBLW  6D
091E8:  BTFSS  FD8.2
091EA:  BRA    945C
....................        
....................          if(R1>6400 || R1<6000) 
091EC:  MOVLB  6
091EE:  CLRF   x60
091F0:  CLRF   x5F
091F2:  MOVLW  48
091F4:  MOVWF  x5E
091F6:  MOVLW  8B
091F8:  MOVWF  x5D
091FA:  MOVFF  5E4,664
091FE:  MOVFF  5E3,663
09202:  MOVFF  5E2,662
09206:  MOVFF  5E1,661
0920A:  MOVLB  0
0920C:  CALL   1C42
09210:  BC    923A
09212:  MOVFF  5E4,660
09216:  MOVFF  5E3,65F
0921A:  MOVFF  5E2,65E
0921E:  MOVFF  5E1,65D
09222:  MOVLB  6
09224:  CLRF   x64
09226:  MOVLW  80
09228:  MOVWF  x63
0922A:  MOVLW  3B
0922C:  MOVWF  x62
0922E:  MOVLW  8B
09230:  MOVWF  x61
09232:  MOVLB  0
09234:  CALL   1C42
09238:  BNC   924C
....................             R1=6200; 
0923A:  MOVLB  5
0923C:  CLRF   xE4
0923E:  MOVLW  C0
09240:  MOVWF  xE3
09242:  MOVLW  41
09244:  MOVWF  xE2
09246:  MOVLW  8B
09248:  MOVWF  xE1
0924A:  MOVLB  0
....................  
....................          strcpy(Menus.Letra,"R51"); 
0924C:  MOVLW  06
0924E:  MOVWF  FEA
09250:  MOVLW  39
09252:  MOVWF  FE9
09254:  MOVFF  FF2,659
09258:  BCF    FF2.7
0925A:  MOVLW  00
0925C:  CALL   0F50
09260:  TBLRD*-
09262:  TBLRD*+
09264:  MOVF   FF5,W
09266:  MOVWF  FEE
09268:  IORLW  00
0926A:  BNZ   9262
0926C:  MOVLB  6
0926E:  BTFSC  x59.7
09270:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2);    
09272:  MOVLW  06
09274:  MOVWF  x62
09276:  MOVLW  39
09278:  MOVWF  x61
0927A:  CLRF   x63
0927C:  CLRF   x64
0927E:  MOVLW  01
09280:  MOVWF  x65
09282:  MOVLW  02
09284:  MOVWF  x66
09286:  MOVLB  0
09288:  CALL   2BEA
....................          displayTemperatura(R1,30,30,0,3); 
0928C:  MOVFF  5E4,65C
09290:  MOVFF  5E3,65B
09294:  MOVFF  5E2,65A
09298:  MOVFF  5E1,659
0929C:  CALL   4342
092A0:  MOVFF  02,65A
092A4:  MOVFF  01,659
092A8:  MOVFF  02,65C
092AC:  MOVFF  01,65B
092B0:  MOVLW  1E
092B2:  MOVLB  6
092B4:  MOVWF  x5D
092B6:  MOVWF  x5E
092B8:  CLRF   x5F
092BA:  MOVLW  03
092BC:  MOVWF  x60
092BE:  MOVLB  0
092C0:  CALL   443C
....................  
....................          if(UP){   
092C4:  BSF    F92.4
092C6:  BTFSC  F80.4
092C8:  BRA    930C
....................             DelayPuls(); 
092CA:  CALL   37D6
....................             R1+=1.0; 
092CE:  BCF    FD8.1
092D0:  MOVFF  5E4,661
092D4:  MOVFF  5E3,660
092D8:  MOVFF  5E2,65F
092DC:  MOVFF  5E1,65E
092E0:  MOVLB  6
092E2:  CLRF   x65
092E4:  CLRF   x64
092E6:  CLRF   x63
092E8:  MOVLW  7F
092EA:  MOVWF  x62
092EC:  MOVLB  0
092EE:  CALL   1246
092F2:  MOVFF  03,5E4
092F6:  MOVFF  02,5E3
092FA:  MOVFF  01,5E2
092FE:  MOVFF  00,5E1
....................             glcd_fillscreen(OFF); 
09302:  MOVLB  6
09304:  CLRF   x61
09306:  MOVLB  0
09308:  CALL   25BC
....................          } 
....................                 
....................          if(DOWN){   
0930C:  BSF    F92.5
0930E:  BTFSC  F80.5
09310:  BRA    9354
....................             DelayPuls(); 
09312:  CALL   37D6
....................             R1-=1.0; 
09316:  BSF    FD8.1
09318:  MOVFF  5E4,661
0931C:  MOVFF  5E3,660
09320:  MOVFF  5E2,65F
09324:  MOVFF  5E1,65E
09328:  MOVLB  6
0932A:  CLRF   x65
0932C:  CLRF   x64
0932E:  CLRF   x63
09330:  MOVLW  7F
09332:  MOVWF  x62
09334:  MOVLB  0
09336:  CALL   1246
0933A:  MOVFF  03,5E4
0933E:  MOVFF  02,5E3
09342:  MOVFF  01,5E2
09346:  MOVFF  00,5E1
....................             glcd_fillscreen(OFF); 
0934A:  MOVLB  6
0934C:  CLRF   x61
0934E:  MOVLB  0
09350:  CALL   25BC
....................          } 
....................                 
....................          if(RIGHT){   
09354:  BSF    F96.0
09356:  BTFSC  F84.0
09358:  BRA    9368
....................             visual=1; 
0935A:  MOVLB  5
0935C:  BSF    x87.4
....................             glcd_fillscreen(OFF); 
0935E:  MOVLB  6
09360:  CLRF   x61
09362:  MOVLB  0
09364:  CALL   25BC
....................          }  
....................                    
....................          if(LEFT){ 
09368:  BSF    F96.1
0936A:  BTFSC  F84.1
0936C:  BRA    945A
....................             delay_ms(10); 
0936E:  MOVLW  0A
09370:  MOVLB  6
09372:  MOVWF  x62
09374:  MOVLB  0
09376:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0937A:  MOVLW  04
0937C:  MOVLB  6
0937E:  MOVWF  x59
09380:  MOVLW  AF
09382:  MOVWF  x62
09384:  MOVLB  0
09386:  CALL   1052
0938A:  MOVLB  6
0938C:  DECFSZ x59,F
0938E:  BRA    9380
09390:  MOVLW  64
09392:  MOVLB  5
09394:  MOVWF  x97
09396:  MOVLB  6
09398:  CLRF   x61
0939A:  MOVLB  0
0939C:  CALL   25BC
093A0:  MOVLW  01
093A2:  MOVLB  5
093A4:  MOVWF  x9C
093A6:  BSF    x87.4
....................             write_eeprom(23,make8((int16)R1,0)); 
093A8:  MOVFF  5E4,65C
093AC:  MOVFF  5E3,65B
093B0:  MOVFF  5E2,65A
093B4:  MOVFF  5E1,659
093B8:  MOVLB  0
093BA:  CALL   4342
093BE:  MOVFF  02,65A
093C2:  MOVFF  01,659
093C6:  MOVFF  659,65B
093CA:  CLRF   FAA
093CC:  MOVLW  17
093CE:  MOVWF  FA9
093D0:  MOVFF  65B,FA8
093D4:  BCF    FA6.6
093D6:  BCF    FA6.7
093D8:  BSF    FA6.2
093DA:  MOVF   FF2,W
093DC:  MOVWF  00
093DE:  BCF    FF2.7
093E0:  MOVLB  F
093E2:  MOVLW  55
093E4:  MOVWF  FA7
093E6:  MOVLW  AA
093E8:  MOVWF  FA7
093EA:  BSF    FA6.1
093EC:  BTFSC  FA6.1
093EE:  BRA    93EC
093F0:  BCF    FA6.2
093F2:  MOVF   00,W
093F4:  IORWF  FF2,F
....................             delay_ms(10); 
093F6:  MOVLW  0A
093F8:  MOVLB  6
093FA:  MOVWF  x62
093FC:  MOVLB  0
093FE:  CALL   1052
....................             write_eeprom(24,make8((int16)R1,1)); 
09402:  MOVFF  5E4,65C
09406:  MOVFF  5E3,65B
0940A:  MOVFF  5E2,65A
0940E:  MOVFF  5E1,659
09412:  CALL   4342
09416:  MOVFF  02,65A
0941A:  MOVFF  01,659
0941E:  MOVFF  65A,65B
09422:  CLRF   FAA
09424:  MOVLW  18
09426:  MOVWF  FA9
09428:  MOVFF  65B,FA8
0942C:  BCF    FA6.6
0942E:  BCF    FA6.7
09430:  BSF    FA6.2
09432:  MOVF   FF2,W
09434:  MOVWF  00
09436:  BCF    FF2.7
09438:  MOVLB  F
0943A:  MOVLW  55
0943C:  MOVWF  FA7
0943E:  MOVLW  AA
09440:  MOVWF  FA7
09442:  BSF    FA6.1
09444:  BTFSC  FA6.1
09446:  BRA    9444
09448:  BCF    FA6.2
0944A:  MOVF   00,W
0944C:  IORWF  FF2,F
....................             delay_ms(10); 
0944E:  MOVLW  0A
09450:  MOVLB  6
09452:  MOVWF  x62
09454:  MOVLB  0
09456:  CALL   1052
0945A:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==110){ // Menu de Ajuste RPT100 
0945C:  MOVF   x97,W
0945E:  SUBLW  6E
09460:  BTFSS  FD8.2
09462:  BRA    9718
....................        
....................          if(RPT100>2.0) 
09464:  MOVLB  6
09466:  CLRF   x60
09468:  CLRF   x5F
0946A:  CLRF   x5E
0946C:  MOVLW  80
0946E:  MOVWF  x5D
09470:  MOVFF  5C4,664
09474:  MOVFF  5C3,663
09478:  MOVFF  5C2,662
0947C:  MOVFF  5C1,661
09480:  MOVLB  0
09482:  CALL   1C42
09486:  BNC   9496
....................             RPT100=0.5; 
09488:  MOVLB  5
0948A:  CLRF   xC4
0948C:  CLRF   xC3
0948E:  CLRF   xC2
09490:  MOVLW  7E
09492:  MOVWF  xC1
09494:  MOVLB  0
....................  
....................          strcpy(Menus.Letra,"RPT100"); 
09496:  MOVLW  06
09498:  MOVWF  FEA
0949A:  MOVLW  39
0949C:  MOVWF  FE9
0949E:  MOVFF  FF2,659
094A2:  BCF    FF2.7
094A4:  MOVLW  00
094A6:  CALL   0F72
094AA:  TBLRD*-
094AC:  TBLRD*+
094AE:  MOVF   FF5,W
094B0:  MOVWF  FEE
094B2:  IORLW  00
094B4:  BNZ   94AC
094B6:  MOVLB  6
094B8:  BTFSC  x59.7
094BA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2);    
094BC:  MOVLW  06
094BE:  MOVWF  x62
094C0:  MOVLW  39
094C2:  MOVWF  x61
094C4:  CLRF   x63
094C6:  CLRF   x64
094C8:  MOVLW  01
094CA:  MOVWF  x65
094CC:  MOVLW  02
094CE:  MOVWF  x66
094D0:  MOVLB  0
094D2:  CALL   2BEA
....................          displayTT(RPT100,30,30,2); 
094D6:  MOVFF  5C4,65C
094DA:  MOVFF  5C3,65B
094DE:  MOVFF  5C2,65A
094E2:  MOVFF  5C1,659
094E6:  MOVLW  1E
094E8:  MOVLB  6
094EA:  MOVWF  x5D
094EC:  MOVWF  x5E
094EE:  MOVLW  02
094F0:  MOVWF  x5F
094F2:  MOVLB  0
094F4:  CALL   5858
....................  
....................          if(UP){   
094F8:  BSF    F92.4
094FA:  BTFSC  F80.4
094FC:  BRA    9546
....................             DelayPuls(); 
094FE:  CALL   37D6
....................             RPT100+=0.1; 
09502:  BCF    FD8.1
09504:  MOVFF  5C4,661
09508:  MOVFF  5C3,660
0950C:  MOVFF  5C2,65F
09510:  MOVFF  5C1,65E
09514:  MOVLW  CD
09516:  MOVLB  6
09518:  MOVWF  x65
0951A:  MOVLW  CC
0951C:  MOVWF  x64
0951E:  MOVLW  4C
09520:  MOVWF  x63
09522:  MOVLW  7B
09524:  MOVWF  x62
09526:  MOVLB  0
09528:  CALL   1246
0952C:  MOVFF  03,5C4
09530:  MOVFF  02,5C3
09534:  MOVFF  01,5C2
09538:  MOVFF  00,5C1
....................             glcd_fillscreen(OFF); 
0953C:  MOVLB  6
0953E:  CLRF   x61
09540:  MOVLB  0
09542:  CALL   25BC
....................          } 
....................                 
....................          if(DOWN){   
09546:  BSF    F92.5
09548:  BTFSC  F80.5
0954A:  BRA    9594
....................             DelayPuls(); 
0954C:  CALL   37D6
....................             RPT100-=0.1; 
09550:  BSF    FD8.1
09552:  MOVFF  5C4,661
09556:  MOVFF  5C3,660
0955A:  MOVFF  5C2,65F
0955E:  MOVFF  5C1,65E
09562:  MOVLW  CD
09564:  MOVLB  6
09566:  MOVWF  x65
09568:  MOVLW  CC
0956A:  MOVWF  x64
0956C:  MOVLW  4C
0956E:  MOVWF  x63
09570:  MOVLW  7B
09572:  MOVWF  x62
09574:  MOVLB  0
09576:  CALL   1246
0957A:  MOVFF  03,5C4
0957E:  MOVFF  02,5C3
09582:  MOVFF  01,5C2
09586:  MOVFF  00,5C1
....................             glcd_fillscreen(OFF); 
0958A:  MOVLB  6
0958C:  CLRF   x61
0958E:  MOVLB  0
09590:  CALL   25BC
....................          } 
....................                 
....................          if(RIGHT){   
09594:  BSF    F96.0
09596:  BTFSC  F84.0
09598:  BRA    95A8
....................             visual=1; 
0959A:  MOVLB  5
0959C:  BSF    x87.4
....................             glcd_fillscreen(OFF); 
0959E:  MOVLB  6
095A0:  CLRF   x61
095A2:  MOVLB  0
095A4:  CALL   25BC
....................          }  
....................                    
....................          if(LEFT){ 
095A8:  BSF    F96.1
095AA:  BTFSC  F84.1
095AC:  BRA    9716
....................             delay_ms(10); 
095AE:  MOVLW  0A
095B0:  MOVLB  6
095B2:  MOVWF  x62
095B4:  MOVLB  0
095B6:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
095BA:  MOVLW  04
095BC:  MOVLB  6
095BE:  MOVWF  x59
095C0:  MOVLW  AF
095C2:  MOVWF  x62
095C4:  MOVLB  0
095C6:  CALL   1052
095CA:  MOVLB  6
095CC:  DECFSZ x59,F
095CE:  BRA    95C0
095D0:  MOVLW  64
095D2:  MOVLB  5
095D4:  MOVWF  x97
095D6:  MOVLB  6
095D8:  CLRF   x61
095DA:  MOVLB  0
095DC:  CALL   25BC
095E0:  MOVLW  01
095E2:  MOVLB  5
095E4:  MOVWF  x9C
095E6:  BSF    x87.4
....................             write_eeprom(25,(int8)RPT100); 
095E8:  MOVFF  5C4,65C
095EC:  MOVFF  5C3,65B
095F0:  MOVFF  5C2,65A
095F4:  MOVFF  5C1,659
095F8:  MOVLB  0
095FA:  CALL   4342
095FE:  MOVFF  01,659
09602:  CLRF   FAA
09604:  MOVLW  19
09606:  MOVWF  FA9
09608:  MOVFF  659,FA8
0960C:  BCF    FA6.6
0960E:  BCF    FA6.7
09610:  BSF    FA6.2
09612:  MOVF   FF2,W
09614:  MOVWF  00
09616:  BCF    FF2.7
09618:  MOVLB  F
0961A:  MOVLW  55
0961C:  MOVWF  FA7
0961E:  MOVLW  AA
09620:  MOVWF  FA7
09622:  BSF    FA6.1
09624:  BTFSC  FA6.1
09626:  BRA    9624
09628:  BCF    FA6.2
0962A:  MOVF   00,W
0962C:  IORWF  FF2,F
....................             delay_ms(10); 
0962E:  MOVLW  0A
09630:  MOVLB  6
09632:  MOVWF  x62
09634:  MOVLB  0
09636:  CALL   1052
....................             Temporal=RPT100-((int8)RPT100); 
0963A:  MOVFF  5C4,65C
0963E:  MOVFF  5C3,65B
09642:  MOVFF  5C2,65A
09646:  MOVFF  5C1,659
0964A:  CALL   4342
0964E:  MOVLB  6
09650:  CLRF   x60
09652:  MOVFF  01,65F
09656:  MOVLB  0
09658:  CALL   10B2
0965C:  BSF    FD8.1
0965E:  MOVFF  5C4,661
09662:  MOVFF  5C3,660
09666:  MOVFF  5C2,65F
0966A:  MOVFF  5C1,65E
0966E:  MOVFF  03,665
09672:  MOVFF  02,664
09676:  MOVFF  01,663
0967A:  MOVFF  00,662
0967E:  CALL   1246
09682:  MOVFF  03,62C
09686:  MOVFF  02,62B
0968A:  MOVFF  01,62A
0968E:  MOVFF  00,629
....................             Temporal=Temporal*10; 
09692:  MOVFF  62C,67C
09696:  MOVFF  62B,67B
0969A:  MOVFF  62A,67A
0969E:  MOVFF  629,679
096A2:  MOVLB  6
096A4:  CLRF   x80
096A6:  CLRF   x7F
096A8:  MOVLW  20
096AA:  MOVWF  x7E
096AC:  MOVLW  82
096AE:  MOVWF  x7D
096B0:  MOVLB  0
096B2:  CALL   2D3C
096B6:  MOVFF  03,62C
096BA:  MOVFF  02,62B
096BE:  MOVFF  01,62A
096C2:  MOVFF  00,629
....................             write_eeprom(26,(int8)Temporal); 
096C6:  MOVFF  62C,65C
096CA:  MOVFF  62B,65B
096CE:  MOVFF  62A,65A
096D2:  MOVFF  629,659
096D6:  CALL   4342
096DA:  MOVFF  01,659
096DE:  CLRF   FAA
096E0:  MOVLW  1A
096E2:  MOVWF  FA9
096E4:  MOVFF  659,FA8
096E8:  BCF    FA6.6
096EA:  BCF    FA6.7
096EC:  BSF    FA6.2
096EE:  MOVF   FF2,W
096F0:  MOVWF  00
096F2:  BCF    FF2.7
096F4:  MOVLB  F
096F6:  MOVLW  55
096F8:  MOVWF  FA7
096FA:  MOVLW  AA
096FC:  MOVWF  FA7
096FE:  BSF    FA6.1
09700:  BTFSC  FA6.1
09702:  BRA    9700
09704:  BCF    FA6.2
09706:  MOVF   00,W
09708:  IORWF  FF2,F
....................             delay_ms(10); 
0970A:  MOVLW  0A
0970C:  MOVLB  6
0970E:  MOVWF  x62
09710:  MOVLB  0
09712:  CALL   1052
09716:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==111){ // Menu de Ajuste de Entrada Analoga de Temperatura 
09718:  MOVF   x97,W
0971A:  SUBLW  6F
0971C:  BTFSS  FD8.2
0971E:  BRA    9834
....................        
....................          if(visual==1){ 
09720:  BTFSS  x87.4
09722:  BRA    978C
....................             glcd_fillScreen(OFF); 
09724:  MOVLB  6
09726:  CLRF   x61
09728:  MOVLB  0
0972A:  CALL   25BC
....................             strcpy(Menus.Letra,"In Tem"); 
0972E:  MOVLW  06
09730:  MOVWF  FEA
09732:  MOVLW  39
09734:  MOVWF  FE9
09736:  MOVFF  FF2,659
0973A:  BCF    FF2.7
0973C:  MOVLW  00
0973E:  CALL   0F98
09742:  TBLRD*-
09744:  TBLRD*+
09746:  MOVF   FF5,W
09748:  MOVWF  FEE
0974A:  IORLW  00
0974C:  BNZ   9744
0974E:  MOVLB  6
09750:  BTFSC  x59.7
09752:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
09754:  MOVLW  06
09756:  MOVWF  x62
09758:  MOVLW  39
0975A:  MOVWF  x61
0975C:  CLRF   x63
0975E:  CLRF   x64
09760:  MOVLW  01
09762:  MOVWF  x65
09764:  MOVLW  02
09766:  MOVWF  x66
09768:  MOVLB  0
0976A:  CALL   2BEA
....................             displayTemperatura(Source,30,30,0,3); 
0976E:  MOVLB  6
09770:  CLRF   x5C
09772:  MOVFF  596,65B
09776:  MOVLW  1E
09778:  MOVWF  x5D
0977A:  MOVWF  x5E
0977C:  CLRF   x5F
0977E:  MOVLW  03
09780:  MOVWF  x60
09782:  MOVLB  0
09784:  CALL   443C
....................             visual=0; 
09788:  MOVLB  5
0978A:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
0978C:  BSF    F92.4
0978E:  BTFSC  F80.4
09790:  BRA    97A0
....................             DelayPuls();Source=1;visual=1; 
09792:  MOVLB  0
09794:  CALL   37D6
09798:  MOVLW  01
0979A:  MOVLB  5
0979C:  MOVWF  x96
0979E:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
097A0:  BSF    F92.5
097A2:  BTFSC  F80.5
097A4:  BRA    97B2
....................             DelayPuls();Source=0;visual=1;      
097A6:  MOVLB  0
097A8:  CALL   37D6
097AC:  MOVLB  5
097AE:  CLRF   x96
097B0:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT) 
097B2:  BSF    F96.0
097B4:  BTFSC  F84.0
097B6:  BRA    97BA
....................             visual=1; 
097B8:  BSF    x87.4
....................                    
....................          if(LEFT){ 
097BA:  BSF    F96.1
097BC:  BTFSC  F84.1
097BE:  BRA    9834
....................             delay_ms(10); 
097C0:  MOVLW  0A
097C2:  MOVLB  6
097C4:  MOVWF  x62
097C6:  MOVLB  0
097C8:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
097CC:  MOVLW  04
097CE:  MOVLB  6
097D0:  MOVWF  x59
097D2:  MOVLW  AF
097D4:  MOVWF  x62
097D6:  MOVLB  0
097D8:  CALL   1052
097DC:  MOVLB  6
097DE:  DECFSZ x59,F
097E0:  BRA    97D2
097E2:  MOVLW  64
097E4:  MOVLB  5
097E6:  MOVWF  x97
097E8:  MOVLB  6
097EA:  CLRF   x61
097EC:  MOVLB  0
097EE:  CALL   25BC
097F2:  MOVLW  01
097F4:  MOVLB  5
097F6:  MOVWF  x9C
097F8:  BSF    x87.4
....................             write_eeprom(27,Source);delay_ms(20); 
097FA:  CLRF   FAA
097FC:  MOVLW  1B
097FE:  MOVWF  FA9
09800:  MOVFF  596,FA8
09804:  BCF    FA6.6
09806:  BCF    FA6.7
09808:  BSF    FA6.2
0980A:  MOVF   FF2,W
0980C:  MOVWF  00
0980E:  BCF    FF2.7
09810:  MOVLB  F
09812:  MOVLW  55
09814:  MOVWF  FA7
09816:  MOVLW  AA
09818:  MOVWF  FA7
0981A:  BSF    FA6.1
0981C:  BTFSC  FA6.1
0981E:  BRA    981C
09820:  BCF    FA6.2
09822:  MOVF   00,W
09824:  IORWF  FF2,F
09826:  MOVLW  14
09828:  MOVLB  6
0982A:  MOVWF  x62
0982C:  MOVLB  0
0982E:  CALL   1052
09832:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
....................       if(tiemporeset>=60 && Menu!=0) 
09834:  MOVF   x95,W
09836:  SUBLW  3B
09838:  BC    984E
0983A:  MOVF   x97,F
0983C:  BZ    984E
....................       { 
....................          glcd_init(ON); 
0983E:  MOVLW  01
09840:  MOVLB  6
09842:  MOVWF  x59
09844:  MOVLB  0
09846:  CALL   26CE
....................          tiemporeset=0; 
0984A:  MOVLB  5
0984C:  CLRF   x95
....................       }  
....................  
....................    } 
0984E:  GOTO   5E2E
.................... } 
09852:  SLEEP 

Configuration Fuses:
   Word  1: 0200   HS NOIESO NOFCMEN
   Word  2: 1E1F   BROWNOUT NOWDT BORV20 NOPUT WDT32768
   Word  3: 0000   NOPBADEN NOLPT1OSC NOMCLR
   Word  4: 00B0   NOSTVREN NODEBUG NOLVP NOXINST BBSIZ4K
   Word  5: C03F   NOPROTECT NOCPD NOCPB
   Word  6: E03F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 403F   NOEBTR NOEBTRB
