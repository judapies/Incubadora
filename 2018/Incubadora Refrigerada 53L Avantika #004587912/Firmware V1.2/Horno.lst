CCS PCH C Compiler, Version 4.104, 5967               20-dic.-18 14:14

               Filename: H:\JP\JP\Laboratorio\Incubadora\2018\Incubadora Refrigerada 53L Avantika #004587912\Firmware V1.2\Horno.lst

               ROM used: 33012 bytes (34%)
                         Largest free fragment is 32768
               RAM used: 1602 (48%) at main() level
                         1660 (50%) worst case
               Stack:    7 worst case (6 in main + 1 for interrupts)

*
00000:  GOTO   4C66
*
00008:  MOVWF  04
0000A:  MOVFF  FD8,05
0000E:  MOVFF  FE0,06
00012:  MOVLB  0
00014:  MOVFF  FE9,0C
00018:  MOVFF  FEA,07
0001C:  MOVFF  FE1,08
00020:  MOVFF  FE2,09
00024:  MOVFF  FD9,0A
00028:  MOVFF  FDA,0B
0002C:  MOVFF  FF3,12
00030:  MOVFF  FF4,13
00034:  MOVFF  FFA,14
00038:  MOVFF  FFB,15
0003C:  MOVFF  00,0E
00040:  MOVFF  01,0F
00044:  MOVFF  02,10
00048:  MOVFF  03,11
0004C:  BTFSS  F9D.0
0004E:  GOTO   0058
00052:  BTFSC  F9E.0
00054:  GOTO   0DC6
00058:  MOVFF  0E,00
0005C:  MOVFF  0F,01
00060:  MOVFF  10,02
00064:  MOVFF  11,03
00068:  MOVFF  0C,FE9
0006C:  MOVFF  07,FEA
00070:  BSF    07.7
00072:  MOVFF  08,FE1
00076:  MOVFF  09,FE2
0007A:  MOVFF  0A,FD9
0007E:  MOVFF  0B,FDA
00082:  MOVFF  12,FF3
00086:  MOVFF  13,FF4
0008A:  MOVFF  14,FFA
0008E:  MOVFF  15,FFB
00092:  MOVF   04,W
00094:  MOVFF  06,FE0
00098:  MOVFF  05,FD8
0009C:  RETFIE 0
.................... /// Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4685.h> 
.................... //////// Standard Header file for the PIC18F4685 device //////////////// 
.................... #device PIC18F4685 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP,NODEBUG,NOSTVREN,NOPUT,NOCPD,NOWRT,NOIESO,NOFCMEN,NOPBADEN,NOWRTC,NOWRTB,NOEBTR,NOEBTRB,NOCPB,NOXINST,NOLPT1OSC,NOMCLR 
.................... #use delay(clock=20000000) 
*
00E5A:  MOVLW  06
00E5C:  MOVWF  FEA
00E5E:  MOVLW  47
00E60:  MOVWF  FE9
00E62:  MOVF   FEF,W
00E64:  BZ    0E80
00E66:  MOVLW  06
00E68:  MOVWF  01
00E6A:  CLRF   00
00E6C:  DECFSZ 00,F
00E6E:  BRA    0E6C
00E70:  DECFSZ 01,F
00E72:  BRA    0E6A
00E74:  MOVLW  7B
00E76:  MOVWF  00
00E78:  DECFSZ 00,F
00E7A:  BRA    0E78
00E7C:  DECFSZ FEF,F
00E7E:  BRA    0E66
00E80:  RETLW  00
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B0   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B1   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B3   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B4   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B5   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
01F90:  BCF    F93.2
01F92:  BSF    F8A.2
....................    output_low(GLCD_E); 
01F94:  BCF    F93.5
01F96:  BCF    F8A.5
....................    output_low(GLCD_CS1); 
01F98:  BCF    F93.0
01F9A:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
01F9C:  BCF    F93.1
01F9E:  BCF    F8A.1
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
01FA0:  BCF    F93.3
01FA2:  BCF    F8A.3
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
01FA4:  MOVLB  6
01FA6:  CLRF   x58
01FA8:  MOVLW  C0
01FAA:  MOVWF  x59
01FAC:  MOVLB  0
01FAE:  RCALL  1E48
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
01FB0:  MOVLW  01
01FB2:  MOVLB  6
01FB4:  MOVWF  x58
01FB6:  MOVLW  C0
01FB8:  MOVWF  x59
01FBA:  MOVLB  0
01FBC:  RCALL  1E48
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
01FBE:  MOVLB  6
01FC0:  CLRF   x58
01FC2:  MOVLW  40
01FC4:  MOVWF  x59
01FC6:  MOVLB  0
01FC8:  RCALL  1E48
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
01FCA:  MOVLW  01
01FCC:  MOVLB  6
01FCE:  MOVWF  x58
01FD0:  MOVLW  40
01FD2:  MOVWF  x59
01FD4:  MOVLB  0
01FD6:  RCALL  1E48
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
01FD8:  MOVLB  6
01FDA:  CLRF   x58
01FDC:  MOVLW  B8
01FDE:  MOVWF  x59
01FE0:  MOVLB  0
01FE2:  RCALL  1E48
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
01FE4:  MOVLW  01
01FE6:  MOVLB  6
01FE8:  MOVWF  x58
01FEA:  MOVLW  B8
01FEC:  MOVWF  x59
01FEE:  MOVLB  0
01FF0:  RCALL  1E48
....................  
....................    if(mode == ON) 
01FF2:  MOVLB  6
01FF4:  DECFSZ x3E,W
01FF6:  BRA    2014
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
01FF8:  CLRF   x58
01FFA:  MOVLW  3F
01FFC:  MOVWF  x59
01FFE:  MOVLB  0
02000:  RCALL  1E48
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
02002:  MOVLW  01
02004:  MOVLB  6
02006:  MOVWF  x58
02008:  MOVLW  3F
0200A:  MOVWF  x59
0200C:  MOVLB  0
0200E:  RCALL  1E48
....................    } 
....................    else 
02010:  BRA    202C
02012:  MOVLB  6
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
02014:  CLRF   x58
02016:  MOVLW  3E
02018:  MOVWF  x59
0201A:  MOVLB  0
0201C:  RCALL  1E48
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
0201E:  MOVLW  01
02020:  MOVLB  6
02022:  MOVWF  x58
02024:  MOVLW  3E
02026:  MOVWF  x59
02028:  MOVLB  0
0202A:  RCALL  1E48
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
0202C:  MOVLB  6
0202E:  CLRF   x46
02030:  MOVLB  0
02032:  RCALL  1E7E
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
02034:  RCALL  1ED8
....................    #endif 
.................... } 
02036:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
01ED8:  MOVLB  6
01EDA:  CLRF   x54
01EDC:  MOVLW  17
01EDE:  MOVWF  x53
....................    p2 = displayData.right; 
01EE0:  MOVLW  02
01EE2:  MOVWF  x56
01EE4:  MOVLW  17
01EE6:  MOVWF  x55
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
01EE8:  CLRF   x51
01EEA:  MOVF   x51,W
01EEC:  SUBLW  07
01EEE:  BNC   1F8C
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
01EF0:  BCF    F93.3
01EF2:  BCF    F8A.3
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
01EF4:  CLRF   x58
01EF6:  MOVLW  40
01EF8:  MOVWF  x59
01EFA:  MOVLB  0
01EFC:  RCALL  1E48
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
01EFE:  MOVLW  01
01F00:  MOVLB  6
01F02:  MOVWF  x58
01F04:  MOVLW  40
01F06:  MOVWF  x59
01F08:  MOVLB  0
01F0A:  RCALL  1E48
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
01F0C:  MOVLB  6
01F0E:  MOVF   x51,W
01F10:  IORLW  B8
01F12:  MOVWF  x57
01F14:  CLRF   x58
01F16:  MOVWF  x59
01F18:  MOVLB  0
01F1A:  RCALL  1E48
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
01F1C:  MOVLB  6
01F1E:  MOVF   x51,W
01F20:  IORLW  B8
01F22:  MOVWF  x57
01F24:  MOVLW  01
01F26:  MOVWF  x58
01F28:  MOVFF  657,659
01F2C:  MOVLB  0
01F2E:  RCALL  1E48
....................       output_high(GLCD_DI);                     // Set for data 
01F30:  BCF    F93.3
01F32:  BSF    F8A.3
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
01F34:  MOVLB  6
01F36:  CLRF   x52
01F38:  MOVF   x52,W
01F3A:  SUBLW  3F
01F3C:  BNC   1F88
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
01F3E:  MOVFF  654,03
01F42:  MOVF   x53,W
01F44:  INCF   x53,F
01F46:  BTFSC  FD8.2
01F48:  INCF   x54,F
01F4A:  MOVWF  FE9
01F4C:  MOVFF  03,FEA
01F50:  MOVFF  FEF,657
01F54:  CLRF   x58
01F56:  MOVFF  657,659
01F5A:  MOVLB  0
01F5C:  RCALL  1E48
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
01F5E:  MOVLB  6
01F60:  MOVFF  656,03
01F64:  MOVF   x55,W
01F66:  INCF   x55,F
01F68:  BTFSC  FD8.2
01F6A:  INCF   x56,F
01F6C:  MOVWF  FE9
01F6E:  MOVFF  03,FEA
01F72:  MOVFF  FEF,657
01F76:  MOVLW  01
01F78:  MOVWF  x58
01F7A:  MOVFF  657,659
01F7E:  MOVLB  0
01F80:  RCALL  1E48
....................       } 
01F82:  MOVLB  6
01F84:  INCF   x52,F
01F86:  BRA    1F38
....................    } 
01F88:  INCF   x51,F
01F8A:  BRA    1EEA
.................... } 
01F8C:  MOVLB  0
01F8E:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
02038:  MOVLB  6
0203A:  CLRF   x78
0203C:  RRCF   x73,W
0203E:  MOVWF  x77
02040:  RRCF   x77,F
02042:  RRCF   x77,F
02044:  MOVLW  1F
02046:  ANDWF  x77,F
....................    temp *= 64; 
02048:  RLCF   x77,F
0204A:  RLCF   x78,F
0204C:  RLCF   x77,F
0204E:  RLCF   x78,F
02050:  RLCF   x77,F
02052:  RLCF   x78,F
02054:  RLCF   x77,F
02056:  RLCF   x78,F
02058:  RLCF   x77,F
0205A:  RLCF   x78,F
0205C:  RLCF   x77,F
0205E:  RLCF   x78,F
02060:  MOVLW  C0
02062:  ANDWF  x77,F
....................    temp += x; 
02064:  MOVF   x72,W
02066:  ADDWF  x77,F
02068:  MOVLW  00
0206A:  ADDWFC x78,F
....................  
....................    if(x > 63) 
0206C:  MOVF   x72,W
0206E:  SUBLW  3F
02070:  BC    208C
....................    { 
....................       p = displayData.right + temp - 64; 
02072:  MOVLW  17
02074:  ADDWF  x77,W
02076:  MOVWF  x79
02078:  MOVLW  02
0207A:  ADDWFC x78,W
0207C:  MOVWF  x7A
0207E:  MOVLW  40
02080:  SUBWF  x79,W
02082:  MOVWF  x75
02084:  MOVLW  00
02086:  SUBWFB x7A,W
02088:  MOVWF  x76
....................    } 
....................    else 
0208A:  BRA    2098
....................    { 
....................       p = displayData.left + temp; 
0208C:  MOVLW  17
0208E:  ADDWF  x77,W
02090:  MOVWF  x75
02092:  MOVLW  00
02094:  ADDWFC x78,W
02096:  MOVWF  x76
....................    } 
....................  
....................    if(color) 
02098:  MOVF   x74,F
0209A:  BZ    20C6
....................    { 
....................       bit_set(*p, y%8); 
0209C:  MOVFF  676,03
020A0:  MOVFF  675,FE9
020A4:  MOVFF  676,FEA
020A8:  MOVF   x73,W
020AA:  ANDLW  07
020AC:  MOVWF  x79
020AE:  MOVLW  01
020B0:  MOVWF  00
020B2:  MOVF   x79,W
020B4:  MOVWF  01
020B6:  BZ    20C0
020B8:  BCF    FD8.0
020BA:  RLCF   00,F
020BC:  DECFSZ 01,F
020BE:  BRA    20B8
020C0:  MOVF   00,W
020C2:  IORWF  FEF,F
....................    } 
....................    else 
020C4:  BRA    20F0
....................    { 
....................       bit_clear(*p, y%8); 
020C6:  MOVFF  676,03
020CA:  MOVFF  675,FE9
020CE:  MOVFF  676,FEA
020D2:  MOVF   x73,W
020D4:  ANDLW  07
020D6:  MOVWF  x79
020D8:  MOVLW  01
020DA:  MOVWF  00
020DC:  MOVF   x79,W
020DE:  MOVWF  01
020E0:  BZ    20EA
020E2:  BCF    FD8.0
020E4:  RLCF   00,F
020E6:  DECFSZ 01,F
020E8:  BRA    20E2
020EA:  MOVF   00,W
020EC:  XORLW  FF
020EE:  ANDWF  FEF,F
....................    } 
.................... } 
020F0:  MOVLB  0
020F2:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
01E7E:  MOVLB  6
01E80:  CLRF   x49
01E82:  MOVLW  17
01E84:  MOVWF  x48
....................    p2 = displayData.right; 
01E86:  MOVLW  02
01E88:  MOVWF  x4B
01E8A:  MOVLW  17
01E8C:  MOVWF  x4A
....................    data = 0xFF * color; 
01E8E:  MOVF   x46,W
01E90:  MULLW  FF
01E92:  MOVFF  FF3,647
....................  
....................    for(i=0; i<512; ++i) 
01E96:  CLRF   x4D
01E98:  CLRF   x4C
01E9A:  MOVF   x4D,W
01E9C:  SUBLW  01
01E9E:  BNC   1ED4
....................    { 
....................       *p1++ = data; 
01EA0:  MOVFF  649,03
01EA4:  MOVF   x48,W
01EA6:  INCF   x48,F
01EA8:  BTFSC  FD8.2
01EAA:  INCF   x49,F
01EAC:  MOVWF  FE9
01EAE:  MOVFF  03,FEA
01EB2:  MOVFF  647,FEF
....................       *p2++ = data; 
01EB6:  MOVFF  64B,03
01EBA:  MOVF   x4A,W
01EBC:  INCF   x4A,F
01EBE:  BTFSC  FD8.2
01EC0:  INCF   x4B,F
01EC2:  MOVWF  FE9
01EC4:  MOVFF  03,FEA
01EC8:  MOVFF  647,FEF
....................    } 
01ECC:  INCF   x4C,F
01ECE:  BTFSC  FD8.2
01ED0:  INCF   x4D,F
01ED2:  BRA    1E9A
.................... } 
01ED4:  MOVLB  0
01ED6:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
01E48:  MOVLB  6
01E4A:  MOVF   x58,F
01E4C:  BZ    1E54
....................       output_high(GLCD_CS2); 
01E4E:  BCF    F93.1
01E50:  BSF    F8A.1
....................    else 
01E52:  BRA    1E58
....................       output_high(GLCD_CS1); 
01E54:  BCF    F93.0
01E56:  BSF    F8A.0
....................  
....................    output_low(GLCD_RW);       // Set for writing 
01E58:  BCF    F93.4
01E5A:  BCF    F8A.4
....................    output_d(data);            // Put the data on the port 
01E5C:  CLRF   F95
01E5E:  MOVFF  659,F8C
....................    delay_cycles(1); 
01E62:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
01E64:  BCF    F93.5
01E66:  BSF    F8A.5
....................    delay_cycles(5); 
01E68:  BRA    1E6A
01E6A:  BRA    1E6C
01E6C:  NOP   
....................    output_low(GLCD_E); 
01E6E:  BCF    F93.5
01E70:  BCF    F8A.5
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
01E72:  BCF    F93.0
01E74:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
01E76:  BCF    F93.1
01E78:  BCF    F8A.1
.................... } 
01E7A:  MOVLB  0
01E7C:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(1); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(4); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
022AC:  MOVLW  01
022AE:  MOVLB  6
022B0:  MOVWF  x6B
022B2:  MOVWF  x6C
022B4:  CLRF   x71
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
022B6:  MOVF   x62,W
022B8:  SUBWF  x64,W
022BA:  MOVWF  x72
022BC:  MOVF   x72,W
022BE:  BTFSS  x72.7
022C0:  BRA    22C8
022C2:  MOVLW  00
022C4:  BSF    FD8.0
022C6:  SUBFWB x72,W
022C8:  CLRF   03
022CA:  MOVWF  x69
022CC:  MOVFF  03,66A
....................    dy = abs((signed int8)(y2 - y1)); 
022D0:  MOVF   x63,W
022D2:  SUBWF  x65,W
022D4:  MOVWF  x72
022D6:  MOVF   x72,W
022D8:  BTFSS  x72.7
022DA:  BRA    22E2
022DC:  MOVLW  00
022DE:  BSF    FD8.0
022E0:  SUBFWB x72,W
022E2:  CLRF   03
022E4:  MOVWF  x67
022E6:  MOVFF  03,668
....................    #endif 
....................  
....................    if(x1 > x2) 
022EA:  MOVF   x62,W
022EC:  SUBWF  x64,W
022EE:  BC    22F4
....................       addx = -1; 
022F0:  MOVLW  FF
022F2:  MOVWF  x6B
....................    if(y1 > y2) 
022F4:  MOVF   x63,W
022F6:  SUBWF  x65,W
022F8:  BC    22FE
....................       addy = -1; 
022FA:  MOVLW  FF
022FC:  MOVWF  x6C
....................  
....................    if(dx >= dy) 
022FE:  MOVF   x68,W
02300:  SUBWF  x6A,W
02302:  BNC   237A
02304:  BNZ   230C
02306:  MOVF   x67,W
02308:  SUBWF  x69,W
0230A:  BNC   237A
....................    { 
....................       dy *= 2; 
0230C:  BCF    FD8.0
0230E:  RLCF   x67,F
02310:  RLCF   x68,F
....................       P = dy - dx; 
02312:  MOVF   x69,W
02314:  SUBWF  x67,W
02316:  MOVWF  00
02318:  MOVF   x6A,W
0231A:  SUBWFB x68,W
0231C:  MOVFF  00,66D
02320:  MOVWF  x6E
....................       diff = P - dx; 
02322:  MOVF   x69,W
02324:  SUBWF  x6D,W
02326:  MOVWF  x6F
02328:  MOVF   x6A,W
0232A:  SUBWFB x6E,W
0232C:  MOVWF  x70
....................  
....................       for(; i<=dx; ++i) 
0232E:  MOVF   x6A,F
02330:  BNZ   2338
02332:  MOVF   x71,W
02334:  SUBWF  x69,W
02336:  BNC   2378
....................       { 
....................          glcd_pixel(x1, y1, color); 
02338:  MOVFF  662,672
0233C:  MOVFF  663,673
02340:  MOVFF  666,674
02344:  MOVLB  0
02346:  RCALL  2038
....................  
....................          if(P < 0) 
02348:  MOVLB  6
0234A:  BTFSC  x6E.7
0234C:  BRA    2350
0234E:  BRA    2360
....................          { 
....................             P  += dy; 
02350:  MOVF   x67,W
02352:  ADDWF  x6D,F
02354:  MOVF   x68,W
02356:  ADDWFC x6E,F
....................             x1 += addx; 
02358:  MOVF   x6B,W
0235A:  ADDWF  x62,W
0235C:  MOVWF  x62
....................          } 
....................          else 
0235E:  BRA    2374
....................          { 
....................             P  += diff; 
02360:  MOVF   x6F,W
02362:  ADDWF  x6D,F
02364:  MOVF   x70,W
02366:  ADDWFC x6E,F
....................             x1 += addx; 
02368:  MOVF   x6B,W
0236A:  ADDWF  x62,W
0236C:  MOVWF  x62
....................             y1 += addy; 
0236E:  MOVF   x6C,W
02370:  ADDWF  x63,W
02372:  MOVWF  x63
....................          } 
....................       } 
02374:  INCF   x71,F
02376:  BRA    232E
....................    } 
....................    else 
02378:  BRA    23E6
....................    { 
....................       dx *= 2; 
0237A:  BCF    FD8.0
0237C:  RLCF   x69,F
0237E:  RLCF   x6A,F
....................       P = dx - dy; 
02380:  MOVF   x67,W
02382:  SUBWF  x69,W
02384:  MOVWF  00
02386:  MOVF   x68,W
02388:  SUBWFB x6A,W
0238A:  MOVFF  00,66D
0238E:  MOVWF  x6E
....................       diff = P - dy; 
02390:  MOVF   x67,W
02392:  SUBWF  x6D,W
02394:  MOVWF  x6F
02396:  MOVF   x68,W
02398:  SUBWFB x6E,W
0239A:  MOVWF  x70
....................  
....................       for(; i<=dy; ++i) 
0239C:  MOVF   x68,F
0239E:  BNZ   23A6
023A0:  MOVF   x71,W
023A2:  SUBWF  x67,W
023A4:  BNC   23E6
....................       { 
....................          glcd_pixel(x1, y1, color); 
023A6:  MOVFF  662,672
023AA:  MOVFF  663,673
023AE:  MOVFF  666,674
023B2:  MOVLB  0
023B4:  RCALL  2038
....................  
....................          if(P < 0) 
023B6:  MOVLB  6
023B8:  BTFSC  x6E.7
023BA:  BRA    23BE
023BC:  BRA    23CE
....................          { 
....................             P  += dx; 
023BE:  MOVF   x69,W
023C0:  ADDWF  x6D,F
023C2:  MOVF   x6A,W
023C4:  ADDWFC x6E,F
....................             y1 += addy; 
023C6:  MOVF   x6C,W
023C8:  ADDWF  x63,W
023CA:  MOVWF  x63
....................          } 
....................          else 
023CC:  BRA    23E2
....................          { 
....................             P  += diff; 
023CE:  MOVF   x6F,W
023D0:  ADDWF  x6D,F
023D2:  MOVF   x70,W
023D4:  ADDWFC x6E,F
....................             x1 += addx; 
023D6:  MOVF   x6B,W
023D8:  ADDWF  x62,W
023DA:  MOVWF  x62
....................             y1 += addy; 
023DC:  MOVF   x6C,W
023DE:  ADDWF  x63,W
023E0:  MOVWF  x63
....................          } 
....................       } 
023E2:  INCF   x71,F
023E4:  BRA    239C
....................    } 
.................... } 
023E6:  MOVLB  0
023E8:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
023EA:  MOVLB  6
023EC:  MOVF   x5B,F
023EE:  BZ    244C
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
023F0:  MOVF   x59,W
023F2:  SUBWF  x57,W
023F4:  BC    2400
....................       { 
....................          xmin = x1; 
023F6:  MOVFF  657,65E
....................          xmax = x2; 
023FA:  MOVFF  659,65F
....................       } 
....................       else 
023FE:  BRA    2408
....................       { 
....................          xmin = x2; 
02400:  MOVFF  659,65E
....................          xmax = x1; 
02404:  MOVFF  657,65F
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
02408:  MOVF   x5A,W
0240A:  SUBWF  x58,W
0240C:  BC    2418
....................       { 
....................          ymin = y1; 
0240E:  MOVFF  658,660
....................          ymax = y2; 
02412:  MOVFF  65A,661
....................       } 
....................       else 
02416:  BRA    2420
....................       { 
....................          ymin = y2; 
02418:  MOVFF  65A,660
....................          ymax = y1; 
0241C:  MOVFF  658,661
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
02420:  MOVF   x5E,W
02422:  SUBWF  x5F,W
02424:  BNC   244A
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
02426:  MOVFF  660,65D
0242A:  MOVF   x5D,W
0242C:  SUBWF  x61,W
0242E:  BNC   2446
....................          { 
....................             glcd_pixel(xmin, i, color); 
02430:  MOVFF  65E,672
02434:  MOVFF  65D,673
02438:  MOVFF  65C,674
0243C:  MOVLB  0
0243E:  RCALL  2038
....................          } 
02440:  MOVLB  6
02442:  INCF   x5D,F
02444:  BRA    242A
....................       } 
02446:  INCF   x5E,F
02448:  BRA    2420
....................    } 
....................    else 
0244A:  BRA    24A8
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
0244C:  MOVFF  657,662
02450:  MOVFF  658,663
02454:  MOVFF  659,664
02458:  MOVFF  658,665
0245C:  MOVFF  65C,666
02460:  MOVLB  0
02462:  RCALL  22AC
....................       glcd_line(x1, y2, x2, y2, color); 
02464:  MOVFF  657,662
02468:  MOVFF  65A,663
0246C:  MOVFF  659,664
02470:  MOVFF  65A,665
02474:  MOVFF  65C,666
02478:  RCALL  22AC
....................       glcd_line(x1, y1, x1, y2, color); 
0247A:  MOVFF  657,662
0247E:  MOVFF  658,663
02482:  MOVFF  657,664
02486:  MOVFF  65A,665
0248A:  MOVFF  65C,666
0248E:  RCALL  22AC
....................       glcd_line(x2, y1, x2, y2, color); 
02490:  MOVFF  659,662
02494:  MOVFF  658,663
02498:  MOVFF  659,664
0249C:  MOVFF  65A,665
024A0:  MOVFF  65C,666
024A4:  RCALL  22AC
024A6:  MOVLB  6
....................    } 
.................... } 
024A8:  MOVLB  0
024AA:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
0353A:  MOVLB  6
0353C:  CLRF   x58
....................    b = radius; 
0353E:  MOVFF  655,659
....................    P = 1 - radius; 
03542:  MOVLW  01
03544:  BSF    FD8.0
03546:  SUBFWB x55,W
03548:  MOVWF  x5A
....................  
....................    do 
....................    { 
....................       if(fill) 
0354A:  MOVF   x56,F
0354C:  BZ    3618
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
0354E:  MOVF   x58,W
03550:  SUBWF  x53,W
03552:  MOVWF  x5B
03554:  MOVF   x59,W
03556:  ADDWF  x54,W
03558:  MOVWF  x5C
0355A:  MOVF   x58,W
0355C:  ADDWF  x53,W
0355E:  MOVWF  x5D
03560:  MOVF   x59,W
03562:  ADDWF  x54,W
03564:  MOVWF  x5E
03566:  MOVFF  65B,662
0356A:  MOVFF  65C,663
0356E:  MOVFF  65D,664
03572:  MOVWF  x65
03574:  MOVFF  657,666
03578:  MOVLB  0
0357A:  CALL   22AC
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
0357E:  MOVLB  6
03580:  MOVF   x58,W
03582:  SUBWF  x53,W
03584:  MOVWF  x5B
03586:  MOVF   x59,W
03588:  SUBWF  x54,W
0358A:  MOVWF  x5C
0358C:  MOVF   x58,W
0358E:  ADDWF  x53,W
03590:  MOVWF  x5D
03592:  MOVF   x59,W
03594:  SUBWF  x54,W
03596:  MOVWF  x5E
03598:  MOVFF  65B,662
0359C:  MOVFF  65C,663
035A0:  MOVFF  65D,664
035A4:  MOVWF  x65
035A6:  MOVFF  657,666
035AA:  MOVLB  0
035AC:  CALL   22AC
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
035B0:  MOVLB  6
035B2:  MOVF   x59,W
035B4:  SUBWF  x53,W
035B6:  MOVWF  x5B
035B8:  MOVF   x58,W
035BA:  ADDWF  x54,W
035BC:  MOVWF  x5C
035BE:  MOVF   x59,W
035C0:  ADDWF  x53,W
035C2:  MOVWF  x5D
035C4:  MOVF   x58,W
035C6:  ADDWF  x54,W
035C8:  MOVWF  x5E
035CA:  MOVFF  65B,662
035CE:  MOVFF  65C,663
035D2:  MOVFF  65D,664
035D6:  MOVWF  x65
035D8:  MOVFF  657,666
035DC:  MOVLB  0
035DE:  CALL   22AC
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
035E2:  MOVLB  6
035E4:  MOVF   x59,W
035E6:  SUBWF  x53,W
035E8:  MOVWF  x5B
035EA:  MOVF   x58,W
035EC:  SUBWF  x54,W
035EE:  MOVWF  x5C
035F0:  MOVF   x59,W
035F2:  ADDWF  x53,W
035F4:  MOVWF  x5D
035F6:  MOVF   x58,W
035F8:  SUBWF  x54,W
035FA:  MOVWF  x5E
035FC:  MOVFF  65B,662
03600:  MOVFF  65C,663
03604:  MOVFF  65D,664
03608:  MOVWF  x65
0360A:  MOVFF  657,666
0360E:  MOVLB  0
03610:  CALL   22AC
....................       } 
....................       else 
03614:  BRA    3706
03616:  MOVLB  6
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
03618:  MOVF   x53,W
0361A:  ADDWF  x58,W
0361C:  MOVWF  x5B
0361E:  MOVF   x54,W
03620:  ADDWF  x59,W
03622:  MOVWF  x5C
03624:  MOVFF  65B,672
03628:  MOVWF  x73
0362A:  MOVFF  657,674
0362E:  MOVLB  0
03630:  CALL   2038
....................          glcd_pixel(b+x, a+y, color); 
03634:  MOVLB  6
03636:  MOVF   x53,W
03638:  ADDWF  x59,W
0363A:  MOVWF  x5B
0363C:  MOVF   x54,W
0363E:  ADDWF  x58,W
03640:  MOVWF  x5C
03642:  MOVFF  65B,672
03646:  MOVWF  x73
03648:  MOVFF  657,674
0364C:  MOVLB  0
0364E:  CALL   2038
....................          glcd_pixel(x-a, b+y, color); 
03652:  MOVLB  6
03654:  MOVF   x58,W
03656:  SUBWF  x53,W
03658:  MOVWF  x5B
0365A:  MOVF   x54,W
0365C:  ADDWF  x59,W
0365E:  MOVWF  x5C
03660:  MOVFF  65B,672
03664:  MOVWF  x73
03666:  MOVFF  657,674
0366A:  MOVLB  0
0366C:  CALL   2038
....................          glcd_pixel(x-b, a+y, color); 
03670:  MOVLB  6
03672:  MOVF   x59,W
03674:  SUBWF  x53,W
03676:  MOVWF  x5B
03678:  MOVF   x54,W
0367A:  ADDWF  x58,W
0367C:  MOVWF  x5C
0367E:  MOVFF  65B,672
03682:  MOVWF  x73
03684:  MOVFF  657,674
03688:  MOVLB  0
0368A:  CALL   2038
....................          glcd_pixel(b+x, y-a, color); 
0368E:  MOVLB  6
03690:  MOVF   x53,W
03692:  ADDWF  x59,W
03694:  MOVWF  x5B
03696:  MOVF   x58,W
03698:  SUBWF  x54,W
0369A:  MOVWF  x5C
0369C:  MOVFF  65B,672
036A0:  MOVWF  x73
036A2:  MOVFF  657,674
036A6:  MOVLB  0
036A8:  CALL   2038
....................          glcd_pixel(a+x, y-b, color); 
036AC:  MOVLB  6
036AE:  MOVF   x53,W
036B0:  ADDWF  x58,W
036B2:  MOVWF  x5B
036B4:  MOVF   x59,W
036B6:  SUBWF  x54,W
036B8:  MOVWF  x5C
036BA:  MOVFF  65B,672
036BE:  MOVWF  x73
036C0:  MOVFF  657,674
036C4:  MOVLB  0
036C6:  CALL   2038
....................          glcd_pixel(x-a, y-b, color); 
036CA:  MOVLB  6
036CC:  MOVF   x58,W
036CE:  SUBWF  x53,W
036D0:  MOVWF  x5B
036D2:  MOVF   x59,W
036D4:  SUBWF  x54,W
036D6:  MOVWF  x5C
036D8:  MOVFF  65B,672
036DC:  MOVWF  x73
036DE:  MOVFF  657,674
036E2:  MOVLB  0
036E4:  CALL   2038
....................          glcd_pixel(x-b, y-a, color); 
036E8:  MOVLB  6
036EA:  MOVF   x59,W
036EC:  SUBWF  x53,W
036EE:  MOVWF  x5B
036F0:  MOVF   x58,W
036F2:  SUBWF  x54,W
036F4:  MOVWF  x5C
036F6:  MOVFF  65B,672
036FA:  MOVWF  x73
036FC:  MOVFF  657,674
03700:  MOVLB  0
03702:  CALL   2038
....................       } 
....................  
....................       if(P < 0) 
03706:  MOVLB  6
03708:  BTFSC  x5A.7
0370A:  BRA    370E
0370C:  BRA    372A
....................          P += 3 + 2 * a++; 
0370E:  MOVF   x58,W
03710:  INCF   x58,F
03712:  MOVWF  x5B
03714:  MOVLW  02
03716:  MOVWF  x5C
03718:  MOVFF  65B,65D
0371C:  MOVLB  0
0371E:  RCALL  34EC
03720:  MOVF   01,W
03722:  ADDLW  03
03724:  MOVLB  6
03726:  ADDWF  x5A,F
....................       else 
03728:  BRA    374C
....................          P += 5 + 2 * (a++ - b--); 
0372A:  MOVF   x58,W
0372C:  INCF   x58,F
0372E:  MOVWF  x5B
03730:  MOVF   x59,W
03732:  DECF   x59,F
03734:  SUBWF  x5B,W
03736:  MOVWF  x5B
03738:  MOVLW  02
0373A:  MOVWF  x5C
0373C:  MOVFF  65B,65D
03740:  MOVLB  0
03742:  RCALL  34EC
03744:  MOVF   01,W
03746:  ADDLW  05
03748:  MOVLB  6
0374A:  ADDWF  x5A,F
....................     } while(a <= b); 
0374C:  MOVF   x58,W
0374E:  XORLW  80
03750:  MOVWF  00
03752:  MOVF   x59,W
03754:  XORLW  80
03756:  SUBWF  00,W
03758:  BTFSC  FD8.2
0375A:  BRA    354A
0375C:  BTFSS  FD8.0
0375E:  BRA    354A
.................... } 
03760:  MOVLB  0
03762:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
020F4:  MOVFF  65A,03
020F8:  MOVLB  6
020FA:  MOVFF  659,FE9
020FE:  MOVFF  65A,FEA
02102:  MOVF   FEF,F
02104:  BTFSC  FD8.2
02106:  BRA    22A8
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
02108:  MOVFF  65A,03
0210C:  MOVFF  659,FE9
02110:  MOVFF  65A,FEA
02114:  MOVF   FEF,W
02116:  SUBLW  52
02118:  BNC   2168
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
0211A:  MOVFF  65A,03
0211E:  MOVFF  659,FE9
02122:  MOVFF  65A,FEA
02126:  MOVLW  20
02128:  SUBWF  FEF,W
0212A:  MULLW  05
0212C:  MOVF   FF3,W
0212E:  CLRF   03
02130:  MOVWF  x66
02132:  MOVLW  06
02134:  MOVWF  FEA
02136:  MOVLW  61
02138:  MOVWF  FE9
0213A:  CLRF   x6A
0213C:  MOVFF  666,669
02140:  MOVFF  FF2,667
02144:  BCF    FF2.7
02146:  MOVLW  05
02148:  MOVWF  01
0214A:  CLRF   FF7
0214C:  MOVF   x66,W
0214E:  MOVLB  0
02150:  CALL   009E
02154:  TBLRD*-
02156:  TBLRD*+
02158:  MOVFF  FF5,FEE
0215C:  DECFSZ 01,F
0215E:  BRA    2156
02160:  MOVLB  6
02162:  BTFSC  x67.7
02164:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
02166:  BRA    21D2
02168:  MOVFF  65A,03
0216C:  MOVFF  659,FE9
02170:  MOVFF  65A,FEA
02174:  MOVF   FEF,W
02176:  SUBLW  7E
02178:  BNC   21C8
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
0217A:  MOVFF  65A,03
0217E:  MOVFF  659,FE9
02182:  MOVFF  65A,FEA
02186:  MOVLW  53
02188:  SUBWF  FEF,W
0218A:  MULLW  05
0218C:  MOVF   FF3,W
0218E:  CLRF   03
02190:  MOVWF  x66
02192:  MOVLW  06
02194:  MOVWF  FEA
02196:  MOVLW  61
02198:  MOVWF  FE9
0219A:  CLRF   x6A
0219C:  MOVFF  666,669
021A0:  MOVFF  FF2,667
021A4:  BCF    FF2.7
021A6:  MOVLW  05
021A8:  MOVWF  01
021AA:  CLRF   FF7
021AC:  MOVF   x66,W
021AE:  MOVLB  0
021B0:  CALL   01BC
021B4:  TBLRD*-
021B6:  TBLRD*+
021B8:  MOVFF  FF5,FEE
021BC:  DECFSZ 01,F
021BE:  BRA    21B6
021C0:  MOVLB  6
021C2:  BTFSC  x67.7
021C4:  BSF    FF2.7
....................       else 
021C6:  BRA    21D2
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
021C8:  CLRF   x61
021CA:  CLRF   x62
021CC:  CLRF   x63
021CE:  CLRF   x64
021D0:  CLRF   x65
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
021D2:  MOVFF  65A,03
021D6:  MOVF   x59,W
021D8:  MOVWF  FE9
021DA:  MOVFF  03,FEA
021DE:  MOVF   FEF,W
021E0:  XORLW  0A
021E2:  MOVLB  0
021E4:  BZ    21EC
021E6:  XORLW  07
021E8:  BZ    21FC
021EA:  BRA    2202
....................          case '\n': 
....................             y += 7*size + 1; 
021EC:  MOVLB  6
021EE:  MOVF   x5B,W
021F0:  MULLW  07
021F2:  MOVF   FF3,W
021F4:  ADDLW  01
021F6:  ADDWF  x58,F
....................             continue; 
021F8:  BRA    229A
021FA:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
021FC:  MOVLB  6
021FE:  CLRF   x57
....................             continue; 
02200:  BRA    229A
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
02202:  MOVLB  6
02204:  MOVF   x5B,W
02206:  MULLW  05
02208:  MOVF   FF3,W
0220A:  ADDWF  x57,W
0220C:  SUBLW  7F
0220E:  BC    221C
....................       { 
....................          x = 0;                           // Set x at far left position 
02210:  CLRF   x57
....................          y += 7*size + 1;                 // Set y at next position down 
02212:  MOVF   x5B,W
02214:  MULLW  07
02216:  MOVF   FF3,W
02218:  ADDLW  01
0221A:  ADDWF  x58,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
0221C:  CLRF   x5D
0221E:  MOVF   x5D,W
02220:  SUBLW  04
02222:  BNC   229A
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
02224:  CLRF   x5E
02226:  MOVF   x5E,W
02228:  SUBLW  06
0222A:  BNC   2292
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
0222C:  CLRF   03
0222E:  MOVF   x5D,W
02230:  ADDLW  61
02232:  MOVWF  FE9
02234:  MOVLW  06
02236:  ADDWFC 03,W
02238:  MOVWF  FEA
0223A:  MOVFF  FEF,666
0223E:  MOVFF  666,00
02242:  MOVF   x5E,W
02244:  MOVWF  01
02246:  BZ    2250
02248:  BCF    FD8.0
0224A:  RRCF   00,F
0224C:  DECFSZ 01,F
0224E:  BRA    2248
02250:  BTFSS  00.0
02252:  BRA    228E
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
02254:  CLRF   x5F
02256:  MOVF   x5B,W
02258:  SUBWF  x5F,W
0225A:  BC    228E
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
0225C:  CLRF   x60
0225E:  MOVF   x5B,W
02260:  SUBWF  x60,W
02262:  BC    228A
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
02264:  MOVF   x60,W
02266:  ADDWF  x57,W
02268:  MOVWF  x66
0226A:  MOVF   x5E,W
0226C:  MULWF  x5B
0226E:  MOVF   FF3,W
02270:  ADDWF  x58,W
02272:  ADDWF  x5F,W
02274:  MOVWF  x67
02276:  MOVFF  666,672
0227A:  MOVWF  x73
0227C:  MOVFF  65C,674
02280:  MOVLB  0
02282:  RCALL  2038
....................                   } 
02284:  MOVLB  6
02286:  INCF   x60,F
02288:  BRA    225E
....................                } 
0228A:  INCF   x5F,F
0228C:  BRA    2256
....................             } 
....................          } 
0228E:  INCF   x5E,F
02290:  BRA    2226
....................       } 
02292:  INCF   x5D,F
02294:  MOVF   x5B,W
02296:  ADDWF  x57,F
02298:  BRA    221E
....................    } 
0229A:  INCF   x59,F
0229C:  BTFSC  FD8.2
0229E:  INCF   x5A,F
022A0:  INCF   x57,F
022A2:  MOVLB  0
022A4:  BRA    20F4
022A6:  MOVLB  6
.................... } 
022A8:  MOVLB  0
022AA:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Horno [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x00, 0x00, 0x0E, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x02, 0x00, 0x0E, 
.................... 0x60, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x05, 0x00, 0x0E, 
.................... 0x70, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x02, 0x00, 0x0E, 
.................... 0x60, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xE1, 0xC0, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x01, 0x80, 0x60, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x78, 0x10, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x06, 0x7C, 0x18, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0x7C, 0x08, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x3C, 0x04, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x10, 0x04, 0x0E, 
.................... 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x0C, 0xE4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x2D, 0xF4, 0x0E, 
.................... 0x02, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x63, 0xF4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0xF1, 0xE4, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x70, 0x10, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x30, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xC0, 0xC0, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x7F, 0x80, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
.................... // Definición de teclado - NO 
.................... #define   UP            !input(PIN_A5) 
.................... #define   DOWN          !input(PIN_E0) 
.................... #define   RIGHT         !input(PIN_E1) 
.................... #define   LEFT          !input(PIN_E2) 
....................  
.................... #define   DOOR          input(PIN_A3) 
.................... #define   TERM          input(PIN_A4) 
....................  
....................  
.................... // Definición de Salidas 
.................... #define   Buzzer_on         output_bit(PIN_B7,1) 
.................... #define   Buzzer_off        output_bit(PIN_B7,0) 
.................... #define   SSR_on            output_bit(PIN_C2,1) 
.................... #define   SSR_off           output_bit(PIN_C2,0) 
.................... #define   Rele1_on          output_bit(PIN_C3,1) 
.................... #define   Rele1_off         output_bit(PIN_C3,0) 
.................... #define   Rele2_on          output_bit(PIN_C4,1) 
.................... #define   Rele2_off         output_bit(PIN_C4,0) 
.................... #define   Rele3_on          output_bit(PIN_C5,1) 
.................... #define   Rele3_off         output_bit(PIN_C5,0) 
....................  
.................... float promedio[90]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float X[2]={0.0,0.0}; 
.................... short Desconectado=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,Infinito=0,Finalizo=0,flag_clear=0; 
.................... int8 h=0,l=0,Ajuste=0,Ajusten=0,MediaMovil=10,tiemporecta=0,flag_ganancia=0,Velocidad=3,Lectura2=0,Enfria=0,Controlando=0,Ajusto=10; 
.................... short visual=1,Lectura=0,flag_ajuste=0,flag_ajuste2=0; 
.................... short flag_clear2=0,flag_clear3=0,flag_tiempocalentamiento=0,flag_display=0,flag_setpoint=0; 
.................... int8 y=0,tiemporeset=0,n=0; 
.................... int8 Menu=0, unidad=1,i=0,Pausa=0,TiempoControl=0; 
.................... int8 Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,decimal=0,entero=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,tinicio=0,tiempocalentamiento=0,tiemposetpoint=0,Tp=0,Tc=0; 
.................... float Potencia=0.0,Tpulsomin=0.0,Gananciamax=0.0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float V0=0.0,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=2.0,GananciaR=2.0,desvio=0.3,Coeficiente=44.5; 
.................... float Aumento=0.0,Temperatura=0.0,Saturacion=10.0,TpulsoMax=0.0,Setpoint=0,Temperatura1=0,Temperatura2=0,Temperatura3=0,Temporal=0.0; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... #include "Funciones.h" 
.................... void ActualizaRecta(){ 
....................    X[y]=Temperatura; 
*
04214:  MOVLB  5
04216:  MOVF   x95,W
04218:  MULLW  04
0421A:  MOVF   FF3,W
0421C:  CLRF   03
0421E:  ADDLW  7F
04220:  MOVWF  FE9
04222:  MOVLW  05
04224:  ADDWFC 03,W
04226:  MOVWF  FEA
04228:  MOVFF  5FE,FEF
0422C:  MOVFF  5FF,FEC
04230:  MOVFF  600,FEC
04234:  MOVFF  601,FEC
....................    y++; 
04238:  INCF   x95,F
....................    if(y>=2) 
0423A:  MOVF   x95,W
0423C:  SUBLW  01
0423E:  BC    427C
....................    { 
....................       y=0; 
04240:  CLRF   x95
....................       Aumento=X[1]-X[0]; 
04242:  BSF    FD8.1
04244:  MOVFF  586,646
04248:  MOVFF  585,645
0424C:  MOVFF  584,644
04250:  MOVFF  583,643
04254:  MOVFF  582,64A
04258:  MOVFF  581,649
0425C:  MOVFF  580,648
04260:  MOVFF  57F,647
04264:  MOVLB  0
04266:  CALL   1038
0426A:  MOVFF  03,5FD
0426E:  MOVFF  02,5FC
04272:  MOVFF  01,5FB
04276:  MOVFF  00,5FA
0427A:  MOVLB  5
....................    } 
.................... } 
0427C:  MOVLB  0
0427E:  GOTO   428E (RETURN)
....................  
.................... // Funcion para conversor analogo-digital 
.................... float sensores(int x){ 
.................... float y;set_adc_channel(x);delay_ms(1);y=read_adc();return (y); 
*
025A6:  MOVLB  6
025A8:  RLCF   x3F,W
025AA:  MOVWF  00
025AC:  RLCF   00,F
025AE:  MOVLW  FC
025B0:  ANDWF  00,F
025B2:  MOVFF  00,01
025B6:  MOVF   FC2,W
025B8:  ANDLW  C3
025BA:  IORWF  00,W
025BC:  MOVWF  FC2
025BE:  MOVLW  01
025C0:  MOVWF  x47
025C2:  MOVLB  0
025C4:  CALL   0E5A
025C8:  BSF    FC2.1
025CA:  BTFSC  FC2.1
025CC:  BRA    25CA
025CE:  MOVFF  FC4,645
025D2:  MOVFF  FC3,644
025D6:  MOVLB  0
025D8:  CALL   0EA4
025DC:  MOVFF  03,643
025E0:  MOVFF  02,642
025E4:  MOVFF  01,641
025E8:  MOVFF  00,640
025EC:  MOVFF  640,00
025F0:  MOVFF  641,01
025F4:  MOVFF  642,02
025F8:  MOVFF  643,03
.................... } 
025FC:  GOTO   272A (RETURN)
.................... float Leer_Sensor(int media) 
.................... { 
....................    Prom=0.0; 
*
02718:  MOVLB  5
0271A:  CLRF   xE1
0271C:  CLRF   xE0
0271E:  CLRF   xDF
02720:  CLRF   xDE
....................    V0 = sensores(0);   //Lectura de Divisor de Voltaje de PT100 con resistencia de 6.18k (+-2%) 
02722:  MOVLB  6
02724:  CLRF   x3F
02726:  MOVLB  0
02728:  BRA    25A6
0272A:  MOVFF  03,5D1
0272E:  MOVFF  02,5D0
02732:  MOVFF  01,5CF
02736:  MOVFF  00,5CE
....................    Temperature=(0.1272*V0)-25.002; 
0273A:  MOVLW  B8
0273C:  MOVLB  6
0273E:  MOVWF  x61
02740:  MOVLW  40
02742:  MOVWF  x60
02744:  MOVLW  02
02746:  MOVWF  x5F
02748:  MOVLW  7C
0274A:  MOVWF  x5E
0274C:  MOVFF  5D1,665
02750:  MOVFF  5D0,664
02754:  MOVFF  5CF,663
02758:  MOVFF  5CE,662
0275C:  MOVLB  0
0275E:  RCALL  2600
02760:  MOVFF  00,63F
02764:  MOVFF  01,640
02768:  MOVFF  02,641
0276C:  MOVFF  03,642
02770:  BSF    FD8.1
02772:  MOVFF  03,646
02776:  MOVFF  02,645
0277A:  MOVFF  01,644
0277E:  MOVFF  00,643
02782:  MOVLW  19
02784:  MOVLB  6
02786:  MOVWF  x4A
02788:  MOVLW  04
0278A:  MOVWF  x49
0278C:  MOVLW  48
0278E:  MOVWF  x48
02790:  MOVLW  83
02792:  MOVWF  x47
02794:  MOVLB  0
02796:  CALL   1038
0279A:  MOVFF  03,5E5
0279E:  MOVFF  02,5E4
027A2:  MOVFF  01,5E3
027A6:  MOVFF  00,5E2
....................     
....................    if(l>(media-1)) 
027AA:  MOVLW  01
027AC:  MOVLB  6
027AE:  SUBWF  x3E,W
027B0:  MOVLB  5
027B2:  SUBWF  x89,W
027B4:  BZ    27BA
027B6:  BNC   27BA
....................    {l=0;} 
027B8:  CLRF   x89
....................    promedio[l]=Temperature;l++; 
027BA:  MOVLB  6
027BC:  CLRF   x43
027BE:  MOVFF  589,642
027C2:  CLRF   x45
027C4:  MOVLW  04
027C6:  MOVWF  x44
027C8:  MOVLB  0
027CA:  RCALL  26F6
027CC:  MOVF   01,W
027CE:  ADDLW  17
027D0:  MOVWF  FE9
027D2:  MOVLW  04
027D4:  ADDWFC 02,W
027D6:  MOVWF  FEA
027D8:  MOVFF  5E2,FEF
027DC:  MOVFF  5E3,FEC
027E0:  MOVFF  5E4,FEC
027E4:  MOVFF  5E5,FEC
027E8:  MOVLB  5
027EA:  INCF   x89,F
....................    //promedio[l]=V0;l++; 
....................           
....................    for(h=0;h<media;h++) 
027EC:  CLRF   x88
027EE:  MOVLB  6
027F0:  MOVF   x3E,W
027F2:  MOVLB  5
027F4:  SUBWF  x88,W
027F6:  BC    2876
....................    { 
....................       Prom+=promedio[h]; 
027F8:  MOVLB  6
027FA:  CLRF   x43
027FC:  MOVFF  588,642
02800:  CLRF   x45
02802:  MOVLW  04
02804:  MOVWF  x44
02806:  MOVLB  0
02808:  RCALL  26F6
0280A:  MOVFF  02,03
0280E:  MOVF   01,W
02810:  ADDLW  17
02812:  MOVWF  FE9
02814:  MOVLW  04
02816:  ADDWFC 02,W
02818:  MOVWF  FEA
0281A:  MOVFF  FEF,00
0281E:  MOVFF  FEC,01
02822:  MOVFF  FEC,02
02826:  MOVFF  FEC,03
0282A:  MOVFF  FEA,640
0282E:  MOVFF  FE9,63F
02832:  BCF    FD8.1
02834:  MOVFF  5E1,646
02838:  MOVFF  5E0,645
0283C:  MOVFF  5DF,644
02840:  MOVFF  5DE,643
02844:  MOVFF  03,64A
02848:  MOVFF  02,649
0284C:  MOVFF  01,648
02850:  MOVFF  00,647
02854:  CALL   1038
02858:  MOVFF  640,FEA
0285C:  MOVFF  63F,FE9
02860:  MOVFF  03,5E1
02864:  MOVFF  02,5E0
02868:  MOVFF  01,5DF
0286C:  MOVFF  00,5DE
....................    }  
02870:  MOVLB  5
02872:  INCF   x88,F
02874:  BRA    27EE
....................    Prom=Prom/media;    
02876:  MOVLB  6
02878:  CLRF   x45
0287A:  MOVFF  63E,644
0287E:  MOVLB  0
02880:  CALL   0EA4
02884:  MOVFF  5E1,642
02888:  MOVFF  5E0,641
0288C:  MOVFF  5DF,640
02890:  MOVFF  5DE,63F
02894:  MOVFF  03,646
02898:  MOVFF  02,645
0289C:  MOVFF  01,644
028A0:  MOVFF  00,643
028A4:  CALL   0EDA
028A8:  MOVFF  03,5E1
028AC:  MOVFF  02,5E0
028B0:  MOVFF  01,5DF
028B4:  MOVFF  00,5DE
....................    return Prom; 
028B8:  MOVFF  5DE,00
028BC:  MOVFF  5DF,01
028C0:  MOVFF  5E0,02
028C4:  MOVFF  5E1,03
....................    //return Temperature; 
.................... } 
028C8:  RETLW  00
....................  
.................... void Controla(){ 
.................... //-------------------------------Control de Calentamiento------------------------------------------------------------//          
....................    if(tiemporecta>=40) 
*
04282:  MOVLB  5
04284:  MOVF   x8D,W
04286:  SUBLW  27
04288:  BC    4292
....................    { 
....................       ActualizaRecta(); 
0428A:  MOVLB  0
0428C:  BRA    4214
....................       tiemporecta=0; 
0428E:  MOVLB  5
04290:  CLRF   x8D
....................    }  
....................    
....................    if(Enfria==1) 
04292:  DECFSZ x91,W
04294:  BRA    46BE
....................    { 
....................       Rele1_off; 
04296:  BCF    F8B.3
04298:  BCF    F94.3
....................       Rele2_off; 
0429A:  BCF    F8B.4
0429C:  BCF    F94.4
....................       error=Setpoint-desvio-Temperatura;      // Cálculo del error ****** 
0429E:  BSF    FD8.1
042A0:  MOVFF  60D,646
042A4:  MOVFF  60C,645
042A8:  MOVFF  60B,644
042AC:  MOVFF  60A,643
042B0:  MOVFF  5F5,64A
042B4:  MOVFF  5F4,649
042B8:  MOVFF  5F3,648
042BC:  MOVFF  5F2,647
042C0:  MOVLB  0
042C2:  CALL   1038
042C6:  MOVFF  00,63E
042CA:  MOVFF  01,63F
042CE:  MOVFF  02,640
042D2:  MOVFF  03,641
042D6:  BSF    FD8.1
042D8:  MOVFF  03,646
042DC:  MOVFF  02,645
042E0:  MOVFF  01,644
042E4:  MOVFF  00,643
042E8:  MOVFF  601,64A
042EC:  MOVFF  600,649
042F0:  MOVFF  5FF,648
042F4:  MOVFF  5FE,647
042F8:  CALL   1038
042FC:  MOVFF  03,5DD
04300:  MOVFF  02,5DC
04304:  MOVFF  01,5DB
04308:  MOVFF  00,5DA
....................        
....................       if(error<=-0.7 && Aumento>-0.2) 
0430C:  MOVFF  5DD,641
04310:  MOVFF  5DC,640
04314:  MOVFF  5DB,63F
04318:  MOVFF  5DA,63E
0431C:  MOVLW  33
0431E:  MOVLB  6
04320:  MOVWF  x45
04322:  MOVWF  x44
04324:  MOVLW  B3
04326:  MOVWF  x43
04328:  MOVLW  7E
0432A:  MOVWF  x42
0432C:  MOVLB  0
0432E:  CALL   1802
04332:  BC    4338
04334:  BTFSS  FD8.2
04336:  BRA    448E
04338:  MOVLW  CD
0433A:  MOVLB  6
0433C:  MOVWF  x41
0433E:  MOVLW  CC
04340:  MOVWF  x40
04342:  MOVWF  x3F
04344:  MOVLW  7C
04346:  MOVWF  x3E
04348:  MOVFF  5FD,645
0434C:  MOVFF  5FC,644
04350:  MOVFF  5FB,643
04354:  MOVFF  5FA,642
04358:  MOVLB  0
0435A:  CALL   1802
0435E:  BTFSS  FD8.0
04360:  BRA    448E
....................       { 
....................          if(Potencia<90.0) 
04362:  MOVFF  5B5,641
04366:  MOVFF  5B4,640
0436A:  MOVFF  5B3,63F
0436E:  MOVFF  5B2,63E
04372:  MOVLB  6
04374:  CLRF   x45
04376:  CLRF   x44
04378:  MOVLW  34
0437A:  MOVWF  x43
0437C:  MOVLW  85
0437E:  MOVWF  x42
04380:  MOVLB  0
04382:  CALL   1802
04386:  BTFSS  FD8.0
04388:  BRA    448E
....................          { 
....................             if(TiempoControl>=80) 
0438A:  MOVLB  5
0438C:  MOVF   x9C,W
0438E:  SUBLW  4F
04390:  BTFSC  FD8.0
04392:  BRA    4490
....................             { 
....................                TiempoControl=0; 
04394:  CLRF   x9C
....................                if(Aumento>0.2) 
04396:  MOVLW  CD
04398:  MOVLB  6
0439A:  MOVWF  x41
0439C:  MOVLW  CC
0439E:  MOVWF  x40
043A0:  MOVLW  4C
043A2:  MOVWF  x3F
043A4:  MOVLW  7C
043A6:  MOVWF  x3E
043A8:  MOVFF  5FD,645
043AC:  MOVFF  5FC,644
043B0:  MOVFF  5FB,643
043B4:  MOVFF  5FA,642
043B8:  MOVLB  0
043BA:  CALL   1802
043BE:  BNC   43F6
....................                { 
....................                   Ganancia+=1; 
043C0:  BCF    FD8.1
043C2:  MOVFF  5ED,646
043C6:  MOVFF  5EC,645
043CA:  MOVFF  5EB,644
043CE:  MOVFF  5EA,643
043D2:  MOVLB  6
043D4:  CLRF   x4A
043D6:  CLRF   x49
043D8:  CLRF   x48
043DA:  MOVLW  7F
043DC:  MOVWF  x47
043DE:  MOVLB  0
043E0:  CALL   1038
043E4:  MOVFF  03,5ED
043E8:  MOVFF  02,5EC
043EC:  MOVFF  01,5EB
043F0:  MOVFF  00,5EA
....................                } 
....................                else 
043F4:  BRA    448E
....................                { 
....................                   if(Aumento>0.0) 
043F6:  MOVLB  6
043F8:  CLRF   x41
043FA:  CLRF   x40
043FC:  CLRF   x3F
043FE:  CLRF   x3E
04400:  MOVFF  5FD,645
04404:  MOVFF  5FC,644
04408:  MOVFF  5FB,643
0440C:  MOVFF  5FA,642
04410:  MOVLB  0
04412:  CALL   1802
04416:  BNC   4454
....................                   { 
....................                      Ganancia+=0.6; 
04418:  BCF    FD8.1
0441A:  MOVFF  5ED,646
0441E:  MOVFF  5EC,645
04422:  MOVFF  5EB,644
04426:  MOVFF  5EA,643
0442A:  MOVLW  9A
0442C:  MOVLB  6
0442E:  MOVWF  x4A
04430:  MOVLW  99
04432:  MOVWF  x49
04434:  MOVLW  19
04436:  MOVWF  x48
04438:  MOVLW  7E
0443A:  MOVWF  x47
0443C:  MOVLB  0
0443E:  CALL   1038
04442:  MOVFF  03,5ED
04446:  MOVFF  02,5EC
0444A:  MOVFF  01,5EB
0444E:  MOVFF  00,5EA
....................                   }    
....................                   else 
04452:  BRA    448E
....................                   { 
....................                      Ganancia+=0.3; 
04454:  BCF    FD8.1
04456:  MOVFF  5ED,646
0445A:  MOVFF  5EC,645
0445E:  MOVFF  5EB,644
04462:  MOVFF  5EA,643
04466:  MOVLW  9A
04468:  MOVLB  6
0446A:  MOVWF  x4A
0446C:  MOVLW  99
0446E:  MOVWF  x49
04470:  MOVLW  19
04472:  MOVWF  x48
04474:  MOVLW  7D
04476:  MOVWF  x47
04478:  MOVLB  0
0447A:  CALL   1038
0447E:  MOVFF  03,5ED
04482:  MOVFF  02,5EC
04486:  MOVFF  01,5EB
0448A:  MOVFF  00,5EA
0448E:  MOVLB  5
....................                   } 
....................                } 
....................             } 
....................          } 
....................       } 
....................     
....................       if(error>0.0)     // Anti Wind_DOWN 
04490:  MOVLB  6
04492:  CLRF   x41
04494:  CLRF   x40
04496:  CLRF   x3F
04498:  CLRF   x3E
0449A:  MOVFF  5DD,645
0449E:  MOVFF  5DC,644
044A2:  MOVFF  5DB,643
044A6:  MOVFF  5DA,642
044AA:  MOVLB  0
044AC:  CALL   1802
044B0:  BNC   44BC
....................       { 
....................          error=0.0; 
044B2:  MOVLB  5
044B4:  CLRF   xDD
044B6:  CLRF   xDC
044B8:  CLRF   xDB
044BA:  CLRF   xDA
....................       } 
....................       error=error*-1.0; 
044BC:  MOVFF  5DD,661
044C0:  MOVFF  5DC,660
044C4:  MOVFF  5DB,65F
044C8:  MOVFF  5DA,65E
044CC:  MOVLB  6
044CE:  CLRF   x65
044D0:  CLRF   x64
044D2:  MOVLW  80
044D4:  MOVWF  x63
044D6:  MOVLW  7F
044D8:  MOVWF  x62
044DA:  MOVLB  0
044DC:  CALL   2600
044E0:  MOVFF  03,5DD
044E4:  MOVFF  02,5DC
044E8:  MOVFF  01,5DB
044EC:  MOVFF  00,5DA
....................        
....................       if(Ganancia<0.1) 
044F0:  MOVFF  5ED,641
044F4:  MOVFF  5EC,640
044F8:  MOVFF  5EB,63F
044FC:  MOVFF  5EA,63E
04500:  MOVLW  CD
04502:  MOVLB  6
04504:  MOVWF  x45
04506:  MOVLW  CC
04508:  MOVWF  x44
0450A:  MOVLW  4C
0450C:  MOVWF  x43
0450E:  MOVLW  7B
04510:  MOVWF  x42
04512:  MOVLB  0
04514:  CALL   1802
04518:  BNC   452E
....................       { 
....................          Ganancia=0.1; 
0451A:  MOVLW  CD
0451C:  MOVLB  5
0451E:  MOVWF  xED
04520:  MOVLW  CC
04522:  MOVWF  xEC
04524:  MOVLW  4C
04526:  MOVWF  xEB
04528:  MOVLW  7B
0452A:  MOVWF  xEA
0452C:  MOVLB  0
....................       } 
....................     
....................       tmp=error*Ganancia;  // Control Proporcional. 
0452E:  MOVFF  5DD,661
04532:  MOVFF  5DC,660
04536:  MOVFF  5DB,65F
0453A:  MOVFF  5DA,65E
0453E:  MOVFF  5ED,665
04542:  MOVFF  5EC,664
04546:  MOVFF  5EB,663
0454A:  MOVFF  5EA,662
0454E:  CALL   2600
04552:  MOVFF  03,5E9
04556:  MOVFF  02,5E8
0455A:  MOVFF  01,5E7
0455E:  MOVFF  00,5E6
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
04562:  MOVFF  60D,641
04566:  MOVFF  60C,640
0456A:  MOVFF  60B,63F
0456E:  MOVFF  60A,63E
04572:  MOVFF  5E9,645
04576:  MOVFF  5E8,644
0457A:  MOVFF  5E7,643
0457E:  MOVFF  5E6,642
04582:  CALL   1802
04586:  BNC   4598
....................       { 
....................          tmp=Setpoint; 
04588:  MOVFF  60D,5E9
0458C:  MOVFF  60C,5E8
04590:  MOVFF  60B,5E7
04594:  MOVFF  60A,5E6
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
04598:  MOVFF  5E9,641
0459C:  MOVFF  5E8,640
045A0:  MOVFF  5E7,63F
045A4:  MOVFF  5E6,63E
045A8:  MOVLB  6
045AA:  CLRF   x45
045AC:  CLRF   x44
045AE:  CLRF   x43
045B0:  CLRF   x42
045B2:  MOVLB  0
045B4:  CALL   1802
045B8:  BNC   45C6
....................       { 
....................          tmp=0.0; 
045BA:  MOVLB  5
045BC:  CLRF   xE9
045BE:  CLRF   xE8
045C0:  CLRF   xE7
045C2:  CLRF   xE6
045C4:  MOVLB  0
....................       } 
....................        
....................       // Tpulso(t)= Tciclo*(y(t)-ymin)/(ymax - ymin); calculo de ciclo util para control de resistencia.ymax=140.ymin=0; 
....................       // Tpulso es float, hay que pasar ese ciclo a una salida de un puerto usando el TMR1. 
....................       Tpulso=(tmp/Setpoint)*Tciclo;   
045C6:  MOVFF  5E9,642
045CA:  MOVFF  5E8,641
045CE:  MOVFF  5E7,640
045D2:  MOVFF  5E6,63F
045D6:  MOVFF  60D,646
045DA:  MOVFF  60C,645
045DE:  MOVFF  60B,644
045E2:  MOVFF  60A,643
045E6:  CALL   0EDA
045EA:  MOVFF  00,63E
045EE:  MOVFF  01,63F
045F2:  MOVFF  02,640
045F6:  MOVFF  03,641
045FA:  MOVFF  03,661
045FE:  MOVFF  02,660
04602:  MOVFF  01,65F
04606:  MOVFF  00,65E
0460A:  MOVFF  5D5,665
0460E:  MOVFF  5D4,664
04612:  MOVFF  5D3,663
04616:  MOVFF  5D2,662
0461A:  CALL   2600
0461E:  MOVFF  03,5D9
04622:  MOVFF  02,5D8
04626:  MOVFF  01,5D7
0462A:  MOVFF  00,5D6
....................        
....................       Tp=(Tpulso/0.005); 
0462E:  MOVFF  5D9,642
04632:  MOVFF  5D8,641
04636:  MOVFF  5D7,640
0463A:  MOVFF  5D6,63F
0463E:  MOVLW  0A
04640:  MOVLB  6
04642:  MOVWF  x46
04644:  MOVLW  D7
04646:  MOVWF  x45
04648:  MOVLW  23
0464A:  MOVWF  x44
0464C:  MOVLW  77
0464E:  MOVWF  x43
04650:  MOVLB  0
04652:  CALL   0EDA
04656:  MOVFF  03,641
0465A:  MOVFF  02,640
0465E:  MOVFF  01,63F
04662:  MOVFF  00,63E
04666:  CALL   3764
0466A:  MOVFF  02,5AF
0466E:  MOVFF  01,5AE
....................       Tc=(Tciclo/0.005); 
04672:  MOVFF  5D5,642
04676:  MOVFF  5D4,641
0467A:  MOVFF  5D3,640
0467E:  MOVFF  5D2,63F
04682:  MOVLW  0A
04684:  MOVLB  6
04686:  MOVWF  x46
04688:  MOVLW  D7
0468A:  MOVWF  x45
0468C:  MOVLW  23
0468E:  MOVWF  x44
04690:  MOVLW  77
04692:  MOVWF  x43
04694:  MOVLB  0
04696:  CALL   0EDA
0469A:  MOVFF  03,641
0469E:  MOVFF  02,640
046A2:  MOVFF  01,63F
046A6:  MOVFF  00,63E
046AA:  CALL   3764
046AE:  MOVFF  02,5B1
046B2:  MOVFF  01,5B0
....................       Controlando=1;        
046B6:  MOVLW  01
046B8:  MOVLB  5
046BA:  MOVWF  x92
....................    } 
....................    else 
046BC:  BRA    4B9A
....................    { 
....................       Rele1_on; 
046BE:  BSF    F8B.3
046C0:  BCF    F94.3
....................       Rele2_on; 
046C2:  BSF    F8B.4
046C4:  BCF    F94.4
....................       error=desvio+Setpoint-Temperatura;      // Cálculo del error ****** 
046C6:  BCF    FD8.1
046C8:  MOVFF  5F5,646
046CC:  MOVFF  5F4,645
046D0:  MOVFF  5F3,644
046D4:  MOVFF  5F2,643
046D8:  MOVFF  60D,64A
046DC:  MOVFF  60C,649
046E0:  MOVFF  60B,648
046E4:  MOVFF  60A,647
046E8:  MOVLB  0
046EA:  CALL   1038
046EE:  MOVFF  00,63E
046F2:  MOVFF  01,63F
046F6:  MOVFF  02,640
046FA:  MOVFF  03,641
046FE:  BSF    FD8.1
04700:  MOVFF  03,646
04704:  MOVFF  02,645
04708:  MOVFF  01,644
0470C:  MOVFF  00,643
04710:  MOVFF  601,64A
04714:  MOVFF  600,649
04718:  MOVFF  5FF,648
0471C:  MOVFF  5FE,647
04720:  CALL   1038
04724:  MOVFF  03,5DD
04728:  MOVFF  02,5DC
0472C:  MOVFF  01,5DB
04730:  MOVFF  00,5DA
....................     
....................       if(error>0.7 && error<30 && Aumento<0.3) 
04734:  MOVLW  33
04736:  MOVLB  6
04738:  MOVWF  x41
0473A:  MOVWF  x40
0473C:  MOVWF  x3F
0473E:  MOVLW  7E
04740:  MOVWF  x3E
04742:  MOVFF  5DD,645
04746:  MOVFF  5DC,644
0474A:  MOVFF  5DB,643
0474E:  MOVFF  5DA,642
04752:  MOVLB  0
04754:  CALL   1802
04758:  BTFSS  FD8.0
0475A:  BRA    48E8
0475C:  MOVFF  5DD,641
04760:  MOVFF  5DC,640
04764:  MOVFF  5DB,63F
04768:  MOVFF  5DA,63E
0476C:  MOVLB  6
0476E:  CLRF   x45
04770:  CLRF   x44
04772:  MOVLW  70
04774:  MOVWF  x43
04776:  MOVLW  83
04778:  MOVWF  x42
0477A:  MOVLB  0
0477C:  CALL   1802
04780:  BTFSS  FD8.0
04782:  BRA    48E8
04784:  MOVFF  5FD,641
04788:  MOVFF  5FC,640
0478C:  MOVFF  5FB,63F
04790:  MOVFF  5FA,63E
04794:  MOVLW  9A
04796:  MOVLB  6
04798:  MOVWF  x45
0479A:  MOVLW  99
0479C:  MOVWF  x44
0479E:  MOVLW  19
047A0:  MOVWF  x43
047A2:  MOVLW  7D
047A4:  MOVWF  x42
047A6:  MOVLB  0
047A8:  CALL   1802
047AC:  BTFSS  FD8.0
047AE:  BRA    48E8
....................       { 
....................          flag_ajuste=0; 
047B0:  MOVLB  5
047B2:  BCF    x94.1
....................          flag_ajuste2=0; 
047B4:  BCF    x94.2
....................          Ajusto=10; 
047B6:  MOVLW  0A
047B8:  MOVWF  x93
....................          if(Potencia<90.0) 
047BA:  MOVFF  5B5,641
047BE:  MOVFF  5B4,640
047C2:  MOVFF  5B3,63F
047C6:  MOVFF  5B2,63E
047CA:  MOVLB  6
047CC:  CLRF   x45
047CE:  CLRF   x44
047D0:  MOVLW  34
047D2:  MOVWF  x43
047D4:  MOVLW  85
047D6:  MOVWF  x42
047D8:  MOVLB  0
047DA:  CALL   1802
047DE:  BTFSS  FD8.0
047E0:  BRA    48E8
....................          { 
....................             if(TiempoControl>=80) 
047E2:  MOVLB  5
047E4:  MOVF   x9C,W
047E6:  SUBLW  4F
047E8:  BTFSC  FD8.0
047EA:  BRA    48EA
....................             { 
....................                TiempoControl=0; 
047EC:  CLRF   x9C
....................                if(Aumento<-0.5) 
047EE:  MOVFF  5FD,641
047F2:  MOVFF  5FC,640
047F6:  MOVFF  5FB,63F
047FA:  MOVFF  5FA,63E
047FE:  MOVLB  6
04800:  CLRF   x45
04802:  CLRF   x44
04804:  MOVLW  80
04806:  MOVWF  x43
04808:  MOVLW  7E
0480A:  MOVWF  x42
0480C:  MOVLB  0
0480E:  CALL   1802
04812:  BNC   484A
....................                { 
....................                   Ganancia+=1; 
04814:  BCF    FD8.1
04816:  MOVFF  5ED,646
0481A:  MOVFF  5EC,645
0481E:  MOVFF  5EB,644
04822:  MOVFF  5EA,643
04826:  MOVLB  6
04828:  CLRF   x4A
0482A:  CLRF   x49
0482C:  CLRF   x48
0482E:  MOVLW  7F
04830:  MOVWF  x47
04832:  MOVLB  0
04834:  CALL   1038
04838:  MOVFF  03,5ED
0483C:  MOVFF  02,5EC
04840:  MOVFF  01,5EB
04844:  MOVFF  00,5EA
....................                } 
....................                else 
04848:  BRA    48E8
....................                { 
....................                   if(Aumento<-0.1) 
0484A:  MOVFF  5FD,641
0484E:  MOVFF  5FC,640
04852:  MOVFF  5FB,63F
04856:  MOVFF  5FA,63E
0485A:  MOVLW  CD
0485C:  MOVLB  6
0485E:  MOVWF  x45
04860:  MOVLW  CC
04862:  MOVWF  x44
04864:  MOVWF  x43
04866:  MOVLW  7B
04868:  MOVWF  x42
0486A:  MOVLB  0
0486C:  CALL   1802
04870:  BNC   48AE
....................                   { 
....................                      Ganancia+=0.6; 
04872:  BCF    FD8.1
04874:  MOVFF  5ED,646
04878:  MOVFF  5EC,645
0487C:  MOVFF  5EB,644
04880:  MOVFF  5EA,643
04884:  MOVLW  9A
04886:  MOVLB  6
04888:  MOVWF  x4A
0488A:  MOVLW  99
0488C:  MOVWF  x49
0488E:  MOVLW  19
04890:  MOVWF  x48
04892:  MOVLW  7E
04894:  MOVWF  x47
04896:  MOVLB  0
04898:  CALL   1038
0489C:  MOVFF  03,5ED
048A0:  MOVFF  02,5EC
048A4:  MOVFF  01,5EB
048A8:  MOVFF  00,5EA
....................                   }    
....................                   else 
048AC:  BRA    48E8
....................                   { 
....................                      Ganancia+=0.3; 
048AE:  BCF    FD8.1
048B0:  MOVFF  5ED,646
048B4:  MOVFF  5EC,645
048B8:  MOVFF  5EB,644
048BC:  MOVFF  5EA,643
048C0:  MOVLW  9A
048C2:  MOVLB  6
048C4:  MOVWF  x4A
048C6:  MOVLW  99
048C8:  MOVWF  x49
048CA:  MOVLW  19
048CC:  MOVWF  x48
048CE:  MOVLW  7D
048D0:  MOVWF  x47
048D2:  MOVLB  0
048D4:  CALL   1038
048D8:  MOVFF  03,5ED
048DC:  MOVFF  02,5EC
048E0:  MOVFF  01,5EB
048E4:  MOVFF  00,5EA
048E8:  MOVLB  5
....................                   } 
....................                } 
....................             } 
....................          } 
....................       } 
....................        
....................       if(error<0.0) 
048EA:  MOVFF  5DD,641
048EE:  MOVFF  5DC,640
048F2:  MOVFF  5DB,63F
048F6:  MOVFF  5DA,63E
048FA:  MOVLB  6
048FC:  CLRF   x45
048FE:  CLRF   x44
04900:  CLRF   x43
04902:  CLRF   x42
04904:  MOVLB  0
04906:  CALL   1802
0490A:  BNC   496A
....................       { 
....................          Ganancia=GananciaR*(Setpoint/44.5); 
0490C:  MOVFF  60D,642
04910:  MOVFF  60C,641
04914:  MOVFF  60B,640
04918:  MOVFF  60A,63F
0491C:  MOVLB  6
0491E:  CLRF   x46
04920:  CLRF   x45
04922:  MOVLW  32
04924:  MOVWF  x44
04926:  MOVLW  84
04928:  MOVWF  x43
0492A:  MOVLB  0
0492C:  CALL   0EDA
04930:  MOVFF  5F1,661
04934:  MOVFF  5F0,660
04938:  MOVFF  5EF,65F
0493C:  MOVFF  5EE,65E
04940:  MOVFF  03,665
04944:  MOVFF  02,664
04948:  MOVFF  01,663
0494C:  MOVFF  00,662
04950:  CALL   2600
04954:  MOVFF  03,5ED
04958:  MOVFF  02,5EC
0495C:  MOVFF  01,5EB
04960:  MOVFF  00,5EA
....................          flag_ajuste=0; 
04964:  MOVLB  5
04966:  BCF    x94.1
....................          flag_ajuste2=0; 
04968:  BCF    x94.2
....................       } 
....................        
....................       if(Ganancia<0.1) 
0496A:  MOVFF  5ED,641
0496E:  MOVFF  5EC,640
04972:  MOVFF  5EB,63F
04976:  MOVFF  5EA,63E
0497A:  MOVLW  CD
0497C:  MOVLB  6
0497E:  MOVWF  x45
04980:  MOVLW  CC
04982:  MOVWF  x44
04984:  MOVLW  4C
04986:  MOVWF  x43
04988:  MOVLW  7B
0498A:  MOVWF  x42
0498C:  MOVLB  0
0498E:  CALL   1802
04992:  BNC   49A8
....................       { 
....................          Ganancia=0.1; 
04994:  MOVLW  CD
04996:  MOVLB  5
04998:  MOVWF  xED
0499A:  MOVLW  CC
0499C:  MOVWF  xEC
0499E:  MOVLW  4C
049A0:  MOVWF  xEB
049A2:  MOVLW  7B
049A4:  MOVWF  xEA
049A6:  MOVLB  0
....................       } 
....................       if(Ganancia>Gananciamax) 
049A8:  MOVFF  5BD,641
049AC:  MOVFF  5BC,640
049B0:  MOVFF  5BB,63F
049B4:  MOVFF  5BA,63E
049B8:  MOVFF  5ED,645
049BC:  MOVFF  5EC,644
049C0:  MOVFF  5EB,643
049C4:  MOVFF  5EA,642
049C8:  CALL   1802
049CC:  BNC   49DE
....................       { 
....................          Ganancia=Gananciamax; 
049CE:  MOVFF  5BD,5ED
049D2:  MOVFF  5BC,5EC
049D6:  MOVFF  5BB,5EB
049DA:  MOVFF  5BA,5EA
....................       } 
....................     
....................       if(error<0.0)     // Anti Wind_DOWN     
049DE:  MOVFF  5DD,641
049E2:  MOVFF  5DC,640
049E6:  MOVFF  5DB,63F
049EA:  MOVFF  5DA,63E
049EE:  MOVLB  6
049F0:  CLRF   x45
049F2:  CLRF   x44
049F4:  CLRF   x43
049F6:  CLRF   x42
049F8:  MOVLB  0
049FA:  CALL   1802
049FE:  BNC   4A0C
....................       { 
....................          error=0.0; 
04A00:  MOVLB  5
04A02:  CLRF   xDD
04A04:  CLRF   xDC
04A06:  CLRF   xDB
04A08:  CLRF   xDA
04A0A:  MOVLB  0
....................       } 
....................       //tmp=(Setpoint-Prom)*Ganancia;  // Control Proporcional. 
....................       tmp=error*Ganancia;  // Control Proporcional. 
04A0C:  MOVFF  5DD,661
04A10:  MOVFF  5DC,660
04A14:  MOVFF  5DB,65F
04A18:  MOVFF  5DA,65E
04A1C:  MOVFF  5ED,665
04A20:  MOVFF  5EC,664
04A24:  MOVFF  5EB,663
04A28:  MOVFF  5EA,662
04A2C:  CALL   2600
04A30:  MOVFF  03,5E9
04A34:  MOVFF  02,5E8
04A38:  MOVFF  01,5E7
04A3C:  MOVFF  00,5E6
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
04A40:  MOVFF  60D,641
04A44:  MOVFF  60C,640
04A48:  MOVFF  60B,63F
04A4C:  MOVFF  60A,63E
04A50:  MOVFF  5E9,645
04A54:  MOVFF  5E8,644
04A58:  MOVFF  5E7,643
04A5C:  MOVFF  5E6,642
04A60:  CALL   1802
04A64:  BNC   4A76
....................       { 
....................          tmp=Setpoint; 
04A66:  MOVFF  60D,5E9
04A6A:  MOVFF  60C,5E8
04A6E:  MOVFF  60B,5E7
04A72:  MOVFF  60A,5E6
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
04A76:  MOVFF  5E9,641
04A7A:  MOVFF  5E8,640
04A7E:  MOVFF  5E7,63F
04A82:  MOVFF  5E6,63E
04A86:  MOVLB  6
04A88:  CLRF   x45
04A8A:  CLRF   x44
04A8C:  CLRF   x43
04A8E:  CLRF   x42
04A90:  MOVLB  0
04A92:  CALL   1802
04A96:  BNC   4AA4
....................       { 
....................          tmp=0.0; 
04A98:  MOVLB  5
04A9A:  CLRF   xE9
04A9C:  CLRF   xE8
04A9E:  CLRF   xE7
04AA0:  CLRF   xE6
04AA2:  MOVLB  0
....................       } 
....................     
....................       Tpulso=(tmp/Setpoint)*Tciclo; 
04AA4:  MOVFF  5E9,642
04AA8:  MOVFF  5E8,641
04AAC:  MOVFF  5E7,640
04AB0:  MOVFF  5E6,63F
04AB4:  MOVFF  60D,646
04AB8:  MOVFF  60C,645
04ABC:  MOVFF  60B,644
04AC0:  MOVFF  60A,643
04AC4:  CALL   0EDA
04AC8:  MOVFF  00,63E
04ACC:  MOVFF  01,63F
04AD0:  MOVFF  02,640
04AD4:  MOVFF  03,641
04AD8:  MOVFF  03,661
04ADC:  MOVFF  02,660
04AE0:  MOVFF  01,65F
04AE4:  MOVFF  00,65E
04AE8:  MOVFF  5D5,665
04AEC:  MOVFF  5D4,664
04AF0:  MOVFF  5D3,663
04AF4:  MOVFF  5D2,662
04AF8:  CALL   2600
04AFC:  MOVFF  03,5D9
04B00:  MOVFF  02,5D8
04B04:  MOVFF  01,5D7
04B08:  MOVFF  00,5D6
....................        
....................       /*if(error<1.6) 
....................       { 
....................          if(error<=1.3){    
....................             if(flag_ajuste==0){ 
....................                TpulsoMax=Tpulso; 
....................                flag_ajuste=1;   
....................                Ajusto=5; 
....................             } 
....................          } 
....................           
....................          if(error<=0.9){    
....................             if(flag_ajuste2==0){ 
....................                Tpulsomin=Tpulso; 
....................                flag_ajuste2=1;            
....................                Ajusto=5; 
....................             } 
....................          } 
....................           
....................          if(flag_ajuste2==1){ 
....................             if(Tpulso<Tpulsomin){ 
....................                Tpulso=Tpulsomin; 
....................             } 
....................          } 
....................          if(flag_ajuste==1){    
....................             if(Tpulso>TpulsoMax){ 
....................                Tpulso=TpulsoMax; 
....................             }  
....................          } 
....................       }*/ 
....................       Tp=(Tpulso/0.005); 
04B0C:  MOVFF  5D9,642
04B10:  MOVFF  5D8,641
04B14:  MOVFF  5D7,640
04B18:  MOVFF  5D6,63F
04B1C:  MOVLW  0A
04B1E:  MOVLB  6
04B20:  MOVWF  x46
04B22:  MOVLW  D7
04B24:  MOVWF  x45
04B26:  MOVLW  23
04B28:  MOVWF  x44
04B2A:  MOVLW  77
04B2C:  MOVWF  x43
04B2E:  MOVLB  0
04B30:  CALL   0EDA
04B34:  MOVFF  03,641
04B38:  MOVFF  02,640
04B3C:  MOVFF  01,63F
04B40:  MOVFF  00,63E
04B44:  CALL   3764
04B48:  MOVFF  02,5AF
04B4C:  MOVFF  01,5AE
....................       Tc=(Tciclo/0.005); 
04B50:  MOVFF  5D5,642
04B54:  MOVFF  5D4,641
04B58:  MOVFF  5D3,640
04B5C:  MOVFF  5D2,63F
04B60:  MOVLW  0A
04B62:  MOVLB  6
04B64:  MOVWF  x46
04B66:  MOVLW  D7
04B68:  MOVWF  x45
04B6A:  MOVLW  23
04B6C:  MOVWF  x44
04B6E:  MOVLW  77
04B70:  MOVWF  x43
04B72:  MOVLB  0
04B74:  CALL   0EDA
04B78:  MOVFF  03,641
04B7C:  MOVFF  02,640
04B80:  MOVFF  01,63F
04B84:  MOVFF  00,63E
04B88:  CALL   3764
04B8C:  MOVFF  02,5B1
04B90:  MOVFF  01,5B0
....................       Controlando=1;      
04B94:  MOVLW  01
04B96:  MOVLB  5
04B98:  MOVWF  x92
....................    } 
....................     
.................... //--------------------------------------------------------------------------------------------------------------------//    
....................    
.................... } 
04B9A:  MOVLB  0
04B9C:  RETLW  00
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
024AC:  MOVLB  6
024AE:  MOVFF  646,01
024B2:  MOVFF  647,03
024B6:  MOVFF  646,64C
024BA:  MOVFF  647,64D
024BE:  MOVLW  06
024C0:  MOVWF  FEA
024C2:  MOVLW  1E
024C4:  MOVWF  FE9
024C6:  MOVFF  647,FE2
024CA:  MOVFF  646,FE1
024CE:  MOVF   FE7,F
024D0:  MOVFF  FE6,FEE
024D4:  BNZ   24CE
....................    if(sombreado==2) 
024D6:  MOVF   x4A,W
024D8:  SUBLW  02
024DA:  BNZ   2504
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
024DC:  MOVLW  01
024DE:  ADDWF  x48,W
024E0:  MOVWF  x4C
024E2:  MOVLW  01
024E4:  ADDWF  x49,W
024E6:  MOVWF  x4D
024E8:  MOVFF  64C,657
024EC:  MOVWF  x58
024EE:  MOVLW  06
024F0:  MOVWF  x5A
024F2:  MOVLW  1E
024F4:  MOVWF  x59
024F6:  MOVFF  64B,65B
024FA:  MOVLW  01
024FC:  MOVWF  x5C
024FE:  MOVLB  0
02500:  RCALL  20F4
02502:  MOVLB  6
....................    if(sombreado==1) 
02504:  DECFSZ x4A,W
02506:  BRA    2552
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
02508:  MOVF   x4B,W
0250A:  MULLW  08
0250C:  MOVF   FF3,W
0250E:  ADDWF  x49,W
02510:  MOVWF  x4C
02512:  CLRF   x57
02514:  MOVFF  649,658
02518:  MOVLW  7F
0251A:  MOVWF  x59
0251C:  MOVFF  64C,65A
02520:  MOVLW  01
02522:  MOVWF  x5B
02524:  MOVWF  x5C
02526:  MOVLB  0
02528:  RCALL  23EA
0252A:  MOVLW  01
0252C:  MOVLB  6
0252E:  ADDWF  x48,W
02530:  MOVWF  x4C
02532:  MOVLW  01
02534:  ADDWF  x49,W
02536:  MOVWF  x4D
02538:  MOVFF  64C,657
0253C:  MOVWF  x58
0253E:  MOVLW  06
02540:  MOVWF  x5A
02542:  MOVLW  1E
02544:  MOVWF  x59
02546:  MOVFF  64B,65B
0254A:  CLRF   x5C
0254C:  MOVLB  0
0254E:  RCALL  20F4
02550:  MOVLB  6
....................    if(sombreado==0) 
02552:  MOVF   x4A,F
02554:  BNZ   25A0
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
02556:  MOVF   x4B,W
02558:  MULLW  08
0255A:  MOVF   FF3,W
0255C:  ADDWF  x49,W
0255E:  MOVWF  x4C
02560:  CLRF   x57
02562:  MOVFF  649,658
02566:  MOVLW  7F
02568:  MOVWF  x59
0256A:  MOVFF  64C,65A
0256E:  MOVLW  01
02570:  MOVWF  x5B
02572:  CLRF   x5C
02574:  MOVLB  0
02576:  RCALL  23EA
02578:  MOVLW  01
0257A:  MOVLB  6
0257C:  ADDWF  x48,W
0257E:  MOVWF  x4C
02580:  MOVLW  01
02582:  ADDWF  x49,W
02584:  MOVWF  x4D
02586:  MOVFF  64C,657
0258A:  MOVWF  x58
0258C:  MOVLW  06
0258E:  MOVWF  x5A
02590:  MOVLW  1E
02592:  MOVWF  x59
02594:  MOVFF  64B,65B
02598:  MOVLW  01
0259A:  MOVWF  x5C
0259C:  MOVLB  0
0259E:  RCALL  20F4
....................    glcd_update(); 
025A0:  MOVLB  0
025A2:  RCALL  1ED8
.................... } 
025A4:  RETLW  00
....................  
.................... void displayTemps(char palabra[30], float digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==1) 
*
03C8E:  MOVLB  6
03C90:  DECFSZ x46,W
03C92:  BRA    3DCC
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
03C94:  MOVLW  06
03C96:  MOVWF  x3D
03C98:  MOVLW  48
03C9A:  MOVWF  x3C
03C9C:  MOVLW  42
03C9E:  MOVWF  FE9
03CA0:  MOVFF  643,654
03CA4:  MOVFF  642,653
03CA8:  MOVFF  641,652
03CAC:  MOVFF  640,651
03CB0:  MOVLW  01
03CB2:  MOVWF  x55
03CB4:  MOVLB  0
03CB6:  RCALL  3ADA
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, ON); 
03CB8:  MOVLW  02
03CBA:  MOVLB  6
03CBC:  SUBWF  x45,W
03CBE:  MOVWF  x51
03CC0:  MOVF   x47,W
03CC2:  MULLW  08
03CC4:  MOVF   FF3,W
03CC6:  ADDWF  x45,W
03CC8:  MOVWF  x52
03CCA:  CLRF   x57
03CCC:  MOVFF  651,658
03CD0:  MOVLW  7F
03CD2:  MOVWF  x59
03CD4:  MOVFF  652,65A
03CD8:  MOVLW  01
03CDA:  MOVWF  x5B
03CDC:  MOVWF  x5C
03CDE:  MOVLB  0
03CE0:  CALL   23EA
....................       strcpy(Menus.Letra,palabra); 
03CE4:  MOVLB  6
03CE6:  MOVFF  63E,01
03CEA:  MOVFF  63F,03
03CEE:  MOVFF  63E,651
03CF2:  MOVFF  63F,652
03CF6:  MOVLW  06
03CF8:  MOVWF  FEA
03CFA:  MOVLW  1E
03CFC:  MOVWF  FE9
03CFE:  MOVFF  63F,FE2
03D02:  MOVFF  63E,FE1
03D06:  MOVF   FE7,F
03D08:  MOVFF  FE6,FEE
03D0C:  BNZ   3D06
....................       glcd_text57(x+90, y+1, voltage, tamano, OFF); 
03D0E:  MOVLW  5A
03D10:  ADDWF  x44,W
03D12:  MOVWF  x51
03D14:  MOVLW  01
03D16:  ADDWF  x45,W
03D18:  MOVWF  x52
03D1A:  MOVFF  651,657
03D1E:  MOVWF  x58
03D20:  MOVLW  06
03D22:  MOVWF  x5A
03D24:  MOVLW  48
03D26:  MOVWF  x59
03D28:  MOVFF  647,65B
03D2C:  CLRF   x5C
03D2E:  MOVLB  0
03D30:  CALL   20F4
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF); 
03D34:  MOVLW  01
03D36:  MOVLB  6
03D38:  ADDWF  x44,W
03D3A:  MOVWF  x51
03D3C:  MOVLW  01
03D3E:  ADDWF  x45,W
03D40:  MOVWF  x52
03D42:  MOVFF  651,657
03D46:  MOVWF  x58
03D48:  MOVLW  06
03D4A:  MOVWF  x5A
03D4C:  MOVLW  1E
03D4E:  MOVWF  x59
03D50:  MOVFF  647,65B
03D54:  CLRF   x5C
03D56:  MOVLB  0
03D58:  CALL   20F4
....................       strcpy(Menus.Letra,"C"); 
03D5C:  MOVLW  06
03D5E:  MOVWF  FEA
03D60:  MOVLW  1E
03D62:  MOVWF  FE9
03D64:  MOVFF  FF2,651
03D68:  BCF    FF2.7
03D6A:  MOVLW  00
03D6C:  CALL   06D2
03D70:  TBLRD*-
03D72:  TBLRD*+
03D74:  MOVF   FF5,W
03D76:  MOVWF  FEE
03D78:  IORLW  00
03D7A:  BNZ   3D72
03D7C:  MOVLB  6
03D7E:  BTFSC  x51.7
03D80:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, OFF); 
03D82:  MOVLW  78
03D84:  ADDWF  x44,W
03D86:  MOVWF  x51
03D88:  MOVLW  01
03D8A:  ADDWF  x45,W
03D8C:  MOVWF  x52
03D8E:  MOVFF  651,657
03D92:  MOVWF  x58
03D94:  MOVLW  06
03D96:  MOVWF  x5A
03D98:  MOVLW  1E
03D9A:  MOVWF  x59
03D9C:  MOVFF  647,65B
03DA0:  CLRF   x5C
03DA2:  MOVLB  0
03DA4:  CALL   20F4
....................       glcd_circle(x+115,y-1,1,NO,OFF); 
03DA8:  MOVLW  73
03DAA:  MOVLB  6
03DAC:  ADDWF  x44,W
03DAE:  MOVWF  x51
03DB0:  MOVLW  01
03DB2:  SUBWF  x45,W
03DB4:  MOVWF  x52
03DB6:  MOVFF  651,653
03DBA:  MOVWF  x54
03DBC:  MOVLW  01
03DBE:  MOVWF  x55
03DC0:  CLRF   x56
03DC2:  CLRF   x57
03DC4:  MOVLB  0
03DC6:  CALL   353A
03DCA:  MOVLB  6
....................    } 
....................    if(sombreado==0) 
03DCC:  MOVF   x46,F
03DCE:  BTFSS  FD8.2
03DD0:  BRA    3F0E
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
03DD2:  MOVLW  06
03DD4:  MOVWF  x3D
03DD6:  MOVLW  48
03DD8:  MOVWF  x3C
03DDA:  MOVLW  42
03DDC:  MOVWF  FE9
03DDE:  MOVFF  643,654
03DE2:  MOVFF  642,653
03DE6:  MOVFF  641,652
03DEA:  MOVFF  640,651
03DEE:  MOVLW  01
03DF0:  MOVWF  x55
03DF2:  MOVLB  0
03DF4:  RCALL  3ADA
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, OFF); 
03DF6:  MOVLW  02
03DF8:  MOVLB  6
03DFA:  SUBWF  x45,W
03DFC:  MOVWF  x51
03DFE:  MOVF   x47,W
03E00:  MULLW  08
03E02:  MOVF   FF3,W
03E04:  ADDWF  x45,W
03E06:  MOVWF  x52
03E08:  CLRF   x57
03E0A:  MOVFF  651,658
03E0E:  MOVLW  7F
03E10:  MOVWF  x59
03E12:  MOVFF  652,65A
03E16:  MOVLW  01
03E18:  MOVWF  x5B
03E1A:  CLRF   x5C
03E1C:  MOVLB  0
03E1E:  CALL   23EA
....................       strcpy(Menus.Letra,palabra); 
03E22:  MOVLB  6
03E24:  MOVFF  63E,01
03E28:  MOVFF  63F,03
03E2C:  MOVFF  63E,651
03E30:  MOVFF  63F,652
03E34:  MOVLW  06
03E36:  MOVWF  FEA
03E38:  MOVLW  1E
03E3A:  MOVWF  FE9
03E3C:  MOVFF  63F,FE2
03E40:  MOVFF  63E,FE1
03E44:  MOVF   FE7,F
03E46:  MOVFF  FE6,FEE
03E4A:  BNZ   3E44
....................       glcd_text57(x+90, y+1, voltage, tamano, ON); 
03E4C:  MOVLW  5A
03E4E:  ADDWF  x44,W
03E50:  MOVWF  x51
03E52:  MOVLW  01
03E54:  ADDWF  x45,W
03E56:  MOVWF  x52
03E58:  MOVFF  651,657
03E5C:  MOVWF  x58
03E5E:  MOVLW  06
03E60:  MOVWF  x5A
03E62:  MOVLW  48
03E64:  MOVWF  x59
03E66:  MOVFF  647,65B
03E6A:  MOVLW  01
03E6C:  MOVWF  x5C
03E6E:  MOVLB  0
03E70:  CALL   20F4
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, ON); 
03E74:  MOVLW  01
03E76:  MOVLB  6
03E78:  ADDWF  x44,W
03E7A:  MOVWF  x51
03E7C:  MOVLW  01
03E7E:  ADDWF  x45,W
03E80:  MOVWF  x52
03E82:  MOVFF  651,657
03E86:  MOVWF  x58
03E88:  MOVLW  06
03E8A:  MOVWF  x5A
03E8C:  MOVLW  1E
03E8E:  MOVWF  x59
03E90:  MOVFF  647,65B
03E94:  MOVLW  01
03E96:  MOVWF  x5C
03E98:  MOVLB  0
03E9A:  CALL   20F4
....................       strcpy(Menus.Letra,"C"); 
03E9E:  MOVLW  06
03EA0:  MOVWF  FEA
03EA2:  MOVLW  1E
03EA4:  MOVWF  FE9
03EA6:  MOVFF  FF2,651
03EAA:  BCF    FF2.7
03EAC:  MOVLW  00
03EAE:  CALL   06D2
03EB2:  TBLRD*-
03EB4:  TBLRD*+
03EB6:  MOVF   FF5,W
03EB8:  MOVWF  FEE
03EBA:  IORLW  00
03EBC:  BNZ   3EB4
03EBE:  MOVLB  6
03EC0:  BTFSC  x51.7
03EC2:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, ON); 
03EC4:  MOVLW  78
03EC6:  ADDWF  x44,W
03EC8:  MOVWF  x51
03ECA:  MOVLW  01
03ECC:  ADDWF  x45,W
03ECE:  MOVWF  x52
03ED0:  MOVFF  651,657
03ED4:  MOVWF  x58
03ED6:  MOVLW  06
03ED8:  MOVWF  x5A
03EDA:  MOVLW  1E
03EDC:  MOVWF  x59
03EDE:  MOVFF  647,65B
03EE2:  MOVLW  01
03EE4:  MOVWF  x5C
03EE6:  MOVLB  0
03EE8:  CALL   20F4
....................       glcd_circle(x+115,y-1,1,NO,ON); 
03EEC:  MOVLW  73
03EEE:  MOVLB  6
03EF0:  ADDWF  x44,W
03EF2:  MOVWF  x51
03EF4:  MOVLW  01
03EF6:  SUBWF  x45,W
03EF8:  MOVWF  x52
03EFA:  MOVFF  651,653
03EFE:  MOVWF  x54
03F00:  MOVLW  01
03F02:  MOVWF  x55
03F04:  CLRF   x56
03F06:  MOVWF  x57
03F08:  MOVLB  0
03F0A:  CALL   353A
....................    } 
....................    glcd_update(); 
03F0E:  MOVLB  0
03F10:  CALL   1ED8
.................... } 
03F14:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
03F9C:  MOVLB  6
03F9E:  MOVF   x42,W
03FA0:  SUBLW  02
03FA2:  BNZ   4014
....................    { 
....................       sprintf(voltage, "%03u", digito); 
03FA4:  MOVLW  06
03FA6:  MOVWF  x3D
03FA8:  MOVLW  44
03FAA:  MOVWF  x3C
03FAC:  MOVFF  63F,64D
03FB0:  MOVLW  03
03FB2:  MOVWF  x4E
03FB4:  MOVLB  0
03FB6:  RCALL  3F16
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
03FB8:  MOVLB  6
03FBA:  MOVF   x43,W
03FBC:  MULLW  12
03FBE:  MOVF   FF3,W
03FC0:  ADDWF  x40,W
03FC2:  MOVWF  x4D
03FC4:  MOVF   x43,W
03FC6:  MULLW  08
03FC8:  MOVF   FF3,W
03FCA:  ADDWF  x41,W
03FCC:  MOVWF  x4E
03FCE:  MOVFF  640,657
03FD2:  MOVFF  641,658
03FD6:  MOVFF  64D,659
03FDA:  MOVWF  x5A
03FDC:  MOVLW  01
03FDE:  MOVWF  x5B
03FE0:  MOVWF  x5C
03FE2:  MOVLB  0
03FE4:  CALL   23EA
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
03FE8:  MOVLW  01
03FEA:  MOVLB  6
03FEC:  ADDWF  x40,W
03FEE:  MOVWF  x4D
03FF0:  MOVLW  01
03FF2:  ADDWF  x41,W
03FF4:  MOVWF  x4E
03FF6:  MOVFF  64D,657
03FFA:  MOVWF  x58
03FFC:  MOVLW  06
03FFE:  MOVWF  x5A
04000:  MOVLW  44
04002:  MOVWF  x59
04004:  MOVFF  643,65B
04008:  CLRF   x5C
0400A:  MOVLB  0
0400C:  CALL   20F4
....................    } 
....................    else 
04010:  BRA    4158
04012:  MOVLB  6
....................    { 
....................       if(sombreado==3) 
04014:  MOVF   x42,W
04016:  SUBLW  03
04018:  BNZ   408A
....................       { 
....................          sprintf(voltage, "%03u", digito); 
0401A:  MOVLW  06
0401C:  MOVWF  x3D
0401E:  MOVLW  44
04020:  MOVWF  x3C
04022:  MOVFF  63F,64D
04026:  MOVLW  03
04028:  MOVWF  x4E
0402A:  MOVLB  0
0402C:  RCALL  3F16
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
0402E:  MOVLB  6
04030:  MOVF   x43,W
04032:  MULLW  12
04034:  MOVF   FF3,W
04036:  ADDWF  x40,W
04038:  MOVWF  x4D
0403A:  MOVF   x43,W
0403C:  MULLW  08
0403E:  MOVF   FF3,W
04040:  ADDWF  x41,W
04042:  MOVWF  x4E
04044:  MOVFF  640,657
04048:  MOVFF  641,658
0404C:  MOVFF  64D,659
04050:  MOVWF  x5A
04052:  MOVLW  01
04054:  MOVWF  x5B
04056:  CLRF   x5C
04058:  MOVLB  0
0405A:  CALL   23EA
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
0405E:  MOVLW  01
04060:  MOVLB  6
04062:  ADDWF  x40,W
04064:  MOVWF  x4D
04066:  MOVLW  01
04068:  ADDWF  x41,W
0406A:  MOVWF  x4E
0406C:  MOVFF  64D,657
04070:  MOVWF  x58
04072:  MOVLW  06
04074:  MOVWF  x5A
04076:  MOVLW  44
04078:  MOVWF  x59
0407A:  MOVFF  643,65B
0407E:  MOVLW  01
04080:  MOVWF  x5C
04082:  MOVLB  0
04084:  CALL   20F4
04088:  MOVLB  6
....................       } 
....................       sprintf(voltage, "%u", digito); 
0408A:  MOVLW  06
0408C:  MOVWF  x3D
0408E:  MOVLW  44
04090:  MOVWF  x3C
04092:  MOVFF  63F,64D
04096:  MOVLW  1B
04098:  MOVWF  x4E
0409A:  MOVLB  0
0409C:  RCALL  3F16
....................       if(sombreado==1) 
0409E:  MOVLB  6
040A0:  DECFSZ x42,W
040A2:  BRA    40FC
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
040A4:  MOVF   x43,W
040A6:  MULLW  05
040A8:  MOVF   FF3,W
040AA:  ADDWF  x40,W
040AC:  MOVWF  x4D
040AE:  MOVF   x43,W
040B0:  MULLW  08
040B2:  MOVF   FF3,W
040B4:  ADDWF  x41,W
040B6:  MOVWF  x4E
040B8:  MOVFF  640,657
040BC:  MOVFF  641,658
040C0:  MOVFF  64D,659
040C4:  MOVWF  x5A
040C6:  MOVLW  01
040C8:  MOVWF  x5B
040CA:  MOVWF  x5C
040CC:  MOVLB  0
040CE:  CALL   23EA
040D2:  MOVLW  01
040D4:  MOVLB  6
040D6:  ADDWF  x40,W
040D8:  MOVWF  x4D
040DA:  MOVLW  01
040DC:  ADDWF  x41,W
040DE:  MOVWF  x4E
040E0:  MOVFF  64D,657
040E4:  MOVWF  x58
040E6:  MOVLW  06
040E8:  MOVWF  x5A
040EA:  MOVLW  44
040EC:  MOVWF  x59
040EE:  MOVFF  643,65B
040F2:  CLRF   x5C
040F4:  MOVLB  0
040F6:  CALL   20F4
040FA:  MOVLB  6
....................       if(sombreado==0) 
040FC:  MOVF   x42,F
040FE:  BNZ   415A
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
04100:  MOVF   x43,W
04102:  MULLW  05
04104:  MOVF   FF3,W
04106:  ADDWF  x40,W
04108:  MOVWF  x4D
0410A:  MOVF   x43,W
0410C:  MULLW  08
0410E:  MOVF   FF3,W
04110:  ADDWF  x41,W
04112:  MOVWF  x4E
04114:  MOVFF  640,657
04118:  MOVFF  641,658
0411C:  MOVFF  64D,659
04120:  MOVWF  x5A
04122:  MOVLW  01
04124:  MOVWF  x5B
04126:  CLRF   x5C
04128:  MOVLB  0
0412A:  CALL   23EA
0412E:  MOVLW  01
04130:  MOVLB  6
04132:  ADDWF  x40,W
04134:  MOVWF  x4D
04136:  MOVLW  01
04138:  ADDWF  x41,W
0413A:  MOVWF  x4E
0413C:  MOVFF  64D,657
04140:  MOVWF  x58
04142:  MOVLW  06
04144:  MOVWF  x5A
04146:  MOVLW  44
04148:  MOVWF  x59
0414A:  MOVFF  643,65B
0414E:  MOVLW  01
04150:  MOVWF  x5C
04152:  MOVLB  0
04154:  CALL   20F4
04158:  MOVLB  6
....................    } 
....................    glcd_update(); 
0415A:  MOVLB  0
0415C:  CALL   1ED8
.................... } 
04160:  RETLW  00
....................  
.................... void displayTemperatura(int16 digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
0385E:  MOVLB  6
03860:  MOVF   x44,W
03862:  SUBLW  02
03864:  BNZ   38DA
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
03866:  MOVLW  06
03868:  MOVWF  x3D
0386A:  MOVLW  46
0386C:  MOVWF  x3C
0386E:  MOVLW  0A
03870:  MOVWF  FE9
03872:  MOVFF  641,650
03876:  MOVFF  640,64F
0387A:  MOVLB  0
0387C:  RCALL  37A0
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
0387E:  MOVLB  6
03880:  MOVF   x45,W
03882:  MULLW  12
03884:  MOVF   FF3,W
03886:  ADDWF  x42,W
03888:  MOVWF  x4F
0388A:  MOVF   x45,W
0388C:  MULLW  08
0388E:  MOVF   FF3,W
03890:  ADDWF  x43,W
03892:  MOVWF  x50
03894:  MOVFF  642,657
03898:  MOVFF  643,658
0389C:  MOVFF  64F,659
038A0:  MOVWF  x5A
038A2:  MOVLW  01
038A4:  MOVWF  x5B
038A6:  MOVWF  x5C
038A8:  MOVLB  0
038AA:  CALL   23EA
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
038AE:  MOVLW  01
038B0:  MOVLB  6
038B2:  ADDWF  x42,W
038B4:  MOVWF  x4F
038B6:  MOVLW  01
038B8:  ADDWF  x43,W
038BA:  MOVWF  x50
038BC:  MOVFF  64F,657
038C0:  MOVWF  x58
038C2:  MOVLW  06
038C4:  MOVWF  x5A
038C6:  MOVLW  46
038C8:  MOVWF  x59
038CA:  MOVFF  645,65B
038CE:  CLRF   x5C
038D0:  MOVLB  0
038D2:  CALL   20F4
....................    } 
....................    else 
038D6:  BRA    3A0C
038D8:  MOVLB  6
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
038DA:  MOVLW  06
038DC:  MOVWF  x3D
038DE:  MOVLW  46
038E0:  MOVWF  x3C
038E2:  MOVLW  0A
038E4:  MOVWF  FE9
038E6:  MOVFF  641,650
038EA:  MOVFF  640,64F
038EE:  MOVLB  0
038F0:  RCALL  37A0
....................     
....................       if(sombreado==4) 
038F2:  MOVLB  6
038F4:  MOVF   x44,W
038F6:  SUBLW  04
038F8:  BNZ   3954
....................       { 
....................          glcd_rect(x, y, x+(tamano*16), y+(tamano*8), YES, OFF); 
038FA:  MOVF   x45,W
038FC:  MULLW  10
038FE:  MOVF   FF3,W
03900:  ADDWF  x42,W
03902:  MOVWF  x4F
03904:  MOVF   x45,W
03906:  MULLW  08
03908:  MOVF   FF3,W
0390A:  ADDWF  x43,W
0390C:  MOVWF  x50
0390E:  MOVFF  642,657
03912:  MOVFF  643,658
03916:  MOVFF  64F,659
0391A:  MOVWF  x5A
0391C:  MOVLW  01
0391E:  MOVWF  x5B
03920:  CLRF   x5C
03922:  MOVLB  0
03924:  CALL   23EA
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
03928:  MOVLW  01
0392A:  MOVLB  6
0392C:  ADDWF  x42,W
0392E:  MOVWF  x4F
03930:  MOVLW  01
03932:  ADDWF  x43,W
03934:  MOVWF  x50
03936:  MOVFF  64F,657
0393A:  MOVWF  x58
0393C:  MOVLW  06
0393E:  MOVWF  x5A
03940:  MOVLW  46
03942:  MOVWF  x59
03944:  MOVFF  645,65B
03948:  MOVLW  01
0394A:  MOVWF  x5C
0394C:  MOVLB  0
0394E:  CALL   20F4
03952:  MOVLB  6
....................       } 
....................       if(sombreado==1) 
03954:  DECFSZ x44,W
03956:  BRA    39B0
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
03958:  MOVF   x45,W
0395A:  MULLW  05
0395C:  MOVF   FF3,W
0395E:  ADDWF  x42,W
03960:  MOVWF  x4F
03962:  MOVF   x45,W
03964:  MULLW  08
03966:  MOVF   FF3,W
03968:  ADDWF  x43,W
0396A:  MOVWF  x50
0396C:  MOVFF  642,657
03970:  MOVFF  643,658
03974:  MOVFF  64F,659
03978:  MOVWF  x5A
0397A:  MOVLW  01
0397C:  MOVWF  x5B
0397E:  MOVWF  x5C
03980:  MOVLB  0
03982:  CALL   23EA
03986:  MOVLW  01
03988:  MOVLB  6
0398A:  ADDWF  x42,W
0398C:  MOVWF  x4F
0398E:  MOVLW  01
03990:  ADDWF  x43,W
03992:  MOVWF  x50
03994:  MOVFF  64F,657
03998:  MOVWF  x58
0399A:  MOVLW  06
0399C:  MOVWF  x5A
0399E:  MOVLW  46
039A0:  MOVWF  x59
039A2:  MOVFF  645,65B
039A6:  CLRF   x5C
039A8:  MOVLB  0
039AA:  CALL   20F4
039AE:  MOVLB  6
....................       if(sombreado==0) 
039B0:  MOVF   x44,F
039B2:  BNZ   3A0E
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
039B4:  MOVF   x45,W
039B6:  MULLW  05
039B8:  MOVF   FF3,W
039BA:  ADDWF  x42,W
039BC:  MOVWF  x4F
039BE:  MOVF   x45,W
039C0:  MULLW  08
039C2:  MOVF   FF3,W
039C4:  ADDWF  x43,W
039C6:  MOVWF  x50
039C8:  MOVFF  642,657
039CC:  MOVFF  643,658
039D0:  MOVFF  64F,659
039D4:  MOVWF  x5A
039D6:  MOVLW  01
039D8:  MOVWF  x5B
039DA:  CLRF   x5C
039DC:  MOVLB  0
039DE:  CALL   23EA
039E2:  MOVLW  01
039E4:  MOVLB  6
039E6:  ADDWF  x42,W
039E8:  MOVWF  x4F
039EA:  MOVLW  01
039EC:  ADDWF  x43,W
039EE:  MOVWF  x50
039F0:  MOVFF  64F,657
039F4:  MOVWF  x58
039F6:  MOVLW  06
039F8:  MOVWF  x5A
039FA:  MOVLW  46
039FC:  MOVWF  x59
039FE:  MOVFF  645,65B
03A02:  MOVLW  01
03A04:  MOVWF  x5C
03A06:  MOVLB  0
03A08:  CALL   20F4
03A0C:  MOVLB  6
....................    } 
....................    glcd_update(); 
03A0E:  MOVLB  0
03A10:  CALL   1ED8
.................... } 
03A14:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
04162:  MOVLB  6
04164:  MOVF   x3E,W
04166:  SUBLW  05
04168:  BNZ   420E
....................    for( i = 0 ; i < 64 ; i ++ ) 
0416A:  CLRF   x3F
0416C:  MOVF   x3F,W
0416E:  SUBLW  3F
04170:  BNC   420E
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
04172:  CLRF   x40
04174:  MOVF   x40,W
04176:  SUBLW  0F
04178:  BNC   420A
....................       {     
....................          for(k=7;k>-1;k--) 
0417A:  MOVLW  07
0417C:  MOVWF  x41
0417E:  MOVF   x41,W
04180:  XORLW  80
04182:  SUBLW  7F
04184:  BC    4206
....................          {       
....................             if( bit_test(Horno[i][j] ,7-k ))  
04186:  CLRF   x43
04188:  MOVFF  63F,642
0418C:  CLRF   x45
0418E:  MOVLW  10
04190:  MOVWF  x44
04192:  MOVLB  0
04194:  CALL   26F6
04198:  MOVFF  02,643
0419C:  MOVFF  01,642
041A0:  MOVLB  6
041A2:  MOVF   x40,W
041A4:  ADDWF  01,W
041A6:  MOVWF  01
041A8:  MOVLW  00
041AA:  ADDWFC 02,W
041AC:  MOVWF  03
041AE:  MOVF   01,W
041B0:  MOVFF  FF2,642
041B4:  BCF    FF2.7
041B6:  MOVFF  03,FF7
041BA:  MOVLB  0
041BC:  CALL   02B6
041C0:  MOVLB  6
041C2:  BTFSC  x42.7
041C4:  BSF    FF2.7
041C6:  MOVWF  x42
041C8:  MOVLW  07
041CA:  BSF    FD8.0
041CC:  SUBFWB x41,W
041CE:  MOVWF  x43
041D0:  MOVFF  642,00
041D4:  MOVF   x43,W
041D6:  MOVWF  01
041D8:  BZ    41E2
041DA:  BCF    FD8.0
041DC:  RRCF   00,F
041DE:  DECFSZ 01,F
041E0:  BRA    41DA
041E2:  BTFSS  00.0
041E4:  BRA    4202
....................                glcd_pixel( j*8+k,i, ON ); 
041E6:  MOVF   x40,W
041E8:  MULLW  08
041EA:  MOVF   FF3,W
041EC:  ADDWF  x41,W
041EE:  MOVWF  x42
041F0:  MOVWF  x72
041F2:  MOVFF  63F,673
041F6:  MOVLW  01
041F8:  MOVWF  x74
041FA:  MOVLB  0
041FC:  CALL   2038
04200:  MOVLB  6
....................          }   
04202:  DECF   x41,F
04204:  BRA    417E
....................       } 
04206:  INCF   x40,F
04208:  BRA    4174
....................    } 
0420A:  INCF   x3F,F
0420C:  BRA    416C
....................    } 
....................     
.................... } 
0420E:  MOVLB  0
04210:  GOTO   6552 (RETURN)
....................     
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
.................... } 
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
04B9E:  MOVLW  06
04BA0:  MOVLB  6
04BA2:  MOVWF  x3D
04BA4:  MOVLW  45
04BA6:  MOVWF  x3C
04BA8:  MOVLW  42
04BAA:  MOVWF  FE9
04BAC:  MOVFF  641,654
04BB0:  MOVFF  640,653
04BB4:  MOVFF  63F,652
04BB8:  MOVFF  63E,651
04BBC:  MOVLW  01
04BBE:  MOVWF  x55
04BC0:  MOVLB  0
04BC2:  CALL   3ADA
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
04BC6:  MOVLB  6
04BC8:  MOVF   x44,W
04BCA:  MULLW  1B
04BCC:  MOVF   FF3,W
04BCE:  ADDWF  x42,W
04BD0:  MOVWF  x4E
04BD2:  MOVF   x44,W
04BD4:  MULLW  08
04BD6:  MOVF   FF3,W
04BD8:  ADDWF  x43,W
04BDA:  MOVWF  x4F
04BDC:  MOVFF  642,657
04BE0:  MOVFF  643,658
04BE4:  MOVFF  64E,659
04BE8:  MOVWF  x5A
04BEA:  MOVLW  01
04BEC:  MOVWF  x5B
04BEE:  CLRF   x5C
04BF0:  MOVLB  0
04BF2:  CALL   23EA
....................    glcd_text57(x, y, voltage, w, ON); 
04BF6:  MOVFF  642,657
04BFA:  MOVFF  643,658
04BFE:  MOVLW  06
04C00:  MOVLB  6
04C02:  MOVWF  x5A
04C04:  MOVLW  45
04C06:  MOVWF  x59
04C08:  MOVFF  644,65B
04C0C:  MOVLW  01
04C0E:  MOVWF  x5C
04C10:  MOVLB  0
04C12:  CALL   20F4
.................... } 
04C16:  RETLW  00
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
02B4C:  MOVLW  06
02B4E:  MOVLB  6
02B50:  MOVWF  x3D
02B52:  MOVLW  4C
02B54:  MOVWF  x3C
02B56:  MOVFF  648,655
02B5A:  MOVLW  1F
02B5C:  MOVWF  x56
02B5E:  MOVLB  0
02B60:  BRA    2A6C
....................     
....................    if(sombreado==1) 
02B62:  MOVLB  6
02B64:  DECFSZ x4B,W
02B66:  BRA    2BB8
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
02B68:  MOVLW  12
02B6A:  ADDWF  x49,W
02B6C:  MOVWF  x55
02B6E:  MOVLW  18
02B70:  ADDWF  x4A,W
02B72:  MOVWF  x56
02B74:  MOVFF  649,657
02B78:  MOVFF  64A,658
02B7C:  MOVFF  655,659
02B80:  MOVWF  x5A
02B82:  MOVLW  01
02B84:  MOVWF  x5B
02B86:  MOVWF  x5C
02B88:  MOVLB  0
02B8A:  RCALL  23EA
02B8C:  MOVLW  02
02B8E:  MOVLB  6
02B90:  ADDWF  x49,W
02B92:  MOVWF  x55
02B94:  MOVLW  01
02B96:  ADDWF  x4A,W
02B98:  MOVWF  x56
02B9A:  MOVFF  655,657
02B9E:  MOVWF  x58
02BA0:  MOVLW  06
02BA2:  MOVWF  x5A
02BA4:  MOVLW  4C
02BA6:  MOVWF  x59
02BA8:  MOVLW  02
02BAA:  MOVWF  x5B
02BAC:  CLRF   x5C
02BAE:  MOVLB  0
02BB0:  CALL   20F4
....................    else    
02BB4:  BRA    2C04
02BB6:  MOVLB  6
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
02BB8:  MOVLW  12
02BBA:  ADDWF  x49,W
02BBC:  MOVWF  x55
02BBE:  MOVLW  18
02BC0:  ADDWF  x4A,W
02BC2:  MOVWF  x56
02BC4:  MOVFF  649,657
02BC8:  MOVFF  64A,658
02BCC:  MOVFF  655,659
02BD0:  MOVWF  x5A
02BD2:  CLRF   x5B
02BD4:  CLRF   x5C
02BD6:  MOVLB  0
02BD8:  RCALL  23EA
02BDA:  MOVLW  02
02BDC:  MOVLB  6
02BDE:  ADDWF  x49,W
02BE0:  MOVWF  x55
02BE2:  MOVLW  01
02BE4:  ADDWF  x4A,W
02BE6:  MOVWF  x56
02BE8:  MOVFF  655,657
02BEC:  MOVWF  x58
02BEE:  MOVLW  06
02BF0:  MOVWF  x5A
02BF2:  MOVLW  4C
02BF4:  MOVWF  x59
02BF6:  MOVLW  02
02BF8:  MOVWF  x5B
02BFA:  MOVLW  01
02BFC:  MOVWF  x5C
02BFE:  MOVLB  0
02C00:  CALL   20F4
....................  
.................... } 
02C04:  RETLW  00
....................  
....................  
.................... void MensajeAlmacenado(){ 
....................    glcd_fillScreen(OFF); 
*
02C14:  MOVLB  6
02C16:  CLRF   x46
02C18:  MOVLB  0
02C1A:  CALL   1E7E
....................    strcpy(Menus.Letra,"Valor"); 
02C1E:  MOVLW  06
02C20:  MOVWF  FEA
02C22:  MOVLW  1E
02C24:  MOVWF  FE9
02C26:  MOVFF  FF2,646
02C2A:  BCF    FF2.7
02C2C:  MOVLW  00
02C2E:  CALL   06F2
02C32:  TBLRD*-
02C34:  TBLRD*+
02C36:  MOVF   FF5,W
02C38:  MOVWF  FEE
02C3A:  IORLW  00
02C3C:  BNZ   2C34
02C3E:  MOVLB  6
02C40:  BTFSC  x46.7
02C42:  BSF    FF2.7
....................    displayMenu(Menus.Letra,30,0,0,2); 
02C44:  MOVLW  06
02C46:  MOVWF  x47
02C48:  MOVLW  1E
02C4A:  MOVWF  x46
02C4C:  MOVWF  x48
02C4E:  CLRF   x49
02C50:  CLRF   x4A
02C52:  MOVLW  02
02C54:  MOVWF  x4B
02C56:  MOVLB  0
02C58:  RCALL  24AC
....................    strcpy(Menus.Letra," Almacenado"); 
02C5A:  MOVLW  06
02C5C:  MOVWF  FEA
02C5E:  MOVLW  1E
02C60:  MOVWF  FE9
02C62:  MOVFF  FF2,646
02C66:  BCF    FF2.7
02C68:  MOVLW  00
02C6A:  CALL   0716
02C6E:  TBLRD*-
02C70:  TBLRD*+
02C72:  MOVF   FF5,W
02C74:  MOVWF  FEE
02C76:  IORLW  00
02C78:  BNZ   2C70
02C7A:  MOVLB  6
02C7C:  BTFSC  x46.7
02C7E:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,2); 
02C80:  MOVLW  06
02C82:  MOVWF  x47
02C84:  MOVLW  1E
02C86:  MOVWF  x46
02C88:  CLRF   x48
02C8A:  MOVWF  x49
02C8C:  CLRF   x4A
02C8E:  MOVLW  02
02C90:  MOVWF  x4B
02C92:  MOVLB  0
02C94:  RCALL  24AC
....................    glcd_update(); 
02C96:  CALL   1ED8
....................    delay_ms(2000); 
02C9A:  MOVLW  08
02C9C:  MOVLB  6
02C9E:  MOVWF  x46
02CA0:  MOVLW  FA
02CA2:  MOVWF  x47
02CA4:  MOVLB  0
02CA6:  CALL   0E5A
02CAA:  MOVLB  6
02CAC:  DECFSZ x46,F
02CAE:  BRA    2CA0
....................    glcd_fillScreen(OFF); 
02CB0:  CLRF   x46
02CB2:  MOVLB  0
02CB4:  CALL   1E7E
.................... } 
02CB8:  RETLW  00
....................  
.................... void ConfiguraInterrupciones(){ 
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
*
00E82:  MOVLW  85
00E84:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
00E86:  BSF    F9D.0
....................    setup_adc_ports(AN0_TO_AN1); 
00E88:  MOVF   FC1,W
00E8A:  ANDLW  C0
00E8C:  IORLW  0D
00E8E:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_64); 
00E90:  MOVF   FC0,W
00E92:  ANDLW  C0
00E94:  IORLW  06
00E96:  MOVWF  FC0
00E98:  BSF    FC0.7
00E9A:  BSF    FC2.0
....................    enable_interrupts(global); 
00E9C:  MOVLW  C0
00E9E:  IORWF  FF2,F
.................... } 
00EA0:  GOTO   5100 (RETURN)
....................  
.................... void MensajeBienvenida(){ 
....................    glcd_init(ON);             //Inicializa la glcd 
*
028CA:  MOVLW  01
028CC:  MOVLB  6
028CE:  MOVWF  x3E
028D0:  MOVLB  0
028D2:  CALL   1F90
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
028D6:  MOVLB  6
028D8:  CLRF   x46
028DA:  MOVLB  0
028DC:  CALL   1E7E
....................    strcpy(Menus.Letra,"JP Inglobal"); 
028E0:  MOVLW  06
028E2:  MOVWF  FEA
028E4:  MOVLW  1E
028E6:  MOVWF  FE9
028E8:  MOVFF  FF2,63E
028EC:  BCF    FF2.7
028EE:  MOVLW  00
028F0:  CALL   0740
028F4:  TBLRD*-
028F6:  TBLRD*+
028F8:  MOVF   FF5,W
028FA:  MOVWF  FEE
028FC:  IORLW  00
028FE:  BNZ   28F6
02900:  MOVLB  6
02902:  BTFSC  x3E.7
02904:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
02906:  MOVLW  06
02908:  MOVWF  x47
0290A:  MOVLW  1E
0290C:  MOVWF  x46
0290E:  CLRF   x48
02910:  CLRF   x49
02912:  CLRF   x4A
02914:  MOVLW  02
02916:  MOVWF  x4B
02918:  MOVLB  0
0291A:  RCALL  24AC
....................    strcpy(Menus.Letra,"    Incubadora"); 
0291C:  MOVLW  06
0291E:  MOVWF  FEA
02920:  MOVLW  1E
02922:  MOVWF  FE9
02924:  MOVFF  FF2,63E
02928:  BCF    FF2.7
0292A:  MOVLW  00
0292C:  CALL   076A
02930:  TBLRD*-
02932:  TBLRD*+
02934:  MOVF   FF5,W
02936:  MOVWF  FEE
02938:  IORLW  00
0293A:  BNZ   2932
0293C:  MOVLB  6
0293E:  BTFSC  x3E.7
02940:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
02942:  MOVLW  06
02944:  MOVWF  x47
02946:  MOVLW  1E
02948:  MOVWF  x46
0294A:  CLRF   x48
0294C:  MOVLW  14
0294E:  MOVWF  x49
02950:  CLRF   x4A
02952:  MOVLW  01
02954:  MOVWF  x4B
02956:  MOVLB  0
02958:  RCALL  24AC
....................    strcpy(Menus.Letra,"     Digital  "); 
0295A:  MOVLW  06
0295C:  MOVWF  FEA
0295E:  MOVLW  1E
02960:  MOVWF  FE9
02962:  MOVFF  FF2,63E
02966:  BCF    FF2.7
02968:  MOVLW  00
0296A:  CALL   0798
0296E:  TBLRD*-
02970:  TBLRD*+
02972:  MOVF   FF5,W
02974:  MOVWF  FEE
02976:  IORLW  00
02978:  BNZ   2970
0297A:  MOVLB  6
0297C:  BTFSC  x3E.7
0297E:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,1); 
02980:  MOVLW  06
02982:  MOVWF  x47
02984:  MOVLW  1E
02986:  MOVWF  x46
02988:  CLRF   x48
0298A:  MOVWF  x49
0298C:  CLRF   x4A
0298E:  MOVLW  01
02990:  MOVWF  x4B
02992:  MOVLB  0
02994:  RCALL  24AC
....................    strcpy(Menus.Letra,"    53 Lts"); 
02996:  MOVLW  06
02998:  MOVWF  FEA
0299A:  MOVLW  1E
0299C:  MOVWF  FE9
0299E:  MOVFF  FF2,63E
029A2:  BCF    FF2.7
029A4:  MOVLW  00
029A6:  CALL   07C6
029AA:  TBLRD*-
029AC:  TBLRD*+
029AE:  MOVF   FF5,W
029B0:  MOVWF  FEE
029B2:  IORLW  00
029B4:  BNZ   29AC
029B6:  MOVLB  6
029B8:  BTFSC  x3E.7
029BA:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,45,0,2); 
029BC:  MOVLW  06
029BE:  MOVWF  x47
029C0:  MOVLW  1E
029C2:  MOVWF  x46
029C4:  CLRF   x48
029C6:  MOVLW  2D
029C8:  MOVWF  x49
029CA:  CLRF   x4A
029CC:  MOVLW  02
029CE:  MOVWF  x4B
029D0:  MOVLB  0
029D2:  RCALL  24AC
....................    delay_ms(1000); 
029D4:  MOVLW  04
029D6:  MOVLB  6
029D8:  MOVWF  x3E
029DA:  MOVLW  FA
029DC:  MOVWF  x47
029DE:  MOVLB  0
029E0:  CALL   0E5A
029E4:  MOVLB  6
029E6:  DECFSZ x3E,F
029E8:  BRA    29DA
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
029EA:  CLRF   x46
029EC:  MOVLB  0
029EE:  CALL   1E7E
....................     
....................    for(i=0;i<80;i++) 
029F2:  MOVLB  5
029F4:  CLRF   x9A
029F6:  MOVF   x9A,W
029F8:  SUBLW  4F
029FA:  BNC   2A1A
....................    { 
....................       Temperatura=Leer_Sensor(MediaMovil); 
029FC:  MOVFF  58C,63E
02A00:  MOVLB  0
02A02:  RCALL  2718
02A04:  MOVFF  03,601
02A08:  MOVFF  02,600
02A0C:  MOVFF  01,5FF
02A10:  MOVFF  00,5FE
....................    } 
02A14:  MOVLB  5
02A16:  INCF   x9A,F
02A18:  BRA    29F6
.................... } 
02A1A:  MOVLB  0
02A1C:  GOTO   510C (RETURN)
....................  
.................... void LeeEEPROM(){ 
....................    Testerilizacionp[0]=read_eeprom(0); 
*
012B0:  MOVFF  FF2,63E
012B4:  BCF    FF2.7
012B6:  CLRF   FAA
012B8:  CLRF   FA9
012BA:  BCF    FA6.6
012BC:  BCF    FA6.7
012BE:  BSF    FA6.0
012C0:  MOVF   FA8,W
012C2:  MOVLB  6
012C4:  BTFSC  x3E.7
012C6:  BSF    FF2.7
012C8:  MOVLB  5
012CA:  MOVWF  xC2
....................    delay_ms(10);    
012CC:  MOVLW  0A
012CE:  MOVLB  6
012D0:  MOVWF  x47
012D2:  MOVLB  0
012D4:  RCALL  0E5A
....................    Testerilizacionp[1]=read_eeprom(1); 
012D6:  MOVFF  FF2,63E
012DA:  BCF    FF2.7
012DC:  CLRF   FAA
012DE:  MOVLW  01
012E0:  MOVWF  FA9
012E2:  BCF    FA6.6
012E4:  BCF    FA6.7
012E6:  BSF    FA6.0
012E8:  MOVF   FA8,W
012EA:  MOVLB  6
012EC:  BTFSC  x3E.7
012EE:  BSF    FF2.7
012F0:  MOVLB  5
012F2:  MOVWF  xC3
....................    delay_ms(10);    
012F4:  MOVLW  0A
012F6:  MOVLB  6
012F8:  MOVWF  x47
012FA:  MOVLB  0
012FC:  RCALL  0E5A
....................    Testerilizacionp[2]=read_eeprom(2); 
012FE:  MOVFF  FF2,63E
01302:  BCF    FF2.7
01304:  CLRF   FAA
01306:  MOVLW  02
01308:  MOVWF  FA9
0130A:  BCF    FA6.6
0130C:  BCF    FA6.7
0130E:  BSF    FA6.0
01310:  MOVF   FA8,W
01312:  MOVLB  6
01314:  BTFSC  x3E.7
01316:  BSF    FF2.7
01318:  MOVLB  5
0131A:  MOVWF  xC4
....................    delay_ms(10); 
0131C:  MOVLW  0A
0131E:  MOVLB  6
01320:  MOVWF  x47
01322:  MOVLB  0
01324:  RCALL  0E5A
....................    Testerilizacionp[3]=read_eeprom(3); 
01326:  MOVFF  FF2,63E
0132A:  BCF    FF2.7
0132C:  CLRF   FAA
0132E:  MOVLW  03
01330:  MOVWF  FA9
01332:  BCF    FA6.6
01334:  BCF    FA6.7
01336:  BSF    FA6.0
01338:  MOVF   FA8,W
0133A:  MOVLB  6
0133C:  BTFSC  x3E.7
0133E:  BSF    FF2.7
01340:  MOVLB  5
01342:  MOVWF  xC5
....................    delay_ms(10);    
01344:  MOVLW  0A
01346:  MOVLB  6
01348:  MOVWF  x47
0134A:  MOVLB  0
0134C:  RCALL  0E5A
....................     
....................    entero=read_eeprom(80); 
0134E:  MOVFF  FF2,63E
01352:  BCF    FF2.7
01354:  CLRF   FAA
01356:  MOVLW  50
01358:  MOVWF  FA9
0135A:  BCF    FA6.6
0135C:  BCF    FA6.7
0135E:  BSF    FA6.0
01360:  MOVF   FA8,W
01362:  MOVLB  6
01364:  BTFSC  x3E.7
01366:  BSF    FF2.7
01368:  MOVLB  5
0136A:  MOVWF  xA1
....................    delay_ms(10);    
0136C:  MOVLW  0A
0136E:  MOVLB  6
01370:  MOVWF  x47
01372:  MOVLB  0
01374:  RCALL  0E5A
....................    Temporal=read_eeprom(81); 
01376:  MOVFF  FF2,63E
0137A:  BCF    FF2.7
0137C:  CLRF   FAA
0137E:  MOVLW  51
01380:  MOVWF  FA9
01382:  BCF    FA6.6
01384:  BCF    FA6.7
01386:  BSF    FA6.0
01388:  MOVF   FA8,W
0138A:  MOVLB  6
0138C:  BTFSC  x3E.7
0138E:  BSF    FF2.7
01390:  CLRF   x45
01392:  MOVWF  x44
01394:  MOVLB  0
01396:  RCALL  0EA4
01398:  MOVFF  03,61D
0139C:  MOVFF  02,61C
013A0:  MOVFF  01,61B
013A4:  MOVFF  00,61A
....................    Temporal=Temporal/10.0; 
013A8:  MOVFF  61D,642
013AC:  MOVFF  61C,641
013B0:  MOVFF  61B,640
013B4:  MOVFF  61A,63F
013B8:  MOVLB  6
013BA:  CLRF   x46
013BC:  CLRF   x45
013BE:  MOVLW  20
013C0:  MOVWF  x44
013C2:  MOVLW  82
013C4:  MOVWF  x43
013C6:  MOVLB  0
013C8:  RCALL  0EDA
013CA:  MOVFF  03,61D
013CE:  MOVFF  02,61C
013D2:  MOVFF  01,61B
013D6:  MOVFF  00,61A
....................    Temperatura1=entero+Temporal; 
013DA:  MOVLB  6
013DC:  CLRF   x45
013DE:  MOVFF  5A1,644
013E2:  MOVLB  0
013E4:  RCALL  0EA4
013E6:  BCF    FD8.1
013E8:  MOVFF  03,646
013EC:  MOVFF  02,645
013F0:  MOVFF  01,644
013F4:  MOVFF  00,643
013F8:  MOVFF  61D,64A
013FC:  MOVFF  61C,649
01400:  MOVFF  61B,648
01404:  MOVFF  61A,647
01408:  RCALL  1038
0140A:  MOVFF  03,611
0140E:  MOVFF  02,610
01412:  MOVFF  01,60F
01416:  MOVFF  00,60E
....................    delay_ms(10);    
0141A:  MOVLW  0A
0141C:  MOVLB  6
0141E:  MOVWF  x47
01420:  MOVLB  0
01422:  RCALL  0E5A
....................     
....................    entero=read_eeprom(83); 
01424:  MOVFF  FF2,63E
01428:  BCF    FF2.7
0142A:  CLRF   FAA
0142C:  MOVLW  53
0142E:  MOVWF  FA9
01430:  BCF    FA6.6
01432:  BCF    FA6.7
01434:  BSF    FA6.0
01436:  MOVF   FA8,W
01438:  MOVLB  6
0143A:  BTFSC  x3E.7
0143C:  BSF    FF2.7
0143E:  MOVLB  5
01440:  MOVWF  xA1
....................    delay_ms(10);    
01442:  MOVLW  0A
01444:  MOVLB  6
01446:  MOVWF  x47
01448:  MOVLB  0
0144A:  RCALL  0E5A
....................    Temporal=read_eeprom(84); 
0144C:  MOVFF  FF2,63E
01450:  BCF    FF2.7
01452:  CLRF   FAA
01454:  MOVLW  54
01456:  MOVWF  FA9
01458:  BCF    FA6.6
0145A:  BCF    FA6.7
0145C:  BSF    FA6.0
0145E:  MOVF   FA8,W
01460:  MOVLB  6
01462:  BTFSC  x3E.7
01464:  BSF    FF2.7
01466:  CLRF   x45
01468:  MOVWF  x44
0146A:  MOVLB  0
0146C:  RCALL  0EA4
0146E:  MOVFF  03,61D
01472:  MOVFF  02,61C
01476:  MOVFF  01,61B
0147A:  MOVFF  00,61A
....................    Temporal=Temporal/10.0; 
0147E:  MOVFF  61D,642
01482:  MOVFF  61C,641
01486:  MOVFF  61B,640
0148A:  MOVFF  61A,63F
0148E:  MOVLB  6
01490:  CLRF   x46
01492:  CLRF   x45
01494:  MOVLW  20
01496:  MOVWF  x44
01498:  MOVLW  82
0149A:  MOVWF  x43
0149C:  MOVLB  0
0149E:  RCALL  0EDA
014A0:  MOVFF  03,61D
014A4:  MOVFF  02,61C
014A8:  MOVFF  01,61B
014AC:  MOVFF  00,61A
....................    Temperatura2=entero+Temporal; 
014B0:  MOVLB  6
014B2:  CLRF   x45
014B4:  MOVFF  5A1,644
014B8:  MOVLB  0
014BA:  RCALL  0EA4
014BC:  BCF    FD8.1
014BE:  MOVFF  03,646
014C2:  MOVFF  02,645
014C6:  MOVFF  01,644
014CA:  MOVFF  00,643
014CE:  MOVFF  61D,64A
014D2:  MOVFF  61C,649
014D6:  MOVFF  61B,648
014DA:  MOVFF  61A,647
014DE:  RCALL  1038
014E0:  MOVFF  03,615
014E4:  MOVFF  02,614
014E8:  MOVFF  01,613
014EC:  MOVFF  00,612
....................    delay_ms(10);    
014F0:  MOVLW  0A
014F2:  MOVLB  6
014F4:  MOVWF  x47
014F6:  MOVLB  0
014F8:  RCALL  0E5A
....................     
....................    entero=read_eeprom(86); 
014FA:  MOVFF  FF2,63E
014FE:  BCF    FF2.7
01500:  CLRF   FAA
01502:  MOVLW  56
01504:  MOVWF  FA9
01506:  BCF    FA6.6
01508:  BCF    FA6.7
0150A:  BSF    FA6.0
0150C:  MOVF   FA8,W
0150E:  MOVLB  6
01510:  BTFSC  x3E.7
01512:  BSF    FF2.7
01514:  MOVLB  5
01516:  MOVWF  xA1
....................    delay_ms(10);    
01518:  MOVLW  0A
0151A:  MOVLB  6
0151C:  MOVWF  x47
0151E:  MOVLB  0
01520:  RCALL  0E5A
....................    Temporal=read_eeprom(87); 
01522:  MOVFF  FF2,63E
01526:  BCF    FF2.7
01528:  CLRF   FAA
0152A:  MOVLW  57
0152C:  MOVWF  FA9
0152E:  BCF    FA6.6
01530:  BCF    FA6.7
01532:  BSF    FA6.0
01534:  MOVF   FA8,W
01536:  MOVLB  6
01538:  BTFSC  x3E.7
0153A:  BSF    FF2.7
0153C:  CLRF   x45
0153E:  MOVWF  x44
01540:  MOVLB  0
01542:  RCALL  0EA4
01544:  MOVFF  03,61D
01548:  MOVFF  02,61C
0154C:  MOVFF  01,61B
01550:  MOVFF  00,61A
....................    Temporal=Temporal/10.0; 
01554:  MOVFF  61D,642
01558:  MOVFF  61C,641
0155C:  MOVFF  61B,640
01560:  MOVFF  61A,63F
01564:  MOVLB  6
01566:  CLRF   x46
01568:  CLRF   x45
0156A:  MOVLW  20
0156C:  MOVWF  x44
0156E:  MOVLW  82
01570:  MOVWF  x43
01572:  MOVLB  0
01574:  RCALL  0EDA
01576:  MOVFF  03,61D
0157A:  MOVFF  02,61C
0157E:  MOVFF  01,61B
01582:  MOVFF  00,61A
....................    Temperatura3=entero+Temporal; 
01586:  MOVLB  6
01588:  CLRF   x45
0158A:  MOVFF  5A1,644
0158E:  MOVLB  0
01590:  RCALL  0EA4
01592:  BCF    FD8.1
01594:  MOVFF  03,646
01598:  MOVFF  02,645
0159C:  MOVFF  01,644
015A0:  MOVFF  00,643
015A4:  MOVFF  61D,64A
015A8:  MOVFF  61C,649
015AC:  MOVFF  61B,648
015B0:  MOVFF  61A,647
015B4:  RCALL  1038
015B6:  MOVFF  03,619
015BA:  MOVFF  02,618
015BE:  MOVFF  01,617
015C2:  MOVFF  00,616
....................    delay_ms(10);    
015C6:  MOVLW  0A
015C8:  MOVLB  6
015CA:  MOVWF  x47
015CC:  MOVLB  0
015CE:  RCALL  0E5A
....................     
....................    Password[0]=read_eeprom(10); 
015D0:  MOVFF  FF2,63E
015D4:  BCF    FF2.7
015D6:  CLRF   FAA
015D8:  MOVLW  0A
015DA:  MOVWF  FA9
015DC:  BCF    FA6.6
015DE:  BCF    FA6.7
015E0:  BSF    FA6.0
015E2:  MOVF   FA8,W
015E4:  MOVLB  6
015E6:  BTFSC  x3E.7
015E8:  BSF    FF2.7
015EA:  MOVLB  5
015EC:  MOVWF  xCA
....................    delay_ms(10);    
015EE:  MOVLW  0A
015F0:  MOVLB  6
015F2:  MOVWF  x47
015F4:  MOVLB  0
015F6:  RCALL  0E5A
....................    Password[1]=read_eeprom(11); 
015F8:  MOVFF  FF2,63E
015FC:  BCF    FF2.7
015FE:  CLRF   FAA
01600:  MOVLW  0B
01602:  MOVWF  FA9
01604:  BCF    FA6.6
01606:  BCF    FA6.7
01608:  BSF    FA6.0
0160A:  MOVF   FA8,W
0160C:  MOVLB  6
0160E:  BTFSC  x3E.7
01610:  BSF    FF2.7
01612:  MOVLB  5
01614:  MOVWF  xCB
....................    delay_ms(10);    
01616:  MOVLW  0A
01618:  MOVLB  6
0161A:  MOVWF  x47
0161C:  MOVLB  0
0161E:  RCALL  0E5A
....................    Password[2]=read_eeprom(12); 
01620:  MOVFF  FF2,63E
01624:  BCF    FF2.7
01626:  CLRF   FAA
01628:  MOVLW  0C
0162A:  MOVWF  FA9
0162C:  BCF    FA6.6
0162E:  BCF    FA6.7
01630:  BSF    FA6.0
01632:  MOVF   FA8,W
01634:  MOVLB  6
01636:  BTFSC  x3E.7
01638:  BSF    FF2.7
0163A:  MOVLB  5
0163C:  MOVWF  xCC
....................    delay_ms(10);    
0163E:  MOVLW  0A
01640:  MOVLB  6
01642:  MOVWF  x47
01644:  MOVLB  0
01646:  RCALL  0E5A
....................    Password[3]=read_eeprom(13); 
01648:  MOVFF  FF2,63E
0164C:  BCF    FF2.7
0164E:  CLRF   FAA
01650:  MOVLW  0D
01652:  MOVWF  FA9
01654:  BCF    FA6.6
01656:  BCF    FA6.7
01658:  BSF    FA6.0
0165A:  MOVF   FA8,W
0165C:  MOVLB  6
0165E:  BTFSC  x3E.7
01660:  BSF    FF2.7
01662:  MOVLB  5
01664:  MOVWF  xCD
....................    delay_ms(10);    
01666:  MOVLW  0A
01668:  MOVLB  6
0166A:  MOVWF  x47
0166C:  MOVLB  0
0166E:  CALL   0E5A
....................     
....................    Ganancia=read_eeprom(90); 
01672:  MOVFF  FF2,63E
01676:  BCF    FF2.7
01678:  CLRF   FAA
0167A:  MOVLW  5A
0167C:  MOVWF  FA9
0167E:  BCF    FA6.6
01680:  BCF    FA6.7
01682:  BSF    FA6.0
01684:  MOVF   FA8,W
01686:  MOVLB  6
01688:  BTFSC  x3E.7
0168A:  BSF    FF2.7
0168C:  CLRF   x45
0168E:  MOVWF  x44
01690:  MOVLB  0
01692:  RCALL  0EA4
01694:  MOVFF  03,5ED
01698:  MOVFF  02,5EC
0169C:  MOVFF  01,5EB
016A0:  MOVFF  00,5EA
....................    delay_ms(10);    
016A4:  MOVLW  0A
016A6:  MOVLB  6
016A8:  MOVWF  x47
016AA:  MOVLB  0
016AC:  CALL   0E5A
....................    Tciclo=read_eeprom(30); 
016B0:  MOVFF  FF2,63E
016B4:  BCF    FF2.7
016B6:  CLRF   FAA
016B8:  MOVLW  1E
016BA:  MOVWF  FA9
016BC:  BCF    FA6.6
016BE:  BCF    FA6.7
016C0:  BSF    FA6.0
016C2:  MOVF   FA8,W
016C4:  MOVLB  6
016C6:  BTFSC  x3E.7
016C8:  BSF    FF2.7
016CA:  CLRF   x45
016CC:  MOVWF  x44
016CE:  MOVLB  0
016D0:  CALL   0EA4
016D4:  MOVFF  03,5D5
016D8:  MOVFF  02,5D4
016DC:  MOVFF  01,5D3
016E0:  MOVFF  00,5D2
....................    delay_ms(10);    
016E4:  MOVLW  0A
016E6:  MOVLB  6
016E8:  MOVWF  x47
016EA:  MOVLB  0
016EC:  CALL   0E5A
....................    Ajuste=read_eeprom(40); 
016F0:  MOVFF  FF2,63E
016F4:  BCF    FF2.7
016F6:  CLRF   FAA
016F8:  MOVLW  28
016FA:  MOVWF  FA9
016FC:  BCF    FA6.6
016FE:  BCF    FA6.7
01700:  BSF    FA6.0
01702:  MOVF   FA8,W
01704:  MOVLB  6
01706:  BTFSC  x3E.7
01708:  BSF    FF2.7
0170A:  MOVLB  5
0170C:  MOVWF  x8A
....................    delay_ms(10);    
0170E:  MOVLW  0A
01710:  MOVLB  6
01712:  MOVWF  x47
01714:  MOVLB  0
01716:  CALL   0E5A
....................    Ajusten=read_eeprom(50); 
0171A:  MOVFF  FF2,63E
0171E:  BCF    FF2.7
01720:  CLRF   FAA
01722:  MOVLW  32
01724:  MOVWF  FA9
01726:  BCF    FA6.6
01728:  BCF    FA6.7
0172A:  BSF    FA6.0
0172C:  MOVF   FA8,W
0172E:  MOVLB  6
01730:  BTFSC  x3E.7
01732:  BSF    FF2.7
01734:  MOVLB  5
01736:  MOVWF  x8B
....................    delay_ms(10);    
01738:  MOVLW  0A
0173A:  MOVLB  6
0173C:  MOVWF  x47
0173E:  MOVLB  0
01740:  CALL   0E5A
....................    MediaMovil=read_eeprom(60); 
01744:  MOVFF  FF2,63E
01748:  BCF    FF2.7
0174A:  CLRF   FAA
0174C:  MOVLW  3C
0174E:  MOVWF  FA9
01750:  BCF    FA6.6
01752:  BCF    FA6.7
01754:  BSF    FA6.0
01756:  MOVF   FA8,W
01758:  MOVLB  6
0175A:  BTFSC  x3E.7
0175C:  BSF    FF2.7
0175E:  MOVLB  5
01760:  MOVWF  x8C
....................    delay_ms(10);    
01762:  MOVLW  0A
01764:  MOVLB  6
01766:  MOVWF  x47
01768:  MOVLB  0
0176A:  CALL   0E5A
....................    Coeficiente=read_eeprom(70); 
0176E:  MOVFF  FF2,63E
01772:  BCF    FF2.7
01774:  CLRF   FAA
01776:  MOVLW  46
01778:  MOVWF  FA9
0177A:  BCF    FA6.6
0177C:  BCF    FA6.7
0177E:  BSF    FA6.0
01780:  MOVF   FA8,W
01782:  MOVLB  6
01784:  BTFSC  x3E.7
01786:  BSF    FF2.7
01788:  CLRF   x45
0178A:  MOVWF  x44
0178C:  MOVLB  0
0178E:  CALL   0EA4
01792:  MOVFF  03,5F9
01796:  MOVFF  02,5F8
0179A:  MOVFF  01,5F7
0179E:  MOVFF  00,5F6
....................    delay_ms(10);    
017A2:  MOVLW  0A
017A4:  MOVLB  6
017A6:  MOVWF  x47
017A8:  MOVLB  0
017AA:  CALL   0E5A
....................    Saturacion=read_eeprom(100); 
017AE:  MOVFF  FF2,63E
017B2:  BCF    FF2.7
017B4:  CLRF   FAA
017B6:  MOVLW  64
017B8:  MOVWF  FA9
017BA:  BCF    FA6.6
017BC:  BCF    FA6.7
017BE:  BSF    FA6.0
017C0:  MOVF   FA8,W
017C2:  MOVLB  6
017C4:  BTFSC  x3E.7
017C6:  BSF    FF2.7
017C8:  CLRF   x45
017CA:  MOVWF  x44
017CC:  MOVLB  0
017CE:  CALL   0EA4
017D2:  MOVFF  03,605
017D6:  MOVFF  02,604
017DA:  MOVFF  01,603
017DE:  MOVFF  00,602
....................    delay_ms(10);    
017E2:  MOVLW  0A
017E4:  MOVLB  6
017E6:  MOVWF  x47
017E8:  MOVLB  0
017EA:  CALL   0E5A
....................    GananciaR=Ganancia; 
017EE:  MOVFF  5ED,5F1
017F2:  MOVFF  5EC,5F0
017F6:  MOVFF  5EB,5EF
017FA:  MOVFF  5EA,5EE
.................... } 
017FE:  GOTO   5104 (RETURN)
....................  
.................... void LimitaValores(){ 
....................    if(Testerilizacionp[0]>9 || Testerilizacionp[0]<0){ 
*
0187C:  MOVLB  5
0187E:  BTFSC  xC2.7
01880:  BRA    1888
01882:  MOVF   xC2,W
01884:  SUBLW  09
01886:  BNC   188E
01888:  BTFSC  xC2.7
0188A:  BRA    188E
0188C:  BRA    18C6
....................       Testerilizacionp[0]=0;write_eeprom(0,0);delay_ms(20); 
0188E:  CLRF   xC2
01890:  CLRF   FAA
01892:  CLRF   FA9
01894:  CLRF   FA8
01896:  BCF    FA6.6
01898:  BCF    FA6.7
0189A:  BSF    FA6.2
0189C:  MOVF   FF2,W
0189E:  MOVWF  00
018A0:  BCF    FF2.7
018A2:  MOVLB  F
018A4:  MOVLW  55
018A6:  MOVWF  FA7
018A8:  MOVLW  AA
018AA:  MOVWF  FA7
018AC:  BSF    FA6.1
018AE:  BTFSC  FA6.1
018B0:  BRA    18AE
018B2:  BCF    FA6.2
018B4:  MOVF   00,W
018B6:  IORWF  FF2,F
018B8:  MOVLW  14
018BA:  MOVLB  6
018BC:  MOVWF  x47
018BE:  MOVLB  0
018C0:  CALL   0E5A
018C4:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[1]>9 || Testerilizacionp[1]<0){ 
018C6:  BTFSC  xC3.7
018C8:  BRA    18D0
018CA:  MOVF   xC3,W
018CC:  SUBLW  09
018CE:  BNC   18D6
018D0:  BTFSC  xC3.7
018D2:  BRA    18D6
018D4:  BRA    1910
....................       Testerilizacionp[1]=0;write_eeprom(1,0);delay_ms(20); 
018D6:  CLRF   xC3
018D8:  CLRF   FAA
018DA:  MOVLW  01
018DC:  MOVWF  FA9
018DE:  CLRF   FA8
018E0:  BCF    FA6.6
018E2:  BCF    FA6.7
018E4:  BSF    FA6.2
018E6:  MOVF   FF2,W
018E8:  MOVWF  00
018EA:  BCF    FF2.7
018EC:  MOVLB  F
018EE:  MOVLW  55
018F0:  MOVWF  FA7
018F2:  MOVLW  AA
018F4:  MOVWF  FA7
018F6:  BSF    FA6.1
018F8:  BTFSC  FA6.1
018FA:  BRA    18F8
018FC:  BCF    FA6.2
018FE:  MOVF   00,W
01900:  IORWF  FF2,F
01902:  MOVLW  14
01904:  MOVLB  6
01906:  MOVWF  x47
01908:  MOVLB  0
0190A:  CALL   0E5A
0190E:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[2]>9 || Testerilizacionp[2]<0){ 
01910:  BTFSC  xC4.7
01912:  BRA    191A
01914:  MOVF   xC4,W
01916:  SUBLW  09
01918:  BNC   1920
0191A:  BTFSC  xC4.7
0191C:  BRA    1920
0191E:  BRA    195A
....................       Testerilizacionp[2]=0;write_eeprom(2,0);delay_ms(20); 
01920:  CLRF   xC4
01922:  CLRF   FAA
01924:  MOVLW  02
01926:  MOVWF  FA9
01928:  CLRF   FA8
0192A:  BCF    FA6.6
0192C:  BCF    FA6.7
0192E:  BSF    FA6.2
01930:  MOVF   FF2,W
01932:  MOVWF  00
01934:  BCF    FF2.7
01936:  MOVLB  F
01938:  MOVLW  55
0193A:  MOVWF  FA7
0193C:  MOVLW  AA
0193E:  MOVWF  FA7
01940:  BSF    FA6.1
01942:  BTFSC  FA6.1
01944:  BRA    1942
01946:  BCF    FA6.2
01948:  MOVF   00,W
0194A:  IORWF  FF2,F
0194C:  MOVLW  14
0194E:  MOVLB  6
01950:  MOVWF  x47
01952:  MOVLB  0
01954:  CALL   0E5A
01958:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[3]>9 || Testerilizacionp[3]<0){ 
0195A:  BTFSC  xC5.7
0195C:  BRA    1964
0195E:  MOVF   xC5,W
01960:  SUBLW  09
01962:  BNC   196A
01964:  BTFSC  xC5.7
01966:  BRA    196A
01968:  BRA    19A4
....................       Testerilizacionp[3]=0;write_eeprom(3,0);delay_ms(20); 
0196A:  CLRF   xC5
0196C:  CLRF   FAA
0196E:  MOVLW  03
01970:  MOVWF  FA9
01972:  CLRF   FA8
01974:  BCF    FA6.6
01976:  BCF    FA6.7
01978:  BSF    FA6.2
0197A:  MOVF   FF2,W
0197C:  MOVWF  00
0197E:  BCF    FF2.7
01980:  MOVLB  F
01982:  MOVLW  55
01984:  MOVWF  FA7
01986:  MOVLW  AA
01988:  MOVWF  FA7
0198A:  BSF    FA6.1
0198C:  BTFSC  FA6.1
0198E:  BRA    198C
01990:  BCF    FA6.2
01992:  MOVF   00,W
01994:  IORWF  FF2,F
01996:  MOVLW  14
01998:  MOVLB  6
0199A:  MOVWF  x47
0199C:  MOVLB  0
0199E:  CALL   0E5A
019A2:  MOVLB  5
....................    } 
....................    if(Password[0]>9 || Password[0]<0){ 
019A4:  BTFSC  xCA.7
019A6:  BRA    19AE
019A8:  MOVF   xCA,W
019AA:  SUBLW  09
019AC:  BNC   19B4
019AE:  BTFSC  xCA.7
019B0:  BRA    19B4
019B2:  BRA    19EE
....................       Password[0]=0;write_eeprom(10,0);delay_ms(20); 
019B4:  CLRF   xCA
019B6:  CLRF   FAA
019B8:  MOVLW  0A
019BA:  MOVWF  FA9
019BC:  CLRF   FA8
019BE:  BCF    FA6.6
019C0:  BCF    FA6.7
019C2:  BSF    FA6.2
019C4:  MOVF   FF2,W
019C6:  MOVWF  00
019C8:  BCF    FF2.7
019CA:  MOVLB  F
019CC:  MOVLW  55
019CE:  MOVWF  FA7
019D0:  MOVLW  AA
019D2:  MOVWF  FA7
019D4:  BSF    FA6.1
019D6:  BTFSC  FA6.1
019D8:  BRA    19D6
019DA:  BCF    FA6.2
019DC:  MOVF   00,W
019DE:  IORWF  FF2,F
019E0:  MOVLW  14
019E2:  MOVLB  6
019E4:  MOVWF  x47
019E6:  MOVLB  0
019E8:  CALL   0E5A
019EC:  MOVLB  5
....................    } 
....................    if(Password[1]>9 || Password[1]<0){ 
019EE:  BTFSC  xCB.7
019F0:  BRA    19F8
019F2:  MOVF   xCB,W
019F4:  SUBLW  09
019F6:  BNC   19FE
019F8:  BTFSC  xCB.7
019FA:  BRA    19FE
019FC:  BRA    1A38
....................       Password[1]=0;write_eeprom(11,0);delay_ms(20); 
019FE:  CLRF   xCB
01A00:  CLRF   FAA
01A02:  MOVLW  0B
01A04:  MOVWF  FA9
01A06:  CLRF   FA8
01A08:  BCF    FA6.6
01A0A:  BCF    FA6.7
01A0C:  BSF    FA6.2
01A0E:  MOVF   FF2,W
01A10:  MOVWF  00
01A12:  BCF    FF2.7
01A14:  MOVLB  F
01A16:  MOVLW  55
01A18:  MOVWF  FA7
01A1A:  MOVLW  AA
01A1C:  MOVWF  FA7
01A1E:  BSF    FA6.1
01A20:  BTFSC  FA6.1
01A22:  BRA    1A20
01A24:  BCF    FA6.2
01A26:  MOVF   00,W
01A28:  IORWF  FF2,F
01A2A:  MOVLW  14
01A2C:  MOVLB  6
01A2E:  MOVWF  x47
01A30:  MOVLB  0
01A32:  CALL   0E5A
01A36:  MOVLB  5
....................    } 
....................    if(Password[2]>9 || Password[2]<0){ 
01A38:  BTFSC  xCC.7
01A3A:  BRA    1A42
01A3C:  MOVF   xCC,W
01A3E:  SUBLW  09
01A40:  BNC   1A48
01A42:  BTFSC  xCC.7
01A44:  BRA    1A48
01A46:  BRA    1A82
....................       Password[2]=0;write_eeprom(12,0);delay_ms(20); 
01A48:  CLRF   xCC
01A4A:  CLRF   FAA
01A4C:  MOVLW  0C
01A4E:  MOVWF  FA9
01A50:  CLRF   FA8
01A52:  BCF    FA6.6
01A54:  BCF    FA6.7
01A56:  BSF    FA6.2
01A58:  MOVF   FF2,W
01A5A:  MOVWF  00
01A5C:  BCF    FF2.7
01A5E:  MOVLB  F
01A60:  MOVLW  55
01A62:  MOVWF  FA7
01A64:  MOVLW  AA
01A66:  MOVWF  FA7
01A68:  BSF    FA6.1
01A6A:  BTFSC  FA6.1
01A6C:  BRA    1A6A
01A6E:  BCF    FA6.2
01A70:  MOVF   00,W
01A72:  IORWF  FF2,F
01A74:  MOVLW  14
01A76:  MOVLB  6
01A78:  MOVWF  x47
01A7A:  MOVLB  0
01A7C:  CALL   0E5A
01A80:  MOVLB  5
....................    } 
....................    if(Password[3]>9 || Password[3]<0){ 
01A82:  BTFSC  xCD.7
01A84:  BRA    1A8C
01A86:  MOVF   xCD,W
01A88:  SUBLW  09
01A8A:  BNC   1A92
01A8C:  BTFSC  xCD.7
01A8E:  BRA    1A92
01A90:  BRA    1ACA
....................       Password[3]=0;write_eeprom(13,0);delay_ms(20); 
01A92:  CLRF   xCD
01A94:  CLRF   FAA
01A96:  MOVLW  0D
01A98:  MOVWF  FA9
01A9A:  CLRF   FA8
01A9C:  BCF    FA6.6
01A9E:  BCF    FA6.7
01AA0:  BSF    FA6.2
01AA2:  MOVF   FF2,W
01AA4:  MOVWF  00
01AA6:  BCF    FF2.7
01AA8:  MOVLB  F
01AAA:  MOVLW  55
01AAC:  MOVWF  FA7
01AAE:  MOVLW  AA
01AB0:  MOVWF  FA7
01AB2:  BSF    FA6.1
01AB4:  BTFSC  FA6.1
01AB6:  BRA    1AB4
01AB8:  BCF    FA6.2
01ABA:  MOVF   00,W
01ABC:  IORWF  FF2,F
01ABE:  MOVLW  14
01AC0:  MOVLB  6
01AC2:  MOVWF  x47
01AC4:  MOVLB  0
01AC6:  CALL   0E5A
....................    } 
....................    if(Temperatura1>40.0){ 
01ACA:  MOVLB  6
01ACC:  CLRF   x41
01ACE:  CLRF   x40
01AD0:  MOVLW  20
01AD2:  MOVWF  x3F
01AD4:  MOVLW  84
01AD6:  MOVWF  x3E
01AD8:  MOVFF  611,645
01ADC:  MOVFF  610,644
01AE0:  MOVFF  60F,643
01AE4:  MOVFF  60E,642
01AE8:  MOVLB  0
01AEA:  RCALL  1802
01AEC:  BNC   1B6A
....................       Temperatura1=30.0;write_eeprom(80,30);delay_ms(20);write_eeprom(81,0);delay_ms(20); 
01AEE:  MOVLB  6
01AF0:  CLRF   x11
01AF2:  CLRF   x10
01AF4:  MOVLW  70
01AF6:  MOVWF  x0F
01AF8:  MOVLW  83
01AFA:  MOVWF  x0E
01AFC:  CLRF   FAA
01AFE:  MOVLW  50
01B00:  MOVWF  FA9
01B02:  MOVLW  1E
01B04:  MOVWF  FA8
01B06:  BCF    FA6.6
01B08:  BCF    FA6.7
01B0A:  BSF    FA6.2
01B0C:  MOVF   FF2,W
01B0E:  MOVWF  00
01B10:  BCF    FF2.7
01B12:  MOVLB  F
01B14:  MOVLW  55
01B16:  MOVWF  FA7
01B18:  MOVLW  AA
01B1A:  MOVWF  FA7
01B1C:  BSF    FA6.1
01B1E:  BTFSC  FA6.1
01B20:  BRA    1B1E
01B22:  BCF    FA6.2
01B24:  MOVF   00,W
01B26:  IORWF  FF2,F
01B28:  MOVLW  14
01B2A:  MOVLB  6
01B2C:  MOVWF  x47
01B2E:  MOVLB  0
01B30:  CALL   0E5A
01B34:  CLRF   FAA
01B36:  MOVLW  51
01B38:  MOVWF  FA9
01B3A:  CLRF   FA8
01B3C:  BCF    FA6.6
01B3E:  BCF    FA6.7
01B40:  BSF    FA6.2
01B42:  MOVF   FF2,W
01B44:  MOVWF  00
01B46:  BCF    FF2.7
01B48:  MOVLB  F
01B4A:  MOVLW  55
01B4C:  MOVWF  FA7
01B4E:  MOVLW  AA
01B50:  MOVWF  FA7
01B52:  BSF    FA6.1
01B54:  BTFSC  FA6.1
01B56:  BRA    1B54
01B58:  BCF    FA6.2
01B5A:  MOVF   00,W
01B5C:  IORWF  FF2,F
01B5E:  MOVLW  14
01B60:  MOVLB  6
01B62:  MOVWF  x47
01B64:  MOVLB  0
01B66:  CALL   0E5A
....................    } 
....................    if(Temperatura2>40.0){ 
01B6A:  MOVLB  6
01B6C:  CLRF   x41
01B6E:  CLRF   x40
01B70:  MOVLW  20
01B72:  MOVWF  x3F
01B74:  MOVLW  84
01B76:  MOVWF  x3E
01B78:  MOVFF  615,645
01B7C:  MOVFF  614,644
01B80:  MOVFF  613,643
01B84:  MOVFF  612,642
01B88:  MOVLB  0
01B8A:  RCALL  1802
01B8C:  BNC   1C0A
....................       Temperatura2=30.0;write_eeprom(83,30);delay_ms(20);write_eeprom(84,0);delay_ms(20); 
01B8E:  MOVLB  6
01B90:  CLRF   x15
01B92:  CLRF   x14
01B94:  MOVLW  70
01B96:  MOVWF  x13
01B98:  MOVLW  83
01B9A:  MOVWF  x12
01B9C:  CLRF   FAA
01B9E:  MOVLW  53
01BA0:  MOVWF  FA9
01BA2:  MOVLW  1E
01BA4:  MOVWF  FA8
01BA6:  BCF    FA6.6
01BA8:  BCF    FA6.7
01BAA:  BSF    FA6.2
01BAC:  MOVF   FF2,W
01BAE:  MOVWF  00
01BB0:  BCF    FF2.7
01BB2:  MOVLB  F
01BB4:  MOVLW  55
01BB6:  MOVWF  FA7
01BB8:  MOVLW  AA
01BBA:  MOVWF  FA7
01BBC:  BSF    FA6.1
01BBE:  BTFSC  FA6.1
01BC0:  BRA    1BBE
01BC2:  BCF    FA6.2
01BC4:  MOVF   00,W
01BC6:  IORWF  FF2,F
01BC8:  MOVLW  14
01BCA:  MOVLB  6
01BCC:  MOVWF  x47
01BCE:  MOVLB  0
01BD0:  CALL   0E5A
01BD4:  CLRF   FAA
01BD6:  MOVLW  54
01BD8:  MOVWF  FA9
01BDA:  CLRF   FA8
01BDC:  BCF    FA6.6
01BDE:  BCF    FA6.7
01BE0:  BSF    FA6.2
01BE2:  MOVF   FF2,W
01BE4:  MOVWF  00
01BE6:  BCF    FF2.7
01BE8:  MOVLB  F
01BEA:  MOVLW  55
01BEC:  MOVWF  FA7
01BEE:  MOVLW  AA
01BF0:  MOVWF  FA7
01BF2:  BSF    FA6.1
01BF4:  BTFSC  FA6.1
01BF6:  BRA    1BF4
01BF8:  BCF    FA6.2
01BFA:  MOVF   00,W
01BFC:  IORWF  FF2,F
01BFE:  MOVLW  14
01C00:  MOVLB  6
01C02:  MOVWF  x47
01C04:  MOVLB  0
01C06:  CALL   0E5A
....................    } 
....................    if(Temperatura3>40.0){ 
01C0A:  MOVLB  6
01C0C:  CLRF   x41
01C0E:  CLRF   x40
01C10:  MOVLW  20
01C12:  MOVWF  x3F
01C14:  MOVLW  84
01C16:  MOVWF  x3E
01C18:  MOVFF  619,645
01C1C:  MOVFF  618,644
01C20:  MOVFF  617,643
01C24:  MOVFF  616,642
01C28:  MOVLB  0
01C2A:  RCALL  1802
01C2C:  BNC   1CAA
....................       Temperatura3=30.0;write_eeprom(86,30);delay_ms(20);write_eeprom(87,0);delay_ms(20); 
01C2E:  MOVLB  6
01C30:  CLRF   x19
01C32:  CLRF   x18
01C34:  MOVLW  70
01C36:  MOVWF  x17
01C38:  MOVLW  83
01C3A:  MOVWF  x16
01C3C:  CLRF   FAA
01C3E:  MOVLW  56
01C40:  MOVWF  FA9
01C42:  MOVLW  1E
01C44:  MOVWF  FA8
01C46:  BCF    FA6.6
01C48:  BCF    FA6.7
01C4A:  BSF    FA6.2
01C4C:  MOVF   FF2,W
01C4E:  MOVWF  00
01C50:  BCF    FF2.7
01C52:  MOVLB  F
01C54:  MOVLW  55
01C56:  MOVWF  FA7
01C58:  MOVLW  AA
01C5A:  MOVWF  FA7
01C5C:  BSF    FA6.1
01C5E:  BTFSC  FA6.1
01C60:  BRA    1C5E
01C62:  BCF    FA6.2
01C64:  MOVF   00,W
01C66:  IORWF  FF2,F
01C68:  MOVLW  14
01C6A:  MOVLB  6
01C6C:  MOVWF  x47
01C6E:  MOVLB  0
01C70:  CALL   0E5A
01C74:  CLRF   FAA
01C76:  MOVLW  57
01C78:  MOVWF  FA9
01C7A:  CLRF   FA8
01C7C:  BCF    FA6.6
01C7E:  BCF    FA6.7
01C80:  BSF    FA6.2
01C82:  MOVF   FF2,W
01C84:  MOVWF  00
01C86:  BCF    FF2.7
01C88:  MOVLB  F
01C8A:  MOVLW  55
01C8C:  MOVWF  FA7
01C8E:  MOVLW  AA
01C90:  MOVWF  FA7
01C92:  BSF    FA6.1
01C94:  BTFSC  FA6.1
01C96:  BRA    1C94
01C98:  BCF    FA6.2
01C9A:  MOVF   00,W
01C9C:  IORWF  FF2,F
01C9E:  MOVLW  14
01CA0:  MOVLB  6
01CA2:  MOVWF  x47
01CA4:  MOVLB  0
01CA6:  CALL   0E5A
....................    } 
....................    if(Ganancia>40){ 
01CAA:  MOVLB  6
01CAC:  CLRF   x41
01CAE:  CLRF   x40
01CB0:  MOVLW  20
01CB2:  MOVWF  x3F
01CB4:  MOVLW  84
01CB6:  MOVWF  x3E
01CB8:  MOVFF  5ED,645
01CBC:  MOVFF  5EC,644
01CC0:  MOVFF  5EB,643
01CC4:  MOVFF  5EA,642
01CC8:  MOVLB  0
01CCA:  RCALL  1802
01CCC:  BNC   1D12
....................       Ganancia=2;write_eeprom(90,2);delay_ms(20); 
01CCE:  MOVLB  5
01CD0:  CLRF   xED
01CD2:  CLRF   xEC
01CD4:  CLRF   xEB
01CD6:  MOVLW  80
01CD8:  MOVWF  xEA
01CDA:  CLRF   FAA
01CDC:  MOVLW  5A
01CDE:  MOVWF  FA9
01CE0:  MOVLW  02
01CE2:  MOVWF  FA8
01CE4:  BCF    FA6.6
01CE6:  BCF    FA6.7
01CE8:  BSF    FA6.2
01CEA:  MOVF   FF2,W
01CEC:  MOVWF  00
01CEE:  BCF    FF2.7
01CF0:  MOVLB  F
01CF2:  MOVLW  55
01CF4:  MOVWF  FA7
01CF6:  MOVLW  AA
01CF8:  MOVWF  FA7
01CFA:  BSF    FA6.1
01CFC:  BTFSC  FA6.1
01CFE:  BRA    1CFC
01D00:  BCF    FA6.2
01D02:  MOVF   00,W
01D04:  IORWF  FF2,F
01D06:  MOVLW  14
01D08:  MOVLB  6
01D0A:  MOVWF  x47
01D0C:  MOVLB  0
01D0E:  CALL   0E5A
....................    } 
....................    if(Tciclo>40){ 
01D12:  MOVLB  6
01D14:  CLRF   x41
01D16:  CLRF   x40
01D18:  MOVLW  20
01D1A:  MOVWF  x3F
01D1C:  MOVLW  84
01D1E:  MOVWF  x3E
01D20:  MOVFF  5D5,645
01D24:  MOVFF  5D4,644
01D28:  MOVFF  5D3,643
01D2C:  MOVFF  5D2,642
01D30:  MOVLB  0
01D32:  RCALL  1802
01D34:  BNC   1D7C
....................       Tciclo=5;write_eeprom(30,5);delay_ms(20); 
01D36:  MOVLB  5
01D38:  CLRF   xD5
01D3A:  CLRF   xD4
01D3C:  MOVLW  20
01D3E:  MOVWF  xD3
01D40:  MOVLW  81
01D42:  MOVWF  xD2
01D44:  CLRF   FAA
01D46:  MOVLW  1E
01D48:  MOVWF  FA9
01D4A:  MOVLW  05
01D4C:  MOVWF  FA8
01D4E:  BCF    FA6.6
01D50:  BCF    FA6.7
01D52:  BSF    FA6.2
01D54:  MOVF   FF2,W
01D56:  MOVWF  00
01D58:  BCF    FF2.7
01D5A:  MOVLB  F
01D5C:  MOVLW  55
01D5E:  MOVWF  FA7
01D60:  MOVLW  AA
01D62:  MOVWF  FA7
01D64:  BSF    FA6.1
01D66:  BTFSC  FA6.1
01D68:  BRA    1D66
01D6A:  BCF    FA6.2
01D6C:  MOVF   00,W
01D6E:  IORWF  FF2,F
01D70:  MOVLW  14
01D72:  MOVLB  6
01D74:  MOVWF  x47
01D76:  MOVLB  0
01D78:  CALL   0E5A
....................    } 
....................    if(Ajuste>100){ 
01D7C:  MOVLB  5
01D7E:  MOVF   x8A,W
01D80:  SUBLW  64
01D82:  BC    1DBE
....................       Ajuste=0;write_eeprom(40,0);delay_ms(20); 
01D84:  CLRF   x8A
01D86:  CLRF   FAA
01D88:  MOVLW  28
01D8A:  MOVWF  FA9
01D8C:  CLRF   FA8
01D8E:  BCF    FA6.6
01D90:  BCF    FA6.7
01D92:  BSF    FA6.2
01D94:  MOVF   FF2,W
01D96:  MOVWF  00
01D98:  BCF    FF2.7
01D9A:  MOVLB  F
01D9C:  MOVLW  55
01D9E:  MOVWF  FA7
01DA0:  MOVLW  AA
01DA2:  MOVWF  FA7
01DA4:  BSF    FA6.1
01DA6:  BTFSC  FA6.1
01DA8:  BRA    1DA6
01DAA:  BCF    FA6.2
01DAC:  MOVF   00,W
01DAE:  IORWF  FF2,F
01DB0:  MOVLW  14
01DB2:  MOVLB  6
01DB4:  MOVWF  x47
01DB6:  MOVLB  0
01DB8:  CALL   0E5A
01DBC:  MOVLB  5
....................    } 
....................    if(Ajusten>100){ 
01DBE:  MOVF   x8B,W
01DC0:  SUBLW  64
01DC2:  BC    1DFE
....................       Ajusten=0;write_eeprom(50,0);delay_ms(20); 
01DC4:  CLRF   x8B
01DC6:  CLRF   FAA
01DC8:  MOVLW  32
01DCA:  MOVWF  FA9
01DCC:  CLRF   FA8
01DCE:  BCF    FA6.6
01DD0:  BCF    FA6.7
01DD2:  BSF    FA6.2
01DD4:  MOVF   FF2,W
01DD6:  MOVWF  00
01DD8:  BCF    FF2.7
01DDA:  MOVLB  F
01DDC:  MOVLW  55
01DDE:  MOVWF  FA7
01DE0:  MOVLW  AA
01DE2:  MOVWF  FA7
01DE4:  BSF    FA6.1
01DE6:  BTFSC  FA6.1
01DE8:  BRA    1DE6
01DEA:  BCF    FA6.2
01DEC:  MOVF   00,W
01DEE:  IORWF  FF2,F
01DF0:  MOVLW  14
01DF2:  MOVLB  6
01DF4:  MOVWF  x47
01DF6:  MOVLB  0
01DF8:  CALL   0E5A
01DFC:  MOVLB  5
....................    } 
....................    if(MediaMovil>80){ 
01DFE:  MOVF   x8C,W
01E00:  SUBLW  50
01E02:  BC    1E42
....................       MediaMovil=80;write_eeprom(60,80);delay_ms(20); 
01E04:  MOVLW  50
01E06:  MOVWF  x8C
01E08:  CLRF   FAA
01E0A:  MOVLW  3C
01E0C:  MOVWF  FA9
01E0E:  MOVLW  50
01E10:  MOVWF  FA8
01E12:  BCF    FA6.6
01E14:  BCF    FA6.7
01E16:  BSF    FA6.2
01E18:  MOVF   FF2,W
01E1A:  MOVWF  00
01E1C:  BCF    FF2.7
01E1E:  MOVLB  F
01E20:  MOVLW  55
01E22:  MOVWF  FA7
01E24:  MOVLW  AA
01E26:  MOVWF  FA7
01E28:  BSF    FA6.1
01E2A:  BTFSC  FA6.1
01E2C:  BRA    1E2A
01E2E:  BCF    FA6.2
01E30:  MOVF   00,W
01E32:  IORWF  FF2,F
01E34:  MOVLW  14
01E36:  MOVLB  6
01E38:  MOVWF  x47
01E3A:  MOVLB  0
01E3C:  CALL   0E5A
01E40:  MOVLB  5
....................    } 
.................... } 
01E42:  MOVLB  0
01E44:  GOTO   5108 (RETURN)
....................  
.................... void DelayPuls(){ 
....................    delay_ms(2); 
*
02C06:  MOVLW  02
02C08:  MOVLB  6
02C0A:  MOVWF  x47
02C0C:  MOVLB  0
02C0E:  CALL   0E5A
.................... } 
02C12:  RETLW  00
....................  
.................... short PidePassword(int8 MenuAnt, int8 MenuActual, int8 MenuPost, int8 clave0,int8 clave1, int8 clave2,int8 clave3,short cambia){ 
....................       if(n==0) 
*
02CBA:  MOVLB  5
02CBC:  MOVF   x97,F
02CBE:  BTFSS  FD8.2
02CC0:  BRA    2DAA
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1);displayContrasena(Contrasena[1],40,30,0); 
02CC2:  MOVFF  5C6,648
02CC6:  MOVLW  14
02CC8:  MOVLB  6
02CCA:  MOVWF  x49
02CCC:  MOVLW  1E
02CCE:  MOVWF  x4A
02CD0:  MOVLW  01
02CD2:  MOVWF  x4B
02CD4:  MOVLB  0
02CD6:  RCALL  2B4C
02CD8:  MOVFF  5C7,648
02CDC:  MOVLW  28
02CDE:  MOVLB  6
02CE0:  MOVWF  x49
02CE2:  MOVLW  1E
02CE4:  MOVWF  x4A
02CE6:  CLRF   x4B
02CE8:  MOVLB  0
02CEA:  RCALL  2B4C
....................          displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
02CEC:  MOVFF  5C8,648
02CF0:  MOVLW  3C
02CF2:  MOVLB  6
02CF4:  MOVWF  x49
02CF6:  MOVLW  1E
02CF8:  MOVWF  x4A
02CFA:  CLRF   x4B
02CFC:  MOVLB  0
02CFE:  RCALL  2B4C
02D00:  MOVFF  5C6,648
02D04:  MOVLW  50
02D06:  MOVLB  6
02D08:  MOVWF  x49
02D0A:  MOVLW  1E
02D0C:  MOVWF  x4A
02D0E:  CLRF   x4B
02D10:  MOVLB  0
02D12:  RCALL  2B4C
....................          if(!cambia){ 
02D14:  MOVLB  6
02D16:  MOVF   x45,F
02D18:  BNZ   2D62
....................             strcpy(Menus.Letra,"Clave"); 
02D1A:  MOVLW  06
02D1C:  MOVWF  FEA
02D1E:  MOVLW  1E
02D20:  MOVWF  FE9
02D22:  MOVFF  FF2,646
02D26:  BCF    FF2.7
02D28:  MOVLW  00
02D2A:  MOVLB  0
02D2C:  CALL   07F0
02D30:  TBLRD*-
02D32:  TBLRD*+
02D34:  MOVF   FF5,W
02D36:  MOVWF  FEE
02D38:  IORLW  00
02D3A:  BNZ   2D32
02D3C:  MOVLB  6
02D3E:  BTFSC  x46.7
02D40:  BSF    FF2.7
....................             displayMenu(Menus.Letra,20,0,1,3); 
02D42:  MOVLW  06
02D44:  MOVWF  x47
02D46:  MOVLW  1E
02D48:  MOVWF  x46
02D4A:  MOVLW  14
02D4C:  MOVWF  x48
02D4E:  CLRF   x49
02D50:  MOVLW  01
02D52:  MOVWF  x4A
02D54:  MOVLW  03
02D56:  MOVWF  x4B
02D58:  MOVLB  0
02D5A:  CALL   24AC
....................          }else{ 
02D5E:  BRA    2DA4
02D60:  MOVLB  6
....................             strcpy(Menus.Letra,"Clave Nueva"); 
02D62:  MOVLW  06
02D64:  MOVWF  FEA
02D66:  MOVLW  1E
02D68:  MOVWF  FE9
02D6A:  MOVFF  FF2,646
02D6E:  BCF    FF2.7
02D70:  MOVLW  00
02D72:  MOVLB  0
02D74:  CALL   0814
02D78:  TBLRD*-
02D7A:  TBLRD*+
02D7C:  MOVF   FF5,W
02D7E:  MOVWF  FEE
02D80:  IORLW  00
02D82:  BNZ   2D7A
02D84:  MOVLB  6
02D86:  BTFSC  x46.7
02D88:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);   
02D8A:  MOVLW  06
02D8C:  MOVWF  x47
02D8E:  MOVLW  1E
02D90:  MOVWF  x46
02D92:  CLRF   x48
02D94:  CLRF   x49
02D96:  MOVLW  01
02D98:  MOVWF  x4A
02D9A:  MOVLW  02
02D9C:  MOVWF  x4B
02D9E:  MOVLB  0
02DA0:  CALL   24AC
....................          } 
....................          n=1; 
02DA4:  MOVLW  01
02DA6:  MOVLB  5
02DA8:  MOVWF  x97
....................       } 
....................        
....................       if(UP){ 
02DAA:  BSF    F92.5
02DAC:  BTFSC  F80.5
02DAE:  BRA    2E78
....................          if(Flanco == 0){ 
02DB0:  BTFSC  x87.1
02DB2:  BRA    2E76
....................             Flanco = 1;DelayPuls(); 
02DB4:  BSF    x87.1
02DB6:  MOVLB  0
02DB8:  RCALL  2C06
....................             for(i=1;i<=4;i++){ 
02DBA:  MOVLW  01
02DBC:  MOVLB  5
02DBE:  MOVWF  x9A
02DC0:  MOVF   x9A,W
02DC2:  SUBLW  04
02DC4:  BNC   2E76
....................                if(unidad==i){ 
02DC6:  MOVF   x9A,W
02DC8:  SUBWF  x99,W
02DCA:  BNZ   2E40
....................                   Contrasena[i-1]++; 
02DCC:  MOVLW  01
02DCE:  SUBWF  x9A,W
02DD0:  CLRF   03
02DD2:  ADDLW  C6
02DD4:  MOVWF  FE9
02DD6:  MOVLW  05
02DD8:  ADDWFC 03,W
02DDA:  MOVWF  FEA
02DDC:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9){ 
02DDE:  MOVLW  01
02DE0:  SUBWF  x9A,W
02DE2:  CLRF   03
02DE4:  ADDLW  C6
02DE6:  MOVWF  FE9
02DE8:  MOVLW  05
02DEA:  ADDWFC 03,W
02DEC:  MOVWF  FEA
02DEE:  BTFSC  FEF.7
02DF0:  BRA    2E0A
02DF2:  MOVF   FEF,W
02DF4:  SUBLW  09
02DF6:  BC    2E0A
....................                      Contrasena[i-1]=0; 
02DF8:  MOVLW  01
02DFA:  SUBWF  x9A,W
02DFC:  CLRF   03
02DFE:  ADDLW  C6
02E00:  MOVWF  FE9
02E02:  MOVLW  05
02E04:  ADDWFC 03,W
02E06:  MOVWF  FEA
02E08:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
02E0A:  MOVLW  01
02E0C:  SUBWF  x9A,W
02E0E:  CLRF   03
02E10:  ADDLW  C6
02E12:  MOVWF  FE9
02E14:  MOVLW  05
02E16:  ADDWFC 03,W
02E18:  MOVWF  FEA
02E1A:  MOVFF  FEF,646
02E1E:  MOVF   x9A,W
02E20:  MULLW  14
02E22:  MOVFF  FF3,647
02E26:  MOVLB  6
02E28:  MOVFF  646,648
02E2C:  MOVFF  647,649
02E30:  MOVLW  1E
02E32:  MOVWF  x4A
02E34:  MOVLW  01
02E36:  MOVWF  x4B
02E38:  MOVLB  0
02E3A:  RCALL  2B4C
....................                }else{ 
02E3C:  BRA    2E70
02E3E:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
02E40:  MOVLW  01
02E42:  SUBWF  x9A,W
02E44:  CLRF   03
02E46:  ADDLW  C6
02E48:  MOVWF  FE9
02E4A:  MOVLW  05
02E4C:  ADDWFC 03,W
02E4E:  MOVWF  FEA
02E50:  MOVFF  FEF,646
02E54:  MOVF   x9A,W
02E56:  MULLW  14
02E58:  MOVFF  FF3,647
02E5C:  MOVLB  6
02E5E:  MOVFF  646,648
02E62:  MOVFF  647,649
02E66:  MOVLW  1E
02E68:  MOVWF  x4A
02E6A:  CLRF   x4B
02E6C:  MOVLB  0
02E6E:  RCALL  2B4C
....................                } 
....................             } 
02E70:  MOVLB  5
02E72:  INCF   x9A,F
02E74:  BRA    2DC0
....................          } 
....................       }else{ 
02E76:  BRA    2E7A
....................          Flanco = 0; 
02E78:  BCF    x87.1
....................       } 
....................              
....................       if(DOWN){ 
02E7A:  BSF    F96.0
02E7C:  BTFSC  F84.0
02E7E:  BRA    2F46
....................          if(Flanco2 == 0){ 
02E80:  BTFSC  x87.3
02E82:  BRA    2F44
....................             Flanco2 = 1;DelayPuls(); 
02E84:  BSF    x87.3
02E86:  MOVLB  0
02E88:  RCALL  2C06
....................             for(i=1;i<=4;i++){ 
02E8A:  MOVLW  01
02E8C:  MOVLB  5
02E8E:  MOVWF  x9A
02E90:  MOVF   x9A,W
02E92:  SUBLW  04
02E94:  BNC   2F44
....................                if(unidad==i){ 
02E96:  MOVF   x9A,W
02E98:  SUBWF  x99,W
02E9A:  BNZ   2F0E
....................                   Contrasena[i-1]--; 
02E9C:  MOVLW  01
02E9E:  SUBWF  x9A,W
02EA0:  CLRF   03
02EA2:  ADDLW  C6
02EA4:  MOVWF  FE9
02EA6:  MOVLW  05
02EA8:  ADDWFC 03,W
02EAA:  MOVWF  FEA
02EAC:  DECF   FEF,F
....................                   if(Contrasena[i-1]<0){ 
02EAE:  MOVLW  01
02EB0:  SUBWF  x9A,W
02EB2:  CLRF   03
02EB4:  ADDLW  C6
02EB6:  MOVWF  FE9
02EB8:  MOVLW  05
02EBA:  ADDWFC 03,W
02EBC:  MOVWF  FEA
02EBE:  BTFSC  FEF.7
02EC0:  BRA    2EC4
02EC2:  BRA    2ED8
....................                      Contrasena[i-1]=9; 
02EC4:  MOVLW  01
02EC6:  SUBWF  x9A,W
02EC8:  CLRF   03
02ECA:  ADDLW  C6
02ECC:  MOVWF  FE9
02ECE:  MOVLW  05
02ED0:  ADDWFC 03,W
02ED2:  MOVWF  FEA
02ED4:  MOVLW  09
02ED6:  MOVWF  FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
02ED8:  MOVLW  01
02EDA:  SUBWF  x9A,W
02EDC:  CLRF   03
02EDE:  ADDLW  C6
02EE0:  MOVWF  FE9
02EE2:  MOVLW  05
02EE4:  ADDWFC 03,W
02EE6:  MOVWF  FEA
02EE8:  MOVFF  FEF,646
02EEC:  MOVF   x9A,W
02EEE:  MULLW  14
02EF0:  MOVFF  FF3,647
02EF4:  MOVLB  6
02EF6:  MOVFF  646,648
02EFA:  MOVFF  647,649
02EFE:  MOVLW  1E
02F00:  MOVWF  x4A
02F02:  MOVLW  01
02F04:  MOVWF  x4B
02F06:  MOVLB  0
02F08:  RCALL  2B4C
....................                }else{ 
02F0A:  BRA    2F3E
02F0C:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
02F0E:  MOVLW  01
02F10:  SUBWF  x9A,W
02F12:  CLRF   03
02F14:  ADDLW  C6
02F16:  MOVWF  FE9
02F18:  MOVLW  05
02F1A:  ADDWFC 03,W
02F1C:  MOVWF  FEA
02F1E:  MOVFF  FEF,646
02F22:  MOVF   x9A,W
02F24:  MULLW  14
02F26:  MOVFF  FF3,647
02F2A:  MOVLB  6
02F2C:  MOVFF  646,648
02F30:  MOVFF  647,649
02F34:  MOVLW  1E
02F36:  MOVWF  x4A
02F38:  CLRF   x4B
02F3A:  MOVLB  0
02F3C:  RCALL  2B4C
....................                } 
....................             }       
02F3E:  MOVLB  5
02F40:  INCF   x9A,F
02F42:  BRA    2E90
....................          }      
....................       }else{ 
02F44:  BRA    2F48
....................          Flanco2 = 0; 
02F46:  BCF    x87.3
....................       } 
....................              
....................       if(RIGHT){ 
02F48:  BSF    F96.1
02F4A:  BTFSC  F84.1
02F4C:  BRA    2FDA
....................          if(Flanco1 == 0){ 
02F4E:  BTFSC  x87.2
02F50:  BRA    2FD8
....................             Flanco1 = 1;DelayPuls();unidad++; 
02F52:  BSF    x87.2
02F54:  MOVLB  0
02F56:  RCALL  2C06
02F58:  MOVLB  5
02F5A:  INCF   x99,F
....................             for(i=1;i<=4;i++){ 
02F5C:  MOVLW  01
02F5E:  MOVWF  x9A
02F60:  MOVF   x9A,W
02F62:  SUBLW  04
02F64:  BNC   2FD8
....................                if(unidad==i){ 
02F66:  MOVF   x9A,W
02F68:  SUBWF  x99,W
02F6A:  BNZ   2FA2
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
02F6C:  MOVLW  01
02F6E:  SUBWF  x9A,W
02F70:  CLRF   03
02F72:  ADDLW  C6
02F74:  MOVWF  FE9
02F76:  MOVLW  05
02F78:  ADDWFC 03,W
02F7A:  MOVWF  FEA
02F7C:  MOVFF  FEF,646
02F80:  MOVF   x9A,W
02F82:  MULLW  14
02F84:  MOVFF  FF3,647
02F88:  MOVLB  6
02F8A:  MOVFF  646,648
02F8E:  MOVFF  647,649
02F92:  MOVLW  1E
02F94:  MOVWF  x4A
02F96:  MOVLW  01
02F98:  MOVWF  x4B
02F9A:  MOVLB  0
02F9C:  RCALL  2B4C
....................                }else{ 
02F9E:  BRA    2FD2
02FA0:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
02FA2:  MOVLW  01
02FA4:  SUBWF  x9A,W
02FA6:  CLRF   03
02FA8:  ADDLW  C6
02FAA:  MOVWF  FE9
02FAC:  MOVLW  05
02FAE:  ADDWFC 03,W
02FB0:  MOVWF  FEA
02FB2:  MOVFF  FEF,646
02FB6:  MOVF   x9A,W
02FB8:  MULLW  14
02FBA:  MOVFF  FF3,647
02FBE:  MOVLB  6
02FC0:  MOVFF  646,648
02FC4:  MOVFF  647,649
02FC8:  MOVLW  1E
02FCA:  MOVWF  x4A
02FCC:  CLRF   x4B
02FCE:  MOVLB  0
02FD0:  RCALL  2B4C
....................                } 
....................             } 
02FD2:  MOVLB  5
02FD4:  INCF   x9A,F
02FD6:  BRA    2F60
....................          } 
....................       }else{ 
02FD8:  BRA    2FDC
....................          Flanco1 = 0; 
02FDA:  BCF    x87.2
....................       } 
....................        
....................       if(LEFT){ 
02FDC:  BSF    F96.2
02FDE:  BTFSC  F84.2
02FE0:  BRA    302A
....................          delay_ms(100); 
02FE2:  MOVLW  64
02FE4:  MOVLB  6
02FE6:  MOVWF  x47
02FE8:  MOVLB  0
02FEA:  CALL   0E5A
....................          if(LEFT){ 
02FEE:  BSF    F96.2
02FF0:  BTFSC  F84.2
02FF2:  BRA    3028
....................             Menu=MenuAnt;glcd_fillScreen(OFF);n=0;Opcion=1;unidad=1; 
02FF4:  MOVFF  63E,598
02FF8:  MOVLB  6
02FFA:  CLRF   x46
02FFC:  MOVLB  0
02FFE:  CALL   1E7E
03002:  MOVLB  5
03004:  CLRF   x97
03006:  MOVLW  01
03008:  MOVWF  x9D
0300A:  MOVWF  x99
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
0300C:  CLRF   xC6
0300E:  CLRF   xC7
03010:  CLRF   xC8
03012:  CLRF   xC9
....................             glcd_fillScreen(OFF);glcd_update(); 
03014:  MOVLB  6
03016:  CLRF   x46
03018:  MOVLB  0
0301A:  CALL   1E7E
0301E:  CALL   1ED8
....................             return 1; 
03022:  MOVLW  01
03024:  MOVWF  01
03026:  BRA    34E6
03028:  MOVLB  5
....................          } 
....................       } 
....................      
....................       if(unidad>4){ 
0302A:  MOVF   x99,W
0302C:  SUBLW  04
0302E:  BTFSC  FD8.0
03030:  BRA    34E8
....................          glcd_fillScreen(OFF);unidad=1; 
03032:  MOVLB  6
03034:  CLRF   x46
03036:  MOVLB  0
03038:  CALL   1E7E
0303C:  MOVLW  01
0303E:  MOVLB  5
03040:  MOVWF  x99
....................           
....................          if(!cambia){ 
03042:  MOVLB  6
03044:  MOVF   x45,F
03046:  BTFSS  FD8.2
03048:  BRA    33D0
....................             if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2 && MenuActual==0){ // Si Ingresa clave para reset general del sistema. 
0304A:  MOVLB  5
0304C:  MOVF   xC6,W
0304E:  SUBLW  03
03050:  BTFSS  FD8.2
03052:  BRA    314E
03054:  MOVF   xC7,W
03056:  SUBLW  08
03058:  BTFSS  FD8.2
0305A:  BRA    314E
0305C:  MOVF   xC8,W
0305E:  SUBLW  09
03060:  BNZ   314E
03062:  MOVF   xC9,W
03064:  SUBLW  02
03066:  BNZ   314E
03068:  MOVLB  6
0306A:  MOVF   x3F,F
0306C:  BTFSC  FD8.2
0306E:  BRA    3074
03070:  MOVLB  5
03072:  BRA    314E
....................                write_eeprom(10,0);delay_ms(20);write_eeprom(11,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
03074:  CLRF   FAA
03076:  MOVLW  0A
03078:  MOVWF  FA9
0307A:  CLRF   FA8
0307C:  BCF    FA6.6
0307E:  BCF    FA6.7
03080:  BSF    FA6.2
03082:  MOVF   FF2,W
03084:  MOVWF  00
03086:  BCF    FF2.7
03088:  MOVLB  F
0308A:  MOVLW  55
0308C:  MOVWF  FA7
0308E:  MOVLW  AA
03090:  MOVWF  FA7
03092:  BSF    FA6.1
03094:  BTFSC  FA6.1
03096:  BRA    3094
03098:  BCF    FA6.2
0309A:  MOVF   00,W
0309C:  IORWF  FF2,F
0309E:  MOVLW  14
030A0:  MOVLB  6
030A2:  MOVWF  x47
030A4:  MOVLB  0
030A6:  CALL   0E5A
030AA:  CLRF   FAA
030AC:  MOVLW  0B
030AE:  MOVWF  FA9
030B0:  CLRF   FA8
030B2:  BCF    FA6.6
030B4:  BCF    FA6.7
030B6:  BSF    FA6.2
030B8:  MOVF   FF2,W
030BA:  MOVWF  00
030BC:  BCF    FF2.7
030BE:  MOVLB  F
030C0:  MOVLW  55
030C2:  MOVWF  FA7
030C4:  MOVLW  AA
030C6:  MOVWF  FA7
030C8:  BSF    FA6.1
030CA:  BTFSC  FA6.1
030CC:  BRA    30CA
030CE:  BCF    FA6.2
030D0:  MOVF   00,W
030D2:  IORWF  FF2,F
030D4:  MOVLW  14
030D6:  MOVLB  6
030D8:  MOVWF  x47
030DA:  MOVLB  0
030DC:  CALL   0E5A
....................                write_eeprom(12,0);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
030E0:  CLRF   FAA
030E2:  MOVLW  0C
030E4:  MOVWF  FA9
030E6:  CLRF   FA8
030E8:  BCF    FA6.6
030EA:  BCF    FA6.7
030EC:  BSF    FA6.2
030EE:  MOVF   FF2,W
030F0:  MOVWF  00
030F2:  BCF    FF2.7
030F4:  MOVLB  F
030F6:  MOVLW  55
030F8:  MOVWF  FA7
030FA:  MOVLW  AA
030FC:  MOVWF  FA7
030FE:  BSF    FA6.1
03100:  BTFSC  FA6.1
03102:  BRA    3100
03104:  BCF    FA6.2
03106:  MOVF   00,W
03108:  IORWF  FF2,F
0310A:  MOVLW  14
0310C:  MOVLB  6
0310E:  MOVWF  x47
03110:  MOVLB  0
03112:  CALL   0E5A
03116:  CLRF   FAA
03118:  MOVLW  0D
0311A:  MOVWF  FA9
0311C:  CLRF   FA8
0311E:  BCF    FA6.6
03120:  BCF    FA6.7
03122:  BSF    FA6.2
03124:  MOVF   FF2,W
03126:  MOVWF  00
03128:  BCF    FF2.7
0312A:  MOVLB  F
0312C:  MOVLW  55
0312E:  MOVWF  FA7
03130:  MOVLW  AA
03132:  MOVWF  FA7
03134:  BSF    FA6.1
03136:  BTFSC  FA6.1
03138:  BRA    3136
0313A:  BCF    FA6.2
0313C:  MOVF   00,W
0313E:  IORWF  FF2,F
03140:  MOVLW  14
03142:  MOVLB  6
03144:  MOVWF  x47
03146:  MOVLB  0
03148:  CALL   0E5A
....................                reset_cpu(); 
0314C:  RESET
....................             } 
....................           
....................             if((Contrasena[0]==clave0)&&(Contrasena[1]==clave1)&&(Contrasena[2]==clave2)&&(Contrasena[3]==clave3)){ 
0314E:  MOVLB  6
03150:  MOVF   x41,W
03152:  MOVLB  5
03154:  SUBWF  xC6,W
03156:  BTFSS  FD8.2
03158:  BRA    3240
0315A:  MOVLB  6
0315C:  MOVF   x42,W
0315E:  MOVLB  5
03160:  SUBWF  xC7,W
03162:  BNZ   3240
03164:  MOVLB  6
03166:  MOVF   x43,W
03168:  MOVLB  5
0316A:  SUBWF  xC8,W
0316C:  BNZ   3240
0316E:  MOVLB  6
03170:  MOVF   x44,W
03172:  MOVLB  5
03174:  SUBWF  xC9,W
03176:  BNZ   3240
....................                glcd_fillScreen(OFF); 
03178:  MOVLB  6
0317A:  CLRF   x46
0317C:  MOVLB  0
0317E:  CALL   1E7E
....................                strcpy(Menus.Letra,"Clave"); 
03182:  MOVLW  06
03184:  MOVWF  FEA
03186:  MOVLW  1E
03188:  MOVWF  FE9
0318A:  MOVFF  FF2,646
0318E:  BCF    FF2.7
03190:  MOVLW  00
03192:  CALL   07F0
03196:  TBLRD*-
03198:  TBLRD*+
0319A:  MOVF   FF5,W
0319C:  MOVWF  FEE
0319E:  IORLW  00
031A0:  BNZ   3198
031A2:  MOVLB  6
031A4:  BTFSC  x46.7
031A6:  BSF    FF2.7
....................                displayMenu(Menus.Letra,30,0,0,2); 
031A8:  MOVLW  06
031AA:  MOVWF  x47
031AC:  MOVLW  1E
031AE:  MOVWF  x46
031B0:  MOVWF  x48
031B2:  CLRF   x49
031B4:  CLRF   x4A
031B6:  MOVLW  02
031B8:  MOVWF  x4B
031BA:  MOVLB  0
031BC:  CALL   24AC
....................                strcpy(Menus.Letra,"Correcta"); 
031C0:  MOVLW  06
031C2:  MOVWF  FEA
031C4:  MOVLW  1E
031C6:  MOVWF  FE9
031C8:  MOVFF  FF2,646
031CC:  BCF    FF2.7
031CE:  MOVLW  00
031D0:  CALL   083E
031D4:  TBLRD*-
031D6:  TBLRD*+
031D8:  MOVF   FF5,W
031DA:  MOVWF  FEE
031DC:  IORLW  00
031DE:  BNZ   31D6
031E0:  MOVLB  6
031E2:  BTFSC  x46.7
031E4:  BSF    FF2.7
....................                displayMenu(Menus.Letra,15,30,0,2); 
031E6:  MOVLW  06
031E8:  MOVWF  x47
031EA:  MOVLW  1E
031EC:  MOVWF  x46
031EE:  MOVLW  0F
031F0:  MOVWF  x48
031F2:  MOVLW  1E
031F4:  MOVWF  x49
031F6:  CLRF   x4A
031F8:  MOVLW  02
031FA:  MOVWF  x4B
031FC:  MOVLB  0
031FE:  CALL   24AC
....................                Menu=MenuPost;glcd_update();delay_ms(1000);glcd_fillScreen(OFF); 
03202:  MOVFF  640,598
03206:  CALL   1ED8
0320A:  MOVLW  04
0320C:  MOVLB  6
0320E:  MOVWF  x46
03210:  MOVLW  FA
03212:  MOVWF  x47
03214:  MOVLB  0
03216:  CALL   0E5A
0321A:  MOVLB  6
0321C:  DECFSZ x46,F
0321E:  BRA    3210
03220:  CLRF   x46
03222:  MOVLB  0
03224:  CALL   1E7E
....................                Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
03228:  MOVLB  5
0322A:  CLRF   xC6
0322C:  CLRF   xC7
0322E:  CLRF   xC8
03230:  CLRF   xC9
....................                n=0; 
03232:  CLRF   x97
....................                return 1; 
03234:  MOVLW  01
03236:  MOVWF  01
03238:  MOVLB  0
0323A:  BRA    34E6
....................             }else{ 
0323C:  BRA    33CC
0323E:  MOVLB  5
....................                glcd_fillScreen(OFF); 
03240:  MOVLB  6
03242:  CLRF   x46
03244:  MOVLB  0
03246:  CALL   1E7E
....................                strcpy(Menus.Letra,"Clave"); 
0324A:  MOVLW  06
0324C:  MOVWF  FEA
0324E:  MOVLW  1E
03250:  MOVWF  FE9
03252:  MOVFF  FF2,646
03256:  BCF    FF2.7
03258:  MOVLW  00
0325A:  CALL   07F0
0325E:  TBLRD*-
03260:  TBLRD*+
03262:  MOVF   FF5,W
03264:  MOVWF  FEE
03266:  IORLW  00
03268:  BNZ   3260
0326A:  MOVLB  6
0326C:  BTFSC  x46.7
0326E:  BSF    FF2.7
....................                displayMenu(Menus.Letra,30,0,0,2); 
03270:  MOVLW  06
03272:  MOVWF  x47
03274:  MOVLW  1E
03276:  MOVWF  x46
03278:  MOVWF  x48
0327A:  CLRF   x49
0327C:  CLRF   x4A
0327E:  MOVLW  02
03280:  MOVWF  x4B
03282:  MOVLB  0
03284:  CALL   24AC
....................                strcpy(Menus.Letra,"Incorrecta"); 
03288:  MOVLW  06
0328A:  MOVWF  FEA
0328C:  MOVLW  1E
0328E:  MOVWF  FE9
03290:  MOVFF  FF2,646
03294:  BCF    FF2.7
03296:  MOVLW  00
03298:  CALL   0866
0329C:  TBLRD*-
0329E:  TBLRD*+
032A0:  MOVF   FF5,W
032A2:  MOVWF  FEE
032A4:  IORLW  00
032A6:  BNZ   329E
032A8:  MOVLB  6
032AA:  BTFSC  x46.7
032AC:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,2); 
032AE:  MOVLW  06
032B0:  MOVWF  x47
032B2:  MOVLW  1E
032B4:  MOVWF  x46
032B6:  CLRF   x48
032B8:  MOVWF  x49
032BA:  CLRF   x4A
032BC:  MOVLW  02
032BE:  MOVWF  x4B
032C0:  MOVLB  0
032C2:  CALL   24AC
....................                unidad=1;glcd_update();delay_ms(1000);Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0;glcd_fillScreen(OFF); 
032C6:  MOVLW  01
032C8:  MOVLB  5
032CA:  MOVWF  x99
032CC:  MOVLB  0
032CE:  CALL   1ED8
032D2:  MOVLW  04
032D4:  MOVLB  6
032D6:  MOVWF  x46
032D8:  MOVLW  FA
032DA:  MOVWF  x47
032DC:  MOVLB  0
032DE:  CALL   0E5A
032E2:  MOVLB  6
032E4:  DECFSZ x46,F
032E6:  BRA    32D8
032E8:  MOVLB  5
032EA:  CLRF   xC6
032EC:  CLRF   xC7
032EE:  CLRF   xC8
032F0:  CLRF   xC9
032F2:  MOVLB  6
032F4:  CLRF   x46
032F6:  MOVLB  0
032F8:  CALL   1E7E
....................                glcd_rect(0, 0, 127, 25, YES, ON);strcpy(Menus.Letra,"Clave");glcd_text57(25, 1, Menus.Letra, 3, OFF);displayContrasena(Contrasena[0],20,30,1); 
032FC:  MOVLB  6
032FE:  CLRF   x57
03300:  CLRF   x58
03302:  MOVLW  7F
03304:  MOVWF  x59
03306:  MOVLW  19
03308:  MOVWF  x5A
0330A:  MOVLW  01
0330C:  MOVWF  x5B
0330E:  MOVWF  x5C
03310:  MOVLB  0
03312:  CALL   23EA
03316:  MOVLW  06
03318:  MOVWF  FEA
0331A:  MOVLW  1E
0331C:  MOVWF  FE9
0331E:  MOVFF  FF2,646
03322:  BCF    FF2.7
03324:  MOVLW  00
03326:  CALL   07F0
0332A:  TBLRD*-
0332C:  TBLRD*+
0332E:  MOVF   FF5,W
03330:  MOVWF  FEE
03332:  IORLW  00
03334:  BNZ   332C
03336:  MOVLB  6
03338:  BTFSC  x46.7
0333A:  BSF    FF2.7
0333C:  MOVLW  19
0333E:  MOVWF  x57
03340:  MOVLW  01
03342:  MOVWF  x58
03344:  MOVLW  06
03346:  MOVWF  x5A
03348:  MOVLW  1E
0334A:  MOVWF  x59
0334C:  MOVLW  03
0334E:  MOVWF  x5B
03350:  CLRF   x5C
03352:  MOVLB  0
03354:  CALL   20F4
03358:  MOVFF  5C6,648
0335C:  MOVLW  14
0335E:  MOVLB  6
03360:  MOVWF  x49
03362:  MOVLW  1E
03364:  MOVWF  x4A
03366:  MOVLW  01
03368:  MOVWF  x4B
0336A:  MOVLB  0
0336C:  CALL   2B4C
....................                displayContrasena(Contrasena[1],40,30,0);displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
03370:  MOVFF  5C7,648
03374:  MOVLW  28
03376:  MOVLB  6
03378:  MOVWF  x49
0337A:  MOVLW  1E
0337C:  MOVWF  x4A
0337E:  CLRF   x4B
03380:  MOVLB  0
03382:  CALL   2B4C
03386:  MOVFF  5C8,648
0338A:  MOVLW  3C
0338C:  MOVLB  6
0338E:  MOVWF  x49
03390:  MOVLW  1E
03392:  MOVWF  x4A
03394:  CLRF   x4B
03396:  MOVLB  0
03398:  CALL   2B4C
0339C:  MOVFF  5C6,648
033A0:  MOVLW  50
033A2:  MOVLB  6
033A4:  MOVWF  x49
033A6:  MOVLW  1E
033A8:  MOVWF  x4A
033AA:  CLRF   x4B
033AC:  MOVLB  0
033AE:  CALL   2B4C
....................                Menu=MenuAnt;glcd_fillScreen(OFF);n=0; 
033B2:  MOVFF  63E,598
033B6:  MOVLB  6
033B8:  CLRF   x46
033BA:  MOVLB  0
033BC:  CALL   1E7E
033C0:  MOVLB  5
033C2:  CLRF   x97
....................                return 0; 
033C4:  MOVLW  00
033C6:  MOVWF  01
033C8:  MOVLB  0
033CA:  BRA    34E6
....................             } 
....................          }else{ 
033CC:  BRA    34E6
033CE:  MOVLB  6
....................             Opcion=1;unidad=1; 
033D0:  MOVLW  01
033D2:  MOVLB  5
033D4:  MOVWF  x9D
033D6:  MOVWF  x99
....................             write_eeprom(10,Contrasena[0]); 
033D8:  CLRF   FAA
033DA:  MOVLW  0A
033DC:  MOVWF  FA9
033DE:  MOVFF  5C6,FA8
033E2:  BCF    FA6.6
033E4:  BCF    FA6.7
033E6:  BSF    FA6.2
033E8:  MOVF   FF2,W
033EA:  MOVWF  00
033EC:  BCF    FF2.7
033EE:  MOVLB  F
033F0:  MOVLW  55
033F2:  MOVWF  FA7
033F4:  MOVLW  AA
033F6:  MOVWF  FA7
033F8:  BSF    FA6.1
033FA:  BTFSC  FA6.1
033FC:  BRA    33FA
033FE:  BCF    FA6.2
03400:  MOVF   00,W
03402:  IORWF  FF2,F
....................             delay_ms(50);    
03404:  MOVLW  32
03406:  MOVLB  6
03408:  MOVWF  x47
0340A:  MOVLB  0
0340C:  CALL   0E5A
....................             write_eeprom(11,Contrasena[1]); 
03410:  CLRF   FAA
03412:  MOVLW  0B
03414:  MOVWF  FA9
03416:  MOVFF  5C7,FA8
0341A:  BCF    FA6.6
0341C:  BCF    FA6.7
0341E:  BSF    FA6.2
03420:  MOVF   FF2,W
03422:  MOVWF  00
03424:  BCF    FF2.7
03426:  MOVLB  F
03428:  MOVLW  55
0342A:  MOVWF  FA7
0342C:  MOVLW  AA
0342E:  MOVWF  FA7
03430:  BSF    FA6.1
03432:  BTFSC  FA6.1
03434:  BRA    3432
03436:  BCF    FA6.2
03438:  MOVF   00,W
0343A:  IORWF  FF2,F
....................             delay_ms(50);    
0343C:  MOVLW  32
0343E:  MOVLB  6
03440:  MOVWF  x47
03442:  MOVLB  0
03444:  CALL   0E5A
....................             write_eeprom(12,Contrasena[2]); 
03448:  CLRF   FAA
0344A:  MOVLW  0C
0344C:  MOVWF  FA9
0344E:  MOVFF  5C8,FA8
03452:  BCF    FA6.6
03454:  BCF    FA6.7
03456:  BSF    FA6.2
03458:  MOVF   FF2,W
0345A:  MOVWF  00
0345C:  BCF    FF2.7
0345E:  MOVLB  F
03460:  MOVLW  55
03462:  MOVWF  FA7
03464:  MOVLW  AA
03466:  MOVWF  FA7
03468:  BSF    FA6.1
0346A:  BTFSC  FA6.1
0346C:  BRA    346A
0346E:  BCF    FA6.2
03470:  MOVF   00,W
03472:  IORWF  FF2,F
....................             delay_ms(50);    
03474:  MOVLW  32
03476:  MOVLB  6
03478:  MOVWF  x47
0347A:  MOVLB  0
0347C:  CALL   0E5A
....................             write_eeprom(13,Contrasena[3]); 
03480:  CLRF   FAA
03482:  MOVLW  0D
03484:  MOVWF  FA9
03486:  MOVFF  5C9,FA8
0348A:  BCF    FA6.6
0348C:  BCF    FA6.7
0348E:  BSF    FA6.2
03490:  MOVF   FF2,W
03492:  MOVWF  00
03494:  BCF    FF2.7
03496:  MOVLB  F
03498:  MOVLW  55
0349A:  MOVWF  FA7
0349C:  MOVLW  AA
0349E:  MOVWF  FA7
034A0:  BSF    FA6.1
034A2:  BTFSC  FA6.1
034A4:  BRA    34A2
034A6:  BCF    FA6.2
034A8:  MOVF   00,W
034AA:  IORWF  FF2,F
....................             delay_ms(1000);glcd_fillScreen(OFF);Menu=MenuAnt; 
034AC:  MOVLW  04
034AE:  MOVLB  6
034B0:  MOVWF  x46
034B2:  MOVLW  FA
034B4:  MOVWF  x47
034B6:  MOVLB  0
034B8:  CALL   0E5A
034BC:  MOVLB  6
034BE:  DECFSZ x46,F
034C0:  BRA    34B2
034C2:  CLRF   x46
034C4:  MOVLB  0
034C6:  CALL   1E7E
034CA:  MOVFF  63E,598
....................             n=0; 
034CE:  MOVLB  5
034D0:  CLRF   x97
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
034D2:  CLRF   xC6
034D4:  CLRF   xC7
034D6:  CLRF   xC8
034D8:  CLRF   xC9
....................             MensajeAlmacenado(); 
034DA:  MOVLB  0
034DC:  CALL   2C14
....................             return 0; 
034E0:  MOVLW  00
034E2:  MOVWF  01
034E4:  BRA    34E6
034E6:  MOVLB  5
....................          } 
....................       } 
.................... } 
034E8:  MOVLB  0
034EA:  RETLW  00
....................  
.................... void CuentaTiempo(){ 
....................       if(tinicio>=60) 
*
04C18:  MOVLB  5
04C1A:  MOVF   xA9,F
04C1C:  BNZ   4C24
04C1E:  MOVF   xA8,W
04C20:  SUBLW  3B
04C22:  BC    4C60
....................       { 
....................          tinicio=0; 
04C24:  CLRF   xA9
04C26:  CLRF   xA8
....................          Testerilizacion[0]++; 
04C28:  INCF   xBE,F
....................          if(Testerilizacion[0]>9) 
04C2A:  BTFSC  xBE.7
04C2C:  BRA    4C38
04C2E:  MOVF   xBE,W
04C30:  SUBLW  09
04C32:  BC    4C38
....................          { 
....................             Testerilizacion[0]=0; 
04C34:  CLRF   xBE
....................             Testerilizacion[1]++; 
04C36:  INCF   xBF,F
....................          } 
....................          if(Testerilizacion[1]>5) 
04C38:  BTFSC  xBF.7
04C3A:  BRA    4C46
04C3C:  MOVF   xBF,W
04C3E:  SUBLW  05
04C40:  BC    4C46
....................          { 
....................             Testerilizacion[1]=0; 
04C42:  CLRF   xBF
....................             Testerilizacion[2]++; 
04C44:  INCF   xC0,F
....................          } 
....................          if(Testerilizacion[2]>9) 
04C46:  BTFSC  xC0.7
04C48:  BRA    4C54
04C4A:  MOVF   xC0,W
04C4C:  SUBLW  09
04C4E:  BC    4C54
....................          { 
....................             Testerilizacion[2]=0; 
04C50:  CLRF   xC0
....................             Testerilizacion[3]++; 
04C52:  INCF   xC1,F
....................          } 
....................          if(Testerilizacion[3]>9) 
04C54:  BTFSC  xC1.7
04C56:  BRA    4C60
04C58:  MOVF   xC1,W
04C5A:  SUBLW  09
04C5C:  BC    4C60
....................          { 
....................             Testerilizacion[3]=0; 
04C5E:  CLRF   xC1
....................          } 
....................       } 
.................... } 
04C60:  MOVLB  0
04C62:  GOTO   721E (RETURN)
....................  
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    set_timer1(40536); 
*
00DC6:  MOVLW  9E
00DC8:  MOVWF  FCF
00DCA:  MOVLW  58
00DCC:  MOVWF  FCE
....................    tiempos++; 
00DCE:  MOVLB  5
00DD0:  INCF   xA2,F
00DD2:  BTFSC  FD8.2
00DD4:  INCF   xA3,F
....................    tiempos3++; 
00DD6:  INCF   xA4,F
00DD8:  BTFSC  FD8.2
00DDA:  INCF   xA5,F
....................    tiempoctrl++; 
00DDC:  INCF   xA6,F
00DDE:  BTFSC  FD8.2
00DE0:  INCF   xA7,F
....................     
....................    if(tiempos3>=200) 
00DE2:  MOVF   xA5,F
00DE4:  BNZ   0DEC
00DE6:  MOVF   xA4,W
00DE8:  SUBLW  C7
00DEA:  BC    0DF0
....................    { 
....................       Lectura2=1; 
00DEC:  MOVLW  01
00DEE:  MOVWF  x90
....................    } 
....................     
....................    if(Controlando==1){ 
00DF0:  DECFSZ x92,W
00DF2:  BRA    0E1E
....................       if(tiempoctrl<Tp) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
00DF4:  MOVF   xA7,W
00DF6:  SUBWF  xAF,W
00DF8:  BNC   0E08
00DFA:  BNZ   0E02
00DFC:  MOVF   xAE,W
00DFE:  SUBWF  xA6,W
00E00:  BC    0E08
....................       { 
....................          SSR_on; 
00E02:  BSF    F8B.2
00E04:  BCF    F94.2
....................       } 
....................       else          
00E06:  BRA    0E0C
....................       { 
....................          SSR_off; 
00E08:  BCF    F8B.2
00E0A:  BCF    F94.2
....................       } 
....................        
....................       if(tiempoctrl>=Tc) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
00E0C:  MOVF   xB1,W
00E0E:  SUBWF  xA7,W
00E10:  BNC   0E1E
00E12:  BNZ   0E1A
00E14:  MOVF   xB0,W
00E16:  SUBWF  xA6,W
00E18:  BNC   0E1E
....................       { 
....................          tiempoctrl=0; 
00E1A:  CLRF   xA7
00E1C:  CLRF   xA6
....................       } // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
....................    } 
....................      
....................    if(tiempos>=200)  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
00E1E:  MOVF   xA3,F
00E20:  BNZ   0E28
00E22:  MOVF   xA2,W
00E24:  SUBLW  C7
00E26:  BC    0E52
....................    {tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++; 
00E28:  CLRF   xA3
00E2A:  CLRF   xA2
00E2C:  BSF    x94.0
00E2E:  INCF   x96,F
00E30:  INCF   x9C,F
00E32:  INCF   x8D,F
....................     
....................       if(flag_setpoint==1) 
00E34:  BTFSS  x94.7
00E36:  BRA    0E3E
....................          tiemposetpoint++; 
00E38:  INCF   xAC,F
00E3A:  BTFSC  FD8.2
00E3C:  INCF   xAD,F
....................           
....................       if(tiempo_esterilizacion==1) 
00E3E:  DECFSZ x9E,W
00E40:  BRA    0E48
....................       {                
....................          tinicio++; 
00E42:  INCF   xA8,F
00E44:  BTFSC  FD8.2
00E46:  INCF   xA9,F
....................       } 
....................        
....................       if(flag_tiempocalentamiento==1) 
00E48:  BTFSS  x94.5
00E4A:  BRA    0E52
....................       { 
....................          tiempocalentamiento++; 
00E4C:  INCF   xAA,F
00E4E:  BTFSC  FD8.2
00E50:  INCF   xAB,F
....................       } 
....................    }         
.................... } 
....................  
00E52:  BCF    F9E.0
00E54:  MOVLB  0
00E56:  GOTO   0058
.................... void main() 
.................... { 
*
04C66:  CLRF   FF8
04C68:  BCF    FD0.7
04C6A:  BSF    07.7
04C6C:  CLRF   FEA
04C6E:  CLRF   FE9
04C70:  MOVLB  5
04C72:  BCF    x87.0
04C74:  BCF    x87.1
04C76:  BCF    x87.2
04C78:  BCF    x87.3
04C7A:  BCF    x87.4
04C7C:  BCF    x87.5
04C7E:  BCF    x87.6
04C80:  CLRF   x88
04C82:  CLRF   x89
04C84:  CLRF   x8A
04C86:  CLRF   x8B
04C88:  MOVLW  0A
04C8A:  MOVWF  x8C
04C8C:  CLRF   x8D
04C8E:  CLRF   x8E
04C90:  MOVLW  03
04C92:  MOVWF  x8F
04C94:  CLRF   x90
04C96:  CLRF   x91
04C98:  CLRF   x92
04C9A:  MOVLW  0A
04C9C:  MOVWF  x93
04C9E:  BSF    x87.7
04CA0:  BCF    x94.0
04CA2:  BCF    x94.1
04CA4:  BCF    x94.2
04CA6:  BCF    x94.3
04CA8:  BCF    x94.4
04CAA:  BCF    x94.5
04CAC:  BCF    x94.6
04CAE:  BCF    x94.7
04CB0:  CLRF   x95
04CB2:  CLRF   x96
04CB4:  CLRF   x97
04CB6:  CLRF   x98
04CB8:  MOVLW  01
04CBA:  MOVWF  x99
04CBC:  CLRF   x9A
04CBE:  CLRF   x9B
04CC0:  CLRF   x9C
04CC2:  MOVWF  x9D
04CC4:  CLRF   x9E
04CC6:  CLRF   x9F
04CC8:  CLRF   xA0
04CCA:  CLRF   xA1
04CCC:  CLRF   xA3
04CCE:  CLRF   xA2
04CD0:  CLRF   xA5
04CD2:  CLRF   xA4
04CD4:  CLRF   xA7
04CD6:  CLRF   xA6
04CD8:  CLRF   xA9
04CDA:  CLRF   xA8
04CDC:  CLRF   xAB
04CDE:  CLRF   xAA
04CE0:  CLRF   xAD
04CE2:  CLRF   xAC
04CE4:  CLRF   xAF
04CE6:  CLRF   xAE
04CE8:  CLRF   xB1
04CEA:  CLRF   xB0
04CEC:  CLRF   xB5
04CEE:  CLRF   xB4
04CF0:  CLRF   xB3
04CF2:  CLRF   xB2
04CF4:  CLRF   xB9
04CF6:  CLRF   xB8
04CF8:  CLRF   xB7
04CFA:  CLRF   xB6
04CFC:  CLRF   xBD
04CFE:  CLRF   xBC
04D00:  CLRF   xBB
04D02:  CLRF   xBA
04D04:  CLRF   xD1
04D06:  CLRF   xD0
04D08:  CLRF   xCF
04D0A:  CLRF   xCE
04D0C:  CLRF   xD5
04D0E:  CLRF   xD4
04D10:  MOVLW  20
04D12:  MOVWF  xD3
04D14:  MOVLW  82
04D16:  MOVWF  xD2
04D18:  CLRF   xD9
04D1A:  CLRF   xD8
04D1C:  CLRF   xD7
04D1E:  CLRF   xD6
04D20:  CLRF   xDD
04D22:  CLRF   xDC
04D24:  CLRF   xDB
04D26:  CLRF   xDA
04D28:  CLRF   xE1
04D2A:  CLRF   xE0
04D2C:  CLRF   xDF
04D2E:  CLRF   xDE
04D30:  CLRF   xE5
04D32:  CLRF   xE4
04D34:  CLRF   xE3
04D36:  CLRF   xE2
04D38:  CLRF   xE9
04D3A:  CLRF   xE8
04D3C:  CLRF   xE7
04D3E:  CLRF   xE6
04D40:  CLRF   xED
04D42:  CLRF   xEC
04D44:  CLRF   xEB
04D46:  MOVLW  80
04D48:  MOVWF  xEA
04D4A:  CLRF   xF1
04D4C:  CLRF   xF0
04D4E:  CLRF   xEF
04D50:  MOVWF  xEE
04D52:  MOVLW  9A
04D54:  MOVWF  xF5
04D56:  MOVLW  99
04D58:  MOVWF  xF4
04D5A:  MOVLW  19
04D5C:  MOVWF  xF3
04D5E:  MOVLW  7D
04D60:  MOVWF  xF2
04D62:  CLRF   xF9
04D64:  CLRF   xF8
04D66:  MOVLW  32
04D68:  MOVWF  xF7
04D6A:  MOVLW  84
04D6C:  MOVWF  xF6
04D6E:  CLRF   xFD
04D70:  CLRF   xFC
04D72:  CLRF   xFB
04D74:  CLRF   xFA
04D76:  MOVLB  6
04D78:  CLRF   x01
04D7A:  CLRF   x00
04D7C:  MOVLB  5
04D7E:  CLRF   xFF
04D80:  CLRF   xFE
04D82:  MOVLB  6
04D84:  CLRF   x05
04D86:  CLRF   x04
04D88:  MOVLW  20
04D8A:  MOVWF  x03
04D8C:  MOVLW  82
04D8E:  MOVWF  x02
04D90:  CLRF   x09
04D92:  CLRF   x08
04D94:  CLRF   x07
04D96:  CLRF   x06
04D98:  CLRF   x0D
04D9A:  CLRF   x0C
04D9C:  CLRF   x0B
04D9E:  CLRF   x0A
04DA0:  CLRF   x11
04DA2:  CLRF   x10
04DA4:  CLRF   x0F
04DA6:  CLRF   x0E
04DA8:  CLRF   x15
04DAA:  CLRF   x14
04DAC:  CLRF   x13
04DAE:  CLRF   x12
04DB0:  CLRF   x19
04DB2:  CLRF   x18
04DB4:  CLRF   x17
04DB6:  CLRF   x16
04DB8:  CLRF   x1D
04DBA:  CLRF   x1C
04DBC:  CLRF   x1B
04DBE:  CLRF   x1A
04DC0:  MOVF   FC1,W
04DC2:  ANDLW  C0
04DC4:  IORLW  0F
04DC6:  MOVWF  FC1
04DC8:  MOVLW  07
04DCA:  MOVWF  FB4
04DCC:  MOVLB  4
04DCE:  CLRF   x17
04DD0:  CLRF   x18
04DD2:  CLRF   x19
04DD4:  CLRF   x1A
04DD6:  CLRF   x1B
04DD8:  CLRF   x1C
04DDA:  CLRF   x1D
04DDC:  CLRF   x1E
04DDE:  CLRF   x1F
04DE0:  CLRF   x20
04DE2:  CLRF   x21
04DE4:  CLRF   x22
04DE6:  CLRF   x23
04DE8:  CLRF   x24
04DEA:  CLRF   x25
04DEC:  CLRF   x26
04DEE:  CLRF   x27
04DF0:  CLRF   x28
04DF2:  CLRF   x29
04DF4:  CLRF   x2A
04DF6:  CLRF   x2B
04DF8:  CLRF   x2C
04DFA:  CLRF   x2D
04DFC:  CLRF   x2E
04DFE:  CLRF   x2F
04E00:  CLRF   x30
04E02:  CLRF   x31
04E04:  CLRF   x32
04E06:  CLRF   x33
04E08:  CLRF   x34
04E0A:  CLRF   x35
04E0C:  CLRF   x36
04E0E:  CLRF   x37
04E10:  CLRF   x38
04E12:  CLRF   x39
04E14:  CLRF   x3A
04E16:  CLRF   x3B
04E18:  CLRF   x3C
04E1A:  CLRF   x3D
04E1C:  CLRF   x3E
04E1E:  CLRF   x3F
04E20:  CLRF   x40
04E22:  CLRF   x41
04E24:  CLRF   x42
04E26:  CLRF   x43
04E28:  CLRF   x44
04E2A:  CLRF   x45
04E2C:  CLRF   x46
04E2E:  CLRF   x47
04E30:  CLRF   x48
04E32:  CLRF   x49
04E34:  CLRF   x4A
04E36:  CLRF   x4B
04E38:  CLRF   x4C
04E3A:  CLRF   x4D
04E3C:  CLRF   x4E
04E3E:  CLRF   x4F
04E40:  CLRF   x50
04E42:  CLRF   x51
04E44:  CLRF   x52
04E46:  CLRF   x53
04E48:  CLRF   x54
04E4A:  CLRF   x55
04E4C:  CLRF   x56
04E4E:  CLRF   x57
04E50:  CLRF   x58
04E52:  CLRF   x59
04E54:  CLRF   x5A
04E56:  CLRF   x5B
04E58:  CLRF   x5C
04E5A:  CLRF   x5D
04E5C:  CLRF   x5E
04E5E:  CLRF   x5F
04E60:  CLRF   x60
04E62:  CLRF   x61
04E64:  CLRF   x62
04E66:  CLRF   x63
04E68:  CLRF   x64
04E6A:  CLRF   x65
04E6C:  CLRF   x66
04E6E:  CLRF   x67
04E70:  CLRF   x68
04E72:  CLRF   x69
04E74:  CLRF   x6A
04E76:  CLRF   x6B
04E78:  CLRF   x6C
04E7A:  CLRF   x6D
04E7C:  CLRF   x6E
04E7E:  CLRF   x6F
04E80:  CLRF   x70
04E82:  CLRF   x71
04E84:  CLRF   x72
04E86:  CLRF   x73
04E88:  CLRF   x74
04E8A:  CLRF   x75
04E8C:  CLRF   x76
04E8E:  CLRF   x77
04E90:  CLRF   x78
04E92:  CLRF   x79
04E94:  CLRF   x7A
04E96:  CLRF   x7B
04E98:  CLRF   x7C
04E9A:  CLRF   x7D
04E9C:  CLRF   x7E
04E9E:  CLRF   x7F
04EA0:  CLRF   x80
04EA2:  CLRF   x81
04EA4:  CLRF   x82
04EA6:  CLRF   x83
04EA8:  CLRF   x84
04EAA:  CLRF   x85
04EAC:  CLRF   x86
04EAE:  CLRF   x87
04EB0:  CLRF   x88
04EB2:  CLRF   x89
04EB4:  CLRF   x8A
04EB6:  CLRF   x8B
04EB8:  CLRF   x8C
04EBA:  CLRF   x8D
04EBC:  CLRF   x8E
04EBE:  CLRF   x8F
04EC0:  CLRF   x90
04EC2:  CLRF   x91
04EC4:  CLRF   x92
04EC6:  CLRF   x93
04EC8:  CLRF   x94
04ECA:  CLRF   x95
04ECC:  CLRF   x96
04ECE:  CLRF   x97
04ED0:  CLRF   x98
04ED2:  CLRF   x99
04ED4:  CLRF   x9A
04ED6:  CLRF   x9B
04ED8:  CLRF   x9C
04EDA:  CLRF   x9D
04EDC:  CLRF   x9E
04EDE:  CLRF   x9F
04EE0:  CLRF   xA0
04EE2:  CLRF   xA1
04EE4:  CLRF   xA2
04EE6:  CLRF   xA3
04EE8:  CLRF   xA4
04EEA:  CLRF   xA5
04EEC:  CLRF   xA6
04EEE:  CLRF   xA7
04EF0:  CLRF   xA8
04EF2:  CLRF   xA9
04EF4:  CLRF   xAA
04EF6:  CLRF   xAB
04EF8:  CLRF   xAC
04EFA:  CLRF   xAD
04EFC:  CLRF   xAE
04EFE:  CLRF   xAF
04F00:  CLRF   xB0
04F02:  CLRF   xB1
04F04:  CLRF   xB2
04F06:  CLRF   xB3
04F08:  CLRF   xB4
04F0A:  CLRF   xB5
04F0C:  CLRF   xB6
04F0E:  CLRF   xB7
04F10:  CLRF   xB8
04F12:  CLRF   xB9
04F14:  CLRF   xBA
04F16:  CLRF   xBB
04F18:  CLRF   xBC
04F1A:  CLRF   xBD
04F1C:  CLRF   xBE
04F1E:  CLRF   xBF
04F20:  CLRF   xC0
04F22:  CLRF   xC1
04F24:  CLRF   xC2
04F26:  CLRF   xC3
04F28:  CLRF   xC4
04F2A:  CLRF   xC5
04F2C:  CLRF   xC6
04F2E:  CLRF   xC7
04F30:  CLRF   xC8
04F32:  CLRF   xC9
04F34:  CLRF   xCA
04F36:  CLRF   xCB
04F38:  CLRF   xCC
04F3A:  CLRF   xCD
04F3C:  CLRF   xCE
04F3E:  CLRF   xCF
04F40:  CLRF   xD0
04F42:  CLRF   xD1
04F44:  CLRF   xD2
04F46:  CLRF   xD3
04F48:  CLRF   xD4
04F4A:  CLRF   xD5
04F4C:  CLRF   xD6
04F4E:  CLRF   xD7
04F50:  CLRF   xD8
04F52:  CLRF   xD9
04F54:  CLRF   xDA
04F56:  CLRF   xDB
04F58:  CLRF   xDC
04F5A:  CLRF   xDD
04F5C:  CLRF   xDE
04F5E:  CLRF   xDF
04F60:  CLRF   xE0
04F62:  CLRF   xE1
04F64:  CLRF   xE2
04F66:  CLRF   xE3
04F68:  CLRF   xE4
04F6A:  CLRF   xE5
04F6C:  CLRF   xE6
04F6E:  CLRF   xE7
04F70:  CLRF   xE8
04F72:  CLRF   xE9
04F74:  CLRF   xEA
04F76:  CLRF   xEB
04F78:  CLRF   xEC
04F7A:  CLRF   xED
04F7C:  CLRF   xEE
04F7E:  CLRF   xEF
04F80:  CLRF   xF0
04F82:  CLRF   xF1
04F84:  CLRF   xF2
04F86:  CLRF   xF3
04F88:  CLRF   xF4
04F8A:  CLRF   xF5
04F8C:  CLRF   xF6
04F8E:  CLRF   xF7
04F90:  CLRF   xF8
04F92:  CLRF   xF9
04F94:  CLRF   xFA
04F96:  CLRF   xFB
04F98:  CLRF   xFC
04F9A:  CLRF   xFD
04F9C:  CLRF   xFE
04F9E:  CLRF   xFF
04FA0:  MOVLB  5
04FA2:  CLRF   x00
04FA4:  CLRF   x01
04FA6:  CLRF   x02
04FA8:  CLRF   x03
04FAA:  CLRF   x04
04FAC:  CLRF   x05
04FAE:  CLRF   x06
04FB0:  CLRF   x07
04FB2:  CLRF   x08
04FB4:  CLRF   x09
04FB6:  CLRF   x0A
04FB8:  CLRF   x0B
04FBA:  CLRF   x0C
04FBC:  CLRF   x0D
04FBE:  CLRF   x0E
04FC0:  CLRF   x0F
04FC2:  CLRF   x10
04FC4:  CLRF   x11
04FC6:  CLRF   x12
04FC8:  CLRF   x13
04FCA:  CLRF   x14
04FCC:  CLRF   x15
04FCE:  CLRF   x16
04FD0:  CLRF   x17
04FD2:  CLRF   x18
04FD4:  CLRF   x19
04FD6:  CLRF   x1A
04FD8:  CLRF   x1B
04FDA:  CLRF   x1C
04FDC:  CLRF   x1D
04FDE:  CLRF   x1E
04FE0:  CLRF   x1F
04FE2:  CLRF   x20
04FE4:  CLRF   x21
04FE6:  CLRF   x22
04FE8:  CLRF   x23
04FEA:  CLRF   x24
04FEC:  CLRF   x25
04FEE:  CLRF   x26
04FF0:  CLRF   x27
04FF2:  CLRF   x28
04FF4:  CLRF   x29
04FF6:  CLRF   x2A
04FF8:  CLRF   x2B
04FFA:  CLRF   x2C
04FFC:  CLRF   x2D
04FFE:  CLRF   x2E
05000:  CLRF   x2F
05002:  CLRF   x30
05004:  CLRF   x31
05006:  CLRF   x32
05008:  CLRF   x33
0500A:  CLRF   x34
0500C:  CLRF   x35
0500E:  CLRF   x36
05010:  CLRF   x37
05012:  CLRF   x38
05014:  CLRF   x39
05016:  CLRF   x3A
05018:  CLRF   x3B
0501A:  CLRF   x3C
0501C:  CLRF   x3D
0501E:  CLRF   x3E
05020:  CLRF   x3F
05022:  CLRF   x40
05024:  CLRF   x41
05026:  CLRF   x42
05028:  CLRF   x43
0502A:  CLRF   x44
0502C:  CLRF   x45
0502E:  CLRF   x46
05030:  CLRF   x47
05032:  CLRF   x48
05034:  CLRF   x49
05036:  CLRF   x4A
05038:  CLRF   x4B
0503A:  CLRF   x4C
0503C:  CLRF   x4D
0503E:  CLRF   x4E
05040:  CLRF   x4F
05042:  CLRF   x50
05044:  CLRF   x51
05046:  CLRF   x52
05048:  CLRF   x53
0504A:  CLRF   x54
0504C:  CLRF   x55
0504E:  CLRF   x56
05050:  CLRF   x57
05052:  CLRF   x58
05054:  CLRF   x59
05056:  CLRF   x5A
05058:  CLRF   x5B
0505A:  CLRF   x5C
0505C:  CLRF   x5D
0505E:  CLRF   x5E
05060:  CLRF   x5F
05062:  CLRF   x60
05064:  CLRF   x61
05066:  CLRF   x62
05068:  CLRF   x63
0506A:  CLRF   x64
0506C:  CLRF   x65
0506E:  CLRF   x66
05070:  CLRF   x67
05072:  CLRF   x68
05074:  CLRF   x69
05076:  CLRF   x6A
05078:  CLRF   x6B
0507A:  CLRF   x6C
0507C:  CLRF   x6D
0507E:  CLRF   x6E
05080:  CLRF   x6F
05082:  CLRF   x70
05084:  CLRF   x71
05086:  CLRF   x72
05088:  CLRF   x73
0508A:  CLRF   x74
0508C:  CLRF   x75
0508E:  CLRF   x76
05090:  CLRF   x77
05092:  CLRF   x78
05094:  CLRF   x79
05096:  CLRF   x7A
05098:  CLRF   x7B
0509A:  CLRF   x7C
0509C:  CLRF   x7D
0509E:  CLRF   x7E
050A0:  CLRF   x7F
050A2:  CLRF   x80
050A4:  CLRF   x81
050A6:  CLRF   x82
050A8:  CLRF   x83
050AA:  CLRF   x84
050AC:  CLRF   x85
050AE:  CLRF   x86
050B0:  CLRF   xBE
050B2:  CLRF   xBF
050B4:  CLRF   xC0
050B6:  CLRF   xC1
050B8:  CLRF   xC2
050BA:  CLRF   xC3
050BC:  CLRF   xC4
050BE:  CLRF   xC5
050C0:  CLRF   xC6
050C2:  CLRF   xC7
050C4:  CLRF   xC8
050C6:  CLRF   xC9
050C8:  CLRF   xCA
050CA:  CLRF   xCB
050CC:  CLRF   xCC
050CE:  CLRF   xCD
050D0:  MOVLB  6
050D2:  CLRF   x3C
050D4:  CLRF   x3D
....................    delay_ms(1000);    
050D6:  MOVLW  04
050D8:  MOVWF  x3E
050DA:  MOVLW  FA
050DC:  MOVWF  x47
050DE:  MOVLB  0
050E0:  CALL   0E5A
050E4:  MOVLB  6
050E6:  DECFSZ x3E,F
050E8:  BRA    50DA
....................    Buzzer_off; 
050EA:  BCF    F8A.7
050EC:  BCF    F93.7
....................    SSR_off; 
050EE:  BCF    F8B.2
050F0:  BCF    F94.2
....................    Rele1_off; 
050F2:  BCF    F8B.3
050F4:  BCF    F94.3
....................    Rele2_off; 
050F6:  BCF    F8B.4
050F8:  BCF    F94.4
....................    ConfiguraInterrupciones(); 
050FA:  MOVLB  0
050FC:  GOTO   0E82
....................    LeeEEPROM(); 
05100:  GOTO   12B0
....................    LimitaValores(); 
05104:  GOTO   187C
....................    MensajeBienvenida(); 
05108:  GOTO   28CA
....................     
....................    if(UP && DOWN)// && RIGHT && LEFT) 
0510C:  BSF    F92.5
0510E:  BTFSC  F80.5
05110:  BRA    5194
05112:  BSF    F96.0
05114:  BTFSC  F84.0
05116:  BRA    5194
....................    { 
....................       delay_ms(500); 
05118:  MOVLW  02
0511A:  MOVLB  6
0511C:  MOVWF  x3E
0511E:  MOVLW  FA
05120:  MOVWF  x47
05122:  MOVLB  0
05124:  CALL   0E5A
05128:  MOVLB  6
0512A:  DECFSZ x3E,F
0512C:  BRA    511E
....................       strcpy(Menus.Letra,"Cargando.."); 
0512E:  MOVLW  06
05130:  MOVWF  FEA
05132:  MOVLW  1E
05134:  MOVWF  FE9
05136:  MOVFF  FF2,63E
0513A:  BCF    FF2.7
0513C:  MOVLW  00
0513E:  MOVLB  0
05140:  CALL   0890
05144:  TBLRD*-
05146:  TBLRD*+
05148:  MOVF   FF5,W
0514A:  MOVWF  FEE
0514C:  IORLW  00
0514E:  BNZ   5146
05150:  MOVLB  6
05152:  BTFSC  x3E.7
05154:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,30,1,1); 
05156:  MOVLW  06
05158:  MOVWF  x47
0515A:  MOVLW  1E
0515C:  MOVWF  x46
0515E:  CLRF   x48
05160:  MOVWF  x49
05162:  MOVLW  01
05164:  MOVWF  x4A
05166:  MOVWF  x4B
05168:  MOVLB  0
0516A:  CALL   24AC
....................       delay_ms(2000); 
0516E:  MOVLW  08
05170:  MOVLB  6
05172:  MOVWF  x3E
05174:  MOVLW  FA
05176:  MOVWF  x47
05178:  MOVLB  0
0517A:  CALL   0E5A
0517E:  MOVLB  6
05180:  DECFSZ x3E,F
05182:  BRA    5174
....................       Menu=100; 
05184:  MOVLW  64
05186:  MOVLB  5
05188:  MOVWF  x98
....................       glcd_fillScreen(OFF); 
0518A:  MOVLB  6
0518C:  CLRF   x46
0518E:  MOVLB  0
05190:  CALL   1E7E
....................    } 
....................    while(true) 
....................    { 
....................  
....................       if(Lectura2==1) 
05194:  MOVLB  5
05196:  DECFSZ x90,W
05198:  BRA    51B8
....................       { 
....................          Temperatura=Leer_Sensor(MediaMovil); 
0519A:  MOVFF  58C,63E
0519E:  MOVLB  0
051A0:  CALL   2718
051A4:  MOVFF  03,601
051A8:  MOVFF  02,600
051AC:  MOVFF  01,5FF
051B0:  MOVFF  00,5FE
....................          Lectura2=0; 
051B4:  MOVLB  5
051B6:  CLRF   x90
....................       } 
....................     
....................       glcd_update();             
051B8:  MOVLB  0
051BA:  CALL   1ED8
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................     if(Menu==0){ //Menu de Contraseña. 
051BE:  MOVLB  5
051C0:  MOVF   x98,F
051C2:  BNZ   51E8
....................       PidePassword(0,0,1,Password[0],Password[1],Password[2],Password[3],0); 
051C4:  MOVLB  6
051C6:  CLRF   x3E
051C8:  CLRF   x3F
051CA:  MOVLW  01
051CC:  MOVWF  x40
051CE:  MOVFF  5CA,641
051D2:  MOVFF  5CB,642
051D6:  MOVFF  5CC,643
051DA:  MOVFF  5CD,644
051DE:  CLRF   x45
051E0:  MOVLB  0
051E2:  CALL   2CBA
051E6:  MOVLB  5
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
051E8:  DECFSZ x98,W
051EA:  BRA    54E4
....................        
....................          if(Opcion>4) 
051EC:  MOVF   x9D,W
051EE:  SUBLW  04
051F0:  BC    51F6
....................             Opcion=1; 
051F2:  MOVLW  01
051F4:  MOVWF  x9D
....................          if(Opcion<1) 
051F6:  MOVF   x9D,F
051F8:  BNZ   51FE
....................             Opcion=4; 
051FA:  MOVLW  04
051FC:  MOVWF  x9D
....................           
....................          strcpy(Menus.Letra,"Menu"); 
051FE:  MOVLW  06
05200:  MOVWF  FEA
05202:  MOVLW  1E
05204:  MOVWF  FE9
05206:  MOVFF  FF2,63E
0520A:  BCF    FF2.7
0520C:  MOVLW  00
0520E:  MOVLB  0
05210:  CALL   08BA
05214:  TBLRD*-
05216:  TBLRD*+
05218:  MOVF   FF5,W
0521A:  MOVWF  FEE
0521C:  IORLW  00
0521E:  BNZ   5216
05220:  MOVLB  6
05222:  BTFSC  x3E.7
05224:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
05226:  MOVLW  06
05228:  MOVWF  x47
0522A:  MOVLW  1E
0522C:  MOVWF  x46
0522E:  MOVWF  x48
05230:  CLRF   x49
05232:  MOVLW  01
05234:  MOVWF  x4A
05236:  MOVLW  02
05238:  MOVWF  x4B
0523A:  MOVLB  0
0523C:  CALL   24AC
....................        
....................          if(Opcion==1)    
05240:  MOVLB  5
05242:  DECFSZ x9D,W
05244:  BRA    528C
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
05246:  MOVLW  06
05248:  MOVWF  FEA
0524A:  MOVLW  1E
0524C:  MOVWF  FE9
0524E:  MOVFF  FF2,63E
05252:  BCF    FF2.7
05254:  MOVLW  00
05256:  MOVLB  0
05258:  CALL   08DE
0525C:  TBLRD*-
0525E:  TBLRD*+
05260:  MOVF   FF5,W
05262:  MOVWF  FEE
05264:  IORLW  00
05266:  BNZ   525E
05268:  MOVLB  6
0526A:  BTFSC  x3E.7
0526C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
0526E:  MOVLW  06
05270:  MOVWF  x47
05272:  MOVLW  1E
05274:  MOVWF  x46
05276:  CLRF   x48
05278:  MOVLW  14
0527A:  MOVWF  x49
0527C:  MOVLW  01
0527E:  MOVWF  x4A
05280:  MOVWF  x4B
05282:  MOVLB  0
05284:  CALL   24AC
....................          else 
05288:  BRA    52CE
0528A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
0528C:  MOVLW  06
0528E:  MOVWF  FEA
05290:  MOVLW  1E
05292:  MOVWF  FE9
05294:  MOVFF  FF2,63E
05298:  BCF    FF2.7
0529A:  MOVLW  00
0529C:  MOVLB  0
0529E:  CALL   08DE
052A2:  TBLRD*-
052A4:  TBLRD*+
052A6:  MOVF   FF5,W
052A8:  MOVWF  FEE
052AA:  IORLW  00
052AC:  BNZ   52A4
052AE:  MOVLB  6
052B0:  BTFSC  x3E.7
052B2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);} 
052B4:  MOVLW  06
052B6:  MOVWF  x47
052B8:  MOVLW  1E
052BA:  MOVWF  x46
052BC:  CLRF   x48
052BE:  MOVLW  14
052C0:  MOVWF  x49
052C2:  CLRF   x4A
052C4:  MOVLW  01
052C6:  MOVWF  x4B
052C8:  MOVLB  0
052CA:  CALL   24AC
....................           
....................          if(Opcion==2)    
052CE:  MOVLB  5
052D0:  MOVF   x9D,W
052D2:  SUBLW  02
052D4:  BNZ   531A
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
052D6:  MOVLW  06
052D8:  MOVWF  FEA
052DA:  MOVLW  1E
052DC:  MOVWF  FE9
052DE:  MOVFF  FF2,63E
052E2:  BCF    FF2.7
052E4:  MOVLW  00
052E6:  MOVLB  0
052E8:  CALL   090C
052EC:  TBLRD*-
052EE:  TBLRD*+
052F0:  MOVF   FF5,W
052F2:  MOVWF  FEE
052F4:  IORLW  00
052F6:  BNZ   52EE
052F8:  MOVLB  6
052FA:  BTFSC  x3E.7
052FC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
052FE:  MOVLW  06
05300:  MOVWF  x47
05302:  MOVLW  1E
05304:  MOVWF  x46
05306:  CLRF   x48
05308:  MOVWF  x49
0530A:  MOVLW  01
0530C:  MOVWF  x4A
0530E:  MOVWF  x4B
05310:  MOVLB  0
05312:  CALL   24AC
....................          else 
05316:  BRA    535A
05318:  MOVLB  5
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
0531A:  MOVLW  06
0531C:  MOVWF  FEA
0531E:  MOVLW  1E
05320:  MOVWF  FE9
05322:  MOVFF  FF2,63E
05326:  BCF    FF2.7
05328:  MOVLW  00
0532A:  MOVLB  0
0532C:  CALL   090C
05330:  TBLRD*-
05332:  TBLRD*+
05334:  MOVF   FF5,W
05336:  MOVWF  FEE
05338:  IORLW  00
0533A:  BNZ   5332
0533C:  MOVLB  6
0533E:  BTFSC  x3E.7
05340:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);} 
05342:  MOVLW  06
05344:  MOVWF  x47
05346:  MOVLW  1E
05348:  MOVWF  x46
0534A:  CLRF   x48
0534C:  MOVWF  x49
0534E:  CLRF   x4A
05350:  MOVLW  01
05352:  MOVWF  x4B
05354:  MOVLB  0
05356:  CALL   24AC
....................              
....................          if(Opcion==3)    
0535A:  MOVLB  5
0535C:  MOVF   x9D,W
0535E:  SUBLW  03
05360:  BNZ   53A8
....................             {strcpy(Menus.Letra,"Temporizador"); 
05362:  MOVLW  06
05364:  MOVWF  FEA
05366:  MOVLW  1E
05368:  MOVWF  FE9
0536A:  MOVFF  FF2,63E
0536E:  BCF    FF2.7
05370:  MOVLW  00
05372:  MOVLB  0
05374:  CALL   0940
05378:  TBLRD*-
0537A:  TBLRD*+
0537C:  MOVF   FF5,W
0537E:  MOVWF  FEE
05380:  IORLW  00
05382:  BNZ   537A
05384:  MOVLB  6
05386:  BTFSC  x3E.7
05388:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
0538A:  MOVLW  06
0538C:  MOVWF  x47
0538E:  MOVLW  1E
05390:  MOVWF  x46
05392:  CLRF   x48
05394:  MOVLW  28
05396:  MOVWF  x49
05398:  MOVLW  01
0539A:  MOVWF  x4A
0539C:  MOVWF  x4B
0539E:  MOVLB  0
053A0:  CALL   24AC
....................          else 
053A4:  BRA    53EA
053A6:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temporizador"); 
053A8:  MOVLW  06
053AA:  MOVWF  FEA
053AC:  MOVLW  1E
053AE:  MOVWF  FE9
053B0:  MOVFF  FF2,63E
053B4:  BCF    FF2.7
053B6:  MOVLW  00
053B8:  MOVLB  0
053BA:  CALL   0940
053BE:  TBLRD*-
053C0:  TBLRD*+
053C2:  MOVF   FF5,W
053C4:  MOVWF  FEE
053C6:  IORLW  00
053C8:  BNZ   53C0
053CA:  MOVLB  6
053CC:  BTFSC  x3E.7
053CE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}    
053D0:  MOVLW  06
053D2:  MOVWF  x47
053D4:  MOVLW  1E
053D6:  MOVWF  x46
053D8:  CLRF   x48
053DA:  MOVLW  28
053DC:  MOVWF  x49
053DE:  CLRF   x4A
053E0:  MOVLW  01
053E2:  MOVWF  x4B
053E4:  MOVLB  0
053E6:  CALL   24AC
....................                          
....................          if(Opcion==4)    
053EA:  MOVLB  5
053EC:  MOVF   x9D,W
053EE:  SUBLW  04
053F0:  BNZ   5438
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
053F2:  MOVLW  06
053F4:  MOVWF  FEA
053F6:  MOVLW  1E
053F8:  MOVWF  FE9
053FA:  MOVFF  FF2,63E
053FE:  BCF    FF2.7
05400:  MOVLW  00
05402:  MOVLB  0
05404:  CALL   096C
05408:  TBLRD*-
0540A:  TBLRD*+
0540C:  MOVF   FF5,W
0540E:  MOVWF  FEE
05410:  IORLW  00
05412:  BNZ   540A
05414:  MOVLB  6
05416:  BTFSC  x3E.7
05418:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
0541A:  MOVLW  06
0541C:  MOVWF  x47
0541E:  MOVLW  1E
05420:  MOVWF  x46
05422:  CLRF   x48
05424:  MOVLW  32
05426:  MOVWF  x49
05428:  MOVLW  01
0542A:  MOVWF  x4A
0542C:  MOVWF  x4B
0542E:  MOVLB  0
05430:  CALL   24AC
....................          else 
05434:  BRA    547A
05436:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
05438:  MOVLW  06
0543A:  MOVWF  FEA
0543C:  MOVLW  1E
0543E:  MOVWF  FE9
05440:  MOVFF  FF2,63E
05444:  BCF    FF2.7
05446:  MOVLW  00
05448:  MOVLB  0
0544A:  CALL   096C
0544E:  TBLRD*-
05450:  TBLRD*+
05452:  MOVF   FF5,W
05454:  MOVWF  FEE
05456:  IORLW  00
05458:  BNZ   5450
0545A:  MOVLB  6
0545C:  BTFSC  x3E.7
0545E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}      
05460:  MOVLW  06
05462:  MOVWF  x47
05464:  MOVLW  1E
05466:  MOVWF  x46
05468:  CLRF   x48
0546A:  MOVLW  32
0546C:  MOVWF  x49
0546E:  CLRF   x4A
05470:  MOVLW  01
05472:  MOVWF  x4B
05474:  MOVLB  0
05476:  CALL   24AC
....................              
....................          if(UP)//Si oprime hacia arriba 
0547A:  BSF    F92.5
0547C:  BTFSC  F80.5
0547E:  BRA    5494
....................          { 
....................             delay_ms(30);Opcion--;visual=1; 
05480:  MOVLW  1E
05482:  MOVLB  6
05484:  MOVWF  x47
05486:  MOVLB  0
05488:  CALL   0E5A
0548C:  MOVLB  5
0548E:  DECF   x9D,F
05490:  BSF    x87.7
05492:  MOVLB  0
....................          } 
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
05494:  BSF    F96.0
05496:  BTFSC  F84.0
05498:  BRA    54AE
....................          { 
....................             delay_ms(30);Opcion++;visual=1;    
0549A:  MOVLW  1E
0549C:  MOVLB  6
0549E:  MOVWF  x47
054A0:  MOVLB  0
054A2:  CALL   0E5A
054A6:  MOVLB  5
054A8:  INCF   x9D,F
054AA:  BSF    x87.7
054AC:  MOVLB  0
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
054AE:  BSF    F96.1
054B0:  BTFSC  F84.1
054B2:  BRA    54E6
....................          {  
....................             delay_ms(500);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
054B4:  MOVLW  02
054B6:  MOVLB  6
054B8:  MOVWF  x3E
054BA:  MOVLW  FA
054BC:  MOVWF  x47
054BE:  MOVLB  0
054C0:  CALL   0E5A
054C4:  MOVLB  6
054C6:  DECFSZ x3E,F
054C8:  BRA    54BA
054CA:  MOVLW  03
054CC:  MOVLB  5
054CE:  ADDWF  x9D,W
054D0:  MOVWF  x98
054D2:  MOVLW  01
054D4:  MOVWF  x9D
054D6:  MOVLB  6
054D8:  CLRF   x46
054DA:  MOVLB  0
054DC:  CALL   1E7E
054E0:  MOVLB  5
054E2:  BSF    x87.7
054E4:  MOVLB  0
....................          } 
....................    } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Continuar 
054E6:  MOVLB  5
054E8:  MOVF   x98,W
054EA:  SUBLW  04
054EC:  BTFSS  FD8.2
054EE:  BRA    58E2
....................        
....................       if(Opcion>3) 
054F0:  MOVF   x9D,W
054F2:  SUBLW  03
054F4:  BC    54FA
....................          Opcion=1; 
054F6:  MOVLW  01
054F8:  MOVWF  x9D
....................           
....................       if(Opcion<1) 
054FA:  MOVF   x9D,F
054FC:  BNZ   5502
....................          Opcion=3; 
054FE:  MOVLW  03
05500:  MOVWF  x9D
....................        
....................          strcpy(Menus.Letra,"Seleccione"); 
05502:  MOVLW  06
05504:  MOVWF  FEA
05506:  MOVLW  1E
05508:  MOVWF  FE9
0550A:  MOVFF  FF2,63E
0550E:  BCF    FF2.7
05510:  MOVLW  00
05512:  MOVLB  0
05514:  CALL   0998
05518:  TBLRD*-
0551A:  TBLRD*+
0551C:  MOVF   FF5,W
0551E:  MOVWF  FEE
05520:  IORLW  00
05522:  BNZ   551A
05524:  MOVLB  6
05526:  BTFSC  x3E.7
05528:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
0552A:  MOVLW  06
0552C:  MOVWF  x47
0552E:  MOVLW  1E
05530:  MOVWF  x46
05532:  CLRF   x48
05534:  CLRF   x49
05536:  MOVLW  01
05538:  MOVWF  x4A
0553A:  MOVLW  02
0553C:  MOVWF  x4B
0553E:  MOVLB  0
05540:  CALL   24AC
....................           
....................          strcpy(Menus.Letra,"Temperatura"); 
05544:  MOVLW  06
05546:  MOVWF  FEA
05548:  MOVLW  1E
0554A:  MOVWF  FE9
0554C:  MOVFF  FF2,63E
05550:  BCF    FF2.7
05552:  MOVLW  00
05554:  CALL   09C2
05558:  TBLRD*-
0555A:  TBLRD*+
0555C:  MOVF   FF5,W
0555E:  MOVWF  FEE
05560:  IORLW  00
05562:  BNZ   555A
05564:  MOVLB  6
05566:  BTFSC  x3E.7
05568:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,16,1,2); 
0556A:  MOVLW  06
0556C:  MOVWF  x47
0556E:  MOVLW  1E
05570:  MOVWF  x46
05572:  CLRF   x48
05574:  MOVLW  10
05576:  MOVWF  x49
05578:  MOVLW  01
0557A:  MOVWF  x4A
0557C:  MOVLW  02
0557E:  MOVWF  x4B
05580:  MOVLB  0
05582:  CALL   24AC
....................           
....................          displayContrasena(Opcion,10,38,1); 
05586:  MOVFF  59D,648
0558A:  MOVLW  0A
0558C:  MOVLB  6
0558E:  MOVWF  x49
05590:  MOVLW  26
05592:  MOVWF  x4A
05594:  MOVLW  01
05596:  MOVWF  x4B
05598:  MOVLB  0
0559A:  CALL   2B4C
....................          glcd_circle(90,38,2,NO,ON); 
0559E:  MOVLW  5A
055A0:  MOVLB  6
055A2:  MOVWF  x53
055A4:  MOVLW  26
055A6:  MOVWF  x54
055A8:  MOVLW  02
055AA:  MOVWF  x55
055AC:  CLRF   x56
055AE:  MOVLW  01
055B0:  MOVWF  x57
055B2:  MOVLB  0
055B4:  CALL   353A
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,97,35,2,2);          
055B8:  MOVLW  06
055BA:  MOVWF  FEA
055BC:  MOVLW  1E
055BE:  MOVWF  FE9
055C0:  MOVFF  FF2,63E
055C4:  BCF    FF2.7
055C6:  MOVLW  00
055C8:  CALL   06D2
055CC:  TBLRD*-
055CE:  TBLRD*+
055D0:  MOVF   FF5,W
055D2:  MOVWF  FEE
055D4:  IORLW  00
055D6:  BNZ   55CE
055D8:  MOVLB  6
055DA:  BTFSC  x3E.7
055DC:  BSF    FF2.7
055DE:  MOVLW  06
055E0:  MOVWF  x47
055E2:  MOVLW  1E
055E4:  MOVWF  x46
055E6:  MOVLW  61
055E8:  MOVWF  x48
055EA:  MOVLW  23
055EC:  MOVWF  x49
055EE:  MOVLW  02
055F0:  MOVWF  x4A
055F2:  MOVWF  x4B
055F4:  MOVLB  0
055F6:  CALL   24AC
....................           
....................          if(Opcion==1)          
055FA:  MOVLB  5
055FC:  DECFSZ x9D,W
055FE:  BRA    563E
....................             displayTemperatura(Temperatura1,50,38,0,2); 
05600:  MOVFF  611,641
05604:  MOVFF  610,640
05608:  MOVFF  60F,63F
0560C:  MOVFF  60E,63E
05610:  MOVLB  0
05612:  CALL   3764
05616:  MOVFF  02,63F
0561A:  MOVFF  01,63E
0561E:  MOVFF  02,641
05622:  MOVFF  01,640
05626:  MOVLW  32
05628:  MOVLB  6
0562A:  MOVWF  x42
0562C:  MOVLW  26
0562E:  MOVWF  x43
05630:  CLRF   x44
05632:  MOVLW  02
05634:  MOVWF  x45
05636:  MOVLB  0
05638:  CALL   385E
0563C:  MOVLB  5
....................           
....................          if(Opcion==2) 
0563E:  MOVF   x9D,W
05640:  SUBLW  02
05642:  BNZ   5682
....................             displayTemperatura(Temperatura2,50,38,0,2); 
05644:  MOVFF  615,641
05648:  MOVFF  614,640
0564C:  MOVFF  613,63F
05650:  MOVFF  612,63E
05654:  MOVLB  0
05656:  CALL   3764
0565A:  MOVFF  02,63F
0565E:  MOVFF  01,63E
05662:  MOVFF  02,641
05666:  MOVFF  01,640
0566A:  MOVLW  32
0566C:  MOVLB  6
0566E:  MOVWF  x42
05670:  MOVLW  26
05672:  MOVWF  x43
05674:  CLRF   x44
05676:  MOVLW  02
05678:  MOVWF  x45
0567A:  MOVLB  0
0567C:  CALL   385E
05680:  MOVLB  5
....................           
....................          if(Opcion==3) 
05682:  MOVF   x9D,W
05684:  SUBLW  03
05686:  BNZ   56C6
....................             displayTemperatura(Temperatura3,50,38,0,2);  
05688:  MOVFF  619,641
0568C:  MOVFF  618,640
05690:  MOVFF  617,63F
05694:  MOVFF  616,63E
05698:  MOVLB  0
0569A:  CALL   3764
0569E:  MOVFF  02,63F
056A2:  MOVFF  01,63E
056A6:  MOVFF  02,641
056AA:  MOVFF  01,640
056AE:  MOVLW  32
056B0:  MOVLB  6
056B2:  MOVWF  x42
056B4:  MOVLW  26
056B6:  MOVWF  x43
056B8:  CLRF   x44
056BA:  MOVLW  02
056BC:  MOVWF  x45
056BE:  MOVLB  0
056C0:  CALL   385E
056C4:  MOVLB  5
....................          
....................       if(UP)//Si oprime hacia arriba 
056C6:  BSF    F92.5
056C8:  BTFSC  F80.5
056CA:  BRA    56EE
....................       { 
....................          Opcion++; 
056CC:  INCF   x9D,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
056CE:  MOVLW  28
056D0:  MOVLB  6
056D2:  MOVWF  x57
056D4:  MOVLW  23
056D6:  MOVWF  x58
056D8:  MOVLW  55
056DA:  MOVWF  x59
056DC:  MOVLW  3C
056DE:  MOVWF  x5A
056E0:  MOVLW  01
056E2:  MOVWF  x5B
056E4:  CLRF   x5C
056E6:  MOVLB  0
056E8:  CALL   23EA
056EC:  MOVLB  5
....................           
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
056EE:  BSF    F96.0
056F0:  BTFSC  F84.0
056F2:  BRA    5716
....................       {   
....................          Opcion--;   
056F4:  DECF   x9D,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
056F6:  MOVLW  28
056F8:  MOVLB  6
056FA:  MOVWF  x57
056FC:  MOVLW  23
056FE:  MOVWF  x58
05700:  MOVLW  55
05702:  MOVWF  x59
05704:  MOVLW  3C
05706:  MOVWF  x5A
05708:  MOVLW  01
0570A:  MOVWF  x5B
0570C:  CLRF   x5C
0570E:  MOVLB  0
05710:  CALL   23EA
05714:  MOVLB  5
....................           
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
05716:  BSF    F96.1
05718:  BTFSC  F84.1
0571A:  BRA    58AE
....................       {   
....................          if(Opcion==1) 
0571C:  DECFSZ x9D,W
0571E:  BRA    5730
....................             Setpoint=Temperatura1; 
05720:  MOVFF  611,60D
05724:  MOVFF  610,60C
05728:  MOVFF  60F,60B
0572C:  MOVFF  60E,60A
....................           
....................          if(Opcion==2) 
05730:  MOVF   x9D,W
05732:  SUBLW  02
05734:  BNZ   5746
....................             Setpoint=Temperatura2; 
05736:  MOVFF  615,60D
0573A:  MOVFF  614,60C
0573E:  MOVFF  613,60B
05742:  MOVFF  612,60A
....................           
....................          if(Opcion==3) 
05746:  MOVF   x9D,W
05748:  SUBLW  03
0574A:  BNZ   575C
....................             Setpoint=Temperatura3; 
0574C:  MOVFF  619,60D
05750:  MOVFF  618,60C
05754:  MOVFF  617,60B
05758:  MOVFF  616,60A
....................           
....................          if(Setpoint<Temperatura){ 
0575C:  MOVFF  60D,641
05760:  MOVFF  60C,640
05764:  MOVFF  60B,63F
05768:  MOVFF  60A,63E
0576C:  MOVFF  601,645
05770:  MOVFF  600,644
05774:  MOVFF  5FF,643
05778:  MOVFF  5FE,642
0577C:  MOVLB  0
0577E:  CALL   1802
05782:  BNC   57E4
....................             Enfria=1; 
05784:  MOVLW  01
05786:  MOVLB  5
05788:  MOVWF  x91
....................             Ganancia=GananciaR*(Setpoint/44.5); 
0578A:  MOVFF  60D,642
0578E:  MOVFF  60C,641
05792:  MOVFF  60B,640
05796:  MOVFF  60A,63F
0579A:  MOVLB  6
0579C:  CLRF   x46
0579E:  CLRF   x45
057A0:  MOVLW  32
057A2:  MOVWF  x44
057A4:  MOVLW  84
057A6:  MOVWF  x43
057A8:  MOVLB  0
057AA:  CALL   0EDA
057AE:  MOVFF  5F1,661
057B2:  MOVFF  5F0,660
057B6:  MOVFF  5EF,65F
057BA:  MOVFF  5EE,65E
057BE:  MOVFF  03,665
057C2:  MOVFF  02,664
057C6:  MOVFF  01,663
057CA:  MOVFF  00,662
057CE:  CALL   2600
057D2:  MOVFF  03,5ED
057D6:  MOVFF  02,5EC
057DA:  MOVFF  01,5EB
057DE:  MOVFF  00,5EA
....................             //Ganancia=4; 
....................          }else{ 
057E2:  BRA    5878
....................             Enfria=0; 
057E4:  MOVLB  5
057E6:  CLRF   x91
....................             Ganancia=GananciaR*(Setpoint/44.5); 
057E8:  MOVFF  60D,642
057EC:  MOVFF  60C,641
057F0:  MOVFF  60B,640
057F4:  MOVFF  60A,63F
057F8:  MOVLB  6
057FA:  CLRF   x46
057FC:  CLRF   x45
057FE:  MOVLW  32
05800:  MOVWF  x44
05802:  MOVLW  84
05804:  MOVWF  x43
05806:  MOVLB  0
05808:  CALL   0EDA
0580C:  MOVFF  5F1,661
05810:  MOVFF  5F0,660
05814:  MOVFF  5EF,65F
05818:  MOVFF  5EE,65E
0581C:  MOVFF  03,665
05820:  MOVFF  02,664
05824:  MOVFF  01,663
05828:  MOVFF  00,662
0582C:  CALL   2600
05830:  MOVFF  03,5ED
05834:  MOVFF  02,5EC
05838:  MOVFF  01,5EB
0583C:  MOVFF  00,5EA
....................             Gananciamax=(0.21)*Setpoint; 
05840:  MOVLW  3D
05842:  MOVLB  6
05844:  MOVWF  x61
05846:  MOVLW  0A
05848:  MOVWF  x60
0584A:  MOVLW  57
0584C:  MOVWF  x5F
0584E:  MOVLW  7C
05850:  MOVWF  x5E
05852:  MOVFF  60D,665
05856:  MOVFF  60C,664
0585A:  MOVFF  60B,663
0585E:  MOVFF  60A,662
05862:  MOVLB  0
05864:  CALL   2600
05868:  MOVFF  03,5BD
0586C:  MOVFF  02,5BC
05870:  MOVFF  01,5BB
05874:  MOVFF  00,5BA
....................          }  
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;glcd_fillScreen(OFF);pausa=0; 
05878:  MOVLW  14
0587A:  MOVLB  5
0587C:  MOVWF  x98
0587E:  MOVLW  0F
05880:  MOVLB  6
05882:  MOVWF  x57
05884:  MOVLW  12
05886:  MOVWF  x58
05888:  MOVLW  1E
0588A:  MOVWF  x59
0588C:  MOVLW  35
0588E:  MOVWF  x5A
05890:  CLRF   x5B
05892:  MOVLW  01
05894:  MOVWF  x5C
05896:  MOVLB  0
05898:  CALL   23EA
0589C:  MOVLB  5
0589E:  CLRF   x9F
058A0:  MOVLB  6
058A2:  CLRF   x46
058A4:  MOVLB  0
058A6:  CALL   1E7E
058AA:  MOVLB  5
058AC:  CLRF   x9B
....................       }  
....................                    
....................       if(LEFT)//Si oprime boton de Toma. 
058AE:  BSF    F96.2
058B0:  BTFSC  F84.2
058B2:  BRA    58E2
....................       { 
....................          delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
058B4:  MOVLW  04
058B6:  MOVLB  6
058B8:  MOVWF  x3E
058BA:  MOVLW  AF
058BC:  MOVWF  x47
058BE:  MOVLB  0
058C0:  CALL   0E5A
058C4:  MOVLB  6
058C6:  DECFSZ x3E,F
058C8:  BRA    58BA
058CA:  MOVLW  01
058CC:  MOVLB  5
058CE:  MOVWF  x98
058D0:  MOVLB  6
058D2:  CLRF   x46
058D4:  MOVLB  0
058D6:  CALL   1E7E
058DA:  MOVLW  01
058DC:  MOVLB  5
058DE:  MOVWF  x9D
058E0:  BSF    x87.7
....................       } 
....................      
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Temperatura 
058E2:  MOVF   x98,W
058E4:  SUBLW  05
058E6:  BTFSS  FD8.2
058E8:  GOTO   617A
....................       
....................          if(Opcion>3) 
058EC:  MOVF   x9D,W
058EE:  SUBLW  03
058F0:  BC    58F6
....................             Opcion=1; 
058F2:  MOVLW  01
058F4:  MOVWF  x9D
....................          if(Opcion<1) 
058F6:  MOVF   x9D,F
058F8:  BNZ   58FE
....................             Opcion=3; 
058FA:  MOVLW  03
058FC:  MOVWF  x9D
....................           
....................        
....................          if(Opcion==1)   { 
058FE:  DECFSZ x9D,W
05900:  BRA    5958
....................             strcpy(Menus.Letra,"Temperatura 1"); 
05902:  MOVLW  06
05904:  MOVWF  FEA
05906:  MOVLW  1E
05908:  MOVWF  FE9
0590A:  MOVFF  FF2,63E
0590E:  BCF    FF2.7
05910:  MOVLW  00
05912:  MOVLB  0
05914:  CALL   09EC
05918:  TBLRD*-
0591A:  TBLRD*+
0591C:  MOVF   FF5,W
0591E:  MOVWF  FEE
05920:  IORLW  00
05922:  BNZ   591A
05924:  MOVLB  6
05926:  BTFSC  x3E.7
05928:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,1,1); 
0592A:  MOVLW  06
0592C:  MOVWF  x3F
0592E:  MOVLW  1E
05930:  MOVWF  x3E
05932:  MOVFF  611,643
05936:  MOVFF  610,642
0593A:  MOVFF  60F,641
0593E:  MOVFF  60E,640
05942:  CLRF   x44
05944:  MOVLW  14
05946:  MOVWF  x45
05948:  MOVLW  01
0594A:  MOVWF  x46
0594C:  MOVWF  x47
0594E:  MOVLB  0
05950:  CALL   3C8E
....................          }else{ 
05954:  BRA    59AA
05956:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 1"); 
05958:  MOVLW  06
0595A:  MOVWF  FEA
0595C:  MOVLW  1E
0595E:  MOVWF  FE9
05960:  MOVFF  FF2,63E
05964:  BCF    FF2.7
05966:  MOVLW  00
05968:  MOVLB  0
0596A:  CALL   09EC
0596E:  TBLRD*-
05970:  TBLRD*+
05972:  MOVF   FF5,W
05974:  MOVWF  FEE
05976:  IORLW  00
05978:  BNZ   5970
0597A:  MOVLB  6
0597C:  BTFSC  x3E.7
0597E:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,0,1); 
05980:  MOVLW  06
05982:  MOVWF  x3F
05984:  MOVLW  1E
05986:  MOVWF  x3E
05988:  MOVFF  611,643
0598C:  MOVFF  610,642
05990:  MOVFF  60F,641
05994:  MOVFF  60E,640
05998:  CLRF   x44
0599A:  MOVLW  14
0599C:  MOVWF  x45
0599E:  CLRF   x46
059A0:  MOVLW  01
059A2:  MOVWF  x47
059A4:  MOVLB  0
059A6:  CALL   3C8E
....................          } 
....................           
....................          if(Opcion==2)   { 
059AA:  MOVLB  5
059AC:  MOVF   x9D,W
059AE:  SUBLW  02
059B0:  BNZ   5A08
....................             strcpy(Menus.Letra,"Temperatura 2"); 
059B2:  MOVLW  06
059B4:  MOVWF  FEA
059B6:  MOVLW  1E
059B8:  MOVWF  FE9
059BA:  MOVFF  FF2,63E
059BE:  BCF    FF2.7
059C0:  MOVLW  00
059C2:  MOVLB  0
059C4:  CALL   0A18
059C8:  TBLRD*-
059CA:  TBLRD*+
059CC:  MOVF   FF5,W
059CE:  MOVWF  FEE
059D0:  IORLW  00
059D2:  BNZ   59CA
059D4:  MOVLB  6
059D6:  BTFSC  x3E.7
059D8:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,1,1); 
059DA:  MOVLW  06
059DC:  MOVWF  x3F
059DE:  MOVLW  1E
059E0:  MOVWF  x3E
059E2:  MOVFF  615,643
059E6:  MOVFF  614,642
059EA:  MOVFF  613,641
059EE:  MOVFF  612,640
059F2:  CLRF   x44
059F4:  MOVLW  23
059F6:  MOVWF  x45
059F8:  MOVLW  01
059FA:  MOVWF  x46
059FC:  MOVWF  x47
059FE:  MOVLB  0
05A00:  CALL   3C8E
....................          }else{ 
05A04:  BRA    5A5A
05A06:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 2"); 
05A08:  MOVLW  06
05A0A:  MOVWF  FEA
05A0C:  MOVLW  1E
05A0E:  MOVWF  FE9
05A10:  MOVFF  FF2,63E
05A14:  BCF    FF2.7
05A16:  MOVLW  00
05A18:  MOVLB  0
05A1A:  CALL   0A18
05A1E:  TBLRD*-
05A20:  TBLRD*+
05A22:  MOVF   FF5,W
05A24:  MOVWF  FEE
05A26:  IORLW  00
05A28:  BNZ   5A20
05A2A:  MOVLB  6
05A2C:  BTFSC  x3E.7
05A2E:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,0,1); 
05A30:  MOVLW  06
05A32:  MOVWF  x3F
05A34:  MOVLW  1E
05A36:  MOVWF  x3E
05A38:  MOVFF  615,643
05A3C:  MOVFF  614,642
05A40:  MOVFF  613,641
05A44:  MOVFF  612,640
05A48:  CLRF   x44
05A4A:  MOVLW  23
05A4C:  MOVWF  x45
05A4E:  CLRF   x46
05A50:  MOVLW  01
05A52:  MOVWF  x47
05A54:  MOVLB  0
05A56:  CALL   3C8E
....................          } 
....................              
....................          if(Opcion==3)   { 
05A5A:  MOVLB  5
05A5C:  MOVF   x9D,W
05A5E:  SUBLW  03
05A60:  BNZ   5AB8
....................             strcpy(Menus.Letra,"Temperatura 3"); 
05A62:  MOVLW  06
05A64:  MOVWF  FEA
05A66:  MOVLW  1E
05A68:  MOVWF  FE9
05A6A:  MOVFF  FF2,63E
05A6E:  BCF    FF2.7
05A70:  MOVLW  00
05A72:  MOVLB  0
05A74:  CALL   0A44
05A78:  TBLRD*-
05A7A:  TBLRD*+
05A7C:  MOVF   FF5,W
05A7E:  MOVWF  FEE
05A80:  IORLW  00
05A82:  BNZ   5A7A
05A84:  MOVLB  6
05A86:  BTFSC  x3E.7
05A88:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,1,1); 
05A8A:  MOVLW  06
05A8C:  MOVWF  x3F
05A8E:  MOVLW  1E
05A90:  MOVWF  x3E
05A92:  MOVFF  619,643
05A96:  MOVFF  618,642
05A9A:  MOVFF  617,641
05A9E:  MOVFF  616,640
05AA2:  CLRF   x44
05AA4:  MOVLW  32
05AA6:  MOVWF  x45
05AA8:  MOVLW  01
05AAA:  MOVWF  x46
05AAC:  MOVWF  x47
05AAE:  MOVLB  0
05AB0:  CALL   3C8E
....................          }else{ 
05AB4:  BRA    5B0A
05AB6:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 3"); 
05AB8:  MOVLW  06
05ABA:  MOVWF  FEA
05ABC:  MOVLW  1E
05ABE:  MOVWF  FE9
05AC0:  MOVFF  FF2,63E
05AC4:  BCF    FF2.7
05AC6:  MOVLW  00
05AC8:  MOVLB  0
05ACA:  CALL   0A44
05ACE:  TBLRD*-
05AD0:  TBLRD*+
05AD2:  MOVF   FF5,W
05AD4:  MOVWF  FEE
05AD6:  IORLW  00
05AD8:  BNZ   5AD0
05ADA:  MOVLB  6
05ADC:  BTFSC  x3E.7
05ADE:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,0,1); 
05AE0:  MOVLW  06
05AE2:  MOVWF  x3F
05AE4:  MOVLW  1E
05AE6:  MOVWF  x3E
05AE8:  MOVFF  619,643
05AEC:  MOVFF  618,642
05AF0:  MOVFF  617,641
05AF4:  MOVFF  616,640
05AF8:  CLRF   x44
05AFA:  MOVLW  32
05AFC:  MOVWF  x45
05AFE:  CLRF   x46
05B00:  MOVLW  01
05B02:  MOVWF  x47
05B04:  MOVLB  0
05B06:  CALL   3C8E
....................          } 
....................                
....................                 
....................          if(RIGHT)//Si oprime SET  
05B0A:  BSF    F96.1
05B0C:  BTFSC  F84.1
05B0E:  BRA    5B16
....................             Opcion++; 
05B10:  MOVLB  5
05B12:  INCF   x9D,F
05B14:  MOVLB  0
....................        
....................          strcpy(Menus.Letra,"Temperatura"); 
05B16:  MOVLW  06
05B18:  MOVWF  FEA
05B1A:  MOVLW  1E
05B1C:  MOVWF  FE9
05B1E:  MOVFF  FF2,63E
05B22:  BCF    FF2.7
05B24:  MOVLW  00
05B26:  CALL   09C2
05B2A:  TBLRD*-
05B2C:  TBLRD*+
05B2E:  MOVF   FF5,W
05B30:  MOVWF  FEE
05B32:  IORLW  00
05B34:  BNZ   5B2C
05B36:  MOVLB  6
05B38:  BTFSC  x3E.7
05B3A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
05B3C:  MOVLW  06
05B3E:  MOVWF  x47
05B40:  MOVLW  1E
05B42:  MOVWF  x46
05B44:  CLRF   x48
05B46:  CLRF   x49
05B48:  MOVLW  01
05B4A:  MOVWF  x4A
05B4C:  MOVLW  02
05B4E:  MOVWF  x4B
05B50:  MOVLB  0
05B52:  CALL   24AC
....................           
....................        
....................          if(UP)//Si oprime hacia arriba 
05B56:  BSF    F92.5
05B58:  BTFSC  F80.5
05B5A:  BRA    5C20
....................          {   
....................             if(Opcion==1) 
05B5C:  MOVLB  5
05B5E:  DECFSZ x9D,W
05B60:  BRA    5B9E
....................                Temperatura1+=0.1; 
05B62:  BCF    FD8.1
05B64:  MOVFF  611,646
05B68:  MOVFF  610,645
05B6C:  MOVFF  60F,644
05B70:  MOVFF  60E,643
05B74:  MOVLW  CD
05B76:  MOVLB  6
05B78:  MOVWF  x4A
05B7A:  MOVLW  CC
05B7C:  MOVWF  x49
05B7E:  MOVLW  4C
05B80:  MOVWF  x48
05B82:  MOVLW  7B
05B84:  MOVWF  x47
05B86:  MOVLB  0
05B88:  CALL   1038
05B8C:  MOVFF  03,611
05B90:  MOVFF  02,610
05B94:  MOVFF  01,60F
05B98:  MOVFF  00,60E
05B9C:  MOVLB  5
....................              
....................             if(Opcion==2) 
05B9E:  MOVF   x9D,W
05BA0:  SUBLW  02
05BA2:  BNZ   5BE0
....................                Temperatura2+=0.1; 
05BA4:  BCF    FD8.1
05BA6:  MOVFF  615,646
05BAA:  MOVFF  614,645
05BAE:  MOVFF  613,644
05BB2:  MOVFF  612,643
05BB6:  MOVLW  CD
05BB8:  MOVLB  6
05BBA:  MOVWF  x4A
05BBC:  MOVLW  CC
05BBE:  MOVWF  x49
05BC0:  MOVLW  4C
05BC2:  MOVWF  x48
05BC4:  MOVLW  7B
05BC6:  MOVWF  x47
05BC8:  MOVLB  0
05BCA:  CALL   1038
05BCE:  MOVFF  03,615
05BD2:  MOVFF  02,614
05BD6:  MOVFF  01,613
05BDA:  MOVFF  00,612
05BDE:  MOVLB  5
....................                 
....................             if(Opcion==3) 
05BE0:  MOVF   x9D,W
05BE2:  SUBLW  03
05BE4:  BNZ   5C22
....................                Temperatura3+=0.1;    
05BE6:  BCF    FD8.1
05BE8:  MOVFF  619,646
05BEC:  MOVFF  618,645
05BF0:  MOVFF  617,644
05BF4:  MOVFF  616,643
05BF8:  MOVLW  CD
05BFA:  MOVLB  6
05BFC:  MOVWF  x4A
05BFE:  MOVLW  CC
05C00:  MOVWF  x49
05C02:  MOVLW  4C
05C04:  MOVWF  x48
05C06:  MOVLW  7B
05C08:  MOVWF  x47
05C0A:  MOVLB  0
05C0C:  CALL   1038
05C10:  MOVFF  03,619
05C14:  MOVFF  02,618
05C18:  MOVFF  01,617
05C1C:  MOVFF  00,616
05C20:  MOVLB  5
....................              
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
05C22:  BSF    F96.0
05C24:  BTFSC  F84.0
05C26:  BRA    5CEC
....................          {   
....................             if(Opcion==1) 
05C28:  DECFSZ x9D,W
05C2A:  BRA    5C68
....................                Temperatura1-=0.1; 
05C2C:  BSF    FD8.1
05C2E:  MOVFF  611,646
05C32:  MOVFF  610,645
05C36:  MOVFF  60F,644
05C3A:  MOVFF  60E,643
05C3E:  MOVLW  CD
05C40:  MOVLB  6
05C42:  MOVWF  x4A
05C44:  MOVLW  CC
05C46:  MOVWF  x49
05C48:  MOVLW  4C
05C4A:  MOVWF  x48
05C4C:  MOVLW  7B
05C4E:  MOVWF  x47
05C50:  MOVLB  0
05C52:  CALL   1038
05C56:  MOVFF  03,611
05C5A:  MOVFF  02,610
05C5E:  MOVFF  01,60F
05C62:  MOVFF  00,60E
05C66:  MOVLB  5
....................              
....................             if(Opcion==2) 
05C68:  MOVF   x9D,W
05C6A:  SUBLW  02
05C6C:  BNZ   5CAA
....................                Temperatura2-=0.1; 
05C6E:  BSF    FD8.1
05C70:  MOVFF  615,646
05C74:  MOVFF  614,645
05C78:  MOVFF  613,644
05C7C:  MOVFF  612,643
05C80:  MOVLW  CD
05C82:  MOVLB  6
05C84:  MOVWF  x4A
05C86:  MOVLW  CC
05C88:  MOVWF  x49
05C8A:  MOVLW  4C
05C8C:  MOVWF  x48
05C8E:  MOVLW  7B
05C90:  MOVWF  x47
05C92:  MOVLB  0
05C94:  CALL   1038
05C98:  MOVFF  03,615
05C9C:  MOVFF  02,614
05CA0:  MOVFF  01,613
05CA4:  MOVFF  00,612
05CA8:  MOVLB  5
....................                 
....................             if(Opcion==3) 
05CAA:  MOVF   x9D,W
05CAC:  SUBLW  03
05CAE:  BNZ   5CEC
....................                Temperatura3-=0.1;    
05CB0:  BSF    FD8.1
05CB2:  MOVFF  619,646
05CB6:  MOVFF  618,645
05CBA:  MOVFF  617,644
05CBE:  MOVFF  616,643
05CC2:  MOVLW  CD
05CC4:  MOVLB  6
05CC6:  MOVWF  x4A
05CC8:  MOVLW  CC
05CCA:  MOVWF  x49
05CCC:  MOVLW  4C
05CCE:  MOVWF  x48
05CD0:  MOVLW  7B
05CD2:  MOVWF  x47
05CD4:  MOVLB  0
05CD6:  CALL   1038
05CDA:  MOVFF  03,619
05CDE:  MOVFF  02,618
05CE2:  MOVFF  01,617
05CE6:  MOVFF  00,616
05CEA:  MOVLB  5
....................              
....................          } 
....................                            
....................          if(LEFT)//Si oprime boton de Toma. 
05CEC:  BSF    F96.2
05CEE:  BTFSC  F84.2
05CF0:  BRA    603E
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
05CF2:  MOVLW  04
05CF4:  MOVLB  6
05CF6:  MOVWF  x3E
05CF8:  MOVLW  AF
05CFA:  MOVWF  x47
05CFC:  MOVLB  0
05CFE:  CALL   0E5A
05D02:  MOVLB  6
05D04:  DECFSZ x3E,F
05D06:  BRA    5CF8
05D08:  MOVLW  01
05D0A:  MOVLB  5
05D0C:  MOVWF  x98
05D0E:  MOVLB  6
05D10:  CLRF   x46
05D12:  MOVLB  0
05D14:  CALL   1E7E
05D18:  MOVLW  01
05D1A:  MOVLB  5
05D1C:  MOVWF  x9D
05D1E:  BSF    x87.7
....................              
....................             entero=(int8)Temperatura1; 
05D20:  MOVFF  611,641
05D24:  MOVFF  610,640
05D28:  MOVFF  60F,63F
05D2C:  MOVFF  60E,63E
05D30:  MOVLB  0
05D32:  CALL   3764
05D36:  MOVFF  01,5A1
....................             decimal=(Temperatura1-entero)*10; 
05D3A:  MOVLB  6
05D3C:  CLRF   x45
05D3E:  MOVFF  5A1,644
05D42:  MOVLB  0
05D44:  CALL   0EA4
05D48:  BSF    FD8.1
05D4A:  MOVFF  611,646
05D4E:  MOVFF  610,645
05D52:  MOVFF  60F,644
05D56:  MOVFF  60E,643
05D5A:  MOVFF  03,64A
05D5E:  MOVFF  02,649
05D62:  MOVFF  01,648
05D66:  MOVFF  00,647
05D6A:  CALL   1038
05D6E:  MOVFF  00,63E
05D72:  MOVFF  01,63F
05D76:  MOVFF  02,640
05D7A:  MOVFF  03,641
05D7E:  MOVFF  03,661
05D82:  MOVFF  02,660
05D86:  MOVFF  01,65F
05D8A:  MOVFF  00,65E
05D8E:  MOVLB  6
05D90:  CLRF   x65
05D92:  CLRF   x64
05D94:  MOVLW  20
05D96:  MOVWF  x63
05D98:  MOVLW  82
05D9A:  MOVWF  x62
05D9C:  MOVLB  0
05D9E:  CALL   2600
05DA2:  MOVFF  03,641
05DA6:  MOVFF  02,640
05DAA:  MOVFF  01,63F
05DAE:  MOVFF  00,63E
05DB2:  CALL   3764
05DB6:  MOVFF  01,5A0
....................             write_eeprom(80,entero); 
05DBA:  CLRF   FAA
05DBC:  MOVLW  50
05DBE:  MOVWF  FA9
05DC0:  MOVFF  5A1,FA8
05DC4:  BCF    FA6.6
05DC6:  BCF    FA6.7
05DC8:  BSF    FA6.2
05DCA:  MOVF   FF2,W
05DCC:  MOVWF  00
05DCE:  BCF    FF2.7
05DD0:  MOVLB  F
05DD2:  MOVLW  55
05DD4:  MOVWF  FA7
05DD6:  MOVLW  AA
05DD8:  MOVWF  FA7
05DDA:  BSF    FA6.1
05DDC:  BTFSC  FA6.1
05DDE:  BRA    5DDC
05DE0:  BCF    FA6.2
05DE2:  MOVF   00,W
05DE4:  IORWF  FF2,F
....................             delay_ms(50);    
05DE6:  MOVLW  32
05DE8:  MOVLB  6
05DEA:  MOVWF  x47
05DEC:  MOVLB  0
05DEE:  CALL   0E5A
....................             write_eeprom(81,decimal);//Guardar valor de Setpoint en eeprom 
05DF2:  CLRF   FAA
05DF4:  MOVLW  51
05DF6:  MOVWF  FA9
05DF8:  MOVFF  5A0,FA8
05DFC:  BCF    FA6.6
05DFE:  BCF    FA6.7
05E00:  BSF    FA6.2
05E02:  MOVF   FF2,W
05E04:  MOVWF  00
05E06:  BCF    FF2.7
05E08:  MOVLB  F
05E0A:  MOVLW  55
05E0C:  MOVWF  FA7
05E0E:  MOVLW  AA
05E10:  MOVWF  FA7
05E12:  BSF    FA6.1
05E14:  BTFSC  FA6.1
05E16:  BRA    5E14
05E18:  BCF    FA6.2
05E1A:  MOVF   00,W
05E1C:  IORWF  FF2,F
....................             delay_ms(50);   
05E1E:  MOVLW  32
05E20:  MOVLB  6
05E22:  MOVWF  x47
05E24:  MOVLB  0
05E26:  CALL   0E5A
....................              
....................             entero=(int8)Temperatura2; 
05E2A:  MOVFF  615,641
05E2E:  MOVFF  614,640
05E32:  MOVFF  613,63F
05E36:  MOVFF  612,63E
05E3A:  CALL   3764
05E3E:  MOVFF  01,5A1
....................             decimal=(Temperatura2-entero)*10; 
05E42:  MOVLB  6
05E44:  CLRF   x45
05E46:  MOVFF  5A1,644
05E4A:  MOVLB  0
05E4C:  CALL   0EA4
05E50:  BSF    FD8.1
05E52:  MOVFF  615,646
05E56:  MOVFF  614,645
05E5A:  MOVFF  613,644
05E5E:  MOVFF  612,643
05E62:  MOVFF  03,64A
05E66:  MOVFF  02,649
05E6A:  MOVFF  01,648
05E6E:  MOVFF  00,647
05E72:  CALL   1038
05E76:  MOVFF  00,63E
05E7A:  MOVFF  01,63F
05E7E:  MOVFF  02,640
05E82:  MOVFF  03,641
05E86:  MOVFF  03,661
05E8A:  MOVFF  02,660
05E8E:  MOVFF  01,65F
05E92:  MOVFF  00,65E
05E96:  MOVLB  6
05E98:  CLRF   x65
05E9A:  CLRF   x64
05E9C:  MOVLW  20
05E9E:  MOVWF  x63
05EA0:  MOVLW  82
05EA2:  MOVWF  x62
05EA4:  MOVLB  0
05EA6:  CALL   2600
05EAA:  MOVFF  03,641
05EAE:  MOVFF  02,640
05EB2:  MOVFF  01,63F
05EB6:  MOVFF  00,63E
05EBA:  CALL   3764
05EBE:  MOVFF  01,5A0
....................             write_eeprom(83,entero); 
05EC2:  CLRF   FAA
05EC4:  MOVLW  53
05EC6:  MOVWF  FA9
05EC8:  MOVFF  5A1,FA8
05ECC:  BCF    FA6.6
05ECE:  BCF    FA6.7
05ED0:  BSF    FA6.2
05ED2:  MOVF   FF2,W
05ED4:  MOVWF  00
05ED6:  BCF    FF2.7
05ED8:  MOVLB  F
05EDA:  MOVLW  55
05EDC:  MOVWF  FA7
05EDE:  MOVLW  AA
05EE0:  MOVWF  FA7
05EE2:  BSF    FA6.1
05EE4:  BTFSC  FA6.1
05EE6:  BRA    5EE4
05EE8:  BCF    FA6.2
05EEA:  MOVF   00,W
05EEC:  IORWF  FF2,F
....................             delay_ms(50);    
05EEE:  MOVLW  32
05EF0:  MOVLB  6
05EF2:  MOVWF  x47
05EF4:  MOVLB  0
05EF6:  CALL   0E5A
....................             write_eeprom(84,decimal);//Guardar valor de Setpoint en eeprom 
05EFA:  CLRF   FAA
05EFC:  MOVLW  54
05EFE:  MOVWF  FA9
05F00:  MOVFF  5A0,FA8
05F04:  BCF    FA6.6
05F06:  BCF    FA6.7
05F08:  BSF    FA6.2
05F0A:  MOVF   FF2,W
05F0C:  MOVWF  00
05F0E:  BCF    FF2.7
05F10:  MOVLB  F
05F12:  MOVLW  55
05F14:  MOVWF  FA7
05F16:  MOVLW  AA
05F18:  MOVWF  FA7
05F1A:  BSF    FA6.1
05F1C:  BTFSC  FA6.1
05F1E:  BRA    5F1C
05F20:  BCF    FA6.2
05F22:  MOVF   00,W
05F24:  IORWF  FF2,F
....................             delay_ms(50);    
05F26:  MOVLW  32
05F28:  MOVLB  6
05F2A:  MOVWF  x47
05F2C:  MOVLB  0
05F2E:  CALL   0E5A
....................              
....................             entero=(int8)Temperatura3; 
05F32:  MOVFF  619,641
05F36:  MOVFF  618,640
05F3A:  MOVFF  617,63F
05F3E:  MOVFF  616,63E
05F42:  CALL   3764
05F46:  MOVFF  01,5A1
....................             decimal=(Temperatura3-entero)*10; 
05F4A:  MOVLB  6
05F4C:  CLRF   x45
05F4E:  MOVFF  5A1,644
05F52:  MOVLB  0
05F54:  CALL   0EA4
05F58:  BSF    FD8.1
05F5A:  MOVFF  619,646
05F5E:  MOVFF  618,645
05F62:  MOVFF  617,644
05F66:  MOVFF  616,643
05F6A:  MOVFF  03,64A
05F6E:  MOVFF  02,649
05F72:  MOVFF  01,648
05F76:  MOVFF  00,647
05F7A:  CALL   1038
05F7E:  MOVFF  00,63E
05F82:  MOVFF  01,63F
05F86:  MOVFF  02,640
05F8A:  MOVFF  03,641
05F8E:  MOVFF  03,661
05F92:  MOVFF  02,660
05F96:  MOVFF  01,65F
05F9A:  MOVFF  00,65E
05F9E:  MOVLB  6
05FA0:  CLRF   x65
05FA2:  CLRF   x64
05FA4:  MOVLW  20
05FA6:  MOVWF  x63
05FA8:  MOVLW  82
05FAA:  MOVWF  x62
05FAC:  MOVLB  0
05FAE:  CALL   2600
05FB2:  MOVFF  03,641
05FB6:  MOVFF  02,640
05FBA:  MOVFF  01,63F
05FBE:  MOVFF  00,63E
05FC2:  CALL   3764
05FC6:  MOVFF  01,5A0
....................             write_eeprom(86,entero); 
05FCA:  CLRF   FAA
05FCC:  MOVLW  56
05FCE:  MOVWF  FA9
05FD0:  MOVFF  5A1,FA8
05FD4:  BCF    FA6.6
05FD6:  BCF    FA6.7
05FD8:  BSF    FA6.2
05FDA:  MOVF   FF2,W
05FDC:  MOVWF  00
05FDE:  BCF    FF2.7
05FE0:  MOVLB  F
05FE2:  MOVLW  55
05FE4:  MOVWF  FA7
05FE6:  MOVLW  AA
05FE8:  MOVWF  FA7
05FEA:  BSF    FA6.1
05FEC:  BTFSC  FA6.1
05FEE:  BRA    5FEC
05FF0:  BCF    FA6.2
05FF2:  MOVF   00,W
05FF4:  IORWF  FF2,F
....................             delay_ms(50);    
05FF6:  MOVLW  32
05FF8:  MOVLB  6
05FFA:  MOVWF  x47
05FFC:  MOVLB  0
05FFE:  CALL   0E5A
....................             write_eeprom(87,decimal);//Guardar valor de Setpoint en eeprom 
06002:  CLRF   FAA
06004:  MOVLW  57
06006:  MOVWF  FA9
06008:  MOVFF  5A0,FA8
0600C:  BCF    FA6.6
0600E:  BCF    FA6.7
06010:  BSF    FA6.2
06012:  MOVF   FF2,W
06014:  MOVWF  00
06016:  BCF    FF2.7
06018:  MOVLB  F
0601A:  MOVLW  55
0601C:  MOVWF  FA7
0601E:  MOVLW  AA
06020:  MOVWF  FA7
06022:  BSF    FA6.1
06024:  BTFSC  FA6.1
06026:  BRA    6024
06028:  BCF    FA6.2
0602A:  MOVF   00,W
0602C:  IORWF  FF2,F
....................             delay_ms(50);    
0602E:  MOVLW  32
06030:  MOVLB  6
06032:  MOVWF  x47
06034:  MOVLB  0
06036:  CALL   0E5A
....................             MensajeAlmacenado(); 
0603A:  CALL   2C14
....................          } 
....................           
....................          if(Temperatura1<15) 
0603E:  MOVFF  611,641
06042:  MOVFF  610,640
06046:  MOVFF  60F,63F
0604A:  MOVFF  60E,63E
0604E:  MOVLB  6
06050:  CLRF   x45
06052:  CLRF   x44
06054:  MOVLW  70
06056:  MOVWF  x43
06058:  MOVLW  82
0605A:  MOVWF  x42
0605C:  MOVLB  0
0605E:  CALL   1802
06062:  BNC   6072
....................             Temperatura1=40; 
06064:  MOVLB  6
06066:  CLRF   x11
06068:  CLRF   x10
0606A:  MOVLW  20
0606C:  MOVWF  x0F
0606E:  MOVLW  84
06070:  MOVWF  x0E
....................              
....................          if(Temperatura2<15) 
06072:  MOVFF  615,641
06076:  MOVFF  614,640
0607A:  MOVFF  613,63F
0607E:  MOVFF  612,63E
06082:  MOVLB  6
06084:  CLRF   x45
06086:  CLRF   x44
06088:  MOVLW  70
0608A:  MOVWF  x43
0608C:  MOVLW  82
0608E:  MOVWF  x42
06090:  MOVLB  0
06092:  CALL   1802
06096:  BNC   60A6
....................             Temperatura2=40; 
06098:  MOVLB  6
0609A:  CLRF   x15
0609C:  CLRF   x14
0609E:  MOVLW  20
060A0:  MOVWF  x13
060A2:  MOVLW  84
060A4:  MOVWF  x12
....................              
....................          if(Temperatura3<15) 
060A6:  MOVFF  619,641
060AA:  MOVFF  618,640
060AE:  MOVFF  617,63F
060B2:  MOVFF  616,63E
060B6:  MOVLB  6
060B8:  CLRF   x45
060BA:  CLRF   x44
060BC:  MOVLW  70
060BE:  MOVWF  x43
060C0:  MOVLW  82
060C2:  MOVWF  x42
060C4:  MOVLB  0
060C6:  CALL   1802
060CA:  BNC   60DA
....................             Temperatura3=40; 
060CC:  MOVLB  6
060CE:  CLRF   x19
060D0:  CLRF   x18
060D2:  MOVLW  20
060D4:  MOVWF  x17
060D6:  MOVLW  84
060D8:  MOVWF  x16
....................              
....................          if(Temperatura1>40) 
060DA:  MOVLB  6
060DC:  CLRF   x41
060DE:  CLRF   x40
060E0:  MOVLW  20
060E2:  MOVWF  x3F
060E4:  MOVLW  84
060E6:  MOVWF  x3E
060E8:  MOVFF  611,645
060EC:  MOVFF  610,644
060F0:  MOVFF  60F,643
060F4:  MOVFF  60E,642
060F8:  MOVLB  0
060FA:  CALL   1802
060FE:  BNC   610E
....................             Temperatura1=15;    
06100:  MOVLB  6
06102:  CLRF   x11
06104:  CLRF   x10
06106:  MOVLW  70
06108:  MOVWF  x0F
0610A:  MOVLW  82
0610C:  MOVWF  x0E
....................              
....................          if(Temperatura2>40) 
0610E:  MOVLB  6
06110:  CLRF   x41
06112:  CLRF   x40
06114:  MOVLW  20
06116:  MOVWF  x3F
06118:  MOVLW  84
0611A:  MOVWF  x3E
0611C:  MOVFF  615,645
06120:  MOVFF  614,644
06124:  MOVFF  613,643
06128:  MOVFF  612,642
0612C:  MOVLB  0
0612E:  CALL   1802
06132:  BNC   6142
....................             Temperatura2=15;    
06134:  MOVLB  6
06136:  CLRF   x15
06138:  CLRF   x14
0613A:  MOVLW  70
0613C:  MOVWF  x13
0613E:  MOVLW  82
06140:  MOVWF  x12
....................              
....................          if(Temperatura3>40) 
06142:  MOVLB  6
06144:  CLRF   x41
06146:  CLRF   x40
06148:  MOVLW  20
0614A:  MOVWF  x3F
0614C:  MOVLW  84
0614E:  MOVWF  x3E
06150:  MOVFF  619,645
06154:  MOVFF  618,644
06158:  MOVFF  617,643
0615C:  MOVFF  616,642
06160:  MOVLB  0
06162:  CALL   1802
06166:  BNC   6178
....................             Temperatura3=15;    
06168:  MOVLB  6
0616A:  CLRF   x19
0616C:  CLRF   x18
0616E:  MOVLW  70
06170:  MOVWF  x17
06172:  MOVLW  82
06174:  MOVWF  x16
06176:  MOVLB  0
06178:  MOVLB  5
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Temporizador 
0617A:  MOVF   x98,W
0617C:  SUBLW  06
0617E:  BTFSS  FD8.2
06180:  BRA    64DC
....................             
....................          if(unidad<1) 
06182:  MOVF   x99,F
06184:  BNZ   618A
....................             unidad=4; 
06186:  MOVLW  04
06188:  MOVWF  x99
....................           
....................          strcpy(Menus.Letra,"Temporiza"); 
0618A:  MOVLW  06
0618C:  MOVWF  FEA
0618E:  MOVLW  1E
06190:  MOVWF  FE9
06192:  MOVFF  FF2,63E
06196:  BCF    FF2.7
06198:  MOVLW  00
0619A:  MOVLB  0
0619C:  CALL   0A70
061A0:  TBLRD*-
061A2:  TBLRD*+
061A4:  MOVF   FF5,W
061A6:  MOVWF  FEE
061A8:  IORLW  00
061AA:  BNZ   61A2
061AC:  MOVLB  6
061AE:  BTFSC  x3E.7
061B0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
061B2:  MOVLW  06
061B4:  MOVWF  x47
061B6:  MOVLW  1E
061B8:  MOVWF  x46
061BA:  CLRF   x48
061BC:  CLRF   x49
061BE:  MOVLW  01
061C0:  MOVWF  x4A
061C2:  MOVLW  02
061C4:  MOVWF  x4B
061C6:  MOVLB  0
061C8:  CALL   24AC
....................           
....................          if(unidad==4) 
061CC:  MOVLB  5
061CE:  MOVF   x99,W
061D0:  SUBLW  04
061D2:  BNZ   61F2
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
061D4:  MOVFF  5C5,63F
061D8:  MOVLW  14
061DA:  MOVLB  6
061DC:  MOVWF  x40
061DE:  MOVLW  28
061E0:  MOVWF  x41
061E2:  MOVLW  01
061E4:  MOVWF  x42
061E6:  MOVLW  02
061E8:  MOVWF  x43
061EA:  MOVLB  0
061EC:  CALL   3F9C
....................          else 
061F0:  BRA    620C
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
061F2:  MOVFF  5C5,63F
061F6:  MOVLW  14
061F8:  MOVLB  6
061FA:  MOVWF  x40
061FC:  MOVLW  28
061FE:  MOVWF  x41
06200:  CLRF   x42
06202:  MOVLW  02
06204:  MOVWF  x43
06206:  MOVLB  0
06208:  CALL   3F9C
....................           
....................          if(unidad==3) 
0620C:  MOVLB  5
0620E:  MOVF   x99,W
06210:  SUBLW  03
06212:  BNZ   6230
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
06214:  MOVFF  5C4,63F
06218:  MOVLW  28
0621A:  MOVLB  6
0621C:  MOVWF  x40
0621E:  MOVWF  x41
06220:  MOVLW  01
06222:  MOVWF  x42
06224:  MOVLW  02
06226:  MOVWF  x43
06228:  MOVLB  0
0622A:  CALL   3F9C
....................          else 
0622E:  BRA    6248
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
06230:  MOVFF  5C4,63F
06234:  MOVLW  28
06236:  MOVLB  6
06238:  MOVWF  x40
0623A:  MOVWF  x41
0623C:  CLRF   x42
0623E:  MOVLW  02
06240:  MOVWF  x43
06242:  MOVLB  0
06244:  CALL   3F9C
....................           
....................          if(unidad==2) 
06248:  MOVLB  5
0624A:  MOVF   x99,W
0624C:  SUBLW  02
0624E:  BNZ   626E
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
06250:  MOVFF  5C3,63F
06254:  MOVLW  46
06256:  MOVLB  6
06258:  MOVWF  x40
0625A:  MOVLW  28
0625C:  MOVWF  x41
0625E:  MOVLW  01
06260:  MOVWF  x42
06262:  MOVLW  02
06264:  MOVWF  x43
06266:  MOVLB  0
06268:  CALL   3F9C
....................          else 
0626C:  BRA    6288
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
0626E:  MOVFF  5C3,63F
06272:  MOVLW  46
06274:  MOVLB  6
06276:  MOVWF  x40
06278:  MOVLW  28
0627A:  MOVWF  x41
0627C:  CLRF   x42
0627E:  MOVLW  02
06280:  MOVWF  x43
06282:  MOVLB  0
06284:  CALL   3F9C
....................           
....................          if(unidad==1) 
06288:  MOVLB  5
0628A:  DECFSZ x99,W
0628C:  BRA    62AC
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
0628E:  MOVFF  5C2,63F
06292:  MOVLW  5A
06294:  MOVLB  6
06296:  MOVWF  x40
06298:  MOVLW  28
0629A:  MOVWF  x41
0629C:  MOVLW  01
0629E:  MOVWF  x42
062A0:  MOVLW  02
062A2:  MOVWF  x43
062A4:  MOVLB  0
062A6:  CALL   3F9C
....................          else 
062AA:  BRA    62C6
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
062AC:  MOVFF  5C2,63F
062B0:  MOVLW  5A
062B2:  MOVLB  6
062B4:  MOVWF  x40
062B6:  MOVLW  28
062B8:  MOVWF  x41
062BA:  CLRF   x42
062BC:  MOVLW  02
062BE:  MOVWF  x43
062C0:  MOVLB  0
062C2:  CALL   3F9C
....................           
....................          strcpy(Menus.Letra,":"); 
062C6:  MOVLW  06
062C8:  MOVWF  FEA
062CA:  MOVLW  1E
062CC:  MOVWF  FE9
062CE:  MOVFF  FF2,63E
062D2:  BCF    FF2.7
062D4:  MOVLW  00
062D6:  CALL   0A98
062DA:  TBLRD*-
062DC:  TBLRD*+
062DE:  MOVF   FF5,W
062E0:  MOVWF  FEE
062E2:  IORLW  00
062E4:  BNZ   62DC
062E6:  MOVLB  6
062E8:  BTFSC  x3E.7
062EA:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);            
062EC:  MOVLW  06
062EE:  MOVWF  x47
062F0:  MOVLW  1E
062F2:  MOVWF  x46
062F4:  MOVLW  3C
062F6:  MOVWF  x48
062F8:  MOVLW  2A
062FA:  MOVWF  x49
062FC:  MOVLW  02
062FE:  MOVWF  x4A
06300:  MOVWF  x4B
06302:  MOVLB  0
06304:  CALL   24AC
....................        
....................          if(UP)//Si oprime hacia arriba 
06308:  BSF    F92.5
0630A:  BTFSC  F80.5
0630C:  BRA    634E
....................          {   
....................             if(Testerilizacionp[unidad-1]<9) 
0630E:  MOVLW  01
06310:  MOVLB  5
06312:  SUBWF  x99,W
06314:  CLRF   03
06316:  ADDLW  C2
06318:  MOVWF  FE9
0631A:  MOVLW  05
0631C:  ADDWFC 03,W
0631E:  MOVWF  FEA
06320:  BTFSC  FEF.7
06322:  BRA    632A
06324:  MOVF   FEF,W
06326:  SUBLW  08
06328:  BNC   634C
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]++;visual=1; 
0632A:  MOVLW  1E
0632C:  MOVLB  6
0632E:  MOVWF  x47
06330:  MOVLB  0
06332:  CALL   0E5A
06336:  MOVLW  01
06338:  MOVLB  5
0633A:  SUBWF  x99,W
0633C:  CLRF   03
0633E:  ADDLW  C2
06340:  MOVWF  FE9
06342:  MOVLW  05
06344:  ADDWFC 03,W
06346:  MOVWF  FEA
06348:  INCF   FEF,F
0634A:  BSF    x87.7
0634C:  MOVLB  0
....................             } 
....................              
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
0634E:  BSF    F96.0
06350:  BTFSC  F84.0
06352:  BRA    6394
....................          {   
....................             if(Testerilizacionp[unidad-1]>0) 
06354:  MOVLW  01
06356:  MOVLB  5
06358:  SUBWF  x99,W
0635A:  CLRF   03
0635C:  ADDLW  C2
0635E:  MOVWF  FE9
06360:  MOVLW  05
06362:  ADDWFC 03,W
06364:  MOVWF  FEA
06366:  BTFSC  FEF.7
06368:  BRA    6392
0636A:  MOVF   FEF,W
0636C:  SUBLW  00
0636E:  BC    6392
....................             { 
....................                delay_ms(30);Testerilizacionp[unidad-1]--;visual=1;      
06370:  MOVLW  1E
06372:  MOVLB  6
06374:  MOVWF  x47
06376:  MOVLB  0
06378:  CALL   0E5A
0637C:  MOVLW  01
0637E:  MOVLB  5
06380:  SUBWF  x99,W
06382:  CLRF   03
06384:  ADDLW  C2
06386:  MOVWF  FE9
06388:  MOVLW  05
0638A:  ADDWFC 03,W
0638C:  MOVWF  FEA
0638E:  DECF   FEF,F
06390:  BSF    x87.7
06392:  MOVLB  0
....................             } 
....................              
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
06394:  BSF    F96.1
06396:  BTFSC  F84.1
06398:  BRA    63AE
....................          {   
....................             delay_ms(30);unidad--;visual=1; 
0639A:  MOVLW  1E
0639C:  MOVLB  6
0639E:  MOVWF  x47
063A0:  MOVLB  0
063A2:  CALL   0E5A
063A6:  MOVLB  5
063A8:  DECF   x99,F
063AA:  BSF    x87.7
063AC:  MOVLB  0
....................              
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
063AE:  BSF    F96.2
063B0:  BTFSC  F84.2
063B2:  BRA    64DE
....................          { 
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
063B4:  MOVLW  04
063B6:  MOVLB  6
063B8:  MOVWF  x3E
063BA:  MOVLW  AF
063BC:  MOVWF  x47
063BE:  MOVLB  0
063C0:  CALL   0E5A
063C4:  MOVLB  6
063C6:  DECFSZ x3E,F
063C8:  BRA    63BA
063CA:  MOVLW  01
063CC:  MOVLB  5
063CE:  MOVWF  x98
063D0:  MOVLB  6
063D2:  CLRF   x46
063D4:  MOVLB  0
063D6:  CALL   1E7E
063DA:  MOVLW  01
063DC:  MOVLB  5
063DE:  MOVWF  x9D
063E0:  BSF    x87.7
....................             write_eeprom(0,Testerilizacionp[0]); 
063E2:  CLRF   FAA
063E4:  CLRF   FA9
063E6:  MOVFF  5C2,FA8
063EA:  BCF    FA6.6
063EC:  BCF    FA6.7
063EE:  BSF    FA6.2
063F0:  MOVF   FF2,W
063F2:  MOVWF  00
063F4:  BCF    FF2.7
063F6:  MOVLB  F
063F8:  MOVLW  55
063FA:  MOVWF  FA7
063FC:  MOVLW  AA
063FE:  MOVWF  FA7
06400:  BSF    FA6.1
06402:  BTFSC  FA6.1
06404:  BRA    6402
06406:  BCF    FA6.2
06408:  MOVF   00,W
0640A:  IORWF  FF2,F
....................             delay_ms(50);    
0640C:  MOVLW  32
0640E:  MOVLB  6
06410:  MOVWF  x47
06412:  MOVLB  0
06414:  CALL   0E5A
....................             write_eeprom(1,Testerilizacionp[1]); 
06418:  CLRF   FAA
0641A:  MOVLW  01
0641C:  MOVWF  FA9
0641E:  MOVFF  5C3,FA8
06422:  BCF    FA6.6
06424:  BCF    FA6.7
06426:  BSF    FA6.2
06428:  MOVF   FF2,W
0642A:  MOVWF  00
0642C:  BCF    FF2.7
0642E:  MOVLB  F
06430:  MOVLW  55
06432:  MOVWF  FA7
06434:  MOVLW  AA
06436:  MOVWF  FA7
06438:  BSF    FA6.1
0643A:  BTFSC  FA6.1
0643C:  BRA    643A
0643E:  BCF    FA6.2
06440:  MOVF   00,W
06442:  IORWF  FF2,F
....................             delay_ms(50);    
06444:  MOVLW  32
06446:  MOVLB  6
06448:  MOVWF  x47
0644A:  MOVLB  0
0644C:  CALL   0E5A
....................             write_eeprom(2,Testerilizacionp[2]); 
06450:  CLRF   FAA
06452:  MOVLW  02
06454:  MOVWF  FA9
06456:  MOVFF  5C4,FA8
0645A:  BCF    FA6.6
0645C:  BCF    FA6.7
0645E:  BSF    FA6.2
06460:  MOVF   FF2,W
06462:  MOVWF  00
06464:  BCF    FF2.7
06466:  MOVLB  F
06468:  MOVLW  55
0646A:  MOVWF  FA7
0646C:  MOVLW  AA
0646E:  MOVWF  FA7
06470:  BSF    FA6.1
06472:  BTFSC  FA6.1
06474:  BRA    6472
06476:  BCF    FA6.2
06478:  MOVF   00,W
0647A:  IORWF  FF2,F
....................             delay_ms(50);    
0647C:  MOVLW  32
0647E:  MOVLB  6
06480:  MOVWF  x47
06482:  MOVLB  0
06484:  CALL   0E5A
....................             write_eeprom(3,Testerilizacionp[3]); 
06488:  CLRF   FAA
0648A:  MOVLW  03
0648C:  MOVWF  FA9
0648E:  MOVFF  5C5,FA8
06492:  BCF    FA6.6
06494:  BCF    FA6.7
06496:  BSF    FA6.2
06498:  MOVF   FF2,W
0649A:  MOVWF  00
0649C:  BCF    FF2.7
0649E:  MOVLB  F
064A0:  MOVLW  55
064A2:  MOVWF  FA7
064A4:  MOVLW  AA
064A6:  MOVWF  FA7
064A8:  BSF    FA6.1
064AA:  BTFSC  FA6.1
064AC:  BRA    64AA
064AE:  BCF    FA6.2
064B0:  MOVF   00,W
064B2:  IORWF  FF2,F
....................             delay_ms(50);    
064B4:  MOVLW  32
064B6:  MOVLB  6
064B8:  MOVWF  x47
064BA:  MOVLB  0
064BC:  CALL   0E5A
....................             MensajeAlmacenado(); 
064C0:  CALL   2C14
....................             if((Testerilizacionp[0]==0)&&(Testerilizacionp[1]==0)&&(Testerilizacionp[2]==0)&&(Testerilizacionp[3]==0)) 
064C4:  MOVLB  5
064C6:  MOVF   xC2,F
064C8:  BNZ   64DA
064CA:  MOVF   xC3,F
064CC:  BNZ   64DA
064CE:  MOVF   xC4,F
064D0:  BNZ   64DA
064D2:  MOVF   xC5,F
064D4:  BNZ   64DA
....................                Infinito=1; 
064D6:  BSF    x87.4
....................             else 
064D8:  BRA    64DC
....................                Infinito=0; 
064DA:  BCF    x87.4
064DC:  MOVLB  0
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................     if(Menu==7){ // Menu de Cambio de Contraseña 
064DE:  MOVLB  5
064E0:  MOVF   x98,W
064E2:  SUBLW  07
064E4:  BNZ   650E
....................        PidePassword(1,7,91,Password[0],Password[1],Password[2],Password[3],0); 
064E6:  MOVLW  01
064E8:  MOVLB  6
064EA:  MOVWF  x3E
064EC:  MOVLW  07
064EE:  MOVWF  x3F
064F0:  MOVLW  5B
064F2:  MOVWF  x40
064F4:  MOVFF  5CA,641
064F8:  MOVFF  5CB,642
064FC:  MOVFF  5CC,643
06500:  MOVFF  5CD,644
06504:  CLRF   x45
06506:  MOVLB  0
06508:  CALL   2CBA
0650C:  MOVLB  5
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................     if(Menu==91){ // Menu de Cambio de Contraseña 
0650E:  MOVF   x98,W
06510:  SUBLW  5B
06512:  BNZ   653C
....................        PidePassword(1,91,91,Password[0],Password[1],Password[2],Password[3],1); 
06514:  MOVLW  01
06516:  MOVLB  6
06518:  MOVWF  x3E
0651A:  MOVLW  5B
0651C:  MOVWF  x3F
0651E:  MOVWF  x40
06520:  MOVFF  5CA,641
06524:  MOVFF  5CB,642
06528:  MOVFF  5CC,643
0652C:  MOVFF  5CD,644
06530:  MOVLW  01
06532:  MOVWF  x45
06534:  MOVLB  0
06536:  CALL   2CBA
0653A:  MOVLB  5
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==20){ //Menu de Funcionamiento 
0653C:  MOVF   x98,W
0653E:  SUBLW  14
06540:  BTFSS  FD8.2
06542:  GOTO   732E
....................        
....................       // Muestra imagen de fondo en Display GLCD 
....................       glcd_imagen(5); 
06546:  MOVLW  05
06548:  MOVLB  6
0654A:  MOVWF  x3E
0654C:  MOVLB  0
0654E:  GOTO   4162
....................  
....................       if(UP && DOWN)//Si oprime hacia abajo 
06552:  BSF    F92.5
06554:  BTFSC  F80.5
06556:  BRA    6570
06558:  BSF    F96.0
0655A:  BTFSC  F84.0
0655C:  BRA    6570
....................       { 
....................          glcd_init(ON);flag_display=!flag_display;          
0655E:  MOVLW  01
06560:  MOVLB  6
06562:  MOVWF  x3E
06564:  MOVLB  0
06566:  CALL   1F90
0656A:  MOVLB  5
0656C:  BTG    x94.6
0656E:  MOVLB  0
....................       } 
....................  
....................       if(!TERM && !DOOR && !Finalizo){ 
06570:  BSF    F92.4
06572:  BTFSC  F80.4
06574:  BRA    6A28
06576:  BSF    F92.3
06578:  BTFSC  F80.3
0657A:  BRA    6A28
0657C:  MOVLB  5
0657E:  BTFSS  x87.5
06580:  BRA    6586
06582:  MOVLB  0
06584:  BRA    6A28
....................          if(Enfria==1){       
06586:  DECFSZ x91,W
06588:  BRA    67F6
....................             if(Temperatura<=Setpoint+0.5 && Temperatura>=Setpoint-0.5){ 
0658A:  BCF    FD8.1
0658C:  MOVFF  60D,646
06590:  MOVFF  60C,645
06594:  MOVFF  60B,644
06598:  MOVFF  60A,643
0659C:  MOVLB  6
0659E:  CLRF   x4A
065A0:  CLRF   x49
065A2:  CLRF   x48
065A4:  MOVLW  7E
065A6:  MOVWF  x47
065A8:  MOVLB  0
065AA:  CALL   1038
065AE:  MOVFF  601,641
065B2:  MOVFF  600,640
065B6:  MOVFF  5FF,63F
065BA:  MOVFF  5FE,63E
065BE:  MOVFF  03,645
065C2:  MOVFF  02,644
065C6:  MOVFF  01,643
065CA:  MOVFF  00,642
065CE:  CALL   1802
065D2:  BC    65D6
065D4:  BNZ   669C
065D6:  BSF    FD8.1
065D8:  MOVFF  60D,646
065DC:  MOVFF  60C,645
065E0:  MOVFF  60B,644
065E4:  MOVFF  60A,643
065E8:  MOVLB  6
065EA:  CLRF   x4A
065EC:  CLRF   x49
065EE:  CLRF   x48
065F0:  MOVLW  7E
065F2:  MOVWF  x47
065F4:  MOVLB  0
065F6:  CALL   1038
065FA:  MOVFF  03,641
065FE:  MOVFF  02,640
06602:  MOVFF  01,63F
06606:  MOVFF  00,63E
0660A:  MOVFF  601,645
0660E:  MOVFF  600,644
06612:  MOVFF  5FF,643
06616:  MOVFF  5FE,642
0661A:  CALL   1802
0661E:  BC    6622
06620:  BNZ   669C
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
06622:  MOVLB  6
06624:  CLRF   x57
06626:  MOVLW  37
06628:  MOVWF  x58
0662A:  MOVLW  7F
0662C:  MOVWF  x59
0662E:  MOVLW  3F
06630:  MOVWF  x5A
06632:  MOVLW  01
06634:  MOVWF  x5B
06636:  CLRF   x5C
06638:  MOVLB  0
0663A:  CALL   23EA
....................                strcpy(Menus.Letra,"Status:Controlando"); 
0663E:  MOVLW  06
06640:  MOVWF  FEA
06642:  MOVLW  1E
06644:  MOVWF  FE9
06646:  MOVFF  FF2,63E
0664A:  BCF    FF2.7
0664C:  MOVLW  00
0664E:  CALL   0AB8
06652:  TBLRD*-
06654:  TBLRD*+
06656:  MOVF   FF5,W
06658:  MOVWF  FEE
0665A:  IORLW  00
0665C:  BNZ   6654
0665E:  MOVLB  6
06660:  BTFSC  x3E.7
06662:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
06664:  MOVLW  06
06666:  MOVWF  x47
06668:  MOVLW  1E
0666A:  MOVWF  x46
0666C:  CLRF   x48
0666E:  MOVLW  37
06670:  MOVWF  x49
06672:  MOVLW  02
06674:  MOVWF  x4A
06676:  MOVLW  01
06678:  MOVWF  x4B
0667A:  MOVLB  0
0667C:  CALL   24AC
....................                if(!Infinito) 
06680:  MOVLB  5
06682:  BTFSC  x87.4
06684:  BRA    668C
....................                   tiempo_esterilizacion=1; 
06686:  MOVLW  01
06688:  MOVWF  x9E
....................                else 
0668A:  BRA    668E
....................                   tiempo_esterilizacion=0; 
0668C:  CLRF   x9E
....................                Controla(); 
0668E:  MOVLB  0
06690:  CALL   4282
....................                flag_tiempocalentamiento=0; 
06694:  MOVLB  5
06696:  BCF    x94.5
....................             }else if(Temperatura<Setpoint-0.5){ 
06698:  BRA    67F4
0669A:  MOVLB  0
0669C:  BSF    FD8.1
0669E:  MOVFF  60D,646
066A2:  MOVFF  60C,645
066A6:  MOVFF  60B,644
066AA:  MOVFF  60A,643
066AE:  MOVLB  6
066B0:  CLRF   x4A
066B2:  CLRF   x49
066B4:  CLRF   x48
066B6:  MOVLW  7E
066B8:  MOVWF  x47
066BA:  MOVLB  0
066BC:  CALL   1038
066C0:  MOVFF  601,641
066C4:  MOVFF  600,640
066C8:  MOVFF  5FF,63F
066CC:  MOVFF  5FE,63E
066D0:  MOVFF  03,645
066D4:  MOVFF  02,644
066D8:  MOVFF  01,643
066DC:  MOVFF  00,642
066E0:  CALL   1802
066E4:  BNC   6786
....................                Enfria=0; 
066E6:  MOVLB  5
066E8:  CLRF   x91
....................                Ganancia=GananciaR*(Setpoint/44.5); 
066EA:  MOVFF  60D,642
066EE:  MOVFF  60C,641
066F2:  MOVFF  60B,640
066F6:  MOVFF  60A,63F
066FA:  MOVLB  6
066FC:  CLRF   x46
066FE:  CLRF   x45
06700:  MOVLW  32
06702:  MOVWF  x44
06704:  MOVLW  84
06706:  MOVWF  x43
06708:  MOVLB  0
0670A:  CALL   0EDA
0670E:  MOVFF  5F1,661
06712:  MOVFF  5F0,660
06716:  MOVFF  5EF,65F
0671A:  MOVFF  5EE,65E
0671E:  MOVFF  03,665
06722:  MOVFF  02,664
06726:  MOVFF  01,663
0672A:  MOVFF  00,662
0672E:  CALL   2600
06732:  MOVFF  03,5ED
06736:  MOVFF  02,5EC
0673A:  MOVFF  01,5EB
0673E:  MOVFF  00,5EA
....................                Gananciamax=(0.21)*Setpoint; 
06742:  MOVLW  3D
06744:  MOVLB  6
06746:  MOVWF  x61
06748:  MOVLW  0A
0674A:  MOVWF  x60
0674C:  MOVLW  57
0674E:  MOVWF  x5F
06750:  MOVLW  7C
06752:  MOVWF  x5E
06754:  MOVFF  60D,665
06758:  MOVFF  60C,664
0675C:  MOVFF  60B,663
06760:  MOVFF  60A,662
06764:  MOVLB  0
06766:  CALL   2600
0676A:  MOVFF  03,5BD
0676E:  MOVFF  02,5BC
06772:  MOVFF  01,5BB
06776:  MOVFF  00,5BA
....................                SSR_off; 
0677A:  BCF    F8B.2
0677C:  BCF    F94.2
....................                Controlando=0; 
0677E:  MOVLB  5
06780:  CLRF   x92
....................             }else{ 
06782:  BRA    67F4
06784:  MOVLB  0
....................                flag_tiempocalentamiento=0; 
06786:  MOVLB  5
06788:  BCF    x94.5
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
0678A:  MOVLB  6
0678C:  CLRF   x57
0678E:  MOVLW  37
06790:  MOVWF  x58
06792:  MOVLW  7F
06794:  MOVWF  x59
06796:  MOVLW  3F
06798:  MOVWF  x5A
0679A:  MOVLW  01
0679C:  MOVWF  x5B
0679E:  CLRF   x5C
067A0:  MOVLB  0
067A2:  CALL   23EA
....................                strcpy(Menus.Letra,"Status:Enfriando"); 
067A6:  MOVLW  06
067A8:  MOVWF  FEA
067AA:  MOVLW  1E
067AC:  MOVWF  FE9
067AE:  MOVFF  FF2,63E
067B2:  BCF    FF2.7
067B4:  MOVLW  00
067B6:  CALL   0AEA
067BA:  TBLRD*-
067BC:  TBLRD*+
067BE:  MOVF   FF5,W
067C0:  MOVWF  FEE
067C2:  IORLW  00
067C4:  BNZ   67BC
067C6:  MOVLB  6
067C8:  BTFSC  x3E.7
067CA:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
067CC:  MOVLW  06
067CE:  MOVWF  x47
067D0:  MOVLW  1E
067D2:  MOVWF  x46
067D4:  CLRF   x48
067D6:  MOVLW  37
067D8:  MOVWF  x49
067DA:  MOVLW  02
067DC:  MOVWF  x4A
067DE:  MOVLW  01
067E0:  MOVWF  x4B
067E2:  MOVLB  0
067E4:  CALL   24AC
....................                tiempo_esterilizacion=0; 
067E8:  MOVLB  5
067EA:  CLRF   x9E
....................                Controla(); 
067EC:  MOVLB  0
067EE:  CALL   4282
067F2:  MOVLB  5
....................             } 
....................          }else{   
067F4:  BRA    6A2A
....................             if(Temperatura>=Setpoint-0.5 && Temperatura<=Setpoint+0.5){ 
067F6:  BSF    FD8.1
067F8:  MOVFF  60D,646
067FC:  MOVFF  60C,645
06800:  MOVFF  60B,644
06804:  MOVFF  60A,643
06808:  MOVLB  6
0680A:  CLRF   x4A
0680C:  CLRF   x49
0680E:  CLRF   x48
06810:  MOVLW  7E
06812:  MOVWF  x47
06814:  MOVLB  0
06816:  CALL   1038
0681A:  MOVFF  03,641
0681E:  MOVFF  02,640
06822:  MOVFF  01,63F
06826:  MOVFF  00,63E
0682A:  MOVFF  601,645
0682E:  MOVFF  600,644
06832:  MOVFF  5FF,643
06836:  MOVFF  5FE,642
0683A:  CALL   1802
0683E:  BC    6842
06840:  BNZ   6908
06842:  BCF    FD8.1
06844:  MOVFF  60D,646
06848:  MOVFF  60C,645
0684C:  MOVFF  60B,644
06850:  MOVFF  60A,643
06854:  MOVLB  6
06856:  CLRF   x4A
06858:  CLRF   x49
0685A:  CLRF   x48
0685C:  MOVLW  7E
0685E:  MOVWF  x47
06860:  MOVLB  0
06862:  CALL   1038
06866:  MOVFF  601,641
0686A:  MOVFF  600,640
0686E:  MOVFF  5FF,63F
06872:  MOVFF  5FE,63E
06876:  MOVFF  03,645
0687A:  MOVFF  02,644
0687E:  MOVFF  01,643
06882:  MOVFF  00,642
06886:  CALL   1802
0688A:  BC    688E
0688C:  BNZ   6908
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
0688E:  MOVLB  6
06890:  CLRF   x57
06892:  MOVLW  37
06894:  MOVWF  x58
06896:  MOVLW  7F
06898:  MOVWF  x59
0689A:  MOVLW  3F
0689C:  MOVWF  x5A
0689E:  MOVLW  01
068A0:  MOVWF  x5B
068A2:  CLRF   x5C
068A4:  MOVLB  0
068A6:  CALL   23EA
....................                strcpy(Menus.Letra,"Status:Controlando"); 
068AA:  MOVLW  06
068AC:  MOVWF  FEA
068AE:  MOVLW  1E
068B0:  MOVWF  FE9
068B2:  MOVFF  FF2,63E
068B6:  BCF    FF2.7
068B8:  MOVLW  00
068BA:  CALL   0AB8
068BE:  TBLRD*-
068C0:  TBLRD*+
068C2:  MOVF   FF5,W
068C4:  MOVWF  FEE
068C6:  IORLW  00
068C8:  BNZ   68C0
068CA:  MOVLB  6
068CC:  BTFSC  x3E.7
068CE:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
068D0:  MOVLW  06
068D2:  MOVWF  x47
068D4:  MOVLW  1E
068D6:  MOVWF  x46
068D8:  CLRF   x48
068DA:  MOVLW  37
068DC:  MOVWF  x49
068DE:  MOVLW  02
068E0:  MOVWF  x4A
068E2:  MOVLW  01
068E4:  MOVWF  x4B
068E6:  MOVLB  0
068E8:  CALL   24AC
....................                if(!Infinito) 
068EC:  MOVLB  5
068EE:  BTFSC  x87.4
068F0:  BRA    68F8
....................                   tiempo_esterilizacion=1; 
068F2:  MOVLW  01
068F4:  MOVWF  x9E
....................                else 
068F6:  BRA    68FA
....................                   tiempo_esterilizacion=0;    
068F8:  CLRF   x9E
....................                Controla(); 
068FA:  MOVLB  0
068FC:  CALL   4282
....................                flag_tiempocalentamiento=0; 
06900:  MOVLB  5
06902:  BCF    x94.5
....................             }else if(Temperatura>Setpoint+0.5){ 
06904:  BRA    6A2A
06906:  MOVLB  0
06908:  BCF    FD8.1
0690A:  MOVFF  60D,646
0690E:  MOVFF  60C,645
06912:  MOVFF  60B,644
06916:  MOVFF  60A,643
0691A:  MOVLB  6
0691C:  CLRF   x4A
0691E:  CLRF   x49
06920:  CLRF   x48
06922:  MOVLW  7E
06924:  MOVWF  x47
06926:  MOVLB  0
06928:  CALL   1038
0692C:  MOVFF  03,641
06930:  MOVFF  02,640
06934:  MOVFF  01,63F
06938:  MOVFF  00,63E
0693C:  MOVFF  601,645
06940:  MOVFF  600,644
06944:  MOVFF  5FF,643
06948:  MOVFF  5FE,642
0694C:  CALL   1802
06950:  BNC   69BC
....................                Enfria=1; 
06952:  MOVLW  01
06954:  MOVLB  5
06956:  MOVWF  x91
....................                Ganancia=GananciaR*(Setpoint/44.5); 
06958:  MOVFF  60D,642
0695C:  MOVFF  60C,641
06960:  MOVFF  60B,640
06964:  MOVFF  60A,63F
06968:  MOVLB  6
0696A:  CLRF   x46
0696C:  CLRF   x45
0696E:  MOVLW  32
06970:  MOVWF  x44
06972:  MOVLW  84
06974:  MOVWF  x43
06976:  MOVLB  0
06978:  CALL   0EDA
0697C:  MOVFF  5F1,661
06980:  MOVFF  5F0,660
06984:  MOVFF  5EF,65F
06988:  MOVFF  5EE,65E
0698C:  MOVFF  03,665
06990:  MOVFF  02,664
06994:  MOVFF  01,663
06998:  MOVFF  00,662
0699C:  CALL   2600
069A0:  MOVFF  03,5ED
069A4:  MOVFF  02,5EC
069A8:  MOVFF  01,5EB
069AC:  MOVFF  00,5EA
....................                SSR_off; 
069B0:  BCF    F8B.2
069B2:  BCF    F94.2
....................                Controlando=0; 
069B4:  MOVLB  5
069B6:  CLRF   x92
....................             }else{ 
069B8:  BRA    6A2A
069BA:  MOVLB  0
....................                flag_tiempocalentamiento=1; 
069BC:  MOVLB  5
069BE:  BSF    x94.5
....................                glcd_rect(0, 55, 127, 63, YES, OFF); 
069C0:  MOVLB  6
069C2:  CLRF   x57
069C4:  MOVLW  37
069C6:  MOVWF  x58
069C8:  MOVLW  7F
069CA:  MOVWF  x59
069CC:  MOVLW  3F
069CE:  MOVWF  x5A
069D0:  MOVLW  01
069D2:  MOVWF  x5B
069D4:  CLRF   x5C
069D6:  MOVLB  0
069D8:  CALL   23EA
....................                strcpy(Menus.Letra,"Status:Calentando"); 
069DC:  MOVLW  06
069DE:  MOVWF  FEA
069E0:  MOVLW  1E
069E2:  MOVWF  FE9
069E4:  MOVFF  FF2,63E
069E8:  BCF    FF2.7
069EA:  MOVLW  00
069EC:  CALL   0B1A
069F0:  TBLRD*-
069F2:  TBLRD*+
069F4:  MOVF   FF5,W
069F6:  MOVWF  FEE
069F8:  IORLW  00
069FA:  BNZ   69F2
069FC:  MOVLB  6
069FE:  BTFSC  x3E.7
06A00:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,55,2,1); 
06A02:  MOVLW  06
06A04:  MOVWF  x47
06A06:  MOVLW  1E
06A08:  MOVWF  x46
06A0A:  CLRF   x48
06A0C:  MOVLW  37
06A0E:  MOVWF  x49
06A10:  MOVLW  02
06A12:  MOVWF  x4A
06A14:  MOVLW  01
06A16:  MOVWF  x4B
06A18:  MOVLB  0
06A1A:  CALL   24AC
....................                tiempo_esterilizacion=0; 
06A1E:  MOVLB  5
06A20:  CLRF   x9E
....................                Controla(); 
06A22:  MOVLB  0
06A24:  CALL   4282
06A28:  MOVLB  5
....................             } 
....................          } 
....................       } 
....................        
....................       if(DOOR){ 
06A2A:  BSF    F92.3
06A2C:  BTFSS  F80.3
06A2E:  BRA    6B04
....................          Controlando=0; 
06A30:  CLRF   x92
....................          flag_tiempocalentamiento=0; 
06A32:  BCF    x94.5
....................          Ganancia=GananciaR*(Setpoint/44.5); 
06A34:  MOVFF  60D,642
06A38:  MOVFF  60C,641
06A3C:  MOVFF  60B,640
06A40:  MOVFF  60A,63F
06A44:  MOVLB  6
06A46:  CLRF   x46
06A48:  CLRF   x45
06A4A:  MOVLW  32
06A4C:  MOVWF  x44
06A4E:  MOVLW  84
06A50:  MOVWF  x43
06A52:  MOVLB  0
06A54:  CALL   0EDA
06A58:  MOVFF  5F1,661
06A5C:  MOVFF  5F0,660
06A60:  MOVFF  5EF,65F
06A64:  MOVFF  5EE,65E
06A68:  MOVFF  03,665
06A6C:  MOVFF  02,664
06A70:  MOVFF  01,663
06A74:  MOVFF  00,662
06A78:  CALL   2600
06A7C:  MOVFF  03,5ED
06A80:  MOVFF  02,5EC
06A84:  MOVFF  01,5EB
06A88:  MOVFF  00,5EA
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
06A8C:  MOVLB  6
06A8E:  CLRF   x57
06A90:  MOVLW  37
06A92:  MOVWF  x58
06A94:  MOVLW  7F
06A96:  MOVWF  x59
06A98:  MOVLW  3F
06A9A:  MOVWF  x5A
06A9C:  MOVLW  01
06A9E:  MOVWF  x5B
06AA0:  CLRF   x5C
06AA2:  MOVLB  0
06AA4:  CALL   23EA
....................          tiempo_esterilizacion=0; 
06AA8:  MOVLB  5
06AAA:  CLRF   x9E
....................          SSR_off; 
06AAC:  BCF    F8B.2
06AAE:  BCF    F94.2
....................          Tpulso=0.0; 
06AB0:  CLRF   xD9
06AB2:  CLRF   xD8
06AB4:  CLRF   xD7
06AB6:  CLRF   xD6
....................          flag_clear2=1; 
06AB8:  BSF    x94.3
....................          flag_ganancia=0; 
06ABA:  CLRF   x8E
....................          strcpy(Menus.Letra,"Status:Puerta Abierta"); 
06ABC:  MOVLW  06
06ABE:  MOVWF  FEA
06AC0:  MOVLW  1E
06AC2:  MOVWF  FE9
06AC4:  MOVFF  FF2,63E
06AC8:  BCF    FF2.7
06ACA:  MOVLW  00
06ACC:  MOVLB  0
06ACE:  CALL   0B4A
06AD2:  TBLRD*-
06AD4:  TBLRD*+
06AD6:  MOVF   FF5,W
06AD8:  MOVWF  FEE
06ADA:  IORLW  00
06ADC:  BNZ   6AD4
06ADE:  MOVLB  6
06AE0:  BTFSC  x3E.7
06AE2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
06AE4:  MOVLW  06
06AE6:  MOVWF  x47
06AE8:  MOVLW  1E
06AEA:  MOVWF  x46
06AEC:  CLRF   x48
06AEE:  MOVLW  37
06AF0:  MOVWF  x49
06AF2:  MOVLW  02
06AF4:  MOVWF  x4A
06AF6:  MOVLW  01
06AF8:  MOVWF  x4B
06AFA:  MOVLB  0
06AFC:  CALL   24AC
....................       }else{ 
06B00:  BRA    6B2A
06B02:  MOVLB  5
....................          if(flag_clear2==1){ 
06B04:  BTFSS  x94.3
06B06:  BRA    6B28
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
06B08:  MOVLB  6
06B0A:  CLRF   x57
06B0C:  MOVLW  37
06B0E:  MOVWF  x58
06B10:  MOVLW  7F
06B12:  MOVWF  x59
06B14:  MOVLW  3F
06B16:  MOVWF  x5A
06B18:  MOVLW  01
06B1A:  MOVWF  x5B
06B1C:  CLRF   x5C
06B1E:  MOVLB  0
06B20:  CALL   23EA
....................             flag_clear2=0; 
06B24:  MOVLB  5
06B26:  BCF    x94.3
06B28:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(TERM){ 
06B2A:  BSF    F92.4
06B2C:  BTFSS  F80.4
06B2E:  BRA    6C3C
....................          Controlando=0; 
06B30:  MOVLB  5
06B32:  CLRF   x92
....................          flag_tiempocalentamiento=0; 
06B34:  BCF    x94.5
....................          if(flag_clear3==0){ 
06B36:  BTFSC  x94.4
06B38:  BRA    6B6A
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
06B3A:  MOVLB  6
06B3C:  CLRF   x57
06B3E:  MOVLW  37
06B40:  MOVWF  x58
06B42:  MOVLW  7F
06B44:  MOVWF  x59
06B46:  MOVLW  3F
06B48:  MOVWF  x5A
06B4A:  MOVLW  01
06B4C:  MOVWF  x5B
06B4E:  CLRF   x5C
06B50:  MOVLB  0
06B52:  CALL   23EA
....................             tiempo_esterilizacion=0; 
06B56:  MOVLB  5
06B58:  CLRF   x9E
....................             SSR_off; 
06B5A:  BCF    F8B.2
06B5C:  BCF    F94.2
....................             Tpulso=0.0; 
06B5E:  CLRF   xD9
06B60:  CLRF   xD8
06B62:  CLRF   xD7
06B64:  CLRF   xD6
....................             flag_clear3=1; 
06B66:  BSF    x94.4
....................             flag_ganancia=0; 
06B68:  CLRF   x8E
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 01"); 
06B6A:  MOVLW  06
06B6C:  MOVWF  FEA
06B6E:  MOVLW  1E
06B70:  MOVWF  FE9
06B72:  MOVFF  FF2,63E
06B76:  BCF    FF2.7
06B78:  MOVLW  00
06B7A:  MOVLB  0
06B7C:  CALL   0B7E
06B80:  TBLRD*-
06B82:  TBLRD*+
06B84:  MOVF   FF5,W
06B86:  MOVWF  FEE
06B88:  IORLW  00
06B8A:  BNZ   6B82
06B8C:  MOVLB  6
06B8E:  BTFSC  x3E.7
06B90:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
06B92:  MOVLW  06
06B94:  MOVWF  x47
06B96:  MOVLW  1E
06B98:  MOVWF  x46
06B9A:  CLRF   x48
06B9C:  MOVLW  37
06B9E:  MOVWF  x49
06BA0:  MOVLW  02
06BA2:  MOVWF  x4A
06BA4:  MOVLW  01
06BA6:  MOVWF  x4B
06BA8:  MOVLB  0
06BAA:  CALL   24AC
....................          Ganancia=GananciaR*(Setpoint/44.5); 
06BAE:  MOVFF  60D,642
06BB2:  MOVFF  60C,641
06BB6:  MOVFF  60B,640
06BBA:  MOVFF  60A,63F
06BBE:  MOVLB  6
06BC0:  CLRF   x46
06BC2:  CLRF   x45
06BC4:  MOVLW  32
06BC6:  MOVWF  x44
06BC8:  MOVLW  84
06BCA:  MOVWF  x43
06BCC:  MOVLB  0
06BCE:  CALL   0EDA
06BD2:  MOVFF  5F1,661
06BD6:  MOVFF  5F0,660
06BDA:  MOVFF  5EF,65F
06BDE:  MOVFF  5EE,65E
06BE2:  MOVFF  03,665
06BE6:  MOVFF  02,664
06BEA:  MOVFF  01,663
06BEE:  MOVFF  00,662
06BF2:  CALL   2600
06BF6:  MOVFF  03,5ED
06BFA:  MOVFF  02,5EC
06BFE:  MOVFF  01,5EB
06C02:  MOVFF  00,5EA
....................          Buzzer_on; 
06C06:  BSF    F8A.7
06C08:  BCF    F93.7
....................          delay_ms(1000); 
06C0A:  MOVLW  04
06C0C:  MOVLB  6
06C0E:  MOVWF  x3E
06C10:  MOVLW  FA
06C12:  MOVWF  x47
06C14:  MOVLB  0
06C16:  CALL   0E5A
06C1A:  MOVLB  6
06C1C:  DECFSZ x3E,F
06C1E:  BRA    6C10
....................          Buzzer_off; 
06C20:  BCF    F8A.7
06C22:  BCF    F93.7
....................          delay_ms(1000); 
06C24:  MOVLW  04
06C26:  MOVWF  x3E
06C28:  MOVLW  FA
06C2A:  MOVWF  x47
06C2C:  MOVLB  0
06C2E:  CALL   0E5A
06C32:  MOVLB  6
06C34:  DECFSZ x3E,F
06C36:  BRA    6C28
....................       }else{ 
06C38:  BRA    6C62
06C3A:  MOVLB  0
....................          if(flag_clear3==1){ 
06C3C:  MOVLB  5
06C3E:  BTFSS  x94.4
06C40:  BRA    6C62
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
06C42:  MOVLB  6
06C44:  CLRF   x57
06C46:  MOVLW  37
06C48:  MOVWF  x58
06C4A:  MOVLW  7F
06C4C:  MOVWF  x59
06C4E:  MOVLW  3F
06C50:  MOVWF  x5A
06C52:  MOVLW  01
06C54:  MOVWF  x5B
06C56:  CLRF   x5C
06C58:  MOVLB  0
06C5A:  CALL   23EA
....................             flag_clear3=0; 
06C5E:  MOVLB  5
06C60:  BCF    x94.4
....................          } 
....................       }    
....................          
....................       if(Lectura==1)// Utilizado para visualizar la lectura de la temperatura 
06C62:  MOVLB  5
06C64:  BTFSS  x94.0
06C66:  BRA    71F0
....................       {                    
....................          Lectura=0; 
06C68:  BCF    x94.0
....................          Potencia=(100.0/Tciclo)*Tpulso;  
06C6A:  MOVLB  6
06C6C:  CLRF   x42
06C6E:  CLRF   x41
06C70:  MOVLW  48
06C72:  MOVWF  x40
06C74:  MOVLW  85
06C76:  MOVWF  x3F
06C78:  MOVFF  5D5,646
06C7C:  MOVFF  5D4,645
06C80:  MOVFF  5D3,644
06C84:  MOVFF  5D2,643
06C88:  MOVLB  0
06C8A:  CALL   0EDA
06C8E:  MOVFF  00,63E
06C92:  MOVFF  01,63F
06C96:  MOVFF  02,640
06C9A:  MOVFF  03,641
06C9E:  MOVFF  03,661
06CA2:  MOVFF  02,660
06CA6:  MOVFF  01,65F
06CAA:  MOVFF  00,65E
06CAE:  MOVFF  5D9,665
06CB2:  MOVFF  5D8,664
06CB6:  MOVFF  5D7,663
06CBA:  MOVFF  5D6,662
06CBE:  CALL   2600
06CC2:  MOVFF  03,5B5
06CC6:  MOVFF  02,5B4
06CCA:  MOVFF  01,5B3
06CCE:  MOVFF  00,5B2
....................  //----------------Muestra Temperatura-------------------------- 
....................          if(V0<180 || V0>1000) 
06CD2:  MOVFF  5D1,641
06CD6:  MOVFF  5D0,640
06CDA:  MOVFF  5CF,63F
06CDE:  MOVFF  5CE,63E
06CE2:  MOVLB  6
06CE4:  CLRF   x45
06CE6:  CLRF   x44
06CE8:  MOVLW  34
06CEA:  MOVWF  x43
06CEC:  MOVLW  86
06CEE:  MOVWF  x42
06CF0:  MOVLB  0
06CF2:  CALL   1802
06CF6:  BC    6D1E
06CF8:  MOVLB  6
06CFA:  CLRF   x41
06CFC:  CLRF   x40
06CFE:  MOVLW  7A
06D00:  MOVWF  x3F
06D02:  MOVLW  88
06D04:  MOVWF  x3E
06D06:  MOVFF  5D1,645
06D0A:  MOVFF  5D0,644
06D0E:  MOVFF  5CF,643
06D12:  MOVFF  5CE,642
06D16:  MOVLB  0
06D18:  CALL   1802
06D1C:  BNC   6D86
....................          { 
....................             glcd_rect(15, 29, 69, 45, YES, OFF); 
06D1E:  MOVLW  0F
06D20:  MOVLB  6
06D22:  MOVWF  x57
06D24:  MOVLW  1D
06D26:  MOVWF  x58
06D28:  MOVLW  45
06D2A:  MOVWF  x59
06D2C:  MOVLW  2D
06D2E:  MOVWF  x5A
06D30:  MOVLW  01
06D32:  MOVWF  x5B
06D34:  CLRF   x5C
06D36:  MOVLB  0
06D38:  CALL   23EA
....................             strcpy(Menus.Letra,"-----");displayMenu(Menus.Letra,15,29,2,2); 
06D3C:  MOVLW  06
06D3E:  MOVWF  FEA
06D40:  MOVLW  1E
06D42:  MOVWF  FE9
06D44:  MOVFF  FF2,63E
06D48:  BCF    FF2.7
06D4A:  MOVLW  00
06D4C:  CALL   0BAE
06D50:  TBLRD*-
06D52:  TBLRD*+
06D54:  MOVF   FF5,W
06D56:  MOVWF  FEE
06D58:  IORLW  00
06D5A:  BNZ   6D52
06D5C:  MOVLB  6
06D5E:  BTFSC  x3E.7
06D60:  BSF    FF2.7
06D62:  MOVLW  06
06D64:  MOVWF  x47
06D66:  MOVLW  1E
06D68:  MOVWF  x46
06D6A:  MOVLW  0F
06D6C:  MOVWF  x48
06D6E:  MOVLW  1D
06D70:  MOVWF  x49
06D72:  MOVLW  02
06D74:  MOVWF  x4A
06D76:  MOVWF  x4B
06D78:  MOVLB  0
06D7A:  CALL   24AC
....................             Desconectado=1; 
06D7E:  MOVLB  5
06D80:  BSF    x87.0
....................          } 
....................          else 
06D82:  BRA    6DF4
06D84:  MOVLB  0
....................          { 
....................             if(Desconectado==1) 
06D86:  MOVLB  5
06D88:  BTFSS  x87.0
06D8A:  BRA    6DD0
....................             { 
....................                Desconectado=0; 
06D8C:  BCF    x87.0
....................                delay_ms(2000); 
06D8E:  MOVLW  08
06D90:  MOVLB  6
06D92:  MOVWF  x3E
06D94:  MOVLW  FA
06D96:  MOVWF  x47
06D98:  MOVLB  0
06D9A:  CALL   0E5A
06D9E:  MOVLB  6
06DA0:  DECFSZ x3E,F
06DA2:  BRA    6D94
....................                for(i=0;i<80;i++) 
06DA4:  MOVLB  5
06DA6:  CLRF   x9A
06DA8:  MOVF   x9A,W
06DAA:  SUBLW  4F
06DAC:  BNC   6DD0
....................                { 
....................                   Temperatura=Leer_Sensor(80); 
06DAE:  MOVLW  50
06DB0:  MOVLB  6
06DB2:  MOVWF  x3E
06DB4:  MOVLB  0
06DB6:  CALL   2718
06DBA:  MOVFF  03,601
06DBE:  MOVFF  02,600
06DC2:  MOVFF  01,5FF
06DC6:  MOVFF  00,5FE
....................                } 
06DCA:  MOVLB  5
06DCC:  INCF   x9A,F
06DCE:  BRA    6DA8
....................             } 
....................             displayT(Temperatura,15,29,2); 
06DD0:  MOVFF  601,641
06DD4:  MOVFF  600,640
06DD8:  MOVFF  5FF,63F
06DDC:  MOVFF  5FE,63E
06DE0:  MOVLW  0F
06DE2:  MOVLB  6
06DE4:  MOVWF  x42
06DE6:  MOVLW  1D
06DE8:  MOVWF  x43
06DEA:  MOVLW  02
06DEC:  MOVWF  x44
06DEE:  MOVLB  0
06DF0:  CALL   4B9E
....................          } 
....................          glcd_circle(74,30,2,NO,ON); 
06DF4:  MOVLW  4A
06DF6:  MOVLB  6
06DF8:  MOVWF  x53
06DFA:  MOVLW  1E
06DFC:  MOVWF  x54
06DFE:  MOVLW  02
06E00:  MOVWF  x55
06E02:  CLRF   x56
06E04:  MOVLW  01
06E06:  MOVWF  x57
06E08:  MOVLB  0
06E0A:  CALL   353A
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,75,30,2,2); 
06E0E:  MOVLW  06
06E10:  MOVWF  FEA
06E12:  MOVLW  1E
06E14:  MOVWF  FE9
06E16:  MOVFF  FF2,63E
06E1A:  BCF    FF2.7
06E1C:  MOVLW  00
06E1E:  CALL   06D2
06E22:  TBLRD*-
06E24:  TBLRD*+
06E26:  MOVF   FF5,W
06E28:  MOVWF  FEE
06E2A:  IORLW  00
06E2C:  BNZ   6E24
06E2E:  MOVLB  6
06E30:  BTFSC  x3E.7
06E32:  BSF    FF2.7
06E34:  MOVLW  06
06E36:  MOVWF  x47
06E38:  MOVLW  1E
06E3A:  MOVWF  x46
06E3C:  MOVLW  4B
06E3E:  MOVWF  x48
06E40:  MOVLW  1E
06E42:  MOVWF  x49
06E44:  MOVLW  02
06E46:  MOVWF  x4A
06E48:  MOVWF  x4B
06E4A:  MOVLB  0
06E4C:  CALL   24AC
....................           
....................          displayT(Setpoint,30,45,1); 
06E50:  MOVFF  60D,641
06E54:  MOVFF  60C,640
06E58:  MOVFF  60B,63F
06E5C:  MOVFF  60A,63E
06E60:  MOVLW  1E
06E62:  MOVLB  6
06E64:  MOVWF  x42
06E66:  MOVLW  2D
06E68:  MOVWF  x43
06E6A:  MOVLW  01
06E6C:  MOVWF  x44
06E6E:  MOVLB  0
06E70:  CALL   4B9E
....................          glcd_circle(55,47,1,NO,ON); 
06E74:  MOVLW  37
06E76:  MOVLB  6
06E78:  MOVWF  x53
06E7A:  MOVLW  2F
06E7C:  MOVWF  x54
06E7E:  MOVLW  01
06E80:  MOVWF  x55
06E82:  CLRF   x56
06E84:  MOVWF  x57
06E86:  MOVLB  0
06E88:  CALL   353A
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,58,45,2,1); 
06E8C:  MOVLW  06
06E8E:  MOVWF  FEA
06E90:  MOVLW  1E
06E92:  MOVWF  FE9
06E94:  MOVFF  FF2,63E
06E98:  BCF    FF2.7
06E9A:  MOVLW  00
06E9C:  CALL   06D2
06EA0:  TBLRD*-
06EA2:  TBLRD*+
06EA4:  MOVF   FF5,W
06EA6:  MOVWF  FEE
06EA8:  IORLW  00
06EAA:  BNZ   6EA2
06EAC:  MOVLB  6
06EAE:  BTFSC  x3E.7
06EB0:  BSF    FF2.7
06EB2:  MOVLW  06
06EB4:  MOVWF  x47
06EB6:  MOVLW  1E
06EB8:  MOVWF  x46
06EBA:  MOVLW  3A
06EBC:  MOVWF  x48
06EBE:  MOVLW  2D
06EC0:  MOVWF  x49
06EC2:  MOVLW  02
06EC4:  MOVWF  x4A
06EC6:  MOVLW  01
06EC8:  MOVWF  x4B
06ECA:  MOVLB  0
06ECC:  CALL   24AC
....................          strcpy(Menus.Letra,"Temp:");displayMenu(Menus.Letra,0,45,2,1);  
06ED0:  MOVLW  06
06ED2:  MOVWF  FEA
06ED4:  MOVLW  1E
06ED6:  MOVWF  FE9
06ED8:  MOVFF  FF2,63E
06EDC:  BCF    FF2.7
06EDE:  MOVLW  00
06EE0:  CALL   0BD2
06EE4:  TBLRD*-
06EE6:  TBLRD*+
06EE8:  MOVF   FF5,W
06EEA:  MOVWF  FEE
06EEC:  IORLW  00
06EEE:  BNZ   6EE6
06EF0:  MOVLB  6
06EF2:  BTFSC  x3E.7
06EF4:  BSF    FF2.7
06EF6:  MOVLW  06
06EF8:  MOVWF  x47
06EFA:  MOVLW  1E
06EFC:  MOVWF  x46
06EFE:  CLRF   x48
06F00:  MOVLW  2D
06F02:  MOVWF  x49
06F04:  MOVLW  02
06F06:  MOVWF  x4A
06F08:  MOVLW  01
06F0A:  MOVWF  x4B
06F0C:  MOVLB  0
06F0E:  CALL   24AC
....................           
....................          displayTiempo(Potencia,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
06F12:  MOVFF  5B5,641
06F16:  MOVFF  5B4,640
06F1A:  MOVFF  5B3,63F
06F1E:  MOVFF  5B2,63E
06F22:  CALL   3764
06F26:  MOVFF  01,63E
06F2A:  MOVFF  01,63F
06F2E:  MOVLW  61
06F30:  MOVLB  6
06F32:  MOVWF  x40
06F34:  MOVLW  2A
06F36:  MOVWF  x41
06F38:  MOVLW  03
06F3A:  MOVWF  x42
06F3C:  MOVLW  01
06F3E:  MOVWF  x43
06F40:  MOVLB  0
06F42:  CALL   3F9C
06F46:  MOVLW  06
06F48:  MOVWF  FEA
06F4A:  MOVLW  1E
06F4C:  MOVWF  FE9
06F4E:  MOVFF  FF2,63E
06F52:  BCF    FF2.7
06F54:  MOVLW  00
06F56:  CALL   0BF6
06F5A:  TBLRD*-
06F5C:  TBLRD*+
06F5E:  MOVF   FF5,W
06F60:  MOVWF  FEE
06F62:  IORLW  00
06F64:  BNZ   6F5C
06F66:  MOVLB  6
06F68:  BTFSC  x3E.7
06F6A:  BSF    FF2.7
06F6C:  MOVLW  06
06F6E:  MOVWF  x47
06F70:  MOVLW  1E
06F72:  MOVWF  x46
06F74:  MOVLW  73
06F76:  MOVWF  x48
06F78:  MOVLW  2A
06F7A:  MOVWF  x49
06F7C:  MOVLW  02
06F7E:  MOVWF  x4A
06F80:  MOVLW  01
06F82:  MOVWF  x4B
06F84:  MOVLB  0
06F86:  CALL   24AC
....................           
....................          if(flag_display==1) 
06F8A:  MOVLB  5
06F8C:  BTFSS  x94.6
06F8E:  BRA    6FC8
....................             displayTiempo(Ganancia,66,45,3,1); 
06F90:  MOVFF  5ED,641
06F94:  MOVFF  5EC,640
06F98:  MOVFF  5EB,63F
06F9C:  MOVFF  5EA,63E
06FA0:  MOVLB  0
06FA2:  CALL   3764
06FA6:  MOVFF  01,63E
06FAA:  MOVFF  01,63F
06FAE:  MOVLW  42
06FB0:  MOVLB  6
06FB2:  MOVWF  x40
06FB4:  MOVLW  2D
06FB6:  MOVWF  x41
06FB8:  MOVLW  03
06FBA:  MOVWF  x42
06FBC:  MOVLW  01
06FBE:  MOVWF  x43
06FC0:  MOVLB  0
06FC2:  CALL   3F9C
....................             //displayTemperatura(Prom,97,13,0,1); 
....................             //displayT(Tpulsomin,60,46,1); 
....................          else 
06FC6:  BRA    6FE6
....................             glcd_rect(66, 45, 88, 52, YES, OFF); 
06FC8:  MOVLW  42
06FCA:  MOVLB  6
06FCC:  MOVWF  x57
06FCE:  MOVLW  2D
06FD0:  MOVWF  x58
06FD2:  MOVLW  58
06FD4:  MOVWF  x59
06FD6:  MOVLW  34
06FD8:  MOVWF  x5A
06FDA:  MOVLW  01
06FDC:  MOVWF  x5B
06FDE:  CLRF   x5C
06FE0:  MOVLB  0
06FE2:  CALL   23EA
....................           
....................          // Muestra Valor de esterilizacion Programado. 
....................          displayTiempo(Testerilizacion[3],20,2,0,2);displayTiempo(Testerilizacion[2],33,2,0,2); 
06FE6:  MOVFF  5C1,63F
06FEA:  MOVLW  14
06FEC:  MOVLB  6
06FEE:  MOVWF  x40
06FF0:  MOVLW  02
06FF2:  MOVWF  x41
06FF4:  CLRF   x42
06FF6:  MOVWF  x43
06FF8:  MOVLB  0
06FFA:  CALL   3F9C
06FFE:  MOVFF  5C0,63F
07002:  MOVLW  21
07004:  MOVLB  6
07006:  MOVWF  x40
07008:  MOVLW  02
0700A:  MOVWF  x41
0700C:  CLRF   x42
0700E:  MOVWF  x43
07010:  MOVLB  0
07012:  CALL   3F9C
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,46,2,2,2);  
07016:  MOVLW  06
07018:  MOVWF  FEA
0701A:  MOVLW  1E
0701C:  MOVWF  FE9
0701E:  MOVFF  FF2,63E
07022:  BCF    FF2.7
07024:  MOVLW  00
07026:  CALL   0A98
0702A:  TBLRD*-
0702C:  TBLRD*+
0702E:  MOVF   FF5,W
07030:  MOVWF  FEE
07032:  IORLW  00
07034:  BNZ   702C
07036:  MOVLB  6
07038:  BTFSC  x3E.7
0703A:  BSF    FF2.7
0703C:  MOVLW  06
0703E:  MOVWF  x47
07040:  MOVLW  1E
07042:  MOVWF  x46
07044:  MOVLW  2E
07046:  MOVWF  x48
07048:  MOVLW  02
0704A:  MOVWF  x49
0704C:  MOVWF  x4A
0704E:  MOVWF  x4B
07050:  MOVLB  0
07052:  CALL   24AC
....................          displayTiempo(Testerilizacion[1],55,2,0,2);displayTiempo(Testerilizacion[0],68,2,0,2); 
07056:  MOVFF  5BF,63F
0705A:  MOVLW  37
0705C:  MOVLB  6
0705E:  MOVWF  x40
07060:  MOVLW  02
07062:  MOVWF  x41
07064:  CLRF   x42
07066:  MOVWF  x43
07068:  MOVLB  0
0706A:  CALL   3F9C
0706E:  MOVFF  5BE,63F
07072:  MOVLW  44
07074:  MOVLB  6
07076:  MOVWF  x40
07078:  MOVLW  02
0707A:  MOVWF  x41
0707C:  CLRF   x42
0707E:  MOVWF  x43
07080:  MOVLB  0
07082:  CALL   3F9C
....................           
....................          // Muestra Valor de esterilizacion actual. 
....................          strcpy(Menus.Letra,"Time:");displayMenu(Menus.Letra,0,18,2,1);  
07086:  MOVLW  06
07088:  MOVWF  FEA
0708A:  MOVLW  1E
0708C:  MOVWF  FE9
0708E:  MOVFF  FF2,63E
07092:  BCF    FF2.7
07094:  MOVLW  00
07096:  CALL   0C16
0709A:  TBLRD*-
0709C:  TBLRD*+
0709E:  MOVF   FF5,W
070A0:  MOVWF  FEE
070A2:  IORLW  00
070A4:  BNZ   709C
070A6:  MOVLB  6
070A8:  BTFSC  x3E.7
070AA:  BSF    FF2.7
070AC:  MOVLW  06
070AE:  MOVWF  x47
070B0:  MOVLW  1E
070B2:  MOVWF  x46
070B4:  CLRF   x48
070B6:  MOVLW  12
070B8:  MOVWF  x49
070BA:  MOVLW  02
070BC:  MOVWF  x4A
070BE:  MOVLW  01
070C0:  MOVWF  x4B
070C2:  MOVLB  0
070C4:  CALL   24AC
....................          displayTiempo(Testerilizacionp[3],30,18,0,1);displayTiempo(Testerilizacionp[2],36,18,0,1); 
070C8:  MOVFF  5C5,63F
070CC:  MOVLW  1E
070CE:  MOVLB  6
070D0:  MOVWF  x40
070D2:  MOVLW  12
070D4:  MOVWF  x41
070D6:  CLRF   x42
070D8:  MOVLW  01
070DA:  MOVWF  x43
070DC:  MOVLB  0
070DE:  CALL   3F9C
070E2:  MOVFF  5C4,63F
070E6:  MOVLW  24
070E8:  MOVLB  6
070EA:  MOVWF  x40
070EC:  MOVLW  12
070EE:  MOVWF  x41
070F0:  CLRF   x42
070F2:  MOVLW  01
070F4:  MOVWF  x43
070F6:  MOVLB  0
070F8:  CALL   3F9C
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,42,18,2,1);  
070FC:  MOVLW  06
070FE:  MOVWF  FEA
07100:  MOVLW  1E
07102:  MOVWF  FE9
07104:  MOVFF  FF2,63E
07108:  BCF    FF2.7
0710A:  MOVLW  00
0710C:  CALL   0A98
07110:  TBLRD*-
07112:  TBLRD*+
07114:  MOVF   FF5,W
07116:  MOVWF  FEE
07118:  IORLW  00
0711A:  BNZ   7112
0711C:  MOVLB  6
0711E:  BTFSC  x3E.7
07120:  BSF    FF2.7
07122:  MOVLW  06
07124:  MOVWF  x47
07126:  MOVLW  1E
07128:  MOVWF  x46
0712A:  MOVLW  2A
0712C:  MOVWF  x48
0712E:  MOVLW  12
07130:  MOVWF  x49
07132:  MOVLW  02
07134:  MOVWF  x4A
07136:  MOVLW  01
07138:  MOVWF  x4B
0713A:  MOVLB  0
0713C:  CALL   24AC
....................          displayTiempo(Testerilizacionp[1],48,18,0,1);displayTiempo(Testerilizacionp[0],54,18,0,1); 
07140:  MOVFF  5C3,63F
07144:  MOVLW  30
07146:  MOVLB  6
07148:  MOVWF  x40
0714A:  MOVLW  12
0714C:  MOVWF  x41
0714E:  CLRF   x42
07150:  MOVLW  01
07152:  MOVWF  x43
07154:  MOVLB  0
07156:  CALL   3F9C
0715A:  MOVFF  5C2,63F
0715E:  MOVLW  36
07160:  MOVLB  6
07162:  MOVWF  x40
07164:  MOVLW  12
07166:  MOVWF  x41
07168:  CLRF   x42
0716A:  MOVLW  01
0716C:  MOVWF  x43
0716E:  MOVLB  0
07170:  CALL   3F9C
....................          strcpy(Menus.Letra,"(H:M)");displayMenu(Menus.Letra,60,18,2,1);  
07174:  MOVLW  06
07176:  MOVWF  FEA
07178:  MOVLW  1E
0717A:  MOVWF  FE9
0717C:  MOVFF  FF2,63E
07180:  BCF    FF2.7
07182:  MOVLW  00
07184:  CALL   0C3A
07188:  TBLRD*-
0718A:  TBLRD*+
0718C:  MOVF   FF5,W
0718E:  MOVWF  FEE
07190:  IORLW  00
07192:  BNZ   718A
07194:  MOVLB  6
07196:  BTFSC  x3E.7
07198:  BSF    FF2.7
0719A:  MOVLW  06
0719C:  MOVWF  x47
0719E:  MOVLW  1E
071A0:  MOVWF  x46
071A2:  MOVLW  3C
071A4:  MOVWF  x48
071A6:  MOVLW  12
071A8:  MOVWF  x49
071AA:  MOVLW  02
071AC:  MOVWF  x4A
071AE:  MOVLW  01
071B0:  MOVWF  x4B
071B2:  MOVLB  0
071B4:  CALL   24AC
....................           
....................          glcd_rect(0, 0, 89, 27, NO, ON); 
071B8:  MOVLB  6
071BA:  CLRF   x57
071BC:  CLRF   x58
071BE:  MOVLW  59
071C0:  MOVWF  x59
071C2:  MOVLW  1B
071C4:  MOVWF  x5A
071C6:  CLRF   x5B
071C8:  MOVLW  01
071CA:  MOVWF  x5C
071CC:  MOVLB  0
071CE:  CALL   23EA
....................          glcd_rect(0, 27, 89, 54, NO, ON); 
071D2:  MOVLB  6
071D4:  CLRF   x57
071D6:  MOVLW  1B
071D8:  MOVWF  x58
071DA:  MOVLW  59
071DC:  MOVWF  x59
071DE:  MOVLW  36
071E0:  MOVWF  x5A
071E2:  CLRF   x5B
071E4:  MOVLW  01
071E6:  MOVWF  x5C
071E8:  MOVLB  0
071EA:  CALL   23EA
071EE:  MOVLB  5
....................       }  
....................        
....................       // Si cumplio el tiempo de esterilización, Muestre ciclo finalizado y detenga control de temperatura. 
....................       if((Testerilizacionp[0]>0)||(Testerilizacionp[1]>0)||(Testerilizacionp[2]>0)||(Testerilizacionp[3]>0)){ 
071F0:  BTFSC  xC2.7
071F2:  BRA    71FA
071F4:  MOVF   xC2,W
071F6:  SUBLW  00
071F8:  BNC   7218
071FA:  BTFSC  xC3.7
071FC:  BRA    7204
071FE:  MOVF   xC3,W
07200:  SUBLW  00
07202:  BNC   7218
07204:  BTFSC  xC4.7
07206:  BRA    720E
07208:  MOVF   xC4,W
0720A:  SUBLW  00
0720C:  BNC   7218
0720E:  BTFSC  xC5.7
07210:  BRA    72D4
07212:  MOVF   xC5,W
07214:  SUBLW  00
07216:  BC    72D4
....................          CuentaTiempo();   
07218:  MOVLB  0
0721A:  GOTO   4C18
....................          if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1){ 
0721E:  MOVLB  5
07220:  MOVF   xC2,W
07222:  XORLW  80
07224:  MOVWF  00
07226:  MOVF   xBE,W
07228:  XORLW  80
0722A:  SUBWF  00,W
0722C:  BZ    7230
0722E:  BC    72D4
07230:  MOVF   xC3,W
07232:  XORLW  80
07234:  MOVWF  00
07236:  MOVF   xBF,W
07238:  XORLW  80
0723A:  SUBWF  00,W
0723C:  BZ    7240
0723E:  BC    72D4
07240:  MOVF   xC4,W
07242:  XORLW  80
07244:  MOVWF  00
07246:  MOVF   xC0,W
07248:  XORLW  80
0724A:  SUBWF  00,W
0724C:  BZ    7250
0724E:  BC    72D4
07250:  MOVF   xC5,W
07252:  XORLW  80
07254:  MOVWF  00
07256:  MOVF   xC1,W
07258:  XORLW  80
0725A:  SUBWF  00,W
0725C:  BZ    7260
0725E:  BC    72D4
07260:  DECFSZ x9E,W
07262:  BRA    72D4
....................             if(flag_clear==0){ 
07264:  BTFSC  x87.6
07266:  BRA    728E
....................                glcd_fillScreen(OFF); 
07268:  MOVLB  6
0726A:  CLRF   x46
0726C:  MOVLB  0
0726E:  CALL   1E7E
....................                //glcd_rect(0, 55, 127, 63, YES, OFF); 
....................                tiempo_esterilizacion=0; 
07272:  MOVLB  5
07274:  CLRF   x9E
....................                Pausa=2; 
07276:  MOVLW  02
07278:  MOVWF  x9B
....................                flag_clear=1; 
0727A:  BSF    x87.6
....................                SSR_off; 
0727C:  BCF    F8B.2
0727E:  BCF    F94.2
....................                Controlando=0; 
07280:  CLRF   x92
....................                Tpulso=0.0; 
07282:  CLRF   xD9
07284:  CLRF   xD8
07286:  CLRF   xD7
07288:  CLRF   xD6
....................                flag_ganancia=0; 
0728A:  CLRF   x8E
....................                Finalizo=1; 
0728C:  BSF    x87.5
....................             } 
....................             strcpy(Menus.Letra,"Status:Finalizado"); 
0728E:  MOVLW  06
07290:  MOVWF  FEA
07292:  MOVLW  1E
07294:  MOVWF  FE9
07296:  MOVFF  FF2,63E
0729A:  BCF    FF2.7
0729C:  MOVLW  00
0729E:  MOVLB  0
072A0:  CALL   0C5E
072A4:  TBLRD*-
072A6:  TBLRD*+
072A8:  MOVF   FF5,W
072AA:  MOVWF  FEE
072AC:  IORLW  00
072AE:  BNZ   72A6
072B0:  MOVLB  6
072B2:  BTFSC  x3E.7
072B4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
072B6:  MOVLW  06
072B8:  MOVWF  x47
072BA:  MOVLW  1E
072BC:  MOVWF  x46
072BE:  CLRF   x48
072C0:  MOVLW  37
072C2:  MOVWF  x49
072C4:  MOVLW  02
072C6:  MOVWF  x4A
072C8:  MOVLW  01
072CA:  MOVWF  x4B
072CC:  MOVLB  0
072CE:  CALL   24AC
072D2:  MOVLB  5
....................          } 
....................       } 
....................         
....................       if(Finalizo){ 
072D4:  BTFSS  x87.5
072D6:  BRA    732E
....................          strcpy(Menus.Letra,"Status:Finalizado"); 
072D8:  MOVLW  06
072DA:  MOVWF  FEA
072DC:  MOVLW  1E
072DE:  MOVWF  FE9
072E0:  MOVFF  FF2,63E
072E4:  BCF    FF2.7
072E6:  MOVLW  00
072E8:  MOVLB  0
072EA:  CALL   0C5E
072EE:  TBLRD*-
072F0:  TBLRD*+
072F2:  MOVF   FF5,W
072F4:  MOVWF  FEE
072F6:  IORLW  00
072F8:  BNZ   72F0
072FA:  MOVLB  6
072FC:  BTFSC  x3E.7
072FE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
07300:  MOVLW  06
07302:  MOVWF  x47
07304:  MOVLW  1E
07306:  MOVWF  x46
07308:  CLRF   x48
0730A:  MOVLW  37
0730C:  MOVWF  x49
0730E:  MOVLW  02
07310:  MOVWF  x4A
07312:  MOVLW  01
07314:  MOVWF  x4B
07316:  MOVLB  0
07318:  CALL   24AC
....................          SSR_off;          
0731C:  BCF    F8B.2
0731E:  BCF    F94.2
....................          Controlando=0; 
07320:  MOVLB  5
07322:  CLRF   x92
....................          Tpulso=0.0; 
07324:  CLRF   xD9
07326:  CLRF   xD8
07328:  CLRF   xD7
0732A:  CLRF   xD6
....................          tiempo_esterilizacion=0; 
0732C:  CLRF   x9E
....................       } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==100){ //Menu de Configuración de Parametros de Control 
0732E:  MOVF   x98,W
07330:  SUBLW  64
07332:  BTFSS  FD8.2
07334:  BRA    769E
....................        
....................       if(Opcion>5) 
07336:  MOVF   x9D,W
07338:  SUBLW  05
0733A:  BC    7340
....................          Opcion=1; 
0733C:  MOVLW  01
0733E:  MOVWF  x9D
....................       if(Opcion<1) 
07340:  MOVF   x9D,F
07342:  BNZ   7348
....................          Opcion=5; 
07344:  MOVLW  05
07346:  MOVWF  x9D
....................        
....................          if(Opcion==1)    
07348:  DECFSZ x9D,W
0734A:  BRA    7390
....................             {strcpy(Menus.Letra,"Ganancia"); 
0734C:  MOVLW  06
0734E:  MOVWF  FEA
07350:  MOVLW  1E
07352:  MOVWF  FE9
07354:  MOVFF  FF2,63E
07358:  BCF    FF2.7
0735A:  MOVLW  00
0735C:  MOVLB  0
0735E:  CALL   0C8E
07362:  TBLRD*-
07364:  TBLRD*+
07366:  MOVF   FF5,W
07368:  MOVWF  FEE
0736A:  IORLW  00
0736C:  BNZ   7364
0736E:  MOVLB  6
07370:  BTFSC  x3E.7
07372:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
07374:  MOVLW  06
07376:  MOVWF  x47
07378:  MOVLW  1E
0737A:  MOVWF  x46
0737C:  CLRF   x48
0737E:  CLRF   x49
07380:  MOVLW  01
07382:  MOVWF  x4A
07384:  MOVWF  x4B
07386:  MOVLB  0
07388:  CALL   24AC
....................          else 
0738C:  BRA    73D0
0738E:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ganancia"); 
07390:  MOVLW  06
07392:  MOVWF  FEA
07394:  MOVLW  1E
07396:  MOVWF  FE9
07398:  MOVFF  FF2,63E
0739C:  BCF    FF2.7
0739E:  MOVLW  00
073A0:  MOVLB  0
073A2:  CALL   0C8E
073A6:  TBLRD*-
073A8:  TBLRD*+
073AA:  MOVF   FF5,W
073AC:  MOVWF  FEE
073AE:  IORLW  00
073B0:  BNZ   73A8
073B2:  MOVLB  6
073B4:  BTFSC  x3E.7
073B6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);} 
073B8:  MOVLW  06
073BA:  MOVWF  x47
073BC:  MOVLW  1E
073BE:  MOVWF  x46
073C0:  CLRF   x48
073C2:  CLRF   x49
073C4:  CLRF   x4A
073C6:  MOVLW  01
073C8:  MOVWF  x4B
073CA:  MOVLB  0
073CC:  CALL   24AC
....................           
....................          if(Opcion==2)    
073D0:  MOVLB  5
073D2:  MOVF   x9D,W
073D4:  SUBLW  02
073D6:  BNZ   741E
....................             {strcpy(Menus.Letra,"Tciclo"); 
073D8:  MOVLW  06
073DA:  MOVWF  FEA
073DC:  MOVLW  1E
073DE:  MOVWF  FE9
073E0:  MOVFF  FF2,63E
073E4:  BCF    FF2.7
073E6:  MOVLW  00
073E8:  MOVLB  0
073EA:  CALL   0CB6
073EE:  TBLRD*-
073F0:  TBLRD*+
073F2:  MOVF   FF5,W
073F4:  MOVWF  FEE
073F6:  IORLW  00
073F8:  BNZ   73F0
073FA:  MOVLB  6
073FC:  BTFSC  x3E.7
073FE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
07400:  MOVLW  06
07402:  MOVWF  x47
07404:  MOVLW  1E
07406:  MOVWF  x46
07408:  CLRF   x48
0740A:  MOVLW  09
0740C:  MOVWF  x49
0740E:  MOVLW  01
07410:  MOVWF  x4A
07412:  MOVWF  x4B
07414:  MOVLB  0
07416:  CALL   24AC
....................          else 
0741A:  BRA    7460
0741C:  MOVLB  5
....................             {strcpy(Menus.Letra,"Tciclo"); 
0741E:  MOVLW  06
07420:  MOVWF  FEA
07422:  MOVLW  1E
07424:  MOVWF  FE9
07426:  MOVFF  FF2,63E
0742A:  BCF    FF2.7
0742C:  MOVLW  00
0742E:  MOVLB  0
07430:  CALL   0CB6
07434:  TBLRD*-
07436:  TBLRD*+
07438:  MOVF   FF5,W
0743A:  MOVWF  FEE
0743C:  IORLW  00
0743E:  BNZ   7436
07440:  MOVLB  6
07442:  BTFSC  x3E.7
07444:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);} 
07446:  MOVLW  06
07448:  MOVWF  x47
0744A:  MOVLW  1E
0744C:  MOVWF  x46
0744E:  CLRF   x48
07450:  MOVLW  09
07452:  MOVWF  x49
07454:  CLRF   x4A
07456:  MOVLW  01
07458:  MOVWF  x4B
0745A:  MOVLB  0
0745C:  CALL   24AC
....................              
....................          if(Opcion==3)    
07460:  MOVLB  5
07462:  MOVF   x9D,W
07464:  SUBLW  03
07466:  BNZ   74AE
....................             {strcpy(Menus.Letra,"Ajuste +"); 
07468:  MOVLW  06
0746A:  MOVWF  FEA
0746C:  MOVLW  1E
0746E:  MOVWF  FE9
07470:  MOVFF  FF2,63E
07474:  BCF    FF2.7
07476:  MOVLW  00
07478:  MOVLB  0
0747A:  CALL   0CDC
0747E:  TBLRD*-
07480:  TBLRD*+
07482:  MOVF   FF5,W
07484:  MOVWF  FEE
07486:  IORLW  00
07488:  BNZ   7480
0748A:  MOVLB  6
0748C:  BTFSC  x3E.7
0748E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
07490:  MOVLW  06
07492:  MOVWF  x47
07494:  MOVLW  1E
07496:  MOVWF  x46
07498:  CLRF   x48
0749A:  MOVLW  12
0749C:  MOVWF  x49
0749E:  MOVLW  01
074A0:  MOVWF  x4A
074A2:  MOVWF  x4B
074A4:  MOVLB  0
074A6:  CALL   24AC
....................          else 
074AA:  BRA    74F0
074AC:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste +"); 
074AE:  MOVLW  06
074B0:  MOVWF  FEA
074B2:  MOVLW  1E
074B4:  MOVWF  FE9
074B6:  MOVFF  FF2,63E
074BA:  BCF    FF2.7
074BC:  MOVLW  00
074BE:  MOVLB  0
074C0:  CALL   0CDC
074C4:  TBLRD*-
074C6:  TBLRD*+
074C8:  MOVF   FF5,W
074CA:  MOVWF  FEE
074CC:  IORLW  00
074CE:  BNZ   74C6
074D0:  MOVLB  6
074D2:  BTFSC  x3E.7
074D4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}    
074D6:  MOVLW  06
074D8:  MOVWF  x47
074DA:  MOVLW  1E
074DC:  MOVWF  x46
074DE:  CLRF   x48
074E0:  MOVLW  12
074E2:  MOVWF  x49
074E4:  CLRF   x4A
074E6:  MOVLW  01
074E8:  MOVWF  x4B
074EA:  MOVLB  0
074EC:  CALL   24AC
....................                          
....................          if(Opcion==4)    
074F0:  MOVLB  5
074F2:  MOVF   x9D,W
074F4:  SUBLW  04
074F6:  BNZ   753E
....................             {strcpy(Menus.Letra,"Ajuste -"); 
074F8:  MOVLW  06
074FA:  MOVWF  FEA
074FC:  MOVLW  1E
074FE:  MOVWF  FE9
07500:  MOVFF  FF2,63E
07504:  BCF    FF2.7
07506:  MOVLW  00
07508:  MOVLB  0
0750A:  CALL   0D04
0750E:  TBLRD*-
07510:  TBLRD*+
07512:  MOVF   FF5,W
07514:  MOVWF  FEE
07516:  IORLW  00
07518:  BNZ   7510
0751A:  MOVLB  6
0751C:  BTFSC  x3E.7
0751E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
07520:  MOVLW  06
07522:  MOVWF  x47
07524:  MOVLW  1E
07526:  MOVWF  x46
07528:  CLRF   x48
0752A:  MOVLW  1B
0752C:  MOVWF  x49
0752E:  MOVLW  01
07530:  MOVWF  x4A
07532:  MOVWF  x4B
07534:  MOVLB  0
07536:  CALL   24AC
....................          else 
0753A:  BRA    7580
0753C:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste -"); 
0753E:  MOVLW  06
07540:  MOVWF  FEA
07542:  MOVLW  1E
07544:  MOVWF  FE9
07546:  MOVFF  FF2,63E
0754A:  BCF    FF2.7
0754C:  MOVLW  00
0754E:  MOVLB  0
07550:  CALL   0D04
07554:  TBLRD*-
07556:  TBLRD*+
07558:  MOVF   FF5,W
0755A:  MOVWF  FEE
0755C:  IORLW  00
0755E:  BNZ   7556
07560:  MOVLB  6
07562:  BTFSC  x3E.7
07564:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);}      
07566:  MOVLW  06
07568:  MOVWF  x47
0756A:  MOVLW  1E
0756C:  MOVWF  x46
0756E:  CLRF   x48
07570:  MOVLW  1B
07572:  MOVWF  x49
07574:  CLRF   x4A
07576:  MOVLW  01
07578:  MOVWF  x4B
0757A:  MOVLB  0
0757C:  CALL   24AC
....................              
....................          if(Opcion==5)    
07580:  MOVLB  5
07582:  MOVF   x9D,W
07584:  SUBLW  05
07586:  BNZ   75CE
....................             {strcpy(Menus.Letra,"Media Movil"); 
07588:  MOVLW  06
0758A:  MOVWF  FEA
0758C:  MOVLW  1E
0758E:  MOVWF  FE9
07590:  MOVFF  FF2,63E
07594:  BCF    FF2.7
07596:  MOVLW  00
07598:  MOVLB  0
0759A:  CALL   0D2C
0759E:  TBLRD*-
075A0:  TBLRD*+
075A2:  MOVF   FF5,W
075A4:  MOVWF  FEE
075A6:  IORLW  00
075A8:  BNZ   75A0
075AA:  MOVLB  6
075AC:  BTFSC  x3E.7
075AE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
075B0:  MOVLW  06
075B2:  MOVWF  x47
075B4:  MOVLW  1E
075B6:  MOVWF  x46
075B8:  CLRF   x48
075BA:  MOVLW  24
075BC:  MOVWF  x49
075BE:  MOVLW  01
075C0:  MOVWF  x4A
075C2:  MOVWF  x4B
075C4:  MOVLB  0
075C6:  CALL   24AC
....................          else 
075CA:  BRA    7610
075CC:  MOVLB  5
....................             {strcpy(Menus.Letra,"Media Movil"); 
075CE:  MOVLW  06
075D0:  MOVWF  FEA
075D2:  MOVLW  1E
075D4:  MOVWF  FE9
075D6:  MOVFF  FF2,63E
075DA:  BCF    FF2.7
075DC:  MOVLW  00
075DE:  MOVLB  0
075E0:  CALL   0D2C
075E4:  TBLRD*-
075E6:  TBLRD*+
075E8:  MOVF   FF5,W
075EA:  MOVWF  FEE
075EC:  IORLW  00
075EE:  BNZ   75E6
075F0:  MOVLB  6
075F2:  BTFSC  x3E.7
075F4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}      
075F6:  MOVLW  06
075F8:  MOVWF  x47
075FA:  MOVLW  1E
075FC:  MOVWF  x46
075FE:  CLRF   x48
07600:  MOVLW  24
07602:  MOVWF  x49
07604:  CLRF   x4A
07606:  MOVLW  01
07608:  MOVWF  x4B
0760A:  MOVLB  0
0760C:  CALL   24AC
....................                
....................        
....................          if(UP)//Si oprime hacia arriba 
07610:  BSF    F92.5
07612:  BTFSC  F80.5
07614:  BRA    762A
....................          { 
....................             delay_ms(30); 
07616:  MOVLW  1E
07618:  MOVLB  6
0761A:  MOVWF  x47
0761C:  MOVLB  0
0761E:  CALL   0E5A
....................             Opcion--;visual=1; 
07622:  MOVLB  5
07624:  DECF   x9D,F
07626:  BSF    x87.7
07628:  MOVLB  0
....................          } 
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
0762A:  BSF    F96.0
0762C:  BTFSC  F84.0
0762E:  BRA    7644
....................          { 
....................             delay_ms(30); 
07630:  MOVLW  1E
07632:  MOVLB  6
07634:  MOVWF  x47
07636:  MOVLB  0
07638:  CALL   0E5A
....................             Opcion++;visual=1; 
0763C:  MOVLB  5
0763E:  INCF   x9D,F
07640:  BSF    x87.7
07642:  MOVLB  0
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
07644:  BSF    F96.1
07646:  BTFSC  F84.1
07648:  BRA    7672
....................          {  
....................             delay_ms(30); 
0764A:  MOVLW  1E
0764C:  MOVLB  6
0764E:  MOVWF  x47
07650:  MOVLB  0
07652:  CALL   0E5A
....................             Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
07656:  MOVLW  64
07658:  MOVLB  5
0765A:  ADDWF  x9D,W
0765C:  MOVWF  x98
0765E:  MOVLW  01
07660:  MOVWF  x9D
07662:  MOVLB  6
07664:  CLRF   x46
07666:  MOVLB  0
07668:  CALL   1E7E
0766C:  MOVLB  5
0766E:  BSF    x87.7
07670:  MOVLB  0
....................          } 
....................           
....................          if(LEFT)//Si oprime SET 
07672:  BSF    F96.2
07674:  BTFSC  F84.2
07676:  BRA    76A0
....................          {  
....................             delay_ms(30); 
07678:  MOVLW  1E
0767A:  MOVLB  6
0767C:  MOVWF  x47
0767E:  MOVLB  0
07680:  CALL   0E5A
....................             Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
07684:  MOVLW  64
07686:  MOVLB  5
07688:  ADDWF  x9D,W
0768A:  MOVWF  x98
0768C:  MOVLW  01
0768E:  MOVWF  x9D
07690:  MOVLB  6
07692:  CLRF   x46
07694:  MOVLB  0
07696:  CALL   1E7E
0769A:  MOVLB  5
0769C:  BSF    x87.7
0769E:  MOVLB  0
....................          } 
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==101){ // Menu de Ajuste de Ganancia =2 
076A0:  MOVLB  5
076A2:  MOVF   x98,W
076A4:  SUBLW  65
076A6:  BTFSS  FD8.2
076A8:  BRA    7900
....................        
....................       if(Ganancia>40) 
076AA:  MOVLB  6
076AC:  CLRF   x41
076AE:  CLRF   x40
076B0:  MOVLW  20
076B2:  MOVWF  x3F
076B4:  MOVLW  84
076B6:  MOVWF  x3E
076B8:  MOVFF  5ED,645
076BC:  MOVFF  5EC,644
076C0:  MOVFF  5EB,643
076C4:  MOVFF  5EA,642
076C8:  MOVLB  0
076CA:  CALL   1802
076CE:  BNC   76DC
....................       { 
....................          Ganancia=2; 
076D0:  MOVLB  5
076D2:  CLRF   xED
076D4:  CLRF   xEC
076D6:  CLRF   xEB
076D8:  MOVLW  80
076DA:  MOVWF  xEA
....................       } 
....................        
....................       if(visual==1) 
076DC:  MOVLB  5
076DE:  BTFSS  x87.7
076E0:  BRA    7768
....................       { 
....................          glcd_fillScreen(OFF); 
076E2:  MOVLB  6
076E4:  CLRF   x46
076E6:  MOVLB  0
076E8:  CALL   1E7E
....................          strcpy(Menus.Letra,"Ganancia"); 
076EC:  MOVLW  06
076EE:  MOVWF  FEA
076F0:  MOVLW  1E
076F2:  MOVWF  FE9
076F4:  MOVFF  FF2,63E
076F8:  BCF    FF2.7
076FA:  MOVLW  00
076FC:  CALL   0C8E
07700:  TBLRD*-
07702:  TBLRD*+
07704:  MOVF   FF5,W
07706:  MOVWF  FEE
07708:  IORLW  00
0770A:  BNZ   7702
0770C:  MOVLB  6
0770E:  BTFSC  x3E.7
07710:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
07712:  MOVLW  06
07714:  MOVWF  x47
07716:  MOVLW  1E
07718:  MOVWF  x46
0771A:  CLRF   x48
0771C:  CLRF   x49
0771E:  MOVLW  01
07720:  MOVWF  x4A
07722:  MOVLW  02
07724:  MOVWF  x4B
07726:  MOVLB  0
07728:  CALL   24AC
....................           
....................          displayTemperatura(Ganancia,30,30,0,3); 
0772C:  MOVFF  5ED,641
07730:  MOVFF  5EC,640
07734:  MOVFF  5EB,63F
07738:  MOVFF  5EA,63E
0773C:  CALL   3764
07740:  MOVFF  02,63F
07744:  MOVFF  01,63E
07748:  MOVFF  02,641
0774C:  MOVFF  01,640
07750:  MOVLW  1E
07752:  MOVLB  6
07754:  MOVWF  x42
07756:  MOVWF  x43
07758:  CLRF   x44
0775A:  MOVLW  03
0775C:  MOVWF  x45
0775E:  MOVLB  0
07760:  CALL   385E
....................           
....................          visual=0; 
07764:  MOVLB  5
07766:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
07768:  BSF    F92.5
0776A:  BTFSC  F80.5
0776C:  BRA    77FA
....................          {   
....................             if(Ganancia>40) 
0776E:  MOVLB  6
07770:  CLRF   x41
07772:  CLRF   x40
07774:  MOVLW  20
07776:  MOVWF  x3F
07778:  MOVLW  84
0777A:  MOVWF  x3E
0777C:  MOVFF  5ED,645
07780:  MOVFF  5EC,644
07784:  MOVFF  5EB,643
07788:  MOVFF  5EA,642
0778C:  MOVLB  0
0778E:  CALL   1802
07792:  BNC   77B6
....................             { 
....................                Ganancia=40;delay_ms(100);visual=1; 
07794:  MOVLB  5
07796:  CLRF   xED
07798:  CLRF   xEC
0779A:  MOVLW  20
0779C:  MOVWF  xEB
0779E:  MOVLW  84
077A0:  MOVWF  xEA
077A2:  MOVLW  64
077A4:  MOVLB  6
077A6:  MOVWF  x47
077A8:  MOVLB  0
077AA:  CALL   0E5A
077AE:  MOVLB  5
077B0:  BSF    x87.7
....................             } 
....................             else 
077B2:  BRA    77FA
077B4:  MOVLB  0
....................             { 
....................                delay_ms(30);Ganancia+=1.0;visual=1; 
077B6:  MOVLW  1E
077B8:  MOVLB  6
077BA:  MOVWF  x47
077BC:  MOVLB  0
077BE:  CALL   0E5A
077C2:  BCF    FD8.1
077C4:  MOVFF  5ED,646
077C8:  MOVFF  5EC,645
077CC:  MOVFF  5EB,644
077D0:  MOVFF  5EA,643
077D4:  MOVLB  6
077D6:  CLRF   x4A
077D8:  CLRF   x49
077DA:  CLRF   x48
077DC:  MOVLW  7F
077DE:  MOVWF  x47
077E0:  MOVLB  0
077E2:  CALL   1038
077E6:  MOVFF  03,5ED
077EA:  MOVFF  02,5EC
077EE:  MOVFF  01,5EB
077F2:  MOVFF  00,5EA
077F6:  MOVLB  5
077F8:  BSF    x87.7
....................             } 
....................              
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
077FA:  BSF    F96.0
077FC:  BTFSC  F84.0
077FE:  BRA    7868
....................          {   
....................             if(Ganancia>1) 
07800:  MOVLB  6
07802:  CLRF   x41
07804:  CLRF   x40
07806:  CLRF   x3F
07808:  MOVLW  7F
0780A:  MOVWF  x3E
0780C:  MOVFF  5ED,645
07810:  MOVFF  5EC,644
07814:  MOVFF  5EB,643
07818:  MOVFF  5EA,642
0781C:  MOVLB  0
0781E:  CALL   1802
07822:  BNC   786A
....................             { 
....................                delay_ms(30);Ganancia-=1.0;visual=1;      
07824:  MOVLW  1E
07826:  MOVLB  6
07828:  MOVWF  x47
0782A:  MOVLB  0
0782C:  CALL   0E5A
07830:  BSF    FD8.1
07832:  MOVFF  5ED,646
07836:  MOVFF  5EC,645
0783A:  MOVFF  5EB,644
0783E:  MOVFF  5EA,643
07842:  MOVLB  6
07844:  CLRF   x4A
07846:  CLRF   x49
07848:  CLRF   x48
0784A:  MOVLW  7F
0784C:  MOVWF  x47
0784E:  MOVLB  0
07850:  CALL   1038
07854:  MOVFF  03,5ED
07858:  MOVFF  02,5EC
0785C:  MOVFF  01,5EB
07860:  MOVFF  00,5EA
07864:  MOVLB  5
07866:  BSF    x87.7
07868:  MOVLB  0
....................             } 
....................              
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0786A:  BSF    F96.1
0786C:  BTFSC  F84.1
0786E:  BRA    7882
....................          {   
....................             delay_ms(30);visual=1; 
07870:  MOVLW  1E
07872:  MOVLB  6
07874:  MOVWF  x47
07876:  MOVLB  0
07878:  CALL   0E5A
0787C:  MOVLB  5
0787E:  BSF    x87.7
07880:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
07882:  BSF    F96.2
07884:  BTFSC  F84.2
07886:  BRA    78FE
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
07888:  MOVLW  04
0788A:  MOVLB  6
0788C:  MOVWF  x3E
0788E:  MOVLW  AF
07890:  MOVWF  x47
07892:  MOVLB  0
07894:  CALL   0E5A
07898:  MOVLB  6
0789A:  DECFSZ x3E,F
0789C:  BRA    788E
0789E:  MOVLW  64
078A0:  MOVLB  5
078A2:  MOVWF  x98
078A4:  MOVLB  6
078A6:  CLRF   x46
078A8:  MOVLB  0
078AA:  CALL   1E7E
078AE:  MOVLW  01
078B0:  MOVLB  5
078B2:  MOVWF  x9D
078B4:  BSF    x87.7
....................             write_eeprom(90,(int8)Ganancia); 
078B6:  MOVFF  5ED,641
078BA:  MOVFF  5EC,640
078BE:  MOVFF  5EB,63F
078C2:  MOVFF  5EA,63E
078C6:  MOVLB  0
078C8:  CALL   3764
078CC:  MOVFF  01,63E
078D0:  CLRF   FAA
078D2:  MOVLW  5A
078D4:  MOVWF  FA9
078D6:  MOVFF  63E,FA8
078DA:  BCF    FA6.6
078DC:  BCF    FA6.7
078DE:  BSF    FA6.2
078E0:  MOVF   FF2,W
078E2:  MOVWF  00
078E4:  BCF    FF2.7
078E6:  MOVLB  F
078E8:  MOVLW  55
078EA:  MOVWF  FA7
078EC:  MOVLW  AA
078EE:  MOVWF  FA7
078F0:  BSF    FA6.1
078F2:  BTFSC  FA6.1
078F4:  BRA    78F2
078F6:  BCF    FA6.2
078F8:  MOVF   00,W
078FA:  IORWF  FF2,F
078FC:  MOVLB  0
078FE:  MOVLB  5
....................              
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==102){ // Menu de Tciclo=5 
07900:  MOVF   x98,W
07902:  SUBLW  66
07904:  BTFSS  FD8.2
07906:  BRA    7B60
....................        
....................       if(Tciclo>40) 
07908:  MOVLB  6
0790A:  CLRF   x41
0790C:  CLRF   x40
0790E:  MOVLW  20
07910:  MOVWF  x3F
07912:  MOVLW  84
07914:  MOVWF  x3E
07916:  MOVFF  5D5,645
0791A:  MOVFF  5D4,644
0791E:  MOVFF  5D3,643
07922:  MOVFF  5D2,642
07926:  MOVLB  0
07928:  CALL   1802
0792C:  BNC   793C
....................       { 
....................          Tciclo=40; 
0792E:  MOVLB  5
07930:  CLRF   xD5
07932:  CLRF   xD4
07934:  MOVLW  20
07936:  MOVWF  xD3
07938:  MOVLW  84
0793A:  MOVWF  xD2
....................       } 
....................        
....................       if(visual==1) 
0793C:  MOVLB  5
0793E:  BTFSS  x87.7
07940:  BRA    79C8
....................       { 
....................          glcd_fillScreen(OFF); 
07942:  MOVLB  6
07944:  CLRF   x46
07946:  MOVLB  0
07948:  CALL   1E7E
....................          strcpy(Menus.Letra,"Tciclo"); 
0794C:  MOVLW  06
0794E:  MOVWF  FEA
07950:  MOVLW  1E
07952:  MOVWF  FE9
07954:  MOVFF  FF2,63E
07958:  BCF    FF2.7
0795A:  MOVLW  00
0795C:  CALL   0CB6
07960:  TBLRD*-
07962:  TBLRD*+
07964:  MOVF   FF5,W
07966:  MOVWF  FEE
07968:  IORLW  00
0796A:  BNZ   7962
0796C:  MOVLB  6
0796E:  BTFSC  x3E.7
07970:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
07972:  MOVLW  06
07974:  MOVWF  x47
07976:  MOVLW  1E
07978:  MOVWF  x46
0797A:  CLRF   x48
0797C:  CLRF   x49
0797E:  MOVLW  01
07980:  MOVWF  x4A
07982:  MOVLW  02
07984:  MOVWF  x4B
07986:  MOVLB  0
07988:  CALL   24AC
....................           
....................          displayTemperatura(Tciclo,30,30,0,3); 
0798C:  MOVFF  5D5,641
07990:  MOVFF  5D4,640
07994:  MOVFF  5D3,63F
07998:  MOVFF  5D2,63E
0799C:  CALL   3764
079A0:  MOVFF  02,63F
079A4:  MOVFF  01,63E
079A8:  MOVFF  02,641
079AC:  MOVFF  01,640
079B0:  MOVLW  1E
079B2:  MOVLB  6
079B4:  MOVWF  x42
079B6:  MOVWF  x43
079B8:  CLRF   x44
079BA:  MOVLW  03
079BC:  MOVWF  x45
079BE:  MOVLB  0
079C0:  CALL   385E
....................           
....................          visual=0; 
079C4:  MOVLB  5
079C6:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
079C8:  BSF    F92.5
079CA:  BTFSC  F80.5
079CC:  BRA    7A5A
....................          {   
....................             if(Tciclo>40) 
079CE:  MOVLB  6
079D0:  CLRF   x41
079D2:  CLRF   x40
079D4:  MOVLW  20
079D6:  MOVWF  x3F
079D8:  MOVLW  84
079DA:  MOVWF  x3E
079DC:  MOVFF  5D5,645
079E0:  MOVFF  5D4,644
079E4:  MOVFF  5D3,643
079E8:  MOVFF  5D2,642
079EC:  MOVLB  0
079EE:  CALL   1802
079F2:  BNC   7A16
....................             { 
....................                Tciclo=40;delay_ms(100);visual=1; 
079F4:  MOVLB  5
079F6:  CLRF   xD5
079F8:  CLRF   xD4
079FA:  MOVLW  20
079FC:  MOVWF  xD3
079FE:  MOVLW  84
07A00:  MOVWF  xD2
07A02:  MOVLW  64
07A04:  MOVLB  6
07A06:  MOVWF  x47
07A08:  MOVLB  0
07A0A:  CALL   0E5A
07A0E:  MOVLB  5
07A10:  BSF    x87.7
....................             } 
....................             else 
07A12:  BRA    7A5A
07A14:  MOVLB  0
....................             { 
....................                delay_ms(30);Tciclo+=1.0;visual=1; 
07A16:  MOVLW  1E
07A18:  MOVLB  6
07A1A:  MOVWF  x47
07A1C:  MOVLB  0
07A1E:  CALL   0E5A
07A22:  BCF    FD8.1
07A24:  MOVFF  5D5,646
07A28:  MOVFF  5D4,645
07A2C:  MOVFF  5D3,644
07A30:  MOVFF  5D2,643
07A34:  MOVLB  6
07A36:  CLRF   x4A
07A38:  CLRF   x49
07A3A:  CLRF   x48
07A3C:  MOVLW  7F
07A3E:  MOVWF  x47
07A40:  MOVLB  0
07A42:  CALL   1038
07A46:  MOVFF  03,5D5
07A4A:  MOVFF  02,5D4
07A4E:  MOVFF  01,5D3
07A52:  MOVFF  00,5D2
07A56:  MOVLB  5
07A58:  BSF    x87.7
....................             } 
....................              
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
07A5A:  BSF    F96.0
07A5C:  BTFSC  F84.0
07A5E:  BRA    7AC8
....................          {   
....................             if(Tciclo>1) 
07A60:  MOVLB  6
07A62:  CLRF   x41
07A64:  CLRF   x40
07A66:  CLRF   x3F
07A68:  MOVLW  7F
07A6A:  MOVWF  x3E
07A6C:  MOVFF  5D5,645
07A70:  MOVFF  5D4,644
07A74:  MOVFF  5D3,643
07A78:  MOVFF  5D2,642
07A7C:  MOVLB  0
07A7E:  CALL   1802
07A82:  BNC   7ACA
....................             { 
....................                delay_ms(30);Tciclo-=1.0;visual=1;      
07A84:  MOVLW  1E
07A86:  MOVLB  6
07A88:  MOVWF  x47
07A8A:  MOVLB  0
07A8C:  CALL   0E5A
07A90:  BSF    FD8.1
07A92:  MOVFF  5D5,646
07A96:  MOVFF  5D4,645
07A9A:  MOVFF  5D3,644
07A9E:  MOVFF  5D2,643
07AA2:  MOVLB  6
07AA4:  CLRF   x4A
07AA6:  CLRF   x49
07AA8:  CLRF   x48
07AAA:  MOVLW  7F
07AAC:  MOVWF  x47
07AAE:  MOVLB  0
07AB0:  CALL   1038
07AB4:  MOVFF  03,5D5
07AB8:  MOVFF  02,5D4
07ABC:  MOVFF  01,5D3
07AC0:  MOVFF  00,5D2
07AC4:  MOVLB  5
07AC6:  BSF    x87.7
07AC8:  MOVLB  0
....................             } 
....................              
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
07ACA:  BSF    F96.1
07ACC:  BTFSC  F84.1
07ACE:  BRA    7AE2
....................          {   
....................             delay_ms(30);visual=1; 
07AD0:  MOVLW  1E
07AD2:  MOVLB  6
07AD4:  MOVWF  x47
07AD6:  MOVLB  0
07AD8:  CALL   0E5A
07ADC:  MOVLB  5
07ADE:  BSF    x87.7
07AE0:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
07AE2:  BSF    F96.2
07AE4:  BTFSC  F84.2
07AE6:  BRA    7B5E
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
07AE8:  MOVLW  04
07AEA:  MOVLB  6
07AEC:  MOVWF  x3E
07AEE:  MOVLW  AF
07AF0:  MOVWF  x47
07AF2:  MOVLB  0
07AF4:  CALL   0E5A
07AF8:  MOVLB  6
07AFA:  DECFSZ x3E,F
07AFC:  BRA    7AEE
07AFE:  MOVLW  64
07B00:  MOVLB  5
07B02:  MOVWF  x98
07B04:  MOVLB  6
07B06:  CLRF   x46
07B08:  MOVLB  0
07B0A:  CALL   1E7E
07B0E:  MOVLW  01
07B10:  MOVLB  5
07B12:  MOVWF  x9D
07B14:  BSF    x87.7
....................             write_eeprom(30,(int8)Tciclo); 
07B16:  MOVFF  5D5,641
07B1A:  MOVFF  5D4,640
07B1E:  MOVFF  5D3,63F
07B22:  MOVFF  5D2,63E
07B26:  MOVLB  0
07B28:  CALL   3764
07B2C:  MOVFF  01,63E
07B30:  CLRF   FAA
07B32:  MOVLW  1E
07B34:  MOVWF  FA9
07B36:  MOVFF  63E,FA8
07B3A:  BCF    FA6.6
07B3C:  BCF    FA6.7
07B3E:  BSF    FA6.2
07B40:  MOVF   FF2,W
07B42:  MOVWF  00
07B44:  BCF    FF2.7
07B46:  MOVLB  F
07B48:  MOVLW  55
07B4A:  MOVWF  FA7
07B4C:  MOVLW  AA
07B4E:  MOVWF  FA7
07B50:  BSF    FA6.1
07B52:  BTFSC  FA6.1
07B54:  BRA    7B52
07B56:  BCF    FA6.2
07B58:  MOVF   00,W
07B5A:  IORWF  FF2,F
07B5C:  MOVLB  0
07B5E:  MOVLB  5
....................              
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==103){ // Menu de Ajuste de Ajuste+=0 
07B60:  MOVF   x98,W
07B62:  SUBLW  67
07B64:  BTFSS  FD8.2
07B66:  BRA    7D32
....................        
....................       if(Ajuste>100) 
07B68:  MOVF   x8A,W
07B6A:  SUBLW  64
07B6C:  BC    7B70
....................       { 
....................          Ajuste=0; 
07B6E:  CLRF   x8A
....................       } 
....................        
....................       if(visual==1) 
07B70:  BTFSS  x87.7
07B72:  BRA    7BDC
....................       { 
....................          glcd_fillScreen(OFF); 
07B74:  MOVLB  6
07B76:  CLRF   x46
07B78:  MOVLB  0
07B7A:  CALL   1E7E
....................          strcpy(Menus.Letra,"Ajuste"); 
07B7E:  MOVLW  06
07B80:  MOVWF  FEA
07B82:  MOVLW  1E
07B84:  MOVWF  FE9
07B86:  MOVFF  FF2,63E
07B8A:  BCF    FF2.7
07B8C:  MOVLW  00
07B8E:  CALL   0D56
07B92:  TBLRD*-
07B94:  TBLRD*+
07B96:  MOVF   FF5,W
07B98:  MOVWF  FEE
07B9A:  IORLW  00
07B9C:  BNZ   7B94
07B9E:  MOVLB  6
07BA0:  BTFSC  x3E.7
07BA2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
07BA4:  MOVLW  06
07BA6:  MOVWF  x47
07BA8:  MOVLW  1E
07BAA:  MOVWF  x46
07BAC:  CLRF   x48
07BAE:  CLRF   x49
07BB0:  MOVLW  01
07BB2:  MOVWF  x4A
07BB4:  MOVLW  02
07BB6:  MOVWF  x4B
07BB8:  MOVLB  0
07BBA:  CALL   24AC
....................           
....................          displayTemperatura(Ajuste,30,30,0,3); 
07BBE:  MOVLB  6
07BC0:  CLRF   x41
07BC2:  MOVFF  58A,640
07BC6:  MOVLW  1E
07BC8:  MOVWF  x42
07BCA:  MOVWF  x43
07BCC:  CLRF   x44
07BCE:  MOVLW  03
07BD0:  MOVWF  x45
07BD2:  MOVLB  0
07BD4:  CALL   385E
....................           
....................          visual=0; 
07BD8:  MOVLB  5
07BDA:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
07BDC:  BSF    F92.5
07BDE:  BTFSC  F80.5
07BE0:  BRA    7C56
....................          {   
....................             if(Ajuste>100) 
07BE2:  MOVF   x8A,W
07BE4:  SUBLW  64
07BE6:  BC    7BFC
....................             { 
....................                Ajuste=100;delay_ms(100);visual=1; 
07BE8:  MOVLW  64
07BEA:  MOVWF  x8A
07BEC:  MOVLB  6
07BEE:  MOVWF  x47
07BF0:  MOVLB  0
07BF2:  CALL   0E5A
07BF6:  MOVLB  5
07BF8:  BSF    x87.7
....................             } 
....................             else 
07BFA:  BRA    7C56
....................             { 
....................                delay_ms(30);Ajuste+=1.0;visual=1; 
07BFC:  MOVLW  1E
07BFE:  MOVLB  6
07C00:  MOVWF  x47
07C02:  MOVLB  0
07C04:  CALL   0E5A
07C08:  MOVLB  6
07C0A:  CLRF   x45
07C0C:  MOVFF  58A,644
07C10:  MOVLB  0
07C12:  CALL   0EA4
07C16:  BCF    FD8.1
07C18:  MOVFF  03,646
07C1C:  MOVFF  02,645
07C20:  MOVFF  01,644
07C24:  MOVFF  00,643
07C28:  MOVLB  6
07C2A:  CLRF   x4A
07C2C:  CLRF   x49
07C2E:  CLRF   x48
07C30:  MOVLW  7F
07C32:  MOVWF  x47
07C34:  MOVLB  0
07C36:  CALL   1038
07C3A:  MOVFF  03,641
07C3E:  MOVFF  02,640
07C42:  MOVFF  01,63F
07C46:  MOVFF  00,63E
07C4A:  CALL   3764
07C4E:  MOVFF  01,58A
07C52:  MOVLB  5
07C54:  BSF    x87.7
....................             } 
....................              
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
07C56:  BSF    F96.0
07C58:  BTFSC  F84.0
07C5A:  BRA    7CBA
....................          {   
....................             if(Ajuste>0) 
07C5C:  MOVF   x8A,F
07C5E:  BZ    7CBA
....................             { 
....................                delay_ms(30);Ajuste-=1.0;visual=1;      
07C60:  MOVLW  1E
07C62:  MOVLB  6
07C64:  MOVWF  x47
07C66:  MOVLB  0
07C68:  CALL   0E5A
07C6C:  MOVLB  6
07C6E:  CLRF   x45
07C70:  MOVFF  58A,644
07C74:  MOVLB  0
07C76:  CALL   0EA4
07C7A:  BSF    FD8.1
07C7C:  MOVFF  03,646
07C80:  MOVFF  02,645
07C84:  MOVFF  01,644
07C88:  MOVFF  00,643
07C8C:  MOVLB  6
07C8E:  CLRF   x4A
07C90:  CLRF   x49
07C92:  CLRF   x48
07C94:  MOVLW  7F
07C96:  MOVWF  x47
07C98:  MOVLB  0
07C9A:  CALL   1038
07C9E:  MOVFF  03,641
07CA2:  MOVFF  02,640
07CA6:  MOVFF  01,63F
07CAA:  MOVFF  00,63E
07CAE:  CALL   3764
07CB2:  MOVFF  01,58A
07CB6:  MOVLB  5
07CB8:  BSF    x87.7
....................             } 
....................              
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
07CBA:  BSF    F96.1
07CBC:  BTFSC  F84.1
07CBE:  BRA    7CD0
....................          {   
....................             delay_ms(30);visual=1; 
07CC0:  MOVLW  1E
07CC2:  MOVLB  6
07CC4:  MOVWF  x47
07CC6:  MOVLB  0
07CC8:  CALL   0E5A
07CCC:  MOVLB  5
07CCE:  BSF    x87.7
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
07CD0:  BSF    F96.2
07CD2:  BTFSC  F84.2
07CD4:  BRA    7D32
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
07CD6:  MOVLW  04
07CD8:  MOVLB  6
07CDA:  MOVWF  x3E
07CDC:  MOVLW  AF
07CDE:  MOVWF  x47
07CE0:  MOVLB  0
07CE2:  CALL   0E5A
07CE6:  MOVLB  6
07CE8:  DECFSZ x3E,F
07CEA:  BRA    7CDC
07CEC:  MOVLW  64
07CEE:  MOVLB  5
07CF0:  MOVWF  x98
07CF2:  MOVLB  6
07CF4:  CLRF   x46
07CF6:  MOVLB  0
07CF8:  CALL   1E7E
07CFC:  MOVLW  01
07CFE:  MOVLB  5
07D00:  MOVWF  x9D
07D02:  BSF    x87.7
....................             write_eeprom(40,Ajuste); 
07D04:  CLRF   FAA
07D06:  MOVLW  28
07D08:  MOVWF  FA9
07D0A:  MOVFF  58A,FA8
07D0E:  BCF    FA6.6
07D10:  BCF    FA6.7
07D12:  BSF    FA6.2
07D14:  MOVF   FF2,W
07D16:  MOVWF  00
07D18:  BCF    FF2.7
07D1A:  MOVLB  F
07D1C:  MOVLW  55
07D1E:  MOVWF  FA7
07D20:  MOVLW  AA
07D22:  MOVWF  FA7
07D24:  BSF    FA6.1
07D26:  BTFSC  FA6.1
07D28:  BRA    7D26
07D2A:  BCF    FA6.2
07D2C:  MOVF   00,W
07D2E:  IORWF  FF2,F
07D30:  MOVLB  5
....................              
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==104){ // Menu de Ajuste de Ajusten=4 
07D32:  MOVF   x98,W
07D34:  SUBLW  68
07D36:  BTFSS  FD8.2
07D38:  BRA    7F04
....................        
....................       if(Ajusten>100) 
07D3A:  MOVF   x8B,W
07D3C:  SUBLW  64
07D3E:  BC    7D42
....................       { 
....................          Ajusten=0; 
07D40:  CLRF   x8B
....................       } 
....................        
....................       if(visual==1) 
07D42:  BTFSS  x87.7
07D44:  BRA    7DAE
....................       { 
....................          glcd_fillScreen(OFF); 
07D46:  MOVLB  6
07D48:  CLRF   x46
07D4A:  MOVLB  0
07D4C:  CALL   1E7E
....................          strcpy(Menus.Letra,"Ajusten"); 
07D50:  MOVLW  06
07D52:  MOVWF  FEA
07D54:  MOVLW  1E
07D56:  MOVWF  FE9
07D58:  MOVFF  FF2,63E
07D5C:  BCF    FF2.7
07D5E:  MOVLW  00
07D60:  CALL   0D7C
07D64:  TBLRD*-
07D66:  TBLRD*+
07D68:  MOVF   FF5,W
07D6A:  MOVWF  FEE
07D6C:  IORLW  00
07D6E:  BNZ   7D66
07D70:  MOVLB  6
07D72:  BTFSC  x3E.7
07D74:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
07D76:  MOVLW  06
07D78:  MOVWF  x47
07D7A:  MOVLW  1E
07D7C:  MOVWF  x46
07D7E:  CLRF   x48
07D80:  CLRF   x49
07D82:  MOVLW  01
07D84:  MOVWF  x4A
07D86:  MOVLW  02
07D88:  MOVWF  x4B
07D8A:  MOVLB  0
07D8C:  CALL   24AC
....................           
....................          displayTemperatura(Ajusten,30,30,0,3); 
07D90:  MOVLB  6
07D92:  CLRF   x41
07D94:  MOVFF  58B,640
07D98:  MOVLW  1E
07D9A:  MOVWF  x42
07D9C:  MOVWF  x43
07D9E:  CLRF   x44
07DA0:  MOVLW  03
07DA2:  MOVWF  x45
07DA4:  MOVLB  0
07DA6:  CALL   385E
....................           
....................          visual=0; 
07DAA:  MOVLB  5
07DAC:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
07DAE:  BSF    F92.5
07DB0:  BTFSC  F80.5
07DB2:  BRA    7E28
....................          {   
....................             if(Ajusten>100) 
07DB4:  MOVF   x8B,W
07DB6:  SUBLW  64
07DB8:  BC    7DCE
....................             { 
....................                Ajusten=100;delay_ms(100);visual=1; 
07DBA:  MOVLW  64
07DBC:  MOVWF  x8B
07DBE:  MOVLB  6
07DC0:  MOVWF  x47
07DC2:  MOVLB  0
07DC4:  CALL   0E5A
07DC8:  MOVLB  5
07DCA:  BSF    x87.7
....................             } 
....................             else 
07DCC:  BRA    7E28
....................             { 
....................                delay_ms(30);Ajusten+=1.0;visual=1; 
07DCE:  MOVLW  1E
07DD0:  MOVLB  6
07DD2:  MOVWF  x47
07DD4:  MOVLB  0
07DD6:  CALL   0E5A
07DDA:  MOVLB  6
07DDC:  CLRF   x45
07DDE:  MOVFF  58B,644
07DE2:  MOVLB  0
07DE4:  CALL   0EA4
07DE8:  BCF    FD8.1
07DEA:  MOVFF  03,646
07DEE:  MOVFF  02,645
07DF2:  MOVFF  01,644
07DF6:  MOVFF  00,643
07DFA:  MOVLB  6
07DFC:  CLRF   x4A
07DFE:  CLRF   x49
07E00:  CLRF   x48
07E02:  MOVLW  7F
07E04:  MOVWF  x47
07E06:  MOVLB  0
07E08:  CALL   1038
07E0C:  MOVFF  03,641
07E10:  MOVFF  02,640
07E14:  MOVFF  01,63F
07E18:  MOVFF  00,63E
07E1C:  CALL   3764
07E20:  MOVFF  01,58B
07E24:  MOVLB  5
07E26:  BSF    x87.7
....................             } 
....................              
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
07E28:  BSF    F96.0
07E2A:  BTFSC  F84.0
07E2C:  BRA    7E8C
....................          {   
....................             if(Ajusten>0) 
07E2E:  MOVF   x8B,F
07E30:  BZ    7E8C
....................             { 
....................                delay_ms(30);Ajusten-=1.0;visual=1;      
07E32:  MOVLW  1E
07E34:  MOVLB  6
07E36:  MOVWF  x47
07E38:  MOVLB  0
07E3A:  CALL   0E5A
07E3E:  MOVLB  6
07E40:  CLRF   x45
07E42:  MOVFF  58B,644
07E46:  MOVLB  0
07E48:  CALL   0EA4
07E4C:  BSF    FD8.1
07E4E:  MOVFF  03,646
07E52:  MOVFF  02,645
07E56:  MOVFF  01,644
07E5A:  MOVFF  00,643
07E5E:  MOVLB  6
07E60:  CLRF   x4A
07E62:  CLRF   x49
07E64:  CLRF   x48
07E66:  MOVLW  7F
07E68:  MOVWF  x47
07E6A:  MOVLB  0
07E6C:  CALL   1038
07E70:  MOVFF  03,641
07E74:  MOVFF  02,640
07E78:  MOVFF  01,63F
07E7C:  MOVFF  00,63E
07E80:  CALL   3764
07E84:  MOVFF  01,58B
07E88:  MOVLB  5
07E8A:  BSF    x87.7
....................             } 
....................              
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
07E8C:  BSF    F96.1
07E8E:  BTFSC  F84.1
07E90:  BRA    7EA2
....................          {   
....................             delay_ms(30);visual=1; 
07E92:  MOVLW  1E
07E94:  MOVLB  6
07E96:  MOVWF  x47
07E98:  MOVLB  0
07E9A:  CALL   0E5A
07E9E:  MOVLB  5
07EA0:  BSF    x87.7
....................              
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
07EA2:  BSF    F96.2
07EA4:  BTFSC  F84.2
07EA6:  BRA    7F04
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
07EA8:  MOVLW  04
07EAA:  MOVLB  6
07EAC:  MOVWF  x3E
07EAE:  MOVLW  AF
07EB0:  MOVWF  x47
07EB2:  MOVLB  0
07EB4:  CALL   0E5A
07EB8:  MOVLB  6
07EBA:  DECFSZ x3E,F
07EBC:  BRA    7EAE
07EBE:  MOVLW  64
07EC0:  MOVLB  5
07EC2:  MOVWF  x98
07EC4:  MOVLB  6
07EC6:  CLRF   x46
07EC8:  MOVLB  0
07ECA:  CALL   1E7E
07ECE:  MOVLW  01
07ED0:  MOVLB  5
07ED2:  MOVWF  x9D
07ED4:  BSF    x87.7
....................             write_eeprom(50,Ajusten); 
07ED6:  CLRF   FAA
07ED8:  MOVLW  32
07EDA:  MOVWF  FA9
07EDC:  MOVFF  58B,FA8
07EE0:  BCF    FA6.6
07EE2:  BCF    FA6.7
07EE4:  BSF    FA6.2
07EE6:  MOVF   FF2,W
07EE8:  MOVWF  00
07EEA:  BCF    FF2.7
07EEC:  MOVLB  F
07EEE:  MOVLW  55
07EF0:  MOVWF  FA7
07EF2:  MOVLW  AA
07EF4:  MOVWF  FA7
07EF6:  BSF    FA6.1
07EF8:  BTFSC  FA6.1
07EFA:  BRA    7EF8
07EFC:  BCF    FA6.2
07EFE:  MOVF   00,W
07F00:  IORWF  FF2,F
07F02:  MOVLB  5
....................              
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==105){ // Menu de Ajuste de Media Movil=20 
07F04:  MOVF   x98,W
07F06:  SUBLW  69
07F08:  BTFSS  FD8.2
07F0A:  BRA    80DC
....................        
....................       if(MediaMovil>80) 
07F0C:  MOVF   x8C,W
07F0E:  SUBLW  50
07F10:  BC    7F16
....................       { 
....................          MediaMovil=10; 
07F12:  MOVLW  0A
07F14:  MOVWF  x8C
....................       } 
....................        
....................       if(visual==1) 
07F16:  BTFSS  x87.7
07F18:  BRA    7F82
....................       { 
....................          glcd_fillScreen(OFF); 
07F1A:  MOVLB  6
07F1C:  CLRF   x46
07F1E:  MOVLB  0
07F20:  CALL   1E7E
....................          strcpy(Menus.Letra,"Media"); 
07F24:  MOVLW  06
07F26:  MOVWF  FEA
07F28:  MOVLW  1E
07F2A:  MOVWF  FE9
07F2C:  MOVFF  FF2,63E
07F30:  BCF    FF2.7
07F32:  MOVLW  00
07F34:  CALL   0DA2
07F38:  TBLRD*-
07F3A:  TBLRD*+
07F3C:  MOVF   FF5,W
07F3E:  MOVWF  FEE
07F40:  IORLW  00
07F42:  BNZ   7F3A
07F44:  MOVLB  6
07F46:  BTFSC  x3E.7
07F48:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
07F4A:  MOVLW  06
07F4C:  MOVWF  x47
07F4E:  MOVLW  1E
07F50:  MOVWF  x46
07F52:  CLRF   x48
07F54:  CLRF   x49
07F56:  MOVLW  01
07F58:  MOVWF  x4A
07F5A:  MOVLW  02
07F5C:  MOVWF  x4B
07F5E:  MOVLB  0
07F60:  CALL   24AC
....................           
....................          displayTemperatura(MediaMovil,30,30,0,3); 
07F64:  MOVLB  6
07F66:  CLRF   x41
07F68:  MOVFF  58C,640
07F6C:  MOVLW  1E
07F6E:  MOVWF  x42
07F70:  MOVWF  x43
07F72:  CLRF   x44
07F74:  MOVLW  03
07F76:  MOVWF  x45
07F78:  MOVLB  0
07F7A:  CALL   385E
....................           
....................          visual=0; 
07F7E:  MOVLB  5
07F80:  BCF    x87.7
....................       } 
....................        
....................          if(UP)//Si oprime hacia arriba 
07F82:  BSF    F92.5
07F84:  BTFSC  F80.5
07F86:  BRA    7FFE
....................          {   
....................             if(MediaMovil>79) 
07F88:  MOVF   x8C,W
07F8A:  SUBLW  4F
07F8C:  BC    7FA4
....................             { 
....................                MediaMovil=79;delay_ms(100);visual=1; 
07F8E:  MOVLW  4F
07F90:  MOVWF  x8C
07F92:  MOVLW  64
07F94:  MOVLB  6
07F96:  MOVWF  x47
07F98:  MOVLB  0
07F9A:  CALL   0E5A
07F9E:  MOVLB  5
07FA0:  BSF    x87.7
....................             } 
....................             else 
07FA2:  BRA    7FFE
....................             { 
....................                delay_ms(30);MediaMovil+=1.0;visual=1; 
07FA4:  MOVLW  1E
07FA6:  MOVLB  6
07FA8:  MOVWF  x47
07FAA:  MOVLB  0
07FAC:  CALL   0E5A
07FB0:  MOVLB  6
07FB2:  CLRF   x45
07FB4:  MOVFF  58C,644
07FB8:  MOVLB  0
07FBA:  CALL   0EA4
07FBE:  BCF    FD8.1
07FC0:  MOVFF  03,646
07FC4:  MOVFF  02,645
07FC8:  MOVFF  01,644
07FCC:  MOVFF  00,643
07FD0:  MOVLB  6
07FD2:  CLRF   x4A
07FD4:  CLRF   x49
07FD6:  CLRF   x48
07FD8:  MOVLW  7F
07FDA:  MOVWF  x47
07FDC:  MOVLB  0
07FDE:  CALL   1038
07FE2:  MOVFF  03,641
07FE6:  MOVFF  02,640
07FEA:  MOVFF  01,63F
07FEE:  MOVFF  00,63E
07FF2:  CALL   3764
07FF6:  MOVFF  01,58C
07FFA:  MOVLB  5
07FFC:  BSF    x87.7
....................             } 
....................              
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
07FFE:  BSF    F96.0
08000:  BTFSC  F84.0
08002:  BRA    8064
....................          {   
....................             if(MediaMovil>1) 
08004:  MOVF   x8C,W
08006:  SUBLW  01
08008:  BC    8064
....................             { 
....................                delay_ms(30);MediaMovil-=1.0;visual=1;      
0800A:  MOVLW  1E
0800C:  MOVLB  6
0800E:  MOVWF  x47
08010:  MOVLB  0
08012:  CALL   0E5A
08016:  MOVLB  6
08018:  CLRF   x45
0801A:  MOVFF  58C,644
0801E:  MOVLB  0
08020:  CALL   0EA4
08024:  BSF    FD8.1
08026:  MOVFF  03,646
0802A:  MOVFF  02,645
0802E:  MOVFF  01,644
08032:  MOVFF  00,643
08036:  MOVLB  6
08038:  CLRF   x4A
0803A:  CLRF   x49
0803C:  CLRF   x48
0803E:  MOVLW  7F
08040:  MOVWF  x47
08042:  MOVLB  0
08044:  CALL   1038
08048:  MOVFF  03,641
0804C:  MOVFF  02,640
08050:  MOVFF  01,63F
08054:  MOVFF  00,63E
08058:  CALL   3764
0805C:  MOVFF  01,58C
08060:  MOVLB  5
08062:  BSF    x87.7
....................             } 
....................              
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
08064:  BSF    F96.1
08066:  BTFSC  F84.1
08068:  BRA    807A
....................          {   
....................             delay_ms(30);visual=1; 
0806A:  MOVLW  1E
0806C:  MOVLB  6
0806E:  MOVWF  x47
08070:  MOVLB  0
08072:  CALL   0E5A
08076:  MOVLB  5
08078:  BSF    x87.7
....................              
....................          }  
....................                    
....................          if(LEFT)//Si oprime boton de Toma. 
0807A:  BSF    F96.2
0807C:  BTFSC  F84.2
0807E:  BRA    80DC
....................          { 
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08080:  MOVLW  04
08082:  MOVLB  6
08084:  MOVWF  x3E
08086:  MOVLW  AF
08088:  MOVWF  x47
0808A:  MOVLB  0
0808C:  CALL   0E5A
08090:  MOVLB  6
08092:  DECFSZ x3E,F
08094:  BRA    8086
08096:  MOVLW  64
08098:  MOVLB  5
0809A:  MOVWF  x98
0809C:  MOVLB  6
0809E:  CLRF   x46
080A0:  MOVLB  0
080A2:  CALL   1E7E
080A6:  MOVLW  01
080A8:  MOVLB  5
080AA:  MOVWF  x9D
080AC:  BSF    x87.7
....................             write_eeprom(60,MediaMovil); 
080AE:  CLRF   FAA
080B0:  MOVLW  3C
080B2:  MOVWF  FA9
080B4:  MOVFF  58C,FA8
080B8:  BCF    FA6.6
080BA:  BCF    FA6.7
080BC:  BSF    FA6.2
080BE:  MOVF   FF2,W
080C0:  MOVWF  00
080C2:  BCF    FF2.7
080C4:  MOVLB  F
080C6:  MOVLW  55
080C8:  MOVWF  FA7
080CA:  MOVLW  AA
080CC:  MOVWF  FA7
080CE:  BSF    FA6.1
080D0:  BTFSC  FA6.1
080D2:  BRA    80D0
080D4:  BCF    FA6.2
080D6:  MOVF   00,W
080D8:  IORWF  FF2,F
080DA:  MOVLB  5
....................              
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................       if(tiemporeset>=60){ 
080DC:  MOVF   x96,W
080DE:  SUBLW  3B
080E0:  BC    80F2
....................          glcd_init(ON); 
080E2:  MOVLW  01
080E4:  MOVLB  6
080E6:  MOVWF  x3E
080E8:  MOVLB  0
080EA:  CALL   1F90
....................          tiemporeset=0; 
080EE:  MOVLB  5
080F0:  CLRF   x96
....................       }  
....................        
....................    } 
080F2:  GOTO   5196
.................... } 
080F6:  SLEEP 

Configuration Fuses:
   Word  1: 0200   HS NOIESO NOFCMEN
   Word  2: 1E1F   BROWNOUT NOWDT BORV20 NOPUT WDT32768
   Word  3: 0000   NOPBADEN NOLPT1OSC NOMCLR
   Word  4: 00B0   NOSTVREN NODEBUG NOLVP NOXINST BBSIZ4K
   Word  5: C03F   NOPROTECT NOCPD NOCPB
   Word  6: E03F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 403F   NOEBTR NOEBTRB
