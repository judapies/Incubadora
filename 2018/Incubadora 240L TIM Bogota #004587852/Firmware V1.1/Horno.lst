CCS PCH C Compiler, Version 4.104, 5967               22-oct.-18 15:27

               Filename: H:\JP\JP\Laboratorio\Incubadora\2018\Incubadora 240L TIM Bogota #004587852\Firmware V1.1\Horno.lst

               ROM used: 38934 bytes (40%)
                         Largest free fragment is 32768
               RAM used: 1629 (49%) at main() level
                         1687 (51%) worst case
               Stack:    7 worst case (6 in main + 1 for interrupts)

*
00000:  GOTO   5898
*
00008:  MOVWF  04
0000A:  MOVFF  FD8,05
0000E:  MOVFF  FE0,06
00012:  MOVLB  0
00014:  MOVFF  FE9,0C
00018:  MOVFF  FEA,07
0001C:  MOVFF  FE1,08
00020:  MOVFF  FE2,09
00024:  MOVFF  FD9,0A
00028:  MOVFF  FDA,0B
0002C:  MOVFF  FF3,12
00030:  MOVFF  FF4,13
00034:  MOVFF  FFA,14
00038:  MOVFF  FFB,15
0003C:  MOVFF  00,0E
00040:  MOVFF  01,0F
00044:  MOVFF  02,10
00048:  MOVFF  03,11
0004C:  BTFSS  F9D.0
0004E:  GOTO   0058
00052:  BTFSC  F9E.0
00054:  GOTO   0FBE
00058:  MOVFF  0E,00
0005C:  MOVFF  0F,01
00060:  MOVFF  10,02
00064:  MOVFF  11,03
00068:  MOVFF  0C,FE9
0006C:  MOVFF  07,FEA
00070:  BSF    07.7
00072:  MOVFF  08,FE1
00076:  MOVFF  09,FE2
0007A:  MOVFF  0A,FD9
0007E:  MOVFF  0B,FDA
00082:  MOVFF  12,FF3
00086:  MOVFF  13,FF4
0008A:  MOVFF  14,FFA
0008E:  MOVFF  15,FFB
00092:  MOVF   04,W
00094:  MOVFF  06,FE0
00098:  MOVFF  05,FD8
0009C:  RETFIE 0
.................... /// Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4685.h> 
.................... //////// Standard Header file for the PIC18F4685 device //////////////// 
.................... #device PIC18F4685 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP,NODEBUG,NOSTVREN,NOPUT,NOCPD,NOWRT,NOIESO,NOFCMEN,NOPBADEN,NOWRTC,NOWRTB,NOEBTR,NOEBTRB,NOCPB,NOXINST,NOLPT1OSC,NOMCLR 
.................... #use delay(clock=20000000) 
*
01052:  MOVLW  06
01054:  MOVWF  FEA
01056:  MOVLW  62
01058:  MOVWF  FE9
0105A:  MOVF   FEF,W
0105C:  BZ    1078
0105E:  MOVLW  06
01060:  MOVWF  01
01062:  CLRF   00
01064:  DECFSZ 00,F
01066:  BRA    1064
01068:  DECFSZ 01,F
0106A:  BRA    1062
0106C:  MOVLW  7B
0106E:  MOVWF  00
01070:  DECFSZ 00,F
01072:  BRA    1070
01074:  DECFSZ FEF,F
01076:  BRA    105E
01078:  RETLW  00
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B0   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B1   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B4   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B3   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
026CE:  BCF    F93.2
026D0:  BSF    F8A.2
....................    output_low(GLCD_E); 
026D2:  BCF    F93.3
026D4:  BCF    F8A.3
....................    output_low(GLCD_CS1); 
026D6:  BCF    F93.0
026D8:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
026DA:  BCF    F93.1
026DC:  BCF    F8A.1
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
026DE:  BCF    F93.5
026E0:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
026E2:  MOVLB  6
026E4:  CLRF   x73
026E6:  MOVLW  C0
026E8:  MOVWF  x74
026EA:  MOVLB  0
026EC:  RCALL  2586
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
026EE:  MOVLW  01
026F0:  MOVLB  6
026F2:  MOVWF  x73
026F4:  MOVLW  C0
026F6:  MOVWF  x74
026F8:  MOVLB  0
026FA:  RCALL  2586
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
026FC:  MOVLB  6
026FE:  CLRF   x73
02700:  MOVLW  40
02702:  MOVWF  x74
02704:  MOVLB  0
02706:  RCALL  2586
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
02708:  MOVLW  01
0270A:  MOVLB  6
0270C:  MOVWF  x73
0270E:  MOVLW  40
02710:  MOVWF  x74
02712:  MOVLB  0
02714:  RCALL  2586
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
02716:  MOVLB  6
02718:  CLRF   x73
0271A:  MOVLW  B8
0271C:  MOVWF  x74
0271E:  MOVLB  0
02720:  RCALL  2586
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
02722:  MOVLW  01
02724:  MOVLB  6
02726:  MOVWF  x73
02728:  MOVLW  B8
0272A:  MOVWF  x74
0272C:  MOVLB  0
0272E:  RCALL  2586
....................  
....................    if(mode == ON) 
02730:  MOVLB  6
02732:  DECFSZ x59,W
02734:  BRA    2752
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
02736:  CLRF   x73
02738:  MOVLW  3F
0273A:  MOVWF  x74
0273C:  MOVLB  0
0273E:  RCALL  2586
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
02740:  MOVLW  01
02742:  MOVLB  6
02744:  MOVWF  x73
02746:  MOVLW  3F
02748:  MOVWF  x74
0274A:  MOVLB  0
0274C:  RCALL  2586
....................    } 
....................    else 
0274E:  BRA    276A
02750:  MOVLB  6
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
02752:  CLRF   x73
02754:  MOVLW  3E
02756:  MOVWF  x74
02758:  MOVLB  0
0275A:  RCALL  2586
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
0275C:  MOVLW  01
0275E:  MOVLB  6
02760:  MOVWF  x73
02762:  MOVLW  3E
02764:  MOVWF  x74
02766:  MOVLB  0
02768:  RCALL  2586
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
0276A:  MOVLB  6
0276C:  CLRF   x61
0276E:  MOVLB  0
02770:  RCALL  25BC
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
02772:  RCALL  2616
....................    #endif 
.................... } 
02774:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
02616:  MOVLB  6
02618:  CLRF   x6F
0261A:  MOVLW  17
0261C:  MOVWF  x6E
....................    p2 = displayData.right; 
0261E:  MOVLW  02
02620:  MOVWF  x71
02622:  MOVLW  17
02624:  MOVWF  x70
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
02626:  CLRF   x6C
02628:  MOVF   x6C,W
0262A:  SUBLW  07
0262C:  BNC   26CA
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
0262E:  BCF    F93.5
02630:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
02632:  CLRF   x73
02634:  MOVLW  40
02636:  MOVWF  x74
02638:  MOVLB  0
0263A:  RCALL  2586
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
0263C:  MOVLW  01
0263E:  MOVLB  6
02640:  MOVWF  x73
02642:  MOVLW  40
02644:  MOVWF  x74
02646:  MOVLB  0
02648:  RCALL  2586
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
0264A:  MOVLB  6
0264C:  MOVF   x6C,W
0264E:  IORLW  B8
02650:  MOVWF  x72
02652:  CLRF   x73
02654:  MOVWF  x74
02656:  MOVLB  0
02658:  RCALL  2586
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
0265A:  MOVLB  6
0265C:  MOVF   x6C,W
0265E:  IORLW  B8
02660:  MOVWF  x72
02662:  MOVLW  01
02664:  MOVWF  x73
02666:  MOVFF  672,674
0266A:  MOVLB  0
0266C:  RCALL  2586
....................       output_high(GLCD_DI);                     // Set for data 
0266E:  BCF    F93.5
02670:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
02672:  MOVLB  6
02674:  CLRF   x6D
02676:  MOVF   x6D,W
02678:  SUBLW  3F
0267A:  BNC   26C6
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
0267C:  MOVFF  66F,03
02680:  MOVF   x6E,W
02682:  INCF   x6E,F
02684:  BTFSC  FD8.2
02686:  INCF   x6F,F
02688:  MOVWF  FE9
0268A:  MOVFF  03,FEA
0268E:  MOVFF  FEF,672
02692:  CLRF   x73
02694:  MOVFF  672,674
02698:  MOVLB  0
0269A:  RCALL  2586
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
0269C:  MOVLB  6
0269E:  MOVFF  671,03
026A2:  MOVF   x70,W
026A4:  INCF   x70,F
026A6:  BTFSC  FD8.2
026A8:  INCF   x71,F
026AA:  MOVWF  FE9
026AC:  MOVFF  03,FEA
026B0:  MOVFF  FEF,672
026B4:  MOVLW  01
026B6:  MOVWF  x73
026B8:  MOVFF  672,674
026BC:  MOVLB  0
026BE:  RCALL  2586
....................       } 
026C0:  MOVLB  6
026C2:  INCF   x6D,F
026C4:  BRA    2676
....................    } 
026C6:  INCF   x6C,F
026C8:  BRA    2628
.................... } 
026CA:  MOVLB  0
026CC:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
02776:  MOVLB  6
02778:  CLRF   x93
0277A:  RRCF   x8E,W
0277C:  MOVWF  x92
0277E:  RRCF   x92,F
02780:  RRCF   x92,F
02782:  MOVLW  1F
02784:  ANDWF  x92,F
....................    temp *= 64; 
02786:  RLCF   x92,F
02788:  RLCF   x93,F
0278A:  RLCF   x92,F
0278C:  RLCF   x93,F
0278E:  RLCF   x92,F
02790:  RLCF   x93,F
02792:  RLCF   x92,F
02794:  RLCF   x93,F
02796:  RLCF   x92,F
02798:  RLCF   x93,F
0279A:  RLCF   x92,F
0279C:  RLCF   x93,F
0279E:  MOVLW  C0
027A0:  ANDWF  x92,F
....................    temp += x; 
027A2:  MOVF   x8D,W
027A4:  ADDWF  x92,F
027A6:  MOVLW  00
027A8:  ADDWFC x93,F
....................  
....................    if(x > 63) 
027AA:  MOVF   x8D,W
027AC:  SUBLW  3F
027AE:  BC    27CA
....................    { 
....................       p = displayData.right + temp - 64; 
027B0:  MOVLW  17
027B2:  ADDWF  x92,W
027B4:  MOVWF  x94
027B6:  MOVLW  02
027B8:  ADDWFC x93,W
027BA:  MOVWF  x95
027BC:  MOVLW  40
027BE:  SUBWF  x94,W
027C0:  MOVWF  x90
027C2:  MOVLW  00
027C4:  SUBWFB x95,W
027C6:  MOVWF  x91
....................    } 
....................    else 
027C8:  BRA    27D6
....................    { 
....................       p = displayData.left + temp; 
027CA:  MOVLW  17
027CC:  ADDWF  x92,W
027CE:  MOVWF  x90
027D0:  MOVLW  00
027D2:  ADDWFC x93,W
027D4:  MOVWF  x91
....................    } 
....................  
....................    if(color) 
027D6:  MOVF   x8F,F
027D8:  BZ    2804
....................    { 
....................       bit_set(*p, y%8); 
027DA:  MOVFF  691,03
027DE:  MOVFF  690,FE9
027E2:  MOVFF  691,FEA
027E6:  MOVF   x8E,W
027E8:  ANDLW  07
027EA:  MOVWF  x94
027EC:  MOVLW  01
027EE:  MOVWF  00
027F0:  MOVF   x94,W
027F2:  MOVWF  01
027F4:  BZ    27FE
027F6:  BCF    FD8.0
027F8:  RLCF   00,F
027FA:  DECFSZ 01,F
027FC:  BRA    27F6
027FE:  MOVF   00,W
02800:  IORWF  FEF,F
....................    } 
....................    else 
02802:  BRA    282E
....................    { 
....................       bit_clear(*p, y%8); 
02804:  MOVFF  691,03
02808:  MOVFF  690,FE9
0280C:  MOVFF  691,FEA
02810:  MOVF   x8E,W
02812:  ANDLW  07
02814:  MOVWF  x94
02816:  MOVLW  01
02818:  MOVWF  00
0281A:  MOVF   x94,W
0281C:  MOVWF  01
0281E:  BZ    2828
02820:  BCF    FD8.0
02822:  RLCF   00,F
02824:  DECFSZ 01,F
02826:  BRA    2820
02828:  MOVF   00,W
0282A:  XORLW  FF
0282C:  ANDWF  FEF,F
....................    } 
.................... } 
0282E:  MOVLB  0
02830:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
025BC:  MOVLB  6
025BE:  CLRF   x64
025C0:  MOVLW  17
025C2:  MOVWF  x63
....................    p2 = displayData.right; 
025C4:  MOVLW  02
025C6:  MOVWF  x66
025C8:  MOVLW  17
025CA:  MOVWF  x65
....................    data = 0xFF * color; 
025CC:  MOVF   x61,W
025CE:  MULLW  FF
025D0:  MOVFF  FF3,662
....................  
....................    for(i=0; i<512; ++i) 
025D4:  CLRF   x68
025D6:  CLRF   x67
025D8:  MOVF   x68,W
025DA:  SUBLW  01
025DC:  BNC   2612
....................    { 
....................       *p1++ = data; 
025DE:  MOVFF  664,03
025E2:  MOVF   x63,W
025E4:  INCF   x63,F
025E6:  BTFSC  FD8.2
025E8:  INCF   x64,F
025EA:  MOVWF  FE9
025EC:  MOVFF  03,FEA
025F0:  MOVFF  662,FEF
....................       *p2++ = data; 
025F4:  MOVFF  666,03
025F8:  MOVF   x65,W
025FA:  INCF   x65,F
025FC:  BTFSC  FD8.2
025FE:  INCF   x66,F
02600:  MOVWF  FE9
02602:  MOVFF  03,FEA
02606:  MOVFF  662,FEF
....................    } 
0260A:  INCF   x67,F
0260C:  BTFSC  FD8.2
0260E:  INCF   x68,F
02610:  BRA    25D8
.................... } 
02612:  MOVLB  0
02614:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
02586:  MOVLB  6
02588:  MOVF   x73,F
0258A:  BZ    2592
....................       output_high(GLCD_CS2); 
0258C:  BCF    F93.1
0258E:  BSF    F8A.1
....................    else 
02590:  BRA    2596
....................       output_high(GLCD_CS1); 
02592:  BCF    F93.0
02594:  BSF    F8A.0
....................  
....................    output_low(GLCD_RW);       // Set for writing 
02596:  BCF    F93.4
02598:  BCF    F8A.4
....................    output_d(data);            // Put the data on the port 
0259A:  CLRF   F95
0259C:  MOVFF  674,F8C
....................    delay_cycles(1); 
025A0:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
025A2:  BCF    F93.3
025A4:  BSF    F8A.3
....................    delay_cycles(5); 
025A6:  BRA    25A8
025A8:  BRA    25AA
025AA:  NOP   
....................    output_low(GLCD_E); 
025AC:  BCF    F93.3
025AE:  BCF    F8A.3
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
025B0:  BCF    F93.0
025B2:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
025B4:  BCF    F93.1
025B6:  BCF    F8A.1
.................... } 
025B8:  MOVLB  0
025BA:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(1); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(4); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
029EA:  MOVLW  01
029EC:  MOVLB  6
029EE:  MOVWF  x86
029F0:  MOVWF  x87
029F2:  CLRF   x8C
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
029F4:  MOVF   x7D,W
029F6:  SUBWF  x7F,W
029F8:  MOVWF  x8D
029FA:  MOVF   x8D,W
029FC:  BTFSS  x8D.7
029FE:  BRA    2A06
02A00:  MOVLW  00
02A02:  BSF    FD8.0
02A04:  SUBFWB x8D,W
02A06:  CLRF   03
02A08:  MOVWF  x84
02A0A:  MOVFF  03,685
....................    dy = abs((signed int8)(y2 - y1)); 
02A0E:  MOVF   x7E,W
02A10:  SUBWF  x80,W
02A12:  MOVWF  x8D
02A14:  MOVF   x8D,W
02A16:  BTFSS  x8D.7
02A18:  BRA    2A20
02A1A:  MOVLW  00
02A1C:  BSF    FD8.0
02A1E:  SUBFWB x8D,W
02A20:  CLRF   03
02A22:  MOVWF  x82
02A24:  MOVFF  03,683
....................    #endif 
....................  
....................    if(x1 > x2) 
02A28:  MOVF   x7D,W
02A2A:  SUBWF  x7F,W
02A2C:  BC    2A32
....................       addx = -1; 
02A2E:  MOVLW  FF
02A30:  MOVWF  x86
....................    if(y1 > y2) 
02A32:  MOVF   x7E,W
02A34:  SUBWF  x80,W
02A36:  BC    2A3C
....................       addy = -1; 
02A38:  MOVLW  FF
02A3A:  MOVWF  x87
....................  
....................    if(dx >= dy) 
02A3C:  MOVF   x83,W
02A3E:  SUBWF  x85,W
02A40:  BNC   2AB8
02A42:  BNZ   2A4A
02A44:  MOVF   x82,W
02A46:  SUBWF  x84,W
02A48:  BNC   2AB8
....................    { 
....................       dy *= 2; 
02A4A:  BCF    FD8.0
02A4C:  RLCF   x82,F
02A4E:  RLCF   x83,F
....................       P = dy - dx; 
02A50:  MOVF   x84,W
02A52:  SUBWF  x82,W
02A54:  MOVWF  00
02A56:  MOVF   x85,W
02A58:  SUBWFB x83,W
02A5A:  MOVFF  00,688
02A5E:  MOVWF  x89
....................       diff = P - dx; 
02A60:  MOVF   x84,W
02A62:  SUBWF  x88,W
02A64:  MOVWF  x8A
02A66:  MOVF   x85,W
02A68:  SUBWFB x89,W
02A6A:  MOVWF  x8B
....................  
....................       for(; i<=dx; ++i) 
02A6C:  MOVF   x85,F
02A6E:  BNZ   2A76
02A70:  MOVF   x8C,W
02A72:  SUBWF  x84,W
02A74:  BNC   2AB6
....................       { 
....................          glcd_pixel(x1, y1, color); 
02A76:  MOVFF  67D,68D
02A7A:  MOVFF  67E,68E
02A7E:  MOVFF  681,68F
02A82:  MOVLB  0
02A84:  RCALL  2776
....................  
....................          if(P < 0) 
02A86:  MOVLB  6
02A88:  BTFSC  x89.7
02A8A:  BRA    2A8E
02A8C:  BRA    2A9E
....................          { 
....................             P  += dy; 
02A8E:  MOVF   x82,W
02A90:  ADDWF  x88,F
02A92:  MOVF   x83,W
02A94:  ADDWFC x89,F
....................             x1 += addx; 
02A96:  MOVF   x86,W
02A98:  ADDWF  x7D,W
02A9A:  MOVWF  x7D
....................          } 
....................          else 
02A9C:  BRA    2AB2
....................          { 
....................             P  += diff; 
02A9E:  MOVF   x8A,W
02AA0:  ADDWF  x88,F
02AA2:  MOVF   x8B,W
02AA4:  ADDWFC x89,F
....................             x1 += addx; 
02AA6:  MOVF   x86,W
02AA8:  ADDWF  x7D,W
02AAA:  MOVWF  x7D
....................             y1 += addy; 
02AAC:  MOVF   x87,W
02AAE:  ADDWF  x7E,W
02AB0:  MOVWF  x7E
....................          } 
....................       } 
02AB2:  INCF   x8C,F
02AB4:  BRA    2A6C
....................    } 
....................    else 
02AB6:  BRA    2B24
....................    { 
....................       dx *= 2; 
02AB8:  BCF    FD8.0
02ABA:  RLCF   x84,F
02ABC:  RLCF   x85,F
....................       P = dx - dy; 
02ABE:  MOVF   x82,W
02AC0:  SUBWF  x84,W
02AC2:  MOVWF  00
02AC4:  MOVF   x83,W
02AC6:  SUBWFB x85,W
02AC8:  MOVFF  00,688
02ACC:  MOVWF  x89
....................       diff = P - dy; 
02ACE:  MOVF   x82,W
02AD0:  SUBWF  x88,W
02AD2:  MOVWF  x8A
02AD4:  MOVF   x83,W
02AD6:  SUBWFB x89,W
02AD8:  MOVWF  x8B
....................  
....................       for(; i<=dy; ++i) 
02ADA:  MOVF   x83,F
02ADC:  BNZ   2AE4
02ADE:  MOVF   x8C,W
02AE0:  SUBWF  x82,W
02AE2:  BNC   2B24
....................       { 
....................          glcd_pixel(x1, y1, color); 
02AE4:  MOVFF  67D,68D
02AE8:  MOVFF  67E,68E
02AEC:  MOVFF  681,68F
02AF0:  MOVLB  0
02AF2:  RCALL  2776
....................  
....................          if(P < 0) 
02AF4:  MOVLB  6
02AF6:  BTFSC  x89.7
02AF8:  BRA    2AFC
02AFA:  BRA    2B0C
....................          { 
....................             P  += dx; 
02AFC:  MOVF   x84,W
02AFE:  ADDWF  x88,F
02B00:  MOVF   x85,W
02B02:  ADDWFC x89,F
....................             y1 += addy; 
02B04:  MOVF   x87,W
02B06:  ADDWF  x7E,W
02B08:  MOVWF  x7E
....................          } 
....................          else 
02B0A:  BRA    2B20
....................          { 
....................             P  += diff; 
02B0C:  MOVF   x8A,W
02B0E:  ADDWF  x88,F
02B10:  MOVF   x8B,W
02B12:  ADDWFC x89,F
....................             x1 += addx; 
02B14:  MOVF   x86,W
02B16:  ADDWF  x7D,W
02B18:  MOVWF  x7D
....................             y1 += addy; 
02B1A:  MOVF   x87,W
02B1C:  ADDWF  x7E,W
02B1E:  MOVWF  x7E
....................          } 
....................       } 
02B20:  INCF   x8C,F
02B22:  BRA    2ADA
....................    } 
.................... } 
02B24:  MOVLB  0
02B26:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
02B28:  MOVLB  6
02B2A:  MOVF   x76,F
02B2C:  BZ    2B8A
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
02B2E:  MOVF   x74,W
02B30:  SUBWF  x72,W
02B32:  BC    2B3E
....................       { 
....................          xmin = x1; 
02B34:  MOVFF  672,679
....................          xmax = x2; 
02B38:  MOVFF  674,67A
....................       } 
....................       else 
02B3C:  BRA    2B46
....................       { 
....................          xmin = x2; 
02B3E:  MOVFF  674,679
....................          xmax = x1; 
02B42:  MOVFF  672,67A
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
02B46:  MOVF   x75,W
02B48:  SUBWF  x73,W
02B4A:  BC    2B56
....................       { 
....................          ymin = y1; 
02B4C:  MOVFF  673,67B
....................          ymax = y2; 
02B50:  MOVFF  675,67C
....................       } 
....................       else 
02B54:  BRA    2B5E
....................       { 
....................          ymin = y2; 
02B56:  MOVFF  675,67B
....................          ymax = y1; 
02B5A:  MOVFF  673,67C
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
02B5E:  MOVF   x79,W
02B60:  SUBWF  x7A,W
02B62:  BNC   2B88
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
02B64:  MOVFF  67B,678
02B68:  MOVF   x78,W
02B6A:  SUBWF  x7C,W
02B6C:  BNC   2B84
....................          { 
....................             glcd_pixel(xmin, i, color); 
02B6E:  MOVFF  679,68D
02B72:  MOVFF  678,68E
02B76:  MOVFF  677,68F
02B7A:  MOVLB  0
02B7C:  RCALL  2776
....................          } 
02B7E:  MOVLB  6
02B80:  INCF   x78,F
02B82:  BRA    2B68
....................       } 
02B84:  INCF   x79,F
02B86:  BRA    2B5E
....................    } 
....................    else 
02B88:  BRA    2BE6
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
02B8A:  MOVFF  672,67D
02B8E:  MOVFF  673,67E
02B92:  MOVFF  674,67F
02B96:  MOVFF  673,680
02B9A:  MOVFF  677,681
02B9E:  MOVLB  0
02BA0:  RCALL  29EA
....................       glcd_line(x1, y2, x2, y2, color); 
02BA2:  MOVFF  672,67D
02BA6:  MOVFF  675,67E
02BAA:  MOVFF  674,67F
02BAE:  MOVFF  675,680
02BB2:  MOVFF  677,681
02BB6:  RCALL  29EA
....................       glcd_line(x1, y1, x1, y2, color); 
02BB8:  MOVFF  672,67D
02BBC:  MOVFF  673,67E
02BC0:  MOVFF  672,67F
02BC4:  MOVFF  675,680
02BC8:  MOVFF  677,681
02BCC:  RCALL  29EA
....................       glcd_line(x2, y1, x2, y2, color); 
02BCE:  MOVFF  674,67D
02BD2:  MOVFF  673,67E
02BD6:  MOVFF  674,67F
02BDA:  MOVFF  675,680
02BDE:  MOVFF  677,681
02BE2:  RCALL  29EA
02BE4:  MOVLB  6
....................    } 
.................... } 
02BE6:  MOVLB  0
02BE8:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
040DE:  MOVLB  6
040E0:  CLRF   x73
....................    b = radius; 
040E2:  MOVFF  670,674
....................    P = 1 - radius; 
040E6:  MOVLW  01
040E8:  BSF    FD8.0
040EA:  SUBFWB x70,W
040EC:  MOVWF  x75
....................  
....................    do 
....................    { 
....................       if(fill) 
040EE:  MOVF   x71,F
040F0:  BZ    41BC
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
040F2:  MOVF   x73,W
040F4:  SUBWF  x6E,W
040F6:  MOVWF  x76
040F8:  MOVF   x74,W
040FA:  ADDWF  x6F,W
040FC:  MOVWF  x77
040FE:  MOVF   x73,W
04100:  ADDWF  x6E,W
04102:  MOVWF  x78
04104:  MOVF   x74,W
04106:  ADDWF  x6F,W
04108:  MOVWF  x79
0410A:  MOVFF  676,67D
0410E:  MOVFF  677,67E
04112:  MOVFF  678,67F
04116:  MOVWF  x80
04118:  MOVFF  672,681
0411C:  MOVLB  0
0411E:  CALL   29EA
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
04122:  MOVLB  6
04124:  MOVF   x73,W
04126:  SUBWF  x6E,W
04128:  MOVWF  x76
0412A:  MOVF   x74,W
0412C:  SUBWF  x6F,W
0412E:  MOVWF  x77
04130:  MOVF   x73,W
04132:  ADDWF  x6E,W
04134:  MOVWF  x78
04136:  MOVF   x74,W
04138:  SUBWF  x6F,W
0413A:  MOVWF  x79
0413C:  MOVFF  676,67D
04140:  MOVFF  677,67E
04144:  MOVFF  678,67F
04148:  MOVWF  x80
0414A:  MOVFF  672,681
0414E:  MOVLB  0
04150:  CALL   29EA
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
04154:  MOVLB  6
04156:  MOVF   x74,W
04158:  SUBWF  x6E,W
0415A:  MOVWF  x76
0415C:  MOVF   x73,W
0415E:  ADDWF  x6F,W
04160:  MOVWF  x77
04162:  MOVF   x74,W
04164:  ADDWF  x6E,W
04166:  MOVWF  x78
04168:  MOVF   x73,W
0416A:  ADDWF  x6F,W
0416C:  MOVWF  x79
0416E:  MOVFF  676,67D
04172:  MOVFF  677,67E
04176:  MOVFF  678,67F
0417A:  MOVWF  x80
0417C:  MOVFF  672,681
04180:  MOVLB  0
04182:  CALL   29EA
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
04186:  MOVLB  6
04188:  MOVF   x74,W
0418A:  SUBWF  x6E,W
0418C:  MOVWF  x76
0418E:  MOVF   x73,W
04190:  SUBWF  x6F,W
04192:  MOVWF  x77
04194:  MOVF   x74,W
04196:  ADDWF  x6E,W
04198:  MOVWF  x78
0419A:  MOVF   x73,W
0419C:  SUBWF  x6F,W
0419E:  MOVWF  x79
041A0:  MOVFF  676,67D
041A4:  MOVFF  677,67E
041A8:  MOVFF  678,67F
041AC:  MOVWF  x80
041AE:  MOVFF  672,681
041B2:  MOVLB  0
041B4:  CALL   29EA
....................       } 
....................       else 
041B8:  BRA    42AA
041BA:  MOVLB  6
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
041BC:  MOVF   x6E,W
041BE:  ADDWF  x73,W
041C0:  MOVWF  x76
041C2:  MOVF   x6F,W
041C4:  ADDWF  x74,W
041C6:  MOVWF  x77
041C8:  MOVFF  676,68D
041CC:  MOVWF  x8E
041CE:  MOVFF  672,68F
041D2:  MOVLB  0
041D4:  CALL   2776
....................          glcd_pixel(b+x, a+y, color); 
041D8:  MOVLB  6
041DA:  MOVF   x6E,W
041DC:  ADDWF  x74,W
041DE:  MOVWF  x76
041E0:  MOVF   x6F,W
041E2:  ADDWF  x73,W
041E4:  MOVWF  x77
041E6:  MOVFF  676,68D
041EA:  MOVWF  x8E
041EC:  MOVFF  672,68F
041F0:  MOVLB  0
041F2:  CALL   2776
....................          glcd_pixel(x-a, b+y, color); 
041F6:  MOVLB  6
041F8:  MOVF   x73,W
041FA:  SUBWF  x6E,W
041FC:  MOVWF  x76
041FE:  MOVF   x6F,W
04200:  ADDWF  x74,W
04202:  MOVWF  x77
04204:  MOVFF  676,68D
04208:  MOVWF  x8E
0420A:  MOVFF  672,68F
0420E:  MOVLB  0
04210:  CALL   2776
....................          glcd_pixel(x-b, a+y, color); 
04214:  MOVLB  6
04216:  MOVF   x74,W
04218:  SUBWF  x6E,W
0421A:  MOVWF  x76
0421C:  MOVF   x6F,W
0421E:  ADDWF  x73,W
04220:  MOVWF  x77
04222:  MOVFF  676,68D
04226:  MOVWF  x8E
04228:  MOVFF  672,68F
0422C:  MOVLB  0
0422E:  CALL   2776
....................          glcd_pixel(b+x, y-a, color); 
04232:  MOVLB  6
04234:  MOVF   x6E,W
04236:  ADDWF  x74,W
04238:  MOVWF  x76
0423A:  MOVF   x73,W
0423C:  SUBWF  x6F,W
0423E:  MOVWF  x77
04240:  MOVFF  676,68D
04244:  MOVWF  x8E
04246:  MOVFF  672,68F
0424A:  MOVLB  0
0424C:  CALL   2776
....................          glcd_pixel(a+x, y-b, color); 
04250:  MOVLB  6
04252:  MOVF   x6E,W
04254:  ADDWF  x73,W
04256:  MOVWF  x76
04258:  MOVF   x74,W
0425A:  SUBWF  x6F,W
0425C:  MOVWF  x77
0425E:  MOVFF  676,68D
04262:  MOVWF  x8E
04264:  MOVFF  672,68F
04268:  MOVLB  0
0426A:  CALL   2776
....................          glcd_pixel(x-a, y-b, color); 
0426E:  MOVLB  6
04270:  MOVF   x73,W
04272:  SUBWF  x6E,W
04274:  MOVWF  x76
04276:  MOVF   x74,W
04278:  SUBWF  x6F,W
0427A:  MOVWF  x77
0427C:  MOVFF  676,68D
04280:  MOVWF  x8E
04282:  MOVFF  672,68F
04286:  MOVLB  0
04288:  CALL   2776
....................          glcd_pixel(x-b, y-a, color); 
0428C:  MOVLB  6
0428E:  MOVF   x74,W
04290:  SUBWF  x6E,W
04292:  MOVWF  x76
04294:  MOVF   x73,W
04296:  SUBWF  x6F,W
04298:  MOVWF  x77
0429A:  MOVFF  676,68D
0429E:  MOVWF  x8E
042A0:  MOVFF  672,68F
042A4:  MOVLB  0
042A6:  CALL   2776
....................       } 
....................  
....................       if(P < 0) 
042AA:  MOVLB  6
042AC:  BTFSC  x75.7
042AE:  BRA    42B2
042B0:  BRA    42CE
....................          P += 3 + 2 * a++; 
042B2:  MOVF   x73,W
042B4:  INCF   x73,F
042B6:  MOVWF  x76
042B8:  MOVLW  02
042BA:  MOVWF  x77
042BC:  MOVFF  676,678
042C0:  MOVLB  0
042C2:  RCALL  4090
042C4:  MOVF   01,W
042C6:  ADDLW  03
042C8:  MOVLB  6
042CA:  ADDWF  x75,F
....................       else 
042CC:  BRA    42F0
....................          P += 5 + 2 * (a++ - b--); 
042CE:  MOVF   x73,W
042D0:  INCF   x73,F
042D2:  MOVWF  x76
042D4:  MOVF   x74,W
042D6:  DECF   x74,F
042D8:  SUBWF  x76,W
042DA:  MOVWF  x76
042DC:  MOVLW  02
042DE:  MOVWF  x77
042E0:  MOVFF  676,678
042E4:  MOVLB  0
042E6:  RCALL  4090
042E8:  MOVF   01,W
042EA:  ADDLW  05
042EC:  MOVLB  6
042EE:  ADDWF  x75,F
....................     } while(a <= b); 
042F0:  MOVF   x73,W
042F2:  XORLW  80
042F4:  MOVWF  00
042F6:  MOVF   x74,W
042F8:  XORLW  80
042FA:  SUBWF  00,W
042FC:  BTFSC  FD8.2
042FE:  BRA    40EE
04300:  BTFSS  FD8.0
04302:  BRA    40EE
.................... } 
04304:  MOVLB  0
04306:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
02832:  MOVFF  675,03
02836:  MOVLB  6
02838:  MOVFF  674,FE9
0283C:  MOVFF  675,FEA
02840:  MOVF   FEF,F
02842:  BTFSC  FD8.2
02844:  BRA    29E6
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
02846:  MOVFF  675,03
0284A:  MOVFF  674,FE9
0284E:  MOVFF  675,FEA
02852:  MOVF   FEF,W
02854:  SUBLW  52
02856:  BNC   28A6
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
02858:  MOVFF  675,03
0285C:  MOVFF  674,FE9
02860:  MOVFF  675,FEA
02864:  MOVLW  20
02866:  SUBWF  FEF,W
02868:  MULLW  05
0286A:  MOVF   FF3,W
0286C:  CLRF   03
0286E:  MOVWF  x81
02870:  MOVLW  06
02872:  MOVWF  FEA
02874:  MOVLW  7C
02876:  MOVWF  FE9
02878:  CLRF   x85
0287A:  MOVFF  681,684
0287E:  MOVFF  FF2,682
02882:  BCF    FF2.7
02884:  MOVLW  05
02886:  MOVWF  01
02888:  CLRF   FF7
0288A:  MOVF   x81,W
0288C:  MOVLB  0
0288E:  CALL   009E
02892:  TBLRD*-
02894:  TBLRD*+
02896:  MOVFF  FF5,FEE
0289A:  DECFSZ 01,F
0289C:  BRA    2894
0289E:  MOVLB  6
028A0:  BTFSC  x82.7
028A2:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
028A4:  BRA    2910
028A6:  MOVFF  675,03
028AA:  MOVFF  674,FE9
028AE:  MOVFF  675,FEA
028B2:  MOVF   FEF,W
028B4:  SUBLW  7E
028B6:  BNC   2906
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
028B8:  MOVFF  675,03
028BC:  MOVFF  674,FE9
028C0:  MOVFF  675,FEA
028C4:  MOVLW  53
028C6:  SUBWF  FEF,W
028C8:  MULLW  05
028CA:  MOVF   FF3,W
028CC:  CLRF   03
028CE:  MOVWF  x81
028D0:  MOVLW  06
028D2:  MOVWF  FEA
028D4:  MOVLW  7C
028D6:  MOVWF  FE9
028D8:  CLRF   x85
028DA:  MOVFF  681,684
028DE:  MOVFF  FF2,682
028E2:  BCF    FF2.7
028E4:  MOVLW  05
028E6:  MOVWF  01
028E8:  CLRF   FF7
028EA:  MOVF   x81,W
028EC:  MOVLB  0
028EE:  CALL   01BC
028F2:  TBLRD*-
028F4:  TBLRD*+
028F6:  MOVFF  FF5,FEE
028FA:  DECFSZ 01,F
028FC:  BRA    28F4
028FE:  MOVLB  6
02900:  BTFSC  x82.7
02902:  BSF    FF2.7
....................       else 
02904:  BRA    2910
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
02906:  CLRF   x7C
02908:  CLRF   x7D
0290A:  CLRF   x7E
0290C:  CLRF   x7F
0290E:  CLRF   x80
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
02910:  MOVFF  675,03
02914:  MOVF   x74,W
02916:  MOVWF  FE9
02918:  MOVFF  03,FEA
0291C:  MOVF   FEF,W
0291E:  XORLW  0A
02920:  MOVLB  0
02922:  BZ    292A
02924:  XORLW  07
02926:  BZ    293A
02928:  BRA    2940
....................          case '\n': 
....................             y += 7*size + 1; 
0292A:  MOVLB  6
0292C:  MOVF   x76,W
0292E:  MULLW  07
02930:  MOVF   FF3,W
02932:  ADDLW  01
02934:  ADDWF  x73,F
....................             continue; 
02936:  BRA    29D8
02938:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
0293A:  MOVLB  6
0293C:  CLRF   x72
....................             continue; 
0293E:  BRA    29D8
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
02940:  MOVLB  6
02942:  MOVF   x76,W
02944:  MULLW  05
02946:  MOVF   FF3,W
02948:  ADDWF  x72,W
0294A:  SUBLW  7F
0294C:  BC    295A
....................       { 
....................          x = 0;                           // Set x at far left position 
0294E:  CLRF   x72
....................          y += 7*size + 1;                 // Set y at next position down 
02950:  MOVF   x76,W
02952:  MULLW  07
02954:  MOVF   FF3,W
02956:  ADDLW  01
02958:  ADDWF  x73,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
0295A:  CLRF   x78
0295C:  MOVF   x78,W
0295E:  SUBLW  04
02960:  BNC   29D8
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
02962:  CLRF   x79
02964:  MOVF   x79,W
02966:  SUBLW  06
02968:  BNC   29D0
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
0296A:  CLRF   03
0296C:  MOVF   x78,W
0296E:  ADDLW  7C
02970:  MOVWF  FE9
02972:  MOVLW  06
02974:  ADDWFC 03,W
02976:  MOVWF  FEA
02978:  MOVFF  FEF,681
0297C:  MOVFF  681,00
02980:  MOVF   x79,W
02982:  MOVWF  01
02984:  BZ    298E
02986:  BCF    FD8.0
02988:  RRCF   00,F
0298A:  DECFSZ 01,F
0298C:  BRA    2986
0298E:  BTFSS  00.0
02990:  BRA    29CC
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
02992:  CLRF   x7A
02994:  MOVF   x76,W
02996:  SUBWF  x7A,W
02998:  BC    29CC
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
0299A:  CLRF   x7B
0299C:  MOVF   x76,W
0299E:  SUBWF  x7B,W
029A0:  BC    29C8
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
029A2:  MOVF   x7B,W
029A4:  ADDWF  x72,W
029A6:  MOVWF  x81
029A8:  MOVF   x79,W
029AA:  MULWF  x76
029AC:  MOVF   FF3,W
029AE:  ADDWF  x73,W
029B0:  ADDWF  x7A,W
029B2:  MOVWF  x82
029B4:  MOVFF  681,68D
029B8:  MOVWF  x8E
029BA:  MOVFF  677,68F
029BE:  MOVLB  0
029C0:  RCALL  2776
....................                   } 
029C2:  MOVLB  6
029C4:  INCF   x7B,F
029C6:  BRA    299C
....................                } 
029C8:  INCF   x7A,F
029CA:  BRA    2994
....................             } 
....................          } 
029CC:  INCF   x79,F
029CE:  BRA    2964
....................       } 
029D0:  INCF   x78,F
029D2:  MOVF   x76,W
029D4:  ADDWF  x72,F
029D6:  BRA    295C
....................    } 
029D8:  INCF   x74,F
029DA:  BTFSC  FD8.2
029DC:  INCF   x75,F
029DE:  INCF   x72,F
029E0:  MOVLB  0
029E2:  BRA    2832
029E4:  MOVLB  6
.................... } 
029E6:  MOVLB  0
029E8:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Horno [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x00, 0x00, 0x0E, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x02, 0x00, 0x0E, 
.................... 0x60, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x05, 0x00, 0x0E, 
.................... 0x70, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x02, 0x00, 0x0E, 
.................... 0x60, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xE1, 0xC0, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x01, 0x80, 0x60, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x78, 0x10, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x06, 0x7C, 0x18, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0x7C, 0x08, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x3C, 0x04, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x10, 0x04, 0x0E, 
.................... 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x0C, 0xE4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x2D, 0xF4, 0x0E, 
.................... 0x02, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x63, 0xF4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0xF1, 0xE4, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x70, 0x10, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x30, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xC0, 0xC0, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x7F, 0x80, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
.................... // Definición de teclado - NO 
.................... #define   UP            !input(PIN_A4) 
.................... #define   DOWN          !input(PIN_A5) 
.................... #define   RIGHT         !input(PIN_E0) 
.................... #define   LEFT          !input(PIN_E1) 
....................  
.................... #define   DOOR          input(PIN_E2) 
.................... #define   TERM          input(PIN_B7) 
....................  
....................  
.................... // Definición de Salidas 
.................... #define   SSR_on            output_bit(PIN_C2,0) 
.................... #define   SSR_off           output_bit(PIN_C2,1) 
.................... #define   Motor1_on         output_bit(PIN_C5,0) 
.................... #define   Motor1_off        output_bit(PIN_C5,1) 
.................... #define   Motor2_on         output_bit(PIN_C6,0) 
.................... #define   Motor2_off        output_bit(PIN_C6,1) 
.................... #define   Display_on        output_bit(PIN_C7,1) 
.................... #define   Display_off       output_bit(PIN_C7,0) 
....................  
.................... float promedio[90]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float X[2]={0.0,0.0}; 
.................... short Desconectado=0; 
.................... int8 h=0,l=0,Ajuste=0,Ajusten=0,MediaMovil=10,tiemporecta=0,flag_ganancia=0,Lectura2=0,Controlando=0,Ajusto=10,n=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,visual=1,Lectura=0,flag_ajuste=0,flag_ajuste2=0,flag_clear=0,Infinito=0; 
.................... short flag_clear2=0,flag_clear3=0,flag_tiempocalentamiento=0,flag_display=0,flag_setpoint=0,Finalizo=0; 
.................... int8 y=0,tiemporeset=0,Source=1; 
.................... int8 Menu=0, unidad=1,i=0,Pausa=0,TiempoControl=0; 
.................... int8 Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,decimal=0,entero=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,tinicio=0,tiempocalentamiento=0,tiemposetpoint=0,Tp=0,Tc=0; 
.................... float Potencia=0.0,Tpulsomin=0.0,Gananciamax=0.0,Gain=0.0,RPT100=0.0,Integral=0,Derivativo=0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float V0=0.0,R1=10000.0,Pt,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=2.0,desvio=0.5,Coeficiente=44.5; 
.................... float Aumento=0.0,Temperatura=0.0,TpulsoMax=0.0,Setpoint=0,Temperatura1=0,Temperatura2=0,Temperatura3=0,Temporal=0.0; 
.................... float a=0.0011,b=2.3302,c=-244.0723; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... #include "Funciones.h" 
.................... void ActualizaRecta(){ 
....................    X[y]=Temperatura; 
*
04DB8:  MOVLB  5
04DBA:  MOVF   x94,W
04DBC:  MULLW  04
04DBE:  MOVF   FF3,W
04DC0:  CLRF   03
04DC2:  ADDLW  7F
04DC4:  MOVWF  FE9
04DC6:  MOVLW  05
04DC8:  ADDWFC 03,W
04DCA:  MOVWF  FEA
04DCC:  MOVFF  611,FEF
04DD0:  MOVFF  612,FEC
04DD4:  MOVFF  613,FEC
04DD8:  MOVFF  614,FEC
....................    y++; 
04DDC:  INCF   x94,F
....................    if(y>=2){ 
04DDE:  MOVF   x94,W
04DE0:  SUBLW  01
04DE2:  BC    4E20
....................       y=0; 
04DE4:  CLRF   x94
....................       Aumento=X[1]-X[0]; 
04DE6:  BSF    FD8.1
04DE8:  MOVFF  586,661
04DEC:  MOVFF  585,660
04DF0:  MOVFF  584,65F
04DF4:  MOVFF  583,65E
04DF8:  MOVFF  582,665
04DFC:  MOVFF  581,664
04E00:  MOVFF  580,663
04E04:  MOVFF  57F,662
04E08:  MOVLB  0
04E0A:  CALL   1246
04E0E:  MOVFF  03,610
04E12:  MOVFF  02,60F
04E16:  MOVFF  01,60E
04E1A:  MOVFF  00,60D
04E1E:  MOVLB  5
....................    } 
.................... } 
04E20:  MOVLB  0
04E22:  GOTO   4E5E (RETURN)
....................  
.................... // Funcion para conversor analogo-digital 
.................... float sensores(int x){ 
.................... float y;set_adc_channel(x);delay_ms(1);y=read_adc();return (y); 
*
02CE4:  MOVLB  6
02CE6:  RLCF   x5A,W
02CE8:  MOVWF  00
02CEA:  RLCF   00,F
02CEC:  MOVLW  FC
02CEE:  ANDWF  00,F
02CF0:  MOVFF  00,01
02CF4:  MOVF   FC2,W
02CF6:  ANDLW  C3
02CF8:  IORWF  00,W
02CFA:  MOVWF  FC2
02CFC:  MOVLW  01
02CFE:  MOVWF  x62
02D00:  MOVLB  0
02D02:  CALL   1052
02D06:  BSF    FC2.1
02D08:  BTFSC  FC2.1
02D0A:  BRA    2D08
02D0C:  MOVFF  FC4,660
02D10:  MOVFF  FC3,65F
02D14:  MOVLB  0
02D16:  CALL   10B2
02D1A:  MOVFF  03,65E
02D1E:  MOVFF  02,65D
02D22:  MOVFF  01,65C
02D26:  MOVFF  00,65B
02D2A:  MOVFF  65B,00
02D2E:  MOVFF  65C,01
02D32:  MOVFF  65D,02
02D36:  MOVFF  65E,03
.................... } 
02D3A:  RETLW  00
....................  
.................... float Leer_Sensor(int media){ 
....................    if(Source==1){ 
*
02E54:  MOVLB  5
02E56:  DECFSZ x96,W
02E58:  BRA    3098
....................       Prom=0.0; 
02E5A:  CLRF   xF8
02E5C:  CLRF   xF7
02E5E:  CLRF   xF6
02E60:  CLRF   xF5
....................       V0 = sensores(1);   //Lectura de 4-20mA Transmisor PT100 
02E62:  MOVLW  01
02E64:  MOVLB  6
02E66:  MOVWF  x5A
02E68:  MOVLB  0
02E6A:  RCALL  2CE4
02E6C:  MOVFF  03,5E0
02E70:  MOVFF  02,5DF
02E74:  MOVFF  01,5DE
02E78:  MOVFF  00,5DD
....................       Temperature=(0.1272*V0)-25.002;//0-100°C 
02E7C:  MOVLW  B8
02E7E:  MOVLB  6
02E80:  MOVWF  x7C
02E82:  MOVLW  40
02E84:  MOVWF  x7B
02E86:  MOVLW  02
02E88:  MOVWF  x7A
02E8A:  MOVLW  7C
02E8C:  MOVWF  x79
02E8E:  MOVFF  5E0,680
02E92:  MOVFF  5DF,67F
02E96:  MOVFF  5DE,67E
02E9A:  MOVFF  5DD,67D
02E9E:  MOVLB  0
02EA0:  RCALL  2D3C
02EA2:  MOVFF  00,65A
02EA6:  MOVFF  01,65B
02EAA:  MOVFF  02,65C
02EAE:  MOVFF  03,65D
02EB2:  BSF    FD8.1
02EB4:  MOVFF  03,661
02EB8:  MOVFF  02,660
02EBC:  MOVFF  01,65F
02EC0:  MOVFF  00,65E
02EC4:  MOVLW  19
02EC6:  MOVLB  6
02EC8:  MOVWF  x65
02ECA:  MOVLW  04
02ECC:  MOVWF  x64
02ECE:  MOVLW  48
02ED0:  MOVWF  x63
02ED2:  MOVLW  83
02ED4:  MOVWF  x62
02ED6:  MOVLB  0
02ED8:  CALL   1246
02EDC:  MOVFF  03,5FC
02EE0:  MOVFF  02,5FB
02EE4:  MOVFF  01,5FA
02EE8:  MOVFF  00,5F9
....................        
....................       if(l>(media-1)) 
02EEC:  MOVLW  01
02EEE:  MOVLB  6
02EF0:  SUBWF  x59,W
02EF2:  MOVLB  5
02EF4:  SUBWF  x89,W
02EF6:  BZ    2EFC
02EF8:  BNC   2EFC
....................       {l=0;} 
02EFA:  CLRF   x89
....................       promedio[l]=Temperature;l++; 
02EFC:  MOVLB  6
02EFE:  CLRF   x5E
02F00:  MOVFF  589,65D
02F04:  CLRF   x60
02F06:  MOVLW  04
02F08:  MOVWF  x5F
02F0A:  MOVLB  0
02F0C:  RCALL  2E32
02F0E:  MOVF   01,W
02F10:  ADDLW  17
02F12:  MOVWF  FE9
02F14:  MOVLW  04
02F16:  ADDWFC 02,W
02F18:  MOVWF  FEA
02F1A:  MOVFF  5F9,FEF
02F1E:  MOVFF  5FA,FEC
02F22:  MOVFF  5FB,FEC
02F26:  MOVFF  5FC,FEC
02F2A:  MOVLB  5
02F2C:  INCF   x89,F
....................       //promedio[l]=V0;l++; 
....................              
....................       for(h=0;h<media;h++) 
02F2E:  CLRF   x88
02F30:  MOVLB  6
02F32:  MOVF   x59,W
02F34:  MOVLB  5
02F36:  SUBWF  x88,W
02F38:  BC    2FB8
....................       { 
....................          Prom+=promedio[h]; 
02F3A:  MOVLB  6
02F3C:  CLRF   x5E
02F3E:  MOVFF  588,65D
02F42:  CLRF   x60
02F44:  MOVLW  04
02F46:  MOVWF  x5F
02F48:  MOVLB  0
02F4A:  RCALL  2E32
02F4C:  MOVFF  02,03
02F50:  MOVF   01,W
02F52:  ADDLW  17
02F54:  MOVWF  FE9
02F56:  MOVLW  04
02F58:  ADDWFC 02,W
02F5A:  MOVWF  FEA
02F5C:  MOVFF  FEF,00
02F60:  MOVFF  FEC,01
02F64:  MOVFF  FEC,02
02F68:  MOVFF  FEC,03
02F6C:  MOVFF  FEA,65B
02F70:  MOVFF  FE9,65A
02F74:  BCF    FD8.1
02F76:  MOVFF  5F8,661
02F7A:  MOVFF  5F7,660
02F7E:  MOVFF  5F6,65F
02F82:  MOVFF  5F5,65E
02F86:  MOVFF  03,665
02F8A:  MOVFF  02,664
02F8E:  MOVFF  01,663
02F92:  MOVFF  00,662
02F96:  CALL   1246
02F9A:  MOVFF  65B,FEA
02F9E:  MOVFF  65A,FE9
02FA2:  MOVFF  03,5F8
02FA6:  MOVFF  02,5F7
02FAA:  MOVFF  01,5F6
02FAE:  MOVFF  00,5F5
....................       }  
02FB2:  MOVLB  5
02FB4:  INCF   x88,F
02FB6:  BRA    2F30
....................       Prom=Prom/media;   
02FB8:  MOVLB  6
02FBA:  CLRF   x60
02FBC:  MOVFF  659,65F
02FC0:  MOVLB  0
02FC2:  CALL   10B2
02FC6:  MOVFF  5F8,65D
02FCA:  MOVFF  5F7,65C
02FCE:  MOVFF  5F6,65B
02FD2:  MOVFF  5F5,65A
02FD6:  MOVFF  03,661
02FDA:  MOVFF  02,660
02FDE:  MOVFF  01,65F
02FE2:  MOVFF  00,65E
02FE6:  CALL   10E8
02FEA:  MOVFF  03,5F8
02FEE:  MOVFF  02,5F7
02FF2:  MOVFF  01,5F6
02FF6:  MOVFF  00,5F5
....................       Prom+=((float)Ajuste-(float)Ajusten); 
02FFA:  MOVLB  6
02FFC:  CLRF   x60
02FFE:  MOVFF  58A,65F
03002:  MOVLB  0
03004:  CALL   10B2
03008:  MOVFF  00,65A
0300C:  MOVFF  01,65B
03010:  MOVFF  02,65C
03014:  MOVFF  03,65D
03018:  MOVLB  6
0301A:  CLRF   x60
0301C:  MOVFF  58B,65F
03020:  MOVLB  0
03022:  CALL   10B2
03026:  BSF    FD8.1
03028:  MOVFF  65D,661
0302C:  MOVFF  65C,660
03030:  MOVFF  65B,65F
03034:  MOVFF  65A,65E
03038:  MOVFF  03,665
0303C:  MOVFF  02,664
03040:  MOVFF  01,663
03044:  MOVFF  00,662
03048:  CALL   1246
0304C:  BCF    FD8.1
0304E:  MOVFF  5F8,661
03052:  MOVFF  5F7,660
03056:  MOVFF  5F6,65F
0305A:  MOVFF  5F5,65E
0305E:  MOVFF  03,665
03062:  MOVFF  02,664
03066:  MOVFF  01,663
0306A:  MOVFF  00,662
0306E:  CALL   1246
03072:  MOVFF  03,5F8
03076:  MOVFF  02,5F7
0307A:  MOVFF  01,5F6
0307E:  MOVFF  00,5F5
....................       return Prom;    
03082:  MOVFF  5F5,00
03086:  MOVFF  5F6,01
0308A:  MOVFF  5F7,02
0308E:  MOVFF  5F8,03
03092:  BRA    344C
....................    }else if(Source==0){ 
03094:  BRA    344C
03096:  MOVLB  5
03098:  MOVF   x96,F
0309A:  BTFSS  FD8.2
0309C:  BRA    344E
....................       Prom=0.0; 
0309E:  CLRF   xF8
030A0:  CLRF   xF7
030A2:  CLRF   xF6
030A4:  CLRF   xF5
....................       V0 = sensores(0);   //Lectura de Divisor de Voltaje de PT100 con resistencia de 6.18k (+-2%) 
030A6:  MOVLB  6
030A8:  CLRF   x5A
030AA:  MOVLB  0
030AC:  RCALL  2CE4
030AE:  MOVFF  03,5E0
030B2:  MOVFF  02,5DF
030B6:  MOVFF  01,5DE
030BA:  MOVFF  00,5DD
....................       V0 = V0/Gain; // Se elimina la ganancia 
030BE:  MOVFF  5E0,65D
030C2:  MOVFF  5DF,65C
030C6:  MOVFF  5DE,65B
030CA:  MOVFF  5DD,65A
030CE:  MOVFF  5C0,661
030D2:  MOVFF  5BF,660
030D6:  MOVFF  5BE,65F
030DA:  MOVFF  5BD,65E
030DE:  CALL   10E8
030E2:  MOVFF  03,5E0
030E6:  MOVFF  02,5DF
030EA:  MOVFF  01,5DE
030EE:  MOVFF  00,5DD
....................       Pt=(R1)/((1024.0/V0)-1.0); // Se calcula el valor de la PT100 
030F2:  MOVLB  6
030F4:  CLRF   x5D
030F6:  CLRF   x5C
030F8:  CLRF   x5B
030FA:  MOVLW  89
030FC:  MOVWF  x5A
030FE:  MOVFF  5E0,661
03102:  MOVFF  5DF,660
03106:  MOVFF  5DE,65F
0310A:  MOVFF  5DD,65E
0310E:  MOVLB  0
03110:  CALL   10E8
03114:  MOVFF  00,65A
03118:  MOVFF  01,65B
0311C:  MOVFF  02,65C
03120:  MOVFF  03,65D
03124:  BSF    FD8.1
03126:  MOVFF  03,661
0312A:  MOVFF  02,660
0312E:  MOVFF  01,65F
03132:  MOVFF  00,65E
03136:  MOVLB  6
03138:  CLRF   x65
0313A:  CLRF   x64
0313C:  CLRF   x63
0313E:  MOVLW  7F
03140:  MOVWF  x62
03142:  MOVLB  0
03144:  CALL   1246
03148:  MOVFF  5E4,65D
0314C:  MOVFF  5E3,65C
03150:  MOVFF  5E2,65B
03154:  MOVFF  5E1,65A
03158:  MOVFF  03,661
0315C:  MOVFF  02,660
03160:  MOVFF  01,65F
03164:  MOVFF  00,65E
03168:  CALL   10E8
0316C:  MOVFF  03,5E8
03170:  MOVFF  02,5E7
03174:  MOVFF  01,5E6
03178:  MOVFF  00,5E5
....................       Pt=Pt-RPT100; //Ajuste de impedancia de cableado de PT100 
0317C:  BSF    FD8.1
0317E:  MOVFF  5E8,661
03182:  MOVFF  5E7,660
03186:  MOVFF  5E6,65F
0318A:  MOVFF  5E5,65E
0318E:  MOVFF  5C4,665
03192:  MOVFF  5C3,664
03196:  MOVFF  5C2,663
0319A:  MOVFF  5C1,662
0319E:  CALL   1246
031A2:  MOVFF  03,5E8
031A6:  MOVFF  02,5E7
031AA:  MOVFF  01,5E6
031AE:  MOVFF  00,5E5
....................       //Temperature=(Pt-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
....................                 
....................       if(l>(media-1)) 
031B2:  MOVLW  01
031B4:  MOVLB  6
031B6:  SUBWF  x59,W
031B8:  MOVLB  5
031BA:  SUBWF  x89,W
031BC:  BZ    31C2
031BE:  BNC   31C2
....................       {l=0;} 
031C0:  CLRF   x89
....................       //promedio[l]=Temperature;l++; 
....................       promedio[l]=Pt;l++; 
031C2:  MOVLB  6
031C4:  CLRF   x5E
031C6:  MOVFF  589,65D
031CA:  CLRF   x60
031CC:  MOVLW  04
031CE:  MOVWF  x5F
031D0:  MOVLB  0
031D2:  RCALL  2E32
031D4:  MOVF   01,W
031D6:  ADDLW  17
031D8:  MOVWF  FE9
031DA:  MOVLW  04
031DC:  ADDWFC 02,W
031DE:  MOVWF  FEA
031E0:  MOVFF  5E5,FEF
031E4:  MOVFF  5E6,FEC
031E8:  MOVFF  5E7,FEC
031EC:  MOVFF  5E8,FEC
031F0:  MOVLB  5
031F2:  INCF   x89,F
....................              
....................       for(h=0;h<media;h++) 
031F4:  CLRF   x88
031F6:  MOVLB  6
031F8:  MOVF   x59,W
031FA:  MOVLB  5
031FC:  SUBWF  x88,W
031FE:  BC    327E
....................       { 
....................          Prom+=promedio[h]; 
03200:  MOVLB  6
03202:  CLRF   x5E
03204:  MOVFF  588,65D
03208:  CLRF   x60
0320A:  MOVLW  04
0320C:  MOVWF  x5F
0320E:  MOVLB  0
03210:  RCALL  2E32
03212:  MOVFF  02,03
03216:  MOVF   01,W
03218:  ADDLW  17
0321A:  MOVWF  FE9
0321C:  MOVLW  04
0321E:  ADDWFC 02,W
03220:  MOVWF  FEA
03222:  MOVFF  FEF,00
03226:  MOVFF  FEC,01
0322A:  MOVFF  FEC,02
0322E:  MOVFF  FEC,03
03232:  MOVFF  FEA,65B
03236:  MOVFF  FE9,65A
0323A:  BCF    FD8.1
0323C:  MOVFF  5F8,661
03240:  MOVFF  5F7,660
03244:  MOVFF  5F6,65F
03248:  MOVFF  5F5,65E
0324C:  MOVFF  03,665
03250:  MOVFF  02,664
03254:  MOVFF  01,663
03258:  MOVFF  00,662
0325C:  CALL   1246
03260:  MOVFF  65B,FEA
03264:  MOVFF  65A,FE9
03268:  MOVFF  03,5F8
0326C:  MOVFF  02,5F7
03270:  MOVFF  01,5F6
03274:  MOVFF  00,5F5
....................       }  
03278:  MOVLB  5
0327A:  INCF   x88,F
0327C:  BRA    31F6
....................       Prom=Prom/media;    
0327E:  MOVLB  6
03280:  CLRF   x60
03282:  MOVFF  659,65F
03286:  MOVLB  0
03288:  CALL   10B2
0328C:  MOVFF  5F8,65D
03290:  MOVFF  5F7,65C
03294:  MOVFF  5F6,65B
03298:  MOVFF  5F5,65A
0329C:  MOVFF  03,661
032A0:  MOVFF  02,660
032A4:  MOVFF  01,65F
032A8:  MOVFF  00,65E
032AC:  CALL   10E8
032B0:  MOVFF  03,5F8
032B4:  MOVFF  02,5F7
032B8:  MOVFF  01,5F6
032BC:  MOVFF  00,5F5
....................       //Temperature=(Prom-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
....................       Temperature=((Prom*Prom)*a)+(Prom*b)+c;  // Ecuación determinada por linealización en Matlab. Revisar este polinomio. 
032C0:  MOVFF  5F8,67C
032C4:  MOVFF  5F7,67B
032C8:  MOVFF  5F6,67A
032CC:  MOVFF  5F5,679
032D0:  MOVFF  5F8,680
032D4:  MOVFF  5F7,67F
032D8:  MOVFF  5F6,67E
032DC:  MOVFF  5F5,67D
032E0:  RCALL  2D3C
032E2:  MOVFF  00,65A
032E6:  MOVFF  01,65B
032EA:  MOVFF  02,65C
032EE:  MOVFF  03,65D
032F2:  MOVFF  03,67C
032F6:  MOVFF  02,67B
032FA:  MOVFF  01,67A
032FE:  MOVFF  00,679
03302:  MOVFF  630,680
03306:  MOVFF  62F,67F
0330A:  MOVFF  62E,67E
0330E:  MOVFF  62D,67D
03312:  RCALL  2D3C
03314:  MOVFF  00,65A
03318:  MOVFF  01,65B
0331C:  MOVFF  02,65C
03320:  MOVFF  03,65D
03324:  MOVFF  5F8,67C
03328:  MOVFF  5F7,67B
0332C:  MOVFF  5F6,67A
03330:  MOVFF  5F5,679
03334:  MOVFF  634,680
03338:  MOVFF  633,67F
0333C:  MOVFF  632,67E
03340:  MOVFF  631,67D
03344:  RCALL  2D3C
03346:  BCF    FD8.1
03348:  MOVFF  65D,661
0334C:  MOVFF  65C,660
03350:  MOVFF  65B,65F
03354:  MOVFF  65A,65E
03358:  MOVFF  03,665
0335C:  MOVFF  02,664
03360:  MOVFF  01,663
03364:  MOVFF  00,662
03368:  CALL   1246
0336C:  MOVFF  00,65A
03370:  MOVFF  01,65B
03374:  MOVFF  02,65C
03378:  MOVFF  03,65D
0337C:  BCF    FD8.1
0337E:  MOVFF  03,661
03382:  MOVFF  02,660
03386:  MOVFF  01,65F
0338A:  MOVFF  00,65E
0338E:  MOVFF  638,665
03392:  MOVFF  637,664
03396:  MOVFF  636,663
0339A:  MOVFF  635,662
0339E:  CALL   1246
033A2:  MOVFF  03,5FC
033A6:  MOVFF  02,5FB
033AA:  MOVFF  01,5FA
033AE:  MOVFF  00,5F9
....................       Temperature+=((float)Ajuste-(float)Ajusten); 
033B2:  MOVLB  6
033B4:  CLRF   x60
033B6:  MOVFF  58A,65F
033BA:  MOVLB  0
033BC:  CALL   10B2
033C0:  MOVFF  00,65A
033C4:  MOVFF  01,65B
033C8:  MOVFF  02,65C
033CC:  MOVFF  03,65D
033D0:  MOVLB  6
033D2:  CLRF   x60
033D4:  MOVFF  58B,65F
033D8:  MOVLB  0
033DA:  CALL   10B2
033DE:  BSF    FD8.1
033E0:  MOVFF  65D,661
033E4:  MOVFF  65C,660
033E8:  MOVFF  65B,65F
033EC:  MOVFF  65A,65E
033F0:  MOVFF  03,665
033F4:  MOVFF  02,664
033F8:  MOVFF  01,663
033FC:  MOVFF  00,662
03400:  CALL   1246
03404:  BCF    FD8.1
03406:  MOVFF  5FC,661
0340A:  MOVFF  5FB,660
0340E:  MOVFF  5FA,65F
03412:  MOVFF  5F9,65E
03416:  MOVFF  03,665
0341A:  MOVFF  02,664
0341E:  MOVFF  01,663
03422:  MOVFF  00,662
03426:  CALL   1246
0342A:  MOVFF  03,5FC
0342E:  MOVFF  02,5FB
03432:  MOVFF  01,5FA
03436:  MOVFF  00,5F9
....................        
....................       //return Prom; 
....................       return Temperature; 
0343A:  MOVFF  5F9,00
0343E:  MOVFF  5FA,01
03442:  MOVFF  5FB,02
03446:  MOVFF  5FC,03
0344A:  BRA    344C
0344C:  MOVLB  5
....................       //return Temperature; 
....................    } 
.................... } 
0344E:  MOVLB  0
03450:  RETLW  00
....................  
.................... void Controla(){ 
.................... //-------------------------------Control de Calentamiento------------------------------------------------------------//          
....................       if(tiemporecta>=Derivativo)//40 
*
04E26:  MOVLB  6
04E28:  CLRF   x60
04E2A:  MOVFF  58D,65F
04E2E:  MOVLB  0
04E30:  CALL   10B2
04E34:  MOVFF  5CC,660
04E38:  MOVFF  5CB,65F
04E3C:  MOVFF  5CA,65E
04E40:  MOVFF  5C9,65D
04E44:  MOVFF  03,664
04E48:  MOVFF  02,663
04E4C:  MOVFF  01,662
04E50:  MOVFF  00,661
04E54:  CALL   1C42
04E58:  BC    4E5C
04E5A:  BNZ   4E64
....................       { 
....................          ActualizaRecta(); 
04E5C:  BRA    4DB8
....................          tiemporecta=0; 
04E5E:  MOVLB  5
04E60:  CLRF   x8D
04E62:  MOVLB  0
....................       }  
....................     
....................       Motor1_on; 
04E64:  BCF    F8B.5
04E66:  BCF    F94.5
....................       Motor2_on; 
04E68:  BCF    F8B.6
04E6A:  BCF    F94.6
....................     
....................       error=desvio+Setpoint-Temperatura;      // Cálculo del error ****** 
04E6C:  BCF    FD8.1
04E6E:  MOVFF  608,661
04E72:  MOVFF  607,660
04E76:  MOVFF  606,65F
04E7A:  MOVFF  605,65E
04E7E:  MOVFF  61C,665
04E82:  MOVFF  61B,664
04E86:  MOVFF  61A,663
04E8A:  MOVFF  619,662
04E8E:  CALL   1246
04E92:  MOVFF  00,659
04E96:  MOVFF  01,65A
04E9A:  MOVFF  02,65B
04E9E:  MOVFF  03,65C
04EA2:  BSF    FD8.1
04EA4:  MOVFF  03,661
04EA8:  MOVFF  02,660
04EAC:  MOVFF  01,65F
04EB0:  MOVFF  00,65E
04EB4:  MOVFF  614,665
04EB8:  MOVFF  613,664
04EBC:  MOVFF  612,663
04EC0:  MOVFF  611,662
04EC4:  CALL   1246
04EC8:  MOVFF  03,5F4
04ECC:  MOVFF  02,5F3
04ED0:  MOVFF  01,5F2
04ED4:  MOVFF  00,5F1
....................     
....................       if(error>=0.8 && error<30 && Aumento<0.3 && flag_setpoint==0){ 
04ED8:  MOVLW  CD
04EDA:  MOVLB  6
04EDC:  MOVWF  x60
04EDE:  MOVLW  CC
04EE0:  MOVWF  x5F
04EE2:  MOVLW  4C
04EE4:  MOVWF  x5E
04EE6:  MOVLW  7E
04EE8:  MOVWF  x5D
04EEA:  MOVFF  5F4,664
04EEE:  MOVFF  5F3,663
04EF2:  MOVFF  5F2,662
04EF6:  MOVFF  5F1,661
04EFA:  MOVLB  0
04EFC:  CALL   1C42
04F00:  BC    4F06
04F02:  BTFSS  FD8.2
04F04:  BRA    531A
04F06:  MOVFF  5F4,660
04F0A:  MOVFF  5F3,65F
04F0E:  MOVFF  5F2,65E
04F12:  MOVFF  5F1,65D
04F16:  MOVLB  6
04F18:  CLRF   x64
04F1A:  CLRF   x63
04F1C:  MOVLW  70
04F1E:  MOVWF  x62
04F20:  MOVLW  83
04F22:  MOVWF  x61
04F24:  MOVLB  0
04F26:  CALL   1C42
04F2A:  BTFSS  FD8.0
04F2C:  BRA    531A
04F2E:  MOVFF  610,660
04F32:  MOVFF  60F,65F
04F36:  MOVFF  60E,65E
04F3A:  MOVFF  60D,65D
04F3E:  MOVLW  9A
04F40:  MOVLB  6
04F42:  MOVWF  x64
04F44:  MOVLW  99
04F46:  MOVWF  x63
04F48:  MOVLW  19
04F4A:  MOVWF  x62
04F4C:  MOVLW  7D
04F4E:  MOVWF  x61
04F50:  MOVLB  0
04F52:  CALL   1C42
04F56:  BTFSS  FD8.0
04F58:  BRA    531A
04F5A:  MOVLB  5
04F5C:  BTFSS  x93.6
04F5E:  BRA    4F64
04F60:  MOVLB  0
04F62:  BRA    531A
....................          flag_ajuste=0; 
04F64:  BCF    x87.6
....................          flag_ajuste2=0; 
04F66:  BCF    x87.7
....................          Ajusto=10; 
04F68:  MOVLW  0A
04F6A:  MOVWF  x91
....................          if(Potencia<90.0){ 
04F6C:  MOVFF  5B4,660
04F70:  MOVFF  5B3,65F
04F74:  MOVFF  5B2,65E
04F78:  MOVFF  5B1,65D
04F7C:  MOVLB  6
04F7E:  CLRF   x64
04F80:  CLRF   x63
04F82:  MOVLW  34
04F84:  MOVWF  x62
04F86:  MOVLW  85
04F88:  MOVWF  x61
04F8A:  MOVLB  0
04F8C:  CALL   1C42
04F90:  BTFSS  FD8.0
04F92:  BRA    5318
....................             if(error>1.1){ 
04F94:  MOVLW  CD
04F96:  MOVLB  6
04F98:  MOVWF  x60
04F9A:  MOVLW  CC
04F9C:  MOVWF  x5F
04F9E:  MOVLW  0C
04FA0:  MOVWF  x5E
04FA2:  MOVLW  7F
04FA4:  MOVWF  x5D
04FA6:  MOVFF  5F4,664
04FAA:  MOVFF  5F3,663
04FAE:  MOVFF  5F2,662
04FB2:  MOVFF  5F1,661
04FB6:  MOVLB  0
04FB8:  CALL   1C42
04FBC:  BTFSS  FD8.0
04FBE:  BRA    516C
....................                if(TiempoControl>=(Derivativo*2))//80 
04FC0:  MOVFF  5CC,67C
04FC4:  MOVFF  5CB,67B
04FC8:  MOVFF  5CA,67A
04FCC:  MOVFF  5C9,679
04FD0:  MOVLB  6
04FD2:  CLRF   x80
04FD4:  CLRF   x7F
04FD6:  CLRF   x7E
04FD8:  MOVLW  80
04FDA:  MOVWF  x7D
04FDC:  MOVLB  0
04FDE:  CALL   2D3C
04FE2:  MOVFF  00,659
04FE6:  MOVFF  01,65A
04FEA:  MOVFF  02,65B
04FEE:  MOVFF  03,65C
04FF2:  MOVLB  6
04FF4:  CLRF   x60
04FF6:  MOVFF  59B,65F
04FFA:  MOVLB  0
04FFC:  CALL   10B2
05000:  MOVFF  65C,660
05004:  MOVFF  65B,65F
05008:  MOVFF  65A,65E
0500C:  MOVFF  659,65D
05010:  MOVFF  03,664
05014:  MOVFF  02,663
05018:  MOVFF  01,662
0501C:  MOVFF  00,661
05020:  CALL   1C42
05024:  BC    502A
05026:  BTFSS  FD8.2
05028:  BRA    516A
....................                { 
....................                   TiempoControl=0; 
0502A:  MOVLB  5
0502C:  CLRF   x9B
....................                   if(Aumento<-0.5) 
0502E:  MOVFF  610,660
05032:  MOVFF  60F,65F
05036:  MOVFF  60E,65E
0503A:  MOVFF  60D,65D
0503E:  MOVLB  6
05040:  CLRF   x64
05042:  CLRF   x63
05044:  MOVLW  80
05046:  MOVWF  x62
05048:  MOVLW  7E
0504A:  MOVWF  x61
0504C:  MOVLB  0
0504E:  CALL   1C42
05052:  BNC   50B0
....................                   { 
....................                      Ganancia+=Integral+1;//2 
05054:  BCF    FD8.1
05056:  MOVFF  5C8,661
0505A:  MOVFF  5C7,660
0505E:  MOVFF  5C6,65F
05062:  MOVFF  5C5,65E
05066:  MOVLB  6
05068:  CLRF   x65
0506A:  CLRF   x64
0506C:  CLRF   x63
0506E:  MOVLW  7F
05070:  MOVWF  x62
05072:  MOVLB  0
05074:  CALL   1246
05078:  BCF    FD8.1
0507A:  MOVFF  604,661
0507E:  MOVFF  603,660
05082:  MOVFF  602,65F
05086:  MOVFF  601,65E
0508A:  MOVFF  03,665
0508E:  MOVFF  02,664
05092:  MOVFF  01,663
05096:  MOVFF  00,662
0509A:  CALL   1246
0509E:  MOVFF  03,604
050A2:  MOVFF  02,603
050A6:  MOVFF  01,602
050AA:  MOVFF  00,601
....................                   } 
....................                   else 
050AE:  BRA    516A
....................                   { 
....................                      if(Aumento<-0.1) 
050B0:  MOVFF  610,660
050B4:  MOVFF  60F,65F
050B8:  MOVFF  60E,65E
050BC:  MOVFF  60D,65D
050C0:  MOVLW  CD
050C2:  MOVLB  6
050C4:  MOVWF  x64
050C6:  MOVLW  CC
050C8:  MOVWF  x63
050CA:  MOVWF  x62
050CC:  MOVLW  7B
050CE:  MOVWF  x61
050D0:  MOVLB  0
050D2:  CALL   1C42
050D6:  BNC   5110
....................                      { 
....................                         Ganancia+=Integral;//1 
050D8:  BCF    FD8.1
050DA:  MOVFF  604,661
050DE:  MOVFF  603,660
050E2:  MOVFF  602,65F
050E6:  MOVFF  601,65E
050EA:  MOVFF  5C8,665
050EE:  MOVFF  5C7,664
050F2:  MOVFF  5C6,663
050F6:  MOVFF  5C5,662
050FA:  CALL   1246
050FE:  MOVFF  03,604
05102:  MOVFF  02,603
05106:  MOVFF  01,602
0510A:  MOVFF  00,601
....................                      }    
....................                      else 
0510E:  BRA    516A
....................                      { 
....................                         Ganancia+=Integral-0.5;//0.5 
05110:  BSF    FD8.1
05112:  MOVFF  5C8,661
05116:  MOVFF  5C7,660
0511A:  MOVFF  5C6,65F
0511E:  MOVFF  5C5,65E
05122:  MOVLB  6
05124:  CLRF   x65
05126:  CLRF   x64
05128:  CLRF   x63
0512A:  MOVLW  7E
0512C:  MOVWF  x62
0512E:  MOVLB  0
05130:  CALL   1246
05134:  BCF    FD8.1
05136:  MOVFF  604,661
0513A:  MOVFF  603,660
0513E:  MOVFF  602,65F
05142:  MOVFF  601,65E
05146:  MOVFF  03,665
0514A:  MOVFF  02,664
0514E:  MOVFF  01,663
05152:  MOVFF  00,662
05156:  CALL   1246
0515A:  MOVFF  03,604
0515E:  MOVFF  02,603
05162:  MOVFF  01,602
05166:  MOVFF  00,601
....................                      } 
....................                   } 
....................                } 
....................             }else{ 
0516A:  BRA    5318
....................                if(TiempoControl>=(Derivativo*6))//80 
0516C:  MOVFF  5CC,67C
05170:  MOVFF  5CB,67B
05174:  MOVFF  5CA,67A
05178:  MOVFF  5C9,679
0517C:  MOVLB  6
0517E:  CLRF   x80
05180:  CLRF   x7F
05182:  MOVLW  40
05184:  MOVWF  x7E
05186:  MOVLW  81
05188:  MOVWF  x7D
0518A:  MOVLB  0
0518C:  CALL   2D3C
05190:  MOVFF  00,659
05194:  MOVFF  01,65A
05198:  MOVFF  02,65B
0519C:  MOVFF  03,65C
051A0:  MOVLB  6
051A2:  CLRF   x60
051A4:  MOVFF  59B,65F
051A8:  MOVLB  0
051AA:  CALL   10B2
051AE:  MOVFF  65C,660
051B2:  MOVFF  65B,65F
051B6:  MOVFF  65A,65E
051BA:  MOVFF  659,65D
051BE:  MOVFF  03,664
051C2:  MOVFF  02,663
051C6:  MOVFF  01,662
051CA:  MOVFF  00,661
051CE:  CALL   1C42
051D2:  BC    51D8
051D4:  BTFSS  FD8.2
051D6:  BRA    5318
....................                { 
....................                   TiempoControl=0; 
051D8:  MOVLB  5
051DA:  CLRF   x9B
....................                   if(Aumento<-0.5) 
051DC:  MOVFF  610,660
051E0:  MOVFF  60F,65F
051E4:  MOVFF  60E,65E
051E8:  MOVFF  60D,65D
051EC:  MOVLB  6
051EE:  CLRF   x64
051F0:  CLRF   x63
051F2:  MOVLW  80
051F4:  MOVWF  x62
051F6:  MOVLW  7E
051F8:  MOVWF  x61
051FA:  MOVLB  0
051FC:  CALL   1C42
05200:  BNC   525E
....................                   { 
....................                      Ganancia+=Integral+1;//2 
05202:  BCF    FD8.1
05204:  MOVFF  5C8,661
05208:  MOVFF  5C7,660
0520C:  MOVFF  5C6,65F
05210:  MOVFF  5C5,65E
05214:  MOVLB  6
05216:  CLRF   x65
05218:  CLRF   x64
0521A:  CLRF   x63
0521C:  MOVLW  7F
0521E:  MOVWF  x62
05220:  MOVLB  0
05222:  CALL   1246
05226:  BCF    FD8.1
05228:  MOVFF  604,661
0522C:  MOVFF  603,660
05230:  MOVFF  602,65F
05234:  MOVFF  601,65E
05238:  MOVFF  03,665
0523C:  MOVFF  02,664
05240:  MOVFF  01,663
05244:  MOVFF  00,662
05248:  CALL   1246
0524C:  MOVFF  03,604
05250:  MOVFF  02,603
05254:  MOVFF  01,602
05258:  MOVFF  00,601
....................                   } 
....................                   else 
0525C:  BRA    5318
....................                   { 
....................                      if(Aumento<-0.1) 
0525E:  MOVFF  610,660
05262:  MOVFF  60F,65F
05266:  MOVFF  60E,65E
0526A:  MOVFF  60D,65D
0526E:  MOVLW  CD
05270:  MOVLB  6
05272:  MOVWF  x64
05274:  MOVLW  CC
05276:  MOVWF  x63
05278:  MOVWF  x62
0527A:  MOVLW  7B
0527C:  MOVWF  x61
0527E:  MOVLB  0
05280:  CALL   1C42
05284:  BNC   52BE
....................                      { 
....................                         Ganancia+=Integral;//1 
05286:  BCF    FD8.1
05288:  MOVFF  604,661
0528C:  MOVFF  603,660
05290:  MOVFF  602,65F
05294:  MOVFF  601,65E
05298:  MOVFF  5C8,665
0529C:  MOVFF  5C7,664
052A0:  MOVFF  5C6,663
052A4:  MOVFF  5C5,662
052A8:  CALL   1246
052AC:  MOVFF  03,604
052B0:  MOVFF  02,603
052B4:  MOVFF  01,602
052B8:  MOVFF  00,601
....................                      }    
....................                      else 
052BC:  BRA    5318
....................                      { 
....................                         Ganancia+=Integral-0.5;//0.5 
052BE:  BSF    FD8.1
052C0:  MOVFF  5C8,661
052C4:  MOVFF  5C7,660
052C8:  MOVFF  5C6,65F
052CC:  MOVFF  5C5,65E
052D0:  MOVLB  6
052D2:  CLRF   x65
052D4:  CLRF   x64
052D6:  CLRF   x63
052D8:  MOVLW  7E
052DA:  MOVWF  x62
052DC:  MOVLB  0
052DE:  CALL   1246
052E2:  BCF    FD8.1
052E4:  MOVFF  604,661
052E8:  MOVFF  603,660
052EC:  MOVFF  602,65F
052F0:  MOVFF  601,65E
052F4:  MOVFF  03,665
052F8:  MOVFF  02,664
052FC:  MOVFF  01,663
05300:  MOVFF  00,662
05304:  CALL   1246
05308:  MOVFF  03,604
0530C:  MOVFF  02,603
05310:  MOVFF  01,602
05314:  MOVFF  00,601
....................                      } 
....................                   } 
....................                } 
....................             } 
....................          } 
....................       }else if(error<0.0){ 
05318:  BRA    53EA
0531A:  MOVFF  5F4,660
0531E:  MOVFF  5F3,65F
05322:  MOVFF  5F2,65E
05326:  MOVFF  5F1,65D
0532A:  MOVLB  6
0532C:  CLRF   x64
0532E:  CLRF   x63
05330:  CLRF   x62
05332:  CLRF   x61
05334:  MOVLB  0
05336:  CALL   1C42
0533A:  BNC   53EA
....................          if(TiempoControl>=(Derivativo*2)){ 
0533C:  MOVFF  5CC,67C
05340:  MOVFF  5CB,67B
05344:  MOVFF  5CA,67A
05348:  MOVFF  5C9,679
0534C:  MOVLB  6
0534E:  CLRF   x80
05350:  CLRF   x7F
05352:  CLRF   x7E
05354:  MOVLW  80
05356:  MOVWF  x7D
05358:  MOVLB  0
0535A:  CALL   2D3C
0535E:  MOVFF  00,659
05362:  MOVFF  01,65A
05366:  MOVFF  02,65B
0536A:  MOVFF  03,65C
0536E:  MOVLB  6
05370:  CLRF   x60
05372:  MOVFF  59B,65F
05376:  MOVLB  0
05378:  CALL   10B2
0537C:  MOVFF  65C,660
05380:  MOVFF  65B,65F
05384:  MOVFF  65A,65E
05388:  MOVFF  659,65D
0538C:  MOVFF  03,664
05390:  MOVFF  02,663
05394:  MOVFF  01,662
05398:  MOVFF  00,661
0539C:  CALL   1C42
053A0:  BC    53A4
053A2:  BNZ   53EA
....................             TiempoControl=0; 
053A4:  MOVLB  5
053A6:  CLRF   x9B
....................             Ganancia-=0.2; 
053A8:  BSF    FD8.1
053AA:  MOVFF  604,661
053AE:  MOVFF  603,660
053B2:  MOVFF  602,65F
053B6:  MOVFF  601,65E
053BA:  MOVLW  CD
053BC:  MOVLB  6
053BE:  MOVWF  x65
053C0:  MOVLW  CC
053C2:  MOVWF  x64
053C4:  MOVLW  4C
053C6:  MOVWF  x63
053C8:  MOVLW  7C
053CA:  MOVWF  x62
053CC:  MOVLB  0
053CE:  CALL   1246
053D2:  MOVFF  03,604
053D6:  MOVFF  02,603
053DA:  MOVFF  01,602
053DE:  MOVFF  00,601
....................             flag_ajuste=0; 
053E2:  MOVLB  5
053E4:  BCF    x87.6
....................             flag_ajuste2=0; 
053E6:  BCF    x87.7
053E8:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(Ganancia<0.1) 
053EA:  MOVFF  604,660
053EE:  MOVFF  603,65F
053F2:  MOVFF  602,65E
053F6:  MOVFF  601,65D
053FA:  MOVLW  CD
053FC:  MOVLB  6
053FE:  MOVWF  x64
05400:  MOVLW  CC
05402:  MOVWF  x63
05404:  MOVLW  4C
05406:  MOVWF  x62
05408:  MOVLW  7B
0540A:  MOVWF  x61
0540C:  MOVLB  0
0540E:  CALL   1C42
05412:  BNC   5428
....................       { 
....................          Ganancia=0.1; 
05414:  MOVLW  CD
05416:  MOVLB  6
05418:  MOVWF  x04
0541A:  MOVLW  CC
0541C:  MOVWF  x03
0541E:  MOVLW  4C
05420:  MOVWF  x02
05422:  MOVLW  7B
05424:  MOVWF  x01
05426:  MOVLB  0
....................       } 
....................       if(Ganancia>Gananciamax) 
05428:  MOVFF  5BC,660
0542C:  MOVFF  5BB,65F
05430:  MOVFF  5BA,65E
05434:  MOVFF  5B9,65D
05438:  MOVFF  604,664
0543C:  MOVFF  603,663
05440:  MOVFF  602,662
05444:  MOVFF  601,661
05448:  CALL   1C42
0544C:  BNC   545E
....................       { 
....................          Ganancia=Gananciamax; 
0544E:  MOVFF  5BC,604
05452:  MOVFF  5BB,603
05456:  MOVFF  5BA,602
0545A:  MOVFF  5B9,601
....................       } 
....................     
....................       if(error<0.0)     // Anti Wind_DOWN     
0545E:  MOVFF  5F4,660
05462:  MOVFF  5F3,65F
05466:  MOVFF  5F2,65E
0546A:  MOVFF  5F1,65D
0546E:  MOVLB  6
05470:  CLRF   x64
05472:  CLRF   x63
05474:  CLRF   x62
05476:  CLRF   x61
05478:  MOVLB  0
0547A:  CALL   1C42
0547E:  BNC   548C
....................       { 
....................          error=0.0; 
05480:  MOVLB  5
05482:  CLRF   xF4
05484:  CLRF   xF3
05486:  CLRF   xF2
05488:  CLRF   xF1
0548A:  MOVLB  0
....................       } 
....................       //tmp=(Setpoint-Prom)*Ganancia;  // Control Proporcional. 
....................       tmp=error*Ganancia;  // Control Proporcional. 
0548C:  MOVFF  5F4,67C
05490:  MOVFF  5F3,67B
05494:  MOVFF  5F2,67A
05498:  MOVFF  5F1,679
0549C:  MOVFF  604,680
054A0:  MOVFF  603,67F
054A4:  MOVFF  602,67E
054A8:  MOVFF  601,67D
054AC:  CALL   2D3C
054B0:  MOVFF  03,600
054B4:  MOVFF  02,5FF
054B8:  MOVFF  01,5FE
054BC:  MOVFF  00,5FD
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
054C0:  MOVFF  61C,660
054C4:  MOVFF  61B,65F
054C8:  MOVFF  61A,65E
054CC:  MOVFF  619,65D
054D0:  MOVFF  600,664
054D4:  MOVFF  5FF,663
054D8:  MOVFF  5FE,662
054DC:  MOVFF  5FD,661
054E0:  CALL   1C42
054E4:  BNC   54F6
....................       { 
....................          tmp=Setpoint; 
054E6:  MOVFF  61C,600
054EA:  MOVFF  61B,5FF
054EE:  MOVFF  61A,5FE
054F2:  MOVFF  619,5FD
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
054F6:  MOVFF  600,660
054FA:  MOVFF  5FF,65F
054FE:  MOVFF  5FE,65E
05502:  MOVFF  5FD,65D
05506:  MOVLB  6
05508:  CLRF   x64
0550A:  CLRF   x63
0550C:  CLRF   x62
0550E:  CLRF   x61
05510:  MOVLB  0
05512:  CALL   1C42
05516:  BNC   5526
....................       { 
....................          tmp=0.0; 
05518:  MOVLB  6
0551A:  CLRF   x00
0551C:  MOVLB  5
0551E:  CLRF   xFF
05520:  CLRF   xFE
05522:  CLRF   xFD
05524:  MOVLB  0
....................       } 
....................     
....................       Tpulso=(tmp/Setpoint)*Tciclo; 
05526:  MOVFF  600,65D
0552A:  MOVFF  5FF,65C
0552E:  MOVFF  5FE,65B
05532:  MOVFF  5FD,65A
05536:  MOVFF  61C,661
0553A:  MOVFF  61B,660
0553E:  MOVFF  61A,65F
05542:  MOVFF  619,65E
05546:  CALL   10E8
0554A:  MOVFF  00,659
0554E:  MOVFF  01,65A
05552:  MOVFF  02,65B
05556:  MOVFF  03,65C
0555A:  MOVFF  03,67C
0555E:  MOVFF  02,67B
05562:  MOVFF  01,67A
05566:  MOVFF  00,679
0556A:  MOVFF  5EC,680
0556E:  MOVFF  5EB,67F
05572:  MOVFF  5EA,67E
05576:  MOVFF  5E9,67D
0557A:  CALL   2D3C
0557E:  MOVFF  03,5F0
05582:  MOVFF  02,5EF
05586:  MOVFF  01,5EE
0558A:  MOVFF  00,5ED
....................        
....................       if(error<0.9) 
0558E:  MOVFF  5F4,660
05592:  MOVFF  5F3,65F
05596:  MOVFF  5F2,65E
0559A:  MOVFF  5F1,65D
0559E:  MOVLW  66
055A0:  MOVLB  6
055A2:  MOVWF  x64
055A4:  MOVWF  x63
055A6:  MOVWF  x62
055A8:  MOVLW  7E
055AA:  MOVWF  x61
055AC:  MOVLB  0
055AE:  CALL   1C42
055B2:  BTFSS  FD8.0
055B4:  BRA    56C2
....................       { 
....................          if(error<=0.8){    
055B6:  MOVFF  5F4,660
055BA:  MOVFF  5F3,65F
055BE:  MOVFF  5F2,65E
055C2:  MOVFF  5F1,65D
055C6:  MOVLW  CD
055C8:  MOVLB  6
055CA:  MOVWF  x64
055CC:  MOVLW  CC
055CE:  MOVWF  x63
055D0:  MOVLW  4C
055D2:  MOVWF  x62
055D4:  MOVLW  7E
055D6:  MOVWF  x61
055D8:  MOVLB  0
055DA:  CALL   1C42
055DE:  BC    55E2
055E0:  BNZ   55FE
....................             if(flag_ajuste==0){ 
055E2:  MOVLB  5
055E4:  BTFSC  x87.6
055E6:  BRA    55FE
....................                TpulsoMax=Tpulso; 
055E8:  MOVFF  5F0,618
055EC:  MOVFF  5EF,617
055F0:  MOVFF  5EE,616
055F4:  MOVFF  5ED,615
....................                flag_ajuste=1;   
055F8:  BSF    x87.6
....................                Ajusto=5; 
055FA:  MOVLW  05
055FC:  MOVWF  x91
....................             } 
....................          } 
....................           
....................          if(error<=0.4){    
055FE:  MOVFF  5F4,660
05602:  MOVFF  5F3,65F
05606:  MOVFF  5F2,65E
0560A:  MOVFF  5F1,65D
0560E:  MOVLW  CD
05610:  MOVLB  6
05612:  MOVWF  x64
05614:  MOVLW  CC
05616:  MOVWF  x63
05618:  MOVLW  4C
0561A:  MOVWF  x62
0561C:  MOVLW  7D
0561E:  MOVWF  x61
05620:  MOVLB  0
05622:  CALL   1C42
05626:  BC    562A
05628:  BNZ   5646
....................             if(flag_ajuste2==0){ 
0562A:  MOVLB  5
0562C:  BTFSC  x87.7
0562E:  BRA    5646
....................                Tpulsomin=Tpulso; 
05630:  MOVFF  5F0,5B8
05634:  MOVFF  5EF,5B7
05638:  MOVFF  5EE,5B6
0563C:  MOVFF  5ED,5B5
....................                flag_ajuste2=1;            
05640:  BSF    x87.7
....................                Ajusto=5; 
05642:  MOVLW  05
05644:  MOVWF  x91
....................             } 
....................          } 
....................           
....................          if(flag_ajuste2==1){ 
05646:  MOVLB  5
05648:  BTFSS  x87.7
0564A:  BRA    5686
....................             if(Tpulso<Tpulsomin){ 
0564C:  MOVFF  5F0,660
05650:  MOVFF  5EF,65F
05654:  MOVFF  5EE,65E
05658:  MOVFF  5ED,65D
0565C:  MOVFF  5B8,664
05660:  MOVFF  5B7,663
05664:  MOVFF  5B6,662
05668:  MOVFF  5B5,661
0566C:  MOVLB  0
0566E:  CALL   1C42
05672:  BNC   5684
....................                Tpulso=Tpulsomin; 
05674:  MOVFF  5B8,5F0
05678:  MOVFF  5B7,5EF
0567C:  MOVFF  5B6,5EE
05680:  MOVFF  5B5,5ED
05684:  MOVLB  5
....................             } 
....................          } 
....................          if(flag_ajuste==1){    
05686:  BTFSS  x87.6
05688:  BRA    56C4
....................             if(Tpulso>TpulsoMax){ 
0568A:  MOVFF  618,660
0568E:  MOVFF  617,65F
05692:  MOVFF  616,65E
05696:  MOVFF  615,65D
0569A:  MOVFF  5F0,664
0569E:  MOVFF  5EF,663
056A2:  MOVFF  5EE,662
056A6:  MOVFF  5ED,661
056AA:  MOVLB  0
056AC:  CALL   1C42
056B0:  BNC   56C2
....................                Tpulso=TpulsoMax; 
056B2:  MOVFF  618,5F0
056B6:  MOVFF  617,5EF
056BA:  MOVFF  616,5EE
056BE:  MOVFF  615,5ED
056C2:  MOVLB  5
....................             }  
....................          } 
....................       } 
....................       Tp=(Tpulso/0.005); 
056C4:  MOVFF  5F0,65D
056C8:  MOVFF  5EF,65C
056CC:  MOVFF  5EE,65B
056D0:  MOVFF  5ED,65A
056D4:  MOVLW  0A
056D6:  MOVLB  6
056D8:  MOVWF  x61
056DA:  MOVLW  D7
056DC:  MOVWF  x60
056DE:  MOVLW  23
056E0:  MOVWF  x5F
056E2:  MOVLW  77
056E4:  MOVWF  x5E
056E6:  MOVLB  0
056E8:  CALL   10E8
056EC:  MOVFF  03,65C
056F0:  MOVFF  02,65B
056F4:  MOVFF  01,65A
056F8:  MOVFF  00,659
056FC:  CALL   4308
05700:  MOVFF  02,5AE
05704:  MOVFF  01,5AD
....................       Tc=(Tciclo/0.005); 
05708:  MOVFF  5EC,65D
0570C:  MOVFF  5EB,65C
05710:  MOVFF  5EA,65B
05714:  MOVFF  5E9,65A
05718:  MOVLW  0A
0571A:  MOVLB  6
0571C:  MOVWF  x61
0571E:  MOVLW  D7
05720:  MOVWF  x60
05722:  MOVLW  23
05724:  MOVWF  x5F
05726:  MOVLW  77
05728:  MOVWF  x5E
0572A:  MOVLB  0
0572C:  CALL   10E8
05730:  MOVFF  03,65C
05734:  MOVFF  02,65B
05738:  MOVFF  01,65A
0573C:  MOVFF  00,659
05740:  CALL   4308
05744:  MOVFF  02,5B0
05748:  MOVFF  01,5AF
....................       Controlando=1;      
0574C:  MOVLW  01
0574E:  MOVLB  5
05750:  MOVWF  x90
....................     
.................... //--------------------------------------------------------------------------------------------------------------------//    
....................    
.................... } 
05752:  MOVLB  0
05754:  RETLW  00
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
02BEA:  MOVLB  6
02BEC:  MOVFF  661,01
02BF0:  MOVFF  662,03
02BF4:  MOVFF  661,667
02BF8:  MOVFF  662,668
02BFC:  MOVLW  06
02BFE:  MOVWF  FEA
02C00:  MOVLW  39
02C02:  MOVWF  FE9
02C04:  MOVFF  662,FE2
02C08:  MOVFF  661,FE1
02C0C:  MOVF   FE7,F
02C0E:  MOVFF  FE6,FEE
02C12:  BNZ   2C0C
....................    if(sombreado==2) 
02C14:  MOVF   x65,W
02C16:  SUBLW  02
02C18:  BNZ   2C42
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
02C1A:  MOVLW  01
02C1C:  ADDWF  x63,W
02C1E:  MOVWF  x67
02C20:  MOVLW  01
02C22:  ADDWF  x64,W
02C24:  MOVWF  x68
02C26:  MOVFF  667,672
02C2A:  MOVWF  x73
02C2C:  MOVLW  06
02C2E:  MOVWF  x75
02C30:  MOVLW  39
02C32:  MOVWF  x74
02C34:  MOVFF  666,676
02C38:  MOVLW  01
02C3A:  MOVWF  x77
02C3C:  MOVLB  0
02C3E:  RCALL  2832
02C40:  MOVLB  6
....................    if(sombreado==1) 
02C42:  DECFSZ x65,W
02C44:  BRA    2C90
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
02C46:  MOVF   x66,W
02C48:  MULLW  08
02C4A:  MOVF   FF3,W
02C4C:  ADDWF  x64,W
02C4E:  MOVWF  x67
02C50:  CLRF   x72
02C52:  MOVFF  664,673
02C56:  MOVLW  7F
02C58:  MOVWF  x74
02C5A:  MOVFF  667,675
02C5E:  MOVLW  01
02C60:  MOVWF  x76
02C62:  MOVWF  x77
02C64:  MOVLB  0
02C66:  RCALL  2B28
02C68:  MOVLW  01
02C6A:  MOVLB  6
02C6C:  ADDWF  x63,W
02C6E:  MOVWF  x67
02C70:  MOVLW  01
02C72:  ADDWF  x64,W
02C74:  MOVWF  x68
02C76:  MOVFF  667,672
02C7A:  MOVWF  x73
02C7C:  MOVLW  06
02C7E:  MOVWF  x75
02C80:  MOVLW  39
02C82:  MOVWF  x74
02C84:  MOVFF  666,676
02C88:  CLRF   x77
02C8A:  MOVLB  0
02C8C:  RCALL  2832
02C8E:  MOVLB  6
....................    if(sombreado==0) 
02C90:  MOVF   x65,F
02C92:  BNZ   2CDE
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
02C94:  MOVF   x66,W
02C96:  MULLW  08
02C98:  MOVF   FF3,W
02C9A:  ADDWF  x64,W
02C9C:  MOVWF  x67
02C9E:  CLRF   x72
02CA0:  MOVFF  664,673
02CA4:  MOVLW  7F
02CA6:  MOVWF  x74
02CA8:  MOVFF  667,675
02CAC:  MOVLW  01
02CAE:  MOVWF  x76
02CB0:  CLRF   x77
02CB2:  MOVLB  0
02CB4:  RCALL  2B28
02CB6:  MOVLW  01
02CB8:  MOVLB  6
02CBA:  ADDWF  x63,W
02CBC:  MOVWF  x67
02CBE:  MOVLW  01
02CC0:  ADDWF  x64,W
02CC2:  MOVWF  x68
02CC4:  MOVFF  667,672
02CC8:  MOVWF  x73
02CCA:  MOVLW  06
02CCC:  MOVWF  x75
02CCE:  MOVLW  39
02CD0:  MOVWF  x74
02CD2:  MOVFF  666,676
02CD6:  MOVLW  01
02CD8:  MOVWF  x77
02CDA:  MOVLB  0
02CDC:  RCALL  2832
....................    glcd_update(); 
02CDE:  MOVLB  0
02CE0:  RCALL  2616
.................... } 
02CE2:  RETLW  00
....................  
.................... void displayTemps(char palabra[30], float digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==1) 
*
04832:  MOVLB  6
04834:  DECFSZ x61,W
04836:  BRA    4970
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
04838:  MOVLW  06
0483A:  MOVWF  x58
0483C:  MOVLW  63
0483E:  MOVWF  x57
04840:  MOVLW  42
04842:  MOVWF  FE9
04844:  MOVFF  65E,66F
04848:  MOVFF  65D,66E
0484C:  MOVFF  65C,66D
04850:  MOVFF  65B,66C
04854:  MOVLW  01
04856:  MOVWF  x70
04858:  MOVLB  0
0485A:  RCALL  467E
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, ON); 
0485C:  MOVLW  02
0485E:  MOVLB  6
04860:  SUBWF  x60,W
04862:  MOVWF  x6C
04864:  MOVF   x62,W
04866:  MULLW  08
04868:  MOVF   FF3,W
0486A:  ADDWF  x60,W
0486C:  MOVWF  x6D
0486E:  CLRF   x72
04870:  MOVFF  66C,673
04874:  MOVLW  7F
04876:  MOVWF  x74
04878:  MOVFF  66D,675
0487C:  MOVLW  01
0487E:  MOVWF  x76
04880:  MOVWF  x77
04882:  MOVLB  0
04884:  CALL   2B28
....................       strcpy(Menus.Letra,palabra); 
04888:  MOVLB  6
0488A:  MOVFF  659,01
0488E:  MOVFF  65A,03
04892:  MOVFF  659,66C
04896:  MOVFF  65A,66D
0489A:  MOVLW  06
0489C:  MOVWF  FEA
0489E:  MOVLW  39
048A0:  MOVWF  FE9
048A2:  MOVFF  65A,FE2
048A6:  MOVFF  659,FE1
048AA:  MOVF   FE7,F
048AC:  MOVFF  FE6,FEE
048B0:  BNZ   48AA
....................       glcd_text57(x+90, y+1, voltage, tamano, OFF); 
048B2:  MOVLW  5A
048B4:  ADDWF  x5F,W
048B6:  MOVWF  x6C
048B8:  MOVLW  01
048BA:  ADDWF  x60,W
048BC:  MOVWF  x6D
048BE:  MOVFF  66C,672
048C2:  MOVWF  x73
048C4:  MOVLW  06
048C6:  MOVWF  x75
048C8:  MOVLW  63
048CA:  MOVWF  x74
048CC:  MOVFF  662,676
048D0:  CLRF   x77
048D2:  MOVLB  0
048D4:  CALL   2832
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF); 
048D8:  MOVLW  01
048DA:  MOVLB  6
048DC:  ADDWF  x5F,W
048DE:  MOVWF  x6C
048E0:  MOVLW  01
048E2:  ADDWF  x60,W
048E4:  MOVWF  x6D
048E6:  MOVFF  66C,672
048EA:  MOVWF  x73
048EC:  MOVLW  06
048EE:  MOVWF  x75
048F0:  MOVLW  39
048F2:  MOVWF  x74
048F4:  MOVFF  662,676
048F8:  CLRF   x77
048FA:  MOVLB  0
048FC:  CALL   2832
....................       strcpy(Menus.Letra,"C"); 
04900:  MOVLW  06
04902:  MOVWF  FEA
04904:  MOVLW  39
04906:  MOVWF  FE9
04908:  MOVFF  FF2,66C
0490C:  BCF    FF2.7
0490E:  MOVLW  00
04910:  CALL   06D2
04914:  TBLRD*-
04916:  TBLRD*+
04918:  MOVF   FF5,W
0491A:  MOVWF  FEE
0491C:  IORLW  00
0491E:  BNZ   4916
04920:  MOVLB  6
04922:  BTFSC  x6C.7
04924:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, OFF); 
04926:  MOVLW  78
04928:  ADDWF  x5F,W
0492A:  MOVWF  x6C
0492C:  MOVLW  01
0492E:  ADDWF  x60,W
04930:  MOVWF  x6D
04932:  MOVFF  66C,672
04936:  MOVWF  x73
04938:  MOVLW  06
0493A:  MOVWF  x75
0493C:  MOVLW  39
0493E:  MOVWF  x74
04940:  MOVFF  662,676
04944:  CLRF   x77
04946:  MOVLB  0
04948:  CALL   2832
....................       glcd_circle(x+115,y-1,1,NO,OFF); 
0494C:  MOVLW  73
0494E:  MOVLB  6
04950:  ADDWF  x5F,W
04952:  MOVWF  x6C
04954:  MOVLW  01
04956:  SUBWF  x60,W
04958:  MOVWF  x6D
0495A:  MOVFF  66C,66E
0495E:  MOVWF  x6F
04960:  MOVLW  01
04962:  MOVWF  x70
04964:  CLRF   x71
04966:  CLRF   x72
04968:  MOVLB  0
0496A:  CALL   40DE
0496E:  MOVLB  6
....................    } 
....................    if(sombreado==0) 
04970:  MOVF   x61,F
04972:  BTFSS  FD8.2
04974:  BRA    4AB2
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
04976:  MOVLW  06
04978:  MOVWF  x58
0497A:  MOVLW  63
0497C:  MOVWF  x57
0497E:  MOVLW  42
04980:  MOVWF  FE9
04982:  MOVFF  65E,66F
04986:  MOVFF  65D,66E
0498A:  MOVFF  65C,66D
0498E:  MOVFF  65B,66C
04992:  MOVLW  01
04994:  MOVWF  x70
04996:  MOVLB  0
04998:  RCALL  467E
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, OFF); 
0499A:  MOVLW  02
0499C:  MOVLB  6
0499E:  SUBWF  x60,W
049A0:  MOVWF  x6C
049A2:  MOVF   x62,W
049A4:  MULLW  08
049A6:  MOVF   FF3,W
049A8:  ADDWF  x60,W
049AA:  MOVWF  x6D
049AC:  CLRF   x72
049AE:  MOVFF  66C,673
049B2:  MOVLW  7F
049B4:  MOVWF  x74
049B6:  MOVFF  66D,675
049BA:  MOVLW  01
049BC:  MOVWF  x76
049BE:  CLRF   x77
049C0:  MOVLB  0
049C2:  CALL   2B28
....................       strcpy(Menus.Letra,palabra); 
049C6:  MOVLB  6
049C8:  MOVFF  659,01
049CC:  MOVFF  65A,03
049D0:  MOVFF  659,66C
049D4:  MOVFF  65A,66D
049D8:  MOVLW  06
049DA:  MOVWF  FEA
049DC:  MOVLW  39
049DE:  MOVWF  FE9
049E0:  MOVFF  65A,FE2
049E4:  MOVFF  659,FE1
049E8:  MOVF   FE7,F
049EA:  MOVFF  FE6,FEE
049EE:  BNZ   49E8
....................       glcd_text57(x+90, y+1, voltage, tamano, ON); 
049F0:  MOVLW  5A
049F2:  ADDWF  x5F,W
049F4:  MOVWF  x6C
049F6:  MOVLW  01
049F8:  ADDWF  x60,W
049FA:  MOVWF  x6D
049FC:  MOVFF  66C,672
04A00:  MOVWF  x73
04A02:  MOVLW  06
04A04:  MOVWF  x75
04A06:  MOVLW  63
04A08:  MOVWF  x74
04A0A:  MOVFF  662,676
04A0E:  MOVLW  01
04A10:  MOVWF  x77
04A12:  MOVLB  0
04A14:  CALL   2832
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, ON); 
04A18:  MOVLW  01
04A1A:  MOVLB  6
04A1C:  ADDWF  x5F,W
04A1E:  MOVWF  x6C
04A20:  MOVLW  01
04A22:  ADDWF  x60,W
04A24:  MOVWF  x6D
04A26:  MOVFF  66C,672
04A2A:  MOVWF  x73
04A2C:  MOVLW  06
04A2E:  MOVWF  x75
04A30:  MOVLW  39
04A32:  MOVWF  x74
04A34:  MOVFF  662,676
04A38:  MOVLW  01
04A3A:  MOVWF  x77
04A3C:  MOVLB  0
04A3E:  CALL   2832
....................       strcpy(Menus.Letra,"C"); 
04A42:  MOVLW  06
04A44:  MOVWF  FEA
04A46:  MOVLW  39
04A48:  MOVWF  FE9
04A4A:  MOVFF  FF2,66C
04A4E:  BCF    FF2.7
04A50:  MOVLW  00
04A52:  CALL   06D2
04A56:  TBLRD*-
04A58:  TBLRD*+
04A5A:  MOVF   FF5,W
04A5C:  MOVWF  FEE
04A5E:  IORLW  00
04A60:  BNZ   4A58
04A62:  MOVLB  6
04A64:  BTFSC  x6C.7
04A66:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, ON); 
04A68:  MOVLW  78
04A6A:  ADDWF  x5F,W
04A6C:  MOVWF  x6C
04A6E:  MOVLW  01
04A70:  ADDWF  x60,W
04A72:  MOVWF  x6D
04A74:  MOVFF  66C,672
04A78:  MOVWF  x73
04A7A:  MOVLW  06
04A7C:  MOVWF  x75
04A7E:  MOVLW  39
04A80:  MOVWF  x74
04A82:  MOVFF  662,676
04A86:  MOVLW  01
04A88:  MOVWF  x77
04A8A:  MOVLB  0
04A8C:  CALL   2832
....................       glcd_circle(x+115,y-1,1,NO,ON); 
04A90:  MOVLW  73
04A92:  MOVLB  6
04A94:  ADDWF  x5F,W
04A96:  MOVWF  x6C
04A98:  MOVLW  01
04A9A:  SUBWF  x60,W
04A9C:  MOVWF  x6D
04A9E:  MOVFF  66C,66E
04AA2:  MOVWF  x6F
04AA4:  MOVLW  01
04AA6:  MOVWF  x70
04AA8:  CLRF   x71
04AAA:  MOVWF  x72
04AAC:  MOVLB  0
04AAE:  CALL   40DE
....................    } 
....................    glcd_update(); 
04AB2:  MOVLB  0
04AB4:  CALL   2616
.................... } 
04AB8:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
04B40:  MOVLB  6
04B42:  MOVF   x5D,W
04B44:  SUBLW  02
04B46:  BNZ   4BB8
....................    { 
....................       sprintf(voltage, "%03u", digito); 
04B48:  MOVLW  06
04B4A:  MOVWF  x58
04B4C:  MOVLW  5F
04B4E:  MOVWF  x57
04B50:  MOVFF  65A,668
04B54:  MOVLW  03
04B56:  MOVWF  x69
04B58:  MOVLB  0
04B5A:  RCALL  4ABA
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
04B5C:  MOVLB  6
04B5E:  MOVF   x5E,W
04B60:  MULLW  12
04B62:  MOVF   FF3,W
04B64:  ADDWF  x5B,W
04B66:  MOVWF  x68
04B68:  MOVF   x5E,W
04B6A:  MULLW  08
04B6C:  MOVF   FF3,W
04B6E:  ADDWF  x5C,W
04B70:  MOVWF  x69
04B72:  MOVFF  65B,672
04B76:  MOVFF  65C,673
04B7A:  MOVFF  668,674
04B7E:  MOVWF  x75
04B80:  MOVLW  01
04B82:  MOVWF  x76
04B84:  MOVWF  x77
04B86:  MOVLB  0
04B88:  CALL   2B28
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
04B8C:  MOVLW  01
04B8E:  MOVLB  6
04B90:  ADDWF  x5B,W
04B92:  MOVWF  x68
04B94:  MOVLW  01
04B96:  ADDWF  x5C,W
04B98:  MOVWF  x69
04B9A:  MOVFF  668,672
04B9E:  MOVWF  x73
04BA0:  MOVLW  06
04BA2:  MOVWF  x75
04BA4:  MOVLW  5F
04BA6:  MOVWF  x74
04BA8:  MOVFF  65E,676
04BAC:  CLRF   x77
04BAE:  MOVLB  0
04BB0:  CALL   2832
....................    } 
....................    else 
04BB4:  BRA    4CFC
04BB6:  MOVLB  6
....................    { 
....................       if(sombreado==3) 
04BB8:  MOVF   x5D,W
04BBA:  SUBLW  03
04BBC:  BNZ   4C2E
....................       { 
....................          sprintf(voltage, "%03u", digito); 
04BBE:  MOVLW  06
04BC0:  MOVWF  x58
04BC2:  MOVLW  5F
04BC4:  MOVWF  x57
04BC6:  MOVFF  65A,668
04BCA:  MOVLW  03
04BCC:  MOVWF  x69
04BCE:  MOVLB  0
04BD0:  RCALL  4ABA
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
04BD2:  MOVLB  6
04BD4:  MOVF   x5E,W
04BD6:  MULLW  12
04BD8:  MOVF   FF3,W
04BDA:  ADDWF  x5B,W
04BDC:  MOVWF  x68
04BDE:  MOVF   x5E,W
04BE0:  MULLW  08
04BE2:  MOVF   FF3,W
04BE4:  ADDWF  x5C,W
04BE6:  MOVWF  x69
04BE8:  MOVFF  65B,672
04BEC:  MOVFF  65C,673
04BF0:  MOVFF  668,674
04BF4:  MOVWF  x75
04BF6:  MOVLW  01
04BF8:  MOVWF  x76
04BFA:  CLRF   x77
04BFC:  MOVLB  0
04BFE:  CALL   2B28
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
04C02:  MOVLW  01
04C04:  MOVLB  6
04C06:  ADDWF  x5B,W
04C08:  MOVWF  x68
04C0A:  MOVLW  01
04C0C:  ADDWF  x5C,W
04C0E:  MOVWF  x69
04C10:  MOVFF  668,672
04C14:  MOVWF  x73
04C16:  MOVLW  06
04C18:  MOVWF  x75
04C1A:  MOVLW  5F
04C1C:  MOVWF  x74
04C1E:  MOVFF  65E,676
04C22:  MOVLW  01
04C24:  MOVWF  x77
04C26:  MOVLB  0
04C28:  CALL   2832
04C2C:  MOVLB  6
....................       } 
....................       sprintf(voltage, "%u", digito); 
04C2E:  MOVLW  06
04C30:  MOVWF  x58
04C32:  MOVLW  5F
04C34:  MOVWF  x57
04C36:  MOVFF  65A,668
04C3A:  MOVLW  1B
04C3C:  MOVWF  x69
04C3E:  MOVLB  0
04C40:  RCALL  4ABA
....................       if(sombreado==1) 
04C42:  MOVLB  6
04C44:  DECFSZ x5D,W
04C46:  BRA    4CA0
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
04C48:  MOVF   x5E,W
04C4A:  MULLW  05
04C4C:  MOVF   FF3,W
04C4E:  ADDWF  x5B,W
04C50:  MOVWF  x68
04C52:  MOVF   x5E,W
04C54:  MULLW  08
04C56:  MOVF   FF3,W
04C58:  ADDWF  x5C,W
04C5A:  MOVWF  x69
04C5C:  MOVFF  65B,672
04C60:  MOVFF  65C,673
04C64:  MOVFF  668,674
04C68:  MOVWF  x75
04C6A:  MOVLW  01
04C6C:  MOVWF  x76
04C6E:  MOVWF  x77
04C70:  MOVLB  0
04C72:  CALL   2B28
04C76:  MOVLW  01
04C78:  MOVLB  6
04C7A:  ADDWF  x5B,W
04C7C:  MOVWF  x68
04C7E:  MOVLW  01
04C80:  ADDWF  x5C,W
04C82:  MOVWF  x69
04C84:  MOVFF  668,672
04C88:  MOVWF  x73
04C8A:  MOVLW  06
04C8C:  MOVWF  x75
04C8E:  MOVLW  5F
04C90:  MOVWF  x74
04C92:  MOVFF  65E,676
04C96:  CLRF   x77
04C98:  MOVLB  0
04C9A:  CALL   2832
04C9E:  MOVLB  6
....................       if(sombreado==0) 
04CA0:  MOVF   x5D,F
04CA2:  BNZ   4CFE
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
04CA4:  MOVF   x5E,W
04CA6:  MULLW  05
04CA8:  MOVF   FF3,W
04CAA:  ADDWF  x5B,W
04CAC:  MOVWF  x68
04CAE:  MOVF   x5E,W
04CB0:  MULLW  08
04CB2:  MOVF   FF3,W
04CB4:  ADDWF  x5C,W
04CB6:  MOVWF  x69
04CB8:  MOVFF  65B,672
04CBC:  MOVFF  65C,673
04CC0:  MOVFF  668,674
04CC4:  MOVWF  x75
04CC6:  MOVLW  01
04CC8:  MOVWF  x76
04CCA:  CLRF   x77
04CCC:  MOVLB  0
04CCE:  CALL   2B28
04CD2:  MOVLW  01
04CD4:  MOVLB  6
04CD6:  ADDWF  x5B,W
04CD8:  MOVWF  x68
04CDA:  MOVLW  01
04CDC:  ADDWF  x5C,W
04CDE:  MOVWF  x69
04CE0:  MOVFF  668,672
04CE4:  MOVWF  x73
04CE6:  MOVLW  06
04CE8:  MOVWF  x75
04CEA:  MOVLW  5F
04CEC:  MOVWF  x74
04CEE:  MOVFF  65E,676
04CF2:  MOVLW  01
04CF4:  MOVWF  x77
04CF6:  MOVLB  0
04CF8:  CALL   2832
04CFC:  MOVLB  6
....................    } 
....................    glcd_update(); 
04CFE:  MOVLB  0
04D00:  CALL   2616
.................... } 
04D04:  RETLW  00
....................  
.................... void displayTT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
0581E:  MOVLW  06
05820:  MOVLB  6
05822:  MOVWF  x58
05824:  MOVLW  60
05826:  MOVWF  x57
05828:  MOVLW  42
0582A:  MOVWF  FE9
0582C:  MOVFF  65C,66F
05830:  MOVFF  65B,66E
05834:  MOVFF  65A,66D
05838:  MOVFF  659,66C
0583C:  MOVLW  01
0583E:  MOVWF  x70
05840:  MOVLB  0
05842:  CALL   467E
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
05846:  MOVLB  6
05848:  MOVF   x5F,W
0584A:  MULLW  1B
0584C:  MOVF   FF3,W
0584E:  ADDWF  x5D,W
05850:  MOVWF  x69
05852:  MOVF   x5F,W
05854:  MULLW  08
05856:  MOVF   FF3,W
05858:  ADDWF  x5E,W
0585A:  MOVWF  x6A
0585C:  MOVFF  65D,672
05860:  MOVFF  65E,673
05864:  MOVFF  669,674
05868:  MOVWF  x75
0586A:  MOVLW  01
0586C:  MOVWF  x76
0586E:  CLRF   x77
05870:  MOVLB  0
05872:  CALL   2B28
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
05876:  MOVFF  65D,672
0587A:  MOVFF  65E,673
0587E:  MOVLW  06
05880:  MOVLB  6
05882:  MOVWF  x75
05884:  MOVLW  60
05886:  MOVWF  x74
05888:  MOVFF  65F,676
0588C:  MOVLW  01
0588E:  MOVWF  x77
05890:  MOVLB  0
05892:  CALL   2832
.................... } 
05896:  RETLW  00
....................  
.................... void displayTemperatura(int16 digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
04402:  MOVLB  6
04404:  MOVF   x5F,W
04406:  SUBLW  02
04408:  BNZ   447E
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
0440A:  MOVLW  06
0440C:  MOVWF  x58
0440E:  MOVLW  61
04410:  MOVWF  x57
04412:  MOVLW  0A
04414:  MOVWF  FE9
04416:  MOVFF  65C,66B
0441A:  MOVFF  65B,66A
0441E:  MOVLB  0
04420:  RCALL  4344
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
04422:  MOVLB  6
04424:  MOVF   x60,W
04426:  MULLW  12
04428:  MOVF   FF3,W
0442A:  ADDWF  x5D,W
0442C:  MOVWF  x6A
0442E:  MOVF   x60,W
04430:  MULLW  08
04432:  MOVF   FF3,W
04434:  ADDWF  x5E,W
04436:  MOVWF  x6B
04438:  MOVFF  65D,672
0443C:  MOVFF  65E,673
04440:  MOVFF  66A,674
04444:  MOVWF  x75
04446:  MOVLW  01
04448:  MOVWF  x76
0444A:  MOVWF  x77
0444C:  MOVLB  0
0444E:  CALL   2B28
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
04452:  MOVLW  01
04454:  MOVLB  6
04456:  ADDWF  x5D,W
04458:  MOVWF  x6A
0445A:  MOVLW  01
0445C:  ADDWF  x5E,W
0445E:  MOVWF  x6B
04460:  MOVFF  66A,672
04464:  MOVWF  x73
04466:  MOVLW  06
04468:  MOVWF  x75
0446A:  MOVLW  61
0446C:  MOVWF  x74
0446E:  MOVFF  660,676
04472:  CLRF   x77
04474:  MOVLB  0
04476:  CALL   2832
....................    } 
....................    else 
0447A:  BRA    45B0
0447C:  MOVLB  6
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
0447E:  MOVLW  06
04480:  MOVWF  x58
04482:  MOVLW  61
04484:  MOVWF  x57
04486:  MOVLW  0A
04488:  MOVWF  FE9
0448A:  MOVFF  65C,66B
0448E:  MOVFF  65B,66A
04492:  MOVLB  0
04494:  RCALL  4344
....................     
....................       if(sombreado==4) 
04496:  MOVLB  6
04498:  MOVF   x5F,W
0449A:  SUBLW  04
0449C:  BNZ   44F8
....................       { 
....................          glcd_rect(x, y, x+(tamano*16), y+(tamano*8), YES, OFF); 
0449E:  MOVF   x60,W
044A0:  MULLW  10
044A2:  MOVF   FF3,W
044A4:  ADDWF  x5D,W
044A6:  MOVWF  x6A
044A8:  MOVF   x60,W
044AA:  MULLW  08
044AC:  MOVF   FF3,W
044AE:  ADDWF  x5E,W
044B0:  MOVWF  x6B
044B2:  MOVFF  65D,672
044B6:  MOVFF  65E,673
044BA:  MOVFF  66A,674
044BE:  MOVWF  x75
044C0:  MOVLW  01
044C2:  MOVWF  x76
044C4:  CLRF   x77
044C6:  MOVLB  0
044C8:  CALL   2B28
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
044CC:  MOVLW  01
044CE:  MOVLB  6
044D0:  ADDWF  x5D,W
044D2:  MOVWF  x6A
044D4:  MOVLW  01
044D6:  ADDWF  x5E,W
044D8:  MOVWF  x6B
044DA:  MOVFF  66A,672
044DE:  MOVWF  x73
044E0:  MOVLW  06
044E2:  MOVWF  x75
044E4:  MOVLW  61
044E6:  MOVWF  x74
044E8:  MOVFF  660,676
044EC:  MOVLW  01
044EE:  MOVWF  x77
044F0:  MOVLB  0
044F2:  CALL   2832
044F6:  MOVLB  6
....................       } 
....................       if(sombreado==1) 
044F8:  DECFSZ x5F,W
044FA:  BRA    4554
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
044FC:  MOVF   x60,W
044FE:  MULLW  05
04500:  MOVF   FF3,W
04502:  ADDWF  x5D,W
04504:  MOVWF  x6A
04506:  MOVF   x60,W
04508:  MULLW  08
0450A:  MOVF   FF3,W
0450C:  ADDWF  x5E,W
0450E:  MOVWF  x6B
04510:  MOVFF  65D,672
04514:  MOVFF  65E,673
04518:  MOVFF  66A,674
0451C:  MOVWF  x75
0451E:  MOVLW  01
04520:  MOVWF  x76
04522:  MOVWF  x77
04524:  MOVLB  0
04526:  CALL   2B28
0452A:  MOVLW  01
0452C:  MOVLB  6
0452E:  ADDWF  x5D,W
04530:  MOVWF  x6A
04532:  MOVLW  01
04534:  ADDWF  x5E,W
04536:  MOVWF  x6B
04538:  MOVFF  66A,672
0453C:  MOVWF  x73
0453E:  MOVLW  06
04540:  MOVWF  x75
04542:  MOVLW  61
04544:  MOVWF  x74
04546:  MOVFF  660,676
0454A:  CLRF   x77
0454C:  MOVLB  0
0454E:  CALL   2832
04552:  MOVLB  6
....................       if(sombreado==0) 
04554:  MOVF   x5F,F
04556:  BNZ   45B2
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
04558:  MOVF   x60,W
0455A:  MULLW  05
0455C:  MOVF   FF3,W
0455E:  ADDWF  x5D,W
04560:  MOVWF  x6A
04562:  MOVF   x60,W
04564:  MULLW  08
04566:  MOVF   FF3,W
04568:  ADDWF  x5E,W
0456A:  MOVWF  x6B
0456C:  MOVFF  65D,672
04570:  MOVFF  65E,673
04574:  MOVFF  66A,674
04578:  MOVWF  x75
0457A:  MOVLW  01
0457C:  MOVWF  x76
0457E:  CLRF   x77
04580:  MOVLB  0
04582:  CALL   2B28
04586:  MOVLW  01
04588:  MOVLB  6
0458A:  ADDWF  x5D,W
0458C:  MOVWF  x6A
0458E:  MOVLW  01
04590:  ADDWF  x5E,W
04592:  MOVWF  x6B
04594:  MOVFF  66A,672
04598:  MOVWF  x73
0459A:  MOVLW  06
0459C:  MOVWF  x75
0459E:  MOVLW  61
045A0:  MOVWF  x74
045A2:  MOVFF  660,676
045A6:  MOVLW  01
045A8:  MOVWF  x77
045AA:  MOVLB  0
045AC:  CALL   2832
045B0:  MOVLB  6
....................    } 
....................    glcd_update(); 
045B2:  MOVLB  0
045B4:  CALL   2616
.................... } 
045B8:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
04D06:  MOVLB  6
04D08:  MOVF   x59,W
04D0A:  SUBLW  05
04D0C:  BNZ   4DB2
....................    for( i = 0 ; i < 64 ; i ++ ) 
04D0E:  CLRF   x5A
04D10:  MOVF   x5A,W
04D12:  SUBLW  3F
04D14:  BNC   4DB2
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
04D16:  CLRF   x5B
04D18:  MOVF   x5B,W
04D1A:  SUBLW  0F
04D1C:  BNC   4DAE
....................       {     
....................          for(k=7;k>-1;k--) 
04D1E:  MOVLW  07
04D20:  MOVWF  x5C
04D22:  MOVF   x5C,W
04D24:  XORLW  80
04D26:  SUBLW  7F
04D28:  BC    4DAA
....................          {       
....................             if( bit_test(Horno[i][j] ,7-k ))  
04D2A:  CLRF   x5E
04D2C:  MOVFF  65A,65D
04D30:  CLRF   x60
04D32:  MOVLW  10
04D34:  MOVWF  x5F
04D36:  MOVLB  0
04D38:  CALL   2E32
04D3C:  MOVFF  02,65E
04D40:  MOVFF  01,65D
04D44:  MOVLB  6
04D46:  MOVF   x5B,W
04D48:  ADDWF  01,W
04D4A:  MOVWF  01
04D4C:  MOVLW  00
04D4E:  ADDWFC 02,W
04D50:  MOVWF  03
04D52:  MOVF   01,W
04D54:  MOVFF  FF2,65D
04D58:  BCF    FF2.7
04D5A:  MOVFF  03,FF7
04D5E:  MOVLB  0
04D60:  CALL   02B6
04D64:  MOVLB  6
04D66:  BTFSC  x5D.7
04D68:  BSF    FF2.7
04D6A:  MOVWF  x5D
04D6C:  MOVLW  07
04D6E:  BSF    FD8.0
04D70:  SUBFWB x5C,W
04D72:  MOVWF  x5E
04D74:  MOVFF  65D,00
04D78:  MOVF   x5E,W
04D7A:  MOVWF  01
04D7C:  BZ    4D86
04D7E:  BCF    FD8.0
04D80:  RRCF   00,F
04D82:  DECFSZ 01,F
04D84:  BRA    4D7E
04D86:  BTFSS  00.0
04D88:  BRA    4DA6
....................                glcd_pixel( j*8+k,i, ON ); 
04D8A:  MOVF   x5B,W
04D8C:  MULLW  08
04D8E:  MOVF   FF3,W
04D90:  ADDWF  x5C,W
04D92:  MOVWF  x5D
04D94:  MOVWF  x8D
04D96:  MOVFF  65A,68E
04D9A:  MOVLW  01
04D9C:  MOVWF  x8F
04D9E:  MOVLB  0
04DA0:  CALL   2776
04DA4:  MOVLB  6
....................          }   
04DA6:  DECF   x5C,F
04DA8:  BRA    4D22
....................       } 
04DAA:  INCF   x5B,F
04DAC:  BRA    4D18
....................    } 
04DAE:  INCF   x5A,F
04DB0:  BRA    4D10
....................    } 
....................     
.................... } 
04DB2:  MOVLB  0
04DB4:  GOTO   714E (RETURN)
....................  
....................     
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
.................... } 
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
05756:  MOVLW  06
05758:  MOVLB  6
0575A:  MOVWF  x58
0575C:  MOVLW  60
0575E:  MOVWF  x57
05760:  MOVLW  42
05762:  MOVWF  FE9
05764:  MOVFF  65C,66F
05768:  MOVFF  65B,66E
0576C:  MOVFF  65A,66D
05770:  MOVFF  659,66C
05774:  MOVLW  01
05776:  MOVWF  x70
05778:  MOVLB  0
0577A:  CALL   467E
....................    glcd_rect(x, y, x+(w*27), y+(w*7), YES, OFF); 
0577E:  MOVLB  6
05780:  MOVF   x5F,W
05782:  MULLW  1B
05784:  MOVF   FF3,W
05786:  ADDWF  x5D,W
05788:  MOVWF  x69
0578A:  MOVF   x5F,W
0578C:  MULLW  07
0578E:  MOVF   FF3,W
05790:  ADDWF  x5E,W
05792:  MOVWF  x6A
05794:  MOVFF  65D,672
05798:  MOVFF  65E,673
0579C:  MOVFF  669,674
057A0:  MOVWF  x75
057A2:  MOVLW  01
057A4:  MOVWF  x76
057A6:  CLRF   x77
057A8:  MOVLB  0
057AA:  CALL   2B28
....................    glcd_text57(x, y, voltage, w, ON); 
057AE:  MOVFF  65D,672
057B2:  MOVFF  65E,673
057B6:  MOVLW  06
057B8:  MOVLB  6
057BA:  MOVWF  x75
057BC:  MOVLW  60
057BE:  MOVWF  x74
057C0:  MOVFF  65F,676
057C4:  MOVLW  01
057C6:  MOVWF  x77
057C8:  MOVLB  0
057CA:  CALL   2832
.................... } 
057CE:  RETLW  00
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
036DE:  MOVLW  06
036E0:  MOVLB  6
036E2:  MOVWF  x58
036E4:  MOVLW  67
036E6:  MOVWF  x57
036E8:  MOVFF  663,670
036EC:  MOVLW  1F
036EE:  MOVWF  x71
036F0:  MOVLB  0
036F2:  BRA    35FE
....................     
....................    if(sombreado==1) 
036F4:  MOVLB  6
036F6:  DECFSZ x66,W
036F8:  BRA    374C
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
036FA:  MOVLW  12
036FC:  ADDWF  x64,W
036FE:  MOVWF  x70
03700:  MOVLW  18
03702:  ADDWF  x65,W
03704:  MOVWF  x71
03706:  MOVFF  664,672
0370A:  MOVFF  665,673
0370E:  MOVFF  670,674
03712:  MOVWF  x75
03714:  MOVLW  01
03716:  MOVWF  x76
03718:  MOVWF  x77
0371A:  MOVLB  0
0371C:  CALL   2B28
03720:  MOVLW  02
03722:  MOVLB  6
03724:  ADDWF  x64,W
03726:  MOVWF  x70
03728:  MOVLW  01
0372A:  ADDWF  x65,W
0372C:  MOVWF  x71
0372E:  MOVFF  670,672
03732:  MOVWF  x73
03734:  MOVLW  06
03736:  MOVWF  x75
03738:  MOVLW  67
0373A:  MOVWF  x74
0373C:  MOVLW  02
0373E:  MOVWF  x76
03740:  CLRF   x77
03742:  MOVLB  0
03744:  CALL   2832
....................    else    
03748:  BRA    379A
0374A:  MOVLB  6
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
0374C:  MOVLW  12
0374E:  ADDWF  x64,W
03750:  MOVWF  x70
03752:  MOVLW  18
03754:  ADDWF  x65,W
03756:  MOVWF  x71
03758:  MOVFF  664,672
0375C:  MOVFF  665,673
03760:  MOVFF  670,674
03764:  MOVWF  x75
03766:  CLRF   x76
03768:  CLRF   x77
0376A:  MOVLB  0
0376C:  CALL   2B28
03770:  MOVLW  02
03772:  MOVLB  6
03774:  ADDWF  x64,W
03776:  MOVWF  x70
03778:  MOVLW  01
0377A:  ADDWF  x65,W
0377C:  MOVWF  x71
0377E:  MOVFF  670,672
03782:  MOVWF  x73
03784:  MOVLW  06
03786:  MOVWF  x75
03788:  MOVLW  67
0378A:  MOVWF  x74
0378C:  MOVLW  02
0378E:  MOVWF  x76
03790:  MOVLW  01
03792:  MOVWF  x77
03794:  MOVLB  0
03796:  CALL   2832
....................  
.................... } 
0379A:  RETLW  00
....................  
.................... void MensajeAlmacenado(){ 
....................    glcd_fillScreen(OFF); 
*
037AA:  MOVLB  6
037AC:  CLRF   x61
037AE:  MOVLB  0
037B0:  CALL   25BC
....................    strcpy(Menus.Letra,"Valor"); 
037B4:  MOVLW  06
037B6:  MOVWF  FEA
037B8:  MOVLW  39
037BA:  MOVWF  FE9
037BC:  MOVFF  FF2,661
037C0:  BCF    FF2.7
037C2:  MOVLW  00
037C4:  CALL   06F2
037C8:  TBLRD*-
037CA:  TBLRD*+
037CC:  MOVF   FF5,W
037CE:  MOVWF  FEE
037D0:  IORLW  00
037D2:  BNZ   37CA
037D4:  MOVLB  6
037D6:  BTFSC  x61.7
037D8:  BSF    FF2.7
....................    displayMenu(Menus.Letra,30,0,0,2); 
037DA:  MOVLW  06
037DC:  MOVWF  x62
037DE:  MOVLW  39
037E0:  MOVWF  x61
037E2:  MOVLW  1E
037E4:  MOVWF  x63
037E6:  CLRF   x64
037E8:  CLRF   x65
037EA:  MOVLW  02
037EC:  MOVWF  x66
037EE:  MOVLB  0
037F0:  CALL   2BEA
....................    strcpy(Menus.Letra," Almacenado"); 
037F4:  MOVLW  06
037F6:  MOVWF  FEA
037F8:  MOVLW  39
037FA:  MOVWF  FE9
037FC:  MOVFF  FF2,661
03800:  BCF    FF2.7
03802:  MOVLW  00
03804:  CALL   0716
03808:  TBLRD*-
0380A:  TBLRD*+
0380C:  MOVF   FF5,W
0380E:  MOVWF  FEE
03810:  IORLW  00
03812:  BNZ   380A
03814:  MOVLB  6
03816:  BTFSC  x61.7
03818:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,2); 
0381A:  MOVLW  06
0381C:  MOVWF  x62
0381E:  MOVLW  39
03820:  MOVWF  x61
03822:  CLRF   x63
03824:  MOVLW  1E
03826:  MOVWF  x64
03828:  CLRF   x65
0382A:  MOVLW  02
0382C:  MOVWF  x66
0382E:  MOVLB  0
03830:  CALL   2BEA
....................    glcd_update(); 
03834:  CALL   2616
....................    delay_ms(2000); 
03838:  MOVLW  08
0383A:  MOVLB  6
0383C:  MOVWF  x61
0383E:  MOVLW  FA
03840:  MOVWF  x62
03842:  MOVLB  0
03844:  CALL   1052
03848:  MOVLB  6
0384A:  DECFSZ x61,F
0384C:  BRA    383E
....................    glcd_fillScreen(OFF); 
0384E:  CLRF   x61
03850:  MOVLB  0
03852:  CALL   25BC
.................... } 
03856:  RETLW  00
....................  
.................... void ConfiguraInterrupciones(){ 
....................    delay_ms(1000);    
*
0107A:  MOVLW  04
0107C:  MOVLB  6
0107E:  MOVWF  x59
01080:  MOVLW  FA
01082:  MOVWF  x62
01084:  MOVLB  0
01086:  RCALL  1052
01088:  MOVLB  6
0108A:  DECFSZ x59,F
0108C:  BRA    1080
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
0108E:  MOVLW  85
01090:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
01092:  BSF    F9D.0
....................    setup_adc_ports(AN0_TO_AN1); 
01094:  MOVF   FC1,W
01096:  ANDLW  C0
01098:  IORLW  0D
0109A:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_64); 
0109C:  MOVF   FC0,W
0109E:  ANDLW  C0
010A0:  IORLW  06
010A2:  MOVWF  FC0
010A4:  BSF    FC0.7
010A6:  BSF    FC2.0
....................    enable_interrupts(global); 
010A8:  MOVLW  C0
010AA:  IORWF  FF2,F
.................... } 
010AC:  MOVLB  0
010AE:  GOTO   5D5C (RETURN)
....................  
.................... void MensajeBienvenida(){ 
....................    glcd_init(ON);             //Inicializa la glcd 
*
03452:  MOVLW  01
03454:  MOVLB  6
03456:  MOVWF  x59
03458:  MOVLB  0
0345A:  CALL   26CE
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
0345E:  MOVLB  6
03460:  CLRF   x61
03462:  MOVLB  0
03464:  CALL   25BC
....................    strcpy(Menus.Letra,"JP Inglobal"); 
03468:  MOVLW  06
0346A:  MOVWF  FEA
0346C:  MOVLW  39
0346E:  MOVWF  FE9
03470:  MOVFF  FF2,659
03474:  BCF    FF2.7
03476:  MOVLW  00
03478:  CALL   0740
0347C:  TBLRD*-
0347E:  TBLRD*+
03480:  MOVF   FF5,W
03482:  MOVWF  FEE
03484:  IORLW  00
03486:  BNZ   347E
03488:  MOVLB  6
0348A:  BTFSC  x59.7
0348C:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
0348E:  MOVLW  06
03490:  MOVWF  x62
03492:  MOVLW  39
03494:  MOVWF  x61
03496:  CLRF   x63
03498:  CLRF   x64
0349A:  CLRF   x65
0349C:  MOVLW  02
0349E:  MOVWF  x66
034A0:  MOVLB  0
034A2:  CALL   2BEA
....................    strcpy(Menus.Letra,"    Incubadora"); 
034A6:  MOVLW  06
034A8:  MOVWF  FEA
034AA:  MOVLW  39
034AC:  MOVWF  FE9
034AE:  MOVFF  FF2,659
034B2:  BCF    FF2.7
034B4:  MOVLW  00
034B6:  CALL   076A
034BA:  TBLRD*-
034BC:  TBLRD*+
034BE:  MOVF   FF5,W
034C0:  MOVWF  FEE
034C2:  IORLW  00
034C4:  BNZ   34BC
034C6:  MOVLB  6
034C8:  BTFSC  x59.7
034CA:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
034CC:  MOVLW  06
034CE:  MOVWF  x62
034D0:  MOVLW  39
034D2:  MOVWF  x61
034D4:  CLRF   x63
034D6:  MOVLW  14
034D8:  MOVWF  x64
034DA:  CLRF   x65
034DC:  MOVLW  01
034DE:  MOVWF  x66
034E0:  MOVLB  0
034E2:  CALL   2BEA
....................    strcpy(Menus.Letra,"     Digital  "); 
034E6:  MOVLW  06
034E8:  MOVWF  FEA
034EA:  MOVLW  39
034EC:  MOVWF  FE9
034EE:  MOVFF  FF2,659
034F2:  BCF    FF2.7
034F4:  MOVLW  00
034F6:  CALL   0798
034FA:  TBLRD*-
034FC:  TBLRD*+
034FE:  MOVF   FF5,W
03500:  MOVWF  FEE
03502:  IORLW  00
03504:  BNZ   34FC
03506:  MOVLB  6
03508:  BTFSC  x59.7
0350A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,1); 
0350C:  MOVLW  06
0350E:  MOVWF  x62
03510:  MOVLW  39
03512:  MOVWF  x61
03514:  CLRF   x63
03516:  MOVLW  1E
03518:  MOVWF  x64
0351A:  CLRF   x65
0351C:  MOVLW  01
0351E:  MOVWF  x66
03520:  MOVLB  0
03522:  CALL   2BEA
....................    strcpy(Menus.Letra,"   240 Lts"); 
03526:  MOVLW  06
03528:  MOVWF  FEA
0352A:  MOVLW  39
0352C:  MOVWF  FE9
0352E:  MOVFF  FF2,659
03532:  BCF    FF2.7
03534:  MOVLW  00
03536:  CALL   07C6
0353A:  TBLRD*-
0353C:  TBLRD*+
0353E:  MOVF   FF5,W
03540:  MOVWF  FEE
03542:  IORLW  00
03544:  BNZ   353C
03546:  MOVLB  6
03548:  BTFSC  x59.7
0354A:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,45,0,2); 
0354C:  MOVLW  06
0354E:  MOVWF  x62
03550:  MOVLW  39
03552:  MOVWF  x61
03554:  CLRF   x63
03556:  MOVLW  2D
03558:  MOVWF  x64
0355A:  CLRF   x65
0355C:  MOVLW  02
0355E:  MOVWF  x66
03560:  MOVLB  0
03562:  CALL   2BEA
....................    delay_ms(1000); 
03566:  MOVLW  04
03568:  MOVLB  6
0356A:  MOVWF  x59
0356C:  MOVLW  FA
0356E:  MOVWF  x62
03570:  MOVLB  0
03572:  CALL   1052
03576:  MOVLB  6
03578:  DECFSZ x59,F
0357A:  BRA    356C
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
0357C:  CLRF   x61
0357E:  MOVLB  0
03580:  CALL   25BC
....................     
....................    for(i=0;i<80;i++) 
03584:  MOVLB  5
03586:  CLRF   x99
03588:  MOVF   x99,W
0358A:  SUBLW  4F
0358C:  BNC   35AC
....................    { 
....................       Temperatura=Leer_Sensor(MediaMovil); 
0358E:  MOVFF  58C,659
03592:  MOVLB  0
03594:  RCALL  2E54
03596:  MOVFF  03,614
0359A:  MOVFF  02,613
0359E:  MOVFF  01,612
035A2:  MOVFF  00,611
....................    } 
035A6:  MOVLB  5
035A8:  INCF   x99,F
035AA:  BRA    3588
.................... } 
035AC:  MOVLB  0
035AE:  GOTO   5D68 (RETURN)
....................  
.................... void LeeEEPROM(){ 
....................    Testerilizacionp[0]=read_eeprom(0); 
*
014BE:  MOVFF  FF2,659
014C2:  BCF    FF2.7
014C4:  CLRF   FAA
014C6:  CLRF   FA9
014C8:  BCF    FA6.6
014CA:  BCF    FA6.7
014CC:  BSF    FA6.0
014CE:  MOVF   FA8,W
014D0:  MOVLB  6
014D2:  BTFSC  x59.7
014D4:  BSF    FF2.7
014D6:  MOVLB  5
014D8:  MOVWF  xD1
....................    delay_ms(20);    
014DA:  MOVLW  14
014DC:  MOVLB  6
014DE:  MOVWF  x62
014E0:  MOVLB  0
014E2:  RCALL  1052
....................    Testerilizacionp[1]=read_eeprom(1); 
014E4:  MOVFF  FF2,659
014E8:  BCF    FF2.7
014EA:  CLRF   FAA
014EC:  MOVLW  01
014EE:  MOVWF  FA9
014F0:  BCF    FA6.6
014F2:  BCF    FA6.7
014F4:  BSF    FA6.0
014F6:  MOVF   FA8,W
014F8:  MOVLB  6
014FA:  BTFSC  x59.7
014FC:  BSF    FF2.7
014FE:  MOVLB  5
01500:  MOVWF  xD2
....................    delay_ms(20);    
01502:  MOVLW  14
01504:  MOVLB  6
01506:  MOVWF  x62
01508:  MOVLB  0
0150A:  RCALL  1052
....................    Testerilizacionp[2]=read_eeprom(2); 
0150C:  MOVFF  FF2,659
01510:  BCF    FF2.7
01512:  CLRF   FAA
01514:  MOVLW  02
01516:  MOVWF  FA9
01518:  BCF    FA6.6
0151A:  BCF    FA6.7
0151C:  BSF    FA6.0
0151E:  MOVF   FA8,W
01520:  MOVLB  6
01522:  BTFSC  x59.7
01524:  BSF    FF2.7
01526:  MOVLB  5
01528:  MOVWF  xD3
....................    delay_ms(20); 
0152A:  MOVLW  14
0152C:  MOVLB  6
0152E:  MOVWF  x62
01530:  MOVLB  0
01532:  RCALL  1052
....................    Testerilizacionp[3]=read_eeprom(3); 
01534:  MOVFF  FF2,659
01538:  BCF    FF2.7
0153A:  CLRF   FAA
0153C:  MOVLW  03
0153E:  MOVWF  FA9
01540:  BCF    FA6.6
01542:  BCF    FA6.7
01544:  BSF    FA6.0
01546:  MOVF   FA8,W
01548:  MOVLB  6
0154A:  BTFSC  x59.7
0154C:  BSF    FF2.7
0154E:  MOVLB  5
01550:  MOVWF  xD4
....................    delay_ms(20);    
01552:  MOVLW  14
01554:  MOVLB  6
01556:  MOVWF  x62
01558:  MOVLB  0
0155A:  RCALL  1052
....................    Password[0]=read_eeprom(4); 
0155C:  MOVFF  FF2,659
01560:  BCF    FF2.7
01562:  CLRF   FAA
01564:  MOVLW  04
01566:  MOVWF  FA9
01568:  BCF    FA6.6
0156A:  BCF    FA6.7
0156C:  BSF    FA6.0
0156E:  MOVF   FA8,W
01570:  MOVLB  6
01572:  BTFSC  x59.7
01574:  BSF    FF2.7
01576:  MOVLB  5
01578:  MOVWF  xD9
....................    delay_ms(20);    
0157A:  MOVLW  14
0157C:  MOVLB  6
0157E:  MOVWF  x62
01580:  MOVLB  0
01582:  RCALL  1052
....................    Password[1]=read_eeprom(5); 
01584:  MOVFF  FF2,659
01588:  BCF    FF2.7
0158A:  CLRF   FAA
0158C:  MOVLW  05
0158E:  MOVWF  FA9
01590:  BCF    FA6.6
01592:  BCF    FA6.7
01594:  BSF    FA6.0
01596:  MOVF   FA8,W
01598:  MOVLB  6
0159A:  BTFSC  x59.7
0159C:  BSF    FF2.7
0159E:  MOVLB  5
015A0:  MOVWF  xDA
....................    delay_ms(20);    
015A2:  MOVLW  14
015A4:  MOVLB  6
015A6:  MOVWF  x62
015A8:  MOVLB  0
015AA:  RCALL  1052
....................    Password[2]=read_eeprom(6); 
015AC:  MOVFF  FF2,659
015B0:  BCF    FF2.7
015B2:  CLRF   FAA
015B4:  MOVLW  06
015B6:  MOVWF  FA9
015B8:  BCF    FA6.6
015BA:  BCF    FA6.7
015BC:  BSF    FA6.0
015BE:  MOVF   FA8,W
015C0:  MOVLB  6
015C2:  BTFSC  x59.7
015C4:  BSF    FF2.7
015C6:  MOVLB  5
015C8:  MOVWF  xDB
....................    delay_ms(20);    
015CA:  MOVLW  14
015CC:  MOVLB  6
015CE:  MOVWF  x62
015D0:  MOVLB  0
015D2:  RCALL  1052
....................    Password[3]=read_eeprom(7); 
015D4:  MOVFF  FF2,659
015D8:  BCF    FF2.7
015DA:  CLRF   FAA
015DC:  MOVLW  07
015DE:  MOVWF  FA9
015E0:  BCF    FA6.6
015E2:  BCF    FA6.7
015E4:  BSF    FA6.0
015E6:  MOVF   FA8,W
015E8:  MOVLB  6
015EA:  BTFSC  x59.7
015EC:  BSF    FF2.7
015EE:  MOVLB  5
015F0:  MOVWF  xDC
....................    delay_ms(20);    
015F2:  MOVLW  14
015F4:  MOVLB  6
015F6:  MOVWF  x62
015F8:  MOVLB  0
015FA:  RCALL  1052
....................  
....................    entero=read_eeprom(8); 
015FC:  MOVFF  FF2,659
01600:  BCF    FF2.7
01602:  CLRF   FAA
01604:  MOVLW  08
01606:  MOVWF  FA9
01608:  BCF    FA6.6
0160A:  BCF    FA6.7
0160C:  BSF    FA6.0
0160E:  MOVF   FA8,W
01610:  MOVLB  6
01612:  BTFSC  x59.7
01614:  BSF    FF2.7
01616:  MOVLB  5
01618:  MOVWF  xA0
....................    delay_ms(20);    
0161A:  MOVLW  14
0161C:  MOVLB  6
0161E:  MOVWF  x62
01620:  MOVLB  0
01622:  RCALL  1052
....................    Temporal=read_eeprom(9); 
01624:  MOVFF  FF2,659
01628:  BCF    FF2.7
0162A:  CLRF   FAA
0162C:  MOVLW  09
0162E:  MOVWF  FA9
01630:  BCF    FA6.6
01632:  BCF    FA6.7
01634:  BSF    FA6.0
01636:  MOVF   FA8,W
01638:  MOVLB  6
0163A:  BTFSC  x59.7
0163C:  BSF    FF2.7
0163E:  CLRF   x60
01640:  MOVWF  x5F
01642:  MOVLB  0
01644:  RCALL  10B2
01646:  MOVFF  03,62C
0164A:  MOVFF  02,62B
0164E:  MOVFF  01,62A
01652:  MOVFF  00,629
....................    Temporal=Temporal/10.0; 
01656:  MOVFF  62C,65D
0165A:  MOVFF  62B,65C
0165E:  MOVFF  62A,65B
01662:  MOVFF  629,65A
01666:  MOVLB  6
01668:  CLRF   x61
0166A:  CLRF   x60
0166C:  MOVLW  20
0166E:  MOVWF  x5F
01670:  MOVLW  82
01672:  MOVWF  x5E
01674:  MOVLB  0
01676:  RCALL  10E8
01678:  MOVFF  03,62C
0167C:  MOVFF  02,62B
01680:  MOVFF  01,62A
01684:  MOVFF  00,629
....................    Temperatura1=entero+Temporal; 
01688:  MOVLB  6
0168A:  CLRF   x60
0168C:  MOVFF  5A0,65F
01690:  MOVLB  0
01692:  RCALL  10B2
01694:  BCF    FD8.1
01696:  MOVFF  03,661
0169A:  MOVFF  02,660
0169E:  MOVFF  01,65F
016A2:  MOVFF  00,65E
016A6:  MOVFF  62C,665
016AA:  MOVFF  62B,664
016AE:  MOVFF  62A,663
016B2:  MOVFF  629,662
016B6:  RCALL  1246
016B8:  MOVFF  03,620
016BC:  MOVFF  02,61F
016C0:  MOVFF  01,61E
016C4:  MOVFF  00,61D
....................    delay_ms(20);    
016C8:  MOVLW  14
016CA:  MOVLB  6
016CC:  MOVWF  x62
016CE:  MOVLB  0
016D0:  RCALL  1052
....................     
....................    entero=read_eeprom(10); 
016D2:  MOVFF  FF2,659
016D6:  BCF    FF2.7
016D8:  CLRF   FAA
016DA:  MOVLW  0A
016DC:  MOVWF  FA9
016DE:  BCF    FA6.6
016E0:  BCF    FA6.7
016E2:  BSF    FA6.0
016E4:  MOVF   FA8,W
016E6:  MOVLB  6
016E8:  BTFSC  x59.7
016EA:  BSF    FF2.7
016EC:  MOVLB  5
016EE:  MOVWF  xA0
....................    delay_ms(20);    
016F0:  MOVLW  14
016F2:  MOVLB  6
016F4:  MOVWF  x62
016F6:  MOVLB  0
016F8:  RCALL  1052
....................    Temporal=read_eeprom(11); 
016FA:  MOVFF  FF2,659
016FE:  BCF    FF2.7
01700:  CLRF   FAA
01702:  MOVLW  0B
01704:  MOVWF  FA9
01706:  BCF    FA6.6
01708:  BCF    FA6.7
0170A:  BSF    FA6.0
0170C:  MOVF   FA8,W
0170E:  MOVLB  6
01710:  BTFSC  x59.7
01712:  BSF    FF2.7
01714:  CLRF   x60
01716:  MOVWF  x5F
01718:  MOVLB  0
0171A:  RCALL  10B2
0171C:  MOVFF  03,62C
01720:  MOVFF  02,62B
01724:  MOVFF  01,62A
01728:  MOVFF  00,629
....................    Temporal=Temporal/10.0; 
0172C:  MOVFF  62C,65D
01730:  MOVFF  62B,65C
01734:  MOVFF  62A,65B
01738:  MOVFF  629,65A
0173C:  MOVLB  6
0173E:  CLRF   x61
01740:  CLRF   x60
01742:  MOVLW  20
01744:  MOVWF  x5F
01746:  MOVLW  82
01748:  MOVWF  x5E
0174A:  MOVLB  0
0174C:  RCALL  10E8
0174E:  MOVFF  03,62C
01752:  MOVFF  02,62B
01756:  MOVFF  01,62A
0175A:  MOVFF  00,629
....................    Temperatura2=entero+Temporal; 
0175E:  MOVLB  6
01760:  CLRF   x60
01762:  MOVFF  5A0,65F
01766:  MOVLB  0
01768:  RCALL  10B2
0176A:  BCF    FD8.1
0176C:  MOVFF  03,661
01770:  MOVFF  02,660
01774:  MOVFF  01,65F
01778:  MOVFF  00,65E
0177C:  MOVFF  62C,665
01780:  MOVFF  62B,664
01784:  MOVFF  62A,663
01788:  MOVFF  629,662
0178C:  RCALL  1246
0178E:  MOVFF  03,624
01792:  MOVFF  02,623
01796:  MOVFF  01,622
0179A:  MOVFF  00,621
....................    delay_ms(20);    
0179E:  MOVLW  14
017A0:  MOVLB  6
017A2:  MOVWF  x62
017A4:  MOVLB  0
017A6:  RCALL  1052
....................     
....................    entero=read_eeprom(12); 
017A8:  MOVFF  FF2,659
017AC:  BCF    FF2.7
017AE:  CLRF   FAA
017B0:  MOVLW  0C
017B2:  MOVWF  FA9
017B4:  BCF    FA6.6
017B6:  BCF    FA6.7
017B8:  BSF    FA6.0
017BA:  MOVF   FA8,W
017BC:  MOVLB  6
017BE:  BTFSC  x59.7
017C0:  BSF    FF2.7
017C2:  MOVLB  5
017C4:  MOVWF  xA0
....................    delay_ms(20);    
017C6:  MOVLW  14
017C8:  MOVLB  6
017CA:  MOVWF  x62
017CC:  MOVLB  0
017CE:  RCALL  1052
....................    Temporal=read_eeprom(13); 
017D0:  MOVFF  FF2,659
017D4:  BCF    FF2.7
017D6:  CLRF   FAA
017D8:  MOVLW  0D
017DA:  MOVWF  FA9
017DC:  BCF    FA6.6
017DE:  BCF    FA6.7
017E0:  BSF    FA6.0
017E2:  MOVF   FA8,W
017E4:  MOVLB  6
017E6:  BTFSC  x59.7
017E8:  BSF    FF2.7
017EA:  CLRF   x60
017EC:  MOVWF  x5F
017EE:  MOVLB  0
017F0:  RCALL  10B2
017F2:  MOVFF  03,62C
017F6:  MOVFF  02,62B
017FA:  MOVFF  01,62A
017FE:  MOVFF  00,629
....................    Temporal=Temporal/10.0; 
01802:  MOVFF  62C,65D
01806:  MOVFF  62B,65C
0180A:  MOVFF  62A,65B
0180E:  MOVFF  629,65A
01812:  MOVLB  6
01814:  CLRF   x61
01816:  CLRF   x60
01818:  MOVLW  20
0181A:  MOVWF  x5F
0181C:  MOVLW  82
0181E:  MOVWF  x5E
01820:  MOVLB  0
01822:  RCALL  10E8
01824:  MOVFF  03,62C
01828:  MOVFF  02,62B
0182C:  MOVFF  01,62A
01830:  MOVFF  00,629
....................    Temperatura3=entero+Temporal; 
01834:  MOVLB  6
01836:  CLRF   x60
01838:  MOVFF  5A0,65F
0183C:  MOVLB  0
0183E:  RCALL  10B2
01840:  BCF    FD8.1
01842:  MOVFF  03,661
01846:  MOVFF  02,660
0184A:  MOVFF  01,65F
0184E:  MOVFF  00,65E
01852:  MOVFF  62C,665
01856:  MOVFF  62B,664
0185A:  MOVFF  62A,663
0185E:  MOVFF  629,662
01862:  RCALL  1246
01864:  MOVFF  03,628
01868:  MOVFF  02,627
0186C:  MOVFF  01,626
01870:  MOVFF  00,625
....................    delay_ms(20);    
01874:  MOVLW  14
01876:  MOVLB  6
01878:  MOVWF  x62
0187A:  MOVLB  0
0187C:  CALL   1052
....................     
....................     
....................    Ganancia=read_eeprom(14); 
01880:  MOVFF  FF2,659
01884:  BCF    FF2.7
01886:  CLRF   FAA
01888:  MOVLW  0E
0188A:  MOVWF  FA9
0188C:  BCF    FA6.6
0188E:  BCF    FA6.7
01890:  BSF    FA6.0
01892:  MOVF   FA8,W
01894:  MOVLB  6
01896:  BTFSC  x59.7
01898:  BSF    FF2.7
0189A:  CLRF   x60
0189C:  MOVWF  x5F
0189E:  MOVLB  0
018A0:  RCALL  10B2
018A2:  MOVFF  03,604
018A6:  MOVFF  02,603
018AA:  MOVFF  01,602
018AE:  MOVFF  00,601
....................    delay_ms(10); 
018B2:  MOVLW  0A
018B4:  MOVLB  6
018B6:  MOVWF  x62
018B8:  MOVLB  0
018BA:  CALL   1052
....................    Integral=read_eeprom(15); 
018BE:  MOVFF  FF2,659
018C2:  BCF    FF2.7
018C4:  CLRF   FAA
018C6:  MOVLW  0F
018C8:  MOVWF  FA9
018CA:  BCF    FA6.6
018CC:  BCF    FA6.7
018CE:  BSF    FA6.0
018D0:  MOVF   FA8,W
018D2:  MOVLB  6
018D4:  BTFSC  x59.7
018D6:  BSF    FF2.7
018D8:  CLRF   x60
018DA:  MOVWF  x5F
018DC:  MOVLB  0
018DE:  CALL   10B2
018E2:  MOVFF  03,5C8
018E6:  MOVFF  02,5C7
018EA:  MOVFF  01,5C6
018EE:  MOVFF  00,5C5
....................    delay_ms(10); 
018F2:  MOVLW  0A
018F4:  MOVLB  6
018F6:  MOVWF  x62
018F8:  MOVLB  0
018FA:  CALL   1052
....................    Derivativo=read_eeprom(16); 
018FE:  MOVFF  FF2,659
01902:  BCF    FF2.7
01904:  CLRF   FAA
01906:  MOVLW  10
01908:  MOVWF  FA9
0190A:  BCF    FA6.6
0190C:  BCF    FA6.7
0190E:  BSF    FA6.0
01910:  MOVF   FA8,W
01912:  MOVLB  6
01914:  BTFSC  x59.7
01916:  BSF    FF2.7
01918:  CLRF   x60
0191A:  MOVWF  x5F
0191C:  MOVLB  0
0191E:  CALL   10B2
01922:  MOVFF  03,5CC
01926:  MOVFF  02,5CB
0192A:  MOVFF  01,5CA
0192E:  MOVFF  00,5C9
....................    delay_ms(10); 
01932:  MOVLW  0A
01934:  MOVLB  6
01936:  MOVWF  x62
01938:  MOVLB  0
0193A:  CALL   1052
....................    Tciclo=read_eeprom(17); 
0193E:  MOVFF  FF2,659
01942:  BCF    FF2.7
01944:  CLRF   FAA
01946:  MOVLW  11
01948:  MOVWF  FA9
0194A:  BCF    FA6.6
0194C:  BCF    FA6.7
0194E:  BSF    FA6.0
01950:  MOVF   FA8,W
01952:  MOVLB  6
01954:  BTFSC  x59.7
01956:  BSF    FF2.7
01958:  CLRF   x60
0195A:  MOVWF  x5F
0195C:  MOVLB  0
0195E:  CALL   10B2
01962:  MOVFF  03,5EC
01966:  MOVFF  02,5EB
0196A:  MOVFF  01,5EA
0196E:  MOVFF  00,5E9
....................    delay_ms(10); 
01972:  MOVLW  0A
01974:  MOVLB  6
01976:  MOVWF  x62
01978:  MOVLB  0
0197A:  CALL   1052
....................    Ajuste=read_eeprom(18); 
0197E:  MOVFF  FF2,659
01982:  BCF    FF2.7
01984:  CLRF   FAA
01986:  MOVLW  12
01988:  MOVWF  FA9
0198A:  BCF    FA6.6
0198C:  BCF    FA6.7
0198E:  BSF    FA6.0
01990:  MOVF   FA8,W
01992:  MOVLB  6
01994:  BTFSC  x59.7
01996:  BSF    FF2.7
01998:  MOVLB  5
0199A:  MOVWF  x8A
....................    delay_ms(10); 
0199C:  MOVLW  0A
0199E:  MOVLB  6
019A0:  MOVWF  x62
019A2:  MOVLB  0
019A4:  CALL   1052
....................    Ajusten=read_eeprom(19); 
019A8:  MOVFF  FF2,659
019AC:  BCF    FF2.7
019AE:  CLRF   FAA
019B0:  MOVLW  13
019B2:  MOVWF  FA9
019B4:  BCF    FA6.6
019B6:  BCF    FA6.7
019B8:  BSF    FA6.0
019BA:  MOVF   FA8,W
019BC:  MOVLB  6
019BE:  BTFSC  x59.7
019C0:  BSF    FF2.7
019C2:  MOVLB  5
019C4:  MOVWF  x8B
....................    delay_ms(10); 
019C6:  MOVLW  0A
019C8:  MOVLB  6
019CA:  MOVWF  x62
019CC:  MOVLB  0
019CE:  CALL   1052
....................    //Desvio=read_eeprom(23); 
....................    MediaMovil=read_eeprom(20); 
019D2:  MOVFF  FF2,659
019D6:  BCF    FF2.7
019D8:  CLRF   FAA
019DA:  MOVLW  14
019DC:  MOVWF  FA9
019DE:  BCF    FA6.6
019E0:  BCF    FA6.7
019E2:  BSF    FA6.0
019E4:  MOVF   FA8,W
019E6:  MOVLB  6
019E8:  BTFSC  x59.7
019EA:  BSF    FF2.7
019EC:  MOVLB  5
019EE:  MOVWF  x8C
....................    delay_ms(10);  
019F0:  MOVLW  0A
019F2:  MOVLB  6
019F4:  MOVWF  x62
019F6:  MOVLB  0
019F8:  CALL   1052
....................     
....................    Temporal=read_eeprom(22); 
019FC:  MOVFF  FF2,659
01A00:  BCF    FF2.7
01A02:  CLRF   FAA
01A04:  MOVLW  16
01A06:  MOVWF  FA9
01A08:  BCF    FA6.6
01A0A:  BCF    FA6.7
01A0C:  BSF    FA6.0
01A0E:  MOVF   FA8,W
01A10:  MOVLB  6
01A12:  BTFSC  x59.7
01A14:  BSF    FF2.7
01A16:  CLRF   x60
01A18:  MOVWF  x5F
01A1A:  MOVLB  0
01A1C:  CALL   10B2
01A20:  MOVFF  03,62C
01A24:  MOVFF  02,62B
01A28:  MOVFF  01,62A
01A2C:  MOVFF  00,629
....................    Temporal=Temporal/10.0; 
01A30:  MOVFF  62C,65D
01A34:  MOVFF  62B,65C
01A38:  MOVFF  62A,65B
01A3C:  MOVFF  629,65A
01A40:  MOVLB  6
01A42:  CLRF   x61
01A44:  CLRF   x60
01A46:  MOVLW  20
01A48:  MOVWF  x5F
01A4A:  MOVLW  82
01A4C:  MOVWF  x5E
01A4E:  MOVLB  0
01A50:  CALL   10E8
01A54:  MOVFF  03,62C
01A58:  MOVFF  02,62B
01A5C:  MOVFF  01,62A
01A60:  MOVFF  00,629
....................    delay_ms(10); 
01A64:  MOVLW  0A
01A66:  MOVLB  6
01A68:  MOVWF  x62
01A6A:  MOVLB  0
01A6C:  CALL   1052
....................    Gain=read_eeprom(21)+Temporal; 
01A70:  MOVFF  FF2,659
01A74:  BCF    FF2.7
01A76:  CLRF   FAA
01A78:  MOVLW  15
01A7A:  MOVWF  FA9
01A7C:  BCF    FA6.6
01A7E:  BCF    FA6.7
01A80:  BSF    FA6.0
01A82:  MOVF   FA8,W
01A84:  MOVLB  6
01A86:  BTFSC  x59.7
01A88:  BSF    FF2.7
01A8A:  CLRF   x60
01A8C:  MOVWF  x5F
01A8E:  MOVLB  0
01A90:  CALL   10B2
01A94:  BCF    FD8.1
01A96:  MOVFF  03,661
01A9A:  MOVFF  02,660
01A9E:  MOVFF  01,65F
01AA2:  MOVFF  00,65E
01AA6:  MOVFF  62C,665
01AAA:  MOVFF  62B,664
01AAE:  MOVFF  62A,663
01AB2:  MOVFF  629,662
01AB6:  CALL   1246
01ABA:  MOVFF  03,5C0
01ABE:  MOVFF  02,5BF
01AC2:  MOVFF  01,5BE
01AC6:  MOVFF  00,5BD
....................    delay_ms(10); 
01ACA:  MOVLW  0A
01ACC:  MOVLB  6
01ACE:  MOVWF  x62
01AD0:  MOVLB  0
01AD2:  CALL   1052
....................    R1=make16(read_eeprom(24),read_eeprom(23)); 
01AD6:  MOVFF  FF2,659
01ADA:  BCF    FF2.7
01ADC:  CLRF   FAA
01ADE:  MOVLW  18
01AE0:  MOVWF  FA9
01AE2:  BCF    FA6.6
01AE4:  BCF    FA6.7
01AE6:  BSF    FA6.0
01AE8:  MOVF   FA8,W
01AEA:  MOVLB  6
01AEC:  BTFSC  x59.7
01AEE:  BSF    FF2.7
01AF0:  MOVWF  x5A
01AF2:  MOVFF  FF2,65B
01AF6:  BCF    FF2.7
01AF8:  CLRF   FAA
01AFA:  MOVLW  17
01AFC:  MOVWF  FA9
01AFE:  BCF    FA6.6
01B00:  BCF    FA6.7
01B02:  BSF    FA6.0
01B04:  MOVF   FA8,W
01B06:  BTFSC  x5B.7
01B08:  BSF    FF2.7
01B0A:  MOVWF  x5C
01B0C:  MOVFF  65A,03
01B10:  MOVF   x5C,W
01B12:  MOVWF  x5F
01B14:  MOVFF  03,660
01B18:  MOVLB  0
01B1A:  CALL   10B2
01B1E:  MOVFF  03,5E4
01B22:  MOVFF  02,5E3
01B26:  MOVFF  01,5E2
01B2A:  MOVFF  00,5E1
....................    delay_ms(10); 
01B2E:  MOVLW  0A
01B30:  MOVLB  6
01B32:  MOVWF  x62
01B34:  MOVLB  0
01B36:  CALL   1052
....................    Temporal=read_eeprom(26); 
01B3A:  MOVFF  FF2,659
01B3E:  BCF    FF2.7
01B40:  CLRF   FAA
01B42:  MOVLW  1A
01B44:  MOVWF  FA9
01B46:  BCF    FA6.6
01B48:  BCF    FA6.7
01B4A:  BSF    FA6.0
01B4C:  MOVF   FA8,W
01B4E:  MOVLB  6
01B50:  BTFSC  x59.7
01B52:  BSF    FF2.7
01B54:  CLRF   x60
01B56:  MOVWF  x5F
01B58:  MOVLB  0
01B5A:  CALL   10B2
01B5E:  MOVFF  03,62C
01B62:  MOVFF  02,62B
01B66:  MOVFF  01,62A
01B6A:  MOVFF  00,629
....................    Temporal=Temporal/10.0; 
01B6E:  MOVFF  62C,65D
01B72:  MOVFF  62B,65C
01B76:  MOVFF  62A,65B
01B7A:  MOVFF  629,65A
01B7E:  MOVLB  6
01B80:  CLRF   x61
01B82:  CLRF   x60
01B84:  MOVLW  20
01B86:  MOVWF  x5F
01B88:  MOVLW  82
01B8A:  MOVWF  x5E
01B8C:  MOVLB  0
01B8E:  CALL   10E8
01B92:  MOVFF  03,62C
01B96:  MOVFF  02,62B
01B9A:  MOVFF  01,62A
01B9E:  MOVFF  00,629
....................    delay_ms(10); 
01BA2:  MOVLW  0A
01BA4:  MOVLB  6
01BA6:  MOVWF  x62
01BA8:  MOVLB  0
01BAA:  CALL   1052
....................    RPT100=read_eeprom(25)+Temporal; 
01BAE:  MOVFF  FF2,659
01BB2:  BCF    FF2.7
01BB4:  CLRF   FAA
01BB6:  MOVLW  19
01BB8:  MOVWF  FA9
01BBA:  BCF    FA6.6
01BBC:  BCF    FA6.7
01BBE:  BSF    FA6.0
01BC0:  MOVF   FA8,W
01BC2:  MOVLB  6
01BC4:  BTFSC  x59.7
01BC6:  BSF    FF2.7
01BC8:  CLRF   x60
01BCA:  MOVWF  x5F
01BCC:  MOVLB  0
01BCE:  CALL   10B2
01BD2:  BCF    FD8.1
01BD4:  MOVFF  03,661
01BD8:  MOVFF  02,660
01BDC:  MOVFF  01,65F
01BE0:  MOVFF  00,65E
01BE4:  MOVFF  62C,665
01BE8:  MOVFF  62B,664
01BEC:  MOVFF  62A,663
01BF0:  MOVFF  629,662
01BF4:  CALL   1246
01BF8:  MOVFF  03,5C4
01BFC:  MOVFF  02,5C3
01C00:  MOVFF  01,5C2
01C04:  MOVFF  00,5C1
....................    delay_ms(10); 
01C08:  MOVLW  0A
01C0A:  MOVLB  6
01C0C:  MOVWF  x62
01C0E:  MOVLB  0
01C10:  CALL   1052
....................    Source=read_eeprom(27); 
01C14:  MOVFF  FF2,659
01C18:  BCF    FF2.7
01C1A:  CLRF   FAA
01C1C:  MOVLW  1B
01C1E:  MOVWF  FA9
01C20:  BCF    FA6.6
01C22:  BCF    FA6.7
01C24:  BSF    FA6.0
01C26:  MOVF   FA8,W
01C28:  MOVLB  6
01C2A:  BTFSC  x59.7
01C2C:  BSF    FF2.7
01C2E:  MOVLB  5
01C30:  MOVWF  x96
....................    delay_ms(10); 
01C32:  MOVLW  0A
01C34:  MOVLB  6
01C36:  MOVWF  x62
01C38:  MOVLB  0
01C3A:  CALL   1052
.................... } 
01C3E:  GOTO   5D60 (RETURN)
....................  
.................... void LimitaValores(){ 
....................    if(Testerilizacionp[0]>9 || Testerilizacionp[0]<0){ 
*
01CBC:  MOVLB  5
01CBE:  BTFSC  xD1.7
01CC0:  BRA    1CC8
01CC2:  MOVF   xD1,W
01CC4:  SUBLW  09
01CC6:  BNC   1CCE
01CC8:  BTFSC  xD1.7
01CCA:  BRA    1CCE
01CCC:  BRA    1D06
....................       Testerilizacionp[0]=0;write_eeprom(0,0);delay_ms(20); 
01CCE:  CLRF   xD1
01CD0:  CLRF   FAA
01CD2:  CLRF   FA9
01CD4:  CLRF   FA8
01CD6:  BCF    FA6.6
01CD8:  BCF    FA6.7
01CDA:  BSF    FA6.2
01CDC:  MOVF   FF2,W
01CDE:  MOVWF  00
01CE0:  BCF    FF2.7
01CE2:  MOVLB  F
01CE4:  MOVLW  55
01CE6:  MOVWF  FA7
01CE8:  MOVLW  AA
01CEA:  MOVWF  FA7
01CEC:  BSF    FA6.1
01CEE:  BTFSC  FA6.1
01CF0:  BRA    1CEE
01CF2:  BCF    FA6.2
01CF4:  MOVF   00,W
01CF6:  IORWF  FF2,F
01CF8:  MOVLW  14
01CFA:  MOVLB  6
01CFC:  MOVWF  x62
01CFE:  MOVLB  0
01D00:  CALL   1052
01D04:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[1]>9 || Testerilizacionp[1]<0){ 
01D06:  BTFSC  xD2.7
01D08:  BRA    1D10
01D0A:  MOVF   xD2,W
01D0C:  SUBLW  09
01D0E:  BNC   1D16
01D10:  BTFSC  xD2.7
01D12:  BRA    1D16
01D14:  BRA    1D50
....................       Testerilizacionp[1]=0;write_eeprom(1,0);delay_ms(20); 
01D16:  CLRF   xD2
01D18:  CLRF   FAA
01D1A:  MOVLW  01
01D1C:  MOVWF  FA9
01D1E:  CLRF   FA8
01D20:  BCF    FA6.6
01D22:  BCF    FA6.7
01D24:  BSF    FA6.2
01D26:  MOVF   FF2,W
01D28:  MOVWF  00
01D2A:  BCF    FF2.7
01D2C:  MOVLB  F
01D2E:  MOVLW  55
01D30:  MOVWF  FA7
01D32:  MOVLW  AA
01D34:  MOVWF  FA7
01D36:  BSF    FA6.1
01D38:  BTFSC  FA6.1
01D3A:  BRA    1D38
01D3C:  BCF    FA6.2
01D3E:  MOVF   00,W
01D40:  IORWF  FF2,F
01D42:  MOVLW  14
01D44:  MOVLB  6
01D46:  MOVWF  x62
01D48:  MOVLB  0
01D4A:  CALL   1052
01D4E:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[2]>9 || Testerilizacionp[2]<0){ 
01D50:  BTFSC  xD3.7
01D52:  BRA    1D5A
01D54:  MOVF   xD3,W
01D56:  SUBLW  09
01D58:  BNC   1D60
01D5A:  BTFSC  xD3.7
01D5C:  BRA    1D60
01D5E:  BRA    1D9A
....................       Testerilizacionp[2]=0;write_eeprom(2,0);delay_ms(20); 
01D60:  CLRF   xD3
01D62:  CLRF   FAA
01D64:  MOVLW  02
01D66:  MOVWF  FA9
01D68:  CLRF   FA8
01D6A:  BCF    FA6.6
01D6C:  BCF    FA6.7
01D6E:  BSF    FA6.2
01D70:  MOVF   FF2,W
01D72:  MOVWF  00
01D74:  BCF    FF2.7
01D76:  MOVLB  F
01D78:  MOVLW  55
01D7A:  MOVWF  FA7
01D7C:  MOVLW  AA
01D7E:  MOVWF  FA7
01D80:  BSF    FA6.1
01D82:  BTFSC  FA6.1
01D84:  BRA    1D82
01D86:  BCF    FA6.2
01D88:  MOVF   00,W
01D8A:  IORWF  FF2,F
01D8C:  MOVLW  14
01D8E:  MOVLB  6
01D90:  MOVWF  x62
01D92:  MOVLB  0
01D94:  CALL   1052
01D98:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[3]>9 || Testerilizacionp[3]<0){ 
01D9A:  BTFSC  xD4.7
01D9C:  BRA    1DA4
01D9E:  MOVF   xD4,W
01DA0:  SUBLW  09
01DA2:  BNC   1DAA
01DA4:  BTFSC  xD4.7
01DA6:  BRA    1DAA
01DA8:  BRA    1DE4
....................       Testerilizacionp[3]=0;write_eeprom(3,0);delay_ms(20); 
01DAA:  CLRF   xD4
01DAC:  CLRF   FAA
01DAE:  MOVLW  03
01DB0:  MOVWF  FA9
01DB2:  CLRF   FA8
01DB4:  BCF    FA6.6
01DB6:  BCF    FA6.7
01DB8:  BSF    FA6.2
01DBA:  MOVF   FF2,W
01DBC:  MOVWF  00
01DBE:  BCF    FF2.7
01DC0:  MOVLB  F
01DC2:  MOVLW  55
01DC4:  MOVWF  FA7
01DC6:  MOVLW  AA
01DC8:  MOVWF  FA7
01DCA:  BSF    FA6.1
01DCC:  BTFSC  FA6.1
01DCE:  BRA    1DCC
01DD0:  BCF    FA6.2
01DD2:  MOVF   00,W
01DD4:  IORWF  FF2,F
01DD6:  MOVLW  14
01DD8:  MOVLB  6
01DDA:  MOVWF  x62
01DDC:  MOVLB  0
01DDE:  CALL   1052
01DE2:  MOVLB  5
....................    } 
....................    if(Password[0]>9 || Password[0]<0){ 
01DE4:  BTFSC  xD9.7
01DE6:  BRA    1DEE
01DE8:  MOVF   xD9,W
01DEA:  SUBLW  09
01DEC:  BNC   1DF4
01DEE:  BTFSC  xD9.7
01DF0:  BRA    1DF4
01DF2:  BRA    1E2E
....................       Password[0]=0;write_eeprom(4,0);delay_ms(20); 
01DF4:  CLRF   xD9
01DF6:  CLRF   FAA
01DF8:  MOVLW  04
01DFA:  MOVWF  FA9
01DFC:  CLRF   FA8
01DFE:  BCF    FA6.6
01E00:  BCF    FA6.7
01E02:  BSF    FA6.2
01E04:  MOVF   FF2,W
01E06:  MOVWF  00
01E08:  BCF    FF2.7
01E0A:  MOVLB  F
01E0C:  MOVLW  55
01E0E:  MOVWF  FA7
01E10:  MOVLW  AA
01E12:  MOVWF  FA7
01E14:  BSF    FA6.1
01E16:  BTFSC  FA6.1
01E18:  BRA    1E16
01E1A:  BCF    FA6.2
01E1C:  MOVF   00,W
01E1E:  IORWF  FF2,F
01E20:  MOVLW  14
01E22:  MOVLB  6
01E24:  MOVWF  x62
01E26:  MOVLB  0
01E28:  CALL   1052
01E2C:  MOVLB  5
....................    } 
....................    if(Password[1]>9 || Password[1]<0){ 
01E2E:  BTFSC  xDA.7
01E30:  BRA    1E38
01E32:  MOVF   xDA,W
01E34:  SUBLW  09
01E36:  BNC   1E3E
01E38:  BTFSC  xDA.7
01E3A:  BRA    1E3E
01E3C:  BRA    1E78
....................       Password[1]=0;write_eeprom(5,0);delay_ms(20); 
01E3E:  CLRF   xDA
01E40:  CLRF   FAA
01E42:  MOVLW  05
01E44:  MOVWF  FA9
01E46:  CLRF   FA8
01E48:  BCF    FA6.6
01E4A:  BCF    FA6.7
01E4C:  BSF    FA6.2
01E4E:  MOVF   FF2,W
01E50:  MOVWF  00
01E52:  BCF    FF2.7
01E54:  MOVLB  F
01E56:  MOVLW  55
01E58:  MOVWF  FA7
01E5A:  MOVLW  AA
01E5C:  MOVWF  FA7
01E5E:  BSF    FA6.1
01E60:  BTFSC  FA6.1
01E62:  BRA    1E60
01E64:  BCF    FA6.2
01E66:  MOVF   00,W
01E68:  IORWF  FF2,F
01E6A:  MOVLW  14
01E6C:  MOVLB  6
01E6E:  MOVWF  x62
01E70:  MOVLB  0
01E72:  CALL   1052
01E76:  MOVLB  5
....................    } 
....................    if(Password[2]>9 || Password[2]<0){ 
01E78:  BTFSC  xDB.7
01E7A:  BRA    1E82
01E7C:  MOVF   xDB,W
01E7E:  SUBLW  09
01E80:  BNC   1E88
01E82:  BTFSC  xDB.7
01E84:  BRA    1E88
01E86:  BRA    1EC2
....................       Password[2]=0;write_eeprom(6,0);delay_ms(20); 
01E88:  CLRF   xDB
01E8A:  CLRF   FAA
01E8C:  MOVLW  06
01E8E:  MOVWF  FA9
01E90:  CLRF   FA8
01E92:  BCF    FA6.6
01E94:  BCF    FA6.7
01E96:  BSF    FA6.2
01E98:  MOVF   FF2,W
01E9A:  MOVWF  00
01E9C:  BCF    FF2.7
01E9E:  MOVLB  F
01EA0:  MOVLW  55
01EA2:  MOVWF  FA7
01EA4:  MOVLW  AA
01EA6:  MOVWF  FA7
01EA8:  BSF    FA6.1
01EAA:  BTFSC  FA6.1
01EAC:  BRA    1EAA
01EAE:  BCF    FA6.2
01EB0:  MOVF   00,W
01EB2:  IORWF  FF2,F
01EB4:  MOVLW  14
01EB6:  MOVLB  6
01EB8:  MOVWF  x62
01EBA:  MOVLB  0
01EBC:  CALL   1052
01EC0:  MOVLB  5
....................    } 
....................    if(Password[3]>9 || Password[3]<0){ 
01EC2:  BTFSC  xDC.7
01EC4:  BRA    1ECC
01EC6:  MOVF   xDC,W
01EC8:  SUBLW  09
01ECA:  BNC   1ED2
01ECC:  BTFSC  xDC.7
01ECE:  BRA    1ED2
01ED0:  BRA    1F0A
....................       Password[3]=0;write_eeprom(7,0);delay_ms(20); 
01ED2:  CLRF   xDC
01ED4:  CLRF   FAA
01ED6:  MOVLW  07
01ED8:  MOVWF  FA9
01EDA:  CLRF   FA8
01EDC:  BCF    FA6.6
01EDE:  BCF    FA6.7
01EE0:  BSF    FA6.2
01EE2:  MOVF   FF2,W
01EE4:  MOVWF  00
01EE6:  BCF    FF2.7
01EE8:  MOVLB  F
01EEA:  MOVLW  55
01EEC:  MOVWF  FA7
01EEE:  MOVLW  AA
01EF0:  MOVWF  FA7
01EF2:  BSF    FA6.1
01EF4:  BTFSC  FA6.1
01EF6:  BRA    1EF4
01EF8:  BCF    FA6.2
01EFA:  MOVF   00,W
01EFC:  IORWF  FF2,F
01EFE:  MOVLW  14
01F00:  MOVLB  6
01F02:  MOVWF  x62
01F04:  MOVLB  0
01F06:  CALL   1052
....................    } 
....................    if(Temperatura1>60.0){ 
01F0A:  MOVLB  6
01F0C:  CLRF   x60
01F0E:  CLRF   x5F
01F10:  MOVLW  70
01F12:  MOVWF  x5E
01F14:  MOVLW  84
01F16:  MOVWF  x5D
01F18:  MOVFF  620,664
01F1C:  MOVFF  61F,663
01F20:  MOVFF  61E,662
01F24:  MOVFF  61D,661
01F28:  MOVLB  0
01F2A:  RCALL  1C42
01F2C:  BNC   1FAA
....................       Temperatura1=30.0;write_eeprom(8,30);delay_ms(20);write_eeprom(9,0);delay_ms(20); 
01F2E:  MOVLB  6
01F30:  CLRF   x20
01F32:  CLRF   x1F
01F34:  MOVLW  70
01F36:  MOVWF  x1E
01F38:  MOVLW  83
01F3A:  MOVWF  x1D
01F3C:  CLRF   FAA
01F3E:  MOVLW  08
01F40:  MOVWF  FA9
01F42:  MOVLW  1E
01F44:  MOVWF  FA8
01F46:  BCF    FA6.6
01F48:  BCF    FA6.7
01F4A:  BSF    FA6.2
01F4C:  MOVF   FF2,W
01F4E:  MOVWF  00
01F50:  BCF    FF2.7
01F52:  MOVLB  F
01F54:  MOVLW  55
01F56:  MOVWF  FA7
01F58:  MOVLW  AA
01F5A:  MOVWF  FA7
01F5C:  BSF    FA6.1
01F5E:  BTFSC  FA6.1
01F60:  BRA    1F5E
01F62:  BCF    FA6.2
01F64:  MOVF   00,W
01F66:  IORWF  FF2,F
01F68:  MOVLW  14
01F6A:  MOVLB  6
01F6C:  MOVWF  x62
01F6E:  MOVLB  0
01F70:  CALL   1052
01F74:  CLRF   FAA
01F76:  MOVLW  09
01F78:  MOVWF  FA9
01F7A:  CLRF   FA8
01F7C:  BCF    FA6.6
01F7E:  BCF    FA6.7
01F80:  BSF    FA6.2
01F82:  MOVF   FF2,W
01F84:  MOVWF  00
01F86:  BCF    FF2.7
01F88:  MOVLB  F
01F8A:  MOVLW  55
01F8C:  MOVWF  FA7
01F8E:  MOVLW  AA
01F90:  MOVWF  FA7
01F92:  BSF    FA6.1
01F94:  BTFSC  FA6.1
01F96:  BRA    1F94
01F98:  BCF    FA6.2
01F9A:  MOVF   00,W
01F9C:  IORWF  FF2,F
01F9E:  MOVLW  14
01FA0:  MOVLB  6
01FA2:  MOVWF  x62
01FA4:  MOVLB  0
01FA6:  CALL   1052
....................    } 
....................    if(Temperatura2>60.0){ 
01FAA:  MOVLB  6
01FAC:  CLRF   x60
01FAE:  CLRF   x5F
01FB0:  MOVLW  70
01FB2:  MOVWF  x5E
01FB4:  MOVLW  84
01FB6:  MOVWF  x5D
01FB8:  MOVFF  624,664
01FBC:  MOVFF  623,663
01FC0:  MOVFF  622,662
01FC4:  MOVFF  621,661
01FC8:  MOVLB  0
01FCA:  RCALL  1C42
01FCC:  BNC   204A
....................       Temperatura2=30.0;write_eeprom(10,30);delay_ms(20);write_eeprom(11,0);delay_ms(20); 
01FCE:  MOVLB  6
01FD0:  CLRF   x24
01FD2:  CLRF   x23
01FD4:  MOVLW  70
01FD6:  MOVWF  x22
01FD8:  MOVLW  83
01FDA:  MOVWF  x21
01FDC:  CLRF   FAA
01FDE:  MOVLW  0A
01FE0:  MOVWF  FA9
01FE2:  MOVLW  1E
01FE4:  MOVWF  FA8
01FE6:  BCF    FA6.6
01FE8:  BCF    FA6.7
01FEA:  BSF    FA6.2
01FEC:  MOVF   FF2,W
01FEE:  MOVWF  00
01FF0:  BCF    FF2.7
01FF2:  MOVLB  F
01FF4:  MOVLW  55
01FF6:  MOVWF  FA7
01FF8:  MOVLW  AA
01FFA:  MOVWF  FA7
01FFC:  BSF    FA6.1
01FFE:  BTFSC  FA6.1
02000:  BRA    1FFE
02002:  BCF    FA6.2
02004:  MOVF   00,W
02006:  IORWF  FF2,F
02008:  MOVLW  14
0200A:  MOVLB  6
0200C:  MOVWF  x62
0200E:  MOVLB  0
02010:  CALL   1052
02014:  CLRF   FAA
02016:  MOVLW  0B
02018:  MOVWF  FA9
0201A:  CLRF   FA8
0201C:  BCF    FA6.6
0201E:  BCF    FA6.7
02020:  BSF    FA6.2
02022:  MOVF   FF2,W
02024:  MOVWF  00
02026:  BCF    FF2.7
02028:  MOVLB  F
0202A:  MOVLW  55
0202C:  MOVWF  FA7
0202E:  MOVLW  AA
02030:  MOVWF  FA7
02032:  BSF    FA6.1
02034:  BTFSC  FA6.1
02036:  BRA    2034
02038:  BCF    FA6.2
0203A:  MOVF   00,W
0203C:  IORWF  FF2,F
0203E:  MOVLW  14
02040:  MOVLB  6
02042:  MOVWF  x62
02044:  MOVLB  0
02046:  CALL   1052
....................    } 
....................    if(Temperatura3>60.0){ 
0204A:  MOVLB  6
0204C:  CLRF   x60
0204E:  CLRF   x5F
02050:  MOVLW  70
02052:  MOVWF  x5E
02054:  MOVLW  84
02056:  MOVWF  x5D
02058:  MOVFF  628,664
0205C:  MOVFF  627,663
02060:  MOVFF  626,662
02064:  MOVFF  625,661
02068:  MOVLB  0
0206A:  RCALL  1C42
0206C:  BNC   20EA
....................       Temperatura3=30.0;write_eeprom(12,30);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
0206E:  MOVLB  6
02070:  CLRF   x28
02072:  CLRF   x27
02074:  MOVLW  70
02076:  MOVWF  x26
02078:  MOVLW  83
0207A:  MOVWF  x25
0207C:  CLRF   FAA
0207E:  MOVLW  0C
02080:  MOVWF  FA9
02082:  MOVLW  1E
02084:  MOVWF  FA8
02086:  BCF    FA6.6
02088:  BCF    FA6.7
0208A:  BSF    FA6.2
0208C:  MOVF   FF2,W
0208E:  MOVWF  00
02090:  BCF    FF2.7
02092:  MOVLB  F
02094:  MOVLW  55
02096:  MOVWF  FA7
02098:  MOVLW  AA
0209A:  MOVWF  FA7
0209C:  BSF    FA6.1
0209E:  BTFSC  FA6.1
020A0:  BRA    209E
020A2:  BCF    FA6.2
020A4:  MOVF   00,W
020A6:  IORWF  FF2,F
020A8:  MOVLW  14
020AA:  MOVLB  6
020AC:  MOVWF  x62
020AE:  MOVLB  0
020B0:  CALL   1052
020B4:  CLRF   FAA
020B6:  MOVLW  0D
020B8:  MOVWF  FA9
020BA:  CLRF   FA8
020BC:  BCF    FA6.6
020BE:  BCF    FA6.7
020C0:  BSF    FA6.2
020C2:  MOVF   FF2,W
020C4:  MOVWF  00
020C6:  BCF    FF2.7
020C8:  MOVLB  F
020CA:  MOVLW  55
020CC:  MOVWF  FA7
020CE:  MOVLW  AA
020D0:  MOVWF  FA7
020D2:  BSF    FA6.1
020D4:  BTFSC  FA6.1
020D6:  BRA    20D4
020D8:  BCF    FA6.2
020DA:  MOVF   00,W
020DC:  IORWF  FF2,F
020DE:  MOVLW  14
020E0:  MOVLB  6
020E2:  MOVWF  x62
020E4:  MOVLB  0
020E6:  CALL   1052
....................    } 
....................    if(Ganancia>40){ 
020EA:  MOVLB  6
020EC:  CLRF   x60
020EE:  CLRF   x5F
020F0:  MOVLW  20
020F2:  MOVWF  x5E
020F4:  MOVLW  84
020F6:  MOVWF  x5D
020F8:  MOVFF  604,664
020FC:  MOVFF  603,663
02100:  MOVFF  602,662
02104:  MOVFF  601,661
02108:  MOVLB  0
0210A:  RCALL  1C42
0210C:  BNC   2152
....................       Ganancia=2;write_eeprom(14,2);delay_ms(20); 
0210E:  MOVLB  6
02110:  CLRF   x04
02112:  CLRF   x03
02114:  CLRF   x02
02116:  MOVLW  80
02118:  MOVWF  x01
0211A:  CLRF   FAA
0211C:  MOVLW  0E
0211E:  MOVWF  FA9
02120:  MOVLW  02
02122:  MOVWF  FA8
02124:  BCF    FA6.6
02126:  BCF    FA6.7
02128:  BSF    FA6.2
0212A:  MOVF   FF2,W
0212C:  MOVWF  00
0212E:  BCF    FF2.7
02130:  MOVLB  F
02132:  MOVLW  55
02134:  MOVWF  FA7
02136:  MOVLW  AA
02138:  MOVWF  FA7
0213A:  BSF    FA6.1
0213C:  BTFSC  FA6.1
0213E:  BRA    213C
02140:  BCF    FA6.2
02142:  MOVF   00,W
02144:  IORWF  FF2,F
02146:  MOVLW  14
02148:  MOVLB  6
0214A:  MOVWF  x62
0214C:  MOVLB  0
0214E:  CALL   1052
....................    } 
....................    if(Integral>40){ 
02152:  MOVLB  6
02154:  CLRF   x60
02156:  CLRF   x5F
02158:  MOVLW  20
0215A:  MOVWF  x5E
0215C:  MOVLW  84
0215E:  MOVWF  x5D
02160:  MOVFF  5C8,664
02164:  MOVFF  5C7,663
02168:  MOVFF  5C6,662
0216C:  MOVFF  5C5,661
02170:  MOVLB  0
02172:  RCALL  1C42
02174:  BNC   21BA
....................       Integral=1;write_eeprom(15,1);delay_ms(20); 
02176:  MOVLB  5
02178:  CLRF   xC8
0217A:  CLRF   xC7
0217C:  CLRF   xC6
0217E:  MOVLW  7F
02180:  MOVWF  xC5
02182:  CLRF   FAA
02184:  MOVLW  0F
02186:  MOVWF  FA9
02188:  MOVLW  01
0218A:  MOVWF  FA8
0218C:  BCF    FA6.6
0218E:  BCF    FA6.7
02190:  BSF    FA6.2
02192:  MOVF   FF2,W
02194:  MOVWF  00
02196:  BCF    FF2.7
02198:  MOVLB  F
0219A:  MOVLW  55
0219C:  MOVWF  FA7
0219E:  MOVLW  AA
021A0:  MOVWF  FA7
021A2:  BSF    FA6.1
021A4:  BTFSC  FA6.1
021A6:  BRA    21A4
021A8:  BCF    FA6.2
021AA:  MOVF   00,W
021AC:  IORWF  FF2,F
021AE:  MOVLW  14
021B0:  MOVLB  6
021B2:  MOVWF  x62
021B4:  MOVLB  0
021B6:  CALL   1052
....................    } 
....................    if(Derivativo>200){ 
021BA:  MOVLB  6
021BC:  CLRF   x60
021BE:  CLRF   x5F
021C0:  MOVLW  48
021C2:  MOVWF  x5E
021C4:  MOVLW  86
021C6:  MOVWF  x5D
021C8:  MOVFF  5CC,664
021CC:  MOVFF  5CB,663
021D0:  MOVFF  5CA,662
021D4:  MOVFF  5C9,661
021D8:  MOVLB  0
021DA:  RCALL  1C42
021DC:  BNC   2224
....................       Derivativo=40;write_eeprom(16,40);delay_ms(20); 
021DE:  MOVLB  5
021E0:  CLRF   xCC
021E2:  CLRF   xCB
021E4:  MOVLW  20
021E6:  MOVWF  xCA
021E8:  MOVLW  84
021EA:  MOVWF  xC9
021EC:  CLRF   FAA
021EE:  MOVLW  10
021F0:  MOVWF  FA9
021F2:  MOVLW  28
021F4:  MOVWF  FA8
021F6:  BCF    FA6.6
021F8:  BCF    FA6.7
021FA:  BSF    FA6.2
021FC:  MOVF   FF2,W
021FE:  MOVWF  00
02200:  BCF    FF2.7
02202:  MOVLB  F
02204:  MOVLW  55
02206:  MOVWF  FA7
02208:  MOVLW  AA
0220A:  MOVWF  FA7
0220C:  BSF    FA6.1
0220E:  BTFSC  FA6.1
02210:  BRA    220E
02212:  BCF    FA6.2
02214:  MOVF   00,W
02216:  IORWF  FF2,F
02218:  MOVLW  14
0221A:  MOVLB  6
0221C:  MOVWF  x62
0221E:  MOVLB  0
02220:  CALL   1052
....................    } 
....................    if(Tciclo>40){ 
02224:  MOVLB  6
02226:  CLRF   x60
02228:  CLRF   x5F
0222A:  MOVLW  20
0222C:  MOVWF  x5E
0222E:  MOVLW  84
02230:  MOVWF  x5D
02232:  MOVFF  5EC,664
02236:  MOVFF  5EB,663
0223A:  MOVFF  5EA,662
0223E:  MOVFF  5E9,661
02242:  MOVLB  0
02244:  RCALL  1C42
02246:  BNC   228E
....................       Tciclo=5;write_eeprom(17,5);delay_ms(20); 
02248:  MOVLB  5
0224A:  CLRF   xEC
0224C:  CLRF   xEB
0224E:  MOVLW  20
02250:  MOVWF  xEA
02252:  MOVLW  81
02254:  MOVWF  xE9
02256:  CLRF   FAA
02258:  MOVLW  11
0225A:  MOVWF  FA9
0225C:  MOVLW  05
0225E:  MOVWF  FA8
02260:  BCF    FA6.6
02262:  BCF    FA6.7
02264:  BSF    FA6.2
02266:  MOVF   FF2,W
02268:  MOVWF  00
0226A:  BCF    FF2.7
0226C:  MOVLB  F
0226E:  MOVLW  55
02270:  MOVWF  FA7
02272:  MOVLW  AA
02274:  MOVWF  FA7
02276:  BSF    FA6.1
02278:  BTFSC  FA6.1
0227A:  BRA    2278
0227C:  BCF    FA6.2
0227E:  MOVF   00,W
02280:  IORWF  FF2,F
02282:  MOVLW  14
02284:  MOVLB  6
02286:  MOVWF  x62
02288:  MOVLB  0
0228A:  CALL   1052
....................    } 
....................    if(Ajuste>100){ 
0228E:  MOVLB  5
02290:  MOVF   x8A,W
02292:  SUBLW  64
02294:  BC    22D0
....................       Ajuste=0;write_eeprom(18,0);delay_ms(20); 
02296:  CLRF   x8A
02298:  CLRF   FAA
0229A:  MOVLW  12
0229C:  MOVWF  FA9
0229E:  CLRF   FA8
022A0:  BCF    FA6.6
022A2:  BCF    FA6.7
022A4:  BSF    FA6.2
022A6:  MOVF   FF2,W
022A8:  MOVWF  00
022AA:  BCF    FF2.7
022AC:  MOVLB  F
022AE:  MOVLW  55
022B0:  MOVWF  FA7
022B2:  MOVLW  AA
022B4:  MOVWF  FA7
022B6:  BSF    FA6.1
022B8:  BTFSC  FA6.1
022BA:  BRA    22B8
022BC:  BCF    FA6.2
022BE:  MOVF   00,W
022C0:  IORWF  FF2,F
022C2:  MOVLW  14
022C4:  MOVLB  6
022C6:  MOVWF  x62
022C8:  MOVLB  0
022CA:  CALL   1052
022CE:  MOVLB  5
....................    } 
....................    if(Ajusten>100){ 
022D0:  MOVF   x8B,W
022D2:  SUBLW  64
022D4:  BC    2310
....................       Ajusten=0;write_eeprom(19,0);delay_ms(20); 
022D6:  CLRF   x8B
022D8:  CLRF   FAA
022DA:  MOVLW  13
022DC:  MOVWF  FA9
022DE:  CLRF   FA8
022E0:  BCF    FA6.6
022E2:  BCF    FA6.7
022E4:  BSF    FA6.2
022E6:  MOVF   FF2,W
022E8:  MOVWF  00
022EA:  BCF    FF2.7
022EC:  MOVLB  F
022EE:  MOVLW  55
022F0:  MOVWF  FA7
022F2:  MOVLW  AA
022F4:  MOVWF  FA7
022F6:  BSF    FA6.1
022F8:  BTFSC  FA6.1
022FA:  BRA    22F8
022FC:  BCF    FA6.2
022FE:  MOVF   00,W
02300:  IORWF  FF2,F
02302:  MOVLW  14
02304:  MOVLB  6
02306:  MOVWF  x62
02308:  MOVLB  0
0230A:  CALL   1052
0230E:  MOVLB  5
....................    } 
....................    if(MediaMovil>80){ 
02310:  MOVF   x8C,W
02312:  SUBLW  50
02314:  BC    2352
....................       MediaMovil=80;write_eeprom(20,80);delay_ms(20); 
02316:  MOVLW  50
02318:  MOVWF  x8C
0231A:  CLRF   FAA
0231C:  MOVLW  14
0231E:  MOVWF  FA9
02320:  MOVLW  50
02322:  MOVWF  FA8
02324:  BCF    FA6.6
02326:  BCF    FA6.7
02328:  BSF    FA6.2
0232A:  MOVF   FF2,W
0232C:  MOVWF  00
0232E:  BCF    FF2.7
02330:  MOVLB  F
02332:  MOVLW  55
02334:  MOVWF  FA7
02336:  MOVLW  AA
02338:  MOVWF  FA7
0233A:  BSF    FA6.1
0233C:  BTFSC  FA6.1
0233E:  BRA    233C
02340:  BCF    FA6.2
02342:  MOVF   00,W
02344:  IORWF  FF2,F
02346:  MOVLW  14
02348:  MOVLB  6
0234A:  MOVWF  x62
0234C:  MOVLB  0
0234E:  CALL   1052
....................    } 
....................    if(Gain>50){ 
02352:  MOVLB  6
02354:  CLRF   x60
02356:  CLRF   x5F
02358:  MOVLW  48
0235A:  MOVWF  x5E
0235C:  MOVLW  84
0235E:  MOVWF  x5D
02360:  MOVFF  5C0,664
02364:  MOVFF  5BF,663
02368:  MOVFF  5BE,662
0236C:  MOVFF  5BD,661
02370:  MOVLB  0
02372:  RCALL  1C42
02374:  BNC   23F8
....................       Gain=40.2;write_eeprom(21,40);delay_ms(20);write_eeprom(22,2);delay_ms(20); 
02376:  MOVLW  CD
02378:  MOVLB  5
0237A:  MOVWF  xC0
0237C:  MOVLW  CC
0237E:  MOVWF  xBF
02380:  MOVLW  20
02382:  MOVWF  xBE
02384:  MOVLW  84
02386:  MOVWF  xBD
02388:  CLRF   FAA
0238A:  MOVLW  15
0238C:  MOVWF  FA9
0238E:  MOVLW  28
02390:  MOVWF  FA8
02392:  BCF    FA6.6
02394:  BCF    FA6.7
02396:  BSF    FA6.2
02398:  MOVF   FF2,W
0239A:  MOVWF  00
0239C:  BCF    FF2.7
0239E:  MOVLB  F
023A0:  MOVLW  55
023A2:  MOVWF  FA7
023A4:  MOVLW  AA
023A6:  MOVWF  FA7
023A8:  BSF    FA6.1
023AA:  BTFSC  FA6.1
023AC:  BRA    23AA
023AE:  BCF    FA6.2
023B0:  MOVF   00,W
023B2:  IORWF  FF2,F
023B4:  MOVLW  14
023B6:  MOVLB  6
023B8:  MOVWF  x62
023BA:  MOVLB  0
023BC:  CALL   1052
023C0:  CLRF   FAA
023C2:  MOVLW  16
023C4:  MOVWF  FA9
023C6:  MOVLW  02
023C8:  MOVWF  FA8
023CA:  BCF    FA6.6
023CC:  BCF    FA6.7
023CE:  BSF    FA6.2
023D0:  MOVF   FF2,W
023D2:  MOVWF  00
023D4:  BCF    FF2.7
023D6:  MOVLB  F
023D8:  MOVLW  55
023DA:  MOVWF  FA7
023DC:  MOVLW  AA
023DE:  MOVWF  FA7
023E0:  BSF    FA6.1
023E2:  BTFSC  FA6.1
023E4:  BRA    23E2
023E6:  BCF    FA6.2
023E8:  MOVF   00,W
023EA:  IORWF  FF2,F
023EC:  MOVLW  14
023EE:  MOVLB  6
023F0:  MOVWF  x62
023F2:  MOVLB  0
023F4:  CALL   1052
....................    } 
....................    if(R1>6400){ 
023F8:  MOVLB  6
023FA:  CLRF   x60
023FC:  CLRF   x5F
023FE:  MOVLW  48
02400:  MOVWF  x5E
02402:  MOVLW  8B
02404:  MOVWF  x5D
02406:  MOVFF  5E4,664
0240A:  MOVFF  5E3,663
0240E:  MOVFF  5E2,662
02412:  MOVFF  5E1,661
02416:  MOVLB  0
02418:  RCALL  1C42
0241A:  BNC   249C
....................       R1=6200;write_eeprom(23,0x18);delay_ms(20);write_eeprom(24,0x38);delay_ms(20); 
0241C:  MOVLB  5
0241E:  CLRF   xE4
02420:  MOVLW  C0
02422:  MOVWF  xE3
02424:  MOVLW  41
02426:  MOVWF  xE2
02428:  MOVLW  8B
0242A:  MOVWF  xE1
0242C:  CLRF   FAA
0242E:  MOVLW  17
02430:  MOVWF  FA9
02432:  MOVLW  18
02434:  MOVWF  FA8
02436:  BCF    FA6.6
02438:  BCF    FA6.7
0243A:  BSF    FA6.2
0243C:  MOVF   FF2,W
0243E:  MOVWF  00
02440:  BCF    FF2.7
02442:  MOVLB  F
02444:  MOVLW  55
02446:  MOVWF  FA7
02448:  MOVLW  AA
0244A:  MOVWF  FA7
0244C:  BSF    FA6.1
0244E:  BTFSC  FA6.1
02450:  BRA    244E
02452:  BCF    FA6.2
02454:  MOVF   00,W
02456:  IORWF  FF2,F
02458:  MOVLW  14
0245A:  MOVLB  6
0245C:  MOVWF  x62
0245E:  MOVLB  0
02460:  CALL   1052
02464:  CLRF   FAA
02466:  MOVLW  18
02468:  MOVWF  FA9
0246A:  MOVLW  38
0246C:  MOVWF  FA8
0246E:  BCF    FA6.6
02470:  BCF    FA6.7
02472:  BSF    FA6.2
02474:  MOVF   FF2,W
02476:  MOVWF  00
02478:  BCF    FF2.7
0247A:  MOVLB  F
0247C:  MOVLW  55
0247E:  MOVWF  FA7
02480:  MOVLW  AA
02482:  MOVWF  FA7
02484:  BSF    FA6.1
02486:  BTFSC  FA6.1
02488:  BRA    2486
0248A:  BCF    FA6.2
0248C:  MOVF   00,W
0248E:  IORWF  FF2,F
02490:  MOVLW  14
02492:  MOVLB  6
02494:  MOVWF  x62
02496:  MOVLB  0
02498:  CALL   1052
....................    } 
....................    if(RPT100>2.0){ 
0249C:  MOVLB  6
0249E:  CLRF   x60
024A0:  CLRF   x5F
024A2:  CLRF   x5E
024A4:  MOVLW  80
024A6:  MOVWF  x5D
024A8:  MOVFF  5C4,664
024AC:  MOVFF  5C3,663
024B0:  MOVFF  5C2,662
024B4:  MOVFF  5C1,661
024B8:  MOVLB  0
024BA:  CALL   1C42
024BE:  BNC   253A
....................       RPT100=0.5;write_eeprom(25,0);delay_ms(20);write_eeprom(26,5);delay_ms(20); 
024C0:  MOVLB  5
024C2:  CLRF   xC4
024C4:  CLRF   xC3
024C6:  CLRF   xC2
024C8:  MOVLW  7E
024CA:  MOVWF  xC1
024CC:  CLRF   FAA
024CE:  MOVLW  19
024D0:  MOVWF  FA9
024D2:  CLRF   FA8
024D4:  BCF    FA6.6
024D6:  BCF    FA6.7
024D8:  BSF    FA6.2
024DA:  MOVF   FF2,W
024DC:  MOVWF  00
024DE:  BCF    FF2.7
024E0:  MOVLB  F
024E2:  MOVLW  55
024E4:  MOVWF  FA7
024E6:  MOVLW  AA
024E8:  MOVWF  FA7
024EA:  BSF    FA6.1
024EC:  BTFSC  FA6.1
024EE:  BRA    24EC
024F0:  BCF    FA6.2
024F2:  MOVF   00,W
024F4:  IORWF  FF2,F
024F6:  MOVLW  14
024F8:  MOVLB  6
024FA:  MOVWF  x62
024FC:  MOVLB  0
024FE:  CALL   1052
02502:  CLRF   FAA
02504:  MOVLW  1A
02506:  MOVWF  FA9
02508:  MOVLW  05
0250A:  MOVWF  FA8
0250C:  BCF    FA6.6
0250E:  BCF    FA6.7
02510:  BSF    FA6.2
02512:  MOVF   FF2,W
02514:  MOVWF  00
02516:  BCF    FF2.7
02518:  MOVLB  F
0251A:  MOVLW  55
0251C:  MOVWF  FA7
0251E:  MOVLW  AA
02520:  MOVWF  FA7
02522:  BSF    FA6.1
02524:  BTFSC  FA6.1
02526:  BRA    2524
02528:  BCF    FA6.2
0252A:  MOVF   00,W
0252C:  IORWF  FF2,F
0252E:  MOVLW  14
02530:  MOVLB  6
02532:  MOVWF  x62
02534:  MOVLB  0
02536:  CALL   1052
....................    } 
....................    if(Source>1){ 
0253A:  MOVLB  5
0253C:  MOVF   x96,W
0253E:  SUBLW  01
02540:  BC    2580
....................       Source=1;write_eeprom(27,1);delay_ms(20); 
02542:  MOVLW  01
02544:  MOVWF  x96
02546:  CLRF   FAA
02548:  MOVLW  1B
0254A:  MOVWF  FA9
0254C:  MOVLW  01
0254E:  MOVWF  FA8
02550:  BCF    FA6.6
02552:  BCF    FA6.7
02554:  BSF    FA6.2
02556:  MOVF   FF2,W
02558:  MOVWF  00
0255A:  BCF    FF2.7
0255C:  MOVLB  F
0255E:  MOVLW  55
02560:  MOVWF  FA7
02562:  MOVLW  AA
02564:  MOVWF  FA7
02566:  BSF    FA6.1
02568:  BTFSC  FA6.1
0256A:  BRA    2568
0256C:  BCF    FA6.2
0256E:  MOVF   00,W
02570:  IORWF  FF2,F
02572:  MOVLW  14
02574:  MOVLB  6
02576:  MOVWF  x62
02578:  MOVLB  0
0257A:  CALL   1052
0257E:  MOVLB  5
....................    } 
.................... } 
02580:  MOVLB  0
02582:  GOTO   5D64 (RETURN)
....................  
.................... void DelayPuls(){ 
....................    delay_ms(2); 
*
0379C:  MOVLW  02
0379E:  MOVLB  6
037A0:  MOVWF  x62
037A2:  MOVLB  0
037A4:  CALL   1052
.................... } 
037A8:  RETLW  00
....................  
.................... short PidePassword(int8 MenuAnt, int8 MenuActual, int8 MenuPost, int8 clave0,int8 clave1, int8 clave2,int8 clave3,short cambia){ 
....................       if(n==0) 
*
03858:  MOVLB  5
0385A:  MOVF   x92,F
0385C:  BTFSS  FD8.2
0385E:  BRA    3948
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1);displayContrasena(Contrasena[1],40,30,0); 
03860:  MOVFF  5D5,663
03864:  MOVLW  14
03866:  MOVLB  6
03868:  MOVWF  x64
0386A:  MOVLW  1E
0386C:  MOVWF  x65
0386E:  MOVLW  01
03870:  MOVWF  x66
03872:  MOVLB  0
03874:  RCALL  36DE
03876:  MOVFF  5D6,663
0387A:  MOVLW  28
0387C:  MOVLB  6
0387E:  MOVWF  x64
03880:  MOVLW  1E
03882:  MOVWF  x65
03884:  CLRF   x66
03886:  MOVLB  0
03888:  RCALL  36DE
....................          displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
0388A:  MOVFF  5D7,663
0388E:  MOVLW  3C
03890:  MOVLB  6
03892:  MOVWF  x64
03894:  MOVLW  1E
03896:  MOVWF  x65
03898:  CLRF   x66
0389A:  MOVLB  0
0389C:  RCALL  36DE
0389E:  MOVFF  5D5,663
038A2:  MOVLW  50
038A4:  MOVLB  6
038A6:  MOVWF  x64
038A8:  MOVLW  1E
038AA:  MOVWF  x65
038AC:  CLRF   x66
038AE:  MOVLB  0
038B0:  RCALL  36DE
....................          if(!cambia){ 
038B2:  MOVLB  6
038B4:  MOVF   x60,F
038B6:  BNZ   3900
....................             strcpy(Menus.Letra,"Clave"); 
038B8:  MOVLW  06
038BA:  MOVWF  FEA
038BC:  MOVLW  39
038BE:  MOVWF  FE9
038C0:  MOVFF  FF2,661
038C4:  BCF    FF2.7
038C6:  MOVLW  00
038C8:  MOVLB  0
038CA:  CALL   07F0
038CE:  TBLRD*-
038D0:  TBLRD*+
038D2:  MOVF   FF5,W
038D4:  MOVWF  FEE
038D6:  IORLW  00
038D8:  BNZ   38D0
038DA:  MOVLB  6
038DC:  BTFSC  x61.7
038DE:  BSF    FF2.7
....................             displayMenu(Menus.Letra,20,0,1,3); 
038E0:  MOVLW  06
038E2:  MOVWF  x62
038E4:  MOVLW  39
038E6:  MOVWF  x61
038E8:  MOVLW  14
038EA:  MOVWF  x63
038EC:  CLRF   x64
038EE:  MOVLW  01
038F0:  MOVWF  x65
038F2:  MOVLW  03
038F4:  MOVWF  x66
038F6:  MOVLB  0
038F8:  CALL   2BEA
....................          }else{ 
038FC:  BRA    3942
038FE:  MOVLB  6
....................             strcpy(Menus.Letra,"Clave Nueva"); 
03900:  MOVLW  06
03902:  MOVWF  FEA
03904:  MOVLW  39
03906:  MOVWF  FE9
03908:  MOVFF  FF2,661
0390C:  BCF    FF2.7
0390E:  MOVLW  00
03910:  MOVLB  0
03912:  CALL   0814
03916:  TBLRD*-
03918:  TBLRD*+
0391A:  MOVF   FF5,W
0391C:  MOVWF  FEE
0391E:  IORLW  00
03920:  BNZ   3918
03922:  MOVLB  6
03924:  BTFSC  x61.7
03926:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);   
03928:  MOVLW  06
0392A:  MOVWF  x62
0392C:  MOVLW  39
0392E:  MOVWF  x61
03930:  CLRF   x63
03932:  CLRF   x64
03934:  MOVLW  01
03936:  MOVWF  x65
03938:  MOVLW  02
0393A:  MOVWF  x66
0393C:  MOVLB  0
0393E:  CALL   2BEA
....................          } 
....................          n=1; 
03942:  MOVLW  01
03944:  MOVLB  5
03946:  MOVWF  x92
....................       } 
....................        
....................       if(UP){ 
03948:  BSF    F92.4
0394A:  BTFSC  F80.4
0394C:  BRA    3A16
....................          if(Flanco == 0){ 
0394E:  BTFSC  x87.1
03950:  BRA    3A14
....................             Flanco = 1;DelayPuls(); 
03952:  BSF    x87.1
03954:  MOVLB  0
03956:  RCALL  379C
....................             for(i=1;i<=4;i++){ 
03958:  MOVLW  01
0395A:  MOVLB  5
0395C:  MOVWF  x99
0395E:  MOVF   x99,W
03960:  SUBLW  04
03962:  BNC   3A14
....................                if(unidad==i){ 
03964:  MOVF   x99,W
03966:  SUBWF  x98,W
03968:  BNZ   39DE
....................                   Contrasena[i-1]++; 
0396A:  MOVLW  01
0396C:  SUBWF  x99,W
0396E:  CLRF   03
03970:  ADDLW  D5
03972:  MOVWF  FE9
03974:  MOVLW  05
03976:  ADDWFC 03,W
03978:  MOVWF  FEA
0397A:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9){ 
0397C:  MOVLW  01
0397E:  SUBWF  x99,W
03980:  CLRF   03
03982:  ADDLW  D5
03984:  MOVWF  FE9
03986:  MOVLW  05
03988:  ADDWFC 03,W
0398A:  MOVWF  FEA
0398C:  BTFSC  FEF.7
0398E:  BRA    39A8
03990:  MOVF   FEF,W
03992:  SUBLW  09
03994:  BC    39A8
....................                      Contrasena[i-1]=0; 
03996:  MOVLW  01
03998:  SUBWF  x99,W
0399A:  CLRF   03
0399C:  ADDLW  D5
0399E:  MOVWF  FE9
039A0:  MOVLW  05
039A2:  ADDWFC 03,W
039A4:  MOVWF  FEA
039A6:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
039A8:  MOVLW  01
039AA:  SUBWF  x99,W
039AC:  CLRF   03
039AE:  ADDLW  D5
039B0:  MOVWF  FE9
039B2:  MOVLW  05
039B4:  ADDWFC 03,W
039B6:  MOVWF  FEA
039B8:  MOVFF  FEF,661
039BC:  MOVF   x99,W
039BE:  MULLW  14
039C0:  MOVFF  FF3,662
039C4:  MOVLB  6
039C6:  MOVFF  661,663
039CA:  MOVFF  662,664
039CE:  MOVLW  1E
039D0:  MOVWF  x65
039D2:  MOVLW  01
039D4:  MOVWF  x66
039D6:  MOVLB  0
039D8:  RCALL  36DE
....................                }else{ 
039DA:  BRA    3A0E
039DC:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
039DE:  MOVLW  01
039E0:  SUBWF  x99,W
039E2:  CLRF   03
039E4:  ADDLW  D5
039E6:  MOVWF  FE9
039E8:  MOVLW  05
039EA:  ADDWFC 03,W
039EC:  MOVWF  FEA
039EE:  MOVFF  FEF,661
039F2:  MOVF   x99,W
039F4:  MULLW  14
039F6:  MOVFF  FF3,662
039FA:  MOVLB  6
039FC:  MOVFF  661,663
03A00:  MOVFF  662,664
03A04:  MOVLW  1E
03A06:  MOVWF  x65
03A08:  CLRF   x66
03A0A:  MOVLB  0
03A0C:  RCALL  36DE
....................                } 
....................             } 
03A0E:  MOVLB  5
03A10:  INCF   x99,F
03A12:  BRA    395E
....................          } 
....................       }else{ 
03A14:  BRA    3A18
....................          Flanco = 0; 
03A16:  BCF    x87.1
....................       } 
....................              
....................       if(DOWN){ 
03A18:  BSF    F92.5
03A1A:  BTFSC  F80.5
03A1C:  BRA    3AE4
....................          if(Flanco2 == 0){ 
03A1E:  BTFSC  x87.3
03A20:  BRA    3AE2
....................             Flanco2 = 1;DelayPuls(); 
03A22:  BSF    x87.3
03A24:  MOVLB  0
03A26:  RCALL  379C
....................             for(i=1;i<=4;i++){ 
03A28:  MOVLW  01
03A2A:  MOVLB  5
03A2C:  MOVWF  x99
03A2E:  MOVF   x99,W
03A30:  SUBLW  04
03A32:  BNC   3AE2
....................                if(unidad==i){ 
03A34:  MOVF   x99,W
03A36:  SUBWF  x98,W
03A38:  BNZ   3AAC
....................                   Contrasena[i-1]--; 
03A3A:  MOVLW  01
03A3C:  SUBWF  x99,W
03A3E:  CLRF   03
03A40:  ADDLW  D5
03A42:  MOVWF  FE9
03A44:  MOVLW  05
03A46:  ADDWFC 03,W
03A48:  MOVWF  FEA
03A4A:  DECF   FEF,F
....................                   if(Contrasena[i-1]<0){ 
03A4C:  MOVLW  01
03A4E:  SUBWF  x99,W
03A50:  CLRF   03
03A52:  ADDLW  D5
03A54:  MOVWF  FE9
03A56:  MOVLW  05
03A58:  ADDWFC 03,W
03A5A:  MOVWF  FEA
03A5C:  BTFSC  FEF.7
03A5E:  BRA    3A62
03A60:  BRA    3A76
....................                      Contrasena[i-1]=9; 
03A62:  MOVLW  01
03A64:  SUBWF  x99,W
03A66:  CLRF   03
03A68:  ADDLW  D5
03A6A:  MOVWF  FE9
03A6C:  MOVLW  05
03A6E:  ADDWFC 03,W
03A70:  MOVWF  FEA
03A72:  MOVLW  09
03A74:  MOVWF  FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
03A76:  MOVLW  01
03A78:  SUBWF  x99,W
03A7A:  CLRF   03
03A7C:  ADDLW  D5
03A7E:  MOVWF  FE9
03A80:  MOVLW  05
03A82:  ADDWFC 03,W
03A84:  MOVWF  FEA
03A86:  MOVFF  FEF,661
03A8A:  MOVF   x99,W
03A8C:  MULLW  14
03A8E:  MOVFF  FF3,662
03A92:  MOVLB  6
03A94:  MOVFF  661,663
03A98:  MOVFF  662,664
03A9C:  MOVLW  1E
03A9E:  MOVWF  x65
03AA0:  MOVLW  01
03AA2:  MOVWF  x66
03AA4:  MOVLB  0
03AA6:  RCALL  36DE
....................                }else{ 
03AA8:  BRA    3ADC
03AAA:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
03AAC:  MOVLW  01
03AAE:  SUBWF  x99,W
03AB0:  CLRF   03
03AB2:  ADDLW  D5
03AB4:  MOVWF  FE9
03AB6:  MOVLW  05
03AB8:  ADDWFC 03,W
03ABA:  MOVWF  FEA
03ABC:  MOVFF  FEF,661
03AC0:  MOVF   x99,W
03AC2:  MULLW  14
03AC4:  MOVFF  FF3,662
03AC8:  MOVLB  6
03ACA:  MOVFF  661,663
03ACE:  MOVFF  662,664
03AD2:  MOVLW  1E
03AD4:  MOVWF  x65
03AD6:  CLRF   x66
03AD8:  MOVLB  0
03ADA:  RCALL  36DE
....................                } 
....................             }       
03ADC:  MOVLB  5
03ADE:  INCF   x99,F
03AE0:  BRA    3A2E
....................          }      
....................       }else{ 
03AE2:  BRA    3AE6
....................          Flanco2 = 0; 
03AE4:  BCF    x87.3
....................       } 
....................              
....................       if(RIGHT){ 
03AE6:  BSF    F96.0
03AE8:  BTFSC  F84.0
03AEA:  BRA    3B78
....................          if(Flanco1 == 0){ 
03AEC:  BTFSC  x87.2
03AEE:  BRA    3B76
....................             Flanco1 = 1;DelayPuls();unidad++; 
03AF0:  BSF    x87.2
03AF2:  MOVLB  0
03AF4:  RCALL  379C
03AF6:  MOVLB  5
03AF8:  INCF   x98,F
....................             for(i=1;i<=4;i++){ 
03AFA:  MOVLW  01
03AFC:  MOVWF  x99
03AFE:  MOVF   x99,W
03B00:  SUBLW  04
03B02:  BNC   3B76
....................                if(unidad==i){ 
03B04:  MOVF   x99,W
03B06:  SUBWF  x98,W
03B08:  BNZ   3B40
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
03B0A:  MOVLW  01
03B0C:  SUBWF  x99,W
03B0E:  CLRF   03
03B10:  ADDLW  D5
03B12:  MOVWF  FE9
03B14:  MOVLW  05
03B16:  ADDWFC 03,W
03B18:  MOVWF  FEA
03B1A:  MOVFF  FEF,661
03B1E:  MOVF   x99,W
03B20:  MULLW  14
03B22:  MOVFF  FF3,662
03B26:  MOVLB  6
03B28:  MOVFF  661,663
03B2C:  MOVFF  662,664
03B30:  MOVLW  1E
03B32:  MOVWF  x65
03B34:  MOVLW  01
03B36:  MOVWF  x66
03B38:  MOVLB  0
03B3A:  RCALL  36DE
....................                }else{ 
03B3C:  BRA    3B70
03B3E:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
03B40:  MOVLW  01
03B42:  SUBWF  x99,W
03B44:  CLRF   03
03B46:  ADDLW  D5
03B48:  MOVWF  FE9
03B4A:  MOVLW  05
03B4C:  ADDWFC 03,W
03B4E:  MOVWF  FEA
03B50:  MOVFF  FEF,661
03B54:  MOVF   x99,W
03B56:  MULLW  14
03B58:  MOVFF  FF3,662
03B5C:  MOVLB  6
03B5E:  MOVFF  661,663
03B62:  MOVFF  662,664
03B66:  MOVLW  1E
03B68:  MOVWF  x65
03B6A:  CLRF   x66
03B6C:  MOVLB  0
03B6E:  RCALL  36DE
....................                } 
....................             } 
03B70:  MOVLB  5
03B72:  INCF   x99,F
03B74:  BRA    3AFE
....................          } 
....................       }else{ 
03B76:  BRA    3B7A
....................          Flanco1 = 0; 
03B78:  BCF    x87.2
....................       } 
....................        
....................       if(LEFT){ 
03B7A:  BSF    F96.1
03B7C:  BTFSC  F84.1
03B7E:  BRA    3BC8
....................          delay_ms(100); 
03B80:  MOVLW  64
03B82:  MOVLB  6
03B84:  MOVWF  x62
03B86:  MOVLB  0
03B88:  CALL   1052
....................          if(LEFT){ 
03B8C:  BSF    F96.1
03B8E:  BTFSC  F84.1
03B90:  BRA    3BC6
....................             Menu=MenuAnt;glcd_fillScreen(OFF);n=0;Opcion=1;unidad=1; 
03B92:  MOVFF  659,597
03B96:  MOVLB  6
03B98:  CLRF   x61
03B9A:  MOVLB  0
03B9C:  CALL   25BC
03BA0:  MOVLB  5
03BA2:  CLRF   x92
03BA4:  MOVLW  01
03BA6:  MOVWF  x9C
03BA8:  MOVWF  x98
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
03BAA:  CLRF   xD5
03BAC:  CLRF   xD6
03BAE:  CLRF   xD7
03BB0:  CLRF   xD8
....................             glcd_fillScreen(OFF);glcd_update(); 
03BB2:  MOVLB  6
03BB4:  CLRF   x61
03BB6:  MOVLB  0
03BB8:  CALL   25BC
03BBC:  CALL   2616
....................             return 1; 
03BC0:  MOVLW  01
03BC2:  MOVWF  01
03BC4:  BRA    408A
03BC6:  MOVLB  5
....................          } 
....................       } 
....................      
....................       if(unidad>4){ 
03BC8:  MOVF   x98,W
03BCA:  SUBLW  04
03BCC:  BTFSC  FD8.0
03BCE:  BRA    408C
....................          glcd_fillScreen(OFF);unidad=1; 
03BD0:  MOVLB  6
03BD2:  CLRF   x61
03BD4:  MOVLB  0
03BD6:  CALL   25BC
03BDA:  MOVLW  01
03BDC:  MOVLB  5
03BDE:  MOVWF  x98
....................           
....................          if(!cambia){ 
03BE0:  MOVLB  6
03BE2:  MOVF   x60,F
03BE4:  BTFSS  FD8.2
03BE6:  BRA    3F74
....................             if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2 && MenuActual==0){ // Si Ingresa clave para reset general del sistema. 
03BE8:  MOVLB  5
03BEA:  MOVF   xD5,W
03BEC:  SUBLW  03
03BEE:  BTFSS  FD8.2
03BF0:  BRA    3CEC
03BF2:  MOVF   xD6,W
03BF4:  SUBLW  08
03BF6:  BTFSS  FD8.2
03BF8:  BRA    3CEC
03BFA:  MOVF   xD7,W
03BFC:  SUBLW  09
03BFE:  BNZ   3CEC
03C00:  MOVF   xD8,W
03C02:  SUBLW  02
03C04:  BNZ   3CEC
03C06:  MOVLB  6
03C08:  MOVF   x5A,F
03C0A:  BTFSC  FD8.2
03C0C:  BRA    3C12
03C0E:  MOVLB  5
03C10:  BRA    3CEC
....................                write_eeprom(4,0);delay_ms(20);write_eeprom(5,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
03C12:  CLRF   FAA
03C14:  MOVLW  04
03C16:  MOVWF  FA9
03C18:  CLRF   FA8
03C1A:  BCF    FA6.6
03C1C:  BCF    FA6.7
03C1E:  BSF    FA6.2
03C20:  MOVF   FF2,W
03C22:  MOVWF  00
03C24:  BCF    FF2.7
03C26:  MOVLB  F
03C28:  MOVLW  55
03C2A:  MOVWF  FA7
03C2C:  MOVLW  AA
03C2E:  MOVWF  FA7
03C30:  BSF    FA6.1
03C32:  BTFSC  FA6.1
03C34:  BRA    3C32
03C36:  BCF    FA6.2
03C38:  MOVF   00,W
03C3A:  IORWF  FF2,F
03C3C:  MOVLW  14
03C3E:  MOVLB  6
03C40:  MOVWF  x62
03C42:  MOVLB  0
03C44:  CALL   1052
03C48:  CLRF   FAA
03C4A:  MOVLW  05
03C4C:  MOVWF  FA9
03C4E:  CLRF   FA8
03C50:  BCF    FA6.6
03C52:  BCF    FA6.7
03C54:  BSF    FA6.2
03C56:  MOVF   FF2,W
03C58:  MOVWF  00
03C5A:  BCF    FF2.7
03C5C:  MOVLB  F
03C5E:  MOVLW  55
03C60:  MOVWF  FA7
03C62:  MOVLW  AA
03C64:  MOVWF  FA7
03C66:  BSF    FA6.1
03C68:  BTFSC  FA6.1
03C6A:  BRA    3C68
03C6C:  BCF    FA6.2
03C6E:  MOVF   00,W
03C70:  IORWF  FF2,F
03C72:  MOVLW  14
03C74:  MOVLB  6
03C76:  MOVWF  x62
03C78:  MOVLB  0
03C7A:  CALL   1052
....................                write_eeprom(6,0);delay_ms(20);write_eeprom(7,0);delay_ms(20); 
03C7E:  CLRF   FAA
03C80:  MOVLW  06
03C82:  MOVWF  FA9
03C84:  CLRF   FA8
03C86:  BCF    FA6.6
03C88:  BCF    FA6.7
03C8A:  BSF    FA6.2
03C8C:  MOVF   FF2,W
03C8E:  MOVWF  00
03C90:  BCF    FF2.7
03C92:  MOVLB  F
03C94:  MOVLW  55
03C96:  MOVWF  FA7
03C98:  MOVLW  AA
03C9A:  MOVWF  FA7
03C9C:  BSF    FA6.1
03C9E:  BTFSC  FA6.1
03CA0:  BRA    3C9E
03CA2:  BCF    FA6.2
03CA4:  MOVF   00,W
03CA6:  IORWF  FF2,F
03CA8:  MOVLW  14
03CAA:  MOVLB  6
03CAC:  MOVWF  x62
03CAE:  MOVLB  0
03CB0:  CALL   1052
03CB4:  CLRF   FAA
03CB6:  MOVLW  07
03CB8:  MOVWF  FA9
03CBA:  CLRF   FA8
03CBC:  BCF    FA6.6
03CBE:  BCF    FA6.7
03CC0:  BSF    FA6.2
03CC2:  MOVF   FF2,W
03CC4:  MOVWF  00
03CC6:  BCF    FF2.7
03CC8:  MOVLB  F
03CCA:  MOVLW  55
03CCC:  MOVWF  FA7
03CCE:  MOVLW  AA
03CD0:  MOVWF  FA7
03CD2:  BSF    FA6.1
03CD4:  BTFSC  FA6.1
03CD6:  BRA    3CD4
03CD8:  BCF    FA6.2
03CDA:  MOVF   00,W
03CDC:  IORWF  FF2,F
03CDE:  MOVLW  14
03CE0:  MOVLB  6
03CE2:  MOVWF  x62
03CE4:  MOVLB  0
03CE6:  CALL   1052
....................                reset_cpu(); 
03CEA:  RESET
....................             } 
....................           
....................             if((Contrasena[0]==clave0)&&(Contrasena[1]==clave1)&&(Contrasena[2]==clave2)&&(Contrasena[3]==clave3)){ 
03CEC:  MOVLB  6
03CEE:  MOVF   x5C,W
03CF0:  MOVLB  5
03CF2:  SUBWF  xD5,W
03CF4:  BTFSS  FD8.2
03CF6:  BRA    3DE0
03CF8:  MOVLB  6
03CFA:  MOVF   x5D,W
03CFC:  MOVLB  5
03CFE:  SUBWF  xD6,W
03D00:  BNZ   3DE0
03D02:  MOVLB  6
03D04:  MOVF   x5E,W
03D06:  MOVLB  5
03D08:  SUBWF  xD7,W
03D0A:  BNZ   3DE0
03D0C:  MOVLB  6
03D0E:  MOVF   x5F,W
03D10:  MOVLB  5
03D12:  SUBWF  xD8,W
03D14:  BNZ   3DE0
....................                glcd_fillScreen(OFF); 
03D16:  MOVLB  6
03D18:  CLRF   x61
03D1A:  MOVLB  0
03D1C:  CALL   25BC
....................                strcpy(Menus.Letra,"Clave"); 
03D20:  MOVLW  06
03D22:  MOVWF  FEA
03D24:  MOVLW  39
03D26:  MOVWF  FE9
03D28:  MOVFF  FF2,661
03D2C:  BCF    FF2.7
03D2E:  MOVLW  00
03D30:  CALL   07F0
03D34:  TBLRD*-
03D36:  TBLRD*+
03D38:  MOVF   FF5,W
03D3A:  MOVWF  FEE
03D3C:  IORLW  00
03D3E:  BNZ   3D36
03D40:  MOVLB  6
03D42:  BTFSC  x61.7
03D44:  BSF    FF2.7
....................                displayMenu(Menus.Letra,30,0,0,2); 
03D46:  MOVLW  06
03D48:  MOVWF  x62
03D4A:  MOVLW  39
03D4C:  MOVWF  x61
03D4E:  MOVLW  1E
03D50:  MOVWF  x63
03D52:  CLRF   x64
03D54:  CLRF   x65
03D56:  MOVLW  02
03D58:  MOVWF  x66
03D5A:  MOVLB  0
03D5C:  CALL   2BEA
....................                strcpy(Menus.Letra,"Correcta"); 
03D60:  MOVLW  06
03D62:  MOVWF  FEA
03D64:  MOVLW  39
03D66:  MOVWF  FE9
03D68:  MOVFF  FF2,661
03D6C:  BCF    FF2.7
03D6E:  MOVLW  00
03D70:  CALL   083E
03D74:  TBLRD*-
03D76:  TBLRD*+
03D78:  MOVF   FF5,W
03D7A:  MOVWF  FEE
03D7C:  IORLW  00
03D7E:  BNZ   3D76
03D80:  MOVLB  6
03D82:  BTFSC  x61.7
03D84:  BSF    FF2.7
....................                displayMenu(Menus.Letra,15,30,0,2); 
03D86:  MOVLW  06
03D88:  MOVWF  x62
03D8A:  MOVLW  39
03D8C:  MOVWF  x61
03D8E:  MOVLW  0F
03D90:  MOVWF  x63
03D92:  MOVLW  1E
03D94:  MOVWF  x64
03D96:  CLRF   x65
03D98:  MOVLW  02
03D9A:  MOVWF  x66
03D9C:  MOVLB  0
03D9E:  CALL   2BEA
....................                Menu=MenuPost;glcd_update();delay_ms(1000);glcd_fillScreen(OFF); 
03DA2:  MOVFF  65B,597
03DA6:  CALL   2616
03DAA:  MOVLW  04
03DAC:  MOVLB  6
03DAE:  MOVWF  x61
03DB0:  MOVLW  FA
03DB2:  MOVWF  x62
03DB4:  MOVLB  0
03DB6:  CALL   1052
03DBA:  MOVLB  6
03DBC:  DECFSZ x61,F
03DBE:  BRA    3DB0
03DC0:  CLRF   x61
03DC2:  MOVLB  0
03DC4:  CALL   25BC
....................                Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
03DC8:  MOVLB  5
03DCA:  CLRF   xD5
03DCC:  CLRF   xD6
03DCE:  CLRF   xD7
03DD0:  CLRF   xD8
....................                n=0; 
03DD2:  CLRF   x92
....................                return 1; 
03DD4:  MOVLW  01
03DD6:  MOVWF  01
03DD8:  MOVLB  0
03DDA:  BRA    408A
....................             }else{ 
03DDC:  BRA    3F70
03DDE:  MOVLB  5
....................                glcd_fillScreen(OFF); 
03DE0:  MOVLB  6
03DE2:  CLRF   x61
03DE4:  MOVLB  0
03DE6:  CALL   25BC
....................                strcpy(Menus.Letra,"Clave"); 
03DEA:  MOVLW  06
03DEC:  MOVWF  FEA
03DEE:  MOVLW  39
03DF0:  MOVWF  FE9
03DF2:  MOVFF  FF2,661
03DF6:  BCF    FF2.7
03DF8:  MOVLW  00
03DFA:  CALL   07F0
03DFE:  TBLRD*-
03E00:  TBLRD*+
03E02:  MOVF   FF5,W
03E04:  MOVWF  FEE
03E06:  IORLW  00
03E08:  BNZ   3E00
03E0A:  MOVLB  6
03E0C:  BTFSC  x61.7
03E0E:  BSF    FF2.7
....................                displayMenu(Menus.Letra,30,0,0,2); 
03E10:  MOVLW  06
03E12:  MOVWF  x62
03E14:  MOVLW  39
03E16:  MOVWF  x61
03E18:  MOVLW  1E
03E1A:  MOVWF  x63
03E1C:  CLRF   x64
03E1E:  CLRF   x65
03E20:  MOVLW  02
03E22:  MOVWF  x66
03E24:  MOVLB  0
03E26:  CALL   2BEA
....................                strcpy(Menus.Letra,"Incorrecta"); 
03E2A:  MOVLW  06
03E2C:  MOVWF  FEA
03E2E:  MOVLW  39
03E30:  MOVWF  FE9
03E32:  MOVFF  FF2,661
03E36:  BCF    FF2.7
03E38:  MOVLW  00
03E3A:  CALL   0866
03E3E:  TBLRD*-
03E40:  TBLRD*+
03E42:  MOVF   FF5,W
03E44:  MOVWF  FEE
03E46:  IORLW  00
03E48:  BNZ   3E40
03E4A:  MOVLB  6
03E4C:  BTFSC  x61.7
03E4E:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,2); 
03E50:  MOVLW  06
03E52:  MOVWF  x62
03E54:  MOVLW  39
03E56:  MOVWF  x61
03E58:  CLRF   x63
03E5A:  MOVLW  1E
03E5C:  MOVWF  x64
03E5E:  CLRF   x65
03E60:  MOVLW  02
03E62:  MOVWF  x66
03E64:  MOVLB  0
03E66:  CALL   2BEA
....................                unidad=1;glcd_update();delay_ms(1000);Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0;glcd_fillScreen(OFF); 
03E6A:  MOVLW  01
03E6C:  MOVLB  5
03E6E:  MOVWF  x98
03E70:  MOVLB  0
03E72:  CALL   2616
03E76:  MOVLW  04
03E78:  MOVLB  6
03E7A:  MOVWF  x61
03E7C:  MOVLW  FA
03E7E:  MOVWF  x62
03E80:  MOVLB  0
03E82:  CALL   1052
03E86:  MOVLB  6
03E88:  DECFSZ x61,F
03E8A:  BRA    3E7C
03E8C:  MOVLB  5
03E8E:  CLRF   xD5
03E90:  CLRF   xD6
03E92:  CLRF   xD7
03E94:  CLRF   xD8
03E96:  MOVLB  6
03E98:  CLRF   x61
03E9A:  MOVLB  0
03E9C:  CALL   25BC
....................                glcd_rect(0, 0, 127, 25, YES, ON);strcpy(Menus.Letra,"Clave");glcd_text57(25, 1, Menus.Letra, 3, OFF);displayContrasena(Contrasena[0],20,30,1); 
03EA0:  MOVLB  6
03EA2:  CLRF   x72
03EA4:  CLRF   x73
03EA6:  MOVLW  7F
03EA8:  MOVWF  x74
03EAA:  MOVLW  19
03EAC:  MOVWF  x75
03EAE:  MOVLW  01
03EB0:  MOVWF  x76
03EB2:  MOVWF  x77
03EB4:  MOVLB  0
03EB6:  CALL   2B28
03EBA:  MOVLW  06
03EBC:  MOVWF  FEA
03EBE:  MOVLW  39
03EC0:  MOVWF  FE9
03EC2:  MOVFF  FF2,661
03EC6:  BCF    FF2.7
03EC8:  MOVLW  00
03ECA:  CALL   07F0
03ECE:  TBLRD*-
03ED0:  TBLRD*+
03ED2:  MOVF   FF5,W
03ED4:  MOVWF  FEE
03ED6:  IORLW  00
03ED8:  BNZ   3ED0
03EDA:  MOVLB  6
03EDC:  BTFSC  x61.7
03EDE:  BSF    FF2.7
03EE0:  MOVLW  19
03EE2:  MOVWF  x72
03EE4:  MOVLW  01
03EE6:  MOVWF  x73
03EE8:  MOVLW  06
03EEA:  MOVWF  x75
03EEC:  MOVLW  39
03EEE:  MOVWF  x74
03EF0:  MOVLW  03
03EF2:  MOVWF  x76
03EF4:  CLRF   x77
03EF6:  MOVLB  0
03EF8:  CALL   2832
03EFC:  MOVFF  5D5,663
03F00:  MOVLW  14
03F02:  MOVLB  6
03F04:  MOVWF  x64
03F06:  MOVLW  1E
03F08:  MOVWF  x65
03F0A:  MOVLW  01
03F0C:  MOVWF  x66
03F0E:  MOVLB  0
03F10:  CALL   36DE
....................                displayContrasena(Contrasena[1],40,30,0);displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
03F14:  MOVFF  5D6,663
03F18:  MOVLW  28
03F1A:  MOVLB  6
03F1C:  MOVWF  x64
03F1E:  MOVLW  1E
03F20:  MOVWF  x65
03F22:  CLRF   x66
03F24:  MOVLB  0
03F26:  CALL   36DE
03F2A:  MOVFF  5D7,663
03F2E:  MOVLW  3C
03F30:  MOVLB  6
03F32:  MOVWF  x64
03F34:  MOVLW  1E
03F36:  MOVWF  x65
03F38:  CLRF   x66
03F3A:  MOVLB  0
03F3C:  CALL   36DE
03F40:  MOVFF  5D5,663
03F44:  MOVLW  50
03F46:  MOVLB  6
03F48:  MOVWF  x64
03F4A:  MOVLW  1E
03F4C:  MOVWF  x65
03F4E:  CLRF   x66
03F50:  MOVLB  0
03F52:  CALL   36DE
....................                Menu=MenuAnt;glcd_fillScreen(OFF);n=0; 
03F56:  MOVFF  659,597
03F5A:  MOVLB  6
03F5C:  CLRF   x61
03F5E:  MOVLB  0
03F60:  CALL   25BC
03F64:  MOVLB  5
03F66:  CLRF   x92
....................                return 0; 
03F68:  MOVLW  00
03F6A:  MOVWF  01
03F6C:  MOVLB  0
03F6E:  BRA    408A
....................             } 
....................          }else{ 
03F70:  BRA    408A
03F72:  MOVLB  6
....................             Opcion=1;unidad=1; 
03F74:  MOVLW  01
03F76:  MOVLB  5
03F78:  MOVWF  x9C
03F7A:  MOVWF  x98
....................             write_eeprom(4,Contrasena[0]); 
03F7C:  CLRF   FAA
03F7E:  MOVLW  04
03F80:  MOVWF  FA9
03F82:  MOVFF  5D5,FA8
03F86:  BCF    FA6.6
03F88:  BCF    FA6.7
03F8A:  BSF    FA6.2
03F8C:  MOVF   FF2,W
03F8E:  MOVWF  00
03F90:  BCF    FF2.7
03F92:  MOVLB  F
03F94:  MOVLW  55
03F96:  MOVWF  FA7
03F98:  MOVLW  AA
03F9A:  MOVWF  FA7
03F9C:  BSF    FA6.1
03F9E:  BTFSC  FA6.1
03FA0:  BRA    3F9E
03FA2:  BCF    FA6.2
03FA4:  MOVF   00,W
03FA6:  IORWF  FF2,F
....................             delay_ms(50);    
03FA8:  MOVLW  32
03FAA:  MOVLB  6
03FAC:  MOVWF  x62
03FAE:  MOVLB  0
03FB0:  CALL   1052
....................             write_eeprom(5,Contrasena[1]); 
03FB4:  CLRF   FAA
03FB6:  MOVLW  05
03FB8:  MOVWF  FA9
03FBA:  MOVFF  5D6,FA8
03FBE:  BCF    FA6.6
03FC0:  BCF    FA6.7
03FC2:  BSF    FA6.2
03FC4:  MOVF   FF2,W
03FC6:  MOVWF  00
03FC8:  BCF    FF2.7
03FCA:  MOVLB  F
03FCC:  MOVLW  55
03FCE:  MOVWF  FA7
03FD0:  MOVLW  AA
03FD2:  MOVWF  FA7
03FD4:  BSF    FA6.1
03FD6:  BTFSC  FA6.1
03FD8:  BRA    3FD6
03FDA:  BCF    FA6.2
03FDC:  MOVF   00,W
03FDE:  IORWF  FF2,F
....................             delay_ms(50);    
03FE0:  MOVLW  32
03FE2:  MOVLB  6
03FE4:  MOVWF  x62
03FE6:  MOVLB  0
03FE8:  CALL   1052
....................             write_eeprom(6,Contrasena[2]); 
03FEC:  CLRF   FAA
03FEE:  MOVLW  06
03FF0:  MOVWF  FA9
03FF2:  MOVFF  5D7,FA8
03FF6:  BCF    FA6.6
03FF8:  BCF    FA6.7
03FFA:  BSF    FA6.2
03FFC:  MOVF   FF2,W
03FFE:  MOVWF  00
04000:  BCF    FF2.7
04002:  MOVLB  F
04004:  MOVLW  55
04006:  MOVWF  FA7
04008:  MOVLW  AA
0400A:  MOVWF  FA7
0400C:  BSF    FA6.1
0400E:  BTFSC  FA6.1
04010:  BRA    400E
04012:  BCF    FA6.2
04014:  MOVF   00,W
04016:  IORWF  FF2,F
....................             delay_ms(50);    
04018:  MOVLW  32
0401A:  MOVLB  6
0401C:  MOVWF  x62
0401E:  MOVLB  0
04020:  CALL   1052
....................             write_eeprom(7,Contrasena[3]); 
04024:  CLRF   FAA
04026:  MOVLW  07
04028:  MOVWF  FA9
0402A:  MOVFF  5D8,FA8
0402E:  BCF    FA6.6
04030:  BCF    FA6.7
04032:  BSF    FA6.2
04034:  MOVF   FF2,W
04036:  MOVWF  00
04038:  BCF    FF2.7
0403A:  MOVLB  F
0403C:  MOVLW  55
0403E:  MOVWF  FA7
04040:  MOVLW  AA
04042:  MOVWF  FA7
04044:  BSF    FA6.1
04046:  BTFSC  FA6.1
04048:  BRA    4046
0404A:  BCF    FA6.2
0404C:  MOVF   00,W
0404E:  IORWF  FF2,F
....................             delay_ms(1000);glcd_fillScreen(OFF);Menu=MenuAnt; 
04050:  MOVLW  04
04052:  MOVLB  6
04054:  MOVWF  x61
04056:  MOVLW  FA
04058:  MOVWF  x62
0405A:  MOVLB  0
0405C:  CALL   1052
04060:  MOVLB  6
04062:  DECFSZ x61,F
04064:  BRA    4056
04066:  CLRF   x61
04068:  MOVLB  0
0406A:  CALL   25BC
0406E:  MOVFF  659,597
....................             n=0; 
04072:  MOVLB  5
04074:  CLRF   x92
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
04076:  CLRF   xD5
04078:  CLRF   xD6
0407A:  CLRF   xD7
0407C:  CLRF   xD8
....................             MensajeAlmacenado(); 
0407E:  MOVLB  0
04080:  CALL   37AA
....................             return 0; 
04084:  MOVLW  00
04086:  MOVWF  01
04088:  BRA    408A
0408A:  MOVLB  5
....................          } 
....................       } 
.................... } 
0408C:  MOVLB  0
0408E:  RETLW  00
....................  
.................... void CuentaTiempo(){ 
....................       if(tinicio>=60) 
*
057D0:  MOVLB  5
057D2:  MOVF   xA8,F
057D4:  BNZ   57DC
057D6:  MOVF   xA7,W
057D8:  SUBLW  3B
057DA:  BC    5818
....................       { 
....................          tinicio=0; 
057DC:  CLRF   xA8
057DE:  CLRF   xA7
....................          Testerilizacion[0]++; 
057E0:  INCF   xCD,F
....................          if(Testerilizacion[0]>9) 
057E2:  BTFSC  xCD.7
057E4:  BRA    57F0
057E6:  MOVF   xCD,W
057E8:  SUBLW  09
057EA:  BC    57F0
....................          { 
....................             Testerilizacion[0]=0; 
057EC:  CLRF   xCD
....................             Testerilizacion[1]++; 
057EE:  INCF   xCE,F
....................          } 
....................          if(Testerilizacion[1]>5) 
057F0:  BTFSC  xCE.7
057F2:  BRA    57FE
057F4:  MOVF   xCE,W
057F6:  SUBLW  05
057F8:  BC    57FE
....................          { 
....................             Testerilizacion[1]=0; 
057FA:  CLRF   xCE
....................             Testerilizacion[2]++; 
057FC:  INCF   xCF,F
....................          } 
....................          if(Testerilizacion[2]>9) 
057FE:  BTFSC  xCF.7
05800:  BRA    580C
05802:  MOVF   xCF,W
05804:  SUBLW  09
05806:  BC    580C
....................          { 
....................             Testerilizacion[2]=0; 
05808:  CLRF   xCF
....................             Testerilizacion[3]++; 
0580A:  INCF   xD0,F
....................          } 
....................          if(Testerilizacion[3]>9) 
0580C:  BTFSC  xD0.7
0580E:  BRA    5818
05810:  MOVF   xD0,W
05812:  SUBLW  09
05814:  BC    5818
....................          { 
....................             Testerilizacion[3]=0; 
05816:  CLRF   xD0
....................          } 
....................       } 
.................... } 
05818:  MOVLB  0
0581A:  GOTO   7B9A (RETURN)
....................  
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(40536); 
*
00FBE:  MOVLW  9E
00FC0:  MOVWF  FCF
00FC2:  MOVLW  58
00FC4:  MOVWF  FCE
....................    tiempos++; 
00FC6:  MOVLB  5
00FC8:  INCF   xA1,F
00FCA:  BTFSC  FD8.2
00FCC:  INCF   xA2,F
....................    tiempos3++; 
00FCE:  INCF   xA3,F
00FD0:  BTFSC  FD8.2
00FD2:  INCF   xA4,F
....................    tiempoctrl++; 
00FD4:  INCF   xA5,F
00FD6:  BTFSC  FD8.2
00FD8:  INCF   xA6,F
....................     
....................    if(tiempos3>=200) 
00FDA:  MOVF   xA4,F
00FDC:  BNZ   0FE4
00FDE:  MOVF   xA3,W
00FE0:  SUBLW  C7
00FE2:  BC    0FE8
....................       Lectura2=1; 
00FE4:  MOVLW  01
00FE6:  MOVWF  x8F
....................     
....................    if(Controlando==1){ 
00FE8:  DECFSZ x90,W
00FEA:  BRA    1016
....................       if(tiempoctrl<Tp) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
00FEC:  MOVF   xA6,W
00FEE:  SUBWF  xAE,W
00FF0:  BNC   1000
00FF2:  BNZ   0FFA
00FF4:  MOVF   xAD,W
00FF6:  SUBWF  xA5,W
00FF8:  BC    1000
....................          SSR_on; 
00FFA:  BCF    F8B.2
00FFC:  BCF    F94.2
....................       else          
00FFE:  BRA    1004
....................          SSR_off; 
01000:  BSF    F8B.2
01002:  BCF    F94.2
....................        
....................       if(tiempoctrl>=Tc) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
01004:  MOVF   xB0,W
01006:  SUBWF  xA6,W
01008:  BNC   1016
0100A:  BNZ   1012
0100C:  MOVF   xAF,W
0100E:  SUBWF  xA5,W
01010:  BNC   1016
....................          tiempoctrl=0; // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
01012:  CLRF   xA6
01014:  CLRF   xA5
....................    } 
....................      
....................    if(tiempos>=200){  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
01016:  MOVF   xA2,F
01018:  BNZ   1020
0101A:  MOVF   xA1,W
0101C:  SUBLW  C7
0101E:  BC    104A
....................       tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++; 
01020:  CLRF   xA2
01022:  CLRF   xA1
01024:  BSF    x87.5
01026:  INCF   x95,F
01028:  INCF   x9B,F
0102A:  INCF   x8D,F
....................     
....................       if(flag_setpoint==1) 
0102C:  BTFSS  x93.6
0102E:  BRA    1036
....................          tiemposetpoint++; 
01030:  INCF   xAB,F
01032:  BTFSC  FD8.2
01034:  INCF   xAC,F
....................           
....................       if(tiempo_esterilizacion==1)    
01036:  DECFSZ x9D,W
01038:  BRA    1040
....................          tinicio++; 
0103A:  INCF   xA7,F
0103C:  BTFSC  FD8.2
0103E:  INCF   xA8,F
....................        
....................       if(flag_tiempocalentamiento==1) 
01040:  BTFSS  x93.4
01042:  BRA    104A
....................          tiempocalentamiento++; 
01044:  INCF   xA9,F
01046:  BTFSC  FD8.2
01048:  INCF   xAA,F
....................    }         
.................... } 
....................  
0104A:  BCF    F9E.0
0104C:  MOVLB  0
0104E:  GOTO   0058
.................... void main() 
.................... { 
*
05898:  CLRF   FF8
0589A:  BCF    FD0.7
0589C:  BSF    07.7
0589E:  CLRF   FEA
058A0:  CLRF   FE9
058A2:  MOVLB  5
058A4:  BCF    x87.0
058A6:  CLRF   x88
058A8:  CLRF   x89
058AA:  CLRF   x8A
058AC:  CLRF   x8B
058AE:  MOVLW  0A
058B0:  MOVWF  x8C
058B2:  CLRF   x8D
058B4:  CLRF   x8E
058B6:  CLRF   x8F
058B8:  CLRF   x90
058BA:  MOVWF  x91
058BC:  CLRF   x92
058BE:  BCF    x87.1
058C0:  BCF    x87.2
058C2:  BCF    x87.3
058C4:  BSF    x87.4
058C6:  BCF    x87.5
058C8:  BCF    x87.6
058CA:  BCF    x87.7
058CC:  BCF    x93.0
058CE:  BCF    x93.1
058D0:  BCF    x93.2
058D2:  BCF    x93.3
058D4:  BCF    x93.4
058D6:  BCF    x93.5
058D8:  BCF    x93.6
058DA:  BCF    x93.7
058DC:  CLRF   x94
058DE:  CLRF   x95
058E0:  MOVLW  01
058E2:  MOVWF  x96
058E4:  CLRF   x97
058E6:  MOVWF  x98
058E8:  CLRF   x99
058EA:  CLRF   x9A
058EC:  CLRF   x9B
058EE:  MOVWF  x9C
058F0:  CLRF   x9D
058F2:  CLRF   x9E
058F4:  CLRF   x9F
058F6:  CLRF   xA0
058F8:  CLRF   xA2
058FA:  CLRF   xA1
058FC:  CLRF   xA4
058FE:  CLRF   xA3
05900:  CLRF   xA6
05902:  CLRF   xA5
05904:  CLRF   xA8
05906:  CLRF   xA7
05908:  CLRF   xAA
0590A:  CLRF   xA9
0590C:  CLRF   xAC
0590E:  CLRF   xAB
05910:  CLRF   xAE
05912:  CLRF   xAD
05914:  CLRF   xB0
05916:  CLRF   xAF
05918:  CLRF   xB4
0591A:  CLRF   xB3
0591C:  CLRF   xB2
0591E:  CLRF   xB1
05920:  CLRF   xB8
05922:  CLRF   xB7
05924:  CLRF   xB6
05926:  CLRF   xB5
05928:  CLRF   xBC
0592A:  CLRF   xBB
0592C:  CLRF   xBA
0592E:  CLRF   xB9
05930:  CLRF   xC0
05932:  CLRF   xBF
05934:  CLRF   xBE
05936:  CLRF   xBD
05938:  CLRF   xC4
0593A:  CLRF   xC3
0593C:  CLRF   xC2
0593E:  CLRF   xC1
05940:  CLRF   xC8
05942:  CLRF   xC7
05944:  CLRF   xC6
05946:  CLRF   xC5
05948:  CLRF   xCC
0594A:  CLRF   xCB
0594C:  CLRF   xCA
0594E:  CLRF   xC9
05950:  CLRF   xE0
05952:  CLRF   xDF
05954:  CLRF   xDE
05956:  CLRF   xDD
05958:  CLRF   xE4
0595A:  MOVLW  40
0595C:  MOVWF  xE3
0595E:  MOVLW  1C
05960:  MOVWF  xE2
05962:  MOVLW  8C
05964:  MOVWF  xE1
05966:  CLRF   xEC
05968:  CLRF   xEB
0596A:  MOVLW  20
0596C:  MOVWF  xEA
0596E:  MOVLW  82
05970:  MOVWF  xE9
05972:  CLRF   xF0
05974:  CLRF   xEF
05976:  CLRF   xEE
05978:  CLRF   xED
0597A:  CLRF   xF4
0597C:  CLRF   xF3
0597E:  CLRF   xF2
05980:  CLRF   xF1
05982:  CLRF   xF8
05984:  CLRF   xF7
05986:  CLRF   xF6
05988:  CLRF   xF5
0598A:  CLRF   xFC
0598C:  CLRF   xFB
0598E:  CLRF   xFA
05990:  CLRF   xF9
05992:  MOVLB  6
05994:  CLRF   x00
05996:  MOVLB  5
05998:  CLRF   xFF
0599A:  CLRF   xFE
0599C:  CLRF   xFD
0599E:  MOVLB  6
059A0:  CLRF   x04
059A2:  CLRF   x03
059A4:  CLRF   x02
059A6:  MOVLW  80
059A8:  MOVWF  x01
059AA:  CLRF   x08
059AC:  CLRF   x07
059AE:  CLRF   x06
059B0:  MOVLW  7E
059B2:  MOVWF  x05
059B4:  CLRF   x0C
059B6:  CLRF   x0B
059B8:  MOVLW  32
059BA:  MOVWF  x0A
059BC:  MOVLW  84
059BE:  MOVWF  x09
059C0:  CLRF   x10
059C2:  CLRF   x0F
059C4:  CLRF   x0E
059C6:  CLRF   x0D
059C8:  CLRF   x14
059CA:  CLRF   x13
059CC:  CLRF   x12
059CE:  CLRF   x11
059D0:  CLRF   x18
059D2:  CLRF   x17
059D4:  CLRF   x16
059D6:  CLRF   x15
059D8:  CLRF   x1C
059DA:  CLRF   x1B
059DC:  CLRF   x1A
059DE:  CLRF   x19
059E0:  CLRF   x20
059E2:  CLRF   x1F
059E4:  CLRF   x1E
059E6:  CLRF   x1D
059E8:  CLRF   x24
059EA:  CLRF   x23
059EC:  CLRF   x22
059EE:  CLRF   x21
059F0:  CLRF   x28
059F2:  CLRF   x27
059F4:  CLRF   x26
059F6:  CLRF   x25
059F8:  CLRF   x2C
059FA:  CLRF   x2B
059FC:  CLRF   x2A
059FE:  CLRF   x29
05A00:  MOVLW  E0
05A02:  MOVWF  x30
05A04:  MOVLW  2D
05A06:  MOVWF  x2F
05A08:  MOVLW  10
05A0A:  MOVWF  x2E
05A0C:  MOVLW  75
05A0E:  MOVWF  x2D
05A10:  MOVLW  FF
05A12:  MOVWF  x34
05A14:  MOVLW  21
05A16:  MOVWF  x33
05A18:  MOVLW  15
05A1A:  MOVWF  x32
05A1C:  MOVLW  80
05A1E:  MOVWF  x31
05A20:  MOVLW  82
05A22:  MOVWF  x38
05A24:  MOVLW  12
05A26:  MOVWF  x37
05A28:  MOVLW  F4
05A2A:  MOVWF  x36
05A2C:  MOVLW  86
05A2E:  MOVWF  x35
05A30:  MOVF   FC1,W
05A32:  ANDLW  C0
05A34:  IORLW  0F
05A36:  MOVWF  FC1
05A38:  MOVLW  07
05A3A:  MOVWF  FB4
05A3C:  MOVLB  4
05A3E:  CLRF   x17
05A40:  CLRF   x18
05A42:  CLRF   x19
05A44:  CLRF   x1A
05A46:  CLRF   x1B
05A48:  CLRF   x1C
05A4A:  CLRF   x1D
05A4C:  CLRF   x1E
05A4E:  CLRF   x1F
05A50:  CLRF   x20
05A52:  CLRF   x21
05A54:  CLRF   x22
05A56:  CLRF   x23
05A58:  CLRF   x24
05A5A:  CLRF   x25
05A5C:  CLRF   x26
05A5E:  CLRF   x27
05A60:  CLRF   x28
05A62:  CLRF   x29
05A64:  CLRF   x2A
05A66:  CLRF   x2B
05A68:  CLRF   x2C
05A6A:  CLRF   x2D
05A6C:  CLRF   x2E
05A6E:  CLRF   x2F
05A70:  CLRF   x30
05A72:  CLRF   x31
05A74:  CLRF   x32
05A76:  CLRF   x33
05A78:  CLRF   x34
05A7A:  CLRF   x35
05A7C:  CLRF   x36
05A7E:  CLRF   x37
05A80:  CLRF   x38
05A82:  CLRF   x39
05A84:  CLRF   x3A
05A86:  CLRF   x3B
05A88:  CLRF   x3C
05A8A:  CLRF   x3D
05A8C:  CLRF   x3E
05A8E:  CLRF   x3F
05A90:  CLRF   x40
05A92:  CLRF   x41
05A94:  CLRF   x42
05A96:  CLRF   x43
05A98:  CLRF   x44
05A9A:  CLRF   x45
05A9C:  CLRF   x46
05A9E:  CLRF   x47
05AA0:  CLRF   x48
05AA2:  CLRF   x49
05AA4:  CLRF   x4A
05AA6:  CLRF   x4B
05AA8:  CLRF   x4C
05AAA:  CLRF   x4D
05AAC:  CLRF   x4E
05AAE:  CLRF   x4F
05AB0:  CLRF   x50
05AB2:  CLRF   x51
05AB4:  CLRF   x52
05AB6:  CLRF   x53
05AB8:  CLRF   x54
05ABA:  CLRF   x55
05ABC:  CLRF   x56
05ABE:  CLRF   x57
05AC0:  CLRF   x58
05AC2:  CLRF   x59
05AC4:  CLRF   x5A
05AC6:  CLRF   x5B
05AC8:  CLRF   x5C
05ACA:  CLRF   x5D
05ACC:  CLRF   x5E
05ACE:  CLRF   x5F
05AD0:  CLRF   x60
05AD2:  CLRF   x61
05AD4:  CLRF   x62
05AD6:  CLRF   x63
05AD8:  CLRF   x64
05ADA:  CLRF   x65
05ADC:  CLRF   x66
05ADE:  CLRF   x67
05AE0:  CLRF   x68
05AE2:  CLRF   x69
05AE4:  CLRF   x6A
05AE6:  CLRF   x6B
05AE8:  CLRF   x6C
05AEA:  CLRF   x6D
05AEC:  CLRF   x6E
05AEE:  CLRF   x6F
05AF0:  CLRF   x70
05AF2:  CLRF   x71
05AF4:  CLRF   x72
05AF6:  CLRF   x73
05AF8:  CLRF   x74
05AFA:  CLRF   x75
05AFC:  CLRF   x76
05AFE:  CLRF   x77
05B00:  CLRF   x78
05B02:  CLRF   x79
05B04:  CLRF   x7A
05B06:  CLRF   x7B
05B08:  CLRF   x7C
05B0A:  CLRF   x7D
05B0C:  CLRF   x7E
05B0E:  CLRF   x7F
05B10:  CLRF   x80
05B12:  CLRF   x81
05B14:  CLRF   x82
05B16:  CLRF   x83
05B18:  CLRF   x84
05B1A:  CLRF   x85
05B1C:  CLRF   x86
05B1E:  CLRF   x87
05B20:  CLRF   x88
05B22:  CLRF   x89
05B24:  CLRF   x8A
05B26:  CLRF   x8B
05B28:  CLRF   x8C
05B2A:  CLRF   x8D
05B2C:  CLRF   x8E
05B2E:  CLRF   x8F
05B30:  CLRF   x90
05B32:  CLRF   x91
05B34:  CLRF   x92
05B36:  CLRF   x93
05B38:  CLRF   x94
05B3A:  CLRF   x95
05B3C:  CLRF   x96
05B3E:  CLRF   x97
05B40:  CLRF   x98
05B42:  CLRF   x99
05B44:  CLRF   x9A
05B46:  CLRF   x9B
05B48:  CLRF   x9C
05B4A:  CLRF   x9D
05B4C:  CLRF   x9E
05B4E:  CLRF   x9F
05B50:  CLRF   xA0
05B52:  CLRF   xA1
05B54:  CLRF   xA2
05B56:  CLRF   xA3
05B58:  CLRF   xA4
05B5A:  CLRF   xA5
05B5C:  CLRF   xA6
05B5E:  CLRF   xA7
05B60:  CLRF   xA8
05B62:  CLRF   xA9
05B64:  CLRF   xAA
05B66:  CLRF   xAB
05B68:  CLRF   xAC
05B6A:  CLRF   xAD
05B6C:  CLRF   xAE
05B6E:  CLRF   xAF
05B70:  CLRF   xB0
05B72:  CLRF   xB1
05B74:  CLRF   xB2
05B76:  CLRF   xB3
05B78:  CLRF   xB4
05B7A:  CLRF   xB5
05B7C:  CLRF   xB6
05B7E:  CLRF   xB7
05B80:  CLRF   xB8
05B82:  CLRF   xB9
05B84:  CLRF   xBA
05B86:  CLRF   xBB
05B88:  CLRF   xBC
05B8A:  CLRF   xBD
05B8C:  CLRF   xBE
05B8E:  CLRF   xBF
05B90:  CLRF   xC0
05B92:  CLRF   xC1
05B94:  CLRF   xC2
05B96:  CLRF   xC3
05B98:  CLRF   xC4
05B9A:  CLRF   xC5
05B9C:  CLRF   xC6
05B9E:  CLRF   xC7
05BA0:  CLRF   xC8
05BA2:  CLRF   xC9
05BA4:  CLRF   xCA
05BA6:  CLRF   xCB
05BA8:  CLRF   xCC
05BAA:  CLRF   xCD
05BAC:  CLRF   xCE
05BAE:  CLRF   xCF
05BB0:  CLRF   xD0
05BB2:  CLRF   xD1
05BB4:  CLRF   xD2
05BB6:  CLRF   xD3
05BB8:  CLRF   xD4
05BBA:  CLRF   xD5
05BBC:  CLRF   xD6
05BBE:  CLRF   xD7
05BC0:  CLRF   xD8
05BC2:  CLRF   xD9
05BC4:  CLRF   xDA
05BC6:  CLRF   xDB
05BC8:  CLRF   xDC
05BCA:  CLRF   xDD
05BCC:  CLRF   xDE
05BCE:  CLRF   xDF
05BD0:  CLRF   xE0
05BD2:  CLRF   xE1
05BD4:  CLRF   xE2
05BD6:  CLRF   xE3
05BD8:  CLRF   xE4
05BDA:  CLRF   xE5
05BDC:  CLRF   xE6
05BDE:  CLRF   xE7
05BE0:  CLRF   xE8
05BE2:  CLRF   xE9
05BE4:  CLRF   xEA
05BE6:  CLRF   xEB
05BE8:  CLRF   xEC
05BEA:  CLRF   xED
05BEC:  CLRF   xEE
05BEE:  CLRF   xEF
05BF0:  CLRF   xF0
05BF2:  CLRF   xF1
05BF4:  CLRF   xF2
05BF6:  CLRF   xF3
05BF8:  CLRF   xF4
05BFA:  CLRF   xF5
05BFC:  CLRF   xF6
05BFE:  CLRF   xF7
05C00:  CLRF   xF8
05C02:  CLRF   xF9
05C04:  CLRF   xFA
05C06:  CLRF   xFB
05C08:  CLRF   xFC
05C0A:  CLRF   xFD
05C0C:  CLRF   xFE
05C0E:  CLRF   xFF
05C10:  MOVLB  5
05C12:  CLRF   x00
05C14:  CLRF   x01
05C16:  CLRF   x02
05C18:  CLRF   x03
05C1A:  CLRF   x04
05C1C:  CLRF   x05
05C1E:  CLRF   x06
05C20:  CLRF   x07
05C22:  CLRF   x08
05C24:  CLRF   x09
05C26:  CLRF   x0A
05C28:  CLRF   x0B
05C2A:  CLRF   x0C
05C2C:  CLRF   x0D
05C2E:  CLRF   x0E
05C30:  CLRF   x0F
05C32:  CLRF   x10
05C34:  CLRF   x11
05C36:  CLRF   x12
05C38:  CLRF   x13
05C3A:  CLRF   x14
05C3C:  CLRF   x15
05C3E:  CLRF   x16
05C40:  CLRF   x17
05C42:  CLRF   x18
05C44:  CLRF   x19
05C46:  CLRF   x1A
05C48:  CLRF   x1B
05C4A:  CLRF   x1C
05C4C:  CLRF   x1D
05C4E:  CLRF   x1E
05C50:  CLRF   x1F
05C52:  CLRF   x20
05C54:  CLRF   x21
05C56:  CLRF   x22
05C58:  CLRF   x23
05C5A:  CLRF   x24
05C5C:  CLRF   x25
05C5E:  CLRF   x26
05C60:  CLRF   x27
05C62:  CLRF   x28
05C64:  CLRF   x29
05C66:  CLRF   x2A
05C68:  CLRF   x2B
05C6A:  CLRF   x2C
05C6C:  CLRF   x2D
05C6E:  CLRF   x2E
05C70:  CLRF   x2F
05C72:  CLRF   x30
05C74:  CLRF   x31
05C76:  CLRF   x32
05C78:  CLRF   x33
05C7A:  CLRF   x34
05C7C:  CLRF   x35
05C7E:  CLRF   x36
05C80:  CLRF   x37
05C82:  CLRF   x38
05C84:  CLRF   x39
05C86:  CLRF   x3A
05C88:  CLRF   x3B
05C8A:  CLRF   x3C
05C8C:  CLRF   x3D
05C8E:  CLRF   x3E
05C90:  CLRF   x3F
05C92:  CLRF   x40
05C94:  CLRF   x41
05C96:  CLRF   x42
05C98:  CLRF   x43
05C9A:  CLRF   x44
05C9C:  CLRF   x45
05C9E:  CLRF   x46
05CA0:  CLRF   x47
05CA2:  CLRF   x48
05CA4:  CLRF   x49
05CA6:  CLRF   x4A
05CA8:  CLRF   x4B
05CAA:  CLRF   x4C
05CAC:  CLRF   x4D
05CAE:  CLRF   x4E
05CB0:  CLRF   x4F
05CB2:  CLRF   x50
05CB4:  CLRF   x51
05CB6:  CLRF   x52
05CB8:  CLRF   x53
05CBA:  CLRF   x54
05CBC:  CLRF   x55
05CBE:  CLRF   x56
05CC0:  CLRF   x57
05CC2:  CLRF   x58
05CC4:  CLRF   x59
05CC6:  CLRF   x5A
05CC8:  CLRF   x5B
05CCA:  CLRF   x5C
05CCC:  CLRF   x5D
05CCE:  CLRF   x5E
05CD0:  CLRF   x5F
05CD2:  CLRF   x60
05CD4:  CLRF   x61
05CD6:  CLRF   x62
05CD8:  CLRF   x63
05CDA:  CLRF   x64
05CDC:  CLRF   x65
05CDE:  CLRF   x66
05CE0:  CLRF   x67
05CE2:  CLRF   x68
05CE4:  CLRF   x69
05CE6:  CLRF   x6A
05CE8:  CLRF   x6B
05CEA:  CLRF   x6C
05CEC:  CLRF   x6D
05CEE:  CLRF   x6E
05CF0:  CLRF   x6F
05CF2:  CLRF   x70
05CF4:  CLRF   x71
05CF6:  CLRF   x72
05CF8:  CLRF   x73
05CFA:  CLRF   x74
05CFC:  CLRF   x75
05CFE:  CLRF   x76
05D00:  CLRF   x77
05D02:  CLRF   x78
05D04:  CLRF   x79
05D06:  CLRF   x7A
05D08:  CLRF   x7B
05D0A:  CLRF   x7C
05D0C:  CLRF   x7D
05D0E:  CLRF   x7E
05D10:  CLRF   x7F
05D12:  CLRF   x80
05D14:  CLRF   x81
05D16:  CLRF   x82
05D18:  CLRF   x83
05D1A:  CLRF   x84
05D1C:  CLRF   x85
05D1E:  CLRF   x86
05D20:  CLRF   xCD
05D22:  CLRF   xCE
05D24:  CLRF   xCF
05D26:  CLRF   xD0
05D28:  CLRF   xD1
05D2A:  CLRF   xD2
05D2C:  CLRF   xD3
05D2E:  CLRF   xD4
05D30:  CLRF   xD5
05D32:  CLRF   xD6
05D34:  CLRF   xD7
05D36:  CLRF   xD8
05D38:  CLRF   xD9
05D3A:  CLRF   xDA
05D3C:  CLRF   xDB
05D3E:  CLRF   xDC
05D40:  MOVLB  6
05D42:  CLRF   x57
05D44:  CLRF   x58
....................    Motor1_off; 
05D46:  BSF    F8B.5
05D48:  BCF    F94.5
....................    Motor2_off; 
05D4A:  BSF    F8B.6
05D4C:  BCF    F94.6
....................    SSR_off; 
05D4E:  BSF    F8B.2
05D50:  BCF    F94.2
....................    Display_on; 
05D52:  BSF    F8B.7
05D54:  BCF    F94.7
....................    ConfiguraInterrupciones(); 
05D56:  MOVLB  0
05D58:  GOTO   107A
....................    LeeEEPROM(); 
05D5C:  GOTO   14BE
....................    LimitaValores(); 
05D60:  GOTO   1CBC
....................    MensajeBienvenida(); 
05D64:  GOTO   3452
....................     
....................    if(UP && DOWN) 
05D68:  BSF    F92.4
05D6A:  BTFSC  F80.4
05D6C:  BRA    5DF2
05D6E:  BSF    F92.5
05D70:  BTFSC  F80.5
05D72:  BRA    5DF2
....................    { 
....................       delay_ms(500); 
05D74:  MOVLW  02
05D76:  MOVLB  6
05D78:  MOVWF  x59
05D7A:  MOVLW  FA
05D7C:  MOVWF  x62
05D7E:  MOVLB  0
05D80:  CALL   1052
05D84:  MOVLB  6
05D86:  DECFSZ x59,F
05D88:  BRA    5D7A
....................       strcpy(Menus.Letra,"Cargando.."); 
05D8A:  MOVLW  06
05D8C:  MOVWF  FEA
05D8E:  MOVLW  39
05D90:  MOVWF  FE9
05D92:  MOVFF  FF2,659
05D96:  BCF    FF2.7
05D98:  MOVLW  00
05D9A:  MOVLB  0
05D9C:  CALL   0890
05DA0:  TBLRD*-
05DA2:  TBLRD*+
05DA4:  MOVF   FF5,W
05DA6:  MOVWF  FEE
05DA8:  IORLW  00
05DAA:  BNZ   5DA2
05DAC:  MOVLB  6
05DAE:  BTFSC  x59.7
05DB0:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,30,1,1); 
05DB2:  MOVLW  06
05DB4:  MOVWF  x62
05DB6:  MOVLW  39
05DB8:  MOVWF  x61
05DBA:  CLRF   x63
05DBC:  MOVLW  1E
05DBE:  MOVWF  x64
05DC0:  MOVLW  01
05DC2:  MOVWF  x65
05DC4:  MOVWF  x66
05DC6:  MOVLB  0
05DC8:  CALL   2BEA
....................       delay_ms(2000); 
05DCC:  MOVLW  08
05DCE:  MOVLB  6
05DD0:  MOVWF  x59
05DD2:  MOVLW  FA
05DD4:  MOVWF  x62
05DD6:  MOVLB  0
05DD8:  CALL   1052
05DDC:  MOVLB  6
05DDE:  DECFSZ x59,F
05DE0:  BRA    5DD2
....................       Menu=100; 
05DE2:  MOVLW  64
05DE4:  MOVLB  5
05DE6:  MOVWF  x97
....................       glcd_fillScreen(OFF); 
05DE8:  MOVLB  6
05DEA:  CLRF   x61
05DEC:  MOVLB  0
05DEE:  CALL   25BC
....................    } 
....................     
.................... while(true) 
.................... { 
....................  
....................       if(Lectura2==1) 
05DF2:  MOVLB  5
05DF4:  DECFSZ x8F,W
05DF6:  BRA    5E16
....................       { 
....................          Temperatura=Leer_Sensor(MediaMovil); 
05DF8:  MOVFF  58C,659
05DFC:  MOVLB  0
05DFE:  CALL   2E54
05E02:  MOVFF  03,614
05E06:  MOVFF  02,613
05E0A:  MOVFF  01,612
05E0E:  MOVFF  00,611
....................          Lectura2=0; 
05E12:  MOVLB  5
05E14:  CLRF   x8F
....................       } 
....................     
....................       glcd_update();             
05E16:  MOVLB  0
05E18:  CALL   2616
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
05E1C:  MOVLB  5
05E1E:  MOVF   x97,F
05E20:  BNZ   5E46
....................          PidePassword(0,0,1,Password[0],Password[1],Password[2],Password[3],0); 
05E22:  MOVLB  6
05E24:  CLRF   x59
05E26:  CLRF   x5A
05E28:  MOVLW  01
05E2A:  MOVWF  x5B
05E2C:  MOVFF  5D9,65C
05E30:  MOVFF  5DA,65D
05E34:  MOVFF  5DB,65E
05E38:  MOVFF  5DC,65F
05E3C:  CLRF   x60
05E3E:  MOVLB  0
05E40:  CALL   3858
05E44:  MOVLB  5
....................       } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
05E46:  DECFSZ x97,W
05E48:  BRA    612E
....................        
....................          if(Opcion>4) 
05E4A:  MOVF   x9C,W
05E4C:  SUBLW  04
05E4E:  BC    5E54
....................             Opcion=1; 
05E50:  MOVLW  01
05E52:  MOVWF  x9C
....................              
....................          if(Opcion<1) 
05E54:  MOVF   x9C,F
05E56:  BNZ   5E5C
....................             Opcion=4; 
05E58:  MOVLW  04
05E5A:  MOVWF  x9C
....................           
....................          strcpy(Menus.Letra,"Menu"); 
05E5C:  MOVLW  06
05E5E:  MOVWF  FEA
05E60:  MOVLW  39
05E62:  MOVWF  FE9
05E64:  MOVFF  FF2,659
05E68:  BCF    FF2.7
05E6A:  MOVLW  00
05E6C:  MOVLB  0
05E6E:  CALL   08BA
05E72:  TBLRD*-
05E74:  TBLRD*+
05E76:  MOVF   FF5,W
05E78:  MOVWF  FEE
05E7A:  IORLW  00
05E7C:  BNZ   5E74
05E7E:  MOVLB  6
05E80:  BTFSC  x59.7
05E82:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
05E84:  MOVLW  06
05E86:  MOVWF  x62
05E88:  MOVLW  39
05E8A:  MOVWF  x61
05E8C:  MOVLW  1E
05E8E:  MOVWF  x63
05E90:  CLRF   x64
05E92:  MOVLW  01
05E94:  MOVWF  x65
05E96:  MOVLW  02
05E98:  MOVWF  x66
05E9A:  MOVLB  0
05E9C:  CALL   2BEA
....................        
....................          if(Opcion==1)    
05EA0:  MOVLB  5
05EA2:  DECFSZ x9C,W
05EA4:  BRA    5EEC
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
05EA6:  MOVLW  06
05EA8:  MOVWF  FEA
05EAA:  MOVLW  39
05EAC:  MOVWF  FE9
05EAE:  MOVFF  FF2,659
05EB2:  BCF    FF2.7
05EB4:  MOVLW  00
05EB6:  MOVLB  0
05EB8:  CALL   08DE
05EBC:  TBLRD*-
05EBE:  TBLRD*+
05EC0:  MOVF   FF5,W
05EC2:  MOVWF  FEE
05EC4:  IORLW  00
05EC6:  BNZ   5EBE
05EC8:  MOVLB  6
05ECA:  BTFSC  x59.7
05ECC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
05ECE:  MOVLW  06
05ED0:  MOVWF  x62
05ED2:  MOVLW  39
05ED4:  MOVWF  x61
05ED6:  CLRF   x63
05ED8:  MOVLW  14
05EDA:  MOVWF  x64
05EDC:  MOVLW  01
05EDE:  MOVWF  x65
05EE0:  MOVWF  x66
05EE2:  MOVLB  0
05EE4:  CALL   2BEA
....................          else 
05EE8:  BRA    5F2E
05EEA:  MOVLB  5
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
05EEC:  MOVLW  06
05EEE:  MOVWF  FEA
05EF0:  MOVLW  39
05EF2:  MOVWF  FE9
05EF4:  MOVFF  FF2,659
05EF8:  BCF    FF2.7
05EFA:  MOVLW  00
05EFC:  MOVLB  0
05EFE:  CALL   08DE
05F02:  TBLRD*-
05F04:  TBLRD*+
05F06:  MOVF   FF5,W
05F08:  MOVWF  FEE
05F0A:  IORLW  00
05F0C:  BNZ   5F04
05F0E:  MOVLB  6
05F10:  BTFSC  x59.7
05F12:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);} 
05F14:  MOVLW  06
05F16:  MOVWF  x62
05F18:  MOVLW  39
05F1A:  MOVWF  x61
05F1C:  CLRF   x63
05F1E:  MOVLW  14
05F20:  MOVWF  x64
05F22:  CLRF   x65
05F24:  MOVLW  01
05F26:  MOVWF  x66
05F28:  MOVLB  0
05F2A:  CALL   2BEA
....................           
....................          if(Opcion==2)    
05F2E:  MOVLB  5
05F30:  MOVF   x9C,W
05F32:  SUBLW  02
05F34:  BNZ   5F7C
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
05F36:  MOVLW  06
05F38:  MOVWF  FEA
05F3A:  MOVLW  39
05F3C:  MOVWF  FE9
05F3E:  MOVFF  FF2,659
05F42:  BCF    FF2.7
05F44:  MOVLW  00
05F46:  MOVLB  0
05F48:  CALL   090C
05F4C:  TBLRD*-
05F4E:  TBLRD*+
05F50:  MOVF   FF5,W
05F52:  MOVWF  FEE
05F54:  IORLW  00
05F56:  BNZ   5F4E
05F58:  MOVLB  6
05F5A:  BTFSC  x59.7
05F5C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
05F5E:  MOVLW  06
05F60:  MOVWF  x62
05F62:  MOVLW  39
05F64:  MOVWF  x61
05F66:  CLRF   x63
05F68:  MOVLW  1E
05F6A:  MOVWF  x64
05F6C:  MOVLW  01
05F6E:  MOVWF  x65
05F70:  MOVWF  x66
05F72:  MOVLB  0
05F74:  CALL   2BEA
....................          else 
05F78:  BRA    5FBE
05F7A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
05F7C:  MOVLW  06
05F7E:  MOVWF  FEA
05F80:  MOVLW  39
05F82:  MOVWF  FE9
05F84:  MOVFF  FF2,659
05F88:  BCF    FF2.7
05F8A:  MOVLW  00
05F8C:  MOVLB  0
05F8E:  CALL   090C
05F92:  TBLRD*-
05F94:  TBLRD*+
05F96:  MOVF   FF5,W
05F98:  MOVWF  FEE
05F9A:  IORLW  00
05F9C:  BNZ   5F94
05F9E:  MOVLB  6
05FA0:  BTFSC  x59.7
05FA2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);} 
05FA4:  MOVLW  06
05FA6:  MOVWF  x62
05FA8:  MOVLW  39
05FAA:  MOVWF  x61
05FAC:  CLRF   x63
05FAE:  MOVLW  1E
05FB0:  MOVWF  x64
05FB2:  CLRF   x65
05FB4:  MOVLW  01
05FB6:  MOVWF  x66
05FB8:  MOVLB  0
05FBA:  CALL   2BEA
....................              
....................          if(Opcion==3)    
05FBE:  MOVLB  5
05FC0:  MOVF   x9C,W
05FC2:  SUBLW  03
05FC4:  BNZ   600C
....................             {strcpy(Menus.Letra,"Temporizador"); 
05FC6:  MOVLW  06
05FC8:  MOVWF  FEA
05FCA:  MOVLW  39
05FCC:  MOVWF  FE9
05FCE:  MOVFF  FF2,659
05FD2:  BCF    FF2.7
05FD4:  MOVLW  00
05FD6:  MOVLB  0
05FD8:  CALL   0940
05FDC:  TBLRD*-
05FDE:  TBLRD*+
05FE0:  MOVF   FF5,W
05FE2:  MOVWF  FEE
05FE4:  IORLW  00
05FE6:  BNZ   5FDE
05FE8:  MOVLB  6
05FEA:  BTFSC  x59.7
05FEC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
05FEE:  MOVLW  06
05FF0:  MOVWF  x62
05FF2:  MOVLW  39
05FF4:  MOVWF  x61
05FF6:  CLRF   x63
05FF8:  MOVLW  28
05FFA:  MOVWF  x64
05FFC:  MOVLW  01
05FFE:  MOVWF  x65
06000:  MOVWF  x66
06002:  MOVLB  0
06004:  CALL   2BEA
....................          else 
06008:  BRA    604E
0600A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temporizador"); 
0600C:  MOVLW  06
0600E:  MOVWF  FEA
06010:  MOVLW  39
06012:  MOVWF  FE9
06014:  MOVFF  FF2,659
06018:  BCF    FF2.7
0601A:  MOVLW  00
0601C:  MOVLB  0
0601E:  CALL   0940
06022:  TBLRD*-
06024:  TBLRD*+
06026:  MOVF   FF5,W
06028:  MOVWF  FEE
0602A:  IORLW  00
0602C:  BNZ   6024
0602E:  MOVLB  6
06030:  BTFSC  x59.7
06032:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}    
06034:  MOVLW  06
06036:  MOVWF  x62
06038:  MOVLW  39
0603A:  MOVWF  x61
0603C:  CLRF   x63
0603E:  MOVLW  28
06040:  MOVWF  x64
06042:  CLRF   x65
06044:  MOVLW  01
06046:  MOVWF  x66
06048:  MOVLB  0
0604A:  CALL   2BEA
....................                          
....................          if(Opcion==4)    
0604E:  MOVLB  5
06050:  MOVF   x9C,W
06052:  SUBLW  04
06054:  BNZ   609C
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
06056:  MOVLW  06
06058:  MOVWF  FEA
0605A:  MOVLW  39
0605C:  MOVWF  FE9
0605E:  MOVFF  FF2,659
06062:  BCF    FF2.7
06064:  MOVLW  00
06066:  MOVLB  0
06068:  CALL   096C
0606C:  TBLRD*-
0606E:  TBLRD*+
06070:  MOVF   FF5,W
06072:  MOVWF  FEE
06074:  IORLW  00
06076:  BNZ   606E
06078:  MOVLB  6
0607A:  BTFSC  x59.7
0607C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
0607E:  MOVLW  06
06080:  MOVWF  x62
06082:  MOVLW  39
06084:  MOVWF  x61
06086:  CLRF   x63
06088:  MOVLW  32
0608A:  MOVWF  x64
0608C:  MOVLW  01
0608E:  MOVWF  x65
06090:  MOVWF  x66
06092:  MOVLB  0
06094:  CALL   2BEA
....................          else 
06098:  BRA    60DE
0609A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
0609C:  MOVLW  06
0609E:  MOVWF  FEA
060A0:  MOVLW  39
060A2:  MOVWF  FE9
060A4:  MOVFF  FF2,659
060A8:  BCF    FF2.7
060AA:  MOVLW  00
060AC:  MOVLB  0
060AE:  CALL   096C
060B2:  TBLRD*-
060B4:  TBLRD*+
060B6:  MOVF   FF5,W
060B8:  MOVWF  FEE
060BA:  IORLW  00
060BC:  BNZ   60B4
060BE:  MOVLB  6
060C0:  BTFSC  x59.7
060C2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}      
060C4:  MOVLW  06
060C6:  MOVWF  x62
060C8:  MOVLW  39
060CA:  MOVWF  x61
060CC:  CLRF   x63
060CE:  MOVLW  32
060D0:  MOVWF  x64
060D2:  CLRF   x65
060D4:  MOVLW  01
060D6:  MOVWF  x66
060D8:  MOVLB  0
060DA:  CALL   2BEA
....................              
....................          if(UP){ 
060DE:  BSF    F92.4
060E0:  BTFSC  F80.4
060E2:  BRA    60F0
....................             DelayPuls();Opcion--;visual=1; 
060E4:  CALL   379C
060E8:  MOVLB  5
060EA:  DECF   x9C,F
060EC:  BSF    x87.4
060EE:  MOVLB  0
....................          } 
....................                    
....................          if(DOWN){ 
060F0:  BSF    F92.5
060F2:  BTFSC  F80.5
060F4:  BRA    6102
....................             DelayPuls();Opcion++;visual=1;    
060F6:  CALL   379C
060FA:  MOVLB  5
060FC:  INCF   x9C,F
060FE:  BSF    x87.4
06100:  MOVLB  0
....................          } 
....................                 
....................          if(RIGHT){  
06102:  BSF    F96.0
06104:  BTFSC  F84.0
06106:  BRA    6130
....................             delay_ms(200);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
06108:  MOVLW  C8
0610A:  MOVLB  6
0610C:  MOVWF  x62
0610E:  MOVLB  0
06110:  CALL   1052
06114:  MOVLW  03
06116:  MOVLB  5
06118:  ADDWF  x9C,W
0611A:  MOVWF  x97
0611C:  MOVLW  01
0611E:  MOVWF  x9C
06120:  MOVLB  6
06122:  CLRF   x61
06124:  MOVLB  0
06126:  CALL   25BC
0612A:  MOVLB  5
0612C:  BSF    x87.4
0612E:  MOVLB  0
....................          } 
....................       } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Continuar 
06130:  MOVLB  5
06132:  MOVF   x97,W
06134:  SUBLW  04
06136:  BTFSS  FD8.2
06138:  BRA    64BE
....................        
....................       if(Opcion>3) 
0613A:  MOVF   x9C,W
0613C:  SUBLW  03
0613E:  BC    6144
....................          Opcion=1; 
06140:  MOVLW  01
06142:  MOVWF  x9C
....................           
....................       if(Opcion<1) 
06144:  MOVF   x9C,F
06146:  BNZ   614C
....................          Opcion=3; 
06148:  MOVLW  03
0614A:  MOVWF  x9C
....................        
....................          strcpy(Menus.Letra,"Seleccione"); 
0614C:  MOVLW  06
0614E:  MOVWF  FEA
06150:  MOVLW  39
06152:  MOVWF  FE9
06154:  MOVFF  FF2,659
06158:  BCF    FF2.7
0615A:  MOVLW  00
0615C:  MOVLB  0
0615E:  CALL   0998
06162:  TBLRD*-
06164:  TBLRD*+
06166:  MOVF   FF5,W
06168:  MOVWF  FEE
0616A:  IORLW  00
0616C:  BNZ   6164
0616E:  MOVLB  6
06170:  BTFSC  x59.7
06172:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
06174:  MOVLW  06
06176:  MOVWF  x62
06178:  MOVLW  39
0617A:  MOVWF  x61
0617C:  CLRF   x63
0617E:  CLRF   x64
06180:  MOVLW  01
06182:  MOVWF  x65
06184:  MOVLW  02
06186:  MOVWF  x66
06188:  MOVLB  0
0618A:  CALL   2BEA
....................           
....................          strcpy(Menus.Letra,"Temperatura"); 
0618E:  MOVLW  06
06190:  MOVWF  FEA
06192:  MOVLW  39
06194:  MOVWF  FE9
06196:  MOVFF  FF2,659
0619A:  BCF    FF2.7
0619C:  MOVLW  00
0619E:  CALL   09C2
061A2:  TBLRD*-
061A4:  TBLRD*+
061A6:  MOVF   FF5,W
061A8:  MOVWF  FEE
061AA:  IORLW  00
061AC:  BNZ   61A4
061AE:  MOVLB  6
061B0:  BTFSC  x59.7
061B2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,16,1,2); 
061B4:  MOVLW  06
061B6:  MOVWF  x62
061B8:  MOVLW  39
061BA:  MOVWF  x61
061BC:  CLRF   x63
061BE:  MOVLW  10
061C0:  MOVWF  x64
061C2:  MOVLW  01
061C4:  MOVWF  x65
061C6:  MOVLW  02
061C8:  MOVWF  x66
061CA:  MOVLB  0
061CC:  CALL   2BEA
....................           
....................          displayContrasena(Opcion,10,38,1); 
061D0:  MOVFF  59C,663
061D4:  MOVLW  0A
061D6:  MOVLB  6
061D8:  MOVWF  x64
061DA:  MOVLW  26
061DC:  MOVWF  x65
061DE:  MOVLW  01
061E0:  MOVWF  x66
061E2:  MOVLB  0
061E4:  CALL   36DE
....................          glcd_circle(90,38,2,NO,ON); 
061E8:  MOVLW  5A
061EA:  MOVLB  6
061EC:  MOVWF  x6E
061EE:  MOVLW  26
061F0:  MOVWF  x6F
061F2:  MOVLW  02
061F4:  MOVWF  x70
061F6:  CLRF   x71
061F8:  MOVLW  01
061FA:  MOVWF  x72
061FC:  MOVLB  0
061FE:  CALL   40DE
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,97,35,2,2);          
06202:  MOVLW  06
06204:  MOVWF  FEA
06206:  MOVLW  39
06208:  MOVWF  FE9
0620A:  MOVFF  FF2,659
0620E:  BCF    FF2.7
06210:  MOVLW  00
06212:  CALL   06D2
06216:  TBLRD*-
06218:  TBLRD*+
0621A:  MOVF   FF5,W
0621C:  MOVWF  FEE
0621E:  IORLW  00
06220:  BNZ   6218
06222:  MOVLB  6
06224:  BTFSC  x59.7
06226:  BSF    FF2.7
06228:  MOVLW  06
0622A:  MOVWF  x62
0622C:  MOVLW  39
0622E:  MOVWF  x61
06230:  MOVLW  61
06232:  MOVWF  x63
06234:  MOVLW  23
06236:  MOVWF  x64
06238:  MOVLW  02
0623A:  MOVWF  x65
0623C:  MOVWF  x66
0623E:  MOVLB  0
06240:  CALL   2BEA
....................           
....................          if(Opcion==1) 
06244:  MOVLB  5
06246:  DECFSZ x9C,W
06248:  BRA    628A
....................             displayTemperatura(Temperatura1,50,38,0,2); 
0624A:  MOVFF  620,65C
0624E:  MOVFF  61F,65B
06252:  MOVFF  61E,65A
06256:  MOVFF  61D,659
0625A:  MOVLB  0
0625C:  CALL   4308
06260:  MOVFF  02,65A
06264:  MOVFF  01,659
06268:  MOVFF  02,65C
0626C:  MOVFF  01,65B
06270:  MOVLW  32
06272:  MOVLB  6
06274:  MOVWF  x5D
06276:  MOVLW  26
06278:  MOVWF  x5E
0627A:  CLRF   x5F
0627C:  MOVLW  02
0627E:  MOVWF  x60
06280:  MOVLB  0
06282:  CALL   4402
....................          else if(Opcion==2) 
06286:  BRA    6312
06288:  MOVLB  5
0628A:  MOVF   x9C,W
0628C:  SUBLW  02
0628E:  BNZ   62D0
....................             displayTemperatura(Temperatura2,50,38,0,2);  
06290:  MOVFF  624,65C
06294:  MOVFF  623,65B
06298:  MOVFF  622,65A
0629C:  MOVFF  621,659
062A0:  MOVLB  0
062A2:  CALL   4308
062A6:  MOVFF  02,65A
062AA:  MOVFF  01,659
062AE:  MOVFF  02,65C
062B2:  MOVFF  01,65B
062B6:  MOVLW  32
062B8:  MOVLB  6
062BA:  MOVWF  x5D
062BC:  MOVLW  26
062BE:  MOVWF  x5E
062C0:  CLRF   x5F
062C2:  MOVLW  02
062C4:  MOVWF  x60
062C6:  MOVLB  0
062C8:  CALL   4402
....................          else if(Opcion==3) 
062CC:  BRA    6312
062CE:  MOVLB  5
062D0:  MOVF   x9C,W
062D2:  SUBLW  03
062D4:  BNZ   6314
....................             displayTemperatura(Temperatura3,50,38,0,2);  
062D6:  MOVFF  628,65C
062DA:  MOVFF  627,65B
062DE:  MOVFF  626,65A
062E2:  MOVFF  625,659
062E6:  MOVLB  0
062E8:  CALL   4308
062EC:  MOVFF  02,65A
062F0:  MOVFF  01,659
062F4:  MOVFF  02,65C
062F8:  MOVFF  01,65B
062FC:  MOVLW  32
062FE:  MOVLB  6
06300:  MOVWF  x5D
06302:  MOVLW  26
06304:  MOVWF  x5E
06306:  CLRF   x5F
06308:  MOVLW  02
0630A:  MOVWF  x60
0630C:  MOVLB  0
0630E:  CALL   4402
06312:  MOVLB  5
....................          
....................       if(UP){ 
06314:  BSF    F92.4
06316:  BTFSC  F80.4
06318:  BRA    633C
....................          Opcion++; 
0631A:  INCF   x9C,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
0631C:  MOVLW  28
0631E:  MOVLB  6
06320:  MOVWF  x72
06322:  MOVLW  23
06324:  MOVWF  x73
06326:  MOVLW  55
06328:  MOVWF  x74
0632A:  MOVLW  3C
0632C:  MOVWF  x75
0632E:  MOVLW  01
06330:  MOVWF  x76
06332:  CLRF   x77
06334:  MOVLB  0
06336:  CALL   2B28
0633A:  MOVLB  5
....................       } 
....................              
....................       if(DOWN){   
0633C:  BSF    F92.5
0633E:  BTFSC  F80.5
06340:  BRA    6364
....................          Opcion--;   
06342:  DECF   x9C,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
06344:  MOVLW  28
06346:  MOVLB  6
06348:  MOVWF  x72
0634A:  MOVLW  23
0634C:  MOVWF  x73
0634E:  MOVLW  55
06350:  MOVWF  x74
06352:  MOVLW  3C
06354:  MOVWF  x75
06356:  MOVLW  01
06358:  MOVWF  x76
0635A:  CLRF   x77
0635C:  MOVLB  0
0635E:  CALL   2B28
06362:  MOVLB  5
....................       } 
....................              
....................       if(RIGHT){   
06364:  BSF    F96.0
06366:  BTFSC  F84.0
06368:  BRA    648A
....................          if(Opcion==1) 
0636A:  DECFSZ x9C,W
0636C:  BRA    6380
....................             Setpoint=Temperatura1;           
0636E:  MOVFF  620,61C
06372:  MOVFF  61F,61B
06376:  MOVFF  61E,61A
0637A:  MOVFF  61D,619
....................          else if(Opcion==2) 
0637E:  BRA    63AE
06380:  MOVF   x9C,W
06382:  SUBLW  02
06384:  BNZ   6398
....................             Setpoint=Temperatura2;  
06386:  MOVFF  624,61C
0638A:  MOVFF  623,61B
0638E:  MOVFF  622,61A
06392:  MOVFF  621,619
....................          else if(Opcion==3) 
06396:  BRA    63AE
06398:  MOVF   x9C,W
0639A:  SUBLW  03
0639C:  BNZ   63AE
....................             Setpoint=Temperatura3; 
0639E:  MOVFF  628,61C
063A2:  MOVFF  627,61B
063A6:  MOVFF  626,61A
063AA:  MOVFF  625,619
....................           
....................          Ganancia=Ganancia*(Setpoint/44.5); 
063AE:  MOVFF  61C,65D
063B2:  MOVFF  61B,65C
063B6:  MOVFF  61A,65B
063BA:  MOVFF  619,65A
063BE:  MOVLB  6
063C0:  CLRF   x61
063C2:  CLRF   x60
063C4:  MOVLW  32
063C6:  MOVWF  x5F
063C8:  MOVLW  84
063CA:  MOVWF  x5E
063CC:  MOVLB  0
063CE:  CALL   10E8
063D2:  MOVFF  604,67C
063D6:  MOVFF  603,67B
063DA:  MOVFF  602,67A
063DE:  MOVFF  601,679
063E2:  MOVFF  03,680
063E6:  MOVFF  02,67F
063EA:  MOVFF  01,67E
063EE:  MOVFF  00,67D
063F2:  CALL   2D3C
063F6:  MOVFF  03,604
063FA:  MOVFF  02,603
063FE:  MOVFF  01,602
06402:  MOVFF  00,601
....................          Gananciamax=(0.21)*Setpoint;  
06406:  MOVLW  3D
06408:  MOVLB  6
0640A:  MOVWF  x7C
0640C:  MOVLW  0A
0640E:  MOVWF  x7B
06410:  MOVLW  57
06412:  MOVWF  x7A
06414:  MOVLW  7C
06416:  MOVWF  x79
06418:  MOVFF  61C,680
0641C:  MOVFF  61B,67F
06420:  MOVFF  61A,67E
06424:  MOVFF  619,67D
06428:  MOVLB  0
0642A:  CALL   2D3C
0642E:  MOVFF  03,5BC
06432:  MOVFF  02,5BB
06436:  MOVFF  01,5BA
0643A:  MOVFF  00,5B9
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;glcd_fillScreen(OFF);pausa=0;         
0643E:  MOVLW  14
06440:  MOVLB  5
06442:  MOVWF  x97
06444:  MOVLW  0F
06446:  MOVLB  6
06448:  MOVWF  x72
0644A:  MOVLW  12
0644C:  MOVWF  x73
0644E:  MOVLW  1E
06450:  MOVWF  x74
06452:  MOVLW  35
06454:  MOVWF  x75
06456:  CLRF   x76
06458:  MOVLW  01
0645A:  MOVWF  x77
0645C:  MOVLB  0
0645E:  CALL   2B28
06462:  MOVLB  5
06464:  CLRF   x9E
06466:  MOVLB  6
06468:  CLRF   x61
0646A:  MOVLB  0
0646C:  CALL   25BC
06470:  MOVLB  5
06472:  CLRF   x9A
....................           
....................          if((Testerilizacionp[0]==0)&&(Testerilizacionp[1]==0)&&(Testerilizacionp[2]==0)&&(Testerilizacionp[3]==0)) 
06474:  MOVF   xD1,F
06476:  BNZ   6488
06478:  MOVF   xD2,F
0647A:  BNZ   6488
0647C:  MOVF   xD3,F
0647E:  BNZ   6488
06480:  MOVF   xD4,F
06482:  BNZ   6488
....................             Infinito=1; 
06484:  BSF    x93.1
....................          else 
06486:  BRA    648A
....................             Infinito=0; 
06488:  BCF    x93.1
....................       }  
....................                    
....................       if(LEFT){ 
0648A:  BSF    F96.1
0648C:  BTFSC  F84.1
0648E:  BRA    64BE
....................          delay_ms(300);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
06490:  MOVLW  02
06492:  MOVLB  6
06494:  MOVWF  x59
06496:  MOVLW  96
06498:  MOVWF  x62
0649A:  MOVLB  0
0649C:  CALL   1052
064A0:  MOVLB  6
064A2:  DECFSZ x59,F
064A4:  BRA    6496
064A6:  MOVLW  01
064A8:  MOVLB  5
064AA:  MOVWF  x97
064AC:  MOVLB  6
064AE:  CLRF   x61
064B0:  MOVLB  0
064B2:  CALL   25BC
064B6:  MOVLW  01
064B8:  MOVLB  5
064BA:  MOVWF  x9C
064BC:  BSF    x87.4
....................       }  
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Temperatura 
064BE:  MOVF   x97,W
064C0:  SUBLW  05
064C2:  BTFSS  FD8.2
064C4:  GOTO   6D4A
....................       
....................          if(Opcion>3) 
064C8:  MOVF   x9C,W
064CA:  SUBLW  03
064CC:  BC    64D2
....................             Opcion=1; 
064CE:  MOVLW  01
064D0:  MOVWF  x9C
....................          if(Opcion<1) 
064D2:  MOVF   x9C,F
064D4:  BNZ   64DA
....................             Opcion=3; 
064D6:  MOVLW  03
064D8:  MOVWF  x9C
....................           
....................          if(Opcion==1)   { 
064DA:  DECFSZ x9C,W
064DC:  BRA    6534
....................             strcpy(Menus.Letra,"Temperatura 1"); 
064DE:  MOVLW  06
064E0:  MOVWF  FEA
064E2:  MOVLW  39
064E4:  MOVWF  FE9
064E6:  MOVFF  FF2,659
064EA:  BCF    FF2.7
064EC:  MOVLW  00
064EE:  MOVLB  0
064F0:  CALL   09EC
064F4:  TBLRD*-
064F6:  TBLRD*+
064F8:  MOVF   FF5,W
064FA:  MOVWF  FEE
064FC:  IORLW  00
064FE:  BNZ   64F6
06500:  MOVLB  6
06502:  BTFSC  x59.7
06504:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,1,1); 
06506:  MOVLW  06
06508:  MOVWF  x5A
0650A:  MOVLW  39
0650C:  MOVWF  x59
0650E:  MOVFF  620,65E
06512:  MOVFF  61F,65D
06516:  MOVFF  61E,65C
0651A:  MOVFF  61D,65B
0651E:  CLRF   x5F
06520:  MOVLW  14
06522:  MOVWF  x60
06524:  MOVLW  01
06526:  MOVWF  x61
06528:  MOVWF  x62
0652A:  MOVLB  0
0652C:  CALL   4832
....................          }else{ 
06530:  BRA    6586
06532:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 1"); 
06534:  MOVLW  06
06536:  MOVWF  FEA
06538:  MOVLW  39
0653A:  MOVWF  FE9
0653C:  MOVFF  FF2,659
06540:  BCF    FF2.7
06542:  MOVLW  00
06544:  MOVLB  0
06546:  CALL   09EC
0654A:  TBLRD*-
0654C:  TBLRD*+
0654E:  MOVF   FF5,W
06550:  MOVWF  FEE
06552:  IORLW  00
06554:  BNZ   654C
06556:  MOVLB  6
06558:  BTFSC  x59.7
0655A:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,0,1); 
0655C:  MOVLW  06
0655E:  MOVWF  x5A
06560:  MOVLW  39
06562:  MOVWF  x59
06564:  MOVFF  620,65E
06568:  MOVFF  61F,65D
0656C:  MOVFF  61E,65C
06570:  MOVFF  61D,65B
06574:  CLRF   x5F
06576:  MOVLW  14
06578:  MOVWF  x60
0657A:  CLRF   x61
0657C:  MOVLW  01
0657E:  MOVWF  x62
06580:  MOVLB  0
06582:  CALL   4832
....................          } 
....................           
....................          if(Opcion==2)   { 
06586:  MOVLB  5
06588:  MOVF   x9C,W
0658A:  SUBLW  02
0658C:  BNZ   65E4
....................             strcpy(Menus.Letra,"Temperatura 2"); 
0658E:  MOVLW  06
06590:  MOVWF  FEA
06592:  MOVLW  39
06594:  MOVWF  FE9
06596:  MOVFF  FF2,659
0659A:  BCF    FF2.7
0659C:  MOVLW  00
0659E:  MOVLB  0
065A0:  CALL   0A18
065A4:  TBLRD*-
065A6:  TBLRD*+
065A8:  MOVF   FF5,W
065AA:  MOVWF  FEE
065AC:  IORLW  00
065AE:  BNZ   65A6
065B0:  MOVLB  6
065B2:  BTFSC  x59.7
065B4:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,1,1); 
065B6:  MOVLW  06
065B8:  MOVWF  x5A
065BA:  MOVLW  39
065BC:  MOVWF  x59
065BE:  MOVFF  624,65E
065C2:  MOVFF  623,65D
065C6:  MOVFF  622,65C
065CA:  MOVFF  621,65B
065CE:  CLRF   x5F
065D0:  MOVLW  23
065D2:  MOVWF  x60
065D4:  MOVLW  01
065D6:  MOVWF  x61
065D8:  MOVWF  x62
065DA:  MOVLB  0
065DC:  CALL   4832
....................          }else{ 
065E0:  BRA    6636
065E2:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 2"); 
065E4:  MOVLW  06
065E6:  MOVWF  FEA
065E8:  MOVLW  39
065EA:  MOVWF  FE9
065EC:  MOVFF  FF2,659
065F0:  BCF    FF2.7
065F2:  MOVLW  00
065F4:  MOVLB  0
065F6:  CALL   0A18
065FA:  TBLRD*-
065FC:  TBLRD*+
065FE:  MOVF   FF5,W
06600:  MOVWF  FEE
06602:  IORLW  00
06604:  BNZ   65FC
06606:  MOVLB  6
06608:  BTFSC  x59.7
0660A:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,0,1); 
0660C:  MOVLW  06
0660E:  MOVWF  x5A
06610:  MOVLW  39
06612:  MOVWF  x59
06614:  MOVFF  624,65E
06618:  MOVFF  623,65D
0661C:  MOVFF  622,65C
06620:  MOVFF  621,65B
06624:  CLRF   x5F
06626:  MOVLW  23
06628:  MOVWF  x60
0662A:  CLRF   x61
0662C:  MOVLW  01
0662E:  MOVWF  x62
06630:  MOVLB  0
06632:  CALL   4832
....................          } 
....................              
....................          if(Opcion==3)   { 
06636:  MOVLB  5
06638:  MOVF   x9C,W
0663A:  SUBLW  03
0663C:  BNZ   6694
....................             strcpy(Menus.Letra,"Temperatura 3"); 
0663E:  MOVLW  06
06640:  MOVWF  FEA
06642:  MOVLW  39
06644:  MOVWF  FE9
06646:  MOVFF  FF2,659
0664A:  BCF    FF2.7
0664C:  MOVLW  00
0664E:  MOVLB  0
06650:  CALL   0A44
06654:  TBLRD*-
06656:  TBLRD*+
06658:  MOVF   FF5,W
0665A:  MOVWF  FEE
0665C:  IORLW  00
0665E:  BNZ   6656
06660:  MOVLB  6
06662:  BTFSC  x59.7
06664:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,1,1); 
06666:  MOVLW  06
06668:  MOVWF  x5A
0666A:  MOVLW  39
0666C:  MOVWF  x59
0666E:  MOVFF  628,65E
06672:  MOVFF  627,65D
06676:  MOVFF  626,65C
0667A:  MOVFF  625,65B
0667E:  CLRF   x5F
06680:  MOVLW  32
06682:  MOVWF  x60
06684:  MOVLW  01
06686:  MOVWF  x61
06688:  MOVWF  x62
0668A:  MOVLB  0
0668C:  CALL   4832
....................          }else{ 
06690:  BRA    66E6
06692:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 3"); 
06694:  MOVLW  06
06696:  MOVWF  FEA
06698:  MOVLW  39
0669A:  MOVWF  FE9
0669C:  MOVFF  FF2,659
066A0:  BCF    FF2.7
066A2:  MOVLW  00
066A4:  MOVLB  0
066A6:  CALL   0A44
066AA:  TBLRD*-
066AC:  TBLRD*+
066AE:  MOVF   FF5,W
066B0:  MOVWF  FEE
066B2:  IORLW  00
066B4:  BNZ   66AC
066B6:  MOVLB  6
066B8:  BTFSC  x59.7
066BA:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,0,1); 
066BC:  MOVLW  06
066BE:  MOVWF  x5A
066C0:  MOVLW  39
066C2:  MOVWF  x59
066C4:  MOVFF  628,65E
066C8:  MOVFF  627,65D
066CC:  MOVFF  626,65C
066D0:  MOVFF  625,65B
066D4:  CLRF   x5F
066D6:  MOVLW  32
066D8:  MOVWF  x60
066DA:  CLRF   x61
066DC:  MOVLW  01
066DE:  MOVWF  x62
066E0:  MOVLB  0
066E2:  CALL   4832
....................          } 
....................                
....................                 
....................          if(RIGHT)//Si oprime SET          
066E6:  BSF    F96.0
066E8:  BTFSC  F84.0
066EA:  BRA    66F2
....................             Opcion++;          
066EC:  MOVLB  5
066EE:  INCF   x9C,F
066F0:  MOVLB  0
....................        
....................          strcpy(Menus.Letra,"Temperatura"); 
066F2:  MOVLW  06
066F4:  MOVWF  FEA
066F6:  MOVLW  39
066F8:  MOVWF  FE9
066FA:  MOVFF  FF2,659
066FE:  BCF    FF2.7
06700:  MOVLW  00
06702:  CALL   09C2
06706:  TBLRD*-
06708:  TBLRD*+
0670A:  MOVF   FF5,W
0670C:  MOVWF  FEE
0670E:  IORLW  00
06710:  BNZ   6708
06712:  MOVLB  6
06714:  BTFSC  x59.7
06716:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
06718:  MOVLW  06
0671A:  MOVWF  x62
0671C:  MOVLW  39
0671E:  MOVWF  x61
06720:  CLRF   x63
06722:  CLRF   x64
06724:  MOVLW  01
06726:  MOVWF  x65
06728:  MOVLW  02
0672A:  MOVWF  x66
0672C:  MOVLB  0
0672E:  CALL   2BEA
....................           
....................        
....................          if(UP){   
06732:  BSF    F92.4
06734:  BTFSC  F80.4
06736:  BRA    67FC
....................             if(Opcion==1) 
06738:  MOVLB  5
0673A:  DECFSZ x9C,W
0673C:  BRA    677A
....................                Temperatura1+=0.1; 
0673E:  BCF    FD8.1
06740:  MOVFF  620,661
06744:  MOVFF  61F,660
06748:  MOVFF  61E,65F
0674C:  MOVFF  61D,65E
06750:  MOVLW  CD
06752:  MOVLB  6
06754:  MOVWF  x65
06756:  MOVLW  CC
06758:  MOVWF  x64
0675A:  MOVLW  4C
0675C:  MOVWF  x63
0675E:  MOVLW  7B
06760:  MOVWF  x62
06762:  MOVLB  0
06764:  CALL   1246
06768:  MOVFF  03,620
0676C:  MOVFF  02,61F
06770:  MOVFF  01,61E
06774:  MOVFF  00,61D
06778:  MOVLB  5
....................              
....................             if(Opcion==2) 
0677A:  MOVF   x9C,W
0677C:  SUBLW  02
0677E:  BNZ   67BC
....................                Temperatura2+=0.1; 
06780:  BCF    FD8.1
06782:  MOVFF  624,661
06786:  MOVFF  623,660
0678A:  MOVFF  622,65F
0678E:  MOVFF  621,65E
06792:  MOVLW  CD
06794:  MOVLB  6
06796:  MOVWF  x65
06798:  MOVLW  CC
0679A:  MOVWF  x64
0679C:  MOVLW  4C
0679E:  MOVWF  x63
067A0:  MOVLW  7B
067A2:  MOVWF  x62
067A4:  MOVLB  0
067A6:  CALL   1246
067AA:  MOVFF  03,624
067AE:  MOVFF  02,623
067B2:  MOVFF  01,622
067B6:  MOVFF  00,621
067BA:  MOVLB  5
....................                 
....................             if(Opcion==3) 
067BC:  MOVF   x9C,W
067BE:  SUBLW  03
067C0:  BNZ   67FE
....................                Temperatura3+=0.1;    
067C2:  BCF    FD8.1
067C4:  MOVFF  628,661
067C8:  MOVFF  627,660
067CC:  MOVFF  626,65F
067D0:  MOVFF  625,65E
067D4:  MOVLW  CD
067D6:  MOVLB  6
067D8:  MOVWF  x65
067DA:  MOVLW  CC
067DC:  MOVWF  x64
067DE:  MOVLW  4C
067E0:  MOVWF  x63
067E2:  MOVLW  7B
067E4:  MOVWF  x62
067E6:  MOVLB  0
067E8:  CALL   1246
067EC:  MOVFF  03,628
067F0:  MOVFF  02,627
067F4:  MOVFF  01,626
067F8:  MOVFF  00,625
067FC:  MOVLB  5
....................          } 
....................                 
....................          if(DOWN){   
067FE:  BSF    F92.5
06800:  BTFSC  F80.5
06802:  BRA    68C8
....................             if(Opcion==1) 
06804:  DECFSZ x9C,W
06806:  BRA    6844
....................                Temperatura1-=0.1; 
06808:  BSF    FD8.1
0680A:  MOVFF  620,661
0680E:  MOVFF  61F,660
06812:  MOVFF  61E,65F
06816:  MOVFF  61D,65E
0681A:  MOVLW  CD
0681C:  MOVLB  6
0681E:  MOVWF  x65
06820:  MOVLW  CC
06822:  MOVWF  x64
06824:  MOVLW  4C
06826:  MOVWF  x63
06828:  MOVLW  7B
0682A:  MOVWF  x62
0682C:  MOVLB  0
0682E:  CALL   1246
06832:  MOVFF  03,620
06836:  MOVFF  02,61F
0683A:  MOVFF  01,61E
0683E:  MOVFF  00,61D
06842:  MOVLB  5
....................              
....................             if(Opcion==2) 
06844:  MOVF   x9C,W
06846:  SUBLW  02
06848:  BNZ   6886
....................                Temperatura2-=0.1; 
0684A:  BSF    FD8.1
0684C:  MOVFF  624,661
06850:  MOVFF  623,660
06854:  MOVFF  622,65F
06858:  MOVFF  621,65E
0685C:  MOVLW  CD
0685E:  MOVLB  6
06860:  MOVWF  x65
06862:  MOVLW  CC
06864:  MOVWF  x64
06866:  MOVLW  4C
06868:  MOVWF  x63
0686A:  MOVLW  7B
0686C:  MOVWF  x62
0686E:  MOVLB  0
06870:  CALL   1246
06874:  MOVFF  03,624
06878:  MOVFF  02,623
0687C:  MOVFF  01,622
06880:  MOVFF  00,621
06884:  MOVLB  5
....................                 
....................             if(Opcion==3) 
06886:  MOVF   x9C,W
06888:  SUBLW  03
0688A:  BNZ   68C8
....................                Temperatura3-=0.1;    
0688C:  BSF    FD8.1
0688E:  MOVFF  628,661
06892:  MOVFF  627,660
06896:  MOVFF  626,65F
0689A:  MOVFF  625,65E
0689E:  MOVLW  CD
068A0:  MOVLB  6
068A2:  MOVWF  x65
068A4:  MOVLW  CC
068A6:  MOVWF  x64
068A8:  MOVLW  4C
068AA:  MOVWF  x63
068AC:  MOVLW  7B
068AE:  MOVWF  x62
068B0:  MOVLB  0
068B2:  CALL   1246
068B6:  MOVFF  03,628
068BA:  MOVFF  02,627
068BE:  MOVFF  01,626
068C2:  MOVFF  00,625
068C6:  MOVLB  5
....................          } 
....................                            
....................          if(LEFT){ 
068C8:  BSF    F96.1
068CA:  BTFSC  F84.1
068CC:  BRA    6C1A
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
068CE:  MOVLW  04
068D0:  MOVLB  6
068D2:  MOVWF  x59
068D4:  MOVLW  AF
068D6:  MOVWF  x62
068D8:  MOVLB  0
068DA:  CALL   1052
068DE:  MOVLB  6
068E0:  DECFSZ x59,F
068E2:  BRA    68D4
068E4:  MOVLW  01
068E6:  MOVLB  5
068E8:  MOVWF  x97
068EA:  MOVLB  6
068EC:  CLRF   x61
068EE:  MOVLB  0
068F0:  CALL   25BC
068F4:  MOVLW  01
068F6:  MOVLB  5
068F8:  MOVWF  x9C
068FA:  BSF    x87.4
....................              
....................             entero=(int8)Temperatura1; 
068FC:  MOVFF  620,65C
06900:  MOVFF  61F,65B
06904:  MOVFF  61E,65A
06908:  MOVFF  61D,659
0690C:  MOVLB  0
0690E:  CALL   4308
06912:  MOVFF  01,5A0
....................             decimal=(Temperatura1-entero)*10; 
06916:  MOVLB  6
06918:  CLRF   x60
0691A:  MOVFF  5A0,65F
0691E:  MOVLB  0
06920:  CALL   10B2
06924:  BSF    FD8.1
06926:  MOVFF  620,661
0692A:  MOVFF  61F,660
0692E:  MOVFF  61E,65F
06932:  MOVFF  61D,65E
06936:  MOVFF  03,665
0693A:  MOVFF  02,664
0693E:  MOVFF  01,663
06942:  MOVFF  00,662
06946:  CALL   1246
0694A:  MOVFF  00,659
0694E:  MOVFF  01,65A
06952:  MOVFF  02,65B
06956:  MOVFF  03,65C
0695A:  MOVFF  03,67C
0695E:  MOVFF  02,67B
06962:  MOVFF  01,67A
06966:  MOVFF  00,679
0696A:  MOVLB  6
0696C:  CLRF   x80
0696E:  CLRF   x7F
06970:  MOVLW  20
06972:  MOVWF  x7E
06974:  MOVLW  82
06976:  MOVWF  x7D
06978:  MOVLB  0
0697A:  CALL   2D3C
0697E:  MOVFF  03,65C
06982:  MOVFF  02,65B
06986:  MOVFF  01,65A
0698A:  MOVFF  00,659
0698E:  CALL   4308
06992:  MOVFF  01,59F
....................             write_eeprom(8,entero); 
06996:  CLRF   FAA
06998:  MOVLW  08
0699A:  MOVWF  FA9
0699C:  MOVFF  5A0,FA8
069A0:  BCF    FA6.6
069A2:  BCF    FA6.7
069A4:  BSF    FA6.2
069A6:  MOVF   FF2,W
069A8:  MOVWF  00
069AA:  BCF    FF2.7
069AC:  MOVLB  F
069AE:  MOVLW  55
069B0:  MOVWF  FA7
069B2:  MOVLW  AA
069B4:  MOVWF  FA7
069B6:  BSF    FA6.1
069B8:  BTFSC  FA6.1
069BA:  BRA    69B8
069BC:  BCF    FA6.2
069BE:  MOVF   00,W
069C0:  IORWF  FF2,F
....................             delay_ms(50);    
069C2:  MOVLW  32
069C4:  MOVLB  6
069C6:  MOVWF  x62
069C8:  MOVLB  0
069CA:  CALL   1052
....................             write_eeprom(9,decimal);//Guardar valor de Setpoint en eeprom 
069CE:  CLRF   FAA
069D0:  MOVLW  09
069D2:  MOVWF  FA9
069D4:  MOVFF  59F,FA8
069D8:  BCF    FA6.6
069DA:  BCF    FA6.7
069DC:  BSF    FA6.2
069DE:  MOVF   FF2,W
069E0:  MOVWF  00
069E2:  BCF    FF2.7
069E4:  MOVLB  F
069E6:  MOVLW  55
069E8:  MOVWF  FA7
069EA:  MOVLW  AA
069EC:  MOVWF  FA7
069EE:  BSF    FA6.1
069F0:  BTFSC  FA6.1
069F2:  BRA    69F0
069F4:  BCF    FA6.2
069F6:  MOVF   00,W
069F8:  IORWF  FF2,F
....................             delay_ms(50);   
069FA:  MOVLW  32
069FC:  MOVLB  6
069FE:  MOVWF  x62
06A00:  MOVLB  0
06A02:  CALL   1052
....................              
....................             entero=(int8)Temperatura2; 
06A06:  MOVFF  624,65C
06A0A:  MOVFF  623,65B
06A0E:  MOVFF  622,65A
06A12:  MOVFF  621,659
06A16:  CALL   4308
06A1A:  MOVFF  01,5A0
....................             decimal=(Temperatura2-entero)*10; 
06A1E:  MOVLB  6
06A20:  CLRF   x60
06A22:  MOVFF  5A0,65F
06A26:  MOVLB  0
06A28:  CALL   10B2
06A2C:  BSF    FD8.1
06A2E:  MOVFF  624,661
06A32:  MOVFF  623,660
06A36:  MOVFF  622,65F
06A3A:  MOVFF  621,65E
06A3E:  MOVFF  03,665
06A42:  MOVFF  02,664
06A46:  MOVFF  01,663
06A4A:  MOVFF  00,662
06A4E:  CALL   1246
06A52:  MOVFF  00,659
06A56:  MOVFF  01,65A
06A5A:  MOVFF  02,65B
06A5E:  MOVFF  03,65C
06A62:  MOVFF  03,67C
06A66:  MOVFF  02,67B
06A6A:  MOVFF  01,67A
06A6E:  MOVFF  00,679
06A72:  MOVLB  6
06A74:  CLRF   x80
06A76:  CLRF   x7F
06A78:  MOVLW  20
06A7A:  MOVWF  x7E
06A7C:  MOVLW  82
06A7E:  MOVWF  x7D
06A80:  MOVLB  0
06A82:  CALL   2D3C
06A86:  MOVFF  03,65C
06A8A:  MOVFF  02,65B
06A8E:  MOVFF  01,65A
06A92:  MOVFF  00,659
06A96:  CALL   4308
06A9A:  MOVFF  01,59F
....................             write_eeprom(10,entero); 
06A9E:  CLRF   FAA
06AA0:  MOVLW  0A
06AA2:  MOVWF  FA9
06AA4:  MOVFF  5A0,FA8
06AA8:  BCF    FA6.6
06AAA:  BCF    FA6.7
06AAC:  BSF    FA6.2
06AAE:  MOVF   FF2,W
06AB0:  MOVWF  00
06AB2:  BCF    FF2.7
06AB4:  MOVLB  F
06AB6:  MOVLW  55
06AB8:  MOVWF  FA7
06ABA:  MOVLW  AA
06ABC:  MOVWF  FA7
06ABE:  BSF    FA6.1
06AC0:  BTFSC  FA6.1
06AC2:  BRA    6AC0
06AC4:  BCF    FA6.2
06AC6:  MOVF   00,W
06AC8:  IORWF  FF2,F
....................             delay_ms(50);    
06ACA:  MOVLW  32
06ACC:  MOVLB  6
06ACE:  MOVWF  x62
06AD0:  MOVLB  0
06AD2:  CALL   1052
....................             write_eeprom(11,decimal);//Guardar valor de Setpoint en eeprom 
06AD6:  CLRF   FAA
06AD8:  MOVLW  0B
06ADA:  MOVWF  FA9
06ADC:  MOVFF  59F,FA8
06AE0:  BCF    FA6.6
06AE2:  BCF    FA6.7
06AE4:  BSF    FA6.2
06AE6:  MOVF   FF2,W
06AE8:  MOVWF  00
06AEA:  BCF    FF2.7
06AEC:  MOVLB  F
06AEE:  MOVLW  55
06AF0:  MOVWF  FA7
06AF2:  MOVLW  AA
06AF4:  MOVWF  FA7
06AF6:  BSF    FA6.1
06AF8:  BTFSC  FA6.1
06AFA:  BRA    6AF8
06AFC:  BCF    FA6.2
06AFE:  MOVF   00,W
06B00:  IORWF  FF2,F
....................             delay_ms(50);    
06B02:  MOVLW  32
06B04:  MOVLB  6
06B06:  MOVWF  x62
06B08:  MOVLB  0
06B0A:  CALL   1052
....................              
....................             entero=(int8)Temperatura3; 
06B0E:  MOVFF  628,65C
06B12:  MOVFF  627,65B
06B16:  MOVFF  626,65A
06B1A:  MOVFF  625,659
06B1E:  CALL   4308
06B22:  MOVFF  01,5A0
....................             decimal=(Temperatura3-entero)*10; 
06B26:  MOVLB  6
06B28:  CLRF   x60
06B2A:  MOVFF  5A0,65F
06B2E:  MOVLB  0
06B30:  CALL   10B2
06B34:  BSF    FD8.1
06B36:  MOVFF  628,661
06B3A:  MOVFF  627,660
06B3E:  MOVFF  626,65F
06B42:  MOVFF  625,65E
06B46:  MOVFF  03,665
06B4A:  MOVFF  02,664
06B4E:  MOVFF  01,663
06B52:  MOVFF  00,662
06B56:  CALL   1246
06B5A:  MOVFF  00,659
06B5E:  MOVFF  01,65A
06B62:  MOVFF  02,65B
06B66:  MOVFF  03,65C
06B6A:  MOVFF  03,67C
06B6E:  MOVFF  02,67B
06B72:  MOVFF  01,67A
06B76:  MOVFF  00,679
06B7A:  MOVLB  6
06B7C:  CLRF   x80
06B7E:  CLRF   x7F
06B80:  MOVLW  20
06B82:  MOVWF  x7E
06B84:  MOVLW  82
06B86:  MOVWF  x7D
06B88:  MOVLB  0
06B8A:  CALL   2D3C
06B8E:  MOVFF  03,65C
06B92:  MOVFF  02,65B
06B96:  MOVFF  01,65A
06B9A:  MOVFF  00,659
06B9E:  CALL   4308
06BA2:  MOVFF  01,59F
....................             write_eeprom(12,entero); 
06BA6:  CLRF   FAA
06BA8:  MOVLW  0C
06BAA:  MOVWF  FA9
06BAC:  MOVFF  5A0,FA8
06BB0:  BCF    FA6.6
06BB2:  BCF    FA6.7
06BB4:  BSF    FA6.2
06BB6:  MOVF   FF2,W
06BB8:  MOVWF  00
06BBA:  BCF    FF2.7
06BBC:  MOVLB  F
06BBE:  MOVLW  55
06BC0:  MOVWF  FA7
06BC2:  MOVLW  AA
06BC4:  MOVWF  FA7
06BC6:  BSF    FA6.1
06BC8:  BTFSC  FA6.1
06BCA:  BRA    6BC8
06BCC:  BCF    FA6.2
06BCE:  MOVF   00,W
06BD0:  IORWF  FF2,F
....................             delay_ms(50);    
06BD2:  MOVLW  32
06BD4:  MOVLB  6
06BD6:  MOVWF  x62
06BD8:  MOVLB  0
06BDA:  CALL   1052
....................             write_eeprom(13,decimal);//Guardar valor de Setpoint en eeprom 
06BDE:  CLRF   FAA
06BE0:  MOVLW  0D
06BE2:  MOVWF  FA9
06BE4:  MOVFF  59F,FA8
06BE8:  BCF    FA6.6
06BEA:  BCF    FA6.7
06BEC:  BSF    FA6.2
06BEE:  MOVF   FF2,W
06BF0:  MOVWF  00
06BF2:  BCF    FF2.7
06BF4:  MOVLB  F
06BF6:  MOVLW  55
06BF8:  MOVWF  FA7
06BFA:  MOVLW  AA
06BFC:  MOVWF  FA7
06BFE:  BSF    FA6.1
06C00:  BTFSC  FA6.1
06C02:  BRA    6C00
06C04:  BCF    FA6.2
06C06:  MOVF   00,W
06C08:  IORWF  FF2,F
....................             delay_ms(50);  
06C0A:  MOVLW  32
06C0C:  MOVLB  6
06C0E:  MOVWF  x62
06C10:  MOVLB  0
06C12:  CALL   1052
....................             MensajeAlmacenado(); 
06C16:  CALL   37AA
....................          } 
....................           
....................          if(Temperatura1<1) 
06C1A:  MOVFF  620,660
06C1E:  MOVFF  61F,65F
06C22:  MOVFF  61E,65E
06C26:  MOVFF  61D,65D
06C2A:  MOVLB  6
06C2C:  CLRF   x64
06C2E:  CLRF   x63
06C30:  CLRF   x62
06C32:  MOVLW  7F
06C34:  MOVWF  x61
06C36:  MOVLB  0
06C38:  CALL   1C42
06C3C:  BNC   6C4C
....................             Temperatura1=60; 
06C3E:  MOVLB  6
06C40:  CLRF   x20
06C42:  CLRF   x1F
06C44:  MOVLW  70
06C46:  MOVWF  x1E
06C48:  MOVLW  84
06C4A:  MOVWF  x1D
....................              
....................          if(Temperatura2<1) 
06C4C:  MOVFF  624,660
06C50:  MOVFF  623,65F
06C54:  MOVFF  622,65E
06C58:  MOVFF  621,65D
06C5C:  MOVLB  6
06C5E:  CLRF   x64
06C60:  CLRF   x63
06C62:  CLRF   x62
06C64:  MOVLW  7F
06C66:  MOVWF  x61
06C68:  MOVLB  0
06C6A:  CALL   1C42
06C6E:  BNC   6C7E
....................             Temperatura2=60; 
06C70:  MOVLB  6
06C72:  CLRF   x24
06C74:  CLRF   x23
06C76:  MOVLW  70
06C78:  MOVWF  x22
06C7A:  MOVLW  84
06C7C:  MOVWF  x21
....................              
....................          if(Temperatura3<1) 
06C7E:  MOVFF  628,660
06C82:  MOVFF  627,65F
06C86:  MOVFF  626,65E
06C8A:  MOVFF  625,65D
06C8E:  MOVLB  6
06C90:  CLRF   x64
06C92:  CLRF   x63
06C94:  CLRF   x62
06C96:  MOVLW  7F
06C98:  MOVWF  x61
06C9A:  MOVLB  0
06C9C:  CALL   1C42
06CA0:  BNC   6CB0
....................             Temperatura3=60; 
06CA2:  MOVLB  6
06CA4:  CLRF   x28
06CA6:  CLRF   x27
06CA8:  MOVLW  70
06CAA:  MOVWF  x26
06CAC:  MOVLW  84
06CAE:  MOVWF  x25
....................              
....................          if(Temperatura1>60) 
06CB0:  MOVLB  6
06CB2:  CLRF   x60
06CB4:  CLRF   x5F
06CB6:  MOVLW  70
06CB8:  MOVWF  x5E
06CBA:  MOVLW  84
06CBC:  MOVWF  x5D
06CBE:  MOVFF  620,664
06CC2:  MOVFF  61F,663
06CC6:  MOVFF  61E,662
06CCA:  MOVFF  61D,661
06CCE:  MOVLB  0
06CD0:  CALL   1C42
06CD4:  BNC   6CE2
....................             Temperatura1=1;    
06CD6:  MOVLB  6
06CD8:  CLRF   x20
06CDA:  CLRF   x1F
06CDC:  CLRF   x1E
06CDE:  MOVLW  7F
06CE0:  MOVWF  x1D
....................              
....................          if(Temperatura2>60) 
06CE2:  MOVLB  6
06CE4:  CLRF   x60
06CE6:  CLRF   x5F
06CE8:  MOVLW  70
06CEA:  MOVWF  x5E
06CEC:  MOVLW  84
06CEE:  MOVWF  x5D
06CF0:  MOVFF  624,664
06CF4:  MOVFF  623,663
06CF8:  MOVFF  622,662
06CFC:  MOVFF  621,661
06D00:  MOVLB  0
06D02:  CALL   1C42
06D06:  BNC   6D14
....................             Temperatura2=1;    
06D08:  MOVLB  6
06D0A:  CLRF   x24
06D0C:  CLRF   x23
06D0E:  CLRF   x22
06D10:  MOVLW  7F
06D12:  MOVWF  x21
....................              
....................          if(Temperatura3>60) 
06D14:  MOVLB  6
06D16:  CLRF   x60
06D18:  CLRF   x5F
06D1A:  MOVLW  70
06D1C:  MOVWF  x5E
06D1E:  MOVLW  84
06D20:  MOVWF  x5D
06D22:  MOVFF  628,664
06D26:  MOVFF  627,663
06D2A:  MOVFF  626,662
06D2E:  MOVFF  625,661
06D32:  MOVLB  0
06D34:  CALL   1C42
06D38:  BNC   6D48
....................             Temperatura3=1;    
06D3A:  MOVLB  6
06D3C:  CLRF   x28
06D3E:  CLRF   x27
06D40:  CLRF   x26
06D42:  MOVLW  7F
06D44:  MOVWF  x25
06D46:  MOVLB  0
06D48:  MOVLB  5
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Temporizador 
06D4A:  MOVF   x97,W
06D4C:  SUBLW  06
06D4E:  BTFSS  FD8.2
06D50:  BRA    70D8
....................       
....................          if(unidad<1) 
06D52:  MOVF   x98,F
06D54:  BNZ   6D5A
....................             unidad=4; 
06D56:  MOVLW  04
06D58:  MOVWF  x98
....................           
....................          strcpy(Menus.Letra,"Tiempo"); 
06D5A:  MOVLW  06
06D5C:  MOVWF  FEA
06D5E:  MOVLW  39
06D60:  MOVWF  FE9
06D62:  MOVFF  FF2,659
06D66:  BCF    FF2.7
06D68:  MOVLW  00
06D6A:  MOVLB  0
06D6C:  CALL   0A70
06D70:  TBLRD*-
06D72:  TBLRD*+
06D74:  MOVF   FF5,W
06D76:  MOVWF  FEE
06D78:  IORLW  00
06D7A:  BNZ   6D72
06D7C:  MOVLB  6
06D7E:  BTFSC  x59.7
06D80:  BSF    FF2.7
....................          displayMenu(Menus.Letra,10,0,1,2); 
06D82:  MOVLW  06
06D84:  MOVWF  x62
06D86:  MOVLW  39
06D88:  MOVWF  x61
06D8A:  MOVLW  0A
06D8C:  MOVWF  x63
06D8E:  CLRF   x64
06D90:  MOVLW  01
06D92:  MOVWF  x65
06D94:  MOVLW  02
06D96:  MOVWF  x66
06D98:  MOVLB  0
06D9A:  CALL   2BEA
....................           
....................          if(unidad==4) 
06D9E:  MOVLB  5
06DA0:  MOVF   x98,W
06DA2:  SUBLW  04
06DA4:  BNZ   6DC4
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
06DA6:  MOVFF  5D4,65A
06DAA:  MOVLW  14
06DAC:  MOVLB  6
06DAE:  MOVWF  x5B
06DB0:  MOVLW  28
06DB2:  MOVWF  x5C
06DB4:  MOVLW  01
06DB6:  MOVWF  x5D
06DB8:  MOVLW  02
06DBA:  MOVWF  x5E
06DBC:  MOVLB  0
06DBE:  CALL   4B40
....................          else 
06DC2:  BRA    6DDE
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
06DC4:  MOVFF  5D4,65A
06DC8:  MOVLW  14
06DCA:  MOVLB  6
06DCC:  MOVWF  x5B
06DCE:  MOVLW  28
06DD0:  MOVWF  x5C
06DD2:  CLRF   x5D
06DD4:  MOVLW  02
06DD6:  MOVWF  x5E
06DD8:  MOVLB  0
06DDA:  CALL   4B40
....................           
....................          if(unidad==3) 
06DDE:  MOVLB  5
06DE0:  MOVF   x98,W
06DE2:  SUBLW  03
06DE4:  BNZ   6E02
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
06DE6:  MOVFF  5D3,65A
06DEA:  MOVLW  28
06DEC:  MOVLB  6
06DEE:  MOVWF  x5B
06DF0:  MOVWF  x5C
06DF2:  MOVLW  01
06DF4:  MOVWF  x5D
06DF6:  MOVLW  02
06DF8:  MOVWF  x5E
06DFA:  MOVLB  0
06DFC:  CALL   4B40
....................          else 
06E00:  BRA    6E1A
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
06E02:  MOVFF  5D3,65A
06E06:  MOVLW  28
06E08:  MOVLB  6
06E0A:  MOVWF  x5B
06E0C:  MOVWF  x5C
06E0E:  CLRF   x5D
06E10:  MOVLW  02
06E12:  MOVWF  x5E
06E14:  MOVLB  0
06E16:  CALL   4B40
....................           
....................          if(unidad==2) 
06E1A:  MOVLB  5
06E1C:  MOVF   x98,W
06E1E:  SUBLW  02
06E20:  BNZ   6E40
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
06E22:  MOVFF  5D2,65A
06E26:  MOVLW  46
06E28:  MOVLB  6
06E2A:  MOVWF  x5B
06E2C:  MOVLW  28
06E2E:  MOVWF  x5C
06E30:  MOVLW  01
06E32:  MOVWF  x5D
06E34:  MOVLW  02
06E36:  MOVWF  x5E
06E38:  MOVLB  0
06E3A:  CALL   4B40
....................          else 
06E3E:  BRA    6E5A
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
06E40:  MOVFF  5D2,65A
06E44:  MOVLW  46
06E46:  MOVLB  6
06E48:  MOVWF  x5B
06E4A:  MOVLW  28
06E4C:  MOVWF  x5C
06E4E:  CLRF   x5D
06E50:  MOVLW  02
06E52:  MOVWF  x5E
06E54:  MOVLB  0
06E56:  CALL   4B40
....................           
....................          if(unidad==1) 
06E5A:  MOVLB  5
06E5C:  DECFSZ x98,W
06E5E:  BRA    6E7E
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
06E60:  MOVFF  5D1,65A
06E64:  MOVLW  5A
06E66:  MOVLB  6
06E68:  MOVWF  x5B
06E6A:  MOVLW  28
06E6C:  MOVWF  x5C
06E6E:  MOVLW  01
06E70:  MOVWF  x5D
06E72:  MOVLW  02
06E74:  MOVWF  x5E
06E76:  MOVLB  0
06E78:  CALL   4B40
....................          else 
06E7C:  BRA    6E98
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
06E7E:  MOVFF  5D1,65A
06E82:  MOVLW  5A
06E84:  MOVLB  6
06E86:  MOVWF  x5B
06E88:  MOVLW  28
06E8A:  MOVWF  x5C
06E8C:  CLRF   x5D
06E8E:  MOVLW  02
06E90:  MOVWF  x5E
06E92:  MOVLB  0
06E94:  CALL   4B40
....................           
....................          strcpy(Menus.Letra,":"); 
06E98:  MOVLW  06
06E9A:  MOVWF  FEA
06E9C:  MOVLW  39
06E9E:  MOVWF  FE9
06EA0:  MOVFF  FF2,659
06EA4:  BCF    FF2.7
06EA6:  MOVLW  00
06EA8:  CALL   0A96
06EAC:  TBLRD*-
06EAE:  TBLRD*+
06EB0:  MOVF   FF5,W
06EB2:  MOVWF  FEE
06EB4:  IORLW  00
06EB6:  BNZ   6EAE
06EB8:  MOVLB  6
06EBA:  BTFSC  x59.7
06EBC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);            
06EBE:  MOVLW  06
06EC0:  MOVWF  x62
06EC2:  MOVLW  39
06EC4:  MOVWF  x61
06EC6:  MOVLW  3C
06EC8:  MOVWF  x63
06ECA:  MOVLW  2A
06ECC:  MOVWF  x64
06ECE:  MOVLW  02
06ED0:  MOVWF  x65
06ED2:  MOVWF  x66
06ED4:  MOVLB  0
06ED6:  CALL   2BEA
....................        
....................          if(UP){   
06EDA:  BSF    F92.4
06EDC:  BTFSC  F80.4
06EDE:  BRA    6F58
....................             if(unidad==2){ 
06EE0:  MOVLB  5
06EE2:  MOVF   x98,W
06EE4:  SUBLW  02
06EE6:  BNZ   6F20
....................                if(Testerilizacionp[unidad-1]<5){ 
06EE8:  MOVLW  01
06EEA:  SUBWF  x98,W
06EEC:  CLRF   03
06EEE:  ADDLW  D1
06EF0:  MOVWF  FE9
06EF2:  MOVLW  05
06EF4:  ADDWFC 03,W
06EF6:  MOVWF  FEA
06EF8:  BTFSC  FEF.7
06EFA:  BRA    6F02
06EFC:  MOVF   FEF,W
06EFE:  SUBLW  04
06F00:  BNC   6F1E
....................                   DelayPuls();Testerilizacionp[unidad-1]++;visual=1; 
06F02:  MOVLB  0
06F04:  CALL   379C
06F08:  MOVLW  01
06F0A:  MOVLB  5
06F0C:  SUBWF  x98,W
06F0E:  CLRF   03
06F10:  ADDLW  D1
06F12:  MOVWF  FE9
06F14:  MOVLW  05
06F16:  ADDWFC 03,W
06F18:  MOVWF  FEA
06F1A:  INCF   FEF,F
06F1C:  BSF    x87.4
....................                } 
....................             }else{ 
06F1E:  BRA    6F56
....................                if(Testerilizacionp[unidad-1]<9){ 
06F20:  MOVLW  01
06F22:  SUBWF  x98,W
06F24:  CLRF   03
06F26:  ADDLW  D1
06F28:  MOVWF  FE9
06F2A:  MOVLW  05
06F2C:  ADDWFC 03,W
06F2E:  MOVWF  FEA
06F30:  BTFSC  FEF.7
06F32:  BRA    6F3A
06F34:  MOVF   FEF,W
06F36:  SUBLW  08
06F38:  BNC   6F56
....................                   DelayPuls();Testerilizacionp[unidad-1]++;visual=1; 
06F3A:  MOVLB  0
06F3C:  CALL   379C
06F40:  MOVLW  01
06F42:  MOVLB  5
06F44:  SUBWF  x98,W
06F46:  CLRF   03
06F48:  ADDLW  D1
06F4A:  MOVWF  FE9
06F4C:  MOVLW  05
06F4E:  ADDWFC 03,W
06F50:  MOVWF  FEA
06F52:  INCF   FEF,F
06F54:  BSF    x87.4
06F56:  MOVLB  0
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN){   
06F58:  BSF    F92.5
06F5A:  BTFSC  F80.5
06F5C:  BRA    6F98
....................             if(Testerilizacionp[unidad-1]>0){ 
06F5E:  MOVLW  01
06F60:  MOVLB  5
06F62:  SUBWF  x98,W
06F64:  CLRF   03
06F66:  ADDLW  D1
06F68:  MOVWF  FE9
06F6A:  MOVLW  05
06F6C:  ADDWFC 03,W
06F6E:  MOVWF  FEA
06F70:  BTFSC  FEF.7
06F72:  BRA    6F96
06F74:  MOVF   FEF,W
06F76:  SUBLW  00
06F78:  BC    6F96
....................                DelayPuls();Testerilizacionp[unidad-1]--;visual=1;      
06F7A:  MOVLB  0
06F7C:  CALL   379C
06F80:  MOVLW  01
06F82:  MOVLB  5
06F84:  SUBWF  x98,W
06F86:  CLRF   03
06F88:  ADDLW  D1
06F8A:  MOVWF  FE9
06F8C:  MOVLW  05
06F8E:  ADDWFC 03,W
06F90:  MOVWF  FEA
06F92:  DECF   FEF,F
06F94:  BSF    x87.4
06F96:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT){   
06F98:  BSF    F96.0
06F9A:  BTFSC  F84.0
06F9C:  BRA    6FAA
....................             DelayPuls();unidad--;visual=1; 
06F9E:  CALL   379C
06FA2:  MOVLB  5
06FA4:  DECF   x98,F
06FA6:  BSF    x87.4
06FA8:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT){ 
06FAA:  BSF    F96.1
06FAC:  BTFSC  F84.1
06FAE:  BRA    70DA
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
06FB0:  MOVLW  04
06FB2:  MOVLB  6
06FB4:  MOVWF  x59
06FB6:  MOVLW  AF
06FB8:  MOVWF  x62
06FBA:  MOVLB  0
06FBC:  CALL   1052
06FC0:  MOVLB  6
06FC2:  DECFSZ x59,F
06FC4:  BRA    6FB6
06FC6:  MOVLW  01
06FC8:  MOVLB  5
06FCA:  MOVWF  x97
06FCC:  MOVLB  6
06FCE:  CLRF   x61
06FD0:  MOVLB  0
06FD2:  CALL   25BC
06FD6:  MOVLW  01
06FD8:  MOVLB  5
06FDA:  MOVWF  x9C
06FDC:  BSF    x87.4
....................             write_eeprom(0,Testerilizacionp[0]); 
06FDE:  CLRF   FAA
06FE0:  CLRF   FA9
06FE2:  MOVFF  5D1,FA8
06FE6:  BCF    FA6.6
06FE8:  BCF    FA6.7
06FEA:  BSF    FA6.2
06FEC:  MOVF   FF2,W
06FEE:  MOVWF  00
06FF0:  BCF    FF2.7
06FF2:  MOVLB  F
06FF4:  MOVLW  55
06FF6:  MOVWF  FA7
06FF8:  MOVLW  AA
06FFA:  MOVWF  FA7
06FFC:  BSF    FA6.1
06FFE:  BTFSC  FA6.1
07000:  BRA    6FFE
07002:  BCF    FA6.2
07004:  MOVF   00,W
07006:  IORWF  FF2,F
....................             delay_ms(50);    
07008:  MOVLW  32
0700A:  MOVLB  6
0700C:  MOVWF  x62
0700E:  MOVLB  0
07010:  CALL   1052
....................             write_eeprom(1,Testerilizacionp[1]); 
07014:  CLRF   FAA
07016:  MOVLW  01
07018:  MOVWF  FA9
0701A:  MOVFF  5D2,FA8
0701E:  BCF    FA6.6
07020:  BCF    FA6.7
07022:  BSF    FA6.2
07024:  MOVF   FF2,W
07026:  MOVWF  00
07028:  BCF    FF2.7
0702A:  MOVLB  F
0702C:  MOVLW  55
0702E:  MOVWF  FA7
07030:  MOVLW  AA
07032:  MOVWF  FA7
07034:  BSF    FA6.1
07036:  BTFSC  FA6.1
07038:  BRA    7036
0703A:  BCF    FA6.2
0703C:  MOVF   00,W
0703E:  IORWF  FF2,F
....................             delay_ms(50);    
07040:  MOVLW  32
07042:  MOVLB  6
07044:  MOVWF  x62
07046:  MOVLB  0
07048:  CALL   1052
....................             write_eeprom(2,Testerilizacionp[2]); 
0704C:  CLRF   FAA
0704E:  MOVLW  02
07050:  MOVWF  FA9
07052:  MOVFF  5D3,FA8
07056:  BCF    FA6.6
07058:  BCF    FA6.7
0705A:  BSF    FA6.2
0705C:  MOVF   FF2,W
0705E:  MOVWF  00
07060:  BCF    FF2.7
07062:  MOVLB  F
07064:  MOVLW  55
07066:  MOVWF  FA7
07068:  MOVLW  AA
0706A:  MOVWF  FA7
0706C:  BSF    FA6.1
0706E:  BTFSC  FA6.1
07070:  BRA    706E
07072:  BCF    FA6.2
07074:  MOVF   00,W
07076:  IORWF  FF2,F
....................             delay_ms(50);    
07078:  MOVLW  32
0707A:  MOVLB  6
0707C:  MOVWF  x62
0707E:  MOVLB  0
07080:  CALL   1052
....................             write_eeprom(3,Testerilizacionp[3]); 
07084:  CLRF   FAA
07086:  MOVLW  03
07088:  MOVWF  FA9
0708A:  MOVFF  5D4,FA8
0708E:  BCF    FA6.6
07090:  BCF    FA6.7
07092:  BSF    FA6.2
07094:  MOVF   FF2,W
07096:  MOVWF  00
07098:  BCF    FF2.7
0709A:  MOVLB  F
0709C:  MOVLW  55
0709E:  MOVWF  FA7
070A0:  MOVLW  AA
070A2:  MOVWF  FA7
070A4:  BSF    FA6.1
070A6:  BTFSC  FA6.1
070A8:  BRA    70A6
070AA:  BCF    FA6.2
070AC:  MOVF   00,W
070AE:  IORWF  FF2,F
....................             delay_ms(50);    
070B0:  MOVLW  32
070B2:  MOVLB  6
070B4:  MOVWF  x62
070B6:  MOVLB  0
070B8:  CALL   1052
....................             MensajeAlmacenado(); 
070BC:  CALL   37AA
....................             if((Testerilizacionp[0]==0)&&(Testerilizacionp[1]==0)&&(Testerilizacionp[2]==0)&&(Testerilizacionp[3]==0)) 
070C0:  MOVLB  5
070C2:  MOVF   xD1,F
070C4:  BNZ   70D6
070C6:  MOVF   xD2,F
070C8:  BNZ   70D6
070CA:  MOVF   xD3,F
070CC:  BNZ   70D6
070CE:  MOVF   xD4,F
070D0:  BNZ   70D6
....................                Infinito=1; 
070D2:  BSF    x93.1
....................             else 
070D4:  BRA    70D8
....................                Infinito=0; 
070D6:  BCF    x93.1
070D8:  MOVLB  0
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==7){ // Menu de Cambio de Contraseña 
070DA:  MOVLB  5
070DC:  MOVF   x97,W
070DE:  SUBLW  07
070E0:  BNZ   710A
....................          PidePassword(1,7,91,Password[0],Password[1],Password[2],Password[3],0); 
070E2:  MOVLW  01
070E4:  MOVLB  6
070E6:  MOVWF  x59
070E8:  MOVLW  07
070EA:  MOVWF  x5A
070EC:  MOVLW  5B
070EE:  MOVWF  x5B
070F0:  MOVFF  5D9,65C
070F4:  MOVFF  5DA,65D
070F8:  MOVFF  5DB,65E
070FC:  MOVFF  5DC,65F
07100:  CLRF   x60
07102:  MOVLB  0
07104:  CALL   3858
07108:  MOVLB  5
....................       }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
0710A:  MOVF   x97,W
0710C:  SUBLW  5B
0710E:  BNZ   7138
....................        PidePassword(1,91,91,Password[0],Password[1],Password[2],Password[3],1); 
07110:  MOVLW  01
07112:  MOVLB  6
07114:  MOVWF  x59
07116:  MOVLW  5B
07118:  MOVWF  x5A
0711A:  MOVWF  x5B
0711C:  MOVFF  5D9,65C
07120:  MOVFF  5DA,65D
07124:  MOVFF  5DB,65E
07128:  MOVFF  5DC,65F
0712C:  MOVLW  01
0712E:  MOVWF  x60
07130:  MOVLB  0
07132:  CALL   3858
07136:  MOVLB  5
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==20){ //Menu de Funcionamiento 
07138:  MOVF   x97,W
0713A:  SUBLW  14
0713C:  BTFSS  FD8.2
0713E:  GOTO   7B9C
....................        
....................       // Muestra imagen de fondo en Display GLCD 
....................       glcd_imagen(5); 
07142:  MOVLW  05
07144:  MOVLB  6
07146:  MOVWF  x59
07148:  MOVLB  0
0714A:  GOTO   4D06
....................        
....................       if(UP && DOWN){ 
0714E:  BSF    F92.4
07150:  BTFSC  F80.4
07152:  BRA    716C
07154:  BSF    F92.5
07156:  BTFSC  F80.5
07158:  BRA    716C
....................          glcd_init(ON);flag_display=!flag_display; 
0715A:  MOVLW  01
0715C:  MOVLB  6
0715E:  MOVWF  x59
07160:  MOVLB  0
07162:  CALL   26CE
07166:  MOVLB  5
07168:  BTG    x93.5
0716A:  MOVLB  0
....................       } 
....................   
....................       if(!TERM && !DOOR && !Finalizo){ 
0716C:  BSF    F93.7
0716E:  BTFSC  F81.7
07170:  BRA    72B8
07172:  BSF    F96.2
07174:  BTFSC  F84.2
07176:  BRA    72B8
07178:  MOVLB  5
0717A:  BTFSS  x93.7
0717C:  BRA    7182
0717E:  MOVLB  0
07180:  BRA    72B8
....................          Motor1_on; 
07182:  BCF    F8B.5
07184:  BCF    F94.5
....................          Motor2_on; 
07186:  BCF    F8B.6
07188:  BCF    F94.6
....................          if(Temperatura>=Setpoint-1.0){ 
0718A:  BSF    FD8.1
0718C:  MOVFF  61C,661
07190:  MOVFF  61B,660
07194:  MOVFF  61A,65F
07198:  MOVFF  619,65E
0719C:  MOVLB  6
0719E:  CLRF   x65
071A0:  CLRF   x64
071A2:  CLRF   x63
071A4:  MOVLW  7F
071A6:  MOVWF  x62
071A8:  MOVLB  0
071AA:  CALL   1246
071AE:  MOVFF  03,660
071B2:  MOVFF  02,65F
071B6:  MOVFF  01,65E
071BA:  MOVFF  00,65D
071BE:  MOVFF  614,664
071C2:  MOVFF  613,663
071C6:  MOVFF  612,662
071CA:  MOVFF  611,661
071CE:  CALL   1C42
071D2:  BC    71D6
071D4:  BNZ   724C
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
071D6:  MOVLB  6
071D8:  CLRF   x72
071DA:  MOVLW  37
071DC:  MOVWF  x73
071DE:  MOVLW  7F
071E0:  MOVWF  x74
071E2:  MOVLW  3F
071E4:  MOVWF  x75
071E6:  MOVLW  01
071E8:  MOVWF  x76
071EA:  CLRF   x77
071EC:  MOVLB  0
071EE:  CALL   2B28
....................             strcpy(Menus.Letra,"Status:Controlando"); 
071F2:  MOVLW  06
071F4:  MOVWF  FEA
071F6:  MOVLW  39
071F8:  MOVWF  FE9
071FA:  MOVFF  FF2,659
071FE:  BCF    FF2.7
07200:  MOVLW  00
07202:  CALL   0AB6
07206:  TBLRD*-
07208:  TBLRD*+
0720A:  MOVF   FF5,W
0720C:  MOVWF  FEE
0720E:  IORLW  00
07210:  BNZ   7208
07212:  MOVLB  6
07214:  BTFSC  x59.7
07216:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
07218:  MOVLW  06
0721A:  MOVWF  x62
0721C:  MOVLW  39
0721E:  MOVWF  x61
07220:  CLRF   x63
07222:  MOVLW  37
07224:  MOVWF  x64
07226:  MOVLW  02
07228:  MOVWF  x65
0722A:  MOVLW  01
0722C:  MOVWF  x66
0722E:  MOVLB  0
07230:  CALL   2BEA
....................             if(!Infinito) 
07234:  MOVLB  5
07236:  BTFSC  x93.1
07238:  BRA    723E
....................                tiempo_esterilizacion=1; 
0723A:  MOVLW  01
0723C:  MOVWF  x9D
....................                 
....................             Controla(); 
0723E:  MOVLB  0
07240:  CALL   4E26
....................             flag_tiempocalentamiento=0; 
07244:  MOVLB  5
07246:  BCF    x93.4
....................          }else{ 
07248:  BRA    72BA
0724A:  MOVLB  0
....................             flag_tiempocalentamiento=1; 
0724C:  MOVLB  5
0724E:  BSF    x93.4
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
07250:  MOVLB  6
07252:  CLRF   x72
07254:  MOVLW  37
07256:  MOVWF  x73
07258:  MOVLW  7F
0725A:  MOVWF  x74
0725C:  MOVLW  3F
0725E:  MOVWF  x75
07260:  MOVLW  01
07262:  MOVWF  x76
07264:  CLRF   x77
07266:  MOVLB  0
07268:  CALL   2B28
....................             strcpy(Menus.Letra,"Status:Calentando"); 
0726C:  MOVLW  06
0726E:  MOVWF  FEA
07270:  MOVLW  39
07272:  MOVWF  FE9
07274:  MOVFF  FF2,659
07278:  BCF    FF2.7
0727A:  MOVLW  00
0727C:  CALL   0AE8
07280:  TBLRD*-
07282:  TBLRD*+
07284:  MOVF   FF5,W
07286:  MOVWF  FEE
07288:  IORLW  00
0728A:  BNZ   7282
0728C:  MOVLB  6
0728E:  BTFSC  x59.7
07290:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
07292:  MOVLW  06
07294:  MOVWF  x62
07296:  MOVLW  39
07298:  MOVWF  x61
0729A:  CLRF   x63
0729C:  MOVLW  37
0729E:  MOVWF  x64
072A0:  MOVLW  02
072A2:  MOVWF  x65
072A4:  MOVLW  01
072A6:  MOVWF  x66
072A8:  MOVLB  0
072AA:  CALL   2BEA
....................             tiempo_esterilizacion=0; 
072AE:  MOVLB  5
072B0:  CLRF   x9D
....................             Controla(); 
072B2:  MOVLB  0
072B4:  CALL   4E26
072B8:  MOVLB  5
....................          } 
....................       } 
....................           
....................       if(DOOR){ 
072BA:  BSF    F96.2
072BC:  BTFSS  F84.2
072BE:  BRA    73E0
....................          Controlando=0; 
072C0:  CLRF   x90
....................          Motor1_off; 
072C2:  BSF    F8B.5
072C4:  BCF    F94.5
....................          Motor2_off; 
072C6:  BSF    F8B.6
072C8:  BCF    F94.6
....................          flag_tiempocalentamiento=0; 
072CA:  BCF    x93.4
....................          if(flag_clear2==0){ 
072CC:  BTFSC  x93.2
072CE:  BRA    7368
....................             Ganancia=read_eeprom(14); 
072D0:  MOVFF  FF2,659
072D4:  BCF    FF2.7
072D6:  CLRF   FAA
072D8:  MOVLW  0E
072DA:  MOVWF  FA9
072DC:  BCF    FA6.6
072DE:  BCF    FA6.7
072E0:  BSF    FA6.0
072E2:  MOVF   FA8,W
072E4:  MOVLB  6
072E6:  BTFSC  x59.7
072E8:  BSF    FF2.7
072EA:  CLRF   x60
072EC:  MOVWF  x5F
072EE:  MOVLB  0
072F0:  CALL   10B2
072F4:  MOVFF  03,604
072F8:  MOVFF  02,603
072FC:  MOVFF  01,602
07300:  MOVFF  00,601
....................             delay_ms(10); 
07304:  MOVLW  0A
07306:  MOVLB  6
07308:  MOVWF  x62
0730A:  MOVLB  0
0730C:  CALL   1052
....................             Ganancia=Ganancia*(Setpoint/44.5); 
07310:  MOVFF  61C,65D
07314:  MOVFF  61B,65C
07318:  MOVFF  61A,65B
0731C:  MOVFF  619,65A
07320:  MOVLB  6
07322:  CLRF   x61
07324:  CLRF   x60
07326:  MOVLW  32
07328:  MOVWF  x5F
0732A:  MOVLW  84
0732C:  MOVWF  x5E
0732E:  MOVLB  0
07330:  CALL   10E8
07334:  MOVFF  604,67C
07338:  MOVFF  603,67B
0733C:  MOVFF  602,67A
07340:  MOVFF  601,679
07344:  MOVFF  03,680
07348:  MOVFF  02,67F
0734C:  MOVFF  01,67E
07350:  MOVFF  00,67D
07354:  CALL   2D3C
07358:  MOVFF  03,604
0735C:  MOVFF  02,603
07360:  MOVFF  01,602
07364:  MOVFF  00,601
....................          } 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
07368:  MOVLB  6
0736A:  CLRF   x72
0736C:  MOVLW  37
0736E:  MOVWF  x73
07370:  MOVLW  7F
07372:  MOVWF  x74
07374:  MOVLW  3F
07376:  MOVWF  x75
07378:  MOVLW  01
0737A:  MOVWF  x76
0737C:  CLRF   x77
0737E:  MOVLB  0
07380:  CALL   2B28
....................          tiempo_esterilizacion=0; 
07384:  MOVLB  5
07386:  CLRF   x9D
....................          SSR_off; 
07388:  BSF    F8B.2
0738A:  BCF    F94.2
....................          Tpulso=0.0; 
0738C:  CLRF   xF0
0738E:  CLRF   xEF
07390:  CLRF   xEE
07392:  CLRF   xED
....................          flag_clear2=1; 
07394:  BSF    x93.2
....................          flag_ganancia=0; 
07396:  CLRF   x8E
....................          strcpy(Menus.Letra,"Status:Puerta Abierta"); 
07398:  MOVLW  06
0739A:  MOVWF  FEA
0739C:  MOVLW  39
0739E:  MOVWF  FE9
073A0:  MOVFF  FF2,659
073A4:  BCF    FF2.7
073A6:  MOVLW  00
073A8:  MOVLB  0
073AA:  CALL   0B18
073AE:  TBLRD*-
073B0:  TBLRD*+
073B2:  MOVF   FF5,W
073B4:  MOVWF  FEE
073B6:  IORLW  00
073B8:  BNZ   73B0
073BA:  MOVLB  6
073BC:  BTFSC  x59.7
073BE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
073C0:  MOVLW  06
073C2:  MOVWF  x62
073C4:  MOVLW  39
073C6:  MOVWF  x61
073C8:  CLRF   x63
073CA:  MOVLW  37
073CC:  MOVWF  x64
073CE:  MOVLW  02
073D0:  MOVWF  x65
073D2:  MOVLW  01
073D4:  MOVWF  x66
073D6:  MOVLB  0
073D8:  CALL   2BEA
....................       }else{ 
073DC:  BRA    7406
073DE:  MOVLB  5
....................          if(flag_clear2==1) 
073E0:  BTFSS  x93.2
073E2:  BRA    7404
....................          { 
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
073E4:  MOVLB  6
073E6:  CLRF   x72
073E8:  MOVLW  37
073EA:  MOVWF  x73
073EC:  MOVLW  7F
073EE:  MOVWF  x74
073F0:  MOVLW  3F
073F2:  MOVWF  x75
073F4:  MOVLW  01
073F6:  MOVWF  x76
073F8:  CLRF   x77
073FA:  MOVLB  0
073FC:  CALL   2B28
....................             flag_clear2=0; 
07400:  MOVLB  5
07402:  BCF    x93.2
07404:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(TERM){ 
07406:  BSF    F93.7
07408:  BTFSS  F81.7
0740A:  BRA    7494
....................          Controlando=0; 
0740C:  MOVLB  5
0740E:  CLRF   x90
....................          Motor1_off; 
07410:  BSF    F8B.5
07412:  BCF    F94.5
....................          Motor2_off;          
07414:  BSF    F8B.6
07416:  BCF    F94.6
....................          flag_tiempocalentamiento=0; 
07418:  BCF    x93.4
....................          if(flag_clear3==0){ 
0741A:  BTFSC  x93.3
0741C:  BRA    744E
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
0741E:  MOVLB  6
07420:  CLRF   x72
07422:  MOVLW  37
07424:  MOVWF  x73
07426:  MOVLW  7F
07428:  MOVWF  x74
0742A:  MOVLW  3F
0742C:  MOVWF  x75
0742E:  MOVLW  01
07430:  MOVWF  x76
07432:  CLRF   x77
07434:  MOVLB  0
07436:  CALL   2B28
....................             tiempo_esterilizacion=0; 
0743A:  MOVLB  5
0743C:  CLRF   x9D
....................             SSR_off; 
0743E:  BSF    F8B.2
07440:  BCF    F94.2
....................             Tpulso=0.0; 
07442:  CLRF   xF0
07444:  CLRF   xEF
07446:  CLRF   xEE
07448:  CLRF   xED
....................             flag_clear3=1; 
0744A:  BSF    x93.3
....................             flag_ganancia=0; 
0744C:  CLRF   x8E
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 01"); 
0744E:  MOVLW  06
07450:  MOVWF  FEA
07452:  MOVLW  39
07454:  MOVWF  FE9
07456:  MOVFF  FF2,659
0745A:  BCF    FF2.7
0745C:  MOVLW  00
0745E:  MOVLB  0
07460:  CALL   0B4C
07464:  TBLRD*-
07466:  TBLRD*+
07468:  MOVF   FF5,W
0746A:  MOVWF  FEE
0746C:  IORLW  00
0746E:  BNZ   7466
07470:  MOVLB  6
07472:  BTFSC  x59.7
07474:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1);          
07476:  MOVLW  06
07478:  MOVWF  x62
0747A:  MOVLW  39
0747C:  MOVWF  x61
0747E:  CLRF   x63
07480:  MOVLW  37
07482:  MOVWF  x64
07484:  MOVLW  02
07486:  MOVWF  x65
07488:  MOVLW  01
0748A:  MOVWF  x66
0748C:  MOVLB  0
0748E:  CALL   2BEA
....................       }else{ 
07492:  BRA    74BA
....................          if(flag_clear3==1){ 
07494:  MOVLB  5
07496:  BTFSS  x93.3
07498:  BRA    74BA
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
0749A:  MOVLB  6
0749C:  CLRF   x72
0749E:  MOVLW  37
074A0:  MOVWF  x73
074A2:  MOVLW  7F
074A4:  MOVWF  x74
074A6:  MOVLW  3F
074A8:  MOVWF  x75
074AA:  MOVLW  01
074AC:  MOVWF  x76
074AE:  CLRF   x77
074B0:  MOVLB  0
074B2:  CALL   2B28
....................             flag_clear3=0; 
074B6:  MOVLB  5
074B8:  BCF    x93.3
....................          } 
....................       }    
....................          
....................       if(Lectura==1){                   
074BA:  MOVLB  5
074BC:  BTFSS  x87.5
074BE:  BRA    7A4E
....................          Lectura=0; 
074C0:  BCF    x87.5
....................          Potencia=(100.0/Tciclo)*Tpulso; 
074C2:  MOVLB  6
074C4:  CLRF   x5D
074C6:  CLRF   x5C
074C8:  MOVLW  48
074CA:  MOVWF  x5B
074CC:  MOVLW  85
074CE:  MOVWF  x5A
074D0:  MOVFF  5EC,661
074D4:  MOVFF  5EB,660
074D8:  MOVFF  5EA,65F
074DC:  MOVFF  5E9,65E
074E0:  MOVLB  0
074E2:  CALL   10E8
074E6:  MOVFF  00,659
074EA:  MOVFF  01,65A
074EE:  MOVFF  02,65B
074F2:  MOVFF  03,65C
074F6:  MOVFF  03,67C
074FA:  MOVFF  02,67B
074FE:  MOVFF  01,67A
07502:  MOVFF  00,679
07506:  MOVFF  5F0,680
0750A:  MOVFF  5EF,67F
0750E:  MOVFF  5EE,67E
07512:  MOVFF  5ED,67D
07516:  CALL   2D3C
0751A:  MOVFF  03,5B4
0751E:  MOVFF  02,5B3
07522:  MOVFF  01,5B2
07526:  MOVFF  00,5B1
....................           
....................  //----------------Muestra Temperatura-------------------------- 
....................          if(Source==1){ 
0752A:  MOVLB  5
0752C:  DECFSZ x96,W
0752E:  BRA    762E
....................             if((V0<180 || V0>1000)){ 
07530:  MOVFF  5E0,660
07534:  MOVFF  5DF,65F
07538:  MOVFF  5DE,65E
0753C:  MOVFF  5DD,65D
07540:  MOVLB  6
07542:  CLRF   x64
07544:  CLRF   x63
07546:  MOVLW  34
07548:  MOVWF  x62
0754A:  MOVLW  86
0754C:  MOVWF  x61
0754E:  MOVLB  0
07550:  CALL   1C42
07554:  BC    757C
07556:  MOVLB  6
07558:  CLRF   x60
0755A:  CLRF   x5F
0755C:  MOVLW  7A
0755E:  MOVWF  x5E
07560:  MOVLW  88
07562:  MOVWF  x5D
07564:  MOVFF  5E0,664
07568:  MOVFF  5DF,663
0756C:  MOVFF  5DE,662
07570:  MOVFF  5DD,661
07574:  MOVLB  0
07576:  CALL   1C42
0757A:  BNC   75E4
....................                glcd_rect(15, 29, 69, 45, YES, OFF); 
0757C:  MOVLW  0F
0757E:  MOVLB  6
07580:  MOVWF  x72
07582:  MOVLW  1D
07584:  MOVWF  x73
07586:  MOVLW  45
07588:  MOVWF  x74
0758A:  MOVLW  2D
0758C:  MOVWF  x75
0758E:  MOVLW  01
07590:  MOVWF  x76
07592:  CLRF   x77
07594:  MOVLB  0
07596:  CALL   2B28
....................                strcpy(Menus.Letra,"-----");displayMenu(Menus.Letra,15,29,2,2); 
0759A:  MOVLW  06
0759C:  MOVWF  FEA
0759E:  MOVLW  39
075A0:  MOVWF  FE9
075A2:  MOVFF  FF2,659
075A6:  BCF    FF2.7
075A8:  MOVLW  00
075AA:  CALL   0B7C
075AE:  TBLRD*-
075B0:  TBLRD*+
075B2:  MOVF   FF5,W
075B4:  MOVWF  FEE
075B6:  IORLW  00
075B8:  BNZ   75B0
075BA:  MOVLB  6
075BC:  BTFSC  x59.7
075BE:  BSF    FF2.7
075C0:  MOVLW  06
075C2:  MOVWF  x62
075C4:  MOVLW  39
075C6:  MOVWF  x61
075C8:  MOVLW  0F
075CA:  MOVWF  x63
075CC:  MOVLW  1D
075CE:  MOVWF  x64
075D0:  MOVLW  02
075D2:  MOVWF  x65
075D4:  MOVWF  x66
075D6:  MOVLB  0
075D8:  CALL   2BEA
....................                Desconectado=1; 
075DC:  MOVLB  5
075DE:  BSF    x87.0
....................             }else{ 
075E0:  BRA    762E
075E2:  MOVLB  0
....................                if(Desconectado==1){ 
075E4:  MOVLB  5
075E6:  BTFSS  x87.0
075E8:  BRA    762E
....................                   Desconectado=0; 
075EA:  BCF    x87.0
....................                   delay_ms(2000); 
075EC:  MOVLW  08
075EE:  MOVLB  6
075F0:  MOVWF  x59
075F2:  MOVLW  FA
075F4:  MOVWF  x62
075F6:  MOVLB  0
075F8:  CALL   1052
075FC:  MOVLB  6
075FE:  DECFSZ x59,F
07600:  BRA    75F2
....................                   for(i=0;i<80;i++){ 
07602:  MOVLB  5
07604:  CLRF   x99
07606:  MOVF   x99,W
07608:  SUBLW  4F
0760A:  BNC   762E
....................                      Temperatura=Leer_Sensor(80); 
0760C:  MOVLW  50
0760E:  MOVLB  6
07610:  MOVWF  x59
07612:  MOVLB  0
07614:  CALL   2E54
07618:  MOVFF  03,614
0761C:  MOVFF  02,613
07620:  MOVFF  01,612
07624:  MOVFF  00,611
....................                   } 
07628:  MOVLB  5
0762A:  INCF   x99,F
0762C:  BRA    7606
....................                } 
....................             } 
....................          } 
....................          displayT(Temperatura,15,29,2); 
0762E:  MOVFF  614,65C
07632:  MOVFF  613,65B
07636:  MOVFF  612,65A
0763A:  MOVFF  611,659
0763E:  MOVLW  0F
07640:  MOVLB  6
07642:  MOVWF  x5D
07644:  MOVLW  1D
07646:  MOVWF  x5E
07648:  MOVLW  02
0764A:  MOVWF  x5F
0764C:  MOVLB  0
0764E:  CALL   5756
....................          glcd_circle(74,30,2,NO,ON); 
07652:  MOVLW  4A
07654:  MOVLB  6
07656:  MOVWF  x6E
07658:  MOVLW  1E
0765A:  MOVWF  x6F
0765C:  MOVLW  02
0765E:  MOVWF  x70
07660:  CLRF   x71
07662:  MOVLW  01
07664:  MOVWF  x72
07666:  MOVLB  0
07668:  CALL   40DE
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,75,30,2,2); 
0766C:  MOVLW  06
0766E:  MOVWF  FEA
07670:  MOVLW  39
07672:  MOVWF  FE9
07674:  MOVFF  FF2,659
07678:  BCF    FF2.7
0767A:  MOVLW  00
0767C:  CALL   06D2
07680:  TBLRD*-
07682:  TBLRD*+
07684:  MOVF   FF5,W
07686:  MOVWF  FEE
07688:  IORLW  00
0768A:  BNZ   7682
0768C:  MOVLB  6
0768E:  BTFSC  x59.7
07690:  BSF    FF2.7
07692:  MOVLW  06
07694:  MOVWF  x62
07696:  MOVLW  39
07698:  MOVWF  x61
0769A:  MOVLW  4B
0769C:  MOVWF  x63
0769E:  MOVLW  1E
076A0:  MOVWF  x64
076A2:  MOVLW  02
076A4:  MOVWF  x65
076A6:  MOVWF  x66
076A8:  MOVLB  0
076AA:  CALL   2BEA
....................           
....................          displayT(Setpoint,30,46,1); 
076AE:  MOVFF  61C,65C
076B2:  MOVFF  61B,65B
076B6:  MOVFF  61A,65A
076BA:  MOVFF  619,659
076BE:  MOVLW  1E
076C0:  MOVLB  6
076C2:  MOVWF  x5D
076C4:  MOVLW  2E
076C6:  MOVWF  x5E
076C8:  MOVLW  01
076CA:  MOVWF  x5F
076CC:  MOVLB  0
076CE:  CALL   5756
....................          glcd_circle(55,47,1,NO,ON); 
076D2:  MOVLW  37
076D4:  MOVLB  6
076D6:  MOVWF  x6E
076D8:  MOVLW  2F
076DA:  MOVWF  x6F
076DC:  MOVLW  01
076DE:  MOVWF  x70
076E0:  CLRF   x71
076E2:  MOVWF  x72
076E4:  MOVLB  0
076E6:  CALL   40DE
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,58,45,2,1); 
076EA:  MOVLW  06
076EC:  MOVWF  FEA
076EE:  MOVLW  39
076F0:  MOVWF  FE9
076F2:  MOVFF  FF2,659
076F6:  BCF    FF2.7
076F8:  MOVLW  00
076FA:  CALL   06D2
076FE:  TBLRD*-
07700:  TBLRD*+
07702:  MOVF   FF5,W
07704:  MOVWF  FEE
07706:  IORLW  00
07708:  BNZ   7700
0770A:  MOVLB  6
0770C:  BTFSC  x59.7
0770E:  BSF    FF2.7
07710:  MOVLW  06
07712:  MOVWF  x62
07714:  MOVLW  39
07716:  MOVWF  x61
07718:  MOVLW  3A
0771A:  MOVWF  x63
0771C:  MOVLW  2D
0771E:  MOVWF  x64
07720:  MOVLW  02
07722:  MOVWF  x65
07724:  MOVLW  01
07726:  MOVWF  x66
07728:  MOVLB  0
0772A:  CALL   2BEA
....................          strcpy(Menus.Letra,"Temp:");displayMenu(Menus.Letra,0,45,2,1);  
0772E:  MOVLW  06
07730:  MOVWF  FEA
07732:  MOVLW  39
07734:  MOVWF  FE9
07736:  MOVFF  FF2,659
0773A:  BCF    FF2.7
0773C:  MOVLW  00
0773E:  CALL   0BA0
07742:  TBLRD*-
07744:  TBLRD*+
07746:  MOVF   FF5,W
07748:  MOVWF  FEE
0774A:  IORLW  00
0774C:  BNZ   7744
0774E:  MOVLB  6
07750:  BTFSC  x59.7
07752:  BSF    FF2.7
07754:  MOVLW  06
07756:  MOVWF  x62
07758:  MOVLW  39
0775A:  MOVWF  x61
0775C:  CLRF   x63
0775E:  MOVLW  2D
07760:  MOVWF  x64
07762:  MOVLW  02
07764:  MOVWF  x65
07766:  MOVLW  01
07768:  MOVWF  x66
0776A:  MOVLB  0
0776C:  CALL   2BEA
....................           
....................          displayTiempo(Potencia,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
07770:  MOVFF  5B4,65C
07774:  MOVFF  5B3,65B
07778:  MOVFF  5B2,65A
0777C:  MOVFF  5B1,659
07780:  CALL   4308
07784:  MOVFF  01,659
07788:  MOVFF  01,65A
0778C:  MOVLW  61
0778E:  MOVLB  6
07790:  MOVWF  x5B
07792:  MOVLW  2A
07794:  MOVWF  x5C
07796:  MOVLW  03
07798:  MOVWF  x5D
0779A:  MOVLW  01
0779C:  MOVWF  x5E
0779E:  MOVLB  0
077A0:  CALL   4B40
077A4:  MOVLW  06
077A6:  MOVWF  FEA
077A8:  MOVLW  39
077AA:  MOVWF  FE9
077AC:  MOVFF  FF2,659
077B0:  BCF    FF2.7
077B2:  MOVLW  00
077B4:  CALL   0BC4
077B8:  TBLRD*-
077BA:  TBLRD*+
077BC:  MOVF   FF5,W
077BE:  MOVWF  FEE
077C0:  IORLW  00
077C2:  BNZ   77BA
077C4:  MOVLB  6
077C6:  BTFSC  x59.7
077C8:  BSF    FF2.7
077CA:  MOVLW  06
077CC:  MOVWF  x62
077CE:  MOVLW  39
077D0:  MOVWF  x61
077D2:  MOVLW  73
077D4:  MOVWF  x63
077D6:  MOVLW  2A
077D8:  MOVWF  x64
077DA:  MOVLW  02
077DC:  MOVWF  x65
077DE:  MOVLW  01
077E0:  MOVWF  x66
077E2:  MOVLB  0
077E4:  CALL   2BEA
....................          
....................          if(flag_display==1) 
077E8:  MOVLB  5
077EA:  BTFSS  x93.5
077EC:  BRA    7826
....................             displayTiempo(Ganancia,66,45,3,1); 
077EE:  MOVFF  604,65C
077F2:  MOVFF  603,65B
077F6:  MOVFF  602,65A
077FA:  MOVFF  601,659
077FE:  MOVLB  0
07800:  CALL   4308
07804:  MOVFF  01,659
07808:  MOVFF  01,65A
0780C:  MOVLW  42
0780E:  MOVLB  6
07810:  MOVWF  x5B
07812:  MOVLW  2D
07814:  MOVWF  x5C
07816:  MOVLW  03
07818:  MOVWF  x5D
0781A:  MOVLW  01
0781C:  MOVWF  x5E
0781E:  MOVLB  0
07820:  CALL   4B40
....................             //displayTemperatura(Prom,97,13,0,1); 
....................             //displayT(Tpulsomin,60,46,1); 
....................          else 
07824:  BRA    7844
....................             //displayT(V0,66,45,1); 
....................             glcd_rect(66, 45, 88, 52, YES, OFF); 
07826:  MOVLW  42
07828:  MOVLB  6
0782A:  MOVWF  x72
0782C:  MOVLW  2D
0782E:  MOVWF  x73
07830:  MOVLW  58
07832:  MOVWF  x74
07834:  MOVLW  34
07836:  MOVWF  x75
07838:  MOVLW  01
0783A:  MOVWF  x76
0783C:  CLRF   x77
0783E:  MOVLB  0
07840:  CALL   2B28
....................           
....................          // Muestra Valor de esterilizacion Programado. 
....................          displayTiempo(Testerilizacion[3],20,2,0,2);displayTiempo(Testerilizacion[2],33,2,0,2); 
07844:  MOVFF  5D0,65A
07848:  MOVLW  14
0784A:  MOVLB  6
0784C:  MOVWF  x5B
0784E:  MOVLW  02
07850:  MOVWF  x5C
07852:  CLRF   x5D
07854:  MOVWF  x5E
07856:  MOVLB  0
07858:  CALL   4B40
0785C:  MOVFF  5CF,65A
07860:  MOVLW  21
07862:  MOVLB  6
07864:  MOVWF  x5B
07866:  MOVLW  02
07868:  MOVWF  x5C
0786A:  CLRF   x5D
0786C:  MOVWF  x5E
0786E:  MOVLB  0
07870:  CALL   4B40
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,46,2,2,2);  
07874:  MOVLW  06
07876:  MOVWF  FEA
07878:  MOVLW  39
0787A:  MOVWF  FE9
0787C:  MOVFF  FF2,659
07880:  BCF    FF2.7
07882:  MOVLW  00
07884:  CALL   0A96
07888:  TBLRD*-
0788A:  TBLRD*+
0788C:  MOVF   FF5,W
0788E:  MOVWF  FEE
07890:  IORLW  00
07892:  BNZ   788A
07894:  MOVLB  6
07896:  BTFSC  x59.7
07898:  BSF    FF2.7
0789A:  MOVLW  06
0789C:  MOVWF  x62
0789E:  MOVLW  39
078A0:  MOVWF  x61
078A2:  MOVLW  2E
078A4:  MOVWF  x63
078A6:  MOVLW  02
078A8:  MOVWF  x64
078AA:  MOVWF  x65
078AC:  MOVWF  x66
078AE:  MOVLB  0
078B0:  CALL   2BEA
....................          displayTiempo(Testerilizacion[1],55,2,0,2);displayTiempo(Testerilizacion[0],68,2,0,2); 
078B4:  MOVFF  5CE,65A
078B8:  MOVLW  37
078BA:  MOVLB  6
078BC:  MOVWF  x5B
078BE:  MOVLW  02
078C0:  MOVWF  x5C
078C2:  CLRF   x5D
078C4:  MOVWF  x5E
078C6:  MOVLB  0
078C8:  CALL   4B40
078CC:  MOVFF  5CD,65A
078D0:  MOVLW  44
078D2:  MOVLB  6
078D4:  MOVWF  x5B
078D6:  MOVLW  02
078D8:  MOVWF  x5C
078DA:  CLRF   x5D
078DC:  MOVWF  x5E
078DE:  MOVLB  0
078E0:  CALL   4B40
....................           
....................          // Muestra Valor de esterilizacion actual. 
....................          strcpy(Menus.Letra,"Time:");displayMenu(Menus.Letra,0,18,2,1);  
078E4:  MOVLW  06
078E6:  MOVWF  FEA
078E8:  MOVLW  39
078EA:  MOVWF  FE9
078EC:  MOVFF  FF2,659
078F0:  BCF    FF2.7
078F2:  MOVLW  00
078F4:  CALL   0BE4
078F8:  TBLRD*-
078FA:  TBLRD*+
078FC:  MOVF   FF5,W
078FE:  MOVWF  FEE
07900:  IORLW  00
07902:  BNZ   78FA
07904:  MOVLB  6
07906:  BTFSC  x59.7
07908:  BSF    FF2.7
0790A:  MOVLW  06
0790C:  MOVWF  x62
0790E:  MOVLW  39
07910:  MOVWF  x61
07912:  CLRF   x63
07914:  MOVLW  12
07916:  MOVWF  x64
07918:  MOVLW  02
0791A:  MOVWF  x65
0791C:  MOVLW  01
0791E:  MOVWF  x66
07920:  MOVLB  0
07922:  CALL   2BEA
....................          displayTiempo(Testerilizacionp[3],30,18,0,1);displayTiempo(Testerilizacionp[2],36,18,0,1); 
07926:  MOVFF  5D4,65A
0792A:  MOVLW  1E
0792C:  MOVLB  6
0792E:  MOVWF  x5B
07930:  MOVLW  12
07932:  MOVWF  x5C
07934:  CLRF   x5D
07936:  MOVLW  01
07938:  MOVWF  x5E
0793A:  MOVLB  0
0793C:  CALL   4B40
07940:  MOVFF  5D3,65A
07944:  MOVLW  24
07946:  MOVLB  6
07948:  MOVWF  x5B
0794A:  MOVLW  12
0794C:  MOVWF  x5C
0794E:  CLRF   x5D
07950:  MOVLW  01
07952:  MOVWF  x5E
07954:  MOVLB  0
07956:  CALL   4B40
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,42,18,2,1);  
0795A:  MOVLW  06
0795C:  MOVWF  FEA
0795E:  MOVLW  39
07960:  MOVWF  FE9
07962:  MOVFF  FF2,659
07966:  BCF    FF2.7
07968:  MOVLW  00
0796A:  CALL   0A96
0796E:  TBLRD*-
07970:  TBLRD*+
07972:  MOVF   FF5,W
07974:  MOVWF  FEE
07976:  IORLW  00
07978:  BNZ   7970
0797A:  MOVLB  6
0797C:  BTFSC  x59.7
0797E:  BSF    FF2.7
07980:  MOVLW  06
07982:  MOVWF  x62
07984:  MOVLW  39
07986:  MOVWF  x61
07988:  MOVLW  2A
0798A:  MOVWF  x63
0798C:  MOVLW  12
0798E:  MOVWF  x64
07990:  MOVLW  02
07992:  MOVWF  x65
07994:  MOVLW  01
07996:  MOVWF  x66
07998:  MOVLB  0
0799A:  CALL   2BEA
....................          displayTiempo(Testerilizacionp[1],48,18,0,1);displayTiempo(Testerilizacionp[0],54,18,0,1); 
0799E:  MOVFF  5D2,65A
079A2:  MOVLW  30
079A4:  MOVLB  6
079A6:  MOVWF  x5B
079A8:  MOVLW  12
079AA:  MOVWF  x5C
079AC:  CLRF   x5D
079AE:  MOVLW  01
079B0:  MOVWF  x5E
079B2:  MOVLB  0
079B4:  CALL   4B40
079B8:  MOVFF  5D1,65A
079BC:  MOVLW  36
079BE:  MOVLB  6
079C0:  MOVWF  x5B
079C2:  MOVLW  12
079C4:  MOVWF  x5C
079C6:  CLRF   x5D
079C8:  MOVLW  01
079CA:  MOVWF  x5E
079CC:  MOVLB  0
079CE:  CALL   4B40
....................          strcpy(Menus.Letra,"(H:M)");displayMenu(Menus.Letra,60,18,2,1);  
079D2:  MOVLW  06
079D4:  MOVWF  FEA
079D6:  MOVLW  39
079D8:  MOVWF  FE9
079DA:  MOVFF  FF2,659
079DE:  BCF    FF2.7
079E0:  MOVLW  00
079E2:  CALL   0C08
079E6:  TBLRD*-
079E8:  TBLRD*+
079EA:  MOVF   FF5,W
079EC:  MOVWF  FEE
079EE:  IORLW  00
079F0:  BNZ   79E8
079F2:  MOVLB  6
079F4:  BTFSC  x59.7
079F6:  BSF    FF2.7
079F8:  MOVLW  06
079FA:  MOVWF  x62
079FC:  MOVLW  39
079FE:  MOVWF  x61
07A00:  MOVLW  3C
07A02:  MOVWF  x63
07A04:  MOVLW  12
07A06:  MOVWF  x64
07A08:  MOVLW  02
07A0A:  MOVWF  x65
07A0C:  MOVLW  01
07A0E:  MOVWF  x66
07A10:  MOVLB  0
07A12:  CALL   2BEA
....................           
....................          glcd_rect(0, 0, 89, 27, NO, ON); 
07A16:  MOVLB  6
07A18:  CLRF   x72
07A1A:  CLRF   x73
07A1C:  MOVLW  59
07A1E:  MOVWF  x74
07A20:  MOVLW  1B
07A22:  MOVWF  x75
07A24:  CLRF   x76
07A26:  MOVLW  01
07A28:  MOVWF  x77
07A2A:  MOVLB  0
07A2C:  CALL   2B28
....................          glcd_rect(0, 27, 89, 54, NO, ON); 
07A30:  MOVLB  6
07A32:  CLRF   x72
07A34:  MOVLW  1B
07A36:  MOVWF  x73
07A38:  MOVLW  59
07A3A:  MOVWF  x74
07A3C:  MOVLW  36
07A3E:  MOVWF  x75
07A40:  CLRF   x76
07A42:  MOVLW  01
07A44:  MOVWF  x77
07A46:  MOVLB  0
07A48:  CALL   2B28
07A4C:  MOVLB  5
....................       }  
....................        
....................       // Si cumplio el tiempo de esterilización, Muestre ciclo finalizado y detenga control de temperatura. 
....................       if((Testerilizacionp[0]>0)||(Testerilizacionp[1]>0)||(Testerilizacionp[2]>0)||(Testerilizacionp[3]>0)){ 
07A4E:  BTFSC  xD1.7
07A50:  BRA    7A58
07A52:  MOVF   xD1,W
07A54:  SUBLW  00
07A56:  BNC   7A76
07A58:  BTFSC  xD2.7
07A5A:  BRA    7A62
07A5C:  MOVF   xD2,W
07A5E:  SUBLW  00
07A60:  BNC   7A76
07A62:  BTFSC  xD3.7
07A64:  BRA    7A6C
07A66:  MOVF   xD3,W
07A68:  SUBLW  00
07A6A:  BNC   7A76
07A6C:  BTFSC  xD4.7
07A6E:  BRA    7B32
07A70:  MOVF   xD4,W
07A72:  SUBLW  00
07A74:  BC    7B32
....................          if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1){ 
07A76:  MOVF   xD1,W
07A78:  XORLW  80
07A7A:  MOVWF  00
07A7C:  MOVF   xCD,W
07A7E:  XORLW  80
07A80:  SUBWF  00,W
07A82:  BZ    7A86
07A84:  BC    7B32
07A86:  MOVF   xD2,W
07A88:  XORLW  80
07A8A:  MOVWF  00
07A8C:  MOVF   xCE,W
07A8E:  XORLW  80
07A90:  SUBWF  00,W
07A92:  BZ    7A96
07A94:  BC    7B32
07A96:  MOVF   xD3,W
07A98:  XORLW  80
07A9A:  MOVWF  00
07A9C:  MOVF   xCF,W
07A9E:  XORLW  80
07AA0:  SUBWF  00,W
07AA2:  BZ    7AA6
07AA4:  BC    7B32
07AA6:  MOVF   xD4,W
07AA8:  XORLW  80
07AAA:  MOVWF  00
07AAC:  MOVF   xD0,W
07AAE:  XORLW  80
07AB0:  SUBWF  00,W
07AB2:  BZ    7AB6
07AB4:  BC    7B32
07AB6:  DECFSZ x9D,W
07AB8:  BRA    7B32
....................             if(flag_clear==0){ 
07ABA:  BTFSC  x93.0
07ABC:  BRA    7AEC
....................                glcd_fillScreen(OFF); 
07ABE:  MOVLB  6
07AC0:  CLRF   x61
07AC2:  MOVLB  0
07AC4:  CALL   25BC
....................                //glcd_rect(0, 55, 127, 63, YES, OFF); 
....................                tiempo_esterilizacion=0; 
07AC8:  MOVLB  5
07ACA:  CLRF   x9D
....................                Pausa=2; 
07ACC:  MOVLW  02
07ACE:  MOVWF  x9A
....................                flag_clear=1; 
07AD0:  BSF    x93.0
....................                SSR_off; 
07AD2:  BSF    F8B.2
07AD4:  BCF    F94.2
....................                Motor1_off; 
07AD6:  BSF    F8B.5
07AD8:  BCF    F94.5
....................                Motor2_off; 
07ADA:  BSF    F8B.6
07ADC:  BCF    F94.6
....................                Controlando=0; 
07ADE:  CLRF   x90
....................                Tpulso=0.0; 
07AE0:  CLRF   xF0
07AE2:  CLRF   xEF
07AE4:  CLRF   xEE
07AE6:  CLRF   xED
....................                flag_ganancia=0; 
07AE8:  CLRF   x8E
....................                Finalizo=1; 
07AEA:  BSF    x93.7
....................             } 
....................             strcpy(Menus.Letra,"Status:Finalizado"); 
07AEC:  MOVLW  06
07AEE:  MOVWF  FEA
07AF0:  MOVLW  39
07AF2:  MOVWF  FE9
07AF4:  MOVFF  FF2,659
07AF8:  BCF    FF2.7
07AFA:  MOVLW  00
07AFC:  MOVLB  0
07AFE:  CALL   0C2C
07B02:  TBLRD*-
07B04:  TBLRD*+
07B06:  MOVF   FF5,W
07B08:  MOVWF  FEE
07B0A:  IORLW  00
07B0C:  BNZ   7B04
07B0E:  MOVLB  6
07B10:  BTFSC  x59.7
07B12:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
07B14:  MOVLW  06
07B16:  MOVWF  x62
07B18:  MOVLW  39
07B1A:  MOVWF  x61
07B1C:  CLRF   x63
07B1E:  MOVLW  37
07B20:  MOVWF  x64
07B22:  MOVLW  02
07B24:  MOVWF  x65
07B26:  MOVLW  01
07B28:  MOVWF  x66
07B2A:  MOVLB  0
07B2C:  CALL   2BEA
07B30:  MOVLB  5
....................          } 
....................       } 
....................         
....................       if(Finalizo){ 
07B32:  BTFSS  x93.7
07B34:  BRA    7B94
....................          strcpy(Menus.Letra,"Status:Finalizado"); 
07B36:  MOVLW  06
07B38:  MOVWF  FEA
07B3A:  MOVLW  39
07B3C:  MOVWF  FE9
07B3E:  MOVFF  FF2,659
07B42:  BCF    FF2.7
07B44:  MOVLW  00
07B46:  MOVLB  0
07B48:  CALL   0C2C
07B4C:  TBLRD*-
07B4E:  TBLRD*+
07B50:  MOVF   FF5,W
07B52:  MOVWF  FEE
07B54:  IORLW  00
07B56:  BNZ   7B4E
07B58:  MOVLB  6
07B5A:  BTFSC  x59.7
07B5C:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
07B5E:  MOVLW  06
07B60:  MOVWF  x62
07B62:  MOVLW  39
07B64:  MOVWF  x61
07B66:  CLRF   x63
07B68:  MOVLW  37
07B6A:  MOVWF  x64
07B6C:  MOVLW  02
07B6E:  MOVWF  x65
07B70:  MOVLW  01
07B72:  MOVWF  x66
07B74:  MOVLB  0
07B76:  CALL   2BEA
....................          SSR_off; 
07B7A:  BSF    F8B.2
07B7C:  BCF    F94.2
....................          Motor1_off; 
07B7E:  BSF    F8B.5
07B80:  BCF    F94.5
....................          Motor2_off; 
07B82:  BSF    F8B.6
07B84:  BCF    F94.6
....................          Controlando=0; 
07B86:  MOVLB  5
07B88:  CLRF   x90
....................          Tpulso=0.0; 
07B8A:  CLRF   xF0
07B8C:  CLRF   xEF
07B8E:  CLRF   xEE
07B90:  CLRF   xED
....................          tiempo_esterilizacion=0; 
07B92:  CLRF   x9D
....................       } 
....................        
....................       CuentaTiempo(); 
07B94:  MOVLB  0
07B96:  GOTO   57D0
07B9A:  MOVLB  5
....................       /*if(LEFT)//Si oprime boton de Toma. 
....................       { 
....................          if(Pausa!=2) 
....................          { 
....................             delay_ms(500);Menu=30;glcd_fillscreen(OFF);Opcion=1;visual=1;Pausa=1; 
....................          } 
....................          LEFT=0; 
....................       }*/         
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==100){ //Menu de Configuración de Parametros de Control 
07B9C:  MOVF   x97,W
07B9E:  SUBLW  64
07BA0:  BTFSS  FD8.2
07BA2:  GOTO   82F8
....................        
....................       if(Opcion>11) 
07BA6:  MOVF   x9C,W
07BA8:  SUBLW  0B
07BAA:  BC    7BB0
....................       {Opcion=1;} 
07BAC:  MOVLW  01
07BAE:  MOVWF  x9C
....................       if(Opcion<1) 
07BB0:  MOVF   x9C,F
07BB2:  BNZ   7BB8
....................       {Opcion=11;} 
07BB4:  MOVLW  0B
07BB6:  MOVWF  x9C
....................        
....................       if(Opcion<=6){ 
07BB8:  MOVF   x9C,W
07BBA:  SUBLW  06
07BBC:  BTFSS  FD8.0
07BBE:  BRA    7F1C
....................          if(Opcion==1)    
07BC0:  DECFSZ x9C,W
07BC2:  BRA    7C08
....................             {strcpy(Menus.Letra,"Proporcional"); 
07BC4:  MOVLW  06
07BC6:  MOVWF  FEA
07BC8:  MOVLW  39
07BCA:  MOVWF  FE9
07BCC:  MOVFF  FF2,659
07BD0:  BCF    FF2.7
07BD2:  MOVLW  00
07BD4:  MOVLB  0
07BD6:  CALL   0C5C
07BDA:  TBLRD*-
07BDC:  TBLRD*+
07BDE:  MOVF   FF5,W
07BE0:  MOVWF  FEE
07BE2:  IORLW  00
07BE4:  BNZ   7BDC
07BE6:  MOVLB  6
07BE8:  BTFSC  x59.7
07BEA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
07BEC:  MOVLW  06
07BEE:  MOVWF  x62
07BF0:  MOVLW  39
07BF2:  MOVWF  x61
07BF4:  CLRF   x63
07BF6:  CLRF   x64
07BF8:  MOVLW  01
07BFA:  MOVWF  x65
07BFC:  MOVWF  x66
07BFE:  MOVLB  0
07C00:  CALL   2BEA
....................          else 
07C04:  BRA    7C48
07C06:  MOVLB  5
....................             {strcpy(Menus.Letra,"Proporcional"); 
07C08:  MOVLW  06
07C0A:  MOVWF  FEA
07C0C:  MOVLW  39
07C0E:  MOVWF  FE9
07C10:  MOVFF  FF2,659
07C14:  BCF    FF2.7
07C16:  MOVLW  00
07C18:  MOVLB  0
07C1A:  CALL   0C5C
07C1E:  TBLRD*-
07C20:  TBLRD*+
07C22:  MOVF   FF5,W
07C24:  MOVWF  FEE
07C26:  IORLW  00
07C28:  BNZ   7C20
07C2A:  MOVLB  6
07C2C:  BTFSC  x59.7
07C2E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);} 
07C30:  MOVLW  06
07C32:  MOVWF  x62
07C34:  MOVLW  39
07C36:  MOVWF  x61
07C38:  CLRF   x63
07C3A:  CLRF   x64
07C3C:  CLRF   x65
07C3E:  MOVLW  01
07C40:  MOVWF  x66
07C42:  MOVLB  0
07C44:  CALL   2BEA
....................           
....................          if(Opcion==2)    
07C48:  MOVLB  5
07C4A:  MOVF   x9C,W
07C4C:  SUBLW  02
07C4E:  BNZ   7C96
....................             {strcpy(Menus.Letra,"Integral"); 
07C50:  MOVLW  06
07C52:  MOVWF  FEA
07C54:  MOVLW  39
07C56:  MOVWF  FE9
07C58:  MOVFF  FF2,659
07C5C:  BCF    FF2.7
07C5E:  MOVLW  00
07C60:  MOVLB  0
07C62:  CALL   0C88
07C66:  TBLRD*-
07C68:  TBLRD*+
07C6A:  MOVF   FF5,W
07C6C:  MOVWF  FEE
07C6E:  IORLW  00
07C70:  BNZ   7C68
07C72:  MOVLB  6
07C74:  BTFSC  x59.7
07C76:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
07C78:  MOVLW  06
07C7A:  MOVWF  x62
07C7C:  MOVLW  39
07C7E:  MOVWF  x61
07C80:  CLRF   x63
07C82:  MOVLW  09
07C84:  MOVWF  x64
07C86:  MOVLW  01
07C88:  MOVWF  x65
07C8A:  MOVWF  x66
07C8C:  MOVLB  0
07C8E:  CALL   2BEA
....................          else 
07C92:  BRA    7CD8
07C94:  MOVLB  5
....................             {strcpy(Menus.Letra,"Integral"); 
07C96:  MOVLW  06
07C98:  MOVWF  FEA
07C9A:  MOVLW  39
07C9C:  MOVWF  FE9
07C9E:  MOVFF  FF2,659
07CA2:  BCF    FF2.7
07CA4:  MOVLW  00
07CA6:  MOVLB  0
07CA8:  CALL   0C88
07CAC:  TBLRD*-
07CAE:  TBLRD*+
07CB0:  MOVF   FF5,W
07CB2:  MOVWF  FEE
07CB4:  IORLW  00
07CB6:  BNZ   7CAE
07CB8:  MOVLB  6
07CBA:  BTFSC  x59.7
07CBC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);} 
07CBE:  MOVLW  06
07CC0:  MOVWF  x62
07CC2:  MOVLW  39
07CC4:  MOVWF  x61
07CC6:  CLRF   x63
07CC8:  MOVLW  09
07CCA:  MOVWF  x64
07CCC:  CLRF   x65
07CCE:  MOVLW  01
07CD0:  MOVWF  x66
07CD2:  MOVLB  0
07CD4:  CALL   2BEA
....................              
....................          if(Opcion==3)    
07CD8:  MOVLB  5
07CDA:  MOVF   x9C,W
07CDC:  SUBLW  03
07CDE:  BNZ   7D26
....................             {strcpy(Menus.Letra,"Derivativo"); 
07CE0:  MOVLW  06
07CE2:  MOVWF  FEA
07CE4:  MOVLW  39
07CE6:  MOVWF  FE9
07CE8:  MOVFF  FF2,659
07CEC:  BCF    FF2.7
07CEE:  MOVLW  00
07CF0:  MOVLB  0
07CF2:  CALL   0CB0
07CF6:  TBLRD*-
07CF8:  TBLRD*+
07CFA:  MOVF   FF5,W
07CFC:  MOVWF  FEE
07CFE:  IORLW  00
07D00:  BNZ   7CF8
07D02:  MOVLB  6
07D04:  BTFSC  x59.7
07D06:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
07D08:  MOVLW  06
07D0A:  MOVWF  x62
07D0C:  MOVLW  39
07D0E:  MOVWF  x61
07D10:  CLRF   x63
07D12:  MOVLW  12
07D14:  MOVWF  x64
07D16:  MOVLW  01
07D18:  MOVWF  x65
07D1A:  MOVWF  x66
07D1C:  MOVLB  0
07D1E:  CALL   2BEA
....................          else 
07D22:  BRA    7D68
07D24:  MOVLB  5
....................             {strcpy(Menus.Letra,"Derivativo"); 
07D26:  MOVLW  06
07D28:  MOVWF  FEA
07D2A:  MOVLW  39
07D2C:  MOVWF  FE9
07D2E:  MOVFF  FF2,659
07D32:  BCF    FF2.7
07D34:  MOVLW  00
07D36:  MOVLB  0
07D38:  CALL   0CB0
07D3C:  TBLRD*-
07D3E:  TBLRD*+
07D40:  MOVF   FF5,W
07D42:  MOVWF  FEE
07D44:  IORLW  00
07D46:  BNZ   7D3E
07D48:  MOVLB  6
07D4A:  BTFSC  x59.7
07D4C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}    
07D4E:  MOVLW  06
07D50:  MOVWF  x62
07D52:  MOVLW  39
07D54:  MOVWF  x61
07D56:  CLRF   x63
07D58:  MOVLW  12
07D5A:  MOVWF  x64
07D5C:  CLRF   x65
07D5E:  MOVLW  01
07D60:  MOVWF  x66
07D62:  MOVLB  0
07D64:  CALL   2BEA
....................           
....................          if(Opcion==4)    
07D68:  MOVLB  5
07D6A:  MOVF   x9C,W
07D6C:  SUBLW  04
07D6E:  BNZ   7DB6
....................             {strcpy(Menus.Letra,"Tciclo"); 
07D70:  MOVLW  06
07D72:  MOVWF  FEA
07D74:  MOVLW  39
07D76:  MOVWF  FE9
07D78:  MOVFF  FF2,659
07D7C:  BCF    FF2.7
07D7E:  MOVLW  00
07D80:  MOVLB  0
07D82:  CALL   0CDA
07D86:  TBLRD*-
07D88:  TBLRD*+
07D8A:  MOVF   FF5,W
07D8C:  MOVWF  FEE
07D8E:  IORLW  00
07D90:  BNZ   7D88
07D92:  MOVLB  6
07D94:  BTFSC  x59.7
07D96:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
07D98:  MOVLW  06
07D9A:  MOVWF  x62
07D9C:  MOVLW  39
07D9E:  MOVWF  x61
07DA0:  CLRF   x63
07DA2:  MOVLW  1B
07DA4:  MOVWF  x64
07DA6:  MOVLW  01
07DA8:  MOVWF  x65
07DAA:  MOVWF  x66
07DAC:  MOVLB  0
07DAE:  CALL   2BEA
....................          else 
07DB2:  BRA    7DF8
07DB4:  MOVLB  5
....................             {strcpy(Menus.Letra,"Tciclo"); 
07DB6:  MOVLW  06
07DB8:  MOVWF  FEA
07DBA:  MOVLW  39
07DBC:  MOVWF  FE9
07DBE:  MOVFF  FF2,659
07DC2:  BCF    FF2.7
07DC4:  MOVLW  00
07DC6:  MOVLB  0
07DC8:  CALL   0CDA
07DCC:  TBLRD*-
07DCE:  TBLRD*+
07DD0:  MOVF   FF5,W
07DD2:  MOVWF  FEE
07DD4:  IORLW  00
07DD6:  BNZ   7DCE
07DD8:  MOVLB  6
07DDA:  BTFSC  x59.7
07DDC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);} 
07DDE:  MOVLW  06
07DE0:  MOVWF  x62
07DE2:  MOVLW  39
07DE4:  MOVWF  x61
07DE6:  CLRF   x63
07DE8:  MOVLW  1B
07DEA:  MOVWF  x64
07DEC:  CLRF   x65
07DEE:  MOVLW  01
07DF0:  MOVWF  x66
07DF2:  MOVLB  0
07DF4:  CALL   2BEA
....................              
....................          if(Opcion==5)    
07DF8:  MOVLB  5
07DFA:  MOVF   x9C,W
07DFC:  SUBLW  05
07DFE:  BNZ   7E46
....................             {strcpy(Menus.Letra,"Ajuste +"); 
07E00:  MOVLW  06
07E02:  MOVWF  FEA
07E04:  MOVLW  39
07E06:  MOVWF  FE9
07E08:  MOVFF  FF2,659
07E0C:  BCF    FF2.7
07E0E:  MOVLW  00
07E10:  MOVLB  0
07E12:  CALL   0D00
07E16:  TBLRD*-
07E18:  TBLRD*+
07E1A:  MOVF   FF5,W
07E1C:  MOVWF  FEE
07E1E:  IORLW  00
07E20:  BNZ   7E18
07E22:  MOVLB  6
07E24:  BTFSC  x59.7
07E26:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
07E28:  MOVLW  06
07E2A:  MOVWF  x62
07E2C:  MOVLW  39
07E2E:  MOVWF  x61
07E30:  CLRF   x63
07E32:  MOVLW  24
07E34:  MOVWF  x64
07E36:  MOVLW  01
07E38:  MOVWF  x65
07E3A:  MOVWF  x66
07E3C:  MOVLB  0
07E3E:  CALL   2BEA
....................          else 
07E42:  BRA    7E88
07E44:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste +"); 
07E46:  MOVLW  06
07E48:  MOVWF  FEA
07E4A:  MOVLW  39
07E4C:  MOVWF  FE9
07E4E:  MOVFF  FF2,659
07E52:  BCF    FF2.7
07E54:  MOVLW  00
07E56:  MOVLB  0
07E58:  CALL   0D00
07E5C:  TBLRD*-
07E5E:  TBLRD*+
07E60:  MOVF   FF5,W
07E62:  MOVWF  FEE
07E64:  IORLW  00
07E66:  BNZ   7E5E
07E68:  MOVLB  6
07E6A:  BTFSC  x59.7
07E6C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}    
07E6E:  MOVLW  06
07E70:  MOVWF  x62
07E72:  MOVLW  39
07E74:  MOVWF  x61
07E76:  CLRF   x63
07E78:  MOVLW  24
07E7A:  MOVWF  x64
07E7C:  CLRF   x65
07E7E:  MOVLW  01
07E80:  MOVWF  x66
07E82:  MOVLB  0
07E84:  CALL   2BEA
....................                          
....................          if(Opcion==6)    
07E88:  MOVLB  5
07E8A:  MOVF   x9C,W
07E8C:  SUBLW  06
07E8E:  BNZ   7ED6
....................             {strcpy(Menus.Letra,"Ajuste -"); 
07E90:  MOVLW  06
07E92:  MOVWF  FEA
07E94:  MOVLW  39
07E96:  MOVWF  FE9
07E98:  MOVFF  FF2,659
07E9C:  BCF    FF2.7
07E9E:  MOVLW  00
07EA0:  MOVLB  0
07EA2:  CALL   0D28
07EA6:  TBLRD*-
07EA8:  TBLRD*+
07EAA:  MOVF   FF5,W
07EAC:  MOVWF  FEE
07EAE:  IORLW  00
07EB0:  BNZ   7EA8
07EB2:  MOVLB  6
07EB4:  BTFSC  x59.7
07EB6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,1,1);} 
07EB8:  MOVLW  06
07EBA:  MOVWF  x62
07EBC:  MOVLW  39
07EBE:  MOVWF  x61
07EC0:  CLRF   x63
07EC2:  MOVLW  2D
07EC4:  MOVWF  x64
07EC6:  MOVLW  01
07EC8:  MOVWF  x65
07ECA:  MOVWF  x66
07ECC:  MOVLB  0
07ECE:  CALL   2BEA
....................          else 
07ED2:  BRA    7F18
07ED4:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste -"); 
07ED6:  MOVLW  06
07ED8:  MOVWF  FEA
07EDA:  MOVLW  39
07EDC:  MOVWF  FE9
07EDE:  MOVFF  FF2,659
07EE2:  BCF    FF2.7
07EE4:  MOVLW  00
07EE6:  MOVLB  0
07EE8:  CALL   0D28
07EEC:  TBLRD*-
07EEE:  TBLRD*+
07EF0:  MOVF   FF5,W
07EF2:  MOVWF  FEE
07EF4:  IORLW  00
07EF6:  BNZ   7EEE
07EF8:  MOVLB  6
07EFA:  BTFSC  x59.7
07EFC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,0,1);}      
07EFE:  MOVLW  06
07F00:  MOVWF  x62
07F02:  MOVLW  39
07F04:  MOVWF  x61
07F06:  CLRF   x63
07F08:  MOVLW  2D
07F0A:  MOVWF  x64
07F0C:  CLRF   x65
07F0E:  MOVLW  01
07F10:  MOVWF  x66
07F12:  MOVLB  0
07F14:  CALL   2BEA
....................       } 
....................       else{ 
07F18:  BRA    8226
07F1A:  MOVLB  5
....................          if(Opcion==7)    
07F1C:  MOVF   x9C,W
07F1E:  SUBLW  07
07F20:  BNZ   7F66
....................             {strcpy(Menus.Letra,"Media Movil"); 
07F22:  MOVLW  06
07F24:  MOVWF  FEA
07F26:  MOVLW  39
07F28:  MOVWF  FE9
07F2A:  MOVFF  FF2,659
07F2E:  BCF    FF2.7
07F30:  MOVLW  00
07F32:  MOVLB  0
07F34:  CALL   0D50
07F38:  TBLRD*-
07F3A:  TBLRD*+
07F3C:  MOVF   FF5,W
07F3E:  MOVWF  FEE
07F40:  IORLW  00
07F42:  BNZ   7F3A
07F44:  MOVLB  6
07F46:  BTFSC  x59.7
07F48:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
07F4A:  MOVLW  06
07F4C:  MOVWF  x62
07F4E:  MOVLW  39
07F50:  MOVWF  x61
07F52:  CLRF   x63
07F54:  CLRF   x64
07F56:  MOVLW  01
07F58:  MOVWF  x65
07F5A:  MOVWF  x66
07F5C:  MOVLB  0
07F5E:  CALL   2BEA
....................          else 
07F62:  BRA    7FA6
07F64:  MOVLB  5
....................             {strcpy(Menus.Letra,"Media Movil"); 
07F66:  MOVLW  06
07F68:  MOVWF  FEA
07F6A:  MOVLW  39
07F6C:  MOVWF  FE9
07F6E:  MOVFF  FF2,659
07F72:  BCF    FF2.7
07F74:  MOVLW  00
07F76:  MOVLB  0
07F78:  CALL   0D50
07F7C:  TBLRD*-
07F7E:  TBLRD*+
07F80:  MOVF   FF5,W
07F82:  MOVWF  FEE
07F84:  IORLW  00
07F86:  BNZ   7F7E
07F88:  MOVLB  6
07F8A:  BTFSC  x59.7
07F8C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);}      
07F8E:  MOVLW  06
07F90:  MOVWF  x62
07F92:  MOVLW  39
07F94:  MOVWF  x61
07F96:  CLRF   x63
07F98:  CLRF   x64
07F9A:  CLRF   x65
07F9C:  MOVLW  01
07F9E:  MOVWF  x66
07FA0:  MOVLB  0
07FA2:  CALL   2BEA
....................              
....................          if(Opcion==8)    
07FA6:  MOVLB  5
07FA8:  MOVF   x9C,W
07FAA:  SUBLW  08
07FAC:  BNZ   7FF4
....................             {strcpy(Menus.Letra,"Ganancia    "); 
07FAE:  MOVLW  06
07FB0:  MOVWF  FEA
07FB2:  MOVLW  39
07FB4:  MOVWF  FE9
07FB6:  MOVFF  FF2,659
07FBA:  BCF    FF2.7
07FBC:  MOVLW  00
07FBE:  MOVLB  0
07FC0:  CALL   0D7A
07FC4:  TBLRD*-
07FC6:  TBLRD*+
07FC8:  MOVF   FF5,W
07FCA:  MOVWF  FEE
07FCC:  IORLW  00
07FCE:  BNZ   7FC6
07FD0:  MOVLB  6
07FD2:  BTFSC  x59.7
07FD4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
07FD6:  MOVLW  06
07FD8:  MOVWF  x62
07FDA:  MOVLW  39
07FDC:  MOVWF  x61
07FDE:  CLRF   x63
07FE0:  MOVLW  09
07FE2:  MOVWF  x64
07FE4:  MOVLW  01
07FE6:  MOVWF  x65
07FE8:  MOVWF  x66
07FEA:  MOVLB  0
07FEC:  CALL   2BEA
....................          else 
07FF0:  BRA    8036
07FF2:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ganancia    "); 
07FF4:  MOVLW  06
07FF6:  MOVWF  FEA
07FF8:  MOVLW  39
07FFA:  MOVWF  FE9
07FFC:  MOVFF  FF2,659
08000:  BCF    FF2.7
08002:  MOVLW  00
08004:  MOVLB  0
08006:  CALL   0D7A
0800A:  TBLRD*-
0800C:  TBLRD*+
0800E:  MOVF   FF5,W
08010:  MOVWF  FEE
08012:  IORLW  00
08014:  BNZ   800C
08016:  MOVLB  6
08018:  BTFSC  x59.7
0801A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);}   
0801C:  MOVLW  06
0801E:  MOVWF  x62
08020:  MOVLW  39
08022:  MOVWF  x61
08024:  CLRF   x63
08026:  MOVLW  09
08028:  MOVWF  x64
0802A:  CLRF   x65
0802C:  MOVLW  01
0802E:  MOVWF  x66
08030:  MOVLB  0
08032:  CALL   2BEA
....................              
....................          if(Opcion==9)    
08036:  MOVLB  5
08038:  MOVF   x9C,W
0803A:  SUBLW  09
0803C:  BNZ   8084
....................             {strcpy(Menus.Letra,"R51         "); 
0803E:  MOVLW  06
08040:  MOVWF  FEA
08042:  MOVLW  39
08044:  MOVWF  FE9
08046:  MOVFF  FF2,659
0804A:  BCF    FF2.7
0804C:  MOVLW  00
0804E:  MOVLB  0
08050:  CALL   0DA6
08054:  TBLRD*-
08056:  TBLRD*+
08058:  MOVF   FF5,W
0805A:  MOVWF  FEE
0805C:  IORLW  00
0805E:  BNZ   8056
08060:  MOVLB  6
08062:  BTFSC  x59.7
08064:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
08066:  MOVLW  06
08068:  MOVWF  x62
0806A:  MOVLW  39
0806C:  MOVWF  x61
0806E:  CLRF   x63
08070:  MOVLW  12
08072:  MOVWF  x64
08074:  MOVLW  01
08076:  MOVWF  x65
08078:  MOVWF  x66
0807A:  MOVLB  0
0807C:  CALL   2BEA
....................          else 
08080:  BRA    80C6
08082:  MOVLB  5
....................             {strcpy(Menus.Letra,"R51         "); 
08084:  MOVLW  06
08086:  MOVWF  FEA
08088:  MOVLW  39
0808A:  MOVWF  FE9
0808C:  MOVFF  FF2,659
08090:  BCF    FF2.7
08092:  MOVLW  00
08094:  MOVLB  0
08096:  CALL   0DA6
0809A:  TBLRD*-
0809C:  TBLRD*+
0809E:  MOVF   FF5,W
080A0:  MOVWF  FEE
080A2:  IORLW  00
080A4:  BNZ   809C
080A6:  MOVLB  6
080A8:  BTFSC  x59.7
080AA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}      
080AC:  MOVLW  06
080AE:  MOVWF  x62
080B0:  MOVLW  39
080B2:  MOVWF  x61
080B4:  CLRF   x63
080B6:  MOVLW  12
080B8:  MOVWF  x64
080BA:  CLRF   x65
080BC:  MOVLW  01
080BE:  MOVWF  x66
080C0:  MOVLB  0
080C2:  CALL   2BEA
....................           
....................          if(Opcion==10)    
080C6:  MOVLB  5
080C8:  MOVF   x9C,W
080CA:  SUBLW  0A
080CC:  BNZ   8114
....................             {strcpy(Menus.Letra,"RPT100 B     "); 
080CE:  MOVLW  06
080D0:  MOVWF  FEA
080D2:  MOVLW  39
080D4:  MOVWF  FE9
080D6:  MOVFF  FF2,659
080DA:  BCF    FF2.7
080DC:  MOVLW  00
080DE:  MOVLB  0
080E0:  CALL   0DD2
080E4:  TBLRD*-
080E6:  TBLRD*+
080E8:  MOVF   FF5,W
080EA:  MOVWF  FEE
080EC:  IORLW  00
080EE:  BNZ   80E6
080F0:  MOVLB  6
080F2:  BTFSC  x59.7
080F4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
080F6:  MOVLW  06
080F8:  MOVWF  x62
080FA:  MOVLW  39
080FC:  MOVWF  x61
080FE:  CLRF   x63
08100:  MOVLW  1B
08102:  MOVWF  x64
08104:  MOVLW  01
08106:  MOVWF  x65
08108:  MOVWF  x66
0810A:  MOVLB  0
0810C:  CALL   2BEA
....................          else 
08110:  BRA    8156
08112:  MOVLB  5
....................             {strcpy(Menus.Letra,"RPT100 B     "); 
08114:  MOVLW  06
08116:  MOVWF  FEA
08118:  MOVLW  39
0811A:  MOVWF  FE9
0811C:  MOVFF  FF2,659
08120:  BCF    FF2.7
08122:  MOVLW  00
08124:  MOVLB  0
08126:  CALL   0DD2
0812A:  TBLRD*-
0812C:  TBLRD*+
0812E:  MOVF   FF5,W
08130:  MOVWF  FEE
08132:  IORLW  00
08134:  BNZ   812C
08136:  MOVLB  6
08138:  BTFSC  x59.7
0813A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);}      
0813C:  MOVLW  06
0813E:  MOVWF  x62
08140:  MOVLW  39
08142:  MOVWF  x61
08144:  CLRF   x63
08146:  MOVLW  1B
08148:  MOVWF  x64
0814A:  CLRF   x65
0814C:  MOVLW  01
0814E:  MOVWF  x66
08150:  MOVLB  0
08152:  CALL   2BEA
....................           
....................          if(Opcion==11)    
08156:  MOVLB  5
08158:  MOVF   x9C,W
0815A:  SUBLW  0B
0815C:  BNZ   81A4
....................             {strcpy(Menus.Letra,"In Temperatura"); 
0815E:  MOVLW  06
08160:  MOVWF  FEA
08162:  MOVLW  39
08164:  MOVWF  FE9
08166:  MOVFF  FF2,659
0816A:  BCF    FF2.7
0816C:  MOVLW  00
0816E:  MOVLB  0
08170:  CALL   0DFE
08174:  TBLRD*-
08176:  TBLRD*+
08178:  MOVF   FF5,W
0817A:  MOVWF  FEE
0817C:  IORLW  00
0817E:  BNZ   8176
08180:  MOVLB  6
08182:  BTFSC  x59.7
08184:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
08186:  MOVLW  06
08188:  MOVWF  x62
0818A:  MOVLW  39
0818C:  MOVWF  x61
0818E:  CLRF   x63
08190:  MOVLW  24
08192:  MOVWF  x64
08194:  MOVLW  01
08196:  MOVWF  x65
08198:  MOVWF  x66
0819A:  MOVLB  0
0819C:  CALL   2BEA
....................          else 
081A0:  BRA    81E6
081A2:  MOVLB  5
....................             {strcpy(Menus.Letra,"In Temperatura"); 
081A4:  MOVLW  06
081A6:  MOVWF  FEA
081A8:  MOVLW  39
081AA:  MOVWF  FE9
081AC:  MOVFF  FF2,659
081B0:  BCF    FF2.7
081B2:  MOVLW  00
081B4:  MOVLB  0
081B6:  CALL   0DFE
081BA:  TBLRD*-
081BC:  TBLRD*+
081BE:  MOVF   FF5,W
081C0:  MOVWF  FEE
081C2:  IORLW  00
081C4:  BNZ   81BC
081C6:  MOVLB  6
081C8:  BTFSC  x59.7
081CA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}  
081CC:  MOVLW  06
081CE:  MOVWF  x62
081D0:  MOVLW  39
081D2:  MOVWF  x61
081D4:  CLRF   x63
081D6:  MOVLW  24
081D8:  MOVWF  x64
081DA:  CLRF   x65
081DC:  MOVLW  01
081DE:  MOVWF  x66
081E0:  MOVLB  0
081E2:  CALL   2BEA
....................              
....................             strcpy(Menus.Letra,"            "); 
081E6:  MOVLW  06
081E8:  MOVWF  FEA
081EA:  MOVLW  39
081EC:  MOVWF  FE9
081EE:  MOVFF  FF2,659
081F2:  BCF    FF2.7
081F4:  MOVLW  00
081F6:  CALL   0E2C
081FA:  TBLRD*-
081FC:  TBLRD*+
081FE:  MOVF   FF5,W
08200:  MOVWF  FEE
08202:  IORLW  00
08204:  BNZ   81FC
08206:  MOVLB  6
08208:  BTFSC  x59.7
0820A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,0,1); 
0820C:  MOVLW  06
0820E:  MOVWF  x62
08210:  MOVLW  39
08212:  MOVWF  x61
08214:  CLRF   x63
08216:  MOVLW  2D
08218:  MOVWF  x64
0821A:  CLRF   x65
0821C:  MOVLW  01
0821E:  MOVWF  x66
08220:  MOVLB  0
08222:  CALL   2BEA
....................       }    
....................        
....................          if(UP)//Si oprime hacia arriba 
08226:  BSF    F92.4
08228:  BTFSC  F80.4
0822A:  BRA    8254
....................          { 
....................             delay_ms(10); 
0822C:  MOVLW  0A
0822E:  MOVLB  6
08230:  MOVWF  x62
08232:  MOVLB  0
08234:  CALL   1052
....................             if(Flanco == 0) 
08238:  MOVLB  5
0823A:  BTFSC  x87.1
0823C:  BRA    8252
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
0823E:  BSF    x87.1
08240:  MOVLW  1E
08242:  MOVLB  6
08244:  MOVWF  x62
08246:  MOVLB  0
08248:  CALL   1052
0824C:  MOVLB  5
0824E:  DECF   x9C,F
08250:  BSF    x87.4
....................                } 
....................          } 
....................             else 
08252:  BRA    8258
....................                {Flanco = 0;} 
08254:  MOVLB  5
08256:  BCF    x87.1
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
08258:  BSF    F92.5
0825A:  BTFSC  F80.5
0825C:  BRA    8286
....................          { 
....................             delay_ms(10); 
0825E:  MOVLW  0A
08260:  MOVLB  6
08262:  MOVWF  x62
08264:  MOVLB  0
08266:  CALL   1052
....................             if(Flanco2 == 0) 
0826A:  MOVLB  5
0826C:  BTFSC  x87.3
0826E:  BRA    8284
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
08270:  BSF    x87.3
08272:  MOVLW  1E
08274:  MOVLB  6
08276:  MOVWF  x62
08278:  MOVLB  0
0827A:  CALL   1052
0827E:  MOVLB  5
08280:  INCF   x9C,F
08282:  BSF    x87.4
....................                }      
....................          } 
....................             else 
08284:  BRA    8288
....................                {Flanco2 = 0;}   
08286:  BCF    x87.3
....................                 
....................          if(RIGHT)//Si oprime SET 
08288:  BSF    F96.0
0828A:  BTFSC  F84.0
0828C:  BRA    82CA
....................          {   
....................             delay_ms(10); 
0828E:  MOVLW  0A
08290:  MOVLB  6
08292:  MOVWF  x62
08294:  MOVLB  0
08296:  CALL   1052
....................             if(Flanco1 == 0) 
0829A:  MOVLB  5
0829C:  BTFSC  x87.2
0829E:  BRA    82C8
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
082A0:  BSF    x87.2
082A2:  MOVLW  1E
082A4:  MOVLB  6
082A6:  MOVWF  x62
082A8:  MOVLB  0
082AA:  CALL   1052
082AE:  MOVLW  64
082B0:  MOVLB  5
082B2:  ADDWF  x9C,W
082B4:  MOVWF  x97
082B6:  MOVLW  01
082B8:  MOVWF  x9C
082BA:  MOVLB  6
082BC:  CLRF   x61
082BE:  MOVLB  0
082C0:  CALL   25BC
082C4:  MOVLB  5
082C6:  BSF    x87.4
....................                } 
....................          } 
....................             else 
082C8:  BRA    82CC
....................                {Flanco1 = 0;}  
082CA:  BCF    x87.2
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
082CC:  BSF    F96.1
082CE:  BTFSC  F84.1
082D0:  BRA    82F8
....................          { 
....................             delay_ms(10); 
082D2:  MOVLW  0A
082D4:  MOVLB  6
082D6:  MOVWF  x62
082D8:  MOVLB  0
082DA:  CALL   1052
....................             delay_ms(700);reset_cpu();          
082DE:  MOVLW  04
082E0:  MOVLB  6
082E2:  MOVWF  x59
082E4:  MOVLW  AF
082E6:  MOVWF  x62
082E8:  MOVLB  0
082EA:  CALL   1052
082EE:  MOVLB  6
082F0:  DECFSZ x59,F
082F2:  BRA    82E4
082F4:  RESET
082F6:  MOVLB  5
....................          }       
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==101){ // Menu de Ajuste de Ganancia 
082F8:  MOVF   x97,W
082FA:  SUBLW  65
082FC:  BTFSS  FD8.2
082FE:  BRA    850A
....................          if(Ganancia>40)       
08300:  MOVLB  6
08302:  CLRF   x60
08304:  CLRF   x5F
08306:  MOVLW  20
08308:  MOVWF  x5E
0830A:  MOVLW  84
0830C:  MOVWF  x5D
0830E:  MOVFF  604,664
08312:  MOVFF  603,663
08316:  MOVFF  602,662
0831A:  MOVFF  601,661
0831E:  MOVLB  0
08320:  CALL   1C42
08324:  BNC   8334
....................             Ganancia=1; 
08326:  MOVLB  6
08328:  CLRF   x04
0832A:  CLRF   x03
0832C:  CLRF   x02
0832E:  MOVLW  7F
08330:  MOVWF  x01
....................          else if(Ganancia<1) 
08332:  BRA    8366
08334:  MOVFF  604,660
08338:  MOVFF  603,65F
0833C:  MOVFF  602,65E
08340:  MOVFF  601,65D
08344:  MOVLB  6
08346:  CLRF   x64
08348:  CLRF   x63
0834A:  CLRF   x62
0834C:  MOVLW  7F
0834E:  MOVWF  x61
08350:  MOVLB  0
08352:  CALL   1C42
08356:  BNC   8366
....................             Ganancia=40; 
08358:  MOVLB  6
0835A:  CLRF   x04
0835C:  CLRF   x03
0835E:  MOVLW  20
08360:  MOVWF  x02
08362:  MOVLW  84
08364:  MOVWF  x01
....................           
....................          if(visual==1){ 
08366:  MOVLB  5
08368:  BTFSS  x87.4
0836A:  BRA    83F2
....................             glcd_fillScreen(OFF); 
0836C:  MOVLB  6
0836E:  CLRF   x61
08370:  MOVLB  0
08372:  CALL   25BC
....................             strcpy(Menus.Letra,"P"); 
08376:  MOVLW  06
08378:  MOVWF  FEA
0837A:  MOVLW  39
0837C:  MOVWF  FE9
0837E:  MOVFF  FF2,659
08382:  BCF    FF2.7
08384:  MOVLW  00
08386:  CALL   0E58
0838A:  TBLRD*-
0838C:  TBLRD*+
0838E:  MOVF   FF5,W
08390:  MOVWF  FEE
08392:  IORLW  00
08394:  BNZ   838C
08396:  MOVLB  6
08398:  BTFSC  x59.7
0839A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);  
0839C:  MOVLW  06
0839E:  MOVWF  x62
083A0:  MOVLW  39
083A2:  MOVWF  x61
083A4:  CLRF   x63
083A6:  CLRF   x64
083A8:  MOVLW  01
083AA:  MOVWF  x65
083AC:  MOVLW  02
083AE:  MOVWF  x66
083B0:  MOVLB  0
083B2:  CALL   2BEA
....................             displayTemperatura(Ganancia,30,30,0,3);          
083B6:  MOVFF  604,65C
083BA:  MOVFF  603,65B
083BE:  MOVFF  602,65A
083C2:  MOVFF  601,659
083C6:  CALL   4308
083CA:  MOVFF  02,65A
083CE:  MOVFF  01,659
083D2:  MOVFF  02,65C
083D6:  MOVFF  01,65B
083DA:  MOVLW  1E
083DC:  MOVLB  6
083DE:  MOVWF  x5D
083E0:  MOVWF  x5E
083E2:  CLRF   x5F
083E4:  MOVLW  03
083E6:  MOVWF  x60
083E8:  MOVLB  0
083EA:  CALL   4402
....................             visual=0; 
083EE:  MOVLB  5
083F0:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
083F2:  BSF    F92.4
083F4:  BTFSC  F80.4
083F6:  BRA    8436
....................             DelayPuls();Ganancia+=1.0;visual=1;             
083F8:  MOVLB  0
083FA:  CALL   379C
083FE:  BCF    FD8.1
08400:  MOVFF  604,661
08404:  MOVFF  603,660
08408:  MOVFF  602,65F
0840C:  MOVFF  601,65E
08410:  MOVLB  6
08412:  CLRF   x65
08414:  CLRF   x64
08416:  CLRF   x63
08418:  MOVLW  7F
0841A:  MOVWF  x62
0841C:  MOVLB  0
0841E:  CALL   1246
08422:  MOVFF  03,604
08426:  MOVFF  02,603
0842A:  MOVFF  01,602
0842E:  MOVFF  00,601
08432:  MOVLB  5
08434:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08436:  BSF    F92.5
08438:  BTFSC  F80.5
0843A:  BRA    847A
....................             DelayPuls();Ganancia-=1.0;visual=1;      
0843C:  MOVLB  0
0843E:  CALL   379C
08442:  BSF    FD8.1
08444:  MOVFF  604,661
08448:  MOVFF  603,660
0844C:  MOVFF  602,65F
08450:  MOVFF  601,65E
08454:  MOVLB  6
08456:  CLRF   x65
08458:  CLRF   x64
0845A:  CLRF   x63
0845C:  MOVLW  7F
0845E:  MOVWF  x62
08460:  MOVLB  0
08462:  CALL   1246
08466:  MOVFF  03,604
0846A:  MOVFF  02,603
0846E:  MOVFF  01,602
08472:  MOVFF  00,601
08476:  MOVLB  5
08478:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0847A:  BSF    F96.0
0847C:  BTFSC  F84.0
0847E:  BRA    8482
....................             visual=1;           
08480:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08482:  BSF    F96.1
08484:  BTFSC  F84.1
08486:  BRA    850A
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08488:  MOVLW  04
0848A:  MOVLB  6
0848C:  MOVWF  x59
0848E:  MOVLW  AF
08490:  MOVWF  x62
08492:  MOVLB  0
08494:  CALL   1052
08498:  MOVLB  6
0849A:  DECFSZ x59,F
0849C:  BRA    848E
0849E:  MOVLW  64
084A0:  MOVLB  5
084A2:  MOVWF  x97
084A4:  MOVLB  6
084A6:  CLRF   x61
084A8:  MOVLB  0
084AA:  CALL   25BC
084AE:  MOVLW  01
084B0:  MOVLB  5
084B2:  MOVWF  x9C
084B4:  BSF    x87.4
....................             write_eeprom(14,(int8)Ganancia);delay_ms(20); 
084B6:  MOVFF  604,65C
084BA:  MOVFF  603,65B
084BE:  MOVFF  602,65A
084C2:  MOVFF  601,659
084C6:  MOVLB  0
084C8:  CALL   4308
084CC:  MOVFF  01,659
084D0:  CLRF   FAA
084D2:  MOVLW  0E
084D4:  MOVWF  FA9
084D6:  MOVFF  659,FA8
084DA:  BCF    FA6.6
084DC:  BCF    FA6.7
084DE:  BSF    FA6.2
084E0:  MOVF   FF2,W
084E2:  MOVWF  00
084E4:  BCF    FF2.7
084E6:  MOVLB  F
084E8:  MOVLW  55
084EA:  MOVWF  FA7
084EC:  MOVLW  AA
084EE:  MOVWF  FA7
084F0:  BSF    FA6.1
084F2:  BTFSC  FA6.1
084F4:  BRA    84F2
084F6:  BCF    FA6.2
084F8:  MOVF   00,W
084FA:  IORWF  FF2,F
084FC:  MOVLW  14
084FE:  MOVLB  6
08500:  MOVWF  x62
08502:  MOVLB  0
08504:  CALL   1052
08508:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==102){ // Menu de Ajuste de Integral    
0850A:  MOVF   x97,W
0850C:  SUBLW  66
0850E:  BTFSS  FD8.2
08510:  BRA    8728
....................          if(Integral>40)       
08512:  MOVLB  6
08514:  CLRF   x60
08516:  CLRF   x5F
08518:  MOVLW  20
0851A:  MOVWF  x5E
0851C:  MOVLW  84
0851E:  MOVWF  x5D
08520:  MOVFF  5C8,664
08524:  MOVFF  5C7,663
08528:  MOVFF  5C6,662
0852C:  MOVFF  5C5,661
08530:  MOVLB  0
08532:  CALL   1C42
08536:  BNC   8546
....................             Integral=1; 
08538:  MOVLB  5
0853A:  CLRF   xC8
0853C:  CLRF   xC7
0853E:  CLRF   xC6
08540:  MOVLW  7F
08542:  MOVWF  xC5
....................          else if(Integral<1) 
08544:  BRA    8578
08546:  MOVFF  5C8,660
0854A:  MOVFF  5C7,65F
0854E:  MOVFF  5C6,65E
08552:  MOVFF  5C5,65D
08556:  MOVLB  6
08558:  CLRF   x64
0855A:  CLRF   x63
0855C:  CLRF   x62
0855E:  MOVLW  7F
08560:  MOVWF  x61
08562:  MOVLB  0
08564:  CALL   1C42
08568:  BNC   8578
....................             Integral=40; 
0856A:  MOVLB  5
0856C:  CLRF   xC8
0856E:  CLRF   xC7
08570:  MOVLW  20
08572:  MOVWF  xC6
08574:  MOVLW  84
08576:  MOVWF  xC5
....................        
....................          if(visual==1){ 
08578:  MOVLB  5
0857A:  BTFSS  x87.4
0857C:  BRA    8604
....................             glcd_fillScreen(OFF); 
0857E:  MOVLB  6
08580:  CLRF   x61
08582:  MOVLB  0
08584:  CALL   25BC
....................             strcpy(Menus.Letra,"I"); 
08588:  MOVLW  06
0858A:  MOVWF  FEA
0858C:  MOVLW  39
0858E:  MOVWF  FE9
08590:  MOVFF  FF2,659
08594:  BCF    FF2.7
08596:  MOVLW  00
08598:  CALL   0E78
0859C:  TBLRD*-
0859E:  TBLRD*+
085A0:  MOVF   FF5,W
085A2:  MOVWF  FEE
085A4:  IORLW  00
085A6:  BNZ   859E
085A8:  MOVLB  6
085AA:  BTFSC  x59.7
085AC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
085AE:  MOVLW  06
085B0:  MOVWF  x62
085B2:  MOVLW  39
085B4:  MOVWF  x61
085B6:  CLRF   x63
085B8:  CLRF   x64
085BA:  MOVLW  01
085BC:  MOVWF  x65
085BE:  MOVLW  02
085C0:  MOVWF  x66
085C2:  MOVLB  0
085C4:  CALL   2BEA
....................             displayTemperatura(Integral,30,30,0,3);  
085C8:  MOVFF  5C8,65C
085CC:  MOVFF  5C7,65B
085D0:  MOVFF  5C6,65A
085D4:  MOVFF  5C5,659
085D8:  CALL   4308
085DC:  MOVFF  02,65A
085E0:  MOVFF  01,659
085E4:  MOVFF  02,65C
085E8:  MOVFF  01,65B
085EC:  MOVLW  1E
085EE:  MOVLB  6
085F0:  MOVWF  x5D
085F2:  MOVWF  x5E
085F4:  CLRF   x5F
085F6:  MOVLW  03
085F8:  MOVWF  x60
085FA:  MOVLB  0
085FC:  CALL   4402
....................             visual=0; 
08600:  MOVLB  5
08602:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08604:  BSF    F92.4
08606:  BTFSC  F80.4
08608:  BRA    8648
....................             DelayPuls();Integral+=1.0;visual=1;  
0860A:  MOVLB  0
0860C:  CALL   379C
08610:  BCF    FD8.1
08612:  MOVFF  5C8,661
08616:  MOVFF  5C7,660
0861A:  MOVFF  5C6,65F
0861E:  MOVFF  5C5,65E
08622:  MOVLB  6
08624:  CLRF   x65
08626:  CLRF   x64
08628:  CLRF   x63
0862A:  MOVLW  7F
0862C:  MOVWF  x62
0862E:  MOVLB  0
08630:  CALL   1246
08634:  MOVFF  03,5C8
08638:  MOVFF  02,5C7
0863C:  MOVFF  01,5C6
08640:  MOVFF  00,5C5
08644:  MOVLB  5
08646:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){               
08648:  BSF    F92.5
0864A:  BTFSC  F80.5
0864C:  BRA    868C
....................             DelayPuls();Integral-=1.0;visual=1;      
0864E:  MOVLB  0
08650:  CALL   379C
08654:  BSF    FD8.1
08656:  MOVFF  5C8,661
0865A:  MOVFF  5C7,660
0865E:  MOVFF  5C6,65F
08662:  MOVFF  5C5,65E
08666:  MOVLB  6
08668:  CLRF   x65
0866A:  CLRF   x64
0866C:  CLRF   x63
0866E:  MOVLW  7F
08670:  MOVWF  x62
08672:  MOVLB  0
08674:  CALL   1246
08678:  MOVFF  03,5C8
0867C:  MOVFF  02,5C7
08680:  MOVFF  01,5C6
08684:  MOVFF  00,5C5
08688:  MOVLB  5
0868A:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
0868C:  BSF    F96.0
0868E:  BTFSC  F84.0
08690:  BRA    8694
....................             visual=1;  
08692:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08694:  BSF    F96.1
08696:  BTFSC  F84.1
08698:  BRA    8728
....................             delay_ms(10); 
0869A:  MOVLW  0A
0869C:  MOVLB  6
0869E:  MOVWF  x62
086A0:  MOVLB  0
086A2:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
086A6:  MOVLW  04
086A8:  MOVLB  6
086AA:  MOVWF  x59
086AC:  MOVLW  AF
086AE:  MOVWF  x62
086B0:  MOVLB  0
086B2:  CALL   1052
086B6:  MOVLB  6
086B8:  DECFSZ x59,F
086BA:  BRA    86AC
086BC:  MOVLW  64
086BE:  MOVLB  5
086C0:  MOVWF  x97
086C2:  MOVLB  6
086C4:  CLRF   x61
086C6:  MOVLB  0
086C8:  CALL   25BC
086CC:  MOVLW  01
086CE:  MOVLB  5
086D0:  MOVWF  x9C
086D2:  BSF    x87.4
....................             write_eeprom(15,(int8)Integral);delay_ms(20); 
086D4:  MOVFF  5C8,65C
086D8:  MOVFF  5C7,65B
086DC:  MOVFF  5C6,65A
086E0:  MOVFF  5C5,659
086E4:  MOVLB  0
086E6:  CALL   4308
086EA:  MOVFF  01,659
086EE:  CLRF   FAA
086F0:  MOVLW  0F
086F2:  MOVWF  FA9
086F4:  MOVFF  659,FA8
086F8:  BCF    FA6.6
086FA:  BCF    FA6.7
086FC:  BSF    FA6.2
086FE:  MOVF   FF2,W
08700:  MOVWF  00
08702:  BCF    FF2.7
08704:  MOVLB  F
08706:  MOVLW  55
08708:  MOVWF  FA7
0870A:  MOVLW  AA
0870C:  MOVWF  FA7
0870E:  BSF    FA6.1
08710:  BTFSC  FA6.1
08712:  BRA    8710
08714:  BCF    FA6.2
08716:  MOVF   00,W
08718:  IORWF  FF2,F
0871A:  MOVLW  14
0871C:  MOVLB  6
0871E:  MOVWF  x62
08720:  MOVLB  0
08722:  CALL   1052
08726:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==103){ // Menu de Ajuste de Derivativo 
08728:  MOVF   x97,W
0872A:  SUBLW  67
0872C:  BTFSS  FD8.2
0872E:  BRA    8950
....................        
....................          if(Derivativo>200) 
08730:  MOVLB  6
08732:  CLRF   x60
08734:  CLRF   x5F
08736:  MOVLW  48
08738:  MOVWF  x5E
0873A:  MOVLW  86
0873C:  MOVWF  x5D
0873E:  MOVFF  5CC,664
08742:  MOVFF  5CB,663
08746:  MOVFF  5CA,662
0874A:  MOVFF  5C9,661
0874E:  MOVLB  0
08750:  CALL   1C42
08754:  BNC   8764
....................             Derivativo=2; 
08756:  MOVLB  5
08758:  CLRF   xCC
0875A:  CLRF   xCB
0875C:  CLRF   xCA
0875E:  MOVLW  80
08760:  MOVWF  xC9
....................          else if(Derivativo<2) 
08762:  BRA    8796
08764:  MOVFF  5CC,660
08768:  MOVFF  5CB,65F
0876C:  MOVFF  5CA,65E
08770:  MOVFF  5C9,65D
08774:  MOVLB  6
08776:  CLRF   x64
08778:  CLRF   x63
0877A:  CLRF   x62
0877C:  MOVLW  80
0877E:  MOVWF  x61
08780:  MOVLB  0
08782:  CALL   1C42
08786:  BNC   8796
....................             Derivativo=200; 
08788:  MOVLB  5
0878A:  CLRF   xCC
0878C:  CLRF   xCB
0878E:  MOVLW  48
08790:  MOVWF  xCA
08792:  MOVLW  86
08794:  MOVWF  xC9
....................        
....................          if(visual==1){ 
08796:  MOVLB  5
08798:  BTFSS  x87.4
0879A:  BRA    8822
....................             glcd_fillScreen(OFF); 
0879C:  MOVLB  6
0879E:  CLRF   x61
087A0:  MOVLB  0
087A2:  CALL   25BC
....................             strcpy(Menus.Letra,"D"); 
087A6:  MOVLW  06
087A8:  MOVWF  FEA
087AA:  MOVLW  39
087AC:  MOVWF  FE9
087AE:  MOVFF  FF2,659
087B2:  BCF    FF2.7
087B4:  MOVLW  00
087B6:  CALL   0E98
087BA:  TBLRD*-
087BC:  TBLRD*+
087BE:  MOVF   FF5,W
087C0:  MOVWF  FEE
087C2:  IORLW  00
087C4:  BNZ   87BC
087C6:  MOVLB  6
087C8:  BTFSC  x59.7
087CA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);          
087CC:  MOVLW  06
087CE:  MOVWF  x62
087D0:  MOVLW  39
087D2:  MOVWF  x61
087D4:  CLRF   x63
087D6:  CLRF   x64
087D8:  MOVLW  01
087DA:  MOVWF  x65
087DC:  MOVLW  02
087DE:  MOVWF  x66
087E0:  MOVLB  0
087E2:  CALL   2BEA
....................             displayTemperatura(Derivativo,30,30,0,3); 
087E6:  MOVFF  5CC,65C
087EA:  MOVFF  5CB,65B
087EE:  MOVFF  5CA,65A
087F2:  MOVFF  5C9,659
087F6:  CALL   4308
087FA:  MOVFF  02,65A
087FE:  MOVFF  01,659
08802:  MOVFF  02,65C
08806:  MOVFF  01,65B
0880A:  MOVLW  1E
0880C:  MOVLB  6
0880E:  MOVWF  x5D
08810:  MOVWF  x5E
08812:  CLRF   x5F
08814:  MOVLW  03
08816:  MOVWF  x60
08818:  MOVLB  0
0881A:  CALL   4402
....................             visual=0; 
0881E:  MOVLB  5
08820:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08822:  BSF    F92.4
08824:  BTFSC  F80.4
08826:  BRA    8870
....................             delay_ms(10); 
08828:  MOVLW  0A
0882A:  MOVLB  6
0882C:  MOVWF  x62
0882E:  MOVLB  0
08830:  CALL   1052
....................             DelayPuls();Derivativo+=1.0;visual=1; 
08834:  CALL   379C
08838:  BCF    FD8.1
0883A:  MOVFF  5CC,661
0883E:  MOVFF  5CB,660
08842:  MOVFF  5CA,65F
08846:  MOVFF  5C9,65E
0884A:  MOVLB  6
0884C:  CLRF   x65
0884E:  CLRF   x64
08850:  CLRF   x63
08852:  MOVLW  7F
08854:  MOVWF  x62
08856:  MOVLB  0
08858:  CALL   1246
0885C:  MOVFF  03,5CC
08860:  MOVFF  02,5CB
08864:  MOVFF  01,5CA
08868:  MOVFF  00,5C9
0886C:  MOVLB  5
0886E:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08870:  BSF    F92.5
08872:  BTFSC  F80.5
08874:  BRA    88B4
....................             DelayPuls();Derivativo-=1.0;visual=1;      
08876:  MOVLB  0
08878:  CALL   379C
0887C:  BSF    FD8.1
0887E:  MOVFF  5CC,661
08882:  MOVFF  5CB,660
08886:  MOVFF  5CA,65F
0888A:  MOVFF  5C9,65E
0888E:  MOVLB  6
08890:  CLRF   x65
08892:  CLRF   x64
08894:  CLRF   x63
08896:  MOVLW  7F
08898:  MOVWF  x62
0889A:  MOVLB  0
0889C:  CALL   1246
088A0:  MOVFF  03,5CC
088A4:  MOVFF  02,5CB
088A8:  MOVFF  01,5CA
088AC:  MOVFF  00,5C9
088B0:  MOVLB  5
088B2:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
088B4:  BSF    F96.0
088B6:  BTFSC  F84.0
088B8:  BRA    88BC
....................             visual=1;  
088BA:  BSF    x87.4
....................                    
....................          if(LEFT){ 
088BC:  BSF    F96.1
088BE:  BTFSC  F84.1
088C0:  BRA    8950
....................             delay_ms(10); 
088C2:  MOVLW  0A
088C4:  MOVLB  6
088C6:  MOVWF  x62
088C8:  MOVLB  0
088CA:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
088CE:  MOVLW  04
088D0:  MOVLB  6
088D2:  MOVWF  x59
088D4:  MOVLW  AF
088D6:  MOVWF  x62
088D8:  MOVLB  0
088DA:  CALL   1052
088DE:  MOVLB  6
088E0:  DECFSZ x59,F
088E2:  BRA    88D4
088E4:  MOVLW  64
088E6:  MOVLB  5
088E8:  MOVWF  x97
088EA:  MOVLB  6
088EC:  CLRF   x61
088EE:  MOVLB  0
088F0:  CALL   25BC
088F4:  MOVLW  01
088F6:  MOVLB  5
088F8:  MOVWF  x9C
088FA:  BSF    x87.4
....................             write_eeprom(16,(int8)Derivativo);delay_ms(20); 
088FC:  MOVFF  5CC,65C
08900:  MOVFF  5CB,65B
08904:  MOVFF  5CA,65A
08908:  MOVFF  5C9,659
0890C:  MOVLB  0
0890E:  CALL   4308
08912:  MOVFF  01,659
08916:  CLRF   FAA
08918:  MOVLW  10
0891A:  MOVWF  FA9
0891C:  MOVFF  659,FA8
08920:  BCF    FA6.6
08922:  BCF    FA6.7
08924:  BSF    FA6.2
08926:  MOVF   FF2,W
08928:  MOVWF  00
0892A:  BCF    FF2.7
0892C:  MOVLB  F
0892E:  MOVLW  55
08930:  MOVWF  FA7
08932:  MOVLW  AA
08934:  MOVWF  FA7
08936:  BSF    FA6.1
08938:  BTFSC  FA6.1
0893A:  BRA    8938
0893C:  BCF    FA6.2
0893E:  MOVF   00,W
08940:  IORWF  FF2,F
08942:  MOVLW  14
08944:  MOVLB  6
08946:  MOVWF  x62
08948:  MOVLB  0
0894A:  CALL   1052
0894E:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==104){ // Menu de Tiempo de Ciclo 
08950:  MOVF   x97,W
08952:  SUBLW  68
08954:  BTFSS  FD8.2
08956:  BRA    8B64
....................        
....................          if(Tciclo>40) 
08958:  MOVLB  6
0895A:  CLRF   x60
0895C:  CLRF   x5F
0895E:  MOVLW  20
08960:  MOVWF  x5E
08962:  MOVLW  84
08964:  MOVWF  x5D
08966:  MOVFF  5EC,664
0896A:  MOVFF  5EB,663
0896E:  MOVFF  5EA,662
08972:  MOVFF  5E9,661
08976:  MOVLB  0
08978:  CALL   1C42
0897C:  BNC   898E
....................             Tciclo=40; 
0897E:  MOVLB  5
08980:  CLRF   xEC
08982:  CLRF   xEB
08984:  MOVLW  20
08986:  MOVWF  xEA
08988:  MOVLW  84
0898A:  MOVWF  xE9
....................          else if(Tciclo<1) 
0898C:  BRA    89C0
0898E:  MOVFF  5EC,660
08992:  MOVFF  5EB,65F
08996:  MOVFF  5EA,65E
0899A:  MOVFF  5E9,65D
0899E:  MOVLB  6
089A0:  CLRF   x64
089A2:  CLRF   x63
089A4:  CLRF   x62
089A6:  MOVLW  7F
089A8:  MOVWF  x61
089AA:  MOVLB  0
089AC:  CALL   1C42
089B0:  BNC   89C0
....................             Tciclo=40; 
089B2:  MOVLB  5
089B4:  CLRF   xEC
089B6:  CLRF   xEB
089B8:  MOVLW  20
089BA:  MOVWF  xEA
089BC:  MOVLW  84
089BE:  MOVWF  xE9
....................        
....................          if(visual==1){ 
089C0:  MOVLB  5
089C2:  BTFSS  x87.4
089C4:  BRA    8A4C
....................             glcd_fillScreen(OFF); 
089C6:  MOVLB  6
089C8:  CLRF   x61
089CA:  MOVLB  0
089CC:  CALL   25BC
....................             strcpy(Menus.Letra,"Tciclo"); 
089D0:  MOVLW  06
089D2:  MOVWF  FEA
089D4:  MOVLW  39
089D6:  MOVWF  FE9
089D8:  MOVFF  FF2,659
089DC:  BCF    FF2.7
089DE:  MOVLW  00
089E0:  CALL   0CDA
089E4:  TBLRD*-
089E6:  TBLRD*+
089E8:  MOVF   FF5,W
089EA:  MOVWF  FEE
089EC:  IORLW  00
089EE:  BNZ   89E6
089F0:  MOVLB  6
089F2:  BTFSC  x59.7
089F4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);          
089F6:  MOVLW  06
089F8:  MOVWF  x62
089FA:  MOVLW  39
089FC:  MOVWF  x61
089FE:  CLRF   x63
08A00:  CLRF   x64
08A02:  MOVLW  01
08A04:  MOVWF  x65
08A06:  MOVLW  02
08A08:  MOVWF  x66
08A0A:  MOVLB  0
08A0C:  CALL   2BEA
....................             displayTemperatura(Tciclo,30,30,0,3); 
08A10:  MOVFF  5EC,65C
08A14:  MOVFF  5EB,65B
08A18:  MOVFF  5EA,65A
08A1C:  MOVFF  5E9,659
08A20:  CALL   4308
08A24:  MOVFF  02,65A
08A28:  MOVFF  01,659
08A2C:  MOVFF  02,65C
08A30:  MOVFF  01,65B
08A34:  MOVLW  1E
08A36:  MOVLB  6
08A38:  MOVWF  x5D
08A3A:  MOVWF  x5E
08A3C:  CLRF   x5F
08A3E:  MOVLW  03
08A40:  MOVWF  x60
08A42:  MOVLB  0
08A44:  CALL   4402
....................             visual=0; 
08A48:  MOVLB  5
08A4A:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08A4C:  BSF    F92.4
08A4E:  BTFSC  F80.4
08A50:  BRA    8A90
....................             DelayPuls();Tciclo+=1.0;visual=1; 
08A52:  MOVLB  0
08A54:  CALL   379C
08A58:  BCF    FD8.1
08A5A:  MOVFF  5EC,661
08A5E:  MOVFF  5EB,660
08A62:  MOVFF  5EA,65F
08A66:  MOVFF  5E9,65E
08A6A:  MOVLB  6
08A6C:  CLRF   x65
08A6E:  CLRF   x64
08A70:  CLRF   x63
08A72:  MOVLW  7F
08A74:  MOVWF  x62
08A76:  MOVLB  0
08A78:  CALL   1246
08A7C:  MOVFF  03,5EC
08A80:  MOVFF  02,5EB
08A84:  MOVFF  01,5EA
08A88:  MOVFF  00,5E9
08A8C:  MOVLB  5
08A8E:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08A90:  BSF    F92.5
08A92:  BTFSC  F80.5
08A94:  BRA    8AD4
....................             DelayPuls();Tciclo-=1.0;visual=1;      
08A96:  MOVLB  0
08A98:  CALL   379C
08A9C:  BSF    FD8.1
08A9E:  MOVFF  5EC,661
08AA2:  MOVFF  5EB,660
08AA6:  MOVFF  5EA,65F
08AAA:  MOVFF  5E9,65E
08AAE:  MOVLB  6
08AB0:  CLRF   x65
08AB2:  CLRF   x64
08AB4:  CLRF   x63
08AB6:  MOVLW  7F
08AB8:  MOVWF  x62
08ABA:  MOVLB  0
08ABC:  CALL   1246
08AC0:  MOVFF  03,5EC
08AC4:  MOVFF  02,5EB
08AC8:  MOVFF  01,5EA
08ACC:  MOVFF  00,5E9
08AD0:  MOVLB  5
08AD2:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT) 
08AD4:  BSF    F96.0
08AD6:  BTFSC  F84.0
08AD8:  BRA    8ADC
....................             visual=1;  
08ADA:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08ADC:  BSF    F96.1
08ADE:  BTFSC  F84.1
08AE0:  BRA    8B64
....................             delay_ms(10); 
08AE2:  MOVLW  0A
08AE4:  MOVLB  6
08AE6:  MOVWF  x62
08AE8:  MOVLB  0
08AEA:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08AEE:  MOVLW  04
08AF0:  MOVLB  6
08AF2:  MOVWF  x59
08AF4:  MOVLW  AF
08AF6:  MOVWF  x62
08AF8:  MOVLB  0
08AFA:  CALL   1052
08AFE:  MOVLB  6
08B00:  DECFSZ x59,F
08B02:  BRA    8AF4
08B04:  MOVLW  64
08B06:  MOVLB  5
08B08:  MOVWF  x97
08B0A:  MOVLB  6
08B0C:  CLRF   x61
08B0E:  MOVLB  0
08B10:  CALL   25BC
08B14:  MOVLW  01
08B16:  MOVLB  5
08B18:  MOVWF  x9C
08B1A:  BSF    x87.4
....................             write_eeprom(17,(int8)Tciclo); 
08B1C:  MOVFF  5EC,65C
08B20:  MOVFF  5EB,65B
08B24:  MOVFF  5EA,65A
08B28:  MOVFF  5E9,659
08B2C:  MOVLB  0
08B2E:  CALL   4308
08B32:  MOVFF  01,659
08B36:  CLRF   FAA
08B38:  MOVLW  11
08B3A:  MOVWF  FA9
08B3C:  MOVFF  659,FA8
08B40:  BCF    FA6.6
08B42:  BCF    FA6.7
08B44:  BSF    FA6.2
08B46:  MOVF   FF2,W
08B48:  MOVWF  00
08B4A:  BCF    FF2.7
08B4C:  MOVLB  F
08B4E:  MOVLW  55
08B50:  MOVWF  FA7
08B52:  MOVLW  AA
08B54:  MOVWF  FA7
08B56:  BSF    FA6.1
08B58:  BTFSC  FA6.1
08B5A:  BRA    8B58
08B5C:  BCF    FA6.2
08B5E:  MOVF   00,W
08B60:  IORWF  FF2,F
08B62:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==105){ // Menu de Ajuste de Ajuste+ 
08B64:  MOVF   x97,W
08B66:  SUBLW  69
08B68:  BTFSS  FD8.2
08B6A:  BRA    8C8A
....................        
....................          if(Ajuste>100) 
08B6C:  MOVF   x8A,W
08B6E:  SUBLW  64
08B70:  BC    8B74
....................             Ajuste=0; 
08B72:  CLRF   x8A
....................        
....................          if(visual==1) 
08B74:  BTFSS  x87.4
08B76:  BRA    8BE0
....................          { 
....................             glcd_fillScreen(OFF); 
08B78:  MOVLB  6
08B7A:  CLRF   x61
08B7C:  MOVLB  0
08B7E:  CALL   25BC
....................             strcpy(Menus.Letra,"Ajuste"); 
08B82:  MOVLW  06
08B84:  MOVWF  FEA
08B86:  MOVLW  39
08B88:  MOVWF  FE9
08B8A:  MOVFF  FF2,659
08B8E:  BCF    FF2.7
08B90:  MOVLW  00
08B92:  CALL   0EB8
08B96:  TBLRD*-
08B98:  TBLRD*+
08B9A:  MOVF   FF5,W
08B9C:  MOVWF  FEE
08B9E:  IORLW  00
08BA0:  BNZ   8B98
08BA2:  MOVLB  6
08BA4:  BTFSC  x59.7
08BA6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);       
08BA8:  MOVLW  06
08BAA:  MOVWF  x62
08BAC:  MOVLW  39
08BAE:  MOVWF  x61
08BB0:  CLRF   x63
08BB2:  CLRF   x64
08BB4:  MOVLW  01
08BB6:  MOVWF  x65
08BB8:  MOVLW  02
08BBA:  MOVWF  x66
08BBC:  MOVLB  0
08BBE:  CALL   2BEA
....................             displayTemperatura(Ajuste,30,30,0,3); 
08BC2:  MOVLB  6
08BC4:  CLRF   x5C
08BC6:  MOVFF  58A,65B
08BCA:  MOVLW  1E
08BCC:  MOVWF  x5D
08BCE:  MOVWF  x5E
08BD0:  CLRF   x5F
08BD2:  MOVLW  03
08BD4:  MOVWF  x60
08BD6:  MOVLB  0
08BD8:  CALL   4402
....................             visual=0; 
08BDC:  MOVLB  5
08BDE:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08BE0:  BSF    F92.4
08BE2:  BTFSC  F80.4
08BE4:  BRA    8BF2
....................             DelayPuls();Ajuste++;visual=1; 
08BE6:  MOVLB  0
08BE8:  CALL   379C
08BEC:  MOVLB  5
08BEE:  INCF   x8A,F
08BF0:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
08BF2:  BSF    F92.5
08BF4:  BTFSC  F80.5
08BF6:  BRA    8C08
....................          {   
....................             if(Ajuste>0){ 
08BF8:  MOVF   x8A,F
08BFA:  BZ    8C08
....................                DelayPuls();Ajuste--;visual=1;      
08BFC:  MOVLB  0
08BFE:  CALL   379C
08C02:  MOVLB  5
08C04:  DECF   x8A,F
08C06:  BSF    x87.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT) 
08C08:  BSF    F96.0
08C0A:  BTFSC  F84.0
08C0C:  BRA    8C10
....................             visual=1; 
08C0E:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08C10:  BSF    F96.1
08C12:  BTFSC  F84.1
08C14:  BRA    8C8A
....................             delay_ms(10); 
08C16:  MOVLW  0A
08C18:  MOVLB  6
08C1A:  MOVWF  x62
08C1C:  MOVLB  0
08C1E:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08C22:  MOVLW  04
08C24:  MOVLB  6
08C26:  MOVWF  x59
08C28:  MOVLW  AF
08C2A:  MOVWF  x62
08C2C:  MOVLB  0
08C2E:  CALL   1052
08C32:  MOVLB  6
08C34:  DECFSZ x59,F
08C36:  BRA    8C28
08C38:  MOVLW  64
08C3A:  MOVLB  5
08C3C:  MOVWF  x97
08C3E:  MOVLB  6
08C40:  CLRF   x61
08C42:  MOVLB  0
08C44:  CALL   25BC
08C48:  MOVLW  01
08C4A:  MOVLB  5
08C4C:  MOVWF  x9C
08C4E:  BSF    x87.4
....................             write_eeprom(18,Ajuste);delay_ms(20); 
08C50:  CLRF   FAA
08C52:  MOVLW  12
08C54:  MOVWF  FA9
08C56:  MOVFF  58A,FA8
08C5A:  BCF    FA6.6
08C5C:  BCF    FA6.7
08C5E:  BSF    FA6.2
08C60:  MOVF   FF2,W
08C62:  MOVWF  00
08C64:  BCF    FF2.7
08C66:  MOVLB  F
08C68:  MOVLW  55
08C6A:  MOVWF  FA7
08C6C:  MOVLW  AA
08C6E:  MOVWF  FA7
08C70:  BSF    FA6.1
08C72:  BTFSC  FA6.1
08C74:  BRA    8C72
08C76:  BCF    FA6.2
08C78:  MOVF   00,W
08C7A:  IORWF  FF2,F
08C7C:  MOVLW  14
08C7E:  MOVLB  6
08C80:  MOVWF  x62
08C82:  MOVLB  0
08C84:  CALL   1052
08C88:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==106){ // Menu de Ajuste de Ajuste - 
08C8A:  MOVF   x97,W
08C8C:  SUBLW  6A
08C8E:  BTFSS  FD8.2
08C90:  BRA    8DB0
....................        
....................          if(Ajusten>100) 
08C92:  MOVF   x8B,W
08C94:  SUBLW  64
08C96:  BC    8C9A
....................             Ajusten=0; 
08C98:  CLRF   x8B
....................         
....................          if(visual==1){ 
08C9A:  BTFSS  x87.4
08C9C:  BRA    8D06
....................             glcd_fillScreen(OFF); 
08C9E:  MOVLB  6
08CA0:  CLRF   x61
08CA2:  MOVLB  0
08CA4:  CALL   25BC
....................             strcpy(Menus.Letra,"Ajusten"); 
08CA8:  MOVLW  06
08CAA:  MOVWF  FEA
08CAC:  MOVLW  39
08CAE:  MOVWF  FE9
08CB0:  MOVFF  FF2,659
08CB4:  BCF    FF2.7
08CB6:  MOVLW  00
08CB8:  CALL   0EDE
08CBC:  TBLRD*-
08CBE:  TBLRD*+
08CC0:  MOVF   FF5,W
08CC2:  MOVWF  FEE
08CC4:  IORLW  00
08CC6:  BNZ   8CBE
08CC8:  MOVLB  6
08CCA:  BTFSC  x59.7
08CCC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
08CCE:  MOVLW  06
08CD0:  MOVWF  x62
08CD2:  MOVLW  39
08CD4:  MOVWF  x61
08CD6:  CLRF   x63
08CD8:  CLRF   x64
08CDA:  MOVLW  01
08CDC:  MOVWF  x65
08CDE:  MOVLW  02
08CE0:  MOVWF  x66
08CE2:  MOVLB  0
08CE4:  CALL   2BEA
....................             displayTemperatura(Ajusten,30,30,0,3); 
08CE8:  MOVLB  6
08CEA:  CLRF   x5C
08CEC:  MOVFF  58B,65B
08CF0:  MOVLW  1E
08CF2:  MOVWF  x5D
08CF4:  MOVWF  x5E
08CF6:  CLRF   x5F
08CF8:  MOVLW  03
08CFA:  MOVWF  x60
08CFC:  MOVLB  0
08CFE:  CALL   4402
....................             visual=0; 
08D02:  MOVLB  5
08D04:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08D06:  BSF    F92.4
08D08:  BTFSC  F80.4
08D0A:  BRA    8D18
....................             DelayPuls();Ajusten++;visual=1; 
08D0C:  MOVLB  0
08D0E:  CALL   379C
08D12:  MOVLB  5
08D14:  INCF   x8B,F
08D16:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08D18:  BSF    F92.5
08D1A:  BTFSC  F80.5
08D1C:  BRA    8D2E
....................             if(Ajusten>0){ 
08D1E:  MOVF   x8B,F
08D20:  BZ    8D2E
....................                DelayPuls();Ajusten--;visual=1;      
08D22:  MOVLB  0
08D24:  CALL   379C
08D28:  MOVLB  5
08D2A:  DECF   x8B,F
08D2C:  BSF    x87.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT) 
08D2E:  BSF    F96.0
08D30:  BTFSC  F84.0
08D32:  BRA    8D36
....................             visual=1; 
08D34:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08D36:  BSF    F96.1
08D38:  BTFSC  F84.1
08D3A:  BRA    8DB0
....................             delay_ms(10); 
08D3C:  MOVLW  0A
08D3E:  MOVLB  6
08D40:  MOVWF  x62
08D42:  MOVLB  0
08D44:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08D48:  MOVLW  04
08D4A:  MOVLB  6
08D4C:  MOVWF  x59
08D4E:  MOVLW  AF
08D50:  MOVWF  x62
08D52:  MOVLB  0
08D54:  CALL   1052
08D58:  MOVLB  6
08D5A:  DECFSZ x59,F
08D5C:  BRA    8D4E
08D5E:  MOVLW  64
08D60:  MOVLB  5
08D62:  MOVWF  x97
08D64:  MOVLB  6
08D66:  CLRF   x61
08D68:  MOVLB  0
08D6A:  CALL   25BC
08D6E:  MOVLW  01
08D70:  MOVLB  5
08D72:  MOVWF  x9C
08D74:  BSF    x87.4
....................             write_eeprom(19,Ajusten);delay_ms(20); 
08D76:  CLRF   FAA
08D78:  MOVLW  13
08D7A:  MOVWF  FA9
08D7C:  MOVFF  58B,FA8
08D80:  BCF    FA6.6
08D82:  BCF    FA6.7
08D84:  BSF    FA6.2
08D86:  MOVF   FF2,W
08D88:  MOVWF  00
08D8A:  BCF    FF2.7
08D8C:  MOVLB  F
08D8E:  MOVLW  55
08D90:  MOVWF  FA7
08D92:  MOVLW  AA
08D94:  MOVWF  FA7
08D96:  BSF    FA6.1
08D98:  BTFSC  FA6.1
08D9A:  BRA    8D98
08D9C:  BCF    FA6.2
08D9E:  MOVF   00,W
08DA0:  IORWF  FF2,F
08DA2:  MOVLW  14
08DA4:  MOVLB  6
08DA6:  MOVWF  x62
08DA8:  MOVLB  0
08DAA:  CALL   1052
08DAE:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==107){ // Menu de Ajuste de Media Movil 
08DB0:  MOVF   x97,W
08DB2:  SUBLW  6B
08DB4:  BTFSS  FD8.2
08DB6:  BRA    8EE0
....................        
....................          if(MediaMovil>80) 
08DB8:  MOVF   x8C,W
08DBA:  SUBLW  50
08DBC:  BC    8DC4
....................             MediaMovil=10; 
08DBE:  MOVLW  0A
08DC0:  MOVWF  x8C
....................          else if(MediaMovil<10) 
08DC2:  BRA    8DCE
08DC4:  MOVF   x8C,W
08DC6:  SUBLW  09
08DC8:  BNC   8DCE
....................             MediaMovil=80; 
08DCA:  MOVLW  50
08DCC:  MOVWF  x8C
....................        
....................          if(visual==1){ 
08DCE:  BTFSS  x87.4
08DD0:  BRA    8E3A
....................             glcd_fillScreen(OFF); 
08DD2:  MOVLB  6
08DD4:  CLRF   x61
08DD6:  MOVLB  0
08DD8:  CALL   25BC
....................             strcpy(Menus.Letra,"Media"); 
08DDC:  MOVLW  06
08DDE:  MOVWF  FEA
08DE0:  MOVLW  39
08DE2:  MOVWF  FE9
08DE4:  MOVFF  FF2,659
08DE8:  BCF    FF2.7
08DEA:  MOVLW  00
08DEC:  CALL   0F04
08DF0:  TBLRD*-
08DF2:  TBLRD*+
08DF4:  MOVF   FF5,W
08DF6:  MOVWF  FEE
08DF8:  IORLW  00
08DFA:  BNZ   8DF2
08DFC:  MOVLB  6
08DFE:  BTFSC  x59.7
08E00:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
08E02:  MOVLW  06
08E04:  MOVWF  x62
08E06:  MOVLW  39
08E08:  MOVWF  x61
08E0A:  CLRF   x63
08E0C:  CLRF   x64
08E0E:  MOVLW  01
08E10:  MOVWF  x65
08E12:  MOVLW  02
08E14:  MOVWF  x66
08E16:  MOVLB  0
08E18:  CALL   2BEA
....................             displayTemperatura(MediaMovil,30,30,0,3); 
08E1C:  MOVLB  6
08E1E:  CLRF   x5C
08E20:  MOVFF  58C,65B
08E24:  MOVLW  1E
08E26:  MOVWF  x5D
08E28:  MOVWF  x5E
08E2A:  CLRF   x5F
08E2C:  MOVLW  03
08E2E:  MOVWF  x60
08E30:  MOVLB  0
08E32:  CALL   4402
....................             visual=0; 
08E36:  MOVLB  5
08E38:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08E3A:  BSF    F92.4
08E3C:  BTFSC  F80.4
08E3E:  BRA    8E4C
....................             DelayPuls();MediaMovil++;visual=1; 
08E40:  MOVLB  0
08E42:  CALL   379C
08E46:  MOVLB  5
08E48:  INCF   x8C,F
08E4A:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08E4C:  BSF    F92.5
08E4E:  BTFSC  F80.5
08E50:  BRA    8E5E
....................             DelayPuls();MediaMovil--;visual=1;      
08E52:  MOVLB  0
08E54:  CALL   379C
08E58:  MOVLB  5
08E5A:  DECF   x8C,F
08E5C:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT) 
08E5E:  BSF    F96.0
08E60:  BTFSC  F84.0
08E62:  BRA    8E66
....................             visual=1; 
08E64:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08E66:  BSF    F96.1
08E68:  BTFSC  F84.1
08E6A:  BRA    8EE0
....................             delay_ms(10); 
08E6C:  MOVLW  0A
08E6E:  MOVLB  6
08E70:  MOVWF  x62
08E72:  MOVLB  0
08E74:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08E78:  MOVLW  04
08E7A:  MOVLB  6
08E7C:  MOVWF  x59
08E7E:  MOVLW  AF
08E80:  MOVWF  x62
08E82:  MOVLB  0
08E84:  CALL   1052
08E88:  MOVLB  6
08E8A:  DECFSZ x59,F
08E8C:  BRA    8E7E
08E8E:  MOVLW  64
08E90:  MOVLB  5
08E92:  MOVWF  x97
08E94:  MOVLB  6
08E96:  CLRF   x61
08E98:  MOVLB  0
08E9A:  CALL   25BC
08E9E:  MOVLW  01
08EA0:  MOVLB  5
08EA2:  MOVWF  x9C
08EA4:  BSF    x87.4
....................             write_eeprom(20,(int8)MediaMovil);delay_ms(20); 
08EA6:  CLRF   FAA
08EA8:  MOVLW  14
08EAA:  MOVWF  FA9
08EAC:  MOVFF  58C,FA8
08EB0:  BCF    FA6.6
08EB2:  BCF    FA6.7
08EB4:  BSF    FA6.2
08EB6:  MOVF   FF2,W
08EB8:  MOVWF  00
08EBA:  BCF    FF2.7
08EBC:  MOVLB  F
08EBE:  MOVLW  55
08EC0:  MOVWF  FA7
08EC2:  MOVLW  AA
08EC4:  MOVWF  FA7
08EC6:  BSF    FA6.1
08EC8:  BTFSC  FA6.1
08ECA:  BRA    8EC8
08ECC:  BCF    FA6.2
08ECE:  MOVF   00,W
08ED0:  IORWF  FF2,F
08ED2:  MOVLW  14
08ED4:  MOVLB  6
08ED6:  MOVWF  x62
08ED8:  MOVLB  0
08EDA:  CALL   1052
08EDE:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==108){ // Menu de Ganancia Instrumentacion 
08EE0:  MOVF   x97,W
08EE2:  SUBLW  6C
08EE4:  BTFSS  FD8.2
08EE6:  BRA    91AA
....................        
....................          if(Gain>50 || Gain<30) 
08EE8:  MOVLB  6
08EEA:  CLRF   x60
08EEC:  CLRF   x5F
08EEE:  MOVLW  48
08EF0:  MOVWF  x5E
08EF2:  MOVLW  84
08EF4:  MOVWF  x5D
08EF6:  MOVFF  5C0,664
08EFA:  MOVFF  5BF,663
08EFE:  MOVFF  5BE,662
08F02:  MOVFF  5BD,661
08F06:  MOVLB  0
08F08:  CALL   1C42
08F0C:  BC    8F34
08F0E:  MOVFF  5C0,660
08F12:  MOVFF  5BF,65F
08F16:  MOVFF  5BE,65E
08F1A:  MOVFF  5BD,65D
08F1E:  MOVLB  6
08F20:  CLRF   x64
08F22:  CLRF   x63
08F24:  MOVLW  70
08F26:  MOVWF  x62
08F28:  MOVLW  83
08F2A:  MOVWF  x61
08F2C:  MOVLB  0
08F2E:  CALL   1C42
08F32:  BNC   8F44
....................             Gain=40; 
08F34:  MOVLB  5
08F36:  CLRF   xC0
08F38:  CLRF   xBF
08F3A:  MOVLW  20
08F3C:  MOVWF  xBE
08F3E:  MOVLW  84
08F40:  MOVWF  xBD
08F42:  MOVLB  0
....................        
....................          strcpy(Menus.Letra,"Ganancia"); 
08F44:  MOVLW  06
08F46:  MOVWF  FEA
08F48:  MOVLW  39
08F4A:  MOVWF  FE9
08F4C:  MOVFF  FF2,659
08F50:  BCF    FF2.7
08F52:  MOVLW  00
08F54:  CALL   0F28
08F58:  TBLRD*-
08F5A:  TBLRD*+
08F5C:  MOVF   FF5,W
08F5E:  MOVWF  FEE
08F60:  IORLW  00
08F62:  BNZ   8F5A
08F64:  MOVLB  6
08F66:  BTFSC  x59.7
08F68:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
08F6A:  MOVLW  06
08F6C:  MOVWF  x62
08F6E:  MOVLW  39
08F70:  MOVWF  x61
08F72:  CLRF   x63
08F74:  CLRF   x64
08F76:  MOVLW  01
08F78:  MOVWF  x65
08F7A:  MOVLW  02
08F7C:  MOVWF  x66
08F7E:  MOVLB  0
08F80:  CALL   2BEA
....................          displayTT(Gain,30,30,2); 
08F84:  MOVFF  5C0,65C
08F88:  MOVFF  5BF,65B
08F8C:  MOVFF  5BE,65A
08F90:  MOVFF  5BD,659
08F94:  MOVLW  1E
08F96:  MOVLB  6
08F98:  MOVWF  x5D
08F9A:  MOVWF  x5E
08F9C:  MOVLW  02
08F9E:  MOVWF  x5F
08FA0:  MOVLB  0
08FA2:  CALL   581E
....................  
....................          if(UP){   
08FA6:  BSF    F92.4
08FA8:  BTFSC  F80.4
08FAA:  BRA    8FEA
....................             DelayPuls(); 
08FAC:  CALL   379C
....................             Gain+=0.1; 
08FB0:  BCF    FD8.1
08FB2:  MOVFF  5C0,661
08FB6:  MOVFF  5BF,660
08FBA:  MOVFF  5BE,65F
08FBE:  MOVFF  5BD,65E
08FC2:  MOVLW  CD
08FC4:  MOVLB  6
08FC6:  MOVWF  x65
08FC8:  MOVLW  CC
08FCA:  MOVWF  x64
08FCC:  MOVLW  4C
08FCE:  MOVWF  x63
08FD0:  MOVLW  7B
08FD2:  MOVWF  x62
08FD4:  MOVLB  0
08FD6:  CALL   1246
08FDA:  MOVFF  03,5C0
08FDE:  MOVFF  02,5BF
08FE2:  MOVFF  01,5BE
08FE6:  MOVFF  00,5BD
....................          } 
....................                 
....................          if(DOWN){   
08FEA:  BSF    F92.5
08FEC:  BTFSC  F80.5
08FEE:  BRA    902E
....................             DelayPuls(); 
08FF0:  CALL   379C
....................             Gain-=0.1; 
08FF4:  BSF    FD8.1
08FF6:  MOVFF  5C0,661
08FFA:  MOVFF  5BF,660
08FFE:  MOVFF  5BE,65F
09002:  MOVFF  5BD,65E
09006:  MOVLW  CD
09008:  MOVLB  6
0900A:  MOVWF  x65
0900C:  MOVLW  CC
0900E:  MOVWF  x64
09010:  MOVLW  4C
09012:  MOVWF  x63
09014:  MOVLW  7B
09016:  MOVWF  x62
09018:  MOVLB  0
0901A:  CALL   1246
0901E:  MOVFF  03,5C0
09022:  MOVFF  02,5BF
09026:  MOVFF  01,5BE
0902A:  MOVFF  00,5BD
....................          } 
....................                 
....................          if(RIGHT) 
0902E:  BSF    F96.0
09030:  BTFSC  F84.0
09032:  BRA    903A
....................             visual=1; 
09034:  MOVLB  5
09036:  BSF    x87.4
09038:  MOVLB  0
....................                    
....................          if(LEFT){ 
0903A:  BSF    F96.1
0903C:  BTFSC  F84.1
0903E:  BRA    91A8
....................             delay_ms(10); 
09040:  MOVLW  0A
09042:  MOVLB  6
09044:  MOVWF  x62
09046:  MOVLB  0
09048:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0904C:  MOVLW  04
0904E:  MOVLB  6
09050:  MOVWF  x59
09052:  MOVLW  AF
09054:  MOVWF  x62
09056:  MOVLB  0
09058:  CALL   1052
0905C:  MOVLB  6
0905E:  DECFSZ x59,F
09060:  BRA    9052
09062:  MOVLW  64
09064:  MOVLB  5
09066:  MOVWF  x97
09068:  MOVLB  6
0906A:  CLRF   x61
0906C:  MOVLB  0
0906E:  CALL   25BC
09072:  MOVLW  01
09074:  MOVLB  5
09076:  MOVWF  x9C
09078:  BSF    x87.4
....................             write_eeprom(21,(int8)Gain); 
0907A:  MOVFF  5C0,65C
0907E:  MOVFF  5BF,65B
09082:  MOVFF  5BE,65A
09086:  MOVFF  5BD,659
0908A:  MOVLB  0
0908C:  CALL   4308
09090:  MOVFF  01,659
09094:  CLRF   FAA
09096:  MOVLW  15
09098:  MOVWF  FA9
0909A:  MOVFF  659,FA8
0909E:  BCF    FA6.6
090A0:  BCF    FA6.7
090A2:  BSF    FA6.2
090A4:  MOVF   FF2,W
090A6:  MOVWF  00
090A8:  BCF    FF2.7
090AA:  MOVLB  F
090AC:  MOVLW  55
090AE:  MOVWF  FA7
090B0:  MOVLW  AA
090B2:  MOVWF  FA7
090B4:  BSF    FA6.1
090B6:  BTFSC  FA6.1
090B8:  BRA    90B6
090BA:  BCF    FA6.2
090BC:  MOVF   00,W
090BE:  IORWF  FF2,F
....................             delay_ms(10); 
090C0:  MOVLW  0A
090C2:  MOVLB  6
090C4:  MOVWF  x62
090C6:  MOVLB  0
090C8:  CALL   1052
....................             Temporal=Gain-((int8)Gain); 
090CC:  MOVFF  5C0,65C
090D0:  MOVFF  5BF,65B
090D4:  MOVFF  5BE,65A
090D8:  MOVFF  5BD,659
090DC:  CALL   4308
090E0:  MOVLB  6
090E2:  CLRF   x60
090E4:  MOVFF  01,65F
090E8:  MOVLB  0
090EA:  CALL   10B2
090EE:  BSF    FD8.1
090F0:  MOVFF  5C0,661
090F4:  MOVFF  5BF,660
090F8:  MOVFF  5BE,65F
090FC:  MOVFF  5BD,65E
09100:  MOVFF  03,665
09104:  MOVFF  02,664
09108:  MOVFF  01,663
0910C:  MOVFF  00,662
09110:  CALL   1246
09114:  MOVFF  03,62C
09118:  MOVFF  02,62B
0911C:  MOVFF  01,62A
09120:  MOVFF  00,629
....................             Temporal=Temporal*10; 
09124:  MOVFF  62C,67C
09128:  MOVFF  62B,67B
0912C:  MOVFF  62A,67A
09130:  MOVFF  629,679
09134:  MOVLB  6
09136:  CLRF   x80
09138:  CLRF   x7F
0913A:  MOVLW  20
0913C:  MOVWF  x7E
0913E:  MOVLW  82
09140:  MOVWF  x7D
09142:  MOVLB  0
09144:  CALL   2D3C
09148:  MOVFF  03,62C
0914C:  MOVFF  02,62B
09150:  MOVFF  01,62A
09154:  MOVFF  00,629
....................             write_eeprom(22,(int8)Temporal); 
09158:  MOVFF  62C,65C
0915C:  MOVFF  62B,65B
09160:  MOVFF  62A,65A
09164:  MOVFF  629,659
09168:  CALL   4308
0916C:  MOVFF  01,659
09170:  CLRF   FAA
09172:  MOVLW  16
09174:  MOVWF  FA9
09176:  MOVFF  659,FA8
0917A:  BCF    FA6.6
0917C:  BCF    FA6.7
0917E:  BSF    FA6.2
09180:  MOVF   FF2,W
09182:  MOVWF  00
09184:  BCF    FF2.7
09186:  MOVLB  F
09188:  MOVLW  55
0918A:  MOVWF  FA7
0918C:  MOVLW  AA
0918E:  MOVWF  FA7
09190:  BSF    FA6.1
09192:  BTFSC  FA6.1
09194:  BRA    9192
09196:  BCF    FA6.2
09198:  MOVF   00,W
0919A:  IORWF  FF2,F
....................             delay_ms(10); 
0919C:  MOVLW  0A
0919E:  MOVLB  6
091A0:  MOVWF  x62
091A2:  MOVLB  0
091A4:  CALL   1052
091A8:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==109){ // Menu de Ajuste R1 
091AA:  MOVF   x97,W
091AC:  SUBLW  6D
091AE:  BTFSS  FD8.2
091B0:  BRA    9422
....................        
....................          if(R1>6400 || R1<6000) 
091B2:  MOVLB  6
091B4:  CLRF   x60
091B6:  CLRF   x5F
091B8:  MOVLW  48
091BA:  MOVWF  x5E
091BC:  MOVLW  8B
091BE:  MOVWF  x5D
091C0:  MOVFF  5E4,664
091C4:  MOVFF  5E3,663
091C8:  MOVFF  5E2,662
091CC:  MOVFF  5E1,661
091D0:  MOVLB  0
091D2:  CALL   1C42
091D6:  BC    9200
091D8:  MOVFF  5E4,660
091DC:  MOVFF  5E3,65F
091E0:  MOVFF  5E2,65E
091E4:  MOVFF  5E1,65D
091E8:  MOVLB  6
091EA:  CLRF   x64
091EC:  MOVLW  80
091EE:  MOVWF  x63
091F0:  MOVLW  3B
091F2:  MOVWF  x62
091F4:  MOVLW  8B
091F6:  MOVWF  x61
091F8:  MOVLB  0
091FA:  CALL   1C42
091FE:  BNC   9212
....................             R1=6200; 
09200:  MOVLB  5
09202:  CLRF   xE4
09204:  MOVLW  C0
09206:  MOVWF  xE3
09208:  MOVLW  41
0920A:  MOVWF  xE2
0920C:  MOVLW  8B
0920E:  MOVWF  xE1
09210:  MOVLB  0
....................  
....................          strcpy(Menus.Letra,"R51"); 
09212:  MOVLW  06
09214:  MOVWF  FEA
09216:  MOVLW  39
09218:  MOVWF  FE9
0921A:  MOVFF  FF2,659
0921E:  BCF    FF2.7
09220:  MOVLW  00
09222:  CALL   0F50
09226:  TBLRD*-
09228:  TBLRD*+
0922A:  MOVF   FF5,W
0922C:  MOVWF  FEE
0922E:  IORLW  00
09230:  BNZ   9228
09232:  MOVLB  6
09234:  BTFSC  x59.7
09236:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2);    
09238:  MOVLW  06
0923A:  MOVWF  x62
0923C:  MOVLW  39
0923E:  MOVWF  x61
09240:  CLRF   x63
09242:  CLRF   x64
09244:  MOVLW  01
09246:  MOVWF  x65
09248:  MOVLW  02
0924A:  MOVWF  x66
0924C:  MOVLB  0
0924E:  CALL   2BEA
....................          displayTemperatura(R1,30,30,0,3); 
09252:  MOVFF  5E4,65C
09256:  MOVFF  5E3,65B
0925A:  MOVFF  5E2,65A
0925E:  MOVFF  5E1,659
09262:  CALL   4308
09266:  MOVFF  02,65A
0926A:  MOVFF  01,659
0926E:  MOVFF  02,65C
09272:  MOVFF  01,65B
09276:  MOVLW  1E
09278:  MOVLB  6
0927A:  MOVWF  x5D
0927C:  MOVWF  x5E
0927E:  CLRF   x5F
09280:  MOVLW  03
09282:  MOVWF  x60
09284:  MOVLB  0
09286:  CALL   4402
....................  
....................          if(UP){   
0928A:  BSF    F92.4
0928C:  BTFSC  F80.4
0928E:  BRA    92D2
....................             DelayPuls(); 
09290:  CALL   379C
....................             R1+=1.0; 
09294:  BCF    FD8.1
09296:  MOVFF  5E4,661
0929A:  MOVFF  5E3,660
0929E:  MOVFF  5E2,65F
092A2:  MOVFF  5E1,65E
092A6:  MOVLB  6
092A8:  CLRF   x65
092AA:  CLRF   x64
092AC:  CLRF   x63
092AE:  MOVLW  7F
092B0:  MOVWF  x62
092B2:  MOVLB  0
092B4:  CALL   1246
092B8:  MOVFF  03,5E4
092BC:  MOVFF  02,5E3
092C0:  MOVFF  01,5E2
092C4:  MOVFF  00,5E1
....................             glcd_fillscreen(OFF); 
092C8:  MOVLB  6
092CA:  CLRF   x61
092CC:  MOVLB  0
092CE:  CALL   25BC
....................          } 
....................                 
....................          if(DOWN){   
092D2:  BSF    F92.5
092D4:  BTFSC  F80.5
092D6:  BRA    931A
....................             DelayPuls(); 
092D8:  CALL   379C
....................             R1-=1.0; 
092DC:  BSF    FD8.1
092DE:  MOVFF  5E4,661
092E2:  MOVFF  5E3,660
092E6:  MOVFF  5E2,65F
092EA:  MOVFF  5E1,65E
092EE:  MOVLB  6
092F0:  CLRF   x65
092F2:  CLRF   x64
092F4:  CLRF   x63
092F6:  MOVLW  7F
092F8:  MOVWF  x62
092FA:  MOVLB  0
092FC:  CALL   1246
09300:  MOVFF  03,5E4
09304:  MOVFF  02,5E3
09308:  MOVFF  01,5E2
0930C:  MOVFF  00,5E1
....................             glcd_fillscreen(OFF); 
09310:  MOVLB  6
09312:  CLRF   x61
09314:  MOVLB  0
09316:  CALL   25BC
....................          } 
....................                 
....................          if(RIGHT){   
0931A:  BSF    F96.0
0931C:  BTFSC  F84.0
0931E:  BRA    932E
....................             visual=1; 
09320:  MOVLB  5
09322:  BSF    x87.4
....................             glcd_fillscreen(OFF); 
09324:  MOVLB  6
09326:  CLRF   x61
09328:  MOVLB  0
0932A:  CALL   25BC
....................          }  
....................                    
....................          if(LEFT){ 
0932E:  BSF    F96.1
09330:  BTFSC  F84.1
09332:  BRA    9420
....................             delay_ms(10); 
09334:  MOVLW  0A
09336:  MOVLB  6
09338:  MOVWF  x62
0933A:  MOVLB  0
0933C:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
09340:  MOVLW  04
09342:  MOVLB  6
09344:  MOVWF  x59
09346:  MOVLW  AF
09348:  MOVWF  x62
0934A:  MOVLB  0
0934C:  CALL   1052
09350:  MOVLB  6
09352:  DECFSZ x59,F
09354:  BRA    9346
09356:  MOVLW  64
09358:  MOVLB  5
0935A:  MOVWF  x97
0935C:  MOVLB  6
0935E:  CLRF   x61
09360:  MOVLB  0
09362:  CALL   25BC
09366:  MOVLW  01
09368:  MOVLB  5
0936A:  MOVWF  x9C
0936C:  BSF    x87.4
....................             write_eeprom(23,make8((int16)R1,0)); 
0936E:  MOVFF  5E4,65C
09372:  MOVFF  5E3,65B
09376:  MOVFF  5E2,65A
0937A:  MOVFF  5E1,659
0937E:  MOVLB  0
09380:  CALL   4308
09384:  MOVFF  02,65A
09388:  MOVFF  01,659
0938C:  MOVFF  659,65B
09390:  CLRF   FAA
09392:  MOVLW  17
09394:  MOVWF  FA9
09396:  MOVFF  65B,FA8
0939A:  BCF    FA6.6
0939C:  BCF    FA6.7
0939E:  BSF    FA6.2
093A0:  MOVF   FF2,W
093A2:  MOVWF  00
093A4:  BCF    FF2.7
093A6:  MOVLB  F
093A8:  MOVLW  55
093AA:  MOVWF  FA7
093AC:  MOVLW  AA
093AE:  MOVWF  FA7
093B0:  BSF    FA6.1
093B2:  BTFSC  FA6.1
093B4:  BRA    93B2
093B6:  BCF    FA6.2
093B8:  MOVF   00,W
093BA:  IORWF  FF2,F
....................             delay_ms(10); 
093BC:  MOVLW  0A
093BE:  MOVLB  6
093C0:  MOVWF  x62
093C2:  MOVLB  0
093C4:  CALL   1052
....................             write_eeprom(24,make8((int16)R1,1)); 
093C8:  MOVFF  5E4,65C
093CC:  MOVFF  5E3,65B
093D0:  MOVFF  5E2,65A
093D4:  MOVFF  5E1,659
093D8:  CALL   4308
093DC:  MOVFF  02,65A
093E0:  MOVFF  01,659
093E4:  MOVFF  65A,65B
093E8:  CLRF   FAA
093EA:  MOVLW  18
093EC:  MOVWF  FA9
093EE:  MOVFF  65B,FA8
093F2:  BCF    FA6.6
093F4:  BCF    FA6.7
093F6:  BSF    FA6.2
093F8:  MOVF   FF2,W
093FA:  MOVWF  00
093FC:  BCF    FF2.7
093FE:  MOVLB  F
09400:  MOVLW  55
09402:  MOVWF  FA7
09404:  MOVLW  AA
09406:  MOVWF  FA7
09408:  BSF    FA6.1
0940A:  BTFSC  FA6.1
0940C:  BRA    940A
0940E:  BCF    FA6.2
09410:  MOVF   00,W
09412:  IORWF  FF2,F
....................             delay_ms(10); 
09414:  MOVLW  0A
09416:  MOVLB  6
09418:  MOVWF  x62
0941A:  MOVLB  0
0941C:  CALL   1052
09420:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==110){ // Menu de Ajuste RPT100 
09422:  MOVF   x97,W
09424:  SUBLW  6E
09426:  BTFSS  FD8.2
09428:  BRA    96DE
....................        
....................          if(RPT100>2.0) 
0942A:  MOVLB  6
0942C:  CLRF   x60
0942E:  CLRF   x5F
09430:  CLRF   x5E
09432:  MOVLW  80
09434:  MOVWF  x5D
09436:  MOVFF  5C4,664
0943A:  MOVFF  5C3,663
0943E:  MOVFF  5C2,662
09442:  MOVFF  5C1,661
09446:  MOVLB  0
09448:  CALL   1C42
0944C:  BNC   945C
....................             RPT100=0.5; 
0944E:  MOVLB  5
09450:  CLRF   xC4
09452:  CLRF   xC3
09454:  CLRF   xC2
09456:  MOVLW  7E
09458:  MOVWF  xC1
0945A:  MOVLB  0
....................  
....................          strcpy(Menus.Letra,"RPT100"); 
0945C:  MOVLW  06
0945E:  MOVWF  FEA
09460:  MOVLW  39
09462:  MOVWF  FE9
09464:  MOVFF  FF2,659
09468:  BCF    FF2.7
0946A:  MOVLW  00
0946C:  CALL   0F72
09470:  TBLRD*-
09472:  TBLRD*+
09474:  MOVF   FF5,W
09476:  MOVWF  FEE
09478:  IORLW  00
0947A:  BNZ   9472
0947C:  MOVLB  6
0947E:  BTFSC  x59.7
09480:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2);    
09482:  MOVLW  06
09484:  MOVWF  x62
09486:  MOVLW  39
09488:  MOVWF  x61
0948A:  CLRF   x63
0948C:  CLRF   x64
0948E:  MOVLW  01
09490:  MOVWF  x65
09492:  MOVLW  02
09494:  MOVWF  x66
09496:  MOVLB  0
09498:  CALL   2BEA
....................          displayTT(RPT100,30,30,2); 
0949C:  MOVFF  5C4,65C
094A0:  MOVFF  5C3,65B
094A4:  MOVFF  5C2,65A
094A8:  MOVFF  5C1,659
094AC:  MOVLW  1E
094AE:  MOVLB  6
094B0:  MOVWF  x5D
094B2:  MOVWF  x5E
094B4:  MOVLW  02
094B6:  MOVWF  x5F
094B8:  MOVLB  0
094BA:  CALL   581E
....................  
....................          if(UP){   
094BE:  BSF    F92.4
094C0:  BTFSC  F80.4
094C2:  BRA    950C
....................             DelayPuls(); 
094C4:  CALL   379C
....................             RPT100+=0.1; 
094C8:  BCF    FD8.1
094CA:  MOVFF  5C4,661
094CE:  MOVFF  5C3,660
094D2:  MOVFF  5C2,65F
094D6:  MOVFF  5C1,65E
094DA:  MOVLW  CD
094DC:  MOVLB  6
094DE:  MOVWF  x65
094E0:  MOVLW  CC
094E2:  MOVWF  x64
094E4:  MOVLW  4C
094E6:  MOVWF  x63
094E8:  MOVLW  7B
094EA:  MOVWF  x62
094EC:  MOVLB  0
094EE:  CALL   1246
094F2:  MOVFF  03,5C4
094F6:  MOVFF  02,5C3
094FA:  MOVFF  01,5C2
094FE:  MOVFF  00,5C1
....................             glcd_fillscreen(OFF); 
09502:  MOVLB  6
09504:  CLRF   x61
09506:  MOVLB  0
09508:  CALL   25BC
....................          } 
....................                 
....................          if(DOWN){   
0950C:  BSF    F92.5
0950E:  BTFSC  F80.5
09510:  BRA    955A
....................             DelayPuls(); 
09512:  CALL   379C
....................             RPT100-=0.1; 
09516:  BSF    FD8.1
09518:  MOVFF  5C4,661
0951C:  MOVFF  5C3,660
09520:  MOVFF  5C2,65F
09524:  MOVFF  5C1,65E
09528:  MOVLW  CD
0952A:  MOVLB  6
0952C:  MOVWF  x65
0952E:  MOVLW  CC
09530:  MOVWF  x64
09532:  MOVLW  4C
09534:  MOVWF  x63
09536:  MOVLW  7B
09538:  MOVWF  x62
0953A:  MOVLB  0
0953C:  CALL   1246
09540:  MOVFF  03,5C4
09544:  MOVFF  02,5C3
09548:  MOVFF  01,5C2
0954C:  MOVFF  00,5C1
....................             glcd_fillscreen(OFF); 
09550:  MOVLB  6
09552:  CLRF   x61
09554:  MOVLB  0
09556:  CALL   25BC
....................          } 
....................                 
....................          if(RIGHT){   
0955A:  BSF    F96.0
0955C:  BTFSC  F84.0
0955E:  BRA    956E
....................             visual=1; 
09560:  MOVLB  5
09562:  BSF    x87.4
....................             glcd_fillscreen(OFF); 
09564:  MOVLB  6
09566:  CLRF   x61
09568:  MOVLB  0
0956A:  CALL   25BC
....................          }  
....................                    
....................          if(LEFT){ 
0956E:  BSF    F96.1
09570:  BTFSC  F84.1
09572:  BRA    96DC
....................             delay_ms(10); 
09574:  MOVLW  0A
09576:  MOVLB  6
09578:  MOVWF  x62
0957A:  MOVLB  0
0957C:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
09580:  MOVLW  04
09582:  MOVLB  6
09584:  MOVWF  x59
09586:  MOVLW  AF
09588:  MOVWF  x62
0958A:  MOVLB  0
0958C:  CALL   1052
09590:  MOVLB  6
09592:  DECFSZ x59,F
09594:  BRA    9586
09596:  MOVLW  64
09598:  MOVLB  5
0959A:  MOVWF  x97
0959C:  MOVLB  6
0959E:  CLRF   x61
095A0:  MOVLB  0
095A2:  CALL   25BC
095A6:  MOVLW  01
095A8:  MOVLB  5
095AA:  MOVWF  x9C
095AC:  BSF    x87.4
....................             write_eeprom(25,(int8)RPT100); 
095AE:  MOVFF  5C4,65C
095B2:  MOVFF  5C3,65B
095B6:  MOVFF  5C2,65A
095BA:  MOVFF  5C1,659
095BE:  MOVLB  0
095C0:  CALL   4308
095C4:  MOVFF  01,659
095C8:  CLRF   FAA
095CA:  MOVLW  19
095CC:  MOVWF  FA9
095CE:  MOVFF  659,FA8
095D2:  BCF    FA6.6
095D4:  BCF    FA6.7
095D6:  BSF    FA6.2
095D8:  MOVF   FF2,W
095DA:  MOVWF  00
095DC:  BCF    FF2.7
095DE:  MOVLB  F
095E0:  MOVLW  55
095E2:  MOVWF  FA7
095E4:  MOVLW  AA
095E6:  MOVWF  FA7
095E8:  BSF    FA6.1
095EA:  BTFSC  FA6.1
095EC:  BRA    95EA
095EE:  BCF    FA6.2
095F0:  MOVF   00,W
095F2:  IORWF  FF2,F
....................             delay_ms(10); 
095F4:  MOVLW  0A
095F6:  MOVLB  6
095F8:  MOVWF  x62
095FA:  MOVLB  0
095FC:  CALL   1052
....................             Temporal=RPT100-((int8)RPT100); 
09600:  MOVFF  5C4,65C
09604:  MOVFF  5C3,65B
09608:  MOVFF  5C2,65A
0960C:  MOVFF  5C1,659
09610:  CALL   4308
09614:  MOVLB  6
09616:  CLRF   x60
09618:  MOVFF  01,65F
0961C:  MOVLB  0
0961E:  CALL   10B2
09622:  BSF    FD8.1
09624:  MOVFF  5C4,661
09628:  MOVFF  5C3,660
0962C:  MOVFF  5C2,65F
09630:  MOVFF  5C1,65E
09634:  MOVFF  03,665
09638:  MOVFF  02,664
0963C:  MOVFF  01,663
09640:  MOVFF  00,662
09644:  CALL   1246
09648:  MOVFF  03,62C
0964C:  MOVFF  02,62B
09650:  MOVFF  01,62A
09654:  MOVFF  00,629
....................             Temporal=Temporal*10; 
09658:  MOVFF  62C,67C
0965C:  MOVFF  62B,67B
09660:  MOVFF  62A,67A
09664:  MOVFF  629,679
09668:  MOVLB  6
0966A:  CLRF   x80
0966C:  CLRF   x7F
0966E:  MOVLW  20
09670:  MOVWF  x7E
09672:  MOVLW  82
09674:  MOVWF  x7D
09676:  MOVLB  0
09678:  CALL   2D3C
0967C:  MOVFF  03,62C
09680:  MOVFF  02,62B
09684:  MOVFF  01,62A
09688:  MOVFF  00,629
....................             write_eeprom(26,(int8)Temporal); 
0968C:  MOVFF  62C,65C
09690:  MOVFF  62B,65B
09694:  MOVFF  62A,65A
09698:  MOVFF  629,659
0969C:  CALL   4308
096A0:  MOVFF  01,659
096A4:  CLRF   FAA
096A6:  MOVLW  1A
096A8:  MOVWF  FA9
096AA:  MOVFF  659,FA8
096AE:  BCF    FA6.6
096B0:  BCF    FA6.7
096B2:  BSF    FA6.2
096B4:  MOVF   FF2,W
096B6:  MOVWF  00
096B8:  BCF    FF2.7
096BA:  MOVLB  F
096BC:  MOVLW  55
096BE:  MOVWF  FA7
096C0:  MOVLW  AA
096C2:  MOVWF  FA7
096C4:  BSF    FA6.1
096C6:  BTFSC  FA6.1
096C8:  BRA    96C6
096CA:  BCF    FA6.2
096CC:  MOVF   00,W
096CE:  IORWF  FF2,F
....................             delay_ms(10); 
096D0:  MOVLW  0A
096D2:  MOVLB  6
096D4:  MOVWF  x62
096D6:  MOVLB  0
096D8:  CALL   1052
096DC:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==111){ // Menu de Ajuste de Entrada Analoga de Temperatura 
096DE:  MOVF   x97,W
096E0:  SUBLW  6F
096E2:  BTFSS  FD8.2
096E4:  BRA    97FA
....................        
....................          if(visual==1){ 
096E6:  BTFSS  x87.4
096E8:  BRA    9752
....................             glcd_fillScreen(OFF); 
096EA:  MOVLB  6
096EC:  CLRF   x61
096EE:  MOVLB  0
096F0:  CALL   25BC
....................             strcpy(Menus.Letra,"In Tem"); 
096F4:  MOVLW  06
096F6:  MOVWF  FEA
096F8:  MOVLW  39
096FA:  MOVWF  FE9
096FC:  MOVFF  FF2,659
09700:  BCF    FF2.7
09702:  MOVLW  00
09704:  CALL   0F98
09708:  TBLRD*-
0970A:  TBLRD*+
0970C:  MOVF   FF5,W
0970E:  MOVWF  FEE
09710:  IORLW  00
09712:  BNZ   970A
09714:  MOVLB  6
09716:  BTFSC  x59.7
09718:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
0971A:  MOVLW  06
0971C:  MOVWF  x62
0971E:  MOVLW  39
09720:  MOVWF  x61
09722:  CLRF   x63
09724:  CLRF   x64
09726:  MOVLW  01
09728:  MOVWF  x65
0972A:  MOVLW  02
0972C:  MOVWF  x66
0972E:  MOVLB  0
09730:  CALL   2BEA
....................             displayTemperatura(Source,30,30,0,3); 
09734:  MOVLB  6
09736:  CLRF   x5C
09738:  MOVFF  596,65B
0973C:  MOVLW  1E
0973E:  MOVWF  x5D
09740:  MOVWF  x5E
09742:  CLRF   x5F
09744:  MOVLW  03
09746:  MOVWF  x60
09748:  MOVLB  0
0974A:  CALL   4402
....................             visual=0; 
0974E:  MOVLB  5
09750:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
09752:  BSF    F92.4
09754:  BTFSC  F80.4
09756:  BRA    9766
....................             DelayPuls();Source=1;visual=1; 
09758:  MOVLB  0
0975A:  CALL   379C
0975E:  MOVLW  01
09760:  MOVLB  5
09762:  MOVWF  x96
09764:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
09766:  BSF    F92.5
09768:  BTFSC  F80.5
0976A:  BRA    9778
....................             DelayPuls();Source=0;visual=1;      
0976C:  MOVLB  0
0976E:  CALL   379C
09772:  MOVLB  5
09774:  CLRF   x96
09776:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT) 
09778:  BSF    F96.0
0977A:  BTFSC  F84.0
0977C:  BRA    9780
....................             visual=1; 
0977E:  BSF    x87.4
....................                    
....................          if(LEFT){ 
09780:  BSF    F96.1
09782:  BTFSC  F84.1
09784:  BRA    97FA
....................             delay_ms(10); 
09786:  MOVLW  0A
09788:  MOVLB  6
0978A:  MOVWF  x62
0978C:  MOVLB  0
0978E:  CALL   1052
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
09792:  MOVLW  04
09794:  MOVLB  6
09796:  MOVWF  x59
09798:  MOVLW  AF
0979A:  MOVWF  x62
0979C:  MOVLB  0
0979E:  CALL   1052
097A2:  MOVLB  6
097A4:  DECFSZ x59,F
097A6:  BRA    9798
097A8:  MOVLW  64
097AA:  MOVLB  5
097AC:  MOVWF  x97
097AE:  MOVLB  6
097B0:  CLRF   x61
097B2:  MOVLB  0
097B4:  CALL   25BC
097B8:  MOVLW  01
097BA:  MOVLB  5
097BC:  MOVWF  x9C
097BE:  BSF    x87.4
....................             write_eeprom(27,Source);delay_ms(20); 
097C0:  CLRF   FAA
097C2:  MOVLW  1B
097C4:  MOVWF  FA9
097C6:  MOVFF  596,FA8
097CA:  BCF    FA6.6
097CC:  BCF    FA6.7
097CE:  BSF    FA6.2
097D0:  MOVF   FF2,W
097D2:  MOVWF  00
097D4:  BCF    FF2.7
097D6:  MOVLB  F
097D8:  MOVLW  55
097DA:  MOVWF  FA7
097DC:  MOVLW  AA
097DE:  MOVWF  FA7
097E0:  BSF    FA6.1
097E2:  BTFSC  FA6.1
097E4:  BRA    97E2
097E6:  BCF    FA6.2
097E8:  MOVF   00,W
097EA:  IORWF  FF2,F
097EC:  MOVLW  14
097EE:  MOVLB  6
097F0:  MOVWF  x62
097F2:  MOVLB  0
097F4:  CALL   1052
097F8:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
....................       if(tiemporeset>=60 && Menu!=0) 
097FA:  MOVF   x95,W
097FC:  SUBLW  3B
097FE:  BC    9814
09800:  MOVF   x97,F
09802:  BZ    9814
....................       { 
....................          glcd_init(ON); 
09804:  MOVLW  01
09806:  MOVLB  6
09808:  MOVWF  x59
0980A:  MOVLB  0
0980C:  CALL   26CE
....................          tiemporeset=0; 
09810:  MOVLB  5
09812:  CLRF   x95
....................       }  
....................  
....................    } 
09814:  GOTO   5DF4
.................... } 
09818:  SLEEP 

Configuration Fuses:
   Word  1: 0200   HS NOIESO NOFCMEN
   Word  2: 1E1F   BROWNOUT NOWDT BORV20 NOPUT WDT32768
   Word  3: 0000   NOPBADEN NOLPT1OSC NOMCLR
   Word  4: 00B0   NOSTVREN NODEBUG NOLVP NOXINST BBSIZ4K
   Word  5: C03F   NOPROTECT NOCPD NOCPB
   Word  6: E03F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 403F   NOEBTR NOEBTRB
