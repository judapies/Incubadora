CCS PCH C Compiler, Version 4.104, 5967               05-mar.-19 09:18

               Filename: H:\JP\JP\Laboratorio\Incubadora\2019\Incubadora 53L German Martinez #004587938\Firmware V1.1\Horno.lst

               ROM used: 38996 bytes (40%)
                         Largest free fragment is 32768
               RAM used: 1630 (49%) at main() level
                         1688 (51%) worst case
               Stack:    7 worst case (6 in main + 1 for interrupts)

*
00000:  GOTO   58D6
*
00008:  MOVWF  04
0000A:  MOVFF  FD8,05
0000E:  MOVFF  FE0,06
00012:  MOVLB  0
00014:  MOVFF  FE9,0C
00018:  MOVFF  FEA,07
0001C:  MOVFF  FE1,08
00020:  MOVFF  FE2,09
00024:  MOVFF  FD9,0A
00028:  MOVFF  FDA,0B
0002C:  MOVFF  FF3,12
00030:  MOVFF  FF4,13
00034:  MOVFF  FFA,14
00038:  MOVFF  FFB,15
0003C:  MOVFF  00,0E
00040:  MOVFF  01,0F
00044:  MOVFF  02,10
00048:  MOVFF  03,11
0004C:  BTFSS  F9D.0
0004E:  GOTO   0058
00052:  BTFSC  F9E.0
00054:  GOTO   0FBE
00058:  MOVFF  0E,00
0005C:  MOVFF  0F,01
00060:  MOVFF  10,02
00064:  MOVFF  11,03
00068:  MOVFF  0C,FE9
0006C:  MOVFF  07,FEA
00070:  BSF    07.7
00072:  MOVFF  08,FE1
00076:  MOVFF  09,FE2
0007A:  MOVFF  0A,FD9
0007E:  MOVFF  0B,FDA
00082:  MOVFF  12,FF3
00086:  MOVFF  13,FF4
0008A:  MOVFF  14,FFA
0008E:  MOVFF  15,FFB
00092:  MOVF   04,W
00094:  MOVFF  06,FE0
00098:  MOVFF  05,FD8
0009C:  RETFIE 0
.................... /// Cuatro pulsadores de entrada (Derecha, Izquierda, arriba y abajo). 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Autoclave 80Lts. 
.................... // Tiene Menú:Ciclo: Liquidos, Instrumental suave, Textil Instrumental y Caucho. 
.................... // Tiene 6 niveles programables para desfogue suave. 
.................... // Ing. Juan David Piñeros. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2014 
....................  
.................... #include <18F4685.h> 
.................... //////// Standard Header file for the PIC18F4685 device //////////////// 
.................... #device PIC18F4685 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP,NODEBUG,NOSTVREN,NOPUT,NOCPD,NOWRT,NOIESO,NOFCMEN,NOPBADEN,NOWRTC,NOWRTB,NOEBTR,NOEBTRB,NOCPB,NOXINST,NOLPT1OSC,NOMCLR 
.................... #use delay(clock=20000000) 
*
01056:  MOVLW  06
01058:  MOVWF  FEA
0105A:  MOVLW  63
0105C:  MOVWF  FE9
0105E:  MOVF   FEF,W
01060:  BZ    107C
01062:  MOVLW  06
01064:  MOVWF  01
01066:  CLRF   00
01068:  DECFSZ 00,F
0106A:  BRA    1068
0106C:  DECFSZ 01,F
0106E:  BRA    1066
01070:  MOVLW  7B
01072:  MOVWF  00
01074:  DECFSZ 00,F
01076:  BRA    1074
01078:  DECFSZ FEF,F
0107A:  BRA    1062
0107C:  RETLW  00
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B0   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B1   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B4   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B3   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
026D2:  BCF    F93.2
026D4:  BSF    F8A.2
....................    output_low(GLCD_E); 
026D6:  BCF    F93.3
026D8:  BCF    F8A.3
....................    output_low(GLCD_CS1); 
026DA:  BCF    F93.0
026DC:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
026DE:  BCF    F93.1
026E0:  BCF    F8A.1
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
026E2:  BCF    F93.5
026E4:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
026E6:  MOVLB  6
026E8:  CLRF   x74
026EA:  MOVLW  C0
026EC:  MOVWF  x75
026EE:  MOVLB  0
026F0:  RCALL  258A
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
026F2:  MOVLW  01
026F4:  MOVLB  6
026F6:  MOVWF  x74
026F8:  MOVLW  C0
026FA:  MOVWF  x75
026FC:  MOVLB  0
026FE:  RCALL  258A
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
02700:  MOVLB  6
02702:  CLRF   x74
02704:  MOVLW  40
02706:  MOVWF  x75
02708:  MOVLB  0
0270A:  RCALL  258A
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
0270C:  MOVLW  01
0270E:  MOVLB  6
02710:  MOVWF  x74
02712:  MOVLW  40
02714:  MOVWF  x75
02716:  MOVLB  0
02718:  RCALL  258A
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
0271A:  MOVLB  6
0271C:  CLRF   x74
0271E:  MOVLW  B8
02720:  MOVWF  x75
02722:  MOVLB  0
02724:  RCALL  258A
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
02726:  MOVLW  01
02728:  MOVLB  6
0272A:  MOVWF  x74
0272C:  MOVLW  B8
0272E:  MOVWF  x75
02730:  MOVLB  0
02732:  RCALL  258A
....................  
....................    if(mode == ON) 
02734:  MOVLB  6
02736:  DECFSZ x5A,W
02738:  BRA    2756
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
0273A:  CLRF   x74
0273C:  MOVLW  3F
0273E:  MOVWF  x75
02740:  MOVLB  0
02742:  RCALL  258A
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
02744:  MOVLW  01
02746:  MOVLB  6
02748:  MOVWF  x74
0274A:  MOVLW  3F
0274C:  MOVWF  x75
0274E:  MOVLB  0
02750:  RCALL  258A
....................    } 
....................    else 
02752:  BRA    276E
02754:  MOVLB  6
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
02756:  CLRF   x74
02758:  MOVLW  3E
0275A:  MOVWF  x75
0275C:  MOVLB  0
0275E:  RCALL  258A
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
02760:  MOVLW  01
02762:  MOVLB  6
02764:  MOVWF  x74
02766:  MOVLW  3E
02768:  MOVWF  x75
0276A:  MOVLB  0
0276C:  RCALL  258A
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
0276E:  MOVLB  6
02770:  CLRF   x62
02772:  MOVLB  0
02774:  RCALL  25C0
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
02776:  RCALL  261A
....................    #endif 
.................... } 
02778:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
0261A:  MOVLB  6
0261C:  CLRF   x70
0261E:  MOVLW  17
02620:  MOVWF  x6F
....................    p2 = displayData.right; 
02622:  MOVLW  02
02624:  MOVWF  x72
02626:  MOVLW  17
02628:  MOVWF  x71
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
0262A:  CLRF   x6D
0262C:  MOVF   x6D,W
0262E:  SUBLW  07
02630:  BNC   26CE
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
02632:  BCF    F93.5
02634:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
02636:  CLRF   x74
02638:  MOVLW  40
0263A:  MOVWF  x75
0263C:  MOVLB  0
0263E:  RCALL  258A
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
02640:  MOVLW  01
02642:  MOVLB  6
02644:  MOVWF  x74
02646:  MOVLW  40
02648:  MOVWF  x75
0264A:  MOVLB  0
0264C:  RCALL  258A
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
0264E:  MOVLB  6
02650:  MOVF   x6D,W
02652:  IORLW  B8
02654:  MOVWF  x73
02656:  CLRF   x74
02658:  MOVWF  x75
0265A:  MOVLB  0
0265C:  RCALL  258A
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
0265E:  MOVLB  6
02660:  MOVF   x6D,W
02662:  IORLW  B8
02664:  MOVWF  x73
02666:  MOVLW  01
02668:  MOVWF  x74
0266A:  MOVFF  673,675
0266E:  MOVLB  0
02670:  RCALL  258A
....................       output_high(GLCD_DI);                     // Set for data 
02672:  BCF    F93.5
02674:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
02676:  MOVLB  6
02678:  CLRF   x6E
0267A:  MOVF   x6E,W
0267C:  SUBLW  3F
0267E:  BNC   26CA
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
02680:  MOVFF  670,03
02684:  MOVF   x6F,W
02686:  INCF   x6F,F
02688:  BTFSC  FD8.2
0268A:  INCF   x70,F
0268C:  MOVWF  FE9
0268E:  MOVFF  03,FEA
02692:  MOVFF  FEF,673
02696:  CLRF   x74
02698:  MOVFF  673,675
0269C:  MOVLB  0
0269E:  RCALL  258A
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
026A0:  MOVLB  6
026A2:  MOVFF  672,03
026A6:  MOVF   x71,W
026A8:  INCF   x71,F
026AA:  BTFSC  FD8.2
026AC:  INCF   x72,F
026AE:  MOVWF  FE9
026B0:  MOVFF  03,FEA
026B4:  MOVFF  FEF,673
026B8:  MOVLW  01
026BA:  MOVWF  x74
026BC:  MOVFF  673,675
026C0:  MOVLB  0
026C2:  RCALL  258A
....................       } 
026C4:  MOVLB  6
026C6:  INCF   x6E,F
026C8:  BRA    267A
....................    } 
026CA:  INCF   x6D,F
026CC:  BRA    262C
.................... } 
026CE:  MOVLB  0
026D0:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
*
0277A:  MOVLB  6
0277C:  CLRF   x94
0277E:  RRCF   x8F,W
02780:  MOVWF  x93
02782:  RRCF   x93,F
02784:  RRCF   x93,F
02786:  MOVLW  1F
02788:  ANDWF  x93,F
....................    temp *= 64; 
0278A:  RLCF   x93,F
0278C:  RLCF   x94,F
0278E:  RLCF   x93,F
02790:  RLCF   x94,F
02792:  RLCF   x93,F
02794:  RLCF   x94,F
02796:  RLCF   x93,F
02798:  RLCF   x94,F
0279A:  RLCF   x93,F
0279C:  RLCF   x94,F
0279E:  RLCF   x93,F
027A0:  RLCF   x94,F
027A2:  MOVLW  C0
027A4:  ANDWF  x93,F
....................    temp += x; 
027A6:  MOVF   x8E,W
027A8:  ADDWF  x93,F
027AA:  MOVLW  00
027AC:  ADDWFC x94,F
....................  
....................    if(x > 63) 
027AE:  MOVF   x8E,W
027B0:  SUBLW  3F
027B2:  BC    27CE
....................    { 
....................       p = displayData.right + temp - 64; 
027B4:  MOVLW  17
027B6:  ADDWF  x93,W
027B8:  MOVWF  x95
027BA:  MOVLW  02
027BC:  ADDWFC x94,W
027BE:  MOVWF  x96
027C0:  MOVLW  40
027C2:  SUBWF  x95,W
027C4:  MOVWF  x91
027C6:  MOVLW  00
027C8:  SUBWFB x96,W
027CA:  MOVWF  x92
....................    } 
....................    else 
027CC:  BRA    27DA
....................    { 
....................       p = displayData.left + temp; 
027CE:  MOVLW  17
027D0:  ADDWF  x93,W
027D2:  MOVWF  x91
027D4:  MOVLW  00
027D6:  ADDWFC x94,W
027D8:  MOVWF  x92
....................    } 
....................  
....................    if(color) 
027DA:  MOVF   x90,F
027DC:  BZ    2808
....................    { 
....................       bit_set(*p, y%8); 
027DE:  MOVFF  692,03
027E2:  MOVFF  691,FE9
027E6:  MOVFF  692,FEA
027EA:  MOVF   x8F,W
027EC:  ANDLW  07
027EE:  MOVWF  x95
027F0:  MOVLW  01
027F2:  MOVWF  00
027F4:  MOVF   x95,W
027F6:  MOVWF  01
027F8:  BZ    2802
027FA:  BCF    FD8.0
027FC:  RLCF   00,F
027FE:  DECFSZ 01,F
02800:  BRA    27FA
02802:  MOVF   00,W
02804:  IORWF  FEF,F
....................    } 
....................    else 
02806:  BRA    2832
....................    { 
....................       bit_clear(*p, y%8); 
02808:  MOVFF  692,03
0280C:  MOVFF  691,FE9
02810:  MOVFF  692,FEA
02814:  MOVF   x8F,W
02816:  ANDLW  07
02818:  MOVWF  x95
0281A:  MOVLW  01
0281C:  MOVWF  00
0281E:  MOVF   x95,W
02820:  MOVWF  01
02822:  BZ    282C
02824:  BCF    FD8.0
02826:  RLCF   00,F
02828:  DECFSZ 01,F
0282A:  BRA    2824
0282C:  MOVF   00,W
0282E:  XORLW  FF
02830:  ANDWF  FEF,F
....................    } 
.................... } 
02832:  MOVLB  0
02834:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
025C0:  MOVLB  6
025C2:  CLRF   x65
025C4:  MOVLW  17
025C6:  MOVWF  x64
....................    p2 = displayData.right; 
025C8:  MOVLW  02
025CA:  MOVWF  x67
025CC:  MOVLW  17
025CE:  MOVWF  x66
....................    data = 0xFF * color; 
025D0:  MOVF   x62,W
025D2:  MULLW  FF
025D4:  MOVFF  FF3,663
....................  
....................    for(i=0; i<512; ++i) 
025D8:  CLRF   x69
025DA:  CLRF   x68
025DC:  MOVF   x69,W
025DE:  SUBLW  01
025E0:  BNC   2616
....................    { 
....................       *p1++ = data; 
025E2:  MOVFF  665,03
025E6:  MOVF   x64,W
025E8:  INCF   x64,F
025EA:  BTFSC  FD8.2
025EC:  INCF   x65,F
025EE:  MOVWF  FE9
025F0:  MOVFF  03,FEA
025F4:  MOVFF  663,FEF
....................       *p2++ = data; 
025F8:  MOVFF  667,03
025FC:  MOVF   x66,W
025FE:  INCF   x66,F
02600:  BTFSC  FD8.2
02602:  INCF   x67,F
02604:  MOVWF  FE9
02606:  MOVFF  03,FEA
0260A:  MOVFF  663,FEF
....................    } 
0260E:  INCF   x68,F
02610:  BTFSC  FD8.2
02612:  INCF   x69,F
02614:  BRA    25DC
.................... } 
02616:  MOVLB  0
02618:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
0258A:  MOVLB  6
0258C:  MOVF   x74,F
0258E:  BZ    2596
....................       output_high(GLCD_CS2); 
02590:  BCF    F93.1
02592:  BSF    F8A.1
....................    else 
02594:  BRA    259A
....................       output_high(GLCD_CS1); 
02596:  BCF    F93.0
02598:  BSF    F8A.0
....................  
....................    output_low(GLCD_RW);       // Set for writing 
0259A:  BCF    F93.4
0259C:  BCF    F8A.4
....................    output_d(data);            // Put the data on the port 
0259E:  CLRF   F95
025A0:  MOVFF  675,F8C
....................    delay_cycles(1); 
025A4:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
025A6:  BCF    F93.3
025A8:  BSF    F8A.3
....................    delay_cycles(5); 
025AA:  BRA    25AC
025AC:  BRA    25AE
025AE:  NOP   
....................    output_low(GLCD_E); 
025B0:  BCF    F93.3
025B2:  BCF    F8A.3
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
025B4:  BCF    F93.0
025B6:  BCF    F8A.0
....................    output_low(GLCD_CS2); 
025B8:  BCF    F93.1
025BA:  BCF    F8A.1
.................... } 
025BC:  MOVLB  0
025BE:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(1); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(4); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
029EE:  MOVLW  01
029F0:  MOVLB  6
029F2:  MOVWF  x87
029F4:  MOVWF  x88
029F6:  CLRF   x8D
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
029F8:  MOVF   x7E,W
029FA:  SUBWF  x80,W
029FC:  MOVWF  x8E
029FE:  MOVF   x8E,W
02A00:  BTFSS  x8E.7
02A02:  BRA    2A0A
02A04:  MOVLW  00
02A06:  BSF    FD8.0
02A08:  SUBFWB x8E,W
02A0A:  CLRF   03
02A0C:  MOVWF  x85
02A0E:  MOVFF  03,686
....................    dy = abs((signed int8)(y2 - y1)); 
02A12:  MOVF   x7F,W
02A14:  SUBWF  x81,W
02A16:  MOVWF  x8E
02A18:  MOVF   x8E,W
02A1A:  BTFSS  x8E.7
02A1C:  BRA    2A24
02A1E:  MOVLW  00
02A20:  BSF    FD8.0
02A22:  SUBFWB x8E,W
02A24:  CLRF   03
02A26:  MOVWF  x83
02A28:  MOVFF  03,684
....................    #endif 
....................  
....................    if(x1 > x2) 
02A2C:  MOVF   x7E,W
02A2E:  SUBWF  x80,W
02A30:  BC    2A36
....................       addx = -1; 
02A32:  MOVLW  FF
02A34:  MOVWF  x87
....................    if(y1 > y2) 
02A36:  MOVF   x7F,W
02A38:  SUBWF  x81,W
02A3A:  BC    2A40
....................       addy = -1; 
02A3C:  MOVLW  FF
02A3E:  MOVWF  x88
....................  
....................    if(dx >= dy) 
02A40:  MOVF   x84,W
02A42:  SUBWF  x86,W
02A44:  BNC   2ABC
02A46:  BNZ   2A4E
02A48:  MOVF   x83,W
02A4A:  SUBWF  x85,W
02A4C:  BNC   2ABC
....................    { 
....................       dy *= 2; 
02A4E:  BCF    FD8.0
02A50:  RLCF   x83,F
02A52:  RLCF   x84,F
....................       P = dy - dx; 
02A54:  MOVF   x85,W
02A56:  SUBWF  x83,W
02A58:  MOVWF  00
02A5A:  MOVF   x86,W
02A5C:  SUBWFB x84,W
02A5E:  MOVFF  00,689
02A62:  MOVWF  x8A
....................       diff = P - dx; 
02A64:  MOVF   x85,W
02A66:  SUBWF  x89,W
02A68:  MOVWF  x8B
02A6A:  MOVF   x86,W
02A6C:  SUBWFB x8A,W
02A6E:  MOVWF  x8C
....................  
....................       for(; i<=dx; ++i) 
02A70:  MOVF   x86,F
02A72:  BNZ   2A7A
02A74:  MOVF   x8D,W
02A76:  SUBWF  x85,W
02A78:  BNC   2ABA
....................       { 
....................          glcd_pixel(x1, y1, color); 
02A7A:  MOVFF  67E,68E
02A7E:  MOVFF  67F,68F
02A82:  MOVFF  682,690
02A86:  MOVLB  0
02A88:  RCALL  277A
....................  
....................          if(P < 0) 
02A8A:  MOVLB  6
02A8C:  BTFSC  x8A.7
02A8E:  BRA    2A92
02A90:  BRA    2AA2
....................          { 
....................             P  += dy; 
02A92:  MOVF   x83,W
02A94:  ADDWF  x89,F
02A96:  MOVF   x84,W
02A98:  ADDWFC x8A,F
....................             x1 += addx; 
02A9A:  MOVF   x87,W
02A9C:  ADDWF  x7E,W
02A9E:  MOVWF  x7E
....................          } 
....................          else 
02AA0:  BRA    2AB6
....................          { 
....................             P  += diff; 
02AA2:  MOVF   x8B,W
02AA4:  ADDWF  x89,F
02AA6:  MOVF   x8C,W
02AA8:  ADDWFC x8A,F
....................             x1 += addx; 
02AAA:  MOVF   x87,W
02AAC:  ADDWF  x7E,W
02AAE:  MOVWF  x7E
....................             y1 += addy; 
02AB0:  MOVF   x88,W
02AB2:  ADDWF  x7F,W
02AB4:  MOVWF  x7F
....................          } 
....................       } 
02AB6:  INCF   x8D,F
02AB8:  BRA    2A70
....................    } 
....................    else 
02ABA:  BRA    2B28
....................    { 
....................       dx *= 2; 
02ABC:  BCF    FD8.0
02ABE:  RLCF   x85,F
02AC0:  RLCF   x86,F
....................       P = dx - dy; 
02AC2:  MOVF   x83,W
02AC4:  SUBWF  x85,W
02AC6:  MOVWF  00
02AC8:  MOVF   x84,W
02ACA:  SUBWFB x86,W
02ACC:  MOVFF  00,689
02AD0:  MOVWF  x8A
....................       diff = P - dy; 
02AD2:  MOVF   x83,W
02AD4:  SUBWF  x89,W
02AD6:  MOVWF  x8B
02AD8:  MOVF   x84,W
02ADA:  SUBWFB x8A,W
02ADC:  MOVWF  x8C
....................  
....................       for(; i<=dy; ++i) 
02ADE:  MOVF   x84,F
02AE0:  BNZ   2AE8
02AE2:  MOVF   x8D,W
02AE4:  SUBWF  x83,W
02AE6:  BNC   2B28
....................       { 
....................          glcd_pixel(x1, y1, color); 
02AE8:  MOVFF  67E,68E
02AEC:  MOVFF  67F,68F
02AF0:  MOVFF  682,690
02AF4:  MOVLB  0
02AF6:  RCALL  277A
....................  
....................          if(P < 0) 
02AF8:  MOVLB  6
02AFA:  BTFSC  x8A.7
02AFC:  BRA    2B00
02AFE:  BRA    2B10
....................          { 
....................             P  += dx; 
02B00:  MOVF   x85,W
02B02:  ADDWF  x89,F
02B04:  MOVF   x86,W
02B06:  ADDWFC x8A,F
....................             y1 += addy; 
02B08:  MOVF   x88,W
02B0A:  ADDWF  x7F,W
02B0C:  MOVWF  x7F
....................          } 
....................          else 
02B0E:  BRA    2B24
....................          { 
....................             P  += diff; 
02B10:  MOVF   x8B,W
02B12:  ADDWF  x89,F
02B14:  MOVF   x8C,W
02B16:  ADDWFC x8A,F
....................             x1 += addx; 
02B18:  MOVF   x87,W
02B1A:  ADDWF  x7E,W
02B1C:  MOVWF  x7E
....................             y1 += addy; 
02B1E:  MOVF   x88,W
02B20:  ADDWF  x7F,W
02B22:  MOVWF  x7F
....................          } 
....................       } 
02B24:  INCF   x8D,F
02B26:  BRA    2ADE
....................    } 
.................... } 
02B28:  MOVLB  0
02B2A:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
02B2C:  MOVLB  6
02B2E:  MOVF   x77,F
02B30:  BZ    2B8E
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
02B32:  MOVF   x75,W
02B34:  SUBWF  x73,W
02B36:  BC    2B42
....................       { 
....................          xmin = x1; 
02B38:  MOVFF  673,67A
....................          xmax = x2; 
02B3C:  MOVFF  675,67B
....................       } 
....................       else 
02B40:  BRA    2B4A
....................       { 
....................          xmin = x2; 
02B42:  MOVFF  675,67A
....................          xmax = x1; 
02B46:  MOVFF  673,67B
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
02B4A:  MOVF   x76,W
02B4C:  SUBWF  x74,W
02B4E:  BC    2B5A
....................       { 
....................          ymin = y1; 
02B50:  MOVFF  674,67C
....................          ymax = y2; 
02B54:  MOVFF  676,67D
....................       } 
....................       else 
02B58:  BRA    2B62
....................       { 
....................          ymin = y2; 
02B5A:  MOVFF  676,67C
....................          ymax = y1; 
02B5E:  MOVFF  674,67D
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
02B62:  MOVF   x7A,W
02B64:  SUBWF  x7B,W
02B66:  BNC   2B8C
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
02B68:  MOVFF  67C,679
02B6C:  MOVF   x79,W
02B6E:  SUBWF  x7D,W
02B70:  BNC   2B88
....................          { 
....................             glcd_pixel(xmin, i, color); 
02B72:  MOVFF  67A,68E
02B76:  MOVFF  679,68F
02B7A:  MOVFF  678,690
02B7E:  MOVLB  0
02B80:  RCALL  277A
....................          } 
02B82:  MOVLB  6
02B84:  INCF   x79,F
02B86:  BRA    2B6C
....................       } 
02B88:  INCF   x7A,F
02B8A:  BRA    2B62
....................    } 
....................    else 
02B8C:  BRA    2BEA
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
02B8E:  MOVFF  673,67E
02B92:  MOVFF  674,67F
02B96:  MOVFF  675,680
02B9A:  MOVFF  674,681
02B9E:  MOVFF  678,682
02BA2:  MOVLB  0
02BA4:  RCALL  29EE
....................       glcd_line(x1, y2, x2, y2, color); 
02BA6:  MOVFF  673,67E
02BAA:  MOVFF  676,67F
02BAE:  MOVFF  675,680
02BB2:  MOVFF  676,681
02BB6:  MOVFF  678,682
02BBA:  RCALL  29EE
....................       glcd_line(x1, y1, x1, y2, color); 
02BBC:  MOVFF  673,67E
02BC0:  MOVFF  674,67F
02BC4:  MOVFF  673,680
02BC8:  MOVFF  676,681
02BCC:  MOVFF  678,682
02BD0:  RCALL  29EE
....................       glcd_line(x2, y1, x2, y2, color); 
02BD2:  MOVFF  675,67E
02BD6:  MOVFF  674,67F
02BDA:  MOVFF  675,680
02BDE:  MOVFF  676,681
02BE2:  MOVFF  678,682
02BE6:  RCALL  29EE
02BE8:  MOVLB  6
....................    } 
.................... } 
02BEA:  MOVLB  0
02BEC:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
*
0411C:  MOVLB  6
0411E:  CLRF   x74
....................    b = radius; 
04120:  MOVFF  671,675
....................    P = 1 - radius; 
04124:  MOVLW  01
04126:  BSF    FD8.0
04128:  SUBFWB x71,W
0412A:  MOVWF  x76
....................  
....................    do 
....................    { 
....................       if(fill) 
0412C:  MOVF   x72,F
0412E:  BZ    41FA
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
04130:  MOVF   x74,W
04132:  SUBWF  x6F,W
04134:  MOVWF  x77
04136:  MOVF   x75,W
04138:  ADDWF  x70,W
0413A:  MOVWF  x78
0413C:  MOVF   x74,W
0413E:  ADDWF  x6F,W
04140:  MOVWF  x79
04142:  MOVF   x75,W
04144:  ADDWF  x70,W
04146:  MOVWF  x7A
04148:  MOVFF  677,67E
0414C:  MOVFF  678,67F
04150:  MOVFF  679,680
04154:  MOVWF  x81
04156:  MOVFF  673,682
0415A:  MOVLB  0
0415C:  CALL   29EE
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
04160:  MOVLB  6
04162:  MOVF   x74,W
04164:  SUBWF  x6F,W
04166:  MOVWF  x77
04168:  MOVF   x75,W
0416A:  SUBWF  x70,W
0416C:  MOVWF  x78
0416E:  MOVF   x74,W
04170:  ADDWF  x6F,W
04172:  MOVWF  x79
04174:  MOVF   x75,W
04176:  SUBWF  x70,W
04178:  MOVWF  x7A
0417A:  MOVFF  677,67E
0417E:  MOVFF  678,67F
04182:  MOVFF  679,680
04186:  MOVWF  x81
04188:  MOVFF  673,682
0418C:  MOVLB  0
0418E:  CALL   29EE
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
04192:  MOVLB  6
04194:  MOVF   x75,W
04196:  SUBWF  x6F,W
04198:  MOVWF  x77
0419A:  MOVF   x74,W
0419C:  ADDWF  x70,W
0419E:  MOVWF  x78
041A0:  MOVF   x75,W
041A2:  ADDWF  x6F,W
041A4:  MOVWF  x79
041A6:  MOVF   x74,W
041A8:  ADDWF  x70,W
041AA:  MOVWF  x7A
041AC:  MOVFF  677,67E
041B0:  MOVFF  678,67F
041B4:  MOVFF  679,680
041B8:  MOVWF  x81
041BA:  MOVFF  673,682
041BE:  MOVLB  0
041C0:  CALL   29EE
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
041C4:  MOVLB  6
041C6:  MOVF   x75,W
041C8:  SUBWF  x6F,W
041CA:  MOVWF  x77
041CC:  MOVF   x74,W
041CE:  SUBWF  x70,W
041D0:  MOVWF  x78
041D2:  MOVF   x75,W
041D4:  ADDWF  x6F,W
041D6:  MOVWF  x79
041D8:  MOVF   x74,W
041DA:  SUBWF  x70,W
041DC:  MOVWF  x7A
041DE:  MOVFF  677,67E
041E2:  MOVFF  678,67F
041E6:  MOVFF  679,680
041EA:  MOVWF  x81
041EC:  MOVFF  673,682
041F0:  MOVLB  0
041F2:  CALL   29EE
....................       } 
....................       else 
041F6:  BRA    42E8
041F8:  MOVLB  6
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
041FA:  MOVF   x6F,W
041FC:  ADDWF  x74,W
041FE:  MOVWF  x77
04200:  MOVF   x70,W
04202:  ADDWF  x75,W
04204:  MOVWF  x78
04206:  MOVFF  677,68E
0420A:  MOVWF  x8F
0420C:  MOVFF  673,690
04210:  MOVLB  0
04212:  CALL   277A
....................          glcd_pixel(b+x, a+y, color); 
04216:  MOVLB  6
04218:  MOVF   x6F,W
0421A:  ADDWF  x75,W
0421C:  MOVWF  x77
0421E:  MOVF   x70,W
04220:  ADDWF  x74,W
04222:  MOVWF  x78
04224:  MOVFF  677,68E
04228:  MOVWF  x8F
0422A:  MOVFF  673,690
0422E:  MOVLB  0
04230:  CALL   277A
....................          glcd_pixel(x-a, b+y, color); 
04234:  MOVLB  6
04236:  MOVF   x74,W
04238:  SUBWF  x6F,W
0423A:  MOVWF  x77
0423C:  MOVF   x70,W
0423E:  ADDWF  x75,W
04240:  MOVWF  x78
04242:  MOVFF  677,68E
04246:  MOVWF  x8F
04248:  MOVFF  673,690
0424C:  MOVLB  0
0424E:  CALL   277A
....................          glcd_pixel(x-b, a+y, color); 
04252:  MOVLB  6
04254:  MOVF   x75,W
04256:  SUBWF  x6F,W
04258:  MOVWF  x77
0425A:  MOVF   x70,W
0425C:  ADDWF  x74,W
0425E:  MOVWF  x78
04260:  MOVFF  677,68E
04264:  MOVWF  x8F
04266:  MOVFF  673,690
0426A:  MOVLB  0
0426C:  CALL   277A
....................          glcd_pixel(b+x, y-a, color); 
04270:  MOVLB  6
04272:  MOVF   x6F,W
04274:  ADDWF  x75,W
04276:  MOVWF  x77
04278:  MOVF   x74,W
0427A:  SUBWF  x70,W
0427C:  MOVWF  x78
0427E:  MOVFF  677,68E
04282:  MOVWF  x8F
04284:  MOVFF  673,690
04288:  MOVLB  0
0428A:  CALL   277A
....................          glcd_pixel(a+x, y-b, color); 
0428E:  MOVLB  6
04290:  MOVF   x6F,W
04292:  ADDWF  x74,W
04294:  MOVWF  x77
04296:  MOVF   x75,W
04298:  SUBWF  x70,W
0429A:  MOVWF  x78
0429C:  MOVFF  677,68E
042A0:  MOVWF  x8F
042A2:  MOVFF  673,690
042A6:  MOVLB  0
042A8:  CALL   277A
....................          glcd_pixel(x-a, y-b, color); 
042AC:  MOVLB  6
042AE:  MOVF   x74,W
042B0:  SUBWF  x6F,W
042B2:  MOVWF  x77
042B4:  MOVF   x75,W
042B6:  SUBWF  x70,W
042B8:  MOVWF  x78
042BA:  MOVFF  677,68E
042BE:  MOVWF  x8F
042C0:  MOVFF  673,690
042C4:  MOVLB  0
042C6:  CALL   277A
....................          glcd_pixel(x-b, y-a, color); 
042CA:  MOVLB  6
042CC:  MOVF   x75,W
042CE:  SUBWF  x6F,W
042D0:  MOVWF  x77
042D2:  MOVF   x74,W
042D4:  SUBWF  x70,W
042D6:  MOVWF  x78
042D8:  MOVFF  677,68E
042DC:  MOVWF  x8F
042DE:  MOVFF  673,690
042E2:  MOVLB  0
042E4:  CALL   277A
....................       } 
....................  
....................       if(P < 0) 
042E8:  MOVLB  6
042EA:  BTFSC  x76.7
042EC:  BRA    42F0
042EE:  BRA    430C
....................          P += 3 + 2 * a++; 
042F0:  MOVF   x74,W
042F2:  INCF   x74,F
042F4:  MOVWF  x77
042F6:  MOVLW  02
042F8:  MOVWF  x78
042FA:  MOVFF  677,679
042FE:  MOVLB  0
04300:  RCALL  40CE
04302:  MOVF   01,W
04304:  ADDLW  03
04306:  MOVLB  6
04308:  ADDWF  x76,F
....................       else 
0430A:  BRA    432E
....................          P += 5 + 2 * (a++ - b--); 
0430C:  MOVF   x74,W
0430E:  INCF   x74,F
04310:  MOVWF  x77
04312:  MOVF   x75,W
04314:  DECF   x75,F
04316:  SUBWF  x77,W
04318:  MOVWF  x77
0431A:  MOVLW  02
0431C:  MOVWF  x78
0431E:  MOVFF  677,679
04322:  MOVLB  0
04324:  RCALL  40CE
04326:  MOVF   01,W
04328:  ADDLW  05
0432A:  MOVLB  6
0432C:  ADDWF  x76,F
....................     } while(a <= b); 
0432E:  MOVF   x74,W
04330:  XORLW  80
04332:  MOVWF  00
04334:  MOVF   x75,W
04336:  XORLW  80
04338:  SUBWF  00,W
0433A:  BTFSC  FD8.2
0433C:  BRA    412C
0433E:  BTFSS  FD8.0
04340:  BRA    412C
.................... } 
04342:  MOVLB  0
04344:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
*
02836:  MOVFF  676,03
0283A:  MOVLB  6
0283C:  MOVFF  675,FE9
02840:  MOVFF  676,FEA
02844:  MOVF   FEF,F
02846:  BTFSC  FD8.2
02848:  BRA    29EA
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
0284A:  MOVFF  676,03
0284E:  MOVFF  675,FE9
02852:  MOVFF  676,FEA
02856:  MOVF   FEF,W
02858:  SUBLW  52
0285A:  BNC   28AA
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
0285C:  MOVFF  676,03
02860:  MOVFF  675,FE9
02864:  MOVFF  676,FEA
02868:  MOVLW  20
0286A:  SUBWF  FEF,W
0286C:  MULLW  05
0286E:  MOVF   FF3,W
02870:  CLRF   03
02872:  MOVWF  x82
02874:  MOVLW  06
02876:  MOVWF  FEA
02878:  MOVLW  7D
0287A:  MOVWF  FE9
0287C:  CLRF   x86
0287E:  MOVFF  682,685
02882:  MOVFF  FF2,683
02886:  BCF    FF2.7
02888:  MOVLW  05
0288A:  MOVWF  01
0288C:  CLRF   FF7
0288E:  MOVF   x82,W
02890:  MOVLB  0
02892:  CALL   009E
02896:  TBLRD*-
02898:  TBLRD*+
0289A:  MOVFF  FF5,FEE
0289E:  DECFSZ 01,F
028A0:  BRA    2898
028A2:  MOVLB  6
028A4:  BTFSC  x83.7
028A6:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
028A8:  BRA    2914
028AA:  MOVFF  676,03
028AE:  MOVFF  675,FE9
028B2:  MOVFF  676,FEA
028B6:  MOVF   FEF,W
028B8:  SUBLW  7E
028BA:  BNC   290A
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
028BC:  MOVFF  676,03
028C0:  MOVFF  675,FE9
028C4:  MOVFF  676,FEA
028C8:  MOVLW  53
028CA:  SUBWF  FEF,W
028CC:  MULLW  05
028CE:  MOVF   FF3,W
028D0:  CLRF   03
028D2:  MOVWF  x82
028D4:  MOVLW  06
028D6:  MOVWF  FEA
028D8:  MOVLW  7D
028DA:  MOVWF  FE9
028DC:  CLRF   x86
028DE:  MOVFF  682,685
028E2:  MOVFF  FF2,683
028E6:  BCF    FF2.7
028E8:  MOVLW  05
028EA:  MOVWF  01
028EC:  CLRF   FF7
028EE:  MOVF   x82,W
028F0:  MOVLB  0
028F2:  CALL   01BC
028F6:  TBLRD*-
028F8:  TBLRD*+
028FA:  MOVFF  FF5,FEE
028FE:  DECFSZ 01,F
02900:  BRA    28F8
02902:  MOVLB  6
02904:  BTFSC  x83.7
02906:  BSF    FF2.7
....................       else 
02908:  BRA    2914
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
0290A:  CLRF   x7D
0290C:  CLRF   x7E
0290E:  CLRF   x7F
02910:  CLRF   x80
02912:  CLRF   x81
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
02914:  MOVFF  676,03
02918:  MOVF   x75,W
0291A:  MOVWF  FE9
0291C:  MOVFF  03,FEA
02920:  MOVF   FEF,W
02922:  XORLW  0A
02924:  MOVLB  0
02926:  BZ    292E
02928:  XORLW  07
0292A:  BZ    293E
0292C:  BRA    2944
....................          case '\n': 
....................             y += 7*size + 1; 
0292E:  MOVLB  6
02930:  MOVF   x77,W
02932:  MULLW  07
02934:  MOVF   FF3,W
02936:  ADDLW  01
02938:  ADDWF  x74,F
....................             continue; 
0293A:  BRA    29DC
0293C:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
0293E:  MOVLB  6
02940:  CLRF   x73
....................             continue; 
02942:  BRA    29DC
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
02944:  MOVLB  6
02946:  MOVF   x77,W
02948:  MULLW  05
0294A:  MOVF   FF3,W
0294C:  ADDWF  x73,W
0294E:  SUBLW  7F
02950:  BC    295E
....................       { 
....................          x = 0;                           // Set x at far left position 
02952:  CLRF   x73
....................          y += 7*size + 1;                 // Set y at next position down 
02954:  MOVF   x77,W
02956:  MULLW  07
02958:  MOVF   FF3,W
0295A:  ADDLW  01
0295C:  ADDWF  x74,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
0295E:  CLRF   x79
02960:  MOVF   x79,W
02962:  SUBLW  04
02964:  BNC   29DC
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
02966:  CLRF   x7A
02968:  MOVF   x7A,W
0296A:  SUBLW  06
0296C:  BNC   29D4
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
0296E:  CLRF   03
02970:  MOVF   x79,W
02972:  ADDLW  7D
02974:  MOVWF  FE9
02976:  MOVLW  06
02978:  ADDWFC 03,W
0297A:  MOVWF  FEA
0297C:  MOVFF  FEF,682
02980:  MOVFF  682,00
02984:  MOVF   x7A,W
02986:  MOVWF  01
02988:  BZ    2992
0298A:  BCF    FD8.0
0298C:  RRCF   00,F
0298E:  DECFSZ 01,F
02990:  BRA    298A
02992:  BTFSS  00.0
02994:  BRA    29D0
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
02996:  CLRF   x7B
02998:  MOVF   x77,W
0299A:  SUBWF  x7B,W
0299C:  BC    29D0
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
0299E:  CLRF   x7C
029A0:  MOVF   x77,W
029A2:  SUBWF  x7C,W
029A4:  BC    29CC
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
029A6:  MOVF   x7C,W
029A8:  ADDWF  x73,W
029AA:  MOVWF  x82
029AC:  MOVF   x7A,W
029AE:  MULWF  x77
029B0:  MOVF   FF3,W
029B2:  ADDWF  x74,W
029B4:  ADDWF  x7B,W
029B6:  MOVWF  x83
029B8:  MOVFF  682,68E
029BC:  MOVWF  x8F
029BE:  MOVFF  678,690
029C2:  MOVLB  0
029C4:  RCALL  277A
....................                   } 
029C6:  MOVLB  6
029C8:  INCF   x7C,F
029CA:  BRA    29A0
....................                } 
029CC:  INCF   x7B,F
029CE:  BRA    2998
....................             } 
....................          } 
029D0:  INCF   x7A,F
029D2:  BRA    2968
....................       } 
029D4:  INCF   x79,F
029D6:  MOVF   x77,W
029D8:  ADDWF  x73,F
029DA:  BRA    2960
....................    } 
029DC:  INCF   x75,F
029DE:  BTFSC  FD8.2
029E0:  INCF   x76,F
029E2:  INCF   x73,F
029E4:  MOVLB  0
029E6:  BRA    2836
029E8:  MOVLB  6
.................... } 
029EA:  MOVLB  0
029EC:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Horno [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x00, 0x00, 0x0E, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x86, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x41, 0x02, 0x00, 0x0E, 
.................... 0x60, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x7F, 0x05, 0x00, 0x0E, 
.................... 0x70, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x02, 0x00, 0x0E, 
.................... 0x60, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x20, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x30, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x18, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x1C, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xE1, 0xC0, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x01, 0x80, 0x60, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x78, 0x10, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x06, 0x7C, 0x18, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0x7C, 0x08, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x3C, 0x04, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x10, 0x04, 0x0E, 
.................... 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x0C, 0xE4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x2D, 0xF4, 0x0E, 
.................... 0x02, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0x63, 0xF4, 0x0E, 
.................... 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x08, 0xF1, 0xE4, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x04, 0xF0, 0x08, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x02, 0x70, 0x10, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x30, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0xC0, 0xC0, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x7F, 0x80, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0E, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFE, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
....................  
....................  
.................... // Definición de teclado - NO 
.................... #define   UP            !input(PIN_A4) 
.................... #define   DOWN          !input(PIN_A5) 
.................... #define   RIGHT         !input(PIN_E0) 
.................... #define   LEFT          !input(PIN_E1) 
....................  
.................... #define   DOOR          input(PIN_E2) 
.................... #define   TERM          input(PIN_B7) 
....................  
....................  
.................... // Definición de Salidas 
.................... #define   SSR_on            output_bit(PIN_C2,0) 
.................... #define   SSR_off           output_bit(PIN_C2,1) 
.................... #define   Motor1_on         output_bit(PIN_C5,0) 
.................... #define   Motor1_off        output_bit(PIN_C5,1) 
.................... #define   Motor2_on         output_bit(PIN_C6,0) 
.................... #define   Motor2_off        output_bit(PIN_C6,1) 
.................... #define   Display_on        output_bit(PIN_C7,1) 
.................... #define   Display_off       output_bit(PIN_C7,0) 
....................  
.................... float promedio[90]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float X[2]={0.0,0.0}; 
.................... short Desconectado=0; 
.................... int8 h=0,l=0,Ajuste=0,Ajusten=0,MediaMovil=10,tiemporecta=0,flag_ganancia=0,Lectura2=0,Controlando=0,Ajusto=10,n=0; 
.................... short Flanco=0,Flanco1=0,Flanco2=0,visual=1,Lectura=0,flag_ajuste=0,flag_ajuste2=0,flag_clear=0,Infinito=0; 
.................... short flag_clear2=0,flag_clear3=0,flag_tiempocalentamiento=0,flag_display=0,flag_setpoint=0,Finalizo=0; 
.................... int8 y=0,tiemporeset=0,Source=1; 
.................... int8 Menu=0, unidad=1,i=0,Pausa=0; 
.................... int8 Opcion=1,tiempo_esterilizacion=0,tiempo_secado=0,decimal=0,entero=0; 
.................... int16 tiempos=0,tiempos3=0,tiempoctrl=0,tinicio=0,tiempocalentamiento=0,tiemposetpoint=0,Tp=0,Tc=0,TiempoControl=0; 
.................... float Potencia=0.0,Tpulsomin=0.0,Gananciamax=0.0,Gain=0.0,RPT100=0.0,Integral=0,Derivativo=0; 
.................... signed int  Testerilizacion[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Testerilizacionp[4]={0,0,0,0};   // Tiempo transcurrido 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float V0=0.0,R1=10000.0,Pt,Tciclo=10.0,Tpulso=0.0,error=0.0,Prom=0.0,Temperature=0.0,tmp=0.0,Ganancia=2.0,desvio=0.5,Coeficiente=44.5; 
.................... float Aumento=0.0,Temperatura=0.0,TpulsoMax=0.0,Setpoint=0,Temperatura1=0,Temperatura2=0,Temperatura3=0,Temporal=0.0; 
.................... float a=0.0011,b=2.3302,c=-244.0723; 
....................  
.................... typedef struct{ 
....................    char Letra[30]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... #include "Funciones.h" 
.................... void ActualizaRecta(){ 
....................    X[y]=Temperatura; 
*
04DF6:  MOVLB  5
04DF8:  MOVF   x94,W
04DFA:  MULLW  04
04DFC:  MOVF   FF3,W
04DFE:  CLRF   03
04E00:  ADDLW  7F
04E02:  MOVWF  FE9
04E04:  MOVLW  05
04E06:  ADDWFC 03,W
04E08:  MOVWF  FEA
04E0A:  MOVFF  612,FEF
04E0E:  MOVFF  613,FEC
04E12:  MOVFF  614,FEC
04E16:  MOVFF  615,FEC
....................    y++; 
04E1A:  INCF   x94,F
....................    if(y>=2){ 
04E1C:  MOVF   x94,W
04E1E:  SUBLW  01
04E20:  BC    4E5E
....................       y=0; 
04E22:  CLRF   x94
....................       Aumento=X[1]-X[0]; 
04E24:  BSF    FD8.1
04E26:  MOVFF  586,662
04E2A:  MOVFF  585,661
04E2E:  MOVFF  584,660
04E32:  MOVFF  583,65F
04E36:  MOVFF  582,666
04E3A:  MOVFF  581,665
04E3E:  MOVFF  580,664
04E42:  MOVFF  57F,663
04E46:  MOVLB  0
04E48:  CALL   124A
04E4C:  MOVFF  03,611
04E50:  MOVFF  02,610
04E54:  MOVFF  01,60F
04E58:  MOVFF  00,60E
04E5C:  MOVLB  5
....................    } 
.................... } 
04E5E:  MOVLB  0
04E60:  GOTO   4E9C (RETURN)
....................  
.................... // Funcion para conversor analogo-digital 
.................... float sensores(int x){ 
.................... float y;set_adc_channel(x);delay_ms(1);y=read_adc();return (y); 
*
02CE8:  MOVLB  6
02CEA:  RLCF   x5B,W
02CEC:  MOVWF  00
02CEE:  RLCF   00,F
02CF0:  MOVLW  FC
02CF2:  ANDWF  00,F
02CF4:  MOVFF  00,01
02CF8:  MOVF   FC2,W
02CFA:  ANDLW  C3
02CFC:  IORWF  00,W
02CFE:  MOVWF  FC2
02D00:  MOVLW  01
02D02:  MOVWF  x63
02D04:  MOVLB  0
02D06:  CALL   1056
02D0A:  BSF    FC2.1
02D0C:  BTFSC  FC2.1
02D0E:  BRA    2D0C
02D10:  MOVFF  FC4,661
02D14:  MOVFF  FC3,660
02D18:  MOVLB  0
02D1A:  CALL   10B6
02D1E:  MOVFF  03,65F
02D22:  MOVFF  02,65E
02D26:  MOVFF  01,65D
02D2A:  MOVFF  00,65C
02D2E:  MOVFF  65C,00
02D32:  MOVFF  65D,01
02D36:  MOVFF  65E,02
02D3A:  MOVFF  65F,03
.................... } 
02D3E:  RETLW  00
....................  
.................... float Leer_Sensor(int media){ 
....................    if(Source==1){ 
*
02E58:  MOVLB  5
02E5A:  DECFSZ x96,W
02E5C:  BRA    30D6
....................       Prom=0.0; 
02E5E:  CLRF   xF9
02E60:  CLRF   xF8
02E62:  CLRF   xF7
02E64:  CLRF   xF6
....................       V0 = sensores(1);   //Lectura de 4-20mA Transmisor PT100 
02E66:  MOVLW  01
02E68:  MOVLB  6
02E6A:  MOVWF  x5B
02E6C:  MOVLB  0
02E6E:  RCALL  2CE8
02E70:  MOVFF  03,5E1
02E74:  MOVFF  02,5E0
02E78:  MOVFF  01,5DF
02E7C:  MOVFF  00,5DE
....................       //Temperature=(0.1272*V0)-25.002;//0-100°C 240ohm 
....................       Temperature=(0.1283*V0)-24.95;//0-100°C 238ohm 
02E80:  MOVLW  13
02E82:  MOVLB  6
02E84:  MOVWF  x7D
02E86:  MOVLW  61
02E88:  MOVWF  x7C
02E8A:  MOVLW  03
02E8C:  MOVWF  x7B
02E8E:  MOVLW  7C
02E90:  MOVWF  x7A
02E92:  MOVFF  5E1,681
02E96:  MOVFF  5E0,680
02E9A:  MOVFF  5DF,67F
02E9E:  MOVFF  5DE,67E
02EA2:  MOVLB  0
02EA4:  RCALL  2D40
02EA6:  MOVFF  00,65B
02EAA:  MOVFF  01,65C
02EAE:  MOVFF  02,65D
02EB2:  MOVFF  03,65E
02EB6:  BSF    FD8.1
02EB8:  MOVFF  03,662
02EBC:  MOVFF  02,661
02EC0:  MOVFF  01,660
02EC4:  MOVFF  00,65F
02EC8:  MOVLW  9A
02ECA:  MOVLB  6
02ECC:  MOVWF  x66
02ECE:  MOVLW  99
02ED0:  MOVWF  x65
02ED2:  MOVLW  47
02ED4:  MOVWF  x64
02ED6:  MOVLW  83
02ED8:  MOVWF  x63
02EDA:  MOVLB  0
02EDC:  CALL   124A
02EE0:  MOVFF  03,5FD
02EE4:  MOVFF  02,5FC
02EE8:  MOVFF  01,5FB
02EEC:  MOVFF  00,5FA
....................        
....................       if(l>(media-1)) 
02EF0:  MOVLW  01
02EF2:  MOVLB  6
02EF4:  SUBWF  x5A,W
02EF6:  MOVLB  5
02EF8:  SUBWF  x89,W
02EFA:  BZ    2F00
02EFC:  BNC   2F00
....................       {l=0;} 
02EFE:  CLRF   x89
....................       promedio[l]=Temperature;l++; 
02F00:  MOVLB  6
02F02:  CLRF   x5F
02F04:  MOVFF  589,65E
02F08:  CLRF   x61
02F0A:  MOVLW  04
02F0C:  MOVWF  x60
02F0E:  MOVLB  0
02F10:  RCALL  2E36
02F12:  MOVF   01,W
02F14:  ADDLW  17
02F16:  MOVWF  FE9
02F18:  MOVLW  04
02F1A:  ADDWFC 02,W
02F1C:  MOVWF  FEA
02F1E:  MOVFF  5FA,FEF
02F22:  MOVFF  5FB,FEC
02F26:  MOVFF  5FC,FEC
02F2A:  MOVFF  5FD,FEC
02F2E:  MOVLB  5
02F30:  INCF   x89,F
....................       //promedio[l]=V0;l++; 
....................              
....................       for(h=0;h<media;h++) 
02F32:  CLRF   x88
02F34:  MOVLB  6
02F36:  MOVF   x5A,W
02F38:  MOVLB  5
02F3A:  SUBWF  x88,W
02F3C:  BC    2FBC
....................       { 
....................          Prom+=promedio[h]; 
02F3E:  MOVLB  6
02F40:  CLRF   x5F
02F42:  MOVFF  588,65E
02F46:  CLRF   x61
02F48:  MOVLW  04
02F4A:  MOVWF  x60
02F4C:  MOVLB  0
02F4E:  RCALL  2E36
02F50:  MOVFF  02,03
02F54:  MOVF   01,W
02F56:  ADDLW  17
02F58:  MOVWF  FE9
02F5A:  MOVLW  04
02F5C:  ADDWFC 02,W
02F5E:  MOVWF  FEA
02F60:  MOVFF  FEF,00
02F64:  MOVFF  FEC,01
02F68:  MOVFF  FEC,02
02F6C:  MOVFF  FEC,03
02F70:  MOVFF  FEA,65C
02F74:  MOVFF  FE9,65B
02F78:  BCF    FD8.1
02F7A:  MOVFF  5F9,662
02F7E:  MOVFF  5F8,661
02F82:  MOVFF  5F7,660
02F86:  MOVFF  5F6,65F
02F8A:  MOVFF  03,666
02F8E:  MOVFF  02,665
02F92:  MOVFF  01,664
02F96:  MOVFF  00,663
02F9A:  CALL   124A
02F9E:  MOVFF  65C,FEA
02FA2:  MOVFF  65B,FE9
02FA6:  MOVFF  03,5F9
02FAA:  MOVFF  02,5F8
02FAE:  MOVFF  01,5F7
02FB2:  MOVFF  00,5F6
....................       }  
02FB6:  MOVLB  5
02FB8:  INCF   x88,F
02FBA:  BRA    2F34
....................       Prom=Prom/media;   
02FBC:  MOVLB  6
02FBE:  CLRF   x61
02FC0:  MOVFF  65A,660
02FC4:  MOVLB  0
02FC6:  CALL   10B6
02FCA:  MOVFF  5F9,65E
02FCE:  MOVFF  5F8,65D
02FD2:  MOVFF  5F7,65C
02FD6:  MOVFF  5F6,65B
02FDA:  MOVFF  03,662
02FDE:  MOVFF  02,661
02FE2:  MOVFF  01,660
02FE6:  MOVFF  00,65F
02FEA:  CALL   10EC
02FEE:  MOVFF  03,5F9
02FF2:  MOVFF  02,5F8
02FF6:  MOVFF  01,5F7
02FFA:  MOVFF  00,5F6
....................       Prom-=0.4; //Ajuste de error por resistencia de 240ohm 
02FFE:  BSF    FD8.1
03000:  MOVFF  5F9,662
03004:  MOVFF  5F8,661
03008:  MOVFF  5F7,660
0300C:  MOVFF  5F6,65F
03010:  MOVLW  CD
03012:  MOVLB  6
03014:  MOVWF  x66
03016:  MOVLW  CC
03018:  MOVWF  x65
0301A:  MOVLW  4C
0301C:  MOVWF  x64
0301E:  MOVLW  7D
03020:  MOVWF  x63
03022:  MOVLB  0
03024:  CALL   124A
03028:  MOVFF  03,5F9
0302C:  MOVFF  02,5F8
03030:  MOVFF  01,5F7
03034:  MOVFF  00,5F6
....................       Prom+=((float)Ajuste-(float)Ajusten); 
03038:  MOVLB  6
0303A:  CLRF   x61
0303C:  MOVFF  58A,660
03040:  MOVLB  0
03042:  CALL   10B6
03046:  MOVFF  00,65B
0304A:  MOVFF  01,65C
0304E:  MOVFF  02,65D
03052:  MOVFF  03,65E
03056:  MOVLB  6
03058:  CLRF   x61
0305A:  MOVFF  58B,660
0305E:  MOVLB  0
03060:  CALL   10B6
03064:  BSF    FD8.1
03066:  MOVFF  65E,662
0306A:  MOVFF  65D,661
0306E:  MOVFF  65C,660
03072:  MOVFF  65B,65F
03076:  MOVFF  03,666
0307A:  MOVFF  02,665
0307E:  MOVFF  01,664
03082:  MOVFF  00,663
03086:  CALL   124A
0308A:  BCF    FD8.1
0308C:  MOVFF  5F9,662
03090:  MOVFF  5F8,661
03094:  MOVFF  5F7,660
03098:  MOVFF  5F6,65F
0309C:  MOVFF  03,666
030A0:  MOVFF  02,665
030A4:  MOVFF  01,664
030A8:  MOVFF  00,663
030AC:  CALL   124A
030B0:  MOVFF  03,5F9
030B4:  MOVFF  02,5F8
030B8:  MOVFF  01,5F7
030BC:  MOVFF  00,5F6
....................       return Prom;    
030C0:  MOVFF  5F6,00
030C4:  MOVFF  5F7,01
030C8:  MOVFF  5F8,02
030CC:  MOVFF  5F9,03
030D0:  BRA    348A
....................    }else if(Source==0){ 
030D2:  BRA    348A
030D4:  MOVLB  5
030D6:  MOVF   x96,F
030D8:  BTFSS  FD8.2
030DA:  BRA    348C
....................       Prom=0.0; 
030DC:  CLRF   xF9
030DE:  CLRF   xF8
030E0:  CLRF   xF7
030E2:  CLRF   xF6
....................       V0 = sensores(0);   //Lectura de Divisor de Voltaje de PT100 con resistencia de 6.18k (+-2%) 
030E4:  MOVLB  6
030E6:  CLRF   x5B
030E8:  MOVLB  0
030EA:  RCALL  2CE8
030EC:  MOVFF  03,5E1
030F0:  MOVFF  02,5E0
030F4:  MOVFF  01,5DF
030F8:  MOVFF  00,5DE
....................       V0 = V0/Gain; // Se elimina la ganancia 
030FC:  MOVFF  5E1,65E
03100:  MOVFF  5E0,65D
03104:  MOVFF  5DF,65C
03108:  MOVFF  5DE,65B
0310C:  MOVFF  5C1,662
03110:  MOVFF  5C0,661
03114:  MOVFF  5BF,660
03118:  MOVFF  5BE,65F
0311C:  CALL   10EC
03120:  MOVFF  03,5E1
03124:  MOVFF  02,5E0
03128:  MOVFF  01,5DF
0312C:  MOVFF  00,5DE
....................       Pt=(R1)/((1024.0/V0)-1.0); // Se calcula el valor de la PT100 
03130:  MOVLB  6
03132:  CLRF   x5E
03134:  CLRF   x5D
03136:  CLRF   x5C
03138:  MOVLW  89
0313A:  MOVWF  x5B
0313C:  MOVFF  5E1,662
03140:  MOVFF  5E0,661
03144:  MOVFF  5DF,660
03148:  MOVFF  5DE,65F
0314C:  MOVLB  0
0314E:  CALL   10EC
03152:  MOVFF  00,65B
03156:  MOVFF  01,65C
0315A:  MOVFF  02,65D
0315E:  MOVFF  03,65E
03162:  BSF    FD8.1
03164:  MOVFF  03,662
03168:  MOVFF  02,661
0316C:  MOVFF  01,660
03170:  MOVFF  00,65F
03174:  MOVLB  6
03176:  CLRF   x66
03178:  CLRF   x65
0317A:  CLRF   x64
0317C:  MOVLW  7F
0317E:  MOVWF  x63
03180:  MOVLB  0
03182:  CALL   124A
03186:  MOVFF  5E5,65E
0318A:  MOVFF  5E4,65D
0318E:  MOVFF  5E3,65C
03192:  MOVFF  5E2,65B
03196:  MOVFF  03,662
0319A:  MOVFF  02,661
0319E:  MOVFF  01,660
031A2:  MOVFF  00,65F
031A6:  CALL   10EC
031AA:  MOVFF  03,5E9
031AE:  MOVFF  02,5E8
031B2:  MOVFF  01,5E7
031B6:  MOVFF  00,5E6
....................       Pt=Pt-RPT100; //Ajuste de impedancia de cableado de PT100 
031BA:  BSF    FD8.1
031BC:  MOVFF  5E9,662
031C0:  MOVFF  5E8,661
031C4:  MOVFF  5E7,660
031C8:  MOVFF  5E6,65F
031CC:  MOVFF  5C5,666
031D0:  MOVFF  5C4,665
031D4:  MOVFF  5C3,664
031D8:  MOVFF  5C2,663
031DC:  CALL   124A
031E0:  MOVFF  03,5E9
031E4:  MOVFF  02,5E8
031E8:  MOVFF  01,5E7
031EC:  MOVFF  00,5E6
....................       //Temperature=(Pt-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
....................                 
....................       if(l>(media-1)) 
031F0:  MOVLW  01
031F2:  MOVLB  6
031F4:  SUBWF  x5A,W
031F6:  MOVLB  5
031F8:  SUBWF  x89,W
031FA:  BZ    3200
031FC:  BNC   3200
....................       {l=0;} 
031FE:  CLRF   x89
....................       //promedio[l]=Temperature;l++; 
....................       promedio[l]=Pt;l++; 
03200:  MOVLB  6
03202:  CLRF   x5F
03204:  MOVFF  589,65E
03208:  CLRF   x61
0320A:  MOVLW  04
0320C:  MOVWF  x60
0320E:  MOVLB  0
03210:  RCALL  2E36
03212:  MOVF   01,W
03214:  ADDLW  17
03216:  MOVWF  FE9
03218:  MOVLW  04
0321A:  ADDWFC 02,W
0321C:  MOVWF  FEA
0321E:  MOVFF  5E6,FEF
03222:  MOVFF  5E7,FEC
03226:  MOVFF  5E8,FEC
0322A:  MOVFF  5E9,FEC
0322E:  MOVLB  5
03230:  INCF   x89,F
....................              
....................       for(h=0;h<media;h++) 
03232:  CLRF   x88
03234:  MOVLB  6
03236:  MOVF   x5A,W
03238:  MOVLB  5
0323A:  SUBWF  x88,W
0323C:  BC    32BC
....................       { 
....................          Prom+=promedio[h]; 
0323E:  MOVLB  6
03240:  CLRF   x5F
03242:  MOVFF  588,65E
03246:  CLRF   x61
03248:  MOVLW  04
0324A:  MOVWF  x60
0324C:  MOVLB  0
0324E:  RCALL  2E36
03250:  MOVFF  02,03
03254:  MOVF   01,W
03256:  ADDLW  17
03258:  MOVWF  FE9
0325A:  MOVLW  04
0325C:  ADDWFC 02,W
0325E:  MOVWF  FEA
03260:  MOVFF  FEF,00
03264:  MOVFF  FEC,01
03268:  MOVFF  FEC,02
0326C:  MOVFF  FEC,03
03270:  MOVFF  FEA,65C
03274:  MOVFF  FE9,65B
03278:  BCF    FD8.1
0327A:  MOVFF  5F9,662
0327E:  MOVFF  5F8,661
03282:  MOVFF  5F7,660
03286:  MOVFF  5F6,65F
0328A:  MOVFF  03,666
0328E:  MOVFF  02,665
03292:  MOVFF  01,664
03296:  MOVFF  00,663
0329A:  CALL   124A
0329E:  MOVFF  65C,FEA
032A2:  MOVFF  65B,FE9
032A6:  MOVFF  03,5F9
032AA:  MOVFF  02,5F8
032AE:  MOVFF  01,5F7
032B2:  MOVFF  00,5F6
....................       }  
032B6:  MOVLB  5
032B8:  INCF   x88,F
032BA:  BRA    3234
....................       Prom=Prom/media;    
032BC:  MOVLB  6
032BE:  CLRF   x61
032C0:  MOVFF  65A,660
032C4:  MOVLB  0
032C6:  CALL   10B6
032CA:  MOVFF  5F9,65E
032CE:  MOVFF  5F8,65D
032D2:  MOVFF  5F7,65C
032D6:  MOVFF  5F6,65B
032DA:  MOVFF  03,662
032DE:  MOVFF  02,661
032E2:  MOVFF  01,660
032E6:  MOVFF  00,65F
032EA:  CALL   10EC
032EE:  MOVFF  03,5F9
032F2:  MOVFF  02,5F8
032F6:  MOVFF  01,5F7
032FA:  MOVFF  00,5F6
....................       //Temperature=(Prom-100.0)/(0.385);  // Ecuación determinada por linealización en Matlab. Revisar este polinomio.   
....................       Temperature=((Prom*Prom)*a)+(Prom*b)+c;  // Ecuación determinada por linealización en Matlab. Revisar este polinomio. 
032FE:  MOVFF  5F9,67D
03302:  MOVFF  5F8,67C
03306:  MOVFF  5F7,67B
0330A:  MOVFF  5F6,67A
0330E:  MOVFF  5F9,681
03312:  MOVFF  5F8,680
03316:  MOVFF  5F7,67F
0331A:  MOVFF  5F6,67E
0331E:  RCALL  2D40
03320:  MOVFF  00,65B
03324:  MOVFF  01,65C
03328:  MOVFF  02,65D
0332C:  MOVFF  03,65E
03330:  MOVFF  03,67D
03334:  MOVFF  02,67C
03338:  MOVFF  01,67B
0333C:  MOVFF  00,67A
03340:  MOVFF  631,681
03344:  MOVFF  630,680
03348:  MOVFF  62F,67F
0334C:  MOVFF  62E,67E
03350:  RCALL  2D40
03352:  MOVFF  00,65B
03356:  MOVFF  01,65C
0335A:  MOVFF  02,65D
0335E:  MOVFF  03,65E
03362:  MOVFF  5F9,67D
03366:  MOVFF  5F8,67C
0336A:  MOVFF  5F7,67B
0336E:  MOVFF  5F6,67A
03372:  MOVFF  635,681
03376:  MOVFF  634,680
0337A:  MOVFF  633,67F
0337E:  MOVFF  632,67E
03382:  RCALL  2D40
03384:  BCF    FD8.1
03386:  MOVFF  65E,662
0338A:  MOVFF  65D,661
0338E:  MOVFF  65C,660
03392:  MOVFF  65B,65F
03396:  MOVFF  03,666
0339A:  MOVFF  02,665
0339E:  MOVFF  01,664
033A2:  MOVFF  00,663
033A6:  CALL   124A
033AA:  MOVFF  00,65B
033AE:  MOVFF  01,65C
033B2:  MOVFF  02,65D
033B6:  MOVFF  03,65E
033BA:  BCF    FD8.1
033BC:  MOVFF  03,662
033C0:  MOVFF  02,661
033C4:  MOVFF  01,660
033C8:  MOVFF  00,65F
033CC:  MOVFF  639,666
033D0:  MOVFF  638,665
033D4:  MOVFF  637,664
033D8:  MOVFF  636,663
033DC:  CALL   124A
033E0:  MOVFF  03,5FD
033E4:  MOVFF  02,5FC
033E8:  MOVFF  01,5FB
033EC:  MOVFF  00,5FA
....................       Temperature+=((float)Ajuste-(float)Ajusten); 
033F0:  MOVLB  6
033F2:  CLRF   x61
033F4:  MOVFF  58A,660
033F8:  MOVLB  0
033FA:  CALL   10B6
033FE:  MOVFF  00,65B
03402:  MOVFF  01,65C
03406:  MOVFF  02,65D
0340A:  MOVFF  03,65E
0340E:  MOVLB  6
03410:  CLRF   x61
03412:  MOVFF  58B,660
03416:  MOVLB  0
03418:  CALL   10B6
0341C:  BSF    FD8.1
0341E:  MOVFF  65E,662
03422:  MOVFF  65D,661
03426:  MOVFF  65C,660
0342A:  MOVFF  65B,65F
0342E:  MOVFF  03,666
03432:  MOVFF  02,665
03436:  MOVFF  01,664
0343A:  MOVFF  00,663
0343E:  CALL   124A
03442:  BCF    FD8.1
03444:  MOVFF  5FD,662
03448:  MOVFF  5FC,661
0344C:  MOVFF  5FB,660
03450:  MOVFF  5FA,65F
03454:  MOVFF  03,666
03458:  MOVFF  02,665
0345C:  MOVFF  01,664
03460:  MOVFF  00,663
03464:  CALL   124A
03468:  MOVFF  03,5FD
0346C:  MOVFF  02,5FC
03470:  MOVFF  01,5FB
03474:  MOVFF  00,5FA
....................        
....................       //return Prom; 
....................       return Temperature; 
03478:  MOVFF  5FA,00
0347C:  MOVFF  5FB,01
03480:  MOVFF  5FC,02
03484:  MOVFF  5FD,03
03488:  BRA    348A
0348A:  MOVLB  5
....................       //return Temperature; 
....................    } 
.................... } 
0348C:  MOVLB  0
0348E:  RETLW  00
....................  
.................... void Controla(){ 
.................... //-------------------------------Control de Calentamiento------------------------------------------------------------//          
....................       if(tiemporecta>=Derivativo)//40 
*
04E64:  MOVLB  6
04E66:  CLRF   x61
04E68:  MOVFF  58D,660
04E6C:  MOVLB  0
04E6E:  CALL   10B6
04E72:  MOVFF  5CD,661
04E76:  MOVFF  5CC,660
04E7A:  MOVFF  5CB,65F
04E7E:  MOVFF  5CA,65E
04E82:  MOVFF  03,665
04E86:  MOVFF  02,664
04E8A:  MOVFF  01,663
04E8E:  MOVFF  00,662
04E92:  CALL   1C46
04E96:  BC    4E9A
04E98:  BNZ   4EA2
....................       { 
....................          ActualizaRecta(); 
04E9A:  BRA    4DF6
....................          tiemporecta=0; 
04E9C:  MOVLB  5
04E9E:  CLRF   x8D
04EA0:  MOVLB  0
....................       }  
....................     
....................       Motor1_on; 
04EA2:  BCF    F8B.5
04EA4:  BCF    F94.5
....................       Motor2_on; 
04EA6:  BCF    F8B.6
04EA8:  BCF    F94.6
....................     
....................       error=desvio+Setpoint-Temperatura;      // Cálculo del error ****** 
04EAA:  BCF    FD8.1
04EAC:  MOVFF  609,662
04EB0:  MOVFF  608,661
04EB4:  MOVFF  607,660
04EB8:  MOVFF  606,65F
04EBC:  MOVFF  61D,666
04EC0:  MOVFF  61C,665
04EC4:  MOVFF  61B,664
04EC8:  MOVFF  61A,663
04ECC:  CALL   124A
04ED0:  MOVFF  00,65A
04ED4:  MOVFF  01,65B
04ED8:  MOVFF  02,65C
04EDC:  MOVFF  03,65D
04EE0:  BSF    FD8.1
04EE2:  MOVFF  03,662
04EE6:  MOVFF  02,661
04EEA:  MOVFF  01,660
04EEE:  MOVFF  00,65F
04EF2:  MOVFF  615,666
04EF6:  MOVFF  614,665
04EFA:  MOVFF  613,664
04EFE:  MOVFF  612,663
04F02:  CALL   124A
04F06:  MOVFF  03,5F5
04F0A:  MOVFF  02,5F4
04F0E:  MOVFF  01,5F3
04F12:  MOVFF  00,5F2
....................     
....................       if(error>=0.8 && error<30 && Aumento<0.3 && flag_setpoint==0) 
04F16:  MOVLW  CD
04F18:  MOVLB  6
04F1A:  MOVWF  x61
04F1C:  MOVLW  CC
04F1E:  MOVWF  x60
04F20:  MOVLW  4C
04F22:  MOVWF  x5F
04F24:  MOVLW  7E
04F26:  MOVWF  x5E
04F28:  MOVFF  5F5,665
04F2C:  MOVFF  5F4,664
04F30:  MOVFF  5F3,663
04F34:  MOVFF  5F2,662
04F38:  MOVLB  0
04F3A:  CALL   1C46
04F3E:  BC    4F44
04F40:  BTFSS  FD8.2
04F42:  BRA    5358
04F44:  MOVFF  5F5,661
04F48:  MOVFF  5F4,660
04F4C:  MOVFF  5F3,65F
04F50:  MOVFF  5F2,65E
04F54:  MOVLB  6
04F56:  CLRF   x65
04F58:  CLRF   x64
04F5A:  MOVLW  70
04F5C:  MOVWF  x63
04F5E:  MOVLW  83
04F60:  MOVWF  x62
04F62:  MOVLB  0
04F64:  CALL   1C46
04F68:  BTFSS  FD8.0
04F6A:  BRA    5358
04F6C:  MOVFF  611,661
04F70:  MOVFF  610,660
04F74:  MOVFF  60F,65F
04F78:  MOVFF  60E,65E
04F7C:  MOVLW  9A
04F7E:  MOVLB  6
04F80:  MOVWF  x65
04F82:  MOVLW  99
04F84:  MOVWF  x64
04F86:  MOVLW  19
04F88:  MOVWF  x63
04F8A:  MOVLW  7D
04F8C:  MOVWF  x62
04F8E:  MOVLB  0
04F90:  CALL   1C46
04F94:  BTFSS  FD8.0
04F96:  BRA    5358
04F98:  MOVLB  5
04F9A:  BTFSS  x93.6
04F9C:  BRA    4FA2
04F9E:  MOVLB  0
04FA0:  BRA    5358
....................       { 
....................          flag_ajuste=0; 
04FA2:  BCF    x87.6
....................          flag_ajuste2=0; 
04FA4:  BCF    x87.7
....................          Ajusto=10; 
04FA6:  MOVLW  0A
04FA8:  MOVWF  x91
....................          if(Potencia<90.0){ 
04FAA:  MOVFF  5B5,661
04FAE:  MOVFF  5B4,660
04FB2:  MOVFF  5B3,65F
04FB6:  MOVFF  5B2,65E
04FBA:  MOVLB  6
04FBC:  CLRF   x65
04FBE:  CLRF   x64
04FC0:  MOVLW  34
04FC2:  MOVWF  x63
04FC4:  MOVLW  85
04FC6:  MOVWF  x62
04FC8:  MOVLB  0
04FCA:  CALL   1C46
04FCE:  BTFSS  FD8.0
04FD0:  BRA    5356
....................             if(error>1.1){ 
04FD2:  MOVLW  CD
04FD4:  MOVLB  6
04FD6:  MOVWF  x61
04FD8:  MOVLW  CC
04FDA:  MOVWF  x60
04FDC:  MOVLW  0C
04FDE:  MOVWF  x5F
04FE0:  MOVLW  7F
04FE2:  MOVWF  x5E
04FE4:  MOVFF  5F5,665
04FE8:  MOVFF  5F4,664
04FEC:  MOVFF  5F3,663
04FF0:  MOVFF  5F2,662
04FF4:  MOVLB  0
04FF6:  CALL   1C46
04FFA:  BTFSS  FD8.0
04FFC:  BRA    51AA
....................                if(TiempoControl>=(Derivativo*2))//80 
04FFE:  MOVFF  5CD,67D
05002:  MOVFF  5CC,67C
05006:  MOVFF  5CB,67B
0500A:  MOVFF  5CA,67A
0500E:  MOVLB  6
05010:  CLRF   x81
05012:  CLRF   x80
05014:  CLRF   x7F
05016:  MOVLW  80
05018:  MOVWF  x7E
0501A:  MOVLB  0
0501C:  CALL   2D40
05020:  MOVFF  00,65A
05024:  MOVFF  01,65B
05028:  MOVFF  02,65C
0502C:  MOVFF  03,65D
05030:  MOVFF  5B1,661
05034:  MOVFF  5B0,660
05038:  CALL   10B6
0503C:  MOVFF  65D,661
05040:  MOVFF  65C,660
05044:  MOVFF  65B,65F
05048:  MOVFF  65A,65E
0504C:  MOVFF  03,665
05050:  MOVFF  02,664
05054:  MOVFF  01,663
05058:  MOVFF  00,662
0505C:  CALL   1C46
05060:  BC    5066
05062:  BTFSS  FD8.2
05064:  BRA    51A8
....................                { 
....................                   TiempoControl=0; 
05066:  MOVLB  5
05068:  CLRF   xB1
0506A:  CLRF   xB0
....................                   if(Aumento<-0.5) 
0506C:  MOVFF  611,661
05070:  MOVFF  610,660
05074:  MOVFF  60F,65F
05078:  MOVFF  60E,65E
0507C:  MOVLB  6
0507E:  CLRF   x65
05080:  CLRF   x64
05082:  MOVLW  80
05084:  MOVWF  x63
05086:  MOVLW  7E
05088:  MOVWF  x62
0508A:  MOVLB  0
0508C:  CALL   1C46
05090:  BNC   50EE
....................                   { 
....................                      Ganancia+=Integral+1;//2 
05092:  BCF    FD8.1
05094:  MOVFF  5C9,662
05098:  MOVFF  5C8,661
0509C:  MOVFF  5C7,660
050A0:  MOVFF  5C6,65F
050A4:  MOVLB  6
050A6:  CLRF   x66
050A8:  CLRF   x65
050AA:  CLRF   x64
050AC:  MOVLW  7F
050AE:  MOVWF  x63
050B0:  MOVLB  0
050B2:  CALL   124A
050B6:  BCF    FD8.1
050B8:  MOVFF  605,662
050BC:  MOVFF  604,661
050C0:  MOVFF  603,660
050C4:  MOVFF  602,65F
050C8:  MOVFF  03,666
050CC:  MOVFF  02,665
050D0:  MOVFF  01,664
050D4:  MOVFF  00,663
050D8:  CALL   124A
050DC:  MOVFF  03,605
050E0:  MOVFF  02,604
050E4:  MOVFF  01,603
050E8:  MOVFF  00,602
....................                   } 
....................                   else 
050EC:  BRA    51A8
....................                   { 
....................                      if(Aumento<-0.1) 
050EE:  MOVFF  611,661
050F2:  MOVFF  610,660
050F6:  MOVFF  60F,65F
050FA:  MOVFF  60E,65E
050FE:  MOVLW  CD
05100:  MOVLB  6
05102:  MOVWF  x65
05104:  MOVLW  CC
05106:  MOVWF  x64
05108:  MOVWF  x63
0510A:  MOVLW  7B
0510C:  MOVWF  x62
0510E:  MOVLB  0
05110:  CALL   1C46
05114:  BNC   514E
....................                      { 
....................                         Ganancia+=Integral;//1 
05116:  BCF    FD8.1
05118:  MOVFF  605,662
0511C:  MOVFF  604,661
05120:  MOVFF  603,660
05124:  MOVFF  602,65F
05128:  MOVFF  5C9,666
0512C:  MOVFF  5C8,665
05130:  MOVFF  5C7,664
05134:  MOVFF  5C6,663
05138:  CALL   124A
0513C:  MOVFF  03,605
05140:  MOVFF  02,604
05144:  MOVFF  01,603
05148:  MOVFF  00,602
....................                      }    
....................                      else 
0514C:  BRA    51A8
....................                      { 
....................                         Ganancia+=Integral-0.5;//0.5 
0514E:  BSF    FD8.1
05150:  MOVFF  5C9,662
05154:  MOVFF  5C8,661
05158:  MOVFF  5C7,660
0515C:  MOVFF  5C6,65F
05160:  MOVLB  6
05162:  CLRF   x66
05164:  CLRF   x65
05166:  CLRF   x64
05168:  MOVLW  7E
0516A:  MOVWF  x63
0516C:  MOVLB  0
0516E:  CALL   124A
05172:  BCF    FD8.1
05174:  MOVFF  605,662
05178:  MOVFF  604,661
0517C:  MOVFF  603,660
05180:  MOVFF  602,65F
05184:  MOVFF  03,666
05188:  MOVFF  02,665
0518C:  MOVFF  01,664
05190:  MOVFF  00,663
05194:  CALL   124A
05198:  MOVFF  03,605
0519C:  MOVFF  02,604
051A0:  MOVFF  01,603
051A4:  MOVFF  00,602
....................                      } 
....................                   } 
....................                } 
....................             }else{ 
051A8:  BRA    5356
....................                if(TiempoControl>=(Derivativo*6))//80 
051AA:  MOVFF  5CD,67D
051AE:  MOVFF  5CC,67C
051B2:  MOVFF  5CB,67B
051B6:  MOVFF  5CA,67A
051BA:  MOVLB  6
051BC:  CLRF   x81
051BE:  CLRF   x80
051C0:  MOVLW  40
051C2:  MOVWF  x7F
051C4:  MOVLW  81
051C6:  MOVWF  x7E
051C8:  MOVLB  0
051CA:  CALL   2D40
051CE:  MOVFF  00,65A
051D2:  MOVFF  01,65B
051D6:  MOVFF  02,65C
051DA:  MOVFF  03,65D
051DE:  MOVFF  5B1,661
051E2:  MOVFF  5B0,660
051E6:  CALL   10B6
051EA:  MOVFF  65D,661
051EE:  MOVFF  65C,660
051F2:  MOVFF  65B,65F
051F6:  MOVFF  65A,65E
051FA:  MOVFF  03,665
051FE:  MOVFF  02,664
05202:  MOVFF  01,663
05206:  MOVFF  00,662
0520A:  CALL   1C46
0520E:  BC    5214
05210:  BTFSS  FD8.2
05212:  BRA    5356
....................                { 
....................                   TiempoControl=0; 
05214:  MOVLB  5
05216:  CLRF   xB1
05218:  CLRF   xB0
....................                   if(Aumento<-0.5) 
0521A:  MOVFF  611,661
0521E:  MOVFF  610,660
05222:  MOVFF  60F,65F
05226:  MOVFF  60E,65E
0522A:  MOVLB  6
0522C:  CLRF   x65
0522E:  CLRF   x64
05230:  MOVLW  80
05232:  MOVWF  x63
05234:  MOVLW  7E
05236:  MOVWF  x62
05238:  MOVLB  0
0523A:  CALL   1C46
0523E:  BNC   529C
....................                   { 
....................                      Ganancia+=Integral+1;//2 
05240:  BCF    FD8.1
05242:  MOVFF  5C9,662
05246:  MOVFF  5C8,661
0524A:  MOVFF  5C7,660
0524E:  MOVFF  5C6,65F
05252:  MOVLB  6
05254:  CLRF   x66
05256:  CLRF   x65
05258:  CLRF   x64
0525A:  MOVLW  7F
0525C:  MOVWF  x63
0525E:  MOVLB  0
05260:  CALL   124A
05264:  BCF    FD8.1
05266:  MOVFF  605,662
0526A:  MOVFF  604,661
0526E:  MOVFF  603,660
05272:  MOVFF  602,65F
05276:  MOVFF  03,666
0527A:  MOVFF  02,665
0527E:  MOVFF  01,664
05282:  MOVFF  00,663
05286:  CALL   124A
0528A:  MOVFF  03,605
0528E:  MOVFF  02,604
05292:  MOVFF  01,603
05296:  MOVFF  00,602
....................                   } 
....................                   else 
0529A:  BRA    5356
....................                   { 
....................                      if(Aumento<-0.1) 
0529C:  MOVFF  611,661
052A0:  MOVFF  610,660
052A4:  MOVFF  60F,65F
052A8:  MOVFF  60E,65E
052AC:  MOVLW  CD
052AE:  MOVLB  6
052B0:  MOVWF  x65
052B2:  MOVLW  CC
052B4:  MOVWF  x64
052B6:  MOVWF  x63
052B8:  MOVLW  7B
052BA:  MOVWF  x62
052BC:  MOVLB  0
052BE:  CALL   1C46
052C2:  BNC   52FC
....................                      { 
....................                         Ganancia+=Integral;//1 
052C4:  BCF    FD8.1
052C6:  MOVFF  605,662
052CA:  MOVFF  604,661
052CE:  MOVFF  603,660
052D2:  MOVFF  602,65F
052D6:  MOVFF  5C9,666
052DA:  MOVFF  5C8,665
052DE:  MOVFF  5C7,664
052E2:  MOVFF  5C6,663
052E6:  CALL   124A
052EA:  MOVFF  03,605
052EE:  MOVFF  02,604
052F2:  MOVFF  01,603
052F6:  MOVFF  00,602
....................                      }    
....................                      else 
052FA:  BRA    5356
....................                      { 
....................                         Ganancia+=Integral-0.5;//0.5 
052FC:  BSF    FD8.1
052FE:  MOVFF  5C9,662
05302:  MOVFF  5C8,661
05306:  MOVFF  5C7,660
0530A:  MOVFF  5C6,65F
0530E:  MOVLB  6
05310:  CLRF   x66
05312:  CLRF   x65
05314:  CLRF   x64
05316:  MOVLW  7E
05318:  MOVWF  x63
0531A:  MOVLB  0
0531C:  CALL   124A
05320:  BCF    FD8.1
05322:  MOVFF  605,662
05326:  MOVFF  604,661
0532A:  MOVFF  603,660
0532E:  MOVFF  602,65F
05332:  MOVFF  03,666
05336:  MOVFF  02,665
0533A:  MOVFF  01,664
0533E:  MOVFF  00,663
05342:  CALL   124A
05346:  MOVFF  03,605
0534A:  MOVFF  02,604
0534E:  MOVFF  01,603
05352:  MOVFF  00,602
....................                      } 
....................                   } 
....................                } 
....................             } 
....................          } 
....................       }else if(error<0.0){ 
05356:  BRA    5428
05358:  MOVFF  5F5,661
0535C:  MOVFF  5F4,660
05360:  MOVFF  5F3,65F
05364:  MOVFF  5F2,65E
05368:  MOVLB  6
0536A:  CLRF   x65
0536C:  CLRF   x64
0536E:  CLRF   x63
05370:  CLRF   x62
05372:  MOVLB  0
05374:  CALL   1C46
05378:  BNC   5428
....................          if(TiempoControl>=(Derivativo*2)){ 
0537A:  MOVFF  5CD,67D
0537E:  MOVFF  5CC,67C
05382:  MOVFF  5CB,67B
05386:  MOVFF  5CA,67A
0538A:  MOVLB  6
0538C:  CLRF   x81
0538E:  CLRF   x80
05390:  CLRF   x7F
05392:  MOVLW  80
05394:  MOVWF  x7E
05396:  MOVLB  0
05398:  CALL   2D40
0539C:  MOVFF  00,65A
053A0:  MOVFF  01,65B
053A4:  MOVFF  02,65C
053A8:  MOVFF  03,65D
053AC:  MOVFF  5B1,661
053B0:  MOVFF  5B0,660
053B4:  CALL   10B6
053B8:  MOVFF  65D,661
053BC:  MOVFF  65C,660
053C0:  MOVFF  65B,65F
053C4:  MOVFF  65A,65E
053C8:  MOVFF  03,665
053CC:  MOVFF  02,664
053D0:  MOVFF  01,663
053D4:  MOVFF  00,662
053D8:  CALL   1C46
053DC:  BC    53E0
053DE:  BNZ   5428
....................             TiempoControl=0; 
053E0:  MOVLB  5
053E2:  CLRF   xB1
053E4:  CLRF   xB0
....................             Ganancia-=0.2; 
053E6:  BSF    FD8.1
053E8:  MOVFF  605,662
053EC:  MOVFF  604,661
053F0:  MOVFF  603,660
053F4:  MOVFF  602,65F
053F8:  MOVLW  CD
053FA:  MOVLB  6
053FC:  MOVWF  x66
053FE:  MOVLW  CC
05400:  MOVWF  x65
05402:  MOVLW  4C
05404:  MOVWF  x64
05406:  MOVLW  7C
05408:  MOVWF  x63
0540A:  MOVLB  0
0540C:  CALL   124A
05410:  MOVFF  03,605
05414:  MOVFF  02,604
05418:  MOVFF  01,603
0541C:  MOVFF  00,602
....................             flag_ajuste=0; 
05420:  MOVLB  5
05422:  BCF    x87.6
....................             flag_ajuste2=0; 
05424:  BCF    x87.7
05426:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(Ganancia<0.1) 
05428:  MOVFF  605,661
0542C:  MOVFF  604,660
05430:  MOVFF  603,65F
05434:  MOVFF  602,65E
05438:  MOVLW  CD
0543A:  MOVLB  6
0543C:  MOVWF  x65
0543E:  MOVLW  CC
05440:  MOVWF  x64
05442:  MOVLW  4C
05444:  MOVWF  x63
05446:  MOVLW  7B
05448:  MOVWF  x62
0544A:  MOVLB  0
0544C:  CALL   1C46
05450:  BNC   5466
....................       { 
....................          Ganancia=0.1; 
05452:  MOVLW  CD
05454:  MOVLB  6
05456:  MOVWF  x05
05458:  MOVLW  CC
0545A:  MOVWF  x04
0545C:  MOVLW  4C
0545E:  MOVWF  x03
05460:  MOVLW  7B
05462:  MOVWF  x02
05464:  MOVLB  0
....................       } 
....................       if(Ganancia>Gananciamax) 
05466:  MOVFF  5BD,661
0546A:  MOVFF  5BC,660
0546E:  MOVFF  5BB,65F
05472:  MOVFF  5BA,65E
05476:  MOVFF  605,665
0547A:  MOVFF  604,664
0547E:  MOVFF  603,663
05482:  MOVFF  602,662
05486:  CALL   1C46
0548A:  BNC   549C
....................       { 
....................          Ganancia=Gananciamax; 
0548C:  MOVFF  5BD,605
05490:  MOVFF  5BC,604
05494:  MOVFF  5BB,603
05498:  MOVFF  5BA,602
....................       } 
....................     
....................       if(error<0.0)     // Anti Wind_DOWN     
0549C:  MOVFF  5F5,661
054A0:  MOVFF  5F4,660
054A4:  MOVFF  5F3,65F
054A8:  MOVFF  5F2,65E
054AC:  MOVLB  6
054AE:  CLRF   x65
054B0:  CLRF   x64
054B2:  CLRF   x63
054B4:  CLRF   x62
054B6:  MOVLB  0
054B8:  CALL   1C46
054BC:  BNC   54CA
....................       { 
....................          error=0.0; 
054BE:  MOVLB  5
054C0:  CLRF   xF5
054C2:  CLRF   xF4
054C4:  CLRF   xF3
054C6:  CLRF   xF2
054C8:  MOVLB  0
....................       } 
....................       //tmp=(Setpoint-Prom)*Ganancia;  // Control Proporcional. 
....................       tmp=error*Ganancia;  // Control Proporcional. 
054CA:  MOVFF  5F5,67D
054CE:  MOVFF  5F4,67C
054D2:  MOVFF  5F3,67B
054D6:  MOVFF  5F2,67A
054DA:  MOVFF  605,681
054DE:  MOVFF  604,680
054E2:  MOVFF  603,67F
054E6:  MOVFF  602,67E
054EA:  CALL   2D40
054EE:  MOVFF  03,601
054F2:  MOVFF  02,600
054F6:  MOVFF  01,5FF
054FA:  MOVFF  00,5FE
....................              
....................       if(tmp>Setpoint)   // Anti Wind-UP       
054FE:  MOVFF  61D,661
05502:  MOVFF  61C,660
05506:  MOVFF  61B,65F
0550A:  MOVFF  61A,65E
0550E:  MOVFF  601,665
05512:  MOVFF  600,664
05516:  MOVFF  5FF,663
0551A:  MOVFF  5FE,662
0551E:  CALL   1C46
05522:  BNC   5534
....................       { 
....................          tmp=Setpoint; 
05524:  MOVFF  61D,601
05528:  MOVFF  61C,600
0552C:  MOVFF  61B,5FF
05530:  MOVFF  61A,5FE
....................       } 
....................                    
....................       if(tmp<0.0)     // Anti Wind_DOWN     
05534:  MOVFF  601,661
05538:  MOVFF  600,660
0553C:  MOVFF  5FF,65F
05540:  MOVFF  5FE,65E
05544:  MOVLB  6
05546:  CLRF   x65
05548:  CLRF   x64
0554A:  CLRF   x63
0554C:  CLRF   x62
0554E:  MOVLB  0
05550:  CALL   1C46
05554:  BNC   5564
....................       { 
....................          tmp=0.0; 
05556:  MOVLB  6
05558:  CLRF   x01
0555A:  CLRF   x00
0555C:  MOVLB  5
0555E:  CLRF   xFF
05560:  CLRF   xFE
05562:  MOVLB  0
....................       } 
....................     
....................       Tpulso=(tmp/Setpoint)*Tciclo; 
05564:  MOVFF  601,65E
05568:  MOVFF  600,65D
0556C:  MOVFF  5FF,65C
05570:  MOVFF  5FE,65B
05574:  MOVFF  61D,662
05578:  MOVFF  61C,661
0557C:  MOVFF  61B,660
05580:  MOVFF  61A,65F
05584:  CALL   10EC
05588:  MOVFF  00,65A
0558C:  MOVFF  01,65B
05590:  MOVFF  02,65C
05594:  MOVFF  03,65D
05598:  MOVFF  03,67D
0559C:  MOVFF  02,67C
055A0:  MOVFF  01,67B
055A4:  MOVFF  00,67A
055A8:  MOVFF  5ED,681
055AC:  MOVFF  5EC,680
055B0:  MOVFF  5EB,67F
055B4:  MOVFF  5EA,67E
055B8:  CALL   2D40
055BC:  MOVFF  03,5F1
055C0:  MOVFF  02,5F0
055C4:  MOVFF  01,5EF
055C8:  MOVFF  00,5EE
....................        
....................       if(error<0.9) 
055CC:  MOVFF  5F5,661
055D0:  MOVFF  5F4,660
055D4:  MOVFF  5F3,65F
055D8:  MOVFF  5F2,65E
055DC:  MOVLW  66
055DE:  MOVLB  6
055E0:  MOVWF  x65
055E2:  MOVWF  x64
055E4:  MOVWF  x63
055E6:  MOVLW  7E
055E8:  MOVWF  x62
055EA:  MOVLB  0
055EC:  CALL   1C46
055F0:  BTFSS  FD8.0
055F2:  BRA    5700
....................       { 
....................          if(error<=0.8){    
055F4:  MOVFF  5F5,661
055F8:  MOVFF  5F4,660
055FC:  MOVFF  5F3,65F
05600:  MOVFF  5F2,65E
05604:  MOVLW  CD
05606:  MOVLB  6
05608:  MOVWF  x65
0560A:  MOVLW  CC
0560C:  MOVWF  x64
0560E:  MOVLW  4C
05610:  MOVWF  x63
05612:  MOVLW  7E
05614:  MOVWF  x62
05616:  MOVLB  0
05618:  CALL   1C46
0561C:  BC    5620
0561E:  BNZ   563C
....................             if(flag_ajuste==0){ 
05620:  MOVLB  5
05622:  BTFSC  x87.6
05624:  BRA    563C
....................                TpulsoMax=Tpulso; 
05626:  MOVFF  5F1,619
0562A:  MOVFF  5F0,618
0562E:  MOVFF  5EF,617
05632:  MOVFF  5EE,616
....................                flag_ajuste=1;   
05636:  BSF    x87.6
....................                Ajusto=5; 
05638:  MOVLW  05
0563A:  MOVWF  x91
....................             } 
....................          } 
....................           
....................          if(error<=0.4){    
0563C:  MOVFF  5F5,661
05640:  MOVFF  5F4,660
05644:  MOVFF  5F3,65F
05648:  MOVFF  5F2,65E
0564C:  MOVLW  CD
0564E:  MOVLB  6
05650:  MOVWF  x65
05652:  MOVLW  CC
05654:  MOVWF  x64
05656:  MOVLW  4C
05658:  MOVWF  x63
0565A:  MOVLW  7D
0565C:  MOVWF  x62
0565E:  MOVLB  0
05660:  CALL   1C46
05664:  BC    5668
05666:  BNZ   5684
....................             if(flag_ajuste2==0){ 
05668:  MOVLB  5
0566A:  BTFSC  x87.7
0566C:  BRA    5684
....................                Tpulsomin=Tpulso; 
0566E:  MOVFF  5F1,5B9
05672:  MOVFF  5F0,5B8
05676:  MOVFF  5EF,5B7
0567A:  MOVFF  5EE,5B6
....................                flag_ajuste2=1;            
0567E:  BSF    x87.7
....................                Ajusto=5; 
05680:  MOVLW  05
05682:  MOVWF  x91
....................             } 
....................          } 
....................           
....................          if(flag_ajuste2==1){ 
05684:  MOVLB  5
05686:  BTFSS  x87.7
05688:  BRA    56C4
....................             if(Tpulso<Tpulsomin){ 
0568A:  MOVFF  5F1,661
0568E:  MOVFF  5F0,660
05692:  MOVFF  5EF,65F
05696:  MOVFF  5EE,65E
0569A:  MOVFF  5B9,665
0569E:  MOVFF  5B8,664
056A2:  MOVFF  5B7,663
056A6:  MOVFF  5B6,662
056AA:  MOVLB  0
056AC:  CALL   1C46
056B0:  BNC   56C2
....................                Tpulso=Tpulsomin; 
056B2:  MOVFF  5B9,5F1
056B6:  MOVFF  5B8,5F0
056BA:  MOVFF  5B7,5EF
056BE:  MOVFF  5B6,5EE
056C2:  MOVLB  5
....................             } 
....................          } 
....................          if(flag_ajuste==1){    
056C4:  BTFSS  x87.6
056C6:  BRA    5702
....................             if(Tpulso>TpulsoMax){ 
056C8:  MOVFF  619,661
056CC:  MOVFF  618,660
056D0:  MOVFF  617,65F
056D4:  MOVFF  616,65E
056D8:  MOVFF  5F1,665
056DC:  MOVFF  5F0,664
056E0:  MOVFF  5EF,663
056E4:  MOVFF  5EE,662
056E8:  MOVLB  0
056EA:  CALL   1C46
056EE:  BNC   5700
....................                Tpulso=TpulsoMax; 
056F0:  MOVFF  619,5F1
056F4:  MOVFF  618,5F0
056F8:  MOVFF  617,5EF
056FC:  MOVFF  616,5EE
05700:  MOVLB  5
....................             }  
....................          } 
....................       } 
....................       Tp=(Tpulso/0.005); 
05702:  MOVFF  5F1,65E
05706:  MOVFF  5F0,65D
0570A:  MOVFF  5EF,65C
0570E:  MOVFF  5EE,65B
05712:  MOVLW  0A
05714:  MOVLB  6
05716:  MOVWF  x62
05718:  MOVLW  D7
0571A:  MOVWF  x61
0571C:  MOVLW  23
0571E:  MOVWF  x60
05720:  MOVLW  77
05722:  MOVWF  x5F
05724:  MOVLB  0
05726:  CALL   10EC
0572A:  MOVFF  03,65D
0572E:  MOVFF  02,65C
05732:  MOVFF  01,65B
05736:  MOVFF  00,65A
0573A:  CALL   4346
0573E:  MOVFF  02,5AD
05742:  MOVFF  01,5AC
....................       Tc=(Tciclo/0.005); 
05746:  MOVFF  5ED,65E
0574A:  MOVFF  5EC,65D
0574E:  MOVFF  5EB,65C
05752:  MOVFF  5EA,65B
05756:  MOVLW  0A
05758:  MOVLB  6
0575A:  MOVWF  x62
0575C:  MOVLW  D7
0575E:  MOVWF  x61
05760:  MOVLW  23
05762:  MOVWF  x60
05764:  MOVLW  77
05766:  MOVWF  x5F
05768:  MOVLB  0
0576A:  CALL   10EC
0576E:  MOVFF  03,65D
05772:  MOVFF  02,65C
05776:  MOVFF  01,65B
0577A:  MOVFF  00,65A
0577E:  CALL   4346
05782:  MOVFF  02,5AF
05786:  MOVFF  01,5AE
....................       Controlando=1;      
0578A:  MOVLW  01
0578C:  MOVLB  5
0578E:  MOVWF  x90
....................     
.................... //--------------------------------------------------------------------------------------------------------------------//    
....................    
.................... } 
05790:  MOVLB  0
05792:  RETLW  00
....................  
.................... void displayMenu(char palabra[30], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
02BEE:  MOVLB  6
02BF0:  MOVFF  662,01
02BF4:  MOVFF  663,03
02BF8:  MOVFF  662,668
02BFC:  MOVFF  663,669
02C00:  MOVLW  06
02C02:  MOVWF  FEA
02C04:  MOVLW  3A
02C06:  MOVWF  FE9
02C08:  MOVFF  663,FE2
02C0C:  MOVFF  662,FE1
02C10:  MOVF   FE7,F
02C12:  MOVFF  FE6,FEE
02C16:  BNZ   2C10
....................    if(sombreado==2) 
02C18:  MOVF   x66,W
02C1A:  SUBLW  02
02C1C:  BNZ   2C46
....................       {glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
02C1E:  MOVLW  01
02C20:  ADDWF  x64,W
02C22:  MOVWF  x68
02C24:  MOVLW  01
02C26:  ADDWF  x65,W
02C28:  MOVWF  x69
02C2A:  MOVFF  668,673
02C2E:  MOVWF  x74
02C30:  MOVLW  06
02C32:  MOVWF  x76
02C34:  MOVLW  3A
02C36:  MOVWF  x75
02C38:  MOVFF  667,677
02C3C:  MOVLW  01
02C3E:  MOVWF  x78
02C40:  MOVLB  0
02C42:  RCALL  2836
02C44:  MOVLB  6
....................    if(sombreado==1) 
02C46:  DECFSZ x66,W
02C48:  BRA    2C94
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
02C4A:  MOVF   x67,W
02C4C:  MULLW  08
02C4E:  MOVF   FF3,W
02C50:  ADDWF  x65,W
02C52:  MOVWF  x68
02C54:  CLRF   x73
02C56:  MOVFF  665,674
02C5A:  MOVLW  7F
02C5C:  MOVWF  x75
02C5E:  MOVFF  668,676
02C62:  MOVLW  01
02C64:  MOVWF  x77
02C66:  MOVWF  x78
02C68:  MOVLB  0
02C6A:  RCALL  2B2C
02C6C:  MOVLW  01
02C6E:  MOVLB  6
02C70:  ADDWF  x64,W
02C72:  MOVWF  x68
02C74:  MOVLW  01
02C76:  ADDWF  x65,W
02C78:  MOVWF  x69
02C7A:  MOVFF  668,673
02C7E:  MOVWF  x74
02C80:  MOVLW  06
02C82:  MOVWF  x76
02C84:  MOVLW  3A
02C86:  MOVWF  x75
02C88:  MOVFF  667,677
02C8C:  CLRF   x78
02C8E:  MOVLB  0
02C90:  RCALL  2836
02C92:  MOVLB  6
....................    if(sombreado==0) 
02C94:  MOVF   x66,F
02C96:  BNZ   2CE2
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
02C98:  MOVF   x67,W
02C9A:  MULLW  08
02C9C:  MOVF   FF3,W
02C9E:  ADDWF  x65,W
02CA0:  MOVWF  x68
02CA2:  CLRF   x73
02CA4:  MOVFF  665,674
02CA8:  MOVLW  7F
02CAA:  MOVWF  x75
02CAC:  MOVFF  668,676
02CB0:  MOVLW  01
02CB2:  MOVWF  x77
02CB4:  CLRF   x78
02CB6:  MOVLB  0
02CB8:  RCALL  2B2C
02CBA:  MOVLW  01
02CBC:  MOVLB  6
02CBE:  ADDWF  x64,W
02CC0:  MOVWF  x68
02CC2:  MOVLW  01
02CC4:  ADDWF  x65,W
02CC6:  MOVWF  x69
02CC8:  MOVFF  668,673
02CCC:  MOVWF  x74
02CCE:  MOVLW  06
02CD0:  MOVWF  x76
02CD2:  MOVLW  3A
02CD4:  MOVWF  x75
02CD6:  MOVFF  667,677
02CDA:  MOVLW  01
02CDC:  MOVWF  x78
02CDE:  MOVLB  0
02CE0:  RCALL  2836
....................    glcd_update(); 
02CE2:  MOVLB  0
02CE4:  RCALL  261A
.................... } 
02CE6:  RETLW  00
....................  
.................... void displayTemps(char palabra[30], float digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==1) 
*
04870:  MOVLB  6
04872:  DECFSZ x62,W
04874:  BRA    49AE
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
04876:  MOVLW  06
04878:  MOVWF  x59
0487A:  MOVLW  64
0487C:  MOVWF  x58
0487E:  MOVLW  42
04880:  MOVWF  FE9
04882:  MOVFF  65F,670
04886:  MOVFF  65E,66F
0488A:  MOVFF  65D,66E
0488E:  MOVFF  65C,66D
04892:  MOVLW  01
04894:  MOVWF  x71
04896:  MOVLB  0
04898:  RCALL  46BC
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, ON); 
0489A:  MOVLW  02
0489C:  MOVLB  6
0489E:  SUBWF  x61,W
048A0:  MOVWF  x6D
048A2:  MOVF   x63,W
048A4:  MULLW  08
048A6:  MOVF   FF3,W
048A8:  ADDWF  x61,W
048AA:  MOVWF  x6E
048AC:  CLRF   x73
048AE:  MOVFF  66D,674
048B2:  MOVLW  7F
048B4:  MOVWF  x75
048B6:  MOVFF  66E,676
048BA:  MOVLW  01
048BC:  MOVWF  x77
048BE:  MOVWF  x78
048C0:  MOVLB  0
048C2:  CALL   2B2C
....................       strcpy(Menus.Letra,palabra); 
048C6:  MOVLB  6
048C8:  MOVFF  65A,01
048CC:  MOVFF  65B,03
048D0:  MOVFF  65A,66D
048D4:  MOVFF  65B,66E
048D8:  MOVLW  06
048DA:  MOVWF  FEA
048DC:  MOVLW  3A
048DE:  MOVWF  FE9
048E0:  MOVFF  65B,FE2
048E4:  MOVFF  65A,FE1
048E8:  MOVF   FE7,F
048EA:  MOVFF  FE6,FEE
048EE:  BNZ   48E8
....................       glcd_text57(x+90, y+1, voltage, tamano, OFF); 
048F0:  MOVLW  5A
048F2:  ADDWF  x60,W
048F4:  MOVWF  x6D
048F6:  MOVLW  01
048F8:  ADDWF  x61,W
048FA:  MOVWF  x6E
048FC:  MOVFF  66D,673
04900:  MOVWF  x74
04902:  MOVLW  06
04904:  MOVWF  x76
04906:  MOVLW  64
04908:  MOVWF  x75
0490A:  MOVFF  663,677
0490E:  CLRF   x78
04910:  MOVLB  0
04912:  CALL   2836
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF); 
04916:  MOVLW  01
04918:  MOVLB  6
0491A:  ADDWF  x60,W
0491C:  MOVWF  x6D
0491E:  MOVLW  01
04920:  ADDWF  x61,W
04922:  MOVWF  x6E
04924:  MOVFF  66D,673
04928:  MOVWF  x74
0492A:  MOVLW  06
0492C:  MOVWF  x76
0492E:  MOVLW  3A
04930:  MOVWF  x75
04932:  MOVFF  663,677
04936:  CLRF   x78
04938:  MOVLB  0
0493A:  CALL   2836
....................       strcpy(Menus.Letra,"C"); 
0493E:  MOVLW  06
04940:  MOVWF  FEA
04942:  MOVLW  3A
04944:  MOVWF  FE9
04946:  MOVFF  FF2,66D
0494A:  BCF    FF2.7
0494C:  MOVLW  00
0494E:  CALL   06D2
04952:  TBLRD*-
04954:  TBLRD*+
04956:  MOVF   FF5,W
04958:  MOVWF  FEE
0495A:  IORLW  00
0495C:  BNZ   4954
0495E:  MOVLB  6
04960:  BTFSC  x6D.7
04962:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, OFF); 
04964:  MOVLW  78
04966:  ADDWF  x60,W
04968:  MOVWF  x6D
0496A:  MOVLW  01
0496C:  ADDWF  x61,W
0496E:  MOVWF  x6E
04970:  MOVFF  66D,673
04974:  MOVWF  x74
04976:  MOVLW  06
04978:  MOVWF  x76
0497A:  MOVLW  3A
0497C:  MOVWF  x75
0497E:  MOVFF  663,677
04982:  CLRF   x78
04984:  MOVLB  0
04986:  CALL   2836
....................       glcd_circle(x+115,y-1,1,NO,OFF); 
0498A:  MOVLW  73
0498C:  MOVLB  6
0498E:  ADDWF  x60,W
04990:  MOVWF  x6D
04992:  MOVLW  01
04994:  SUBWF  x61,W
04996:  MOVWF  x6E
04998:  MOVFF  66D,66F
0499C:  MOVWF  x70
0499E:  MOVLW  01
049A0:  MOVWF  x71
049A2:  CLRF   x72
049A4:  CLRF   x73
049A6:  MOVLB  0
049A8:  CALL   411C
049AC:  MOVLB  6
....................    } 
....................    if(sombreado==0) 
049AE:  MOVF   x62,F
049B0:  BTFSS  FD8.2
049B2:  BRA    4AF0
....................    { 
....................       sprintf(voltage, "%03.1f", digito); 
049B4:  MOVLW  06
049B6:  MOVWF  x59
049B8:  MOVLW  64
049BA:  MOVWF  x58
049BC:  MOVLW  42
049BE:  MOVWF  FE9
049C0:  MOVFF  65F,670
049C4:  MOVFF  65E,66F
049C8:  MOVFF  65D,66E
049CC:  MOVFF  65C,66D
049D0:  MOVLW  01
049D2:  MOVWF  x71
049D4:  MOVLB  0
049D6:  RCALL  46BC
....................       glcd_rect(0, y-2, 127, y+(tamano*8), YES, OFF); 
049D8:  MOVLW  02
049DA:  MOVLB  6
049DC:  SUBWF  x61,W
049DE:  MOVWF  x6D
049E0:  MOVF   x63,W
049E2:  MULLW  08
049E4:  MOVF   FF3,W
049E6:  ADDWF  x61,W
049E8:  MOVWF  x6E
049EA:  CLRF   x73
049EC:  MOVFF  66D,674
049F0:  MOVLW  7F
049F2:  MOVWF  x75
049F4:  MOVFF  66E,676
049F8:  MOVLW  01
049FA:  MOVWF  x77
049FC:  CLRF   x78
049FE:  MOVLB  0
04A00:  CALL   2B2C
....................       strcpy(Menus.Letra,palabra); 
04A04:  MOVLB  6
04A06:  MOVFF  65A,01
04A0A:  MOVFF  65B,03
04A0E:  MOVFF  65A,66D
04A12:  MOVFF  65B,66E
04A16:  MOVLW  06
04A18:  MOVWF  FEA
04A1A:  MOVLW  3A
04A1C:  MOVWF  FE9
04A1E:  MOVFF  65B,FE2
04A22:  MOVFF  65A,FE1
04A26:  MOVF   FE7,F
04A28:  MOVFF  FE6,FEE
04A2C:  BNZ   4A26
....................       glcd_text57(x+90, y+1, voltage, tamano, ON); 
04A2E:  MOVLW  5A
04A30:  ADDWF  x60,W
04A32:  MOVWF  x6D
04A34:  MOVLW  01
04A36:  ADDWF  x61,W
04A38:  MOVWF  x6E
04A3A:  MOVFF  66D,673
04A3E:  MOVWF  x74
04A40:  MOVLW  06
04A42:  MOVWF  x76
04A44:  MOVLW  64
04A46:  MOVWF  x75
04A48:  MOVFF  663,677
04A4C:  MOVLW  01
04A4E:  MOVWF  x78
04A50:  MOVLB  0
04A52:  CALL   2836
....................       glcd_text57(x+1, y+1, Menus.Letra, tamano, ON); 
04A56:  MOVLW  01
04A58:  MOVLB  6
04A5A:  ADDWF  x60,W
04A5C:  MOVWF  x6D
04A5E:  MOVLW  01
04A60:  ADDWF  x61,W
04A62:  MOVWF  x6E
04A64:  MOVFF  66D,673
04A68:  MOVWF  x74
04A6A:  MOVLW  06
04A6C:  MOVWF  x76
04A6E:  MOVLW  3A
04A70:  MOVWF  x75
04A72:  MOVFF  663,677
04A76:  MOVLW  01
04A78:  MOVWF  x78
04A7A:  MOVLB  0
04A7C:  CALL   2836
....................       strcpy(Menus.Letra,"C"); 
04A80:  MOVLW  06
04A82:  MOVWF  FEA
04A84:  MOVLW  3A
04A86:  MOVWF  FE9
04A88:  MOVFF  FF2,66D
04A8C:  BCF    FF2.7
04A8E:  MOVLW  00
04A90:  CALL   06D2
04A94:  TBLRD*-
04A96:  TBLRD*+
04A98:  MOVF   FF5,W
04A9A:  MOVWF  FEE
04A9C:  IORLW  00
04A9E:  BNZ   4A96
04AA0:  MOVLB  6
04AA2:  BTFSC  x6D.7
04AA4:  BSF    FF2.7
....................       glcd_text57(x+120, y+1, Menus.Letra, tamano, ON); 
04AA6:  MOVLW  78
04AA8:  ADDWF  x60,W
04AAA:  MOVWF  x6D
04AAC:  MOVLW  01
04AAE:  ADDWF  x61,W
04AB0:  MOVWF  x6E
04AB2:  MOVFF  66D,673
04AB6:  MOVWF  x74
04AB8:  MOVLW  06
04ABA:  MOVWF  x76
04ABC:  MOVLW  3A
04ABE:  MOVWF  x75
04AC0:  MOVFF  663,677
04AC4:  MOVLW  01
04AC6:  MOVWF  x78
04AC8:  MOVLB  0
04ACA:  CALL   2836
....................       glcd_circle(x+115,y-1,1,NO,ON); 
04ACE:  MOVLW  73
04AD0:  MOVLB  6
04AD2:  ADDWF  x60,W
04AD4:  MOVWF  x6D
04AD6:  MOVLW  01
04AD8:  SUBWF  x61,W
04ADA:  MOVWF  x6E
04ADC:  MOVFF  66D,66F
04AE0:  MOVWF  x70
04AE2:  MOVLW  01
04AE4:  MOVWF  x71
04AE6:  CLRF   x72
04AE8:  MOVWF  x73
04AEA:  MOVLB  0
04AEC:  CALL   411C
....................    } 
....................    glcd_update(); 
04AF0:  MOVLB  0
04AF2:  CALL   261A
.................... } 
04AF6:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
04B7E:  MOVLB  6
04B80:  MOVF   x5E,W
04B82:  SUBLW  02
04B84:  BNZ   4BF6
....................    { 
....................       sprintf(voltage, "%03u", digito); 
04B86:  MOVLW  06
04B88:  MOVWF  x59
04B8A:  MOVLW  60
04B8C:  MOVWF  x58
04B8E:  MOVFF  65B,669
04B92:  MOVLW  03
04B94:  MOVWF  x6A
04B96:  MOVLB  0
04B98:  RCALL  4AF8
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
04B9A:  MOVLB  6
04B9C:  MOVF   x5F,W
04B9E:  MULLW  12
04BA0:  MOVF   FF3,W
04BA2:  ADDWF  x5C,W
04BA4:  MOVWF  x69
04BA6:  MOVF   x5F,W
04BA8:  MULLW  08
04BAA:  MOVF   FF3,W
04BAC:  ADDWF  x5D,W
04BAE:  MOVWF  x6A
04BB0:  MOVFF  65C,673
04BB4:  MOVFF  65D,674
04BB8:  MOVFF  669,675
04BBC:  MOVWF  x76
04BBE:  MOVLW  01
04BC0:  MOVWF  x77
04BC2:  MOVWF  x78
04BC4:  MOVLB  0
04BC6:  CALL   2B2C
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
04BCA:  MOVLW  01
04BCC:  MOVLB  6
04BCE:  ADDWF  x5C,W
04BD0:  MOVWF  x69
04BD2:  MOVLW  01
04BD4:  ADDWF  x5D,W
04BD6:  MOVWF  x6A
04BD8:  MOVFF  669,673
04BDC:  MOVWF  x74
04BDE:  MOVLW  06
04BE0:  MOVWF  x76
04BE2:  MOVLW  60
04BE4:  MOVWF  x75
04BE6:  MOVFF  65F,677
04BEA:  CLRF   x78
04BEC:  MOVLB  0
04BEE:  CALL   2836
....................    } 
....................    else 
04BF2:  BRA    4D3A
04BF4:  MOVLB  6
....................    { 
....................       if(sombreado==3) 
04BF6:  MOVF   x5E,W
04BF8:  SUBLW  03
04BFA:  BNZ   4C6C
....................       { 
....................          sprintf(voltage, "%03u", digito); 
04BFC:  MOVLW  06
04BFE:  MOVWF  x59
04C00:  MOVLW  60
04C02:  MOVWF  x58
04C04:  MOVFF  65B,669
04C08:  MOVLW  03
04C0A:  MOVWF  x6A
04C0C:  MOVLB  0
04C0E:  RCALL  4AF8
....................          glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, OFF); 
04C10:  MOVLB  6
04C12:  MOVF   x5F,W
04C14:  MULLW  12
04C16:  MOVF   FF3,W
04C18:  ADDWF  x5C,W
04C1A:  MOVWF  x69
04C1C:  MOVF   x5F,W
04C1E:  MULLW  08
04C20:  MOVF   FF3,W
04C22:  ADDWF  x5D,W
04C24:  MOVWF  x6A
04C26:  MOVFF  65C,673
04C2A:  MOVFF  65D,674
04C2E:  MOVFF  669,675
04C32:  MOVWF  x76
04C34:  MOVLW  01
04C36:  MOVWF  x77
04C38:  CLRF   x78
04C3A:  MOVLB  0
04C3C:  CALL   2B2C
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
04C40:  MOVLW  01
04C42:  MOVLB  6
04C44:  ADDWF  x5C,W
04C46:  MOVWF  x69
04C48:  MOVLW  01
04C4A:  ADDWF  x5D,W
04C4C:  MOVWF  x6A
04C4E:  MOVFF  669,673
04C52:  MOVWF  x74
04C54:  MOVLW  06
04C56:  MOVWF  x76
04C58:  MOVLW  60
04C5A:  MOVWF  x75
04C5C:  MOVFF  65F,677
04C60:  MOVLW  01
04C62:  MOVWF  x78
04C64:  MOVLB  0
04C66:  CALL   2836
04C6A:  MOVLB  6
....................       } 
....................       sprintf(voltage, "%u", digito); 
04C6C:  MOVLW  06
04C6E:  MOVWF  x59
04C70:  MOVLW  60
04C72:  MOVWF  x58
04C74:  MOVFF  65B,669
04C78:  MOVLW  1B
04C7A:  MOVWF  x6A
04C7C:  MOVLB  0
04C7E:  RCALL  4AF8
....................       if(sombreado==1) 
04C80:  MOVLB  6
04C82:  DECFSZ x5E,W
04C84:  BRA    4CDE
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
04C86:  MOVF   x5F,W
04C88:  MULLW  05
04C8A:  MOVF   FF3,W
04C8C:  ADDWF  x5C,W
04C8E:  MOVWF  x69
04C90:  MOVF   x5F,W
04C92:  MULLW  08
04C94:  MOVF   FF3,W
04C96:  ADDWF  x5D,W
04C98:  MOVWF  x6A
04C9A:  MOVFF  65C,673
04C9E:  MOVFF  65D,674
04CA2:  MOVFF  669,675
04CA6:  MOVWF  x76
04CA8:  MOVLW  01
04CAA:  MOVWF  x77
04CAC:  MOVWF  x78
04CAE:  MOVLB  0
04CB0:  CALL   2B2C
04CB4:  MOVLW  01
04CB6:  MOVLB  6
04CB8:  ADDWF  x5C,W
04CBA:  MOVWF  x69
04CBC:  MOVLW  01
04CBE:  ADDWF  x5D,W
04CC0:  MOVWF  x6A
04CC2:  MOVFF  669,673
04CC6:  MOVWF  x74
04CC8:  MOVLW  06
04CCA:  MOVWF  x76
04CCC:  MOVLW  60
04CCE:  MOVWF  x75
04CD0:  MOVFF  65F,677
04CD4:  CLRF   x78
04CD6:  MOVLB  0
04CD8:  CALL   2836
04CDC:  MOVLB  6
....................       if(sombreado==0) 
04CDE:  MOVF   x5E,F
04CE0:  BNZ   4D3C
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
04CE2:  MOVF   x5F,W
04CE4:  MULLW  05
04CE6:  MOVF   FF3,W
04CE8:  ADDWF  x5C,W
04CEA:  MOVWF  x69
04CEC:  MOVF   x5F,W
04CEE:  MULLW  08
04CF0:  MOVF   FF3,W
04CF2:  ADDWF  x5D,W
04CF4:  MOVWF  x6A
04CF6:  MOVFF  65C,673
04CFA:  MOVFF  65D,674
04CFE:  MOVFF  669,675
04D02:  MOVWF  x76
04D04:  MOVLW  01
04D06:  MOVWF  x77
04D08:  CLRF   x78
04D0A:  MOVLB  0
04D0C:  CALL   2B2C
04D10:  MOVLW  01
04D12:  MOVLB  6
04D14:  ADDWF  x5C,W
04D16:  MOVWF  x69
04D18:  MOVLW  01
04D1A:  ADDWF  x5D,W
04D1C:  MOVWF  x6A
04D1E:  MOVFF  669,673
04D22:  MOVWF  x74
04D24:  MOVLW  06
04D26:  MOVWF  x76
04D28:  MOVLW  60
04D2A:  MOVWF  x75
04D2C:  MOVFF  65F,677
04D30:  MOVLW  01
04D32:  MOVWF  x78
04D34:  MOVLB  0
04D36:  CALL   2836
04D3A:  MOVLB  6
....................    } 
....................    glcd_update(); 
04D3C:  MOVLB  0
04D3E:  CALL   261A
.................... } 
04D42:  RETLW  00
....................  
.................... void displayTT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
0585C:  MOVLW  06
0585E:  MOVLB  6
05860:  MOVWF  x59
05862:  MOVLW  61
05864:  MOVWF  x58
05866:  MOVLW  42
05868:  MOVWF  FE9
0586A:  MOVFF  65D,670
0586E:  MOVFF  65C,66F
05872:  MOVFF  65B,66E
05876:  MOVFF  65A,66D
0587A:  MOVLW  01
0587C:  MOVWF  x71
0587E:  MOVLB  0
05880:  CALL   46BC
....................    glcd_rect(x, y, x+(w*27), y+(w*8), YES, OFF); 
05884:  MOVLB  6
05886:  MOVF   x60,W
05888:  MULLW  1B
0588A:  MOVF   FF3,W
0588C:  ADDWF  x5E,W
0588E:  MOVWF  x6A
05890:  MOVF   x60,W
05892:  MULLW  08
05894:  MOVF   FF3,W
05896:  ADDWF  x5F,W
05898:  MOVWF  x6B
0589A:  MOVFF  65E,673
0589E:  MOVFF  65F,674
058A2:  MOVFF  66A,675
058A6:  MOVWF  x76
058A8:  MOVLW  01
058AA:  MOVWF  x77
058AC:  CLRF   x78
058AE:  MOVLB  0
058B0:  CALL   2B2C
....................    /*glcd_rect(x, y, x+53, y+15, YES, ON);*/glcd_text57(x, y, voltage, w, ON); 
058B4:  MOVFF  65E,673
058B8:  MOVFF  65F,674
058BC:  MOVLW  06
058BE:  MOVLB  6
058C0:  MOVWF  x76
058C2:  MOVLW  61
058C4:  MOVWF  x75
058C6:  MOVFF  660,677
058CA:  MOVLW  01
058CC:  MOVWF  x78
058CE:  MOVLB  0
058D0:  CALL   2836
.................... } 
058D4:  RETLW  00
....................  
.................... void displayTemperatura(int16 digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................     
....................    if(sombreado==2) 
*
04440:  MOVLB  6
04442:  MOVF   x60,W
04444:  SUBLW  02
04446:  BNZ   44BC
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
04448:  MOVLW  06
0444A:  MOVWF  x59
0444C:  MOVLW  62
0444E:  MOVWF  x58
04450:  MOVLW  0A
04452:  MOVWF  FE9
04454:  MOVFF  65D,66C
04458:  MOVFF  65C,66B
0445C:  MOVLB  0
0445E:  RCALL  4382
....................       glcd_rect(x, y, x+(tamano*18), y+(tamano*8), YES, ON); 
04460:  MOVLB  6
04462:  MOVF   x61,W
04464:  MULLW  12
04466:  MOVF   FF3,W
04468:  ADDWF  x5E,W
0446A:  MOVWF  x6B
0446C:  MOVF   x61,W
0446E:  MULLW  08
04470:  MOVF   FF3,W
04472:  ADDWF  x5F,W
04474:  MOVWF  x6C
04476:  MOVFF  65E,673
0447A:  MOVFF  65F,674
0447E:  MOVFF  66B,675
04482:  MOVWF  x76
04484:  MOVLW  01
04486:  MOVWF  x77
04488:  MOVWF  x78
0448A:  MOVLB  0
0448C:  CALL   2B2C
....................       glcd_text57(x+1, y+1, voltage, tamano, OFF); 
04490:  MOVLW  01
04492:  MOVLB  6
04494:  ADDWF  x5E,W
04496:  MOVWF  x6B
04498:  MOVLW  01
0449A:  ADDWF  x5F,W
0449C:  MOVWF  x6C
0449E:  MOVFF  66B,673
044A2:  MOVWF  x74
044A4:  MOVLW  06
044A6:  MOVWF  x76
044A8:  MOVLW  62
044AA:  MOVWF  x75
044AC:  MOVFF  661,677
044B0:  CLRF   x78
044B2:  MOVLB  0
044B4:  CALL   2836
....................    } 
....................    else 
044B8:  BRA    45EE
044BA:  MOVLB  6
....................    { 
....................       sprintf(voltage, "%03Lu", digito); 
044BC:  MOVLW  06
044BE:  MOVWF  x59
044C0:  MOVLW  62
044C2:  MOVWF  x58
044C4:  MOVLW  0A
044C6:  MOVWF  FE9
044C8:  MOVFF  65D,66C
044CC:  MOVFF  65C,66B
044D0:  MOVLB  0
044D2:  RCALL  4382
....................     
....................       if(sombreado==4) 
044D4:  MOVLB  6
044D6:  MOVF   x60,W
044D8:  SUBLW  04
044DA:  BNZ   4536
....................       { 
....................          glcd_rect(x, y, x+(tamano*16), y+(tamano*8), YES, OFF); 
044DC:  MOVF   x61,W
044DE:  MULLW  10
044E0:  MOVF   FF3,W
044E2:  ADDWF  x5E,W
044E4:  MOVWF  x6B
044E6:  MOVF   x61,W
044E8:  MULLW  08
044EA:  MOVF   FF3,W
044EC:  ADDWF  x5F,W
044EE:  MOVWF  x6C
044F0:  MOVFF  65E,673
044F4:  MOVFF  65F,674
044F8:  MOVFF  66B,675
044FC:  MOVWF  x76
044FE:  MOVLW  01
04500:  MOVWF  x77
04502:  CLRF   x78
04504:  MOVLB  0
04506:  CALL   2B2C
....................          glcd_text57(x+1, y+1, voltage, tamano, ON); 
0450A:  MOVLW  01
0450C:  MOVLB  6
0450E:  ADDWF  x5E,W
04510:  MOVWF  x6B
04512:  MOVLW  01
04514:  ADDWF  x5F,W
04516:  MOVWF  x6C
04518:  MOVFF  66B,673
0451C:  MOVWF  x74
0451E:  MOVLW  06
04520:  MOVWF  x76
04522:  MOVLW  62
04524:  MOVWF  x75
04526:  MOVFF  661,677
0452A:  MOVLW  01
0452C:  MOVWF  x78
0452E:  MOVLB  0
04530:  CALL   2836
04534:  MOVLB  6
....................       } 
....................       if(sombreado==1) 
04536:  DECFSZ x60,W
04538:  BRA    4592
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, voltage, tamano, OFF);} 
0453A:  MOVF   x61,W
0453C:  MULLW  05
0453E:  MOVF   FF3,W
04540:  ADDWF  x5E,W
04542:  MOVWF  x6B
04544:  MOVF   x61,W
04546:  MULLW  08
04548:  MOVF   FF3,W
0454A:  ADDWF  x5F,W
0454C:  MOVWF  x6C
0454E:  MOVFF  65E,673
04552:  MOVFF  65F,674
04556:  MOVFF  66B,675
0455A:  MOVWF  x76
0455C:  MOVLW  01
0455E:  MOVWF  x77
04560:  MOVWF  x78
04562:  MOVLB  0
04564:  CALL   2B2C
04568:  MOVLW  01
0456A:  MOVLB  6
0456C:  ADDWF  x5E,W
0456E:  MOVWF  x6B
04570:  MOVLW  01
04572:  ADDWF  x5F,W
04574:  MOVWF  x6C
04576:  MOVFF  66B,673
0457A:  MOVWF  x74
0457C:  MOVLW  06
0457E:  MOVWF  x76
04580:  MOVLW  62
04582:  MOVWF  x75
04584:  MOVFF  661,677
04588:  CLRF   x78
0458A:  MOVLB  0
0458C:  CALL   2836
04590:  MOVLB  6
....................       if(sombreado==0) 
04592:  MOVF   x60,F
04594:  BNZ   45F0
....................          {glcd_rect(x, y, x+(tamano*5), y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, voltage, tamano, ON);} 
04596:  MOVF   x61,W
04598:  MULLW  05
0459A:  MOVF   FF3,W
0459C:  ADDWF  x5E,W
0459E:  MOVWF  x6B
045A0:  MOVF   x61,W
045A2:  MULLW  08
045A4:  MOVF   FF3,W
045A6:  ADDWF  x5F,W
045A8:  MOVWF  x6C
045AA:  MOVFF  65E,673
045AE:  MOVFF  65F,674
045B2:  MOVFF  66B,675
045B6:  MOVWF  x76
045B8:  MOVLW  01
045BA:  MOVWF  x77
045BC:  CLRF   x78
045BE:  MOVLB  0
045C0:  CALL   2B2C
045C4:  MOVLW  01
045C6:  MOVLB  6
045C8:  ADDWF  x5E,W
045CA:  MOVWF  x6B
045CC:  MOVLW  01
045CE:  ADDWF  x5F,W
045D0:  MOVWF  x6C
045D2:  MOVFF  66B,673
045D6:  MOVWF  x74
045D8:  MOVLW  06
045DA:  MOVWF  x76
045DC:  MOVLW  62
045DE:  MOVWF  x75
045E0:  MOVFF  661,677
045E4:  MOVLW  01
045E6:  MOVWF  x78
045E8:  MOVLB  0
045EA:  CALL   2836
045EE:  MOVLB  6
....................    } 
....................    glcd_update(); 
045F0:  MOVLB  0
045F2:  CALL   261A
.................... } 
045F6:  RETLW  00
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................     
....................    if(x==5){ 
*
04D44:  MOVLB  6
04D46:  MOVF   x5A,W
04D48:  SUBLW  05
04D4A:  BNZ   4DF0
....................    for( i = 0 ; i < 64 ; i ++ ) 
04D4C:  CLRF   x5B
04D4E:  MOVF   x5B,W
04D50:  SUBLW  3F
04D52:  BNC   4DF0
....................    {   
....................       for( j = 0 ; j < 16 ; j ++) 
04D54:  CLRF   x5C
04D56:  MOVF   x5C,W
04D58:  SUBLW  0F
04D5A:  BNC   4DEC
....................       {     
....................          for(k=7;k>-1;k--) 
04D5C:  MOVLW  07
04D5E:  MOVWF  x5D
04D60:  MOVF   x5D,W
04D62:  XORLW  80
04D64:  SUBLW  7F
04D66:  BC    4DE8
....................          {       
....................             if( bit_test(Horno[i][j] ,7-k ))  
04D68:  CLRF   x5F
04D6A:  MOVFF  65B,65E
04D6E:  CLRF   x61
04D70:  MOVLW  10
04D72:  MOVWF  x60
04D74:  MOVLB  0
04D76:  CALL   2E36
04D7A:  MOVFF  02,65F
04D7E:  MOVFF  01,65E
04D82:  MOVLB  6
04D84:  MOVF   x5C,W
04D86:  ADDWF  01,W
04D88:  MOVWF  01
04D8A:  MOVLW  00
04D8C:  ADDWFC 02,W
04D8E:  MOVWF  03
04D90:  MOVF   01,W
04D92:  MOVFF  FF2,65E
04D96:  BCF    FF2.7
04D98:  MOVFF  03,FF7
04D9C:  MOVLB  0
04D9E:  CALL   02B6
04DA2:  MOVLB  6
04DA4:  BTFSC  x5E.7
04DA6:  BSF    FF2.7
04DA8:  MOVWF  x5E
04DAA:  MOVLW  07
04DAC:  BSF    FD8.0
04DAE:  SUBFWB x5D,W
04DB0:  MOVWF  x5F
04DB2:  MOVFF  65E,00
04DB6:  MOVF   x5F,W
04DB8:  MOVWF  01
04DBA:  BZ    4DC4
04DBC:  BCF    FD8.0
04DBE:  RRCF   00,F
04DC0:  DECFSZ 01,F
04DC2:  BRA    4DBC
04DC4:  BTFSS  00.0
04DC6:  BRA    4DE4
....................                glcd_pixel( j*8+k,i, ON ); 
04DC8:  MOVF   x5C,W
04DCA:  MULLW  08
04DCC:  MOVF   FF3,W
04DCE:  ADDWF  x5D,W
04DD0:  MOVWF  x5E
04DD2:  MOVWF  x8E
04DD4:  MOVFF  65B,68F
04DD8:  MOVLW  01
04DDA:  MOVWF  x90
04DDC:  MOVLB  0
04DDE:  CALL   277A
04DE2:  MOVLB  6
....................          }   
04DE4:  DECF   x5D,F
04DE6:  BRA    4D60
....................       } 
04DE8:  INCF   x5C,F
04DEA:  BRA    4D56
....................    } 
04DEC:  INCF   x5B,F
04DEE:  BRA    4D4E
....................    } 
....................     
.................... } 
04DF0:  MOVLB  0
04DF2:  GOTO   718E (RETURN)
....................  
....................     
.................... void Limpia(int x1,int x2,int y){ 
....................    glcd_rect(x1, y, x2, y+7, YES, OFF); 
.................... } 
....................  
.................... void displayT(float adc,int x,int y,int w) { 
....................    char voltage[9];     
....................    sprintf(voltage, "%03.1f",adc); // Converts adc to text 
*
05794:  MOVLW  06
05796:  MOVLB  6
05798:  MOVWF  x59
0579A:  MOVLW  61
0579C:  MOVWF  x58
0579E:  MOVLW  42
057A0:  MOVWF  FE9
057A2:  MOVFF  65D,670
057A6:  MOVFF  65C,66F
057AA:  MOVFF  65B,66E
057AE:  MOVFF  65A,66D
057B2:  MOVLW  01
057B4:  MOVWF  x71
057B6:  MOVLB  0
057B8:  CALL   46BC
....................    glcd_rect(x, y, x+(w*27), y+(w*7), YES, OFF); 
057BC:  MOVLB  6
057BE:  MOVF   x60,W
057C0:  MULLW  1B
057C2:  MOVF   FF3,W
057C4:  ADDWF  x5E,W
057C6:  MOVWF  x6A
057C8:  MOVF   x60,W
057CA:  MULLW  07
057CC:  MOVF   FF3,W
057CE:  ADDWF  x5F,W
057D0:  MOVWF  x6B
057D2:  MOVFF  65E,673
057D6:  MOVFF  65F,674
057DA:  MOVFF  66A,675
057DE:  MOVWF  x76
057E0:  MOVLW  01
057E2:  MOVWF  x77
057E4:  CLRF   x78
057E6:  MOVLB  0
057E8:  CALL   2B2C
....................    glcd_text57(x, y, voltage, w, ON); 
057EC:  MOVFF  65E,673
057F0:  MOVFF  65F,674
057F4:  MOVLW  06
057F6:  MOVLB  6
057F8:  MOVWF  x76
057FA:  MOVLW  61
057FC:  MOVWF  x75
057FE:  MOVFF  660,677
05802:  MOVLW  01
05804:  MOVWF  x78
05806:  MOVLB  0
05808:  CALL   2836
.................... } 
0580C:  RETLW  00
....................  
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
0371C:  MOVLW  06
0371E:  MOVLB  6
03720:  MOVWF  x59
03722:  MOVLW  68
03724:  MOVWF  x58
03726:  MOVFF  664,671
0372A:  MOVLW  1F
0372C:  MOVWF  x72
0372E:  MOVLB  0
03730:  BRA    363C
....................     
....................    if(sombreado==1) 
03732:  MOVLB  6
03734:  DECFSZ x67,W
03736:  BRA    378A
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
03738:  MOVLW  12
0373A:  ADDWF  x65,W
0373C:  MOVWF  x71
0373E:  MOVLW  18
03740:  ADDWF  x66,W
03742:  MOVWF  x72
03744:  MOVFF  665,673
03748:  MOVFF  666,674
0374C:  MOVFF  671,675
03750:  MOVWF  x76
03752:  MOVLW  01
03754:  MOVWF  x77
03756:  MOVWF  x78
03758:  MOVLB  0
0375A:  CALL   2B2C
0375E:  MOVLW  02
03760:  MOVLB  6
03762:  ADDWF  x65,W
03764:  MOVWF  x71
03766:  MOVLW  01
03768:  ADDWF  x66,W
0376A:  MOVWF  x72
0376C:  MOVFF  671,673
03770:  MOVWF  x74
03772:  MOVLW  06
03774:  MOVWF  x76
03776:  MOVLW  68
03778:  MOVWF  x75
0377A:  MOVLW  02
0377C:  MOVWF  x77
0377E:  CLRF   x78
03780:  MOVLB  0
03782:  CALL   2836
....................    else    
03786:  BRA    37D8
03788:  MOVLB  6
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
0378A:  MOVLW  12
0378C:  ADDWF  x65,W
0378E:  MOVWF  x71
03790:  MOVLW  18
03792:  ADDWF  x66,W
03794:  MOVWF  x72
03796:  MOVFF  665,673
0379A:  MOVFF  666,674
0379E:  MOVFF  671,675
037A2:  MOVWF  x76
037A4:  CLRF   x77
037A6:  CLRF   x78
037A8:  MOVLB  0
037AA:  CALL   2B2C
037AE:  MOVLW  02
037B0:  MOVLB  6
037B2:  ADDWF  x65,W
037B4:  MOVWF  x71
037B6:  MOVLW  01
037B8:  ADDWF  x66,W
037BA:  MOVWF  x72
037BC:  MOVFF  671,673
037C0:  MOVWF  x74
037C2:  MOVLW  06
037C4:  MOVWF  x76
037C6:  MOVLW  68
037C8:  MOVWF  x75
037CA:  MOVLW  02
037CC:  MOVWF  x77
037CE:  MOVLW  01
037D0:  MOVWF  x78
037D2:  MOVLB  0
037D4:  CALL   2836
....................  
.................... } 
037D8:  RETLW  00
....................  
.................... void MensajeAlmacenado(){ 
....................    glcd_fillScreen(OFF); 
*
037E8:  MOVLB  6
037EA:  CLRF   x62
037EC:  MOVLB  0
037EE:  CALL   25C0
....................    strcpy(Menus.Letra,"Valor"); 
037F2:  MOVLW  06
037F4:  MOVWF  FEA
037F6:  MOVLW  3A
037F8:  MOVWF  FE9
037FA:  MOVFF  FF2,662
037FE:  BCF    FF2.7
03800:  MOVLW  00
03802:  CALL   06F2
03806:  TBLRD*-
03808:  TBLRD*+
0380A:  MOVF   FF5,W
0380C:  MOVWF  FEE
0380E:  IORLW  00
03810:  BNZ   3808
03812:  MOVLB  6
03814:  BTFSC  x62.7
03816:  BSF    FF2.7
....................    displayMenu(Menus.Letra,30,0,0,2); 
03818:  MOVLW  06
0381A:  MOVWF  x63
0381C:  MOVLW  3A
0381E:  MOVWF  x62
03820:  MOVLW  1E
03822:  MOVWF  x64
03824:  CLRF   x65
03826:  CLRF   x66
03828:  MOVLW  02
0382A:  MOVWF  x67
0382C:  MOVLB  0
0382E:  CALL   2BEE
....................    strcpy(Menus.Letra," Almacenado"); 
03832:  MOVLW  06
03834:  MOVWF  FEA
03836:  MOVLW  3A
03838:  MOVWF  FE9
0383A:  MOVFF  FF2,662
0383E:  BCF    FF2.7
03840:  MOVLW  00
03842:  CALL   0716
03846:  TBLRD*-
03848:  TBLRD*+
0384A:  MOVF   FF5,W
0384C:  MOVWF  FEE
0384E:  IORLW  00
03850:  BNZ   3848
03852:  MOVLB  6
03854:  BTFSC  x62.7
03856:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,2); 
03858:  MOVLW  06
0385A:  MOVWF  x63
0385C:  MOVLW  3A
0385E:  MOVWF  x62
03860:  CLRF   x64
03862:  MOVLW  1E
03864:  MOVWF  x65
03866:  CLRF   x66
03868:  MOVLW  02
0386A:  MOVWF  x67
0386C:  MOVLB  0
0386E:  CALL   2BEE
....................    glcd_update(); 
03872:  CALL   261A
....................    delay_ms(2000); 
03876:  MOVLW  08
03878:  MOVLB  6
0387A:  MOVWF  x62
0387C:  MOVLW  FA
0387E:  MOVWF  x63
03880:  MOVLB  0
03882:  CALL   1056
03886:  MOVLB  6
03888:  DECFSZ x62,F
0388A:  BRA    387C
....................    glcd_fillScreen(OFF); 
0388C:  CLRF   x62
0388E:  MOVLB  0
03890:  CALL   25C0
.................... } 
03894:  RETLW  00
....................  
.................... void ConfiguraInterrupciones(){ 
....................    delay_ms(1000);    
*
0107E:  MOVLW  04
01080:  MOVLB  6
01082:  MOVWF  x5A
01084:  MOVLW  FA
01086:  MOVWF  x63
01088:  MOVLB  0
0108A:  RCALL  1056
0108C:  MOVLB  6
0108E:  DECFSZ x5A,F
01090:  BRA    1084
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
01092:  MOVLW  85
01094:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
01096:  BSF    F9D.0
....................    setup_adc_ports(AN0_TO_AN1); 
01098:  MOVF   FC1,W
0109A:  ANDLW  C0
0109C:  IORLW  0D
0109E:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_64); 
010A0:  MOVF   FC0,W
010A2:  ANDLW  C0
010A4:  IORLW  06
010A6:  MOVWF  FC0
010A8:  BSF    FC0.7
010AA:  BSF    FC2.0
....................    enable_interrupts(global); 
010AC:  MOVLW  C0
010AE:  IORWF  FF2,F
.................... } 
010B0:  MOVLB  0
010B2:  GOTO   5D9C (RETURN)
....................  
.................... void MensajeBienvenida(){ 
....................    glcd_init(ON);             //Inicializa la glcd 
*
03490:  MOVLW  01
03492:  MOVLB  6
03494:  MOVWF  x5A
03496:  MOVLB  0
03498:  CALL   26D2
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
0349C:  MOVLB  6
0349E:  CLRF   x62
034A0:  MOVLB  0
034A2:  CALL   25C0
....................    strcpy(Menus.Letra,"JP Inglobal"); 
034A6:  MOVLW  06
034A8:  MOVWF  FEA
034AA:  MOVLW  3A
034AC:  MOVWF  FE9
034AE:  MOVFF  FF2,65A
034B2:  BCF    FF2.7
034B4:  MOVLW  00
034B6:  CALL   0740
034BA:  TBLRD*-
034BC:  TBLRD*+
034BE:  MOVF   FF5,W
034C0:  MOVWF  FEE
034C2:  IORLW  00
034C4:  BNZ   34BC
034C6:  MOVLB  6
034C8:  BTFSC  x5A.7
034CA:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,0,0,2);      
034CC:  MOVLW  06
034CE:  MOVWF  x63
034D0:  MOVLW  3A
034D2:  MOVWF  x62
034D4:  CLRF   x64
034D6:  CLRF   x65
034D8:  CLRF   x66
034DA:  MOVLW  02
034DC:  MOVWF  x67
034DE:  MOVLB  0
034E0:  CALL   2BEE
....................    strcpy(Menus.Letra,"    Incubadora"); 
034E4:  MOVLW  06
034E6:  MOVWF  FEA
034E8:  MOVLW  3A
034EA:  MOVWF  FE9
034EC:  MOVFF  FF2,65A
034F0:  BCF    FF2.7
034F2:  MOVLW  00
034F4:  CALL   076A
034F8:  TBLRD*-
034FA:  TBLRD*+
034FC:  MOVF   FF5,W
034FE:  MOVWF  FEE
03500:  IORLW  00
03502:  BNZ   34FA
03504:  MOVLB  6
03506:  BTFSC  x5A.7
03508:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,20,0,1);        
0350A:  MOVLW  06
0350C:  MOVWF  x63
0350E:  MOVLW  3A
03510:  MOVWF  x62
03512:  CLRF   x64
03514:  MOVLW  14
03516:  MOVWF  x65
03518:  CLRF   x66
0351A:  MOVLW  01
0351C:  MOVWF  x67
0351E:  MOVLB  0
03520:  CALL   2BEE
....................    strcpy(Menus.Letra,"     Digital  "); 
03524:  MOVLW  06
03526:  MOVWF  FEA
03528:  MOVLW  3A
0352A:  MOVWF  FE9
0352C:  MOVFF  FF2,65A
03530:  BCF    FF2.7
03532:  MOVLW  00
03534:  CALL   0798
03538:  TBLRD*-
0353A:  TBLRD*+
0353C:  MOVF   FF5,W
0353E:  MOVWF  FEE
03540:  IORLW  00
03542:  BNZ   353A
03544:  MOVLB  6
03546:  BTFSC  x5A.7
03548:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,30,0,1); 
0354A:  MOVLW  06
0354C:  MOVWF  x63
0354E:  MOVLW  3A
03550:  MOVWF  x62
03552:  CLRF   x64
03554:  MOVLW  1E
03556:  MOVWF  x65
03558:  CLRF   x66
0355A:  MOVLW  01
0355C:  MOVWF  x67
0355E:  MOVLB  0
03560:  CALL   2BEE
....................    strcpy(Menus.Letra,"    53 Lts"); 
03564:  MOVLW  06
03566:  MOVWF  FEA
03568:  MOVLW  3A
0356A:  MOVWF  FE9
0356C:  MOVFF  FF2,65A
03570:  BCF    FF2.7
03572:  MOVLW  00
03574:  CALL   07C6
03578:  TBLRD*-
0357A:  TBLRD*+
0357C:  MOVF   FF5,W
0357E:  MOVWF  FEE
03580:  IORLW  00
03582:  BNZ   357A
03584:  MOVLB  6
03586:  BTFSC  x5A.7
03588:  BSF    FF2.7
....................    displayMenu(Menus.Letra,0,45,0,2); 
0358A:  MOVLW  06
0358C:  MOVWF  x63
0358E:  MOVLW  3A
03590:  MOVWF  x62
03592:  CLRF   x64
03594:  MOVLW  2D
03596:  MOVWF  x65
03598:  CLRF   x66
0359A:  MOVLW  02
0359C:  MOVWF  x67
0359E:  MOVLB  0
035A0:  CALL   2BEE
....................    delay_ms(1000); 
035A4:  MOVLW  04
035A6:  MOVLB  6
035A8:  MOVWF  x5A
035AA:  MOVLW  FA
035AC:  MOVWF  x63
035AE:  MOVLB  0
035B0:  CALL   1056
035B4:  MOVLB  6
035B6:  DECFSZ x5A,F
035B8:  BRA    35AA
....................    glcd_fillScreen(OFF);      //Limpia la pantalla 
035BA:  CLRF   x62
035BC:  MOVLB  0
035BE:  CALL   25C0
....................     
....................    for(i=0;i<80;i++) 
035C2:  MOVLB  5
035C4:  CLRF   x99
035C6:  MOVF   x99,W
035C8:  SUBLW  4F
035CA:  BNC   35EA
....................    { 
....................       Temperatura=Leer_Sensor(MediaMovil); 
035CC:  MOVFF  58C,65A
035D0:  MOVLB  0
035D2:  RCALL  2E58
035D4:  MOVFF  03,615
035D8:  MOVFF  02,614
035DC:  MOVFF  01,613
035E0:  MOVFF  00,612
....................    } 
035E4:  MOVLB  5
035E6:  INCF   x99,F
035E8:  BRA    35C6
.................... } 
035EA:  MOVLB  0
035EC:  GOTO   5DA8 (RETURN)
....................  
.................... void LeeEEPROM(){ 
....................    Testerilizacionp[0]=read_eeprom(0); 
*
014C2:  MOVFF  FF2,65A
014C6:  BCF    FF2.7
014C8:  CLRF   FAA
014CA:  CLRF   FA9
014CC:  BCF    FA6.6
014CE:  BCF    FA6.7
014D0:  BSF    FA6.0
014D2:  MOVF   FA8,W
014D4:  MOVLB  6
014D6:  BTFSC  x5A.7
014D8:  BSF    FF2.7
014DA:  MOVLB  5
014DC:  MOVWF  xD2
....................    delay_ms(20);    
014DE:  MOVLW  14
014E0:  MOVLB  6
014E2:  MOVWF  x63
014E4:  MOVLB  0
014E6:  RCALL  1056
....................    Testerilizacionp[1]=read_eeprom(1); 
014E8:  MOVFF  FF2,65A
014EC:  BCF    FF2.7
014EE:  CLRF   FAA
014F0:  MOVLW  01
014F2:  MOVWF  FA9
014F4:  BCF    FA6.6
014F6:  BCF    FA6.7
014F8:  BSF    FA6.0
014FA:  MOVF   FA8,W
014FC:  MOVLB  6
014FE:  BTFSC  x5A.7
01500:  BSF    FF2.7
01502:  MOVLB  5
01504:  MOVWF  xD3
....................    delay_ms(20);    
01506:  MOVLW  14
01508:  MOVLB  6
0150A:  MOVWF  x63
0150C:  MOVLB  0
0150E:  RCALL  1056
....................    Testerilizacionp[2]=read_eeprom(2); 
01510:  MOVFF  FF2,65A
01514:  BCF    FF2.7
01516:  CLRF   FAA
01518:  MOVLW  02
0151A:  MOVWF  FA9
0151C:  BCF    FA6.6
0151E:  BCF    FA6.7
01520:  BSF    FA6.0
01522:  MOVF   FA8,W
01524:  MOVLB  6
01526:  BTFSC  x5A.7
01528:  BSF    FF2.7
0152A:  MOVLB  5
0152C:  MOVWF  xD4
....................    delay_ms(20); 
0152E:  MOVLW  14
01530:  MOVLB  6
01532:  MOVWF  x63
01534:  MOVLB  0
01536:  RCALL  1056
....................    Testerilizacionp[3]=read_eeprom(3); 
01538:  MOVFF  FF2,65A
0153C:  BCF    FF2.7
0153E:  CLRF   FAA
01540:  MOVLW  03
01542:  MOVWF  FA9
01544:  BCF    FA6.6
01546:  BCF    FA6.7
01548:  BSF    FA6.0
0154A:  MOVF   FA8,W
0154C:  MOVLB  6
0154E:  BTFSC  x5A.7
01550:  BSF    FF2.7
01552:  MOVLB  5
01554:  MOVWF  xD5
....................    delay_ms(20);    
01556:  MOVLW  14
01558:  MOVLB  6
0155A:  MOVWF  x63
0155C:  MOVLB  0
0155E:  RCALL  1056
....................    Password[0]=read_eeprom(4); 
01560:  MOVFF  FF2,65A
01564:  BCF    FF2.7
01566:  CLRF   FAA
01568:  MOVLW  04
0156A:  MOVWF  FA9
0156C:  BCF    FA6.6
0156E:  BCF    FA6.7
01570:  BSF    FA6.0
01572:  MOVF   FA8,W
01574:  MOVLB  6
01576:  BTFSC  x5A.7
01578:  BSF    FF2.7
0157A:  MOVLB  5
0157C:  MOVWF  xDA
....................    delay_ms(20);    
0157E:  MOVLW  14
01580:  MOVLB  6
01582:  MOVWF  x63
01584:  MOVLB  0
01586:  RCALL  1056
....................    Password[1]=read_eeprom(5); 
01588:  MOVFF  FF2,65A
0158C:  BCF    FF2.7
0158E:  CLRF   FAA
01590:  MOVLW  05
01592:  MOVWF  FA9
01594:  BCF    FA6.6
01596:  BCF    FA6.7
01598:  BSF    FA6.0
0159A:  MOVF   FA8,W
0159C:  MOVLB  6
0159E:  BTFSC  x5A.7
015A0:  BSF    FF2.7
015A2:  MOVLB  5
015A4:  MOVWF  xDB
....................    delay_ms(20);    
015A6:  MOVLW  14
015A8:  MOVLB  6
015AA:  MOVWF  x63
015AC:  MOVLB  0
015AE:  RCALL  1056
....................    Password[2]=read_eeprom(6); 
015B0:  MOVFF  FF2,65A
015B4:  BCF    FF2.7
015B6:  CLRF   FAA
015B8:  MOVLW  06
015BA:  MOVWF  FA9
015BC:  BCF    FA6.6
015BE:  BCF    FA6.7
015C0:  BSF    FA6.0
015C2:  MOVF   FA8,W
015C4:  MOVLB  6
015C6:  BTFSC  x5A.7
015C8:  BSF    FF2.7
015CA:  MOVLB  5
015CC:  MOVWF  xDC
....................    delay_ms(20);    
015CE:  MOVLW  14
015D0:  MOVLB  6
015D2:  MOVWF  x63
015D4:  MOVLB  0
015D6:  RCALL  1056
....................    Password[3]=read_eeprom(7); 
015D8:  MOVFF  FF2,65A
015DC:  BCF    FF2.7
015DE:  CLRF   FAA
015E0:  MOVLW  07
015E2:  MOVWF  FA9
015E4:  BCF    FA6.6
015E6:  BCF    FA6.7
015E8:  BSF    FA6.0
015EA:  MOVF   FA8,W
015EC:  MOVLB  6
015EE:  BTFSC  x5A.7
015F0:  BSF    FF2.7
015F2:  MOVLB  5
015F4:  MOVWF  xDD
....................    delay_ms(20);    
015F6:  MOVLW  14
015F8:  MOVLB  6
015FA:  MOVWF  x63
015FC:  MOVLB  0
015FE:  RCALL  1056
....................  
....................    entero=read_eeprom(8); 
01600:  MOVFF  FF2,65A
01604:  BCF    FF2.7
01606:  CLRF   FAA
01608:  MOVLW  08
0160A:  MOVWF  FA9
0160C:  BCF    FA6.6
0160E:  BCF    FA6.7
01610:  BSF    FA6.0
01612:  MOVF   FA8,W
01614:  MOVLB  6
01616:  BTFSC  x5A.7
01618:  BSF    FF2.7
0161A:  MOVLB  5
0161C:  MOVWF  x9F
....................    delay_ms(20);    
0161E:  MOVLW  14
01620:  MOVLB  6
01622:  MOVWF  x63
01624:  MOVLB  0
01626:  RCALL  1056
....................    Temporal=read_eeprom(9); 
01628:  MOVFF  FF2,65A
0162C:  BCF    FF2.7
0162E:  CLRF   FAA
01630:  MOVLW  09
01632:  MOVWF  FA9
01634:  BCF    FA6.6
01636:  BCF    FA6.7
01638:  BSF    FA6.0
0163A:  MOVF   FA8,W
0163C:  MOVLB  6
0163E:  BTFSC  x5A.7
01640:  BSF    FF2.7
01642:  CLRF   x61
01644:  MOVWF  x60
01646:  MOVLB  0
01648:  RCALL  10B6
0164A:  MOVFF  03,62D
0164E:  MOVFF  02,62C
01652:  MOVFF  01,62B
01656:  MOVFF  00,62A
....................    Temporal=Temporal/10.0; 
0165A:  MOVFF  62D,65E
0165E:  MOVFF  62C,65D
01662:  MOVFF  62B,65C
01666:  MOVFF  62A,65B
0166A:  MOVLB  6
0166C:  CLRF   x62
0166E:  CLRF   x61
01670:  MOVLW  20
01672:  MOVWF  x60
01674:  MOVLW  82
01676:  MOVWF  x5F
01678:  MOVLB  0
0167A:  RCALL  10EC
0167C:  MOVFF  03,62D
01680:  MOVFF  02,62C
01684:  MOVFF  01,62B
01688:  MOVFF  00,62A
....................    Temperatura1=entero+Temporal; 
0168C:  MOVLB  6
0168E:  CLRF   x61
01690:  MOVFF  59F,660
01694:  MOVLB  0
01696:  RCALL  10B6
01698:  BCF    FD8.1
0169A:  MOVFF  03,662
0169E:  MOVFF  02,661
016A2:  MOVFF  01,660
016A6:  MOVFF  00,65F
016AA:  MOVFF  62D,666
016AE:  MOVFF  62C,665
016B2:  MOVFF  62B,664
016B6:  MOVFF  62A,663
016BA:  RCALL  124A
016BC:  MOVFF  03,621
016C0:  MOVFF  02,620
016C4:  MOVFF  01,61F
016C8:  MOVFF  00,61E
....................    delay_ms(20);    
016CC:  MOVLW  14
016CE:  MOVLB  6
016D0:  MOVWF  x63
016D2:  MOVLB  0
016D4:  RCALL  1056
....................     
....................    entero=read_eeprom(10); 
016D6:  MOVFF  FF2,65A
016DA:  BCF    FF2.7
016DC:  CLRF   FAA
016DE:  MOVLW  0A
016E0:  MOVWF  FA9
016E2:  BCF    FA6.6
016E4:  BCF    FA6.7
016E6:  BSF    FA6.0
016E8:  MOVF   FA8,W
016EA:  MOVLB  6
016EC:  BTFSC  x5A.7
016EE:  BSF    FF2.7
016F0:  MOVLB  5
016F2:  MOVWF  x9F
....................    delay_ms(20);    
016F4:  MOVLW  14
016F6:  MOVLB  6
016F8:  MOVWF  x63
016FA:  MOVLB  0
016FC:  RCALL  1056
....................    Temporal=read_eeprom(11); 
016FE:  MOVFF  FF2,65A
01702:  BCF    FF2.7
01704:  CLRF   FAA
01706:  MOVLW  0B
01708:  MOVWF  FA9
0170A:  BCF    FA6.6
0170C:  BCF    FA6.7
0170E:  BSF    FA6.0
01710:  MOVF   FA8,W
01712:  MOVLB  6
01714:  BTFSC  x5A.7
01716:  BSF    FF2.7
01718:  CLRF   x61
0171A:  MOVWF  x60
0171C:  MOVLB  0
0171E:  RCALL  10B6
01720:  MOVFF  03,62D
01724:  MOVFF  02,62C
01728:  MOVFF  01,62B
0172C:  MOVFF  00,62A
....................    Temporal=Temporal/10.0; 
01730:  MOVFF  62D,65E
01734:  MOVFF  62C,65D
01738:  MOVFF  62B,65C
0173C:  MOVFF  62A,65B
01740:  MOVLB  6
01742:  CLRF   x62
01744:  CLRF   x61
01746:  MOVLW  20
01748:  MOVWF  x60
0174A:  MOVLW  82
0174C:  MOVWF  x5F
0174E:  MOVLB  0
01750:  RCALL  10EC
01752:  MOVFF  03,62D
01756:  MOVFF  02,62C
0175A:  MOVFF  01,62B
0175E:  MOVFF  00,62A
....................    Temperatura2=entero+Temporal; 
01762:  MOVLB  6
01764:  CLRF   x61
01766:  MOVFF  59F,660
0176A:  MOVLB  0
0176C:  RCALL  10B6
0176E:  BCF    FD8.1
01770:  MOVFF  03,662
01774:  MOVFF  02,661
01778:  MOVFF  01,660
0177C:  MOVFF  00,65F
01780:  MOVFF  62D,666
01784:  MOVFF  62C,665
01788:  MOVFF  62B,664
0178C:  MOVFF  62A,663
01790:  RCALL  124A
01792:  MOVFF  03,625
01796:  MOVFF  02,624
0179A:  MOVFF  01,623
0179E:  MOVFF  00,622
....................    delay_ms(20);    
017A2:  MOVLW  14
017A4:  MOVLB  6
017A6:  MOVWF  x63
017A8:  MOVLB  0
017AA:  RCALL  1056
....................     
....................    entero=read_eeprom(12); 
017AC:  MOVFF  FF2,65A
017B0:  BCF    FF2.7
017B2:  CLRF   FAA
017B4:  MOVLW  0C
017B6:  MOVWF  FA9
017B8:  BCF    FA6.6
017BA:  BCF    FA6.7
017BC:  BSF    FA6.0
017BE:  MOVF   FA8,W
017C0:  MOVLB  6
017C2:  BTFSC  x5A.7
017C4:  BSF    FF2.7
017C6:  MOVLB  5
017C8:  MOVWF  x9F
....................    delay_ms(20);    
017CA:  MOVLW  14
017CC:  MOVLB  6
017CE:  MOVWF  x63
017D0:  MOVLB  0
017D2:  RCALL  1056
....................    Temporal=read_eeprom(13); 
017D4:  MOVFF  FF2,65A
017D8:  BCF    FF2.7
017DA:  CLRF   FAA
017DC:  MOVLW  0D
017DE:  MOVWF  FA9
017E0:  BCF    FA6.6
017E2:  BCF    FA6.7
017E4:  BSF    FA6.0
017E6:  MOVF   FA8,W
017E8:  MOVLB  6
017EA:  BTFSC  x5A.7
017EC:  BSF    FF2.7
017EE:  CLRF   x61
017F0:  MOVWF  x60
017F2:  MOVLB  0
017F4:  RCALL  10B6
017F6:  MOVFF  03,62D
017FA:  MOVFF  02,62C
017FE:  MOVFF  01,62B
01802:  MOVFF  00,62A
....................    Temporal=Temporal/10.0; 
01806:  MOVFF  62D,65E
0180A:  MOVFF  62C,65D
0180E:  MOVFF  62B,65C
01812:  MOVFF  62A,65B
01816:  MOVLB  6
01818:  CLRF   x62
0181A:  CLRF   x61
0181C:  MOVLW  20
0181E:  MOVWF  x60
01820:  MOVLW  82
01822:  MOVWF  x5F
01824:  MOVLB  0
01826:  RCALL  10EC
01828:  MOVFF  03,62D
0182C:  MOVFF  02,62C
01830:  MOVFF  01,62B
01834:  MOVFF  00,62A
....................    Temperatura3=entero+Temporal; 
01838:  MOVLB  6
0183A:  CLRF   x61
0183C:  MOVFF  59F,660
01840:  MOVLB  0
01842:  RCALL  10B6
01844:  BCF    FD8.1
01846:  MOVFF  03,662
0184A:  MOVFF  02,661
0184E:  MOVFF  01,660
01852:  MOVFF  00,65F
01856:  MOVFF  62D,666
0185A:  MOVFF  62C,665
0185E:  MOVFF  62B,664
01862:  MOVFF  62A,663
01866:  RCALL  124A
01868:  MOVFF  03,629
0186C:  MOVFF  02,628
01870:  MOVFF  01,627
01874:  MOVFF  00,626
....................    delay_ms(20);    
01878:  MOVLW  14
0187A:  MOVLB  6
0187C:  MOVWF  x63
0187E:  MOVLB  0
01880:  CALL   1056
....................     
....................     
....................    Ganancia=read_eeprom(14); 
01884:  MOVFF  FF2,65A
01888:  BCF    FF2.7
0188A:  CLRF   FAA
0188C:  MOVLW  0E
0188E:  MOVWF  FA9
01890:  BCF    FA6.6
01892:  BCF    FA6.7
01894:  BSF    FA6.0
01896:  MOVF   FA8,W
01898:  MOVLB  6
0189A:  BTFSC  x5A.7
0189C:  BSF    FF2.7
0189E:  CLRF   x61
018A0:  MOVWF  x60
018A2:  MOVLB  0
018A4:  RCALL  10B6
018A6:  MOVFF  03,605
018AA:  MOVFF  02,604
018AE:  MOVFF  01,603
018B2:  MOVFF  00,602
....................    delay_ms(10); 
018B6:  MOVLW  0A
018B8:  MOVLB  6
018BA:  MOVWF  x63
018BC:  MOVLB  0
018BE:  CALL   1056
....................    Integral=read_eeprom(15); 
018C2:  MOVFF  FF2,65A
018C6:  BCF    FF2.7
018C8:  CLRF   FAA
018CA:  MOVLW  0F
018CC:  MOVWF  FA9
018CE:  BCF    FA6.6
018D0:  BCF    FA6.7
018D2:  BSF    FA6.0
018D4:  MOVF   FA8,W
018D6:  MOVLB  6
018D8:  BTFSC  x5A.7
018DA:  BSF    FF2.7
018DC:  CLRF   x61
018DE:  MOVWF  x60
018E0:  MOVLB  0
018E2:  CALL   10B6
018E6:  MOVFF  03,5C9
018EA:  MOVFF  02,5C8
018EE:  MOVFF  01,5C7
018F2:  MOVFF  00,5C6
....................    delay_ms(10); 
018F6:  MOVLW  0A
018F8:  MOVLB  6
018FA:  MOVWF  x63
018FC:  MOVLB  0
018FE:  CALL   1056
....................    Derivativo=read_eeprom(16); 
01902:  MOVFF  FF2,65A
01906:  BCF    FF2.7
01908:  CLRF   FAA
0190A:  MOVLW  10
0190C:  MOVWF  FA9
0190E:  BCF    FA6.6
01910:  BCF    FA6.7
01912:  BSF    FA6.0
01914:  MOVF   FA8,W
01916:  MOVLB  6
01918:  BTFSC  x5A.7
0191A:  BSF    FF2.7
0191C:  CLRF   x61
0191E:  MOVWF  x60
01920:  MOVLB  0
01922:  CALL   10B6
01926:  MOVFF  03,5CD
0192A:  MOVFF  02,5CC
0192E:  MOVFF  01,5CB
01932:  MOVFF  00,5CA
....................    delay_ms(10); 
01936:  MOVLW  0A
01938:  MOVLB  6
0193A:  MOVWF  x63
0193C:  MOVLB  0
0193E:  CALL   1056
....................    Tciclo=read_eeprom(17); 
01942:  MOVFF  FF2,65A
01946:  BCF    FF2.7
01948:  CLRF   FAA
0194A:  MOVLW  11
0194C:  MOVWF  FA9
0194E:  BCF    FA6.6
01950:  BCF    FA6.7
01952:  BSF    FA6.0
01954:  MOVF   FA8,W
01956:  MOVLB  6
01958:  BTFSC  x5A.7
0195A:  BSF    FF2.7
0195C:  CLRF   x61
0195E:  MOVWF  x60
01960:  MOVLB  0
01962:  CALL   10B6
01966:  MOVFF  03,5ED
0196A:  MOVFF  02,5EC
0196E:  MOVFF  01,5EB
01972:  MOVFF  00,5EA
....................    delay_ms(10); 
01976:  MOVLW  0A
01978:  MOVLB  6
0197A:  MOVWF  x63
0197C:  MOVLB  0
0197E:  CALL   1056
....................    Ajuste=read_eeprom(18); 
01982:  MOVFF  FF2,65A
01986:  BCF    FF2.7
01988:  CLRF   FAA
0198A:  MOVLW  12
0198C:  MOVWF  FA9
0198E:  BCF    FA6.6
01990:  BCF    FA6.7
01992:  BSF    FA6.0
01994:  MOVF   FA8,W
01996:  MOVLB  6
01998:  BTFSC  x5A.7
0199A:  BSF    FF2.7
0199C:  MOVLB  5
0199E:  MOVWF  x8A
....................    delay_ms(10); 
019A0:  MOVLW  0A
019A2:  MOVLB  6
019A4:  MOVWF  x63
019A6:  MOVLB  0
019A8:  CALL   1056
....................    Ajusten=read_eeprom(19); 
019AC:  MOVFF  FF2,65A
019B0:  BCF    FF2.7
019B2:  CLRF   FAA
019B4:  MOVLW  13
019B6:  MOVWF  FA9
019B8:  BCF    FA6.6
019BA:  BCF    FA6.7
019BC:  BSF    FA6.0
019BE:  MOVF   FA8,W
019C0:  MOVLB  6
019C2:  BTFSC  x5A.7
019C4:  BSF    FF2.7
019C6:  MOVLB  5
019C8:  MOVWF  x8B
....................    delay_ms(10); 
019CA:  MOVLW  0A
019CC:  MOVLB  6
019CE:  MOVWF  x63
019D0:  MOVLB  0
019D2:  CALL   1056
....................    //Desvio=read_eeprom(23); 
....................    MediaMovil=read_eeprom(20); 
019D6:  MOVFF  FF2,65A
019DA:  BCF    FF2.7
019DC:  CLRF   FAA
019DE:  MOVLW  14
019E0:  MOVWF  FA9
019E2:  BCF    FA6.6
019E4:  BCF    FA6.7
019E6:  BSF    FA6.0
019E8:  MOVF   FA8,W
019EA:  MOVLB  6
019EC:  BTFSC  x5A.7
019EE:  BSF    FF2.7
019F0:  MOVLB  5
019F2:  MOVWF  x8C
....................    delay_ms(10);  
019F4:  MOVLW  0A
019F6:  MOVLB  6
019F8:  MOVWF  x63
019FA:  MOVLB  0
019FC:  CALL   1056
....................     
....................    Temporal=read_eeprom(22); 
01A00:  MOVFF  FF2,65A
01A04:  BCF    FF2.7
01A06:  CLRF   FAA
01A08:  MOVLW  16
01A0A:  MOVWF  FA9
01A0C:  BCF    FA6.6
01A0E:  BCF    FA6.7
01A10:  BSF    FA6.0
01A12:  MOVF   FA8,W
01A14:  MOVLB  6
01A16:  BTFSC  x5A.7
01A18:  BSF    FF2.7
01A1A:  CLRF   x61
01A1C:  MOVWF  x60
01A1E:  MOVLB  0
01A20:  CALL   10B6
01A24:  MOVFF  03,62D
01A28:  MOVFF  02,62C
01A2C:  MOVFF  01,62B
01A30:  MOVFF  00,62A
....................    Temporal=Temporal/10.0; 
01A34:  MOVFF  62D,65E
01A38:  MOVFF  62C,65D
01A3C:  MOVFF  62B,65C
01A40:  MOVFF  62A,65B
01A44:  MOVLB  6
01A46:  CLRF   x62
01A48:  CLRF   x61
01A4A:  MOVLW  20
01A4C:  MOVWF  x60
01A4E:  MOVLW  82
01A50:  MOVWF  x5F
01A52:  MOVLB  0
01A54:  CALL   10EC
01A58:  MOVFF  03,62D
01A5C:  MOVFF  02,62C
01A60:  MOVFF  01,62B
01A64:  MOVFF  00,62A
....................    delay_ms(10); 
01A68:  MOVLW  0A
01A6A:  MOVLB  6
01A6C:  MOVWF  x63
01A6E:  MOVLB  0
01A70:  CALL   1056
....................    Gain=read_eeprom(21)+Temporal; 
01A74:  MOVFF  FF2,65A
01A78:  BCF    FF2.7
01A7A:  CLRF   FAA
01A7C:  MOVLW  15
01A7E:  MOVWF  FA9
01A80:  BCF    FA6.6
01A82:  BCF    FA6.7
01A84:  BSF    FA6.0
01A86:  MOVF   FA8,W
01A88:  MOVLB  6
01A8A:  BTFSC  x5A.7
01A8C:  BSF    FF2.7
01A8E:  CLRF   x61
01A90:  MOVWF  x60
01A92:  MOVLB  0
01A94:  CALL   10B6
01A98:  BCF    FD8.1
01A9A:  MOVFF  03,662
01A9E:  MOVFF  02,661
01AA2:  MOVFF  01,660
01AA6:  MOVFF  00,65F
01AAA:  MOVFF  62D,666
01AAE:  MOVFF  62C,665
01AB2:  MOVFF  62B,664
01AB6:  MOVFF  62A,663
01ABA:  CALL   124A
01ABE:  MOVFF  03,5C1
01AC2:  MOVFF  02,5C0
01AC6:  MOVFF  01,5BF
01ACA:  MOVFF  00,5BE
....................    delay_ms(10); 
01ACE:  MOVLW  0A
01AD0:  MOVLB  6
01AD2:  MOVWF  x63
01AD4:  MOVLB  0
01AD6:  CALL   1056
....................    R1=make16(read_eeprom(24),read_eeprom(23)); 
01ADA:  MOVFF  FF2,65A
01ADE:  BCF    FF2.7
01AE0:  CLRF   FAA
01AE2:  MOVLW  18
01AE4:  MOVWF  FA9
01AE6:  BCF    FA6.6
01AE8:  BCF    FA6.7
01AEA:  BSF    FA6.0
01AEC:  MOVF   FA8,W
01AEE:  MOVLB  6
01AF0:  BTFSC  x5A.7
01AF2:  BSF    FF2.7
01AF4:  MOVWF  x5B
01AF6:  MOVFF  FF2,65C
01AFA:  BCF    FF2.7
01AFC:  CLRF   FAA
01AFE:  MOVLW  17
01B00:  MOVWF  FA9
01B02:  BCF    FA6.6
01B04:  BCF    FA6.7
01B06:  BSF    FA6.0
01B08:  MOVF   FA8,W
01B0A:  BTFSC  x5C.7
01B0C:  BSF    FF2.7
01B0E:  MOVWF  x5D
01B10:  MOVFF  65B,03
01B14:  MOVF   x5D,W
01B16:  MOVWF  x60
01B18:  MOVFF  03,661
01B1C:  MOVLB  0
01B1E:  CALL   10B6
01B22:  MOVFF  03,5E5
01B26:  MOVFF  02,5E4
01B2A:  MOVFF  01,5E3
01B2E:  MOVFF  00,5E2
....................    delay_ms(10); 
01B32:  MOVLW  0A
01B34:  MOVLB  6
01B36:  MOVWF  x63
01B38:  MOVLB  0
01B3A:  CALL   1056
....................    Temporal=read_eeprom(26); 
01B3E:  MOVFF  FF2,65A
01B42:  BCF    FF2.7
01B44:  CLRF   FAA
01B46:  MOVLW  1A
01B48:  MOVWF  FA9
01B4A:  BCF    FA6.6
01B4C:  BCF    FA6.7
01B4E:  BSF    FA6.0
01B50:  MOVF   FA8,W
01B52:  MOVLB  6
01B54:  BTFSC  x5A.7
01B56:  BSF    FF2.7
01B58:  CLRF   x61
01B5A:  MOVWF  x60
01B5C:  MOVLB  0
01B5E:  CALL   10B6
01B62:  MOVFF  03,62D
01B66:  MOVFF  02,62C
01B6A:  MOVFF  01,62B
01B6E:  MOVFF  00,62A
....................    Temporal=Temporal/10.0; 
01B72:  MOVFF  62D,65E
01B76:  MOVFF  62C,65D
01B7A:  MOVFF  62B,65C
01B7E:  MOVFF  62A,65B
01B82:  MOVLB  6
01B84:  CLRF   x62
01B86:  CLRF   x61
01B88:  MOVLW  20
01B8A:  MOVWF  x60
01B8C:  MOVLW  82
01B8E:  MOVWF  x5F
01B90:  MOVLB  0
01B92:  CALL   10EC
01B96:  MOVFF  03,62D
01B9A:  MOVFF  02,62C
01B9E:  MOVFF  01,62B
01BA2:  MOVFF  00,62A
....................    delay_ms(10); 
01BA6:  MOVLW  0A
01BA8:  MOVLB  6
01BAA:  MOVWF  x63
01BAC:  MOVLB  0
01BAE:  CALL   1056
....................    RPT100=read_eeprom(25)+Temporal; 
01BB2:  MOVFF  FF2,65A
01BB6:  BCF    FF2.7
01BB8:  CLRF   FAA
01BBA:  MOVLW  19
01BBC:  MOVWF  FA9
01BBE:  BCF    FA6.6
01BC0:  BCF    FA6.7
01BC2:  BSF    FA6.0
01BC4:  MOVF   FA8,W
01BC6:  MOVLB  6
01BC8:  BTFSC  x5A.7
01BCA:  BSF    FF2.7
01BCC:  CLRF   x61
01BCE:  MOVWF  x60
01BD0:  MOVLB  0
01BD2:  CALL   10B6
01BD6:  BCF    FD8.1
01BD8:  MOVFF  03,662
01BDC:  MOVFF  02,661
01BE0:  MOVFF  01,660
01BE4:  MOVFF  00,65F
01BE8:  MOVFF  62D,666
01BEC:  MOVFF  62C,665
01BF0:  MOVFF  62B,664
01BF4:  MOVFF  62A,663
01BF8:  CALL   124A
01BFC:  MOVFF  03,5C5
01C00:  MOVFF  02,5C4
01C04:  MOVFF  01,5C3
01C08:  MOVFF  00,5C2
....................    delay_ms(10); 
01C0C:  MOVLW  0A
01C0E:  MOVLB  6
01C10:  MOVWF  x63
01C12:  MOVLB  0
01C14:  CALL   1056
....................    Source=read_eeprom(27); 
01C18:  MOVFF  FF2,65A
01C1C:  BCF    FF2.7
01C1E:  CLRF   FAA
01C20:  MOVLW  1B
01C22:  MOVWF  FA9
01C24:  BCF    FA6.6
01C26:  BCF    FA6.7
01C28:  BSF    FA6.0
01C2A:  MOVF   FA8,W
01C2C:  MOVLB  6
01C2E:  BTFSC  x5A.7
01C30:  BSF    FF2.7
01C32:  MOVLB  5
01C34:  MOVWF  x96
....................    delay_ms(10); 
01C36:  MOVLW  0A
01C38:  MOVLB  6
01C3A:  MOVWF  x63
01C3C:  MOVLB  0
01C3E:  CALL   1056
.................... } 
01C42:  GOTO   5DA0 (RETURN)
....................  
.................... void LimitaValores(){ 
....................    if(Testerilizacionp[0]>9 || Testerilizacionp[0]<0){ 
*
01CC0:  MOVLB  5
01CC2:  BTFSC  xD2.7
01CC4:  BRA    1CCC
01CC6:  MOVF   xD2,W
01CC8:  SUBLW  09
01CCA:  BNC   1CD2
01CCC:  BTFSC  xD2.7
01CCE:  BRA    1CD2
01CD0:  BRA    1D0A
....................       Testerilizacionp[0]=0;write_eeprom(0,0);delay_ms(20); 
01CD2:  CLRF   xD2
01CD4:  CLRF   FAA
01CD6:  CLRF   FA9
01CD8:  CLRF   FA8
01CDA:  BCF    FA6.6
01CDC:  BCF    FA6.7
01CDE:  BSF    FA6.2
01CE0:  MOVF   FF2,W
01CE2:  MOVWF  00
01CE4:  BCF    FF2.7
01CE6:  MOVLB  F
01CE8:  MOVLW  55
01CEA:  MOVWF  FA7
01CEC:  MOVLW  AA
01CEE:  MOVWF  FA7
01CF0:  BSF    FA6.1
01CF2:  BTFSC  FA6.1
01CF4:  BRA    1CF2
01CF6:  BCF    FA6.2
01CF8:  MOVF   00,W
01CFA:  IORWF  FF2,F
01CFC:  MOVLW  14
01CFE:  MOVLB  6
01D00:  MOVWF  x63
01D02:  MOVLB  0
01D04:  CALL   1056
01D08:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[1]>9 || Testerilizacionp[1]<0){ 
01D0A:  BTFSC  xD3.7
01D0C:  BRA    1D14
01D0E:  MOVF   xD3,W
01D10:  SUBLW  09
01D12:  BNC   1D1A
01D14:  BTFSC  xD3.7
01D16:  BRA    1D1A
01D18:  BRA    1D54
....................       Testerilizacionp[1]=0;write_eeprom(1,0);delay_ms(20); 
01D1A:  CLRF   xD3
01D1C:  CLRF   FAA
01D1E:  MOVLW  01
01D20:  MOVWF  FA9
01D22:  CLRF   FA8
01D24:  BCF    FA6.6
01D26:  BCF    FA6.7
01D28:  BSF    FA6.2
01D2A:  MOVF   FF2,W
01D2C:  MOVWF  00
01D2E:  BCF    FF2.7
01D30:  MOVLB  F
01D32:  MOVLW  55
01D34:  MOVWF  FA7
01D36:  MOVLW  AA
01D38:  MOVWF  FA7
01D3A:  BSF    FA6.1
01D3C:  BTFSC  FA6.1
01D3E:  BRA    1D3C
01D40:  BCF    FA6.2
01D42:  MOVF   00,W
01D44:  IORWF  FF2,F
01D46:  MOVLW  14
01D48:  MOVLB  6
01D4A:  MOVWF  x63
01D4C:  MOVLB  0
01D4E:  CALL   1056
01D52:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[2]>9 || Testerilizacionp[2]<0){ 
01D54:  BTFSC  xD4.7
01D56:  BRA    1D5E
01D58:  MOVF   xD4,W
01D5A:  SUBLW  09
01D5C:  BNC   1D64
01D5E:  BTFSC  xD4.7
01D60:  BRA    1D64
01D62:  BRA    1D9E
....................       Testerilizacionp[2]=0;write_eeprom(2,0);delay_ms(20); 
01D64:  CLRF   xD4
01D66:  CLRF   FAA
01D68:  MOVLW  02
01D6A:  MOVWF  FA9
01D6C:  CLRF   FA8
01D6E:  BCF    FA6.6
01D70:  BCF    FA6.7
01D72:  BSF    FA6.2
01D74:  MOVF   FF2,W
01D76:  MOVWF  00
01D78:  BCF    FF2.7
01D7A:  MOVLB  F
01D7C:  MOVLW  55
01D7E:  MOVWF  FA7
01D80:  MOVLW  AA
01D82:  MOVWF  FA7
01D84:  BSF    FA6.1
01D86:  BTFSC  FA6.1
01D88:  BRA    1D86
01D8A:  BCF    FA6.2
01D8C:  MOVF   00,W
01D8E:  IORWF  FF2,F
01D90:  MOVLW  14
01D92:  MOVLB  6
01D94:  MOVWF  x63
01D96:  MOVLB  0
01D98:  CALL   1056
01D9C:  MOVLB  5
....................    } 
....................    if(Testerilizacionp[3]>9 || Testerilizacionp[3]<0){ 
01D9E:  BTFSC  xD5.7
01DA0:  BRA    1DA8
01DA2:  MOVF   xD5,W
01DA4:  SUBLW  09
01DA6:  BNC   1DAE
01DA8:  BTFSC  xD5.7
01DAA:  BRA    1DAE
01DAC:  BRA    1DE8
....................       Testerilizacionp[3]=0;write_eeprom(3,0);delay_ms(20); 
01DAE:  CLRF   xD5
01DB0:  CLRF   FAA
01DB2:  MOVLW  03
01DB4:  MOVWF  FA9
01DB6:  CLRF   FA8
01DB8:  BCF    FA6.6
01DBA:  BCF    FA6.7
01DBC:  BSF    FA6.2
01DBE:  MOVF   FF2,W
01DC0:  MOVWF  00
01DC2:  BCF    FF2.7
01DC4:  MOVLB  F
01DC6:  MOVLW  55
01DC8:  MOVWF  FA7
01DCA:  MOVLW  AA
01DCC:  MOVWF  FA7
01DCE:  BSF    FA6.1
01DD0:  BTFSC  FA6.1
01DD2:  BRA    1DD0
01DD4:  BCF    FA6.2
01DD6:  MOVF   00,W
01DD8:  IORWF  FF2,F
01DDA:  MOVLW  14
01DDC:  MOVLB  6
01DDE:  MOVWF  x63
01DE0:  MOVLB  0
01DE2:  CALL   1056
01DE6:  MOVLB  5
....................    } 
....................    if(Password[0]>9 || Password[0]<0){ 
01DE8:  BTFSC  xDA.7
01DEA:  BRA    1DF2
01DEC:  MOVF   xDA,W
01DEE:  SUBLW  09
01DF0:  BNC   1DF8
01DF2:  BTFSC  xDA.7
01DF4:  BRA    1DF8
01DF6:  BRA    1E32
....................       Password[0]=0;write_eeprom(4,0);delay_ms(20); 
01DF8:  CLRF   xDA
01DFA:  CLRF   FAA
01DFC:  MOVLW  04
01DFE:  MOVWF  FA9
01E00:  CLRF   FA8
01E02:  BCF    FA6.6
01E04:  BCF    FA6.7
01E06:  BSF    FA6.2
01E08:  MOVF   FF2,W
01E0A:  MOVWF  00
01E0C:  BCF    FF2.7
01E0E:  MOVLB  F
01E10:  MOVLW  55
01E12:  MOVWF  FA7
01E14:  MOVLW  AA
01E16:  MOVWF  FA7
01E18:  BSF    FA6.1
01E1A:  BTFSC  FA6.1
01E1C:  BRA    1E1A
01E1E:  BCF    FA6.2
01E20:  MOVF   00,W
01E22:  IORWF  FF2,F
01E24:  MOVLW  14
01E26:  MOVLB  6
01E28:  MOVWF  x63
01E2A:  MOVLB  0
01E2C:  CALL   1056
01E30:  MOVLB  5
....................    } 
....................    if(Password[1]>9 || Password[1]<0){ 
01E32:  BTFSC  xDB.7
01E34:  BRA    1E3C
01E36:  MOVF   xDB,W
01E38:  SUBLW  09
01E3A:  BNC   1E42
01E3C:  BTFSC  xDB.7
01E3E:  BRA    1E42
01E40:  BRA    1E7C
....................       Password[1]=0;write_eeprom(5,0);delay_ms(20); 
01E42:  CLRF   xDB
01E44:  CLRF   FAA
01E46:  MOVLW  05
01E48:  MOVWF  FA9
01E4A:  CLRF   FA8
01E4C:  BCF    FA6.6
01E4E:  BCF    FA6.7
01E50:  BSF    FA6.2
01E52:  MOVF   FF2,W
01E54:  MOVWF  00
01E56:  BCF    FF2.7
01E58:  MOVLB  F
01E5A:  MOVLW  55
01E5C:  MOVWF  FA7
01E5E:  MOVLW  AA
01E60:  MOVWF  FA7
01E62:  BSF    FA6.1
01E64:  BTFSC  FA6.1
01E66:  BRA    1E64
01E68:  BCF    FA6.2
01E6A:  MOVF   00,W
01E6C:  IORWF  FF2,F
01E6E:  MOVLW  14
01E70:  MOVLB  6
01E72:  MOVWF  x63
01E74:  MOVLB  0
01E76:  CALL   1056
01E7A:  MOVLB  5
....................    } 
....................    if(Password[2]>9 || Password[2]<0){ 
01E7C:  BTFSC  xDC.7
01E7E:  BRA    1E86
01E80:  MOVF   xDC,W
01E82:  SUBLW  09
01E84:  BNC   1E8C
01E86:  BTFSC  xDC.7
01E88:  BRA    1E8C
01E8A:  BRA    1EC6
....................       Password[2]=0;write_eeprom(6,0);delay_ms(20); 
01E8C:  CLRF   xDC
01E8E:  CLRF   FAA
01E90:  MOVLW  06
01E92:  MOVWF  FA9
01E94:  CLRF   FA8
01E96:  BCF    FA6.6
01E98:  BCF    FA6.7
01E9A:  BSF    FA6.2
01E9C:  MOVF   FF2,W
01E9E:  MOVWF  00
01EA0:  BCF    FF2.7
01EA2:  MOVLB  F
01EA4:  MOVLW  55
01EA6:  MOVWF  FA7
01EA8:  MOVLW  AA
01EAA:  MOVWF  FA7
01EAC:  BSF    FA6.1
01EAE:  BTFSC  FA6.1
01EB0:  BRA    1EAE
01EB2:  BCF    FA6.2
01EB4:  MOVF   00,W
01EB6:  IORWF  FF2,F
01EB8:  MOVLW  14
01EBA:  MOVLB  6
01EBC:  MOVWF  x63
01EBE:  MOVLB  0
01EC0:  CALL   1056
01EC4:  MOVLB  5
....................    } 
....................    if(Password[3]>9 || Password[3]<0){ 
01EC6:  BTFSC  xDD.7
01EC8:  BRA    1ED0
01ECA:  MOVF   xDD,W
01ECC:  SUBLW  09
01ECE:  BNC   1ED6
01ED0:  BTFSC  xDD.7
01ED2:  BRA    1ED6
01ED4:  BRA    1F0E
....................       Password[3]=0;write_eeprom(7,0);delay_ms(20); 
01ED6:  CLRF   xDD
01ED8:  CLRF   FAA
01EDA:  MOVLW  07
01EDC:  MOVWF  FA9
01EDE:  CLRF   FA8
01EE0:  BCF    FA6.6
01EE2:  BCF    FA6.7
01EE4:  BSF    FA6.2
01EE6:  MOVF   FF2,W
01EE8:  MOVWF  00
01EEA:  BCF    FF2.7
01EEC:  MOVLB  F
01EEE:  MOVLW  55
01EF0:  MOVWF  FA7
01EF2:  MOVLW  AA
01EF4:  MOVWF  FA7
01EF6:  BSF    FA6.1
01EF8:  BTFSC  FA6.1
01EFA:  BRA    1EF8
01EFC:  BCF    FA6.2
01EFE:  MOVF   00,W
01F00:  IORWF  FF2,F
01F02:  MOVLW  14
01F04:  MOVLB  6
01F06:  MOVWF  x63
01F08:  MOVLB  0
01F0A:  CALL   1056
....................    } 
....................    if(Temperatura1>80.0){ 
01F0E:  MOVLB  6
01F10:  CLRF   x61
01F12:  CLRF   x60
01F14:  MOVLW  20
01F16:  MOVWF  x5F
01F18:  MOVLW  85
01F1A:  MOVWF  x5E
01F1C:  MOVFF  621,665
01F20:  MOVFF  620,664
01F24:  MOVFF  61F,663
01F28:  MOVFF  61E,662
01F2C:  MOVLB  0
01F2E:  RCALL  1C46
01F30:  BNC   1FAE
....................       Temperatura1=30.0;write_eeprom(8,30);delay_ms(20);write_eeprom(9,0);delay_ms(20); 
01F32:  MOVLB  6
01F34:  CLRF   x21
01F36:  CLRF   x20
01F38:  MOVLW  70
01F3A:  MOVWF  x1F
01F3C:  MOVLW  83
01F3E:  MOVWF  x1E
01F40:  CLRF   FAA
01F42:  MOVLW  08
01F44:  MOVWF  FA9
01F46:  MOVLW  1E
01F48:  MOVWF  FA8
01F4A:  BCF    FA6.6
01F4C:  BCF    FA6.7
01F4E:  BSF    FA6.2
01F50:  MOVF   FF2,W
01F52:  MOVWF  00
01F54:  BCF    FF2.7
01F56:  MOVLB  F
01F58:  MOVLW  55
01F5A:  MOVWF  FA7
01F5C:  MOVLW  AA
01F5E:  MOVWF  FA7
01F60:  BSF    FA6.1
01F62:  BTFSC  FA6.1
01F64:  BRA    1F62
01F66:  BCF    FA6.2
01F68:  MOVF   00,W
01F6A:  IORWF  FF2,F
01F6C:  MOVLW  14
01F6E:  MOVLB  6
01F70:  MOVWF  x63
01F72:  MOVLB  0
01F74:  CALL   1056
01F78:  CLRF   FAA
01F7A:  MOVLW  09
01F7C:  MOVWF  FA9
01F7E:  CLRF   FA8
01F80:  BCF    FA6.6
01F82:  BCF    FA6.7
01F84:  BSF    FA6.2
01F86:  MOVF   FF2,W
01F88:  MOVWF  00
01F8A:  BCF    FF2.7
01F8C:  MOVLB  F
01F8E:  MOVLW  55
01F90:  MOVWF  FA7
01F92:  MOVLW  AA
01F94:  MOVWF  FA7
01F96:  BSF    FA6.1
01F98:  BTFSC  FA6.1
01F9A:  BRA    1F98
01F9C:  BCF    FA6.2
01F9E:  MOVF   00,W
01FA0:  IORWF  FF2,F
01FA2:  MOVLW  14
01FA4:  MOVLB  6
01FA6:  MOVWF  x63
01FA8:  MOVLB  0
01FAA:  CALL   1056
....................    } 
....................    if(Temperatura2>80.0){ 
01FAE:  MOVLB  6
01FB0:  CLRF   x61
01FB2:  CLRF   x60
01FB4:  MOVLW  20
01FB6:  MOVWF  x5F
01FB8:  MOVLW  85
01FBA:  MOVWF  x5E
01FBC:  MOVFF  625,665
01FC0:  MOVFF  624,664
01FC4:  MOVFF  623,663
01FC8:  MOVFF  622,662
01FCC:  MOVLB  0
01FCE:  RCALL  1C46
01FD0:  BNC   204E
....................       Temperatura2=30.0;write_eeprom(10,30);delay_ms(20);write_eeprom(11,0);delay_ms(20); 
01FD2:  MOVLB  6
01FD4:  CLRF   x25
01FD6:  CLRF   x24
01FD8:  MOVLW  70
01FDA:  MOVWF  x23
01FDC:  MOVLW  83
01FDE:  MOVWF  x22
01FE0:  CLRF   FAA
01FE2:  MOVLW  0A
01FE4:  MOVWF  FA9
01FE6:  MOVLW  1E
01FE8:  MOVWF  FA8
01FEA:  BCF    FA6.6
01FEC:  BCF    FA6.7
01FEE:  BSF    FA6.2
01FF0:  MOVF   FF2,W
01FF2:  MOVWF  00
01FF4:  BCF    FF2.7
01FF6:  MOVLB  F
01FF8:  MOVLW  55
01FFA:  MOVWF  FA7
01FFC:  MOVLW  AA
01FFE:  MOVWF  FA7
02000:  BSF    FA6.1
02002:  BTFSC  FA6.1
02004:  BRA    2002
02006:  BCF    FA6.2
02008:  MOVF   00,W
0200A:  IORWF  FF2,F
0200C:  MOVLW  14
0200E:  MOVLB  6
02010:  MOVWF  x63
02012:  MOVLB  0
02014:  CALL   1056
02018:  CLRF   FAA
0201A:  MOVLW  0B
0201C:  MOVWF  FA9
0201E:  CLRF   FA8
02020:  BCF    FA6.6
02022:  BCF    FA6.7
02024:  BSF    FA6.2
02026:  MOVF   FF2,W
02028:  MOVWF  00
0202A:  BCF    FF2.7
0202C:  MOVLB  F
0202E:  MOVLW  55
02030:  MOVWF  FA7
02032:  MOVLW  AA
02034:  MOVWF  FA7
02036:  BSF    FA6.1
02038:  BTFSC  FA6.1
0203A:  BRA    2038
0203C:  BCF    FA6.2
0203E:  MOVF   00,W
02040:  IORWF  FF2,F
02042:  MOVLW  14
02044:  MOVLB  6
02046:  MOVWF  x63
02048:  MOVLB  0
0204A:  CALL   1056
....................    } 
....................    if(Temperatura3>80.0){ 
0204E:  MOVLB  6
02050:  CLRF   x61
02052:  CLRF   x60
02054:  MOVLW  20
02056:  MOVWF  x5F
02058:  MOVLW  85
0205A:  MOVWF  x5E
0205C:  MOVFF  629,665
02060:  MOVFF  628,664
02064:  MOVFF  627,663
02068:  MOVFF  626,662
0206C:  MOVLB  0
0206E:  RCALL  1C46
02070:  BNC   20EE
....................       Temperatura3=30.0;write_eeprom(12,30);delay_ms(20);write_eeprom(13,0);delay_ms(20); 
02072:  MOVLB  6
02074:  CLRF   x29
02076:  CLRF   x28
02078:  MOVLW  70
0207A:  MOVWF  x27
0207C:  MOVLW  83
0207E:  MOVWF  x26
02080:  CLRF   FAA
02082:  MOVLW  0C
02084:  MOVWF  FA9
02086:  MOVLW  1E
02088:  MOVWF  FA8
0208A:  BCF    FA6.6
0208C:  BCF    FA6.7
0208E:  BSF    FA6.2
02090:  MOVF   FF2,W
02092:  MOVWF  00
02094:  BCF    FF2.7
02096:  MOVLB  F
02098:  MOVLW  55
0209A:  MOVWF  FA7
0209C:  MOVLW  AA
0209E:  MOVWF  FA7
020A0:  BSF    FA6.1
020A2:  BTFSC  FA6.1
020A4:  BRA    20A2
020A6:  BCF    FA6.2
020A8:  MOVF   00,W
020AA:  IORWF  FF2,F
020AC:  MOVLW  14
020AE:  MOVLB  6
020B0:  MOVWF  x63
020B2:  MOVLB  0
020B4:  CALL   1056
020B8:  CLRF   FAA
020BA:  MOVLW  0D
020BC:  MOVWF  FA9
020BE:  CLRF   FA8
020C0:  BCF    FA6.6
020C2:  BCF    FA6.7
020C4:  BSF    FA6.2
020C6:  MOVF   FF2,W
020C8:  MOVWF  00
020CA:  BCF    FF2.7
020CC:  MOVLB  F
020CE:  MOVLW  55
020D0:  MOVWF  FA7
020D2:  MOVLW  AA
020D4:  MOVWF  FA7
020D6:  BSF    FA6.1
020D8:  BTFSC  FA6.1
020DA:  BRA    20D8
020DC:  BCF    FA6.2
020DE:  MOVF   00,W
020E0:  IORWF  FF2,F
020E2:  MOVLW  14
020E4:  MOVLB  6
020E6:  MOVWF  x63
020E8:  MOVLB  0
020EA:  CALL   1056
....................    } 
....................    if(Ganancia>40){ 
020EE:  MOVLB  6
020F0:  CLRF   x61
020F2:  CLRF   x60
020F4:  MOVLW  20
020F6:  MOVWF  x5F
020F8:  MOVLW  84
020FA:  MOVWF  x5E
020FC:  MOVFF  605,665
02100:  MOVFF  604,664
02104:  MOVFF  603,663
02108:  MOVFF  602,662
0210C:  MOVLB  0
0210E:  RCALL  1C46
02110:  BNC   2156
....................       Ganancia=2;write_eeprom(14,2);delay_ms(20); 
02112:  MOVLB  6
02114:  CLRF   x05
02116:  CLRF   x04
02118:  CLRF   x03
0211A:  MOVLW  80
0211C:  MOVWF  x02
0211E:  CLRF   FAA
02120:  MOVLW  0E
02122:  MOVWF  FA9
02124:  MOVLW  02
02126:  MOVWF  FA8
02128:  BCF    FA6.6
0212A:  BCF    FA6.7
0212C:  BSF    FA6.2
0212E:  MOVF   FF2,W
02130:  MOVWF  00
02132:  BCF    FF2.7
02134:  MOVLB  F
02136:  MOVLW  55
02138:  MOVWF  FA7
0213A:  MOVLW  AA
0213C:  MOVWF  FA7
0213E:  BSF    FA6.1
02140:  BTFSC  FA6.1
02142:  BRA    2140
02144:  BCF    FA6.2
02146:  MOVF   00,W
02148:  IORWF  FF2,F
0214A:  MOVLW  14
0214C:  MOVLB  6
0214E:  MOVWF  x63
02150:  MOVLB  0
02152:  CALL   1056
....................    } 
....................    if(Integral>40){ 
02156:  MOVLB  6
02158:  CLRF   x61
0215A:  CLRF   x60
0215C:  MOVLW  20
0215E:  MOVWF  x5F
02160:  MOVLW  84
02162:  MOVWF  x5E
02164:  MOVFF  5C9,665
02168:  MOVFF  5C8,664
0216C:  MOVFF  5C7,663
02170:  MOVFF  5C6,662
02174:  MOVLB  0
02176:  RCALL  1C46
02178:  BNC   21BE
....................       Integral=1;write_eeprom(15,1);delay_ms(20); 
0217A:  MOVLB  5
0217C:  CLRF   xC9
0217E:  CLRF   xC8
02180:  CLRF   xC7
02182:  MOVLW  7F
02184:  MOVWF  xC6
02186:  CLRF   FAA
02188:  MOVLW  0F
0218A:  MOVWF  FA9
0218C:  MOVLW  01
0218E:  MOVWF  FA8
02190:  BCF    FA6.6
02192:  BCF    FA6.7
02194:  BSF    FA6.2
02196:  MOVF   FF2,W
02198:  MOVWF  00
0219A:  BCF    FF2.7
0219C:  MOVLB  F
0219E:  MOVLW  55
021A0:  MOVWF  FA7
021A2:  MOVLW  AA
021A4:  MOVWF  FA7
021A6:  BSF    FA6.1
021A8:  BTFSC  FA6.1
021AA:  BRA    21A8
021AC:  BCF    FA6.2
021AE:  MOVF   00,W
021B0:  IORWF  FF2,F
021B2:  MOVLW  14
021B4:  MOVLB  6
021B6:  MOVWF  x63
021B8:  MOVLB  0
021BA:  CALL   1056
....................    } 
....................    if(Derivativo>200){ 
021BE:  MOVLB  6
021C0:  CLRF   x61
021C2:  CLRF   x60
021C4:  MOVLW  48
021C6:  MOVWF  x5F
021C8:  MOVLW  86
021CA:  MOVWF  x5E
021CC:  MOVFF  5CD,665
021D0:  MOVFF  5CC,664
021D4:  MOVFF  5CB,663
021D8:  MOVFF  5CA,662
021DC:  MOVLB  0
021DE:  RCALL  1C46
021E0:  BNC   2228
....................       Derivativo=40;write_eeprom(16,40);delay_ms(20); 
021E2:  MOVLB  5
021E4:  CLRF   xCD
021E6:  CLRF   xCC
021E8:  MOVLW  20
021EA:  MOVWF  xCB
021EC:  MOVLW  84
021EE:  MOVWF  xCA
021F0:  CLRF   FAA
021F2:  MOVLW  10
021F4:  MOVWF  FA9
021F6:  MOVLW  28
021F8:  MOVWF  FA8
021FA:  BCF    FA6.6
021FC:  BCF    FA6.7
021FE:  BSF    FA6.2
02200:  MOVF   FF2,W
02202:  MOVWF  00
02204:  BCF    FF2.7
02206:  MOVLB  F
02208:  MOVLW  55
0220A:  MOVWF  FA7
0220C:  MOVLW  AA
0220E:  MOVWF  FA7
02210:  BSF    FA6.1
02212:  BTFSC  FA6.1
02214:  BRA    2212
02216:  BCF    FA6.2
02218:  MOVF   00,W
0221A:  IORWF  FF2,F
0221C:  MOVLW  14
0221E:  MOVLB  6
02220:  MOVWF  x63
02222:  MOVLB  0
02224:  CALL   1056
....................    } 
....................    if(Tciclo>40){ 
02228:  MOVLB  6
0222A:  CLRF   x61
0222C:  CLRF   x60
0222E:  MOVLW  20
02230:  MOVWF  x5F
02232:  MOVLW  84
02234:  MOVWF  x5E
02236:  MOVFF  5ED,665
0223A:  MOVFF  5EC,664
0223E:  MOVFF  5EB,663
02242:  MOVFF  5EA,662
02246:  MOVLB  0
02248:  RCALL  1C46
0224A:  BNC   2292
....................       Tciclo=5;write_eeprom(17,5);delay_ms(20); 
0224C:  MOVLB  5
0224E:  CLRF   xED
02250:  CLRF   xEC
02252:  MOVLW  20
02254:  MOVWF  xEB
02256:  MOVLW  81
02258:  MOVWF  xEA
0225A:  CLRF   FAA
0225C:  MOVLW  11
0225E:  MOVWF  FA9
02260:  MOVLW  05
02262:  MOVWF  FA8
02264:  BCF    FA6.6
02266:  BCF    FA6.7
02268:  BSF    FA6.2
0226A:  MOVF   FF2,W
0226C:  MOVWF  00
0226E:  BCF    FF2.7
02270:  MOVLB  F
02272:  MOVLW  55
02274:  MOVWF  FA7
02276:  MOVLW  AA
02278:  MOVWF  FA7
0227A:  BSF    FA6.1
0227C:  BTFSC  FA6.1
0227E:  BRA    227C
02280:  BCF    FA6.2
02282:  MOVF   00,W
02284:  IORWF  FF2,F
02286:  MOVLW  14
02288:  MOVLB  6
0228A:  MOVWF  x63
0228C:  MOVLB  0
0228E:  CALL   1056
....................    } 
....................    if(Ajuste>100){ 
02292:  MOVLB  5
02294:  MOVF   x8A,W
02296:  SUBLW  64
02298:  BC    22D4
....................       Ajuste=0;write_eeprom(18,0);delay_ms(20); 
0229A:  CLRF   x8A
0229C:  CLRF   FAA
0229E:  MOVLW  12
022A0:  MOVWF  FA9
022A2:  CLRF   FA8
022A4:  BCF    FA6.6
022A6:  BCF    FA6.7
022A8:  BSF    FA6.2
022AA:  MOVF   FF2,W
022AC:  MOVWF  00
022AE:  BCF    FF2.7
022B0:  MOVLB  F
022B2:  MOVLW  55
022B4:  MOVWF  FA7
022B6:  MOVLW  AA
022B8:  MOVWF  FA7
022BA:  BSF    FA6.1
022BC:  BTFSC  FA6.1
022BE:  BRA    22BC
022C0:  BCF    FA6.2
022C2:  MOVF   00,W
022C4:  IORWF  FF2,F
022C6:  MOVLW  14
022C8:  MOVLB  6
022CA:  MOVWF  x63
022CC:  MOVLB  0
022CE:  CALL   1056
022D2:  MOVLB  5
....................    } 
....................    if(Ajusten>100){ 
022D4:  MOVF   x8B,W
022D6:  SUBLW  64
022D8:  BC    2314
....................       Ajusten=0;write_eeprom(19,0);delay_ms(20); 
022DA:  CLRF   x8B
022DC:  CLRF   FAA
022DE:  MOVLW  13
022E0:  MOVWF  FA9
022E2:  CLRF   FA8
022E4:  BCF    FA6.6
022E6:  BCF    FA6.7
022E8:  BSF    FA6.2
022EA:  MOVF   FF2,W
022EC:  MOVWF  00
022EE:  BCF    FF2.7
022F0:  MOVLB  F
022F2:  MOVLW  55
022F4:  MOVWF  FA7
022F6:  MOVLW  AA
022F8:  MOVWF  FA7
022FA:  BSF    FA6.1
022FC:  BTFSC  FA6.1
022FE:  BRA    22FC
02300:  BCF    FA6.2
02302:  MOVF   00,W
02304:  IORWF  FF2,F
02306:  MOVLW  14
02308:  MOVLB  6
0230A:  MOVWF  x63
0230C:  MOVLB  0
0230E:  CALL   1056
02312:  MOVLB  5
....................    } 
....................    if(MediaMovil>80){ 
02314:  MOVF   x8C,W
02316:  SUBLW  50
02318:  BC    2356
....................       MediaMovil=80;write_eeprom(20,80);delay_ms(20); 
0231A:  MOVLW  50
0231C:  MOVWF  x8C
0231E:  CLRF   FAA
02320:  MOVLW  14
02322:  MOVWF  FA9
02324:  MOVLW  50
02326:  MOVWF  FA8
02328:  BCF    FA6.6
0232A:  BCF    FA6.7
0232C:  BSF    FA6.2
0232E:  MOVF   FF2,W
02330:  MOVWF  00
02332:  BCF    FF2.7
02334:  MOVLB  F
02336:  MOVLW  55
02338:  MOVWF  FA7
0233A:  MOVLW  AA
0233C:  MOVWF  FA7
0233E:  BSF    FA6.1
02340:  BTFSC  FA6.1
02342:  BRA    2340
02344:  BCF    FA6.2
02346:  MOVF   00,W
02348:  IORWF  FF2,F
0234A:  MOVLW  14
0234C:  MOVLB  6
0234E:  MOVWF  x63
02350:  MOVLB  0
02352:  CALL   1056
....................    } 
....................    if(Gain>50){ 
02356:  MOVLB  6
02358:  CLRF   x61
0235A:  CLRF   x60
0235C:  MOVLW  48
0235E:  MOVWF  x5F
02360:  MOVLW  84
02362:  MOVWF  x5E
02364:  MOVFF  5C1,665
02368:  MOVFF  5C0,664
0236C:  MOVFF  5BF,663
02370:  MOVFF  5BE,662
02374:  MOVLB  0
02376:  RCALL  1C46
02378:  BNC   23FC
....................       Gain=40.2;write_eeprom(21,40);delay_ms(20);write_eeprom(22,2);delay_ms(20); 
0237A:  MOVLW  CD
0237C:  MOVLB  5
0237E:  MOVWF  xC1
02380:  MOVLW  CC
02382:  MOVWF  xC0
02384:  MOVLW  20
02386:  MOVWF  xBF
02388:  MOVLW  84
0238A:  MOVWF  xBE
0238C:  CLRF   FAA
0238E:  MOVLW  15
02390:  MOVWF  FA9
02392:  MOVLW  28
02394:  MOVWF  FA8
02396:  BCF    FA6.6
02398:  BCF    FA6.7
0239A:  BSF    FA6.2
0239C:  MOVF   FF2,W
0239E:  MOVWF  00
023A0:  BCF    FF2.7
023A2:  MOVLB  F
023A4:  MOVLW  55
023A6:  MOVWF  FA7
023A8:  MOVLW  AA
023AA:  MOVWF  FA7
023AC:  BSF    FA6.1
023AE:  BTFSC  FA6.1
023B0:  BRA    23AE
023B2:  BCF    FA6.2
023B4:  MOVF   00,W
023B6:  IORWF  FF2,F
023B8:  MOVLW  14
023BA:  MOVLB  6
023BC:  MOVWF  x63
023BE:  MOVLB  0
023C0:  CALL   1056
023C4:  CLRF   FAA
023C6:  MOVLW  16
023C8:  MOVWF  FA9
023CA:  MOVLW  02
023CC:  MOVWF  FA8
023CE:  BCF    FA6.6
023D0:  BCF    FA6.7
023D2:  BSF    FA6.2
023D4:  MOVF   FF2,W
023D6:  MOVWF  00
023D8:  BCF    FF2.7
023DA:  MOVLB  F
023DC:  MOVLW  55
023DE:  MOVWF  FA7
023E0:  MOVLW  AA
023E2:  MOVWF  FA7
023E4:  BSF    FA6.1
023E6:  BTFSC  FA6.1
023E8:  BRA    23E6
023EA:  BCF    FA6.2
023EC:  MOVF   00,W
023EE:  IORWF  FF2,F
023F0:  MOVLW  14
023F2:  MOVLB  6
023F4:  MOVWF  x63
023F6:  MOVLB  0
023F8:  CALL   1056
....................    } 
....................    if(R1>6400){ 
023FC:  MOVLB  6
023FE:  CLRF   x61
02400:  CLRF   x60
02402:  MOVLW  48
02404:  MOVWF  x5F
02406:  MOVLW  8B
02408:  MOVWF  x5E
0240A:  MOVFF  5E5,665
0240E:  MOVFF  5E4,664
02412:  MOVFF  5E3,663
02416:  MOVFF  5E2,662
0241A:  MOVLB  0
0241C:  RCALL  1C46
0241E:  BNC   24A0
....................       R1=6200;write_eeprom(23,0x18);delay_ms(20);write_eeprom(24,0x38);delay_ms(20); 
02420:  MOVLB  5
02422:  CLRF   xE5
02424:  MOVLW  C0
02426:  MOVWF  xE4
02428:  MOVLW  41
0242A:  MOVWF  xE3
0242C:  MOVLW  8B
0242E:  MOVWF  xE2
02430:  CLRF   FAA
02432:  MOVLW  17
02434:  MOVWF  FA9
02436:  MOVLW  18
02438:  MOVWF  FA8
0243A:  BCF    FA6.6
0243C:  BCF    FA6.7
0243E:  BSF    FA6.2
02440:  MOVF   FF2,W
02442:  MOVWF  00
02444:  BCF    FF2.7
02446:  MOVLB  F
02448:  MOVLW  55
0244A:  MOVWF  FA7
0244C:  MOVLW  AA
0244E:  MOVWF  FA7
02450:  BSF    FA6.1
02452:  BTFSC  FA6.1
02454:  BRA    2452
02456:  BCF    FA6.2
02458:  MOVF   00,W
0245A:  IORWF  FF2,F
0245C:  MOVLW  14
0245E:  MOVLB  6
02460:  MOVWF  x63
02462:  MOVLB  0
02464:  CALL   1056
02468:  CLRF   FAA
0246A:  MOVLW  18
0246C:  MOVWF  FA9
0246E:  MOVLW  38
02470:  MOVWF  FA8
02472:  BCF    FA6.6
02474:  BCF    FA6.7
02476:  BSF    FA6.2
02478:  MOVF   FF2,W
0247A:  MOVWF  00
0247C:  BCF    FF2.7
0247E:  MOVLB  F
02480:  MOVLW  55
02482:  MOVWF  FA7
02484:  MOVLW  AA
02486:  MOVWF  FA7
02488:  BSF    FA6.1
0248A:  BTFSC  FA6.1
0248C:  BRA    248A
0248E:  BCF    FA6.2
02490:  MOVF   00,W
02492:  IORWF  FF2,F
02494:  MOVLW  14
02496:  MOVLB  6
02498:  MOVWF  x63
0249A:  MOVLB  0
0249C:  CALL   1056
....................    } 
....................    if(RPT100>2.0){ 
024A0:  MOVLB  6
024A2:  CLRF   x61
024A4:  CLRF   x60
024A6:  CLRF   x5F
024A8:  MOVLW  80
024AA:  MOVWF  x5E
024AC:  MOVFF  5C5,665
024B0:  MOVFF  5C4,664
024B4:  MOVFF  5C3,663
024B8:  MOVFF  5C2,662
024BC:  MOVLB  0
024BE:  CALL   1C46
024C2:  BNC   253E
....................       RPT100=0.5;write_eeprom(25,0);delay_ms(20);write_eeprom(26,5);delay_ms(20); 
024C4:  MOVLB  5
024C6:  CLRF   xC5
024C8:  CLRF   xC4
024CA:  CLRF   xC3
024CC:  MOVLW  7E
024CE:  MOVWF  xC2
024D0:  CLRF   FAA
024D2:  MOVLW  19
024D4:  MOVWF  FA9
024D6:  CLRF   FA8
024D8:  BCF    FA6.6
024DA:  BCF    FA6.7
024DC:  BSF    FA6.2
024DE:  MOVF   FF2,W
024E0:  MOVWF  00
024E2:  BCF    FF2.7
024E4:  MOVLB  F
024E6:  MOVLW  55
024E8:  MOVWF  FA7
024EA:  MOVLW  AA
024EC:  MOVWF  FA7
024EE:  BSF    FA6.1
024F0:  BTFSC  FA6.1
024F2:  BRA    24F0
024F4:  BCF    FA6.2
024F6:  MOVF   00,W
024F8:  IORWF  FF2,F
024FA:  MOVLW  14
024FC:  MOVLB  6
024FE:  MOVWF  x63
02500:  MOVLB  0
02502:  CALL   1056
02506:  CLRF   FAA
02508:  MOVLW  1A
0250A:  MOVWF  FA9
0250C:  MOVLW  05
0250E:  MOVWF  FA8
02510:  BCF    FA6.6
02512:  BCF    FA6.7
02514:  BSF    FA6.2
02516:  MOVF   FF2,W
02518:  MOVWF  00
0251A:  BCF    FF2.7
0251C:  MOVLB  F
0251E:  MOVLW  55
02520:  MOVWF  FA7
02522:  MOVLW  AA
02524:  MOVWF  FA7
02526:  BSF    FA6.1
02528:  BTFSC  FA6.1
0252A:  BRA    2528
0252C:  BCF    FA6.2
0252E:  MOVF   00,W
02530:  IORWF  FF2,F
02532:  MOVLW  14
02534:  MOVLB  6
02536:  MOVWF  x63
02538:  MOVLB  0
0253A:  CALL   1056
....................    } 
....................    if(Source>1){ 
0253E:  MOVLB  5
02540:  MOVF   x96,W
02542:  SUBLW  01
02544:  BC    2584
....................       Source=1;write_eeprom(27,1);delay_ms(20); 
02546:  MOVLW  01
02548:  MOVWF  x96
0254A:  CLRF   FAA
0254C:  MOVLW  1B
0254E:  MOVWF  FA9
02550:  MOVLW  01
02552:  MOVWF  FA8
02554:  BCF    FA6.6
02556:  BCF    FA6.7
02558:  BSF    FA6.2
0255A:  MOVF   FF2,W
0255C:  MOVWF  00
0255E:  BCF    FF2.7
02560:  MOVLB  F
02562:  MOVLW  55
02564:  MOVWF  FA7
02566:  MOVLW  AA
02568:  MOVWF  FA7
0256A:  BSF    FA6.1
0256C:  BTFSC  FA6.1
0256E:  BRA    256C
02570:  BCF    FA6.2
02572:  MOVF   00,W
02574:  IORWF  FF2,F
02576:  MOVLW  14
02578:  MOVLB  6
0257A:  MOVWF  x63
0257C:  MOVLB  0
0257E:  CALL   1056
02582:  MOVLB  5
....................    } 
.................... } 
02584:  MOVLB  0
02586:  GOTO   5DA4 (RETURN)
....................  
.................... void DelayPuls(){ 
....................    delay_ms(2); 
*
037DA:  MOVLW  02
037DC:  MOVLB  6
037DE:  MOVWF  x63
037E0:  MOVLB  0
037E2:  CALL   1056
.................... } 
037E6:  RETLW  00
....................  
.................... short PidePassword(int8 MenuAnt, int8 MenuActual, int8 MenuPost, int8 clave0,int8 clave1, int8 clave2,int8 clave3,short cambia){ 
....................       if(n==0) 
*
03896:  MOVLB  5
03898:  MOVF   x92,F
0389A:  BTFSS  FD8.2
0389C:  BRA    3986
....................       { 
....................          displayContrasena(Contrasena[0],20,30,1);displayContrasena(Contrasena[1],40,30,0); 
0389E:  MOVFF  5D6,664
038A2:  MOVLW  14
038A4:  MOVLB  6
038A6:  MOVWF  x65
038A8:  MOVLW  1E
038AA:  MOVWF  x66
038AC:  MOVLW  01
038AE:  MOVWF  x67
038B0:  MOVLB  0
038B2:  RCALL  371C
038B4:  MOVFF  5D7,664
038B8:  MOVLW  28
038BA:  MOVLB  6
038BC:  MOVWF  x65
038BE:  MOVLW  1E
038C0:  MOVWF  x66
038C2:  CLRF   x67
038C4:  MOVLB  0
038C6:  RCALL  371C
....................          displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
038C8:  MOVFF  5D8,664
038CC:  MOVLW  3C
038CE:  MOVLB  6
038D0:  MOVWF  x65
038D2:  MOVLW  1E
038D4:  MOVWF  x66
038D6:  CLRF   x67
038D8:  MOVLB  0
038DA:  RCALL  371C
038DC:  MOVFF  5D6,664
038E0:  MOVLW  50
038E2:  MOVLB  6
038E4:  MOVWF  x65
038E6:  MOVLW  1E
038E8:  MOVWF  x66
038EA:  CLRF   x67
038EC:  MOVLB  0
038EE:  RCALL  371C
....................          if(!cambia){ 
038F0:  MOVLB  6
038F2:  MOVF   x61,F
038F4:  BNZ   393E
....................             strcpy(Menus.Letra,"Clave"); 
038F6:  MOVLW  06
038F8:  MOVWF  FEA
038FA:  MOVLW  3A
038FC:  MOVWF  FE9
038FE:  MOVFF  FF2,662
03902:  BCF    FF2.7
03904:  MOVLW  00
03906:  MOVLB  0
03908:  CALL   07F0
0390C:  TBLRD*-
0390E:  TBLRD*+
03910:  MOVF   FF5,W
03912:  MOVWF  FEE
03914:  IORLW  00
03916:  BNZ   390E
03918:  MOVLB  6
0391A:  BTFSC  x62.7
0391C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,20,0,1,3); 
0391E:  MOVLW  06
03920:  MOVWF  x63
03922:  MOVLW  3A
03924:  MOVWF  x62
03926:  MOVLW  14
03928:  MOVWF  x64
0392A:  CLRF   x65
0392C:  MOVLW  01
0392E:  MOVWF  x66
03930:  MOVLW  03
03932:  MOVWF  x67
03934:  MOVLB  0
03936:  CALL   2BEE
....................          }else{ 
0393A:  BRA    3980
0393C:  MOVLB  6
....................             strcpy(Menus.Letra,"Clave Nueva"); 
0393E:  MOVLW  06
03940:  MOVWF  FEA
03942:  MOVLW  3A
03944:  MOVWF  FE9
03946:  MOVFF  FF2,662
0394A:  BCF    FF2.7
0394C:  MOVLW  00
0394E:  MOVLB  0
03950:  CALL   0814
03954:  TBLRD*-
03956:  TBLRD*+
03958:  MOVF   FF5,W
0395A:  MOVWF  FEE
0395C:  IORLW  00
0395E:  BNZ   3956
03960:  MOVLB  6
03962:  BTFSC  x62.7
03964:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);   
03966:  MOVLW  06
03968:  MOVWF  x63
0396A:  MOVLW  3A
0396C:  MOVWF  x62
0396E:  CLRF   x64
03970:  CLRF   x65
03972:  MOVLW  01
03974:  MOVWF  x66
03976:  MOVLW  02
03978:  MOVWF  x67
0397A:  MOVLB  0
0397C:  CALL   2BEE
....................          } 
....................          n=1; 
03980:  MOVLW  01
03982:  MOVLB  5
03984:  MOVWF  x92
....................       } 
....................        
....................       if(UP){ 
03986:  BSF    F92.4
03988:  BTFSC  F80.4
0398A:  BRA    3A54
....................          if(Flanco == 0){ 
0398C:  BTFSC  x87.1
0398E:  BRA    3A52
....................             Flanco = 1;DelayPuls(); 
03990:  BSF    x87.1
03992:  MOVLB  0
03994:  RCALL  37DA
....................             for(i=1;i<=4;i++){ 
03996:  MOVLW  01
03998:  MOVLB  5
0399A:  MOVWF  x99
0399C:  MOVF   x99,W
0399E:  SUBLW  04
039A0:  BNC   3A52
....................                if(unidad==i){ 
039A2:  MOVF   x99,W
039A4:  SUBWF  x98,W
039A6:  BNZ   3A1C
....................                   Contrasena[i-1]++; 
039A8:  MOVLW  01
039AA:  SUBWF  x99,W
039AC:  CLRF   03
039AE:  ADDLW  D6
039B0:  MOVWF  FE9
039B2:  MOVLW  05
039B4:  ADDWFC 03,W
039B6:  MOVWF  FEA
039B8:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9){ 
039BA:  MOVLW  01
039BC:  SUBWF  x99,W
039BE:  CLRF   03
039C0:  ADDLW  D6
039C2:  MOVWF  FE9
039C4:  MOVLW  05
039C6:  ADDWFC 03,W
039C8:  MOVWF  FEA
039CA:  BTFSC  FEF.7
039CC:  BRA    39E6
039CE:  MOVF   FEF,W
039D0:  SUBLW  09
039D2:  BC    39E6
....................                      Contrasena[i-1]=0; 
039D4:  MOVLW  01
039D6:  SUBWF  x99,W
039D8:  CLRF   03
039DA:  ADDLW  D6
039DC:  MOVWF  FE9
039DE:  MOVLW  05
039E0:  ADDWFC 03,W
039E2:  MOVWF  FEA
039E4:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
039E6:  MOVLW  01
039E8:  SUBWF  x99,W
039EA:  CLRF   03
039EC:  ADDLW  D6
039EE:  MOVWF  FE9
039F0:  MOVLW  05
039F2:  ADDWFC 03,W
039F4:  MOVWF  FEA
039F6:  MOVFF  FEF,662
039FA:  MOVF   x99,W
039FC:  MULLW  14
039FE:  MOVFF  FF3,663
03A02:  MOVLB  6
03A04:  MOVFF  662,664
03A08:  MOVFF  663,665
03A0C:  MOVLW  1E
03A0E:  MOVWF  x66
03A10:  MOVLW  01
03A12:  MOVWF  x67
03A14:  MOVLB  0
03A16:  RCALL  371C
....................                }else{ 
03A18:  BRA    3A4C
03A1A:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
03A1C:  MOVLW  01
03A1E:  SUBWF  x99,W
03A20:  CLRF   03
03A22:  ADDLW  D6
03A24:  MOVWF  FE9
03A26:  MOVLW  05
03A28:  ADDWFC 03,W
03A2A:  MOVWF  FEA
03A2C:  MOVFF  FEF,662
03A30:  MOVF   x99,W
03A32:  MULLW  14
03A34:  MOVFF  FF3,663
03A38:  MOVLB  6
03A3A:  MOVFF  662,664
03A3E:  MOVFF  663,665
03A42:  MOVLW  1E
03A44:  MOVWF  x66
03A46:  CLRF   x67
03A48:  MOVLB  0
03A4A:  RCALL  371C
....................                } 
....................             } 
03A4C:  MOVLB  5
03A4E:  INCF   x99,F
03A50:  BRA    399C
....................          } 
....................       }else{ 
03A52:  BRA    3A56
....................          Flanco = 0; 
03A54:  BCF    x87.1
....................       } 
....................              
....................       if(DOWN){ 
03A56:  BSF    F92.5
03A58:  BTFSC  F80.5
03A5A:  BRA    3B22
....................          if(Flanco2 == 0){ 
03A5C:  BTFSC  x87.3
03A5E:  BRA    3B20
....................             Flanco2 = 1;DelayPuls(); 
03A60:  BSF    x87.3
03A62:  MOVLB  0
03A64:  RCALL  37DA
....................             for(i=1;i<=4;i++){ 
03A66:  MOVLW  01
03A68:  MOVLB  5
03A6A:  MOVWF  x99
03A6C:  MOVF   x99,W
03A6E:  SUBLW  04
03A70:  BNC   3B20
....................                if(unidad==i){ 
03A72:  MOVF   x99,W
03A74:  SUBWF  x98,W
03A76:  BNZ   3AEA
....................                   Contrasena[i-1]--; 
03A78:  MOVLW  01
03A7A:  SUBWF  x99,W
03A7C:  CLRF   03
03A7E:  ADDLW  D6
03A80:  MOVWF  FE9
03A82:  MOVLW  05
03A84:  ADDWFC 03,W
03A86:  MOVWF  FEA
03A88:  DECF   FEF,F
....................                   if(Contrasena[i-1]<0){ 
03A8A:  MOVLW  01
03A8C:  SUBWF  x99,W
03A8E:  CLRF   03
03A90:  ADDLW  D6
03A92:  MOVWF  FE9
03A94:  MOVLW  05
03A96:  ADDWFC 03,W
03A98:  MOVWF  FEA
03A9A:  BTFSC  FEF.7
03A9C:  BRA    3AA0
03A9E:  BRA    3AB4
....................                      Contrasena[i-1]=9; 
03AA0:  MOVLW  01
03AA2:  SUBWF  x99,W
03AA4:  CLRF   03
03AA6:  ADDLW  D6
03AA8:  MOVWF  FE9
03AAA:  MOVLW  05
03AAC:  ADDWFC 03,W
03AAE:  MOVWF  FEA
03AB0:  MOVLW  09
03AB2:  MOVWF  FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
03AB4:  MOVLW  01
03AB6:  SUBWF  x99,W
03AB8:  CLRF   03
03ABA:  ADDLW  D6
03ABC:  MOVWF  FE9
03ABE:  MOVLW  05
03AC0:  ADDWFC 03,W
03AC2:  MOVWF  FEA
03AC4:  MOVFF  FEF,662
03AC8:  MOVF   x99,W
03ACA:  MULLW  14
03ACC:  MOVFF  FF3,663
03AD0:  MOVLB  6
03AD2:  MOVFF  662,664
03AD6:  MOVFF  663,665
03ADA:  MOVLW  1E
03ADC:  MOVWF  x66
03ADE:  MOVLW  01
03AE0:  MOVWF  x67
03AE2:  MOVLB  0
03AE4:  RCALL  371C
....................                }else{ 
03AE6:  BRA    3B1A
03AE8:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
03AEA:  MOVLW  01
03AEC:  SUBWF  x99,W
03AEE:  CLRF   03
03AF0:  ADDLW  D6
03AF2:  MOVWF  FE9
03AF4:  MOVLW  05
03AF6:  ADDWFC 03,W
03AF8:  MOVWF  FEA
03AFA:  MOVFF  FEF,662
03AFE:  MOVF   x99,W
03B00:  MULLW  14
03B02:  MOVFF  FF3,663
03B06:  MOVLB  6
03B08:  MOVFF  662,664
03B0C:  MOVFF  663,665
03B10:  MOVLW  1E
03B12:  MOVWF  x66
03B14:  CLRF   x67
03B16:  MOVLB  0
03B18:  RCALL  371C
....................                } 
....................             }       
03B1A:  MOVLB  5
03B1C:  INCF   x99,F
03B1E:  BRA    3A6C
....................          }      
....................       }else{ 
03B20:  BRA    3B24
....................          Flanco2 = 0; 
03B22:  BCF    x87.3
....................       } 
....................              
....................       if(RIGHT){ 
03B24:  BSF    F96.0
03B26:  BTFSC  F84.0
03B28:  BRA    3BB6
....................          if(Flanco1 == 0){ 
03B2A:  BTFSC  x87.2
03B2C:  BRA    3BB4
....................             Flanco1 = 1;DelayPuls();unidad++; 
03B2E:  BSF    x87.2
03B30:  MOVLB  0
03B32:  RCALL  37DA
03B34:  MOVLB  5
03B36:  INCF   x98,F
....................             for(i=1;i<=4;i++){ 
03B38:  MOVLW  01
03B3A:  MOVWF  x99
03B3C:  MOVF   x99,W
03B3E:  SUBLW  04
03B40:  BNC   3BB4
....................                if(unidad==i){ 
03B42:  MOVF   x99,W
03B44:  SUBWF  x98,W
03B46:  BNZ   3B7E
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
03B48:  MOVLW  01
03B4A:  SUBWF  x99,W
03B4C:  CLRF   03
03B4E:  ADDLW  D6
03B50:  MOVWF  FE9
03B52:  MOVLW  05
03B54:  ADDWFC 03,W
03B56:  MOVWF  FEA
03B58:  MOVFF  FEF,662
03B5C:  MOVF   x99,W
03B5E:  MULLW  14
03B60:  MOVFF  FF3,663
03B64:  MOVLB  6
03B66:  MOVFF  662,664
03B6A:  MOVFF  663,665
03B6E:  MOVLW  1E
03B70:  MOVWF  x66
03B72:  MOVLW  01
03B74:  MOVWF  x67
03B76:  MOVLB  0
03B78:  RCALL  371C
....................                }else{ 
03B7A:  BRA    3BAE
03B7C:  MOVLB  5
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
03B7E:  MOVLW  01
03B80:  SUBWF  x99,W
03B82:  CLRF   03
03B84:  ADDLW  D6
03B86:  MOVWF  FE9
03B88:  MOVLW  05
03B8A:  ADDWFC 03,W
03B8C:  MOVWF  FEA
03B8E:  MOVFF  FEF,662
03B92:  MOVF   x99,W
03B94:  MULLW  14
03B96:  MOVFF  FF3,663
03B9A:  MOVLB  6
03B9C:  MOVFF  662,664
03BA0:  MOVFF  663,665
03BA4:  MOVLW  1E
03BA6:  MOVWF  x66
03BA8:  CLRF   x67
03BAA:  MOVLB  0
03BAC:  RCALL  371C
....................                } 
....................             } 
03BAE:  MOVLB  5
03BB0:  INCF   x99,F
03BB2:  BRA    3B3C
....................          } 
....................       }else{ 
03BB4:  BRA    3BB8
....................          Flanco1 = 0; 
03BB6:  BCF    x87.2
....................       } 
....................        
....................       if(LEFT){ 
03BB8:  BSF    F96.1
03BBA:  BTFSC  F84.1
03BBC:  BRA    3C06
....................          delay_ms(100); 
03BBE:  MOVLW  64
03BC0:  MOVLB  6
03BC2:  MOVWF  x63
03BC4:  MOVLB  0
03BC6:  CALL   1056
....................          if(LEFT){ 
03BCA:  BSF    F96.1
03BCC:  BTFSC  F84.1
03BCE:  BRA    3C04
....................             Menu=MenuAnt;glcd_fillScreen(OFF);n=0;Opcion=1;unidad=1; 
03BD0:  MOVFF  65A,597
03BD4:  MOVLB  6
03BD6:  CLRF   x62
03BD8:  MOVLB  0
03BDA:  CALL   25C0
03BDE:  MOVLB  5
03BE0:  CLRF   x92
03BE2:  MOVLW  01
03BE4:  MOVWF  x9B
03BE6:  MOVWF  x98
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
03BE8:  CLRF   xD6
03BEA:  CLRF   xD7
03BEC:  CLRF   xD8
03BEE:  CLRF   xD9
....................             glcd_fillScreen(OFF);glcd_update(); 
03BF0:  MOVLB  6
03BF2:  CLRF   x62
03BF4:  MOVLB  0
03BF6:  CALL   25C0
03BFA:  CALL   261A
....................             return 1; 
03BFE:  MOVLW  01
03C00:  MOVWF  01
03C02:  BRA    40C8
03C04:  MOVLB  5
....................          } 
....................       } 
....................      
....................       if(unidad>4){ 
03C06:  MOVF   x98,W
03C08:  SUBLW  04
03C0A:  BTFSC  FD8.0
03C0C:  BRA    40CA
....................          glcd_fillScreen(OFF);unidad=1; 
03C0E:  MOVLB  6
03C10:  CLRF   x62
03C12:  MOVLB  0
03C14:  CALL   25C0
03C18:  MOVLW  01
03C1A:  MOVLB  5
03C1C:  MOVWF  x98
....................           
....................          if(!cambia){ 
03C1E:  MOVLB  6
03C20:  MOVF   x61,F
03C22:  BTFSS  FD8.2
03C24:  BRA    3FB2
....................             if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2 && MenuActual==0){ // Si Ingresa clave para reset general del sistema. 
03C26:  MOVLB  5
03C28:  MOVF   xD6,W
03C2A:  SUBLW  03
03C2C:  BTFSS  FD8.2
03C2E:  BRA    3D2A
03C30:  MOVF   xD7,W
03C32:  SUBLW  08
03C34:  BTFSS  FD8.2
03C36:  BRA    3D2A
03C38:  MOVF   xD8,W
03C3A:  SUBLW  09
03C3C:  BNZ   3D2A
03C3E:  MOVF   xD9,W
03C40:  SUBLW  02
03C42:  BNZ   3D2A
03C44:  MOVLB  6
03C46:  MOVF   x5B,F
03C48:  BTFSC  FD8.2
03C4A:  BRA    3C50
03C4C:  MOVLB  5
03C4E:  BRA    3D2A
....................                write_eeprom(4,0);delay_ms(20);write_eeprom(5,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
03C50:  CLRF   FAA
03C52:  MOVLW  04
03C54:  MOVWF  FA9
03C56:  CLRF   FA8
03C58:  BCF    FA6.6
03C5A:  BCF    FA6.7
03C5C:  BSF    FA6.2
03C5E:  MOVF   FF2,W
03C60:  MOVWF  00
03C62:  BCF    FF2.7
03C64:  MOVLB  F
03C66:  MOVLW  55
03C68:  MOVWF  FA7
03C6A:  MOVLW  AA
03C6C:  MOVWF  FA7
03C6E:  BSF    FA6.1
03C70:  BTFSC  FA6.1
03C72:  BRA    3C70
03C74:  BCF    FA6.2
03C76:  MOVF   00,W
03C78:  IORWF  FF2,F
03C7A:  MOVLW  14
03C7C:  MOVLB  6
03C7E:  MOVWF  x63
03C80:  MOVLB  0
03C82:  CALL   1056
03C86:  CLRF   FAA
03C88:  MOVLW  05
03C8A:  MOVWF  FA9
03C8C:  CLRF   FA8
03C8E:  BCF    FA6.6
03C90:  BCF    FA6.7
03C92:  BSF    FA6.2
03C94:  MOVF   FF2,W
03C96:  MOVWF  00
03C98:  BCF    FF2.7
03C9A:  MOVLB  F
03C9C:  MOVLW  55
03C9E:  MOVWF  FA7
03CA0:  MOVLW  AA
03CA2:  MOVWF  FA7
03CA4:  BSF    FA6.1
03CA6:  BTFSC  FA6.1
03CA8:  BRA    3CA6
03CAA:  BCF    FA6.2
03CAC:  MOVF   00,W
03CAE:  IORWF  FF2,F
03CB0:  MOVLW  14
03CB2:  MOVLB  6
03CB4:  MOVWF  x63
03CB6:  MOVLB  0
03CB8:  CALL   1056
....................                write_eeprom(6,0);delay_ms(20);write_eeprom(7,0);delay_ms(20); 
03CBC:  CLRF   FAA
03CBE:  MOVLW  06
03CC0:  MOVWF  FA9
03CC2:  CLRF   FA8
03CC4:  BCF    FA6.6
03CC6:  BCF    FA6.7
03CC8:  BSF    FA6.2
03CCA:  MOVF   FF2,W
03CCC:  MOVWF  00
03CCE:  BCF    FF2.7
03CD0:  MOVLB  F
03CD2:  MOVLW  55
03CD4:  MOVWF  FA7
03CD6:  MOVLW  AA
03CD8:  MOVWF  FA7
03CDA:  BSF    FA6.1
03CDC:  BTFSC  FA6.1
03CDE:  BRA    3CDC
03CE0:  BCF    FA6.2
03CE2:  MOVF   00,W
03CE4:  IORWF  FF2,F
03CE6:  MOVLW  14
03CE8:  MOVLB  6
03CEA:  MOVWF  x63
03CEC:  MOVLB  0
03CEE:  CALL   1056
03CF2:  CLRF   FAA
03CF4:  MOVLW  07
03CF6:  MOVWF  FA9
03CF8:  CLRF   FA8
03CFA:  BCF    FA6.6
03CFC:  BCF    FA6.7
03CFE:  BSF    FA6.2
03D00:  MOVF   FF2,W
03D02:  MOVWF  00
03D04:  BCF    FF2.7
03D06:  MOVLB  F
03D08:  MOVLW  55
03D0A:  MOVWF  FA7
03D0C:  MOVLW  AA
03D0E:  MOVWF  FA7
03D10:  BSF    FA6.1
03D12:  BTFSC  FA6.1
03D14:  BRA    3D12
03D16:  BCF    FA6.2
03D18:  MOVF   00,W
03D1A:  IORWF  FF2,F
03D1C:  MOVLW  14
03D1E:  MOVLB  6
03D20:  MOVWF  x63
03D22:  MOVLB  0
03D24:  CALL   1056
....................                reset_cpu(); 
03D28:  RESET
....................             } 
....................           
....................             if((Contrasena[0]==clave0)&&(Contrasena[1]==clave1)&&(Contrasena[2]==clave2)&&(Contrasena[3]==clave3)){ 
03D2A:  MOVLB  6
03D2C:  MOVF   x5D,W
03D2E:  MOVLB  5
03D30:  SUBWF  xD6,W
03D32:  BTFSS  FD8.2
03D34:  BRA    3E1E
03D36:  MOVLB  6
03D38:  MOVF   x5E,W
03D3A:  MOVLB  5
03D3C:  SUBWF  xD7,W
03D3E:  BNZ   3E1E
03D40:  MOVLB  6
03D42:  MOVF   x5F,W
03D44:  MOVLB  5
03D46:  SUBWF  xD8,W
03D48:  BNZ   3E1E
03D4A:  MOVLB  6
03D4C:  MOVF   x60,W
03D4E:  MOVLB  5
03D50:  SUBWF  xD9,W
03D52:  BNZ   3E1E
....................                glcd_fillScreen(OFF); 
03D54:  MOVLB  6
03D56:  CLRF   x62
03D58:  MOVLB  0
03D5A:  CALL   25C0
....................                strcpy(Menus.Letra,"Clave"); 
03D5E:  MOVLW  06
03D60:  MOVWF  FEA
03D62:  MOVLW  3A
03D64:  MOVWF  FE9
03D66:  MOVFF  FF2,662
03D6A:  BCF    FF2.7
03D6C:  MOVLW  00
03D6E:  CALL   07F0
03D72:  TBLRD*-
03D74:  TBLRD*+
03D76:  MOVF   FF5,W
03D78:  MOVWF  FEE
03D7A:  IORLW  00
03D7C:  BNZ   3D74
03D7E:  MOVLB  6
03D80:  BTFSC  x62.7
03D82:  BSF    FF2.7
....................                displayMenu(Menus.Letra,30,0,0,2); 
03D84:  MOVLW  06
03D86:  MOVWF  x63
03D88:  MOVLW  3A
03D8A:  MOVWF  x62
03D8C:  MOVLW  1E
03D8E:  MOVWF  x64
03D90:  CLRF   x65
03D92:  CLRF   x66
03D94:  MOVLW  02
03D96:  MOVWF  x67
03D98:  MOVLB  0
03D9A:  CALL   2BEE
....................                strcpy(Menus.Letra,"Correcta"); 
03D9E:  MOVLW  06
03DA0:  MOVWF  FEA
03DA2:  MOVLW  3A
03DA4:  MOVWF  FE9
03DA6:  MOVFF  FF2,662
03DAA:  BCF    FF2.7
03DAC:  MOVLW  00
03DAE:  CALL   083E
03DB2:  TBLRD*-
03DB4:  TBLRD*+
03DB6:  MOVF   FF5,W
03DB8:  MOVWF  FEE
03DBA:  IORLW  00
03DBC:  BNZ   3DB4
03DBE:  MOVLB  6
03DC0:  BTFSC  x62.7
03DC2:  BSF    FF2.7
....................                displayMenu(Menus.Letra,15,30,0,2); 
03DC4:  MOVLW  06
03DC6:  MOVWF  x63
03DC8:  MOVLW  3A
03DCA:  MOVWF  x62
03DCC:  MOVLW  0F
03DCE:  MOVWF  x64
03DD0:  MOVLW  1E
03DD2:  MOVWF  x65
03DD4:  CLRF   x66
03DD6:  MOVLW  02
03DD8:  MOVWF  x67
03DDA:  MOVLB  0
03DDC:  CALL   2BEE
....................                Menu=MenuPost;glcd_update();delay_ms(1000);glcd_fillScreen(OFF); 
03DE0:  MOVFF  65C,597
03DE4:  CALL   261A
03DE8:  MOVLW  04
03DEA:  MOVLB  6
03DEC:  MOVWF  x62
03DEE:  MOVLW  FA
03DF0:  MOVWF  x63
03DF2:  MOVLB  0
03DF4:  CALL   1056
03DF8:  MOVLB  6
03DFA:  DECFSZ x62,F
03DFC:  BRA    3DEE
03DFE:  CLRF   x62
03E00:  MOVLB  0
03E02:  CALL   25C0
....................                Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
03E06:  MOVLB  5
03E08:  CLRF   xD6
03E0A:  CLRF   xD7
03E0C:  CLRF   xD8
03E0E:  CLRF   xD9
....................                n=0; 
03E10:  CLRF   x92
....................                return 1; 
03E12:  MOVLW  01
03E14:  MOVWF  01
03E16:  MOVLB  0
03E18:  BRA    40C8
....................             }else{ 
03E1A:  BRA    3FAE
03E1C:  MOVLB  5
....................                glcd_fillScreen(OFF); 
03E1E:  MOVLB  6
03E20:  CLRF   x62
03E22:  MOVLB  0
03E24:  CALL   25C0
....................                strcpy(Menus.Letra,"Clave"); 
03E28:  MOVLW  06
03E2A:  MOVWF  FEA
03E2C:  MOVLW  3A
03E2E:  MOVWF  FE9
03E30:  MOVFF  FF2,662
03E34:  BCF    FF2.7
03E36:  MOVLW  00
03E38:  CALL   07F0
03E3C:  TBLRD*-
03E3E:  TBLRD*+
03E40:  MOVF   FF5,W
03E42:  MOVWF  FEE
03E44:  IORLW  00
03E46:  BNZ   3E3E
03E48:  MOVLB  6
03E4A:  BTFSC  x62.7
03E4C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,30,0,0,2); 
03E4E:  MOVLW  06
03E50:  MOVWF  x63
03E52:  MOVLW  3A
03E54:  MOVWF  x62
03E56:  MOVLW  1E
03E58:  MOVWF  x64
03E5A:  CLRF   x65
03E5C:  CLRF   x66
03E5E:  MOVLW  02
03E60:  MOVWF  x67
03E62:  MOVLB  0
03E64:  CALL   2BEE
....................                strcpy(Menus.Letra,"Incorrecta"); 
03E68:  MOVLW  06
03E6A:  MOVWF  FEA
03E6C:  MOVLW  3A
03E6E:  MOVWF  FE9
03E70:  MOVFF  FF2,662
03E74:  BCF    FF2.7
03E76:  MOVLW  00
03E78:  CALL   0866
03E7C:  TBLRD*-
03E7E:  TBLRD*+
03E80:  MOVF   FF5,W
03E82:  MOVWF  FEE
03E84:  IORLW  00
03E86:  BNZ   3E7E
03E88:  MOVLB  6
03E8A:  BTFSC  x62.7
03E8C:  BSF    FF2.7
....................                displayMenu(Menus.Letra,0,30,0,2); 
03E8E:  MOVLW  06
03E90:  MOVWF  x63
03E92:  MOVLW  3A
03E94:  MOVWF  x62
03E96:  CLRF   x64
03E98:  MOVLW  1E
03E9A:  MOVWF  x65
03E9C:  CLRF   x66
03E9E:  MOVLW  02
03EA0:  MOVWF  x67
03EA2:  MOVLB  0
03EA4:  CALL   2BEE
....................                unidad=1;glcd_update();delay_ms(1000);Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0;glcd_fillScreen(OFF); 
03EA8:  MOVLW  01
03EAA:  MOVLB  5
03EAC:  MOVWF  x98
03EAE:  MOVLB  0
03EB0:  CALL   261A
03EB4:  MOVLW  04
03EB6:  MOVLB  6
03EB8:  MOVWF  x62
03EBA:  MOVLW  FA
03EBC:  MOVWF  x63
03EBE:  MOVLB  0
03EC0:  CALL   1056
03EC4:  MOVLB  6
03EC6:  DECFSZ x62,F
03EC8:  BRA    3EBA
03ECA:  MOVLB  5
03ECC:  CLRF   xD6
03ECE:  CLRF   xD7
03ED0:  CLRF   xD8
03ED2:  CLRF   xD9
03ED4:  MOVLB  6
03ED6:  CLRF   x62
03ED8:  MOVLB  0
03EDA:  CALL   25C0
....................                glcd_rect(0, 0, 127, 25, YES, ON);strcpy(Menus.Letra,"Clave");glcd_text57(25, 1, Menus.Letra, 3, OFF);displayContrasena(Contrasena[0],20,30,1); 
03EDE:  MOVLB  6
03EE0:  CLRF   x73
03EE2:  CLRF   x74
03EE4:  MOVLW  7F
03EE6:  MOVWF  x75
03EE8:  MOVLW  19
03EEA:  MOVWF  x76
03EEC:  MOVLW  01
03EEE:  MOVWF  x77
03EF0:  MOVWF  x78
03EF2:  MOVLB  0
03EF4:  CALL   2B2C
03EF8:  MOVLW  06
03EFA:  MOVWF  FEA
03EFC:  MOVLW  3A
03EFE:  MOVWF  FE9
03F00:  MOVFF  FF2,662
03F04:  BCF    FF2.7
03F06:  MOVLW  00
03F08:  CALL   07F0
03F0C:  TBLRD*-
03F0E:  TBLRD*+
03F10:  MOVF   FF5,W
03F12:  MOVWF  FEE
03F14:  IORLW  00
03F16:  BNZ   3F0E
03F18:  MOVLB  6
03F1A:  BTFSC  x62.7
03F1C:  BSF    FF2.7
03F1E:  MOVLW  19
03F20:  MOVWF  x73
03F22:  MOVLW  01
03F24:  MOVWF  x74
03F26:  MOVLW  06
03F28:  MOVWF  x76
03F2A:  MOVLW  3A
03F2C:  MOVWF  x75
03F2E:  MOVLW  03
03F30:  MOVWF  x77
03F32:  CLRF   x78
03F34:  MOVLB  0
03F36:  CALL   2836
03F3A:  MOVFF  5D6,664
03F3E:  MOVLW  14
03F40:  MOVLB  6
03F42:  MOVWF  x65
03F44:  MOVLW  1E
03F46:  MOVWF  x66
03F48:  MOVLW  01
03F4A:  MOVWF  x67
03F4C:  MOVLB  0
03F4E:  CALL   371C
....................                displayContrasena(Contrasena[1],40,30,0);displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
03F52:  MOVFF  5D7,664
03F56:  MOVLW  28
03F58:  MOVLB  6
03F5A:  MOVWF  x65
03F5C:  MOVLW  1E
03F5E:  MOVWF  x66
03F60:  CLRF   x67
03F62:  MOVLB  0
03F64:  CALL   371C
03F68:  MOVFF  5D8,664
03F6C:  MOVLW  3C
03F6E:  MOVLB  6
03F70:  MOVWF  x65
03F72:  MOVLW  1E
03F74:  MOVWF  x66
03F76:  CLRF   x67
03F78:  MOVLB  0
03F7A:  CALL   371C
03F7E:  MOVFF  5D6,664
03F82:  MOVLW  50
03F84:  MOVLB  6
03F86:  MOVWF  x65
03F88:  MOVLW  1E
03F8A:  MOVWF  x66
03F8C:  CLRF   x67
03F8E:  MOVLB  0
03F90:  CALL   371C
....................                Menu=MenuAnt;glcd_fillScreen(OFF);n=0; 
03F94:  MOVFF  65A,597
03F98:  MOVLB  6
03F9A:  CLRF   x62
03F9C:  MOVLB  0
03F9E:  CALL   25C0
03FA2:  MOVLB  5
03FA4:  CLRF   x92
....................                return 0; 
03FA6:  MOVLW  00
03FA8:  MOVWF  01
03FAA:  MOVLB  0
03FAC:  BRA    40C8
....................             } 
....................          }else{ 
03FAE:  BRA    40C8
03FB0:  MOVLB  6
....................             Opcion=1;unidad=1; 
03FB2:  MOVLW  01
03FB4:  MOVLB  5
03FB6:  MOVWF  x9B
03FB8:  MOVWF  x98
....................             write_eeprom(4,Contrasena[0]); 
03FBA:  CLRF   FAA
03FBC:  MOVLW  04
03FBE:  MOVWF  FA9
03FC0:  MOVFF  5D6,FA8
03FC4:  BCF    FA6.6
03FC6:  BCF    FA6.7
03FC8:  BSF    FA6.2
03FCA:  MOVF   FF2,W
03FCC:  MOVWF  00
03FCE:  BCF    FF2.7
03FD0:  MOVLB  F
03FD2:  MOVLW  55
03FD4:  MOVWF  FA7
03FD6:  MOVLW  AA
03FD8:  MOVWF  FA7
03FDA:  BSF    FA6.1
03FDC:  BTFSC  FA6.1
03FDE:  BRA    3FDC
03FE0:  BCF    FA6.2
03FE2:  MOVF   00,W
03FE4:  IORWF  FF2,F
....................             delay_ms(50);    
03FE6:  MOVLW  32
03FE8:  MOVLB  6
03FEA:  MOVWF  x63
03FEC:  MOVLB  0
03FEE:  CALL   1056
....................             write_eeprom(5,Contrasena[1]); 
03FF2:  CLRF   FAA
03FF4:  MOVLW  05
03FF6:  MOVWF  FA9
03FF8:  MOVFF  5D7,FA8
03FFC:  BCF    FA6.6
03FFE:  BCF    FA6.7
04000:  BSF    FA6.2
04002:  MOVF   FF2,W
04004:  MOVWF  00
04006:  BCF    FF2.7
04008:  MOVLB  F
0400A:  MOVLW  55
0400C:  MOVWF  FA7
0400E:  MOVLW  AA
04010:  MOVWF  FA7
04012:  BSF    FA6.1
04014:  BTFSC  FA6.1
04016:  BRA    4014
04018:  BCF    FA6.2
0401A:  MOVF   00,W
0401C:  IORWF  FF2,F
....................             delay_ms(50);    
0401E:  MOVLW  32
04020:  MOVLB  6
04022:  MOVWF  x63
04024:  MOVLB  0
04026:  CALL   1056
....................             write_eeprom(6,Contrasena[2]); 
0402A:  CLRF   FAA
0402C:  MOVLW  06
0402E:  MOVWF  FA9
04030:  MOVFF  5D8,FA8
04034:  BCF    FA6.6
04036:  BCF    FA6.7
04038:  BSF    FA6.2
0403A:  MOVF   FF2,W
0403C:  MOVWF  00
0403E:  BCF    FF2.7
04040:  MOVLB  F
04042:  MOVLW  55
04044:  MOVWF  FA7
04046:  MOVLW  AA
04048:  MOVWF  FA7
0404A:  BSF    FA6.1
0404C:  BTFSC  FA6.1
0404E:  BRA    404C
04050:  BCF    FA6.2
04052:  MOVF   00,W
04054:  IORWF  FF2,F
....................             delay_ms(50);    
04056:  MOVLW  32
04058:  MOVLB  6
0405A:  MOVWF  x63
0405C:  MOVLB  0
0405E:  CALL   1056
....................             write_eeprom(7,Contrasena[3]); 
04062:  CLRF   FAA
04064:  MOVLW  07
04066:  MOVWF  FA9
04068:  MOVFF  5D9,FA8
0406C:  BCF    FA6.6
0406E:  BCF    FA6.7
04070:  BSF    FA6.2
04072:  MOVF   FF2,W
04074:  MOVWF  00
04076:  BCF    FF2.7
04078:  MOVLB  F
0407A:  MOVLW  55
0407C:  MOVWF  FA7
0407E:  MOVLW  AA
04080:  MOVWF  FA7
04082:  BSF    FA6.1
04084:  BTFSC  FA6.1
04086:  BRA    4084
04088:  BCF    FA6.2
0408A:  MOVF   00,W
0408C:  IORWF  FF2,F
....................             delay_ms(1000);glcd_fillScreen(OFF);Menu=MenuAnt; 
0408E:  MOVLW  04
04090:  MOVLB  6
04092:  MOVWF  x62
04094:  MOVLW  FA
04096:  MOVWF  x63
04098:  MOVLB  0
0409A:  CALL   1056
0409E:  MOVLB  6
040A0:  DECFSZ x62,F
040A2:  BRA    4094
040A4:  CLRF   x62
040A6:  MOVLB  0
040A8:  CALL   25C0
040AC:  MOVFF  65A,597
....................             n=0; 
040B0:  MOVLB  5
040B2:  CLRF   x92
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
040B4:  CLRF   xD6
040B6:  CLRF   xD7
040B8:  CLRF   xD8
040BA:  CLRF   xD9
....................             MensajeAlmacenado(); 
040BC:  MOVLB  0
040BE:  CALL   37E8
....................             return 0; 
040C2:  MOVLW  00
040C4:  MOVWF  01
040C6:  BRA    40C8
040C8:  MOVLB  5
....................          } 
....................       } 
.................... } 
040CA:  MOVLB  0
040CC:  RETLW  00
....................  
.................... void CuentaTiempo(){ 
....................       if(tinicio>=60) 
*
0580E:  MOVLB  5
05810:  MOVF   xA7,F
05812:  BNZ   581A
05814:  MOVF   xA6,W
05816:  SUBLW  3B
05818:  BC    5856
....................       { 
....................          tinicio=0; 
0581A:  CLRF   xA7
0581C:  CLRF   xA6
....................          Testerilizacion[0]++; 
0581E:  INCF   xCE,F
....................          if(Testerilizacion[0]>9) 
05820:  BTFSC  xCE.7
05822:  BRA    582E
05824:  MOVF   xCE,W
05826:  SUBLW  09
05828:  BC    582E
....................          { 
....................             Testerilizacion[0]=0; 
0582A:  CLRF   xCE
....................             Testerilizacion[1]++; 
0582C:  INCF   xCF,F
....................          } 
....................          if(Testerilizacion[1]>5) 
0582E:  BTFSC  xCF.7
05830:  BRA    583C
05832:  MOVF   xCF,W
05834:  SUBLW  05
05836:  BC    583C
....................          { 
....................             Testerilizacion[1]=0; 
05838:  CLRF   xCF
....................             Testerilizacion[2]++; 
0583A:  INCF   xD0,F
....................          } 
....................          if(Testerilizacion[2]>9) 
0583C:  BTFSC  xD0.7
0583E:  BRA    584A
05840:  MOVF   xD0,W
05842:  SUBLW  09
05844:  BC    584A
....................          { 
....................             Testerilizacion[2]=0; 
05846:  CLRF   xD0
....................             Testerilizacion[3]++; 
05848:  INCF   xD1,F
....................          } 
....................          if(Testerilizacion[3]>9) 
0584A:  BTFSC  xD1.7
0584C:  BRA    5856
0584E:  MOVF   xD1,W
05850:  SUBLW  09
05852:  BC    5856
....................          { 
....................             Testerilizacion[3]=0; 
05854:  CLRF   xD1
....................          } 
....................       } 
.................... } 
05856:  MOVLB  0
05858:  GOTO   7BD8 (RETURN)
....................  
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    //set_timer1(45612);  // 5 ms 5536 , Posiblemente cargar con 22144 debido a F=12MHz 
....................    set_timer1(40536); 
*
00FBE:  MOVLW  9E
00FC0:  MOVWF  FCF
00FC2:  MOVLW  58
00FC4:  MOVWF  FCE
....................    tiempos++; 
00FC6:  MOVLB  5
00FC8:  INCF   xA0,F
00FCA:  BTFSC  FD8.2
00FCC:  INCF   xA1,F
....................    tiempos3++; 
00FCE:  INCF   xA2,F
00FD0:  BTFSC  FD8.2
00FD2:  INCF   xA3,F
....................    tiempoctrl++; 
00FD4:  INCF   xA4,F
00FD6:  BTFSC  FD8.2
00FD8:  INCF   xA5,F
....................     
....................    if(tiempos3>=200) 
00FDA:  MOVF   xA3,F
00FDC:  BNZ   0FE4
00FDE:  MOVF   xA2,W
00FE0:  SUBLW  C7
00FE2:  BC    0FE8
....................       Lectura2=1; 
00FE4:  MOVLW  01
00FE6:  MOVWF  x8F
....................     
....................    if(Controlando==1){ 
00FE8:  DECFSZ x90,W
00FEA:  BRA    1016
....................       if(tiempoctrl<Tp) // Si el tiempo es menor o igual al tiempo de control se enciende la resistencia de lo contrario se apaga. 
00FEC:  MOVF   xA5,W
00FEE:  SUBWF  xAD,W
00FF0:  BNC   1000
00FF2:  BNZ   0FFA
00FF4:  MOVF   xAC,W
00FF6:  SUBWF  xA4,W
00FF8:  BC    1000
....................          SSR_on; 
00FFA:  BCF    F8B.2
00FFC:  BCF    F94.2
....................       else          
00FFE:  BRA    1004
....................          SSR_off; 
01000:  BSF    F8B.2
01002:  BCF    F94.2
....................        
....................       if(tiempoctrl>=Tc) // Si el tiempo de control es mayor al tiempo de ciclo se reinicia tiempo de control 
01004:  MOVF   xAF,W
01006:  SUBWF  xA5,W
01008:  BNC   1016
0100A:  BNZ   1012
0100C:  MOVF   xAE,W
0100E:  SUBWF  xA4,W
01010:  BNC   1016
....................          tiempoctrl=0; // tiempoctrl incrementa una unidad cada 5ms, por eso se dividen los tiempos por 0.005. 
01012:  CLRF   xA5
01014:  CLRF   xA4
....................    } 
....................      
....................    if(tiempos>=200){  // 12000 para que incremente cada minuto, 200para que incremente cada segundo. 
01016:  MOVF   xA1,F
01018:  BNZ   1020
0101A:  MOVF   xA0,W
0101C:  SUBLW  C7
0101E:  BC    104E
....................       tiempos=0;Lectura=1;tiemporeset++;TiempoControl++;tiemporecta++; 
01020:  CLRF   xA1
01022:  CLRF   xA0
01024:  BSF    x87.5
01026:  INCF   x95,F
01028:  INCF   xB0,F
0102A:  BTFSC  FD8.2
0102C:  INCF   xB1,F
0102E:  INCF   x8D,F
....................     
....................       if(flag_setpoint==1) 
01030:  BTFSS  x93.6
01032:  BRA    103A
....................          tiemposetpoint++; 
01034:  INCF   xAA,F
01036:  BTFSC  FD8.2
01038:  INCF   xAB,F
....................           
....................       if(tiempo_esterilizacion==1)    
0103A:  DECFSZ x9C,W
0103C:  BRA    1044
....................          tinicio++; 
0103E:  INCF   xA6,F
01040:  BTFSC  FD8.2
01042:  INCF   xA7,F
....................        
....................       if(flag_tiempocalentamiento==1) 
01044:  BTFSS  x93.4
01046:  BRA    104E
....................          tiempocalentamiento++; 
01048:  INCF   xA8,F
0104A:  BTFSC  FD8.2
0104C:  INCF   xA9,F
....................    }         
.................... } 
....................  
0104E:  BCF    F9E.0
01050:  MOVLB  0
01052:  GOTO   0058
.................... void main() 
.................... { 
*
058D6:  CLRF   FF8
058D8:  BCF    FD0.7
058DA:  BSF    07.7
058DC:  CLRF   FEA
058DE:  CLRF   FE9
058E0:  MOVLB  5
058E2:  BCF    x87.0
058E4:  CLRF   x88
058E6:  CLRF   x89
058E8:  CLRF   x8A
058EA:  CLRF   x8B
058EC:  MOVLW  0A
058EE:  MOVWF  x8C
058F0:  CLRF   x8D
058F2:  CLRF   x8E
058F4:  CLRF   x8F
058F6:  CLRF   x90
058F8:  MOVWF  x91
058FA:  CLRF   x92
058FC:  BCF    x87.1
058FE:  BCF    x87.2
05900:  BCF    x87.3
05902:  BSF    x87.4
05904:  BCF    x87.5
05906:  BCF    x87.6
05908:  BCF    x87.7
0590A:  BCF    x93.0
0590C:  BCF    x93.1
0590E:  BCF    x93.2
05910:  BCF    x93.3
05912:  BCF    x93.4
05914:  BCF    x93.5
05916:  BCF    x93.6
05918:  BCF    x93.7
0591A:  CLRF   x94
0591C:  CLRF   x95
0591E:  MOVLW  01
05920:  MOVWF  x96
05922:  CLRF   x97
05924:  MOVWF  x98
05926:  CLRF   x99
05928:  CLRF   x9A
0592A:  MOVWF  x9B
0592C:  CLRF   x9C
0592E:  CLRF   x9D
05930:  CLRF   x9E
05932:  CLRF   x9F
05934:  CLRF   xA1
05936:  CLRF   xA0
05938:  CLRF   xA3
0593A:  CLRF   xA2
0593C:  CLRF   xA5
0593E:  CLRF   xA4
05940:  CLRF   xA7
05942:  CLRF   xA6
05944:  CLRF   xA9
05946:  CLRF   xA8
05948:  CLRF   xAB
0594A:  CLRF   xAA
0594C:  CLRF   xAD
0594E:  CLRF   xAC
05950:  CLRF   xAF
05952:  CLRF   xAE
05954:  CLRF   xB1
05956:  CLRF   xB0
05958:  CLRF   xB5
0595A:  CLRF   xB4
0595C:  CLRF   xB3
0595E:  CLRF   xB2
05960:  CLRF   xB9
05962:  CLRF   xB8
05964:  CLRF   xB7
05966:  CLRF   xB6
05968:  CLRF   xBD
0596A:  CLRF   xBC
0596C:  CLRF   xBB
0596E:  CLRF   xBA
05970:  CLRF   xC1
05972:  CLRF   xC0
05974:  CLRF   xBF
05976:  CLRF   xBE
05978:  CLRF   xC5
0597A:  CLRF   xC4
0597C:  CLRF   xC3
0597E:  CLRF   xC2
05980:  CLRF   xC9
05982:  CLRF   xC8
05984:  CLRF   xC7
05986:  CLRF   xC6
05988:  CLRF   xCD
0598A:  CLRF   xCC
0598C:  CLRF   xCB
0598E:  CLRF   xCA
05990:  CLRF   xE1
05992:  CLRF   xE0
05994:  CLRF   xDF
05996:  CLRF   xDE
05998:  CLRF   xE5
0599A:  MOVLW  40
0599C:  MOVWF  xE4
0599E:  MOVLW  1C
059A0:  MOVWF  xE3
059A2:  MOVLW  8C
059A4:  MOVWF  xE2
059A6:  CLRF   xED
059A8:  CLRF   xEC
059AA:  MOVLW  20
059AC:  MOVWF  xEB
059AE:  MOVLW  82
059B0:  MOVWF  xEA
059B2:  CLRF   xF1
059B4:  CLRF   xF0
059B6:  CLRF   xEF
059B8:  CLRF   xEE
059BA:  CLRF   xF5
059BC:  CLRF   xF4
059BE:  CLRF   xF3
059C0:  CLRF   xF2
059C2:  CLRF   xF9
059C4:  CLRF   xF8
059C6:  CLRF   xF7
059C8:  CLRF   xF6
059CA:  CLRF   xFD
059CC:  CLRF   xFC
059CE:  CLRF   xFB
059D0:  CLRF   xFA
059D2:  MOVLB  6
059D4:  CLRF   x01
059D6:  CLRF   x00
059D8:  MOVLB  5
059DA:  CLRF   xFF
059DC:  CLRF   xFE
059DE:  MOVLB  6
059E0:  CLRF   x05
059E2:  CLRF   x04
059E4:  CLRF   x03
059E6:  MOVLW  80
059E8:  MOVWF  x02
059EA:  CLRF   x09
059EC:  CLRF   x08
059EE:  CLRF   x07
059F0:  MOVLW  7E
059F2:  MOVWF  x06
059F4:  CLRF   x0D
059F6:  CLRF   x0C
059F8:  MOVLW  32
059FA:  MOVWF  x0B
059FC:  MOVLW  84
059FE:  MOVWF  x0A
05A00:  CLRF   x11
05A02:  CLRF   x10
05A04:  CLRF   x0F
05A06:  CLRF   x0E
05A08:  CLRF   x15
05A0A:  CLRF   x14
05A0C:  CLRF   x13
05A0E:  CLRF   x12
05A10:  CLRF   x19
05A12:  CLRF   x18
05A14:  CLRF   x17
05A16:  CLRF   x16
05A18:  CLRF   x1D
05A1A:  CLRF   x1C
05A1C:  CLRF   x1B
05A1E:  CLRF   x1A
05A20:  CLRF   x21
05A22:  CLRF   x20
05A24:  CLRF   x1F
05A26:  CLRF   x1E
05A28:  CLRF   x25
05A2A:  CLRF   x24
05A2C:  CLRF   x23
05A2E:  CLRF   x22
05A30:  CLRF   x29
05A32:  CLRF   x28
05A34:  CLRF   x27
05A36:  CLRF   x26
05A38:  CLRF   x2D
05A3A:  CLRF   x2C
05A3C:  CLRF   x2B
05A3E:  CLRF   x2A
05A40:  MOVLW  E0
05A42:  MOVWF  x31
05A44:  MOVLW  2D
05A46:  MOVWF  x30
05A48:  MOVLW  10
05A4A:  MOVWF  x2F
05A4C:  MOVLW  75
05A4E:  MOVWF  x2E
05A50:  MOVLW  FF
05A52:  MOVWF  x35
05A54:  MOVLW  21
05A56:  MOVWF  x34
05A58:  MOVLW  15
05A5A:  MOVWF  x33
05A5C:  MOVLW  80
05A5E:  MOVWF  x32
05A60:  MOVLW  82
05A62:  MOVWF  x39
05A64:  MOVLW  12
05A66:  MOVWF  x38
05A68:  MOVLW  F4
05A6A:  MOVWF  x37
05A6C:  MOVLW  86
05A6E:  MOVWF  x36
05A70:  MOVF   FC1,W
05A72:  ANDLW  C0
05A74:  IORLW  0F
05A76:  MOVWF  FC1
05A78:  MOVLW  07
05A7A:  MOVWF  FB4
05A7C:  MOVLB  4
05A7E:  CLRF   x17
05A80:  CLRF   x18
05A82:  CLRF   x19
05A84:  CLRF   x1A
05A86:  CLRF   x1B
05A88:  CLRF   x1C
05A8A:  CLRF   x1D
05A8C:  CLRF   x1E
05A8E:  CLRF   x1F
05A90:  CLRF   x20
05A92:  CLRF   x21
05A94:  CLRF   x22
05A96:  CLRF   x23
05A98:  CLRF   x24
05A9A:  CLRF   x25
05A9C:  CLRF   x26
05A9E:  CLRF   x27
05AA0:  CLRF   x28
05AA2:  CLRF   x29
05AA4:  CLRF   x2A
05AA6:  CLRF   x2B
05AA8:  CLRF   x2C
05AAA:  CLRF   x2D
05AAC:  CLRF   x2E
05AAE:  CLRF   x2F
05AB0:  CLRF   x30
05AB2:  CLRF   x31
05AB4:  CLRF   x32
05AB6:  CLRF   x33
05AB8:  CLRF   x34
05ABA:  CLRF   x35
05ABC:  CLRF   x36
05ABE:  CLRF   x37
05AC0:  CLRF   x38
05AC2:  CLRF   x39
05AC4:  CLRF   x3A
05AC6:  CLRF   x3B
05AC8:  CLRF   x3C
05ACA:  CLRF   x3D
05ACC:  CLRF   x3E
05ACE:  CLRF   x3F
05AD0:  CLRF   x40
05AD2:  CLRF   x41
05AD4:  CLRF   x42
05AD6:  CLRF   x43
05AD8:  CLRF   x44
05ADA:  CLRF   x45
05ADC:  CLRF   x46
05ADE:  CLRF   x47
05AE0:  CLRF   x48
05AE2:  CLRF   x49
05AE4:  CLRF   x4A
05AE6:  CLRF   x4B
05AE8:  CLRF   x4C
05AEA:  CLRF   x4D
05AEC:  CLRF   x4E
05AEE:  CLRF   x4F
05AF0:  CLRF   x50
05AF2:  CLRF   x51
05AF4:  CLRF   x52
05AF6:  CLRF   x53
05AF8:  CLRF   x54
05AFA:  CLRF   x55
05AFC:  CLRF   x56
05AFE:  CLRF   x57
05B00:  CLRF   x58
05B02:  CLRF   x59
05B04:  CLRF   x5A
05B06:  CLRF   x5B
05B08:  CLRF   x5C
05B0A:  CLRF   x5D
05B0C:  CLRF   x5E
05B0E:  CLRF   x5F
05B10:  CLRF   x60
05B12:  CLRF   x61
05B14:  CLRF   x62
05B16:  CLRF   x63
05B18:  CLRF   x64
05B1A:  CLRF   x65
05B1C:  CLRF   x66
05B1E:  CLRF   x67
05B20:  CLRF   x68
05B22:  CLRF   x69
05B24:  CLRF   x6A
05B26:  CLRF   x6B
05B28:  CLRF   x6C
05B2A:  CLRF   x6D
05B2C:  CLRF   x6E
05B2E:  CLRF   x6F
05B30:  CLRF   x70
05B32:  CLRF   x71
05B34:  CLRF   x72
05B36:  CLRF   x73
05B38:  CLRF   x74
05B3A:  CLRF   x75
05B3C:  CLRF   x76
05B3E:  CLRF   x77
05B40:  CLRF   x78
05B42:  CLRF   x79
05B44:  CLRF   x7A
05B46:  CLRF   x7B
05B48:  CLRF   x7C
05B4A:  CLRF   x7D
05B4C:  CLRF   x7E
05B4E:  CLRF   x7F
05B50:  CLRF   x80
05B52:  CLRF   x81
05B54:  CLRF   x82
05B56:  CLRF   x83
05B58:  CLRF   x84
05B5A:  CLRF   x85
05B5C:  CLRF   x86
05B5E:  CLRF   x87
05B60:  CLRF   x88
05B62:  CLRF   x89
05B64:  CLRF   x8A
05B66:  CLRF   x8B
05B68:  CLRF   x8C
05B6A:  CLRF   x8D
05B6C:  CLRF   x8E
05B6E:  CLRF   x8F
05B70:  CLRF   x90
05B72:  CLRF   x91
05B74:  CLRF   x92
05B76:  CLRF   x93
05B78:  CLRF   x94
05B7A:  CLRF   x95
05B7C:  CLRF   x96
05B7E:  CLRF   x97
05B80:  CLRF   x98
05B82:  CLRF   x99
05B84:  CLRF   x9A
05B86:  CLRF   x9B
05B88:  CLRF   x9C
05B8A:  CLRF   x9D
05B8C:  CLRF   x9E
05B8E:  CLRF   x9F
05B90:  CLRF   xA0
05B92:  CLRF   xA1
05B94:  CLRF   xA2
05B96:  CLRF   xA3
05B98:  CLRF   xA4
05B9A:  CLRF   xA5
05B9C:  CLRF   xA6
05B9E:  CLRF   xA7
05BA0:  CLRF   xA8
05BA2:  CLRF   xA9
05BA4:  CLRF   xAA
05BA6:  CLRF   xAB
05BA8:  CLRF   xAC
05BAA:  CLRF   xAD
05BAC:  CLRF   xAE
05BAE:  CLRF   xAF
05BB0:  CLRF   xB0
05BB2:  CLRF   xB1
05BB4:  CLRF   xB2
05BB6:  CLRF   xB3
05BB8:  CLRF   xB4
05BBA:  CLRF   xB5
05BBC:  CLRF   xB6
05BBE:  CLRF   xB7
05BC0:  CLRF   xB8
05BC2:  CLRF   xB9
05BC4:  CLRF   xBA
05BC6:  CLRF   xBB
05BC8:  CLRF   xBC
05BCA:  CLRF   xBD
05BCC:  CLRF   xBE
05BCE:  CLRF   xBF
05BD0:  CLRF   xC0
05BD2:  CLRF   xC1
05BD4:  CLRF   xC2
05BD6:  CLRF   xC3
05BD8:  CLRF   xC4
05BDA:  CLRF   xC5
05BDC:  CLRF   xC6
05BDE:  CLRF   xC7
05BE0:  CLRF   xC8
05BE2:  CLRF   xC9
05BE4:  CLRF   xCA
05BE6:  CLRF   xCB
05BE8:  CLRF   xCC
05BEA:  CLRF   xCD
05BEC:  CLRF   xCE
05BEE:  CLRF   xCF
05BF0:  CLRF   xD0
05BF2:  CLRF   xD1
05BF4:  CLRF   xD2
05BF6:  CLRF   xD3
05BF8:  CLRF   xD4
05BFA:  CLRF   xD5
05BFC:  CLRF   xD6
05BFE:  CLRF   xD7
05C00:  CLRF   xD8
05C02:  CLRF   xD9
05C04:  CLRF   xDA
05C06:  CLRF   xDB
05C08:  CLRF   xDC
05C0A:  CLRF   xDD
05C0C:  CLRF   xDE
05C0E:  CLRF   xDF
05C10:  CLRF   xE0
05C12:  CLRF   xE1
05C14:  CLRF   xE2
05C16:  CLRF   xE3
05C18:  CLRF   xE4
05C1A:  CLRF   xE5
05C1C:  CLRF   xE6
05C1E:  CLRF   xE7
05C20:  CLRF   xE8
05C22:  CLRF   xE9
05C24:  CLRF   xEA
05C26:  CLRF   xEB
05C28:  CLRF   xEC
05C2A:  CLRF   xED
05C2C:  CLRF   xEE
05C2E:  CLRF   xEF
05C30:  CLRF   xF0
05C32:  CLRF   xF1
05C34:  CLRF   xF2
05C36:  CLRF   xF3
05C38:  CLRF   xF4
05C3A:  CLRF   xF5
05C3C:  CLRF   xF6
05C3E:  CLRF   xF7
05C40:  CLRF   xF8
05C42:  CLRF   xF9
05C44:  CLRF   xFA
05C46:  CLRF   xFB
05C48:  CLRF   xFC
05C4A:  CLRF   xFD
05C4C:  CLRF   xFE
05C4E:  CLRF   xFF
05C50:  MOVLB  5
05C52:  CLRF   x00
05C54:  CLRF   x01
05C56:  CLRF   x02
05C58:  CLRF   x03
05C5A:  CLRF   x04
05C5C:  CLRF   x05
05C5E:  CLRF   x06
05C60:  CLRF   x07
05C62:  CLRF   x08
05C64:  CLRF   x09
05C66:  CLRF   x0A
05C68:  CLRF   x0B
05C6A:  CLRF   x0C
05C6C:  CLRF   x0D
05C6E:  CLRF   x0E
05C70:  CLRF   x0F
05C72:  CLRF   x10
05C74:  CLRF   x11
05C76:  CLRF   x12
05C78:  CLRF   x13
05C7A:  CLRF   x14
05C7C:  CLRF   x15
05C7E:  CLRF   x16
05C80:  CLRF   x17
05C82:  CLRF   x18
05C84:  CLRF   x19
05C86:  CLRF   x1A
05C88:  CLRF   x1B
05C8A:  CLRF   x1C
05C8C:  CLRF   x1D
05C8E:  CLRF   x1E
05C90:  CLRF   x1F
05C92:  CLRF   x20
05C94:  CLRF   x21
05C96:  CLRF   x22
05C98:  CLRF   x23
05C9A:  CLRF   x24
05C9C:  CLRF   x25
05C9E:  CLRF   x26
05CA0:  CLRF   x27
05CA2:  CLRF   x28
05CA4:  CLRF   x29
05CA6:  CLRF   x2A
05CA8:  CLRF   x2B
05CAA:  CLRF   x2C
05CAC:  CLRF   x2D
05CAE:  CLRF   x2E
05CB0:  CLRF   x2F
05CB2:  CLRF   x30
05CB4:  CLRF   x31
05CB6:  CLRF   x32
05CB8:  CLRF   x33
05CBA:  CLRF   x34
05CBC:  CLRF   x35
05CBE:  CLRF   x36
05CC0:  CLRF   x37
05CC2:  CLRF   x38
05CC4:  CLRF   x39
05CC6:  CLRF   x3A
05CC8:  CLRF   x3B
05CCA:  CLRF   x3C
05CCC:  CLRF   x3D
05CCE:  CLRF   x3E
05CD0:  CLRF   x3F
05CD2:  CLRF   x40
05CD4:  CLRF   x41
05CD6:  CLRF   x42
05CD8:  CLRF   x43
05CDA:  CLRF   x44
05CDC:  CLRF   x45
05CDE:  CLRF   x46
05CE0:  CLRF   x47
05CE2:  CLRF   x48
05CE4:  CLRF   x49
05CE6:  CLRF   x4A
05CE8:  CLRF   x4B
05CEA:  CLRF   x4C
05CEC:  CLRF   x4D
05CEE:  CLRF   x4E
05CF0:  CLRF   x4F
05CF2:  CLRF   x50
05CF4:  CLRF   x51
05CF6:  CLRF   x52
05CF8:  CLRF   x53
05CFA:  CLRF   x54
05CFC:  CLRF   x55
05CFE:  CLRF   x56
05D00:  CLRF   x57
05D02:  CLRF   x58
05D04:  CLRF   x59
05D06:  CLRF   x5A
05D08:  CLRF   x5B
05D0A:  CLRF   x5C
05D0C:  CLRF   x5D
05D0E:  CLRF   x5E
05D10:  CLRF   x5F
05D12:  CLRF   x60
05D14:  CLRF   x61
05D16:  CLRF   x62
05D18:  CLRF   x63
05D1A:  CLRF   x64
05D1C:  CLRF   x65
05D1E:  CLRF   x66
05D20:  CLRF   x67
05D22:  CLRF   x68
05D24:  CLRF   x69
05D26:  CLRF   x6A
05D28:  CLRF   x6B
05D2A:  CLRF   x6C
05D2C:  CLRF   x6D
05D2E:  CLRF   x6E
05D30:  CLRF   x6F
05D32:  CLRF   x70
05D34:  CLRF   x71
05D36:  CLRF   x72
05D38:  CLRF   x73
05D3A:  CLRF   x74
05D3C:  CLRF   x75
05D3E:  CLRF   x76
05D40:  CLRF   x77
05D42:  CLRF   x78
05D44:  CLRF   x79
05D46:  CLRF   x7A
05D48:  CLRF   x7B
05D4A:  CLRF   x7C
05D4C:  CLRF   x7D
05D4E:  CLRF   x7E
05D50:  CLRF   x7F
05D52:  CLRF   x80
05D54:  CLRF   x81
05D56:  CLRF   x82
05D58:  CLRF   x83
05D5A:  CLRF   x84
05D5C:  CLRF   x85
05D5E:  CLRF   x86
05D60:  CLRF   xCE
05D62:  CLRF   xCF
05D64:  CLRF   xD0
05D66:  CLRF   xD1
05D68:  CLRF   xD2
05D6A:  CLRF   xD3
05D6C:  CLRF   xD4
05D6E:  CLRF   xD5
05D70:  CLRF   xD6
05D72:  CLRF   xD7
05D74:  CLRF   xD8
05D76:  CLRF   xD9
05D78:  CLRF   xDA
05D7A:  CLRF   xDB
05D7C:  CLRF   xDC
05D7E:  CLRF   xDD
05D80:  MOVLB  6
05D82:  CLRF   x58
05D84:  CLRF   x59
....................    Motor1_off; 
05D86:  BSF    F8B.5
05D88:  BCF    F94.5
....................    Motor2_off; 
05D8A:  BSF    F8B.6
05D8C:  BCF    F94.6
....................    SSR_off; 
05D8E:  BSF    F8B.2
05D90:  BCF    F94.2
....................    Display_on; 
05D92:  BSF    F8B.7
05D94:  BCF    F94.7
....................    ConfiguraInterrupciones(); 
05D96:  MOVLB  0
05D98:  GOTO   107E
....................    LeeEEPROM(); 
05D9C:  GOTO   14C2
....................    LimitaValores(); 
05DA0:  GOTO   1CC0
....................    MensajeBienvenida(); 
05DA4:  GOTO   3490
....................     
....................    if(UP && DOWN) 
05DA8:  BSF    F92.4
05DAA:  BTFSC  F80.4
05DAC:  BRA    5E32
05DAE:  BSF    F92.5
05DB0:  BTFSC  F80.5
05DB2:  BRA    5E32
....................    { 
....................       delay_ms(500); 
05DB4:  MOVLW  02
05DB6:  MOVLB  6
05DB8:  MOVWF  x5A
05DBA:  MOVLW  FA
05DBC:  MOVWF  x63
05DBE:  MOVLB  0
05DC0:  CALL   1056
05DC4:  MOVLB  6
05DC6:  DECFSZ x5A,F
05DC8:  BRA    5DBA
....................       strcpy(Menus.Letra,"Cargando.."); 
05DCA:  MOVLW  06
05DCC:  MOVWF  FEA
05DCE:  MOVLW  3A
05DD0:  MOVWF  FE9
05DD2:  MOVFF  FF2,65A
05DD6:  BCF    FF2.7
05DD8:  MOVLW  00
05DDA:  MOVLB  0
05DDC:  CALL   0890
05DE0:  TBLRD*-
05DE2:  TBLRD*+
05DE4:  MOVF   FF5,W
05DE6:  MOVWF  FEE
05DE8:  IORLW  00
05DEA:  BNZ   5DE2
05DEC:  MOVLB  6
05DEE:  BTFSC  x5A.7
05DF0:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,30,1,1); 
05DF2:  MOVLW  06
05DF4:  MOVWF  x63
05DF6:  MOVLW  3A
05DF8:  MOVWF  x62
05DFA:  CLRF   x64
05DFC:  MOVLW  1E
05DFE:  MOVWF  x65
05E00:  MOVLW  01
05E02:  MOVWF  x66
05E04:  MOVWF  x67
05E06:  MOVLB  0
05E08:  CALL   2BEE
....................       delay_ms(2000); 
05E0C:  MOVLW  08
05E0E:  MOVLB  6
05E10:  MOVWF  x5A
05E12:  MOVLW  FA
05E14:  MOVWF  x63
05E16:  MOVLB  0
05E18:  CALL   1056
05E1C:  MOVLB  6
05E1E:  DECFSZ x5A,F
05E20:  BRA    5E12
....................       Menu=100; 
05E22:  MOVLW  64
05E24:  MOVLB  5
05E26:  MOVWF  x97
....................       glcd_fillScreen(OFF); 
05E28:  MOVLB  6
05E2A:  CLRF   x62
05E2C:  MOVLB  0
05E2E:  CALL   25C0
....................    } 
....................     
.................... while(true) 
.................... { 
....................  
....................       if(Lectura2==1) 
05E32:  MOVLB  5
05E34:  DECFSZ x8F,W
05E36:  BRA    5E56
....................       { 
....................          Temperatura=Leer_Sensor(MediaMovil); 
05E38:  MOVFF  58C,65A
05E3C:  MOVLB  0
05E3E:  CALL   2E58
05E42:  MOVFF  03,615
05E46:  MOVFF  02,614
05E4A:  MOVFF  01,613
05E4E:  MOVFF  00,612
....................          Lectura2=0; 
05E52:  MOVLB  5
05E54:  CLRF   x8F
....................       } 
....................     
....................       glcd_update();             
05E56:  MOVLB  0
05E58:  CALL   261A
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
05E5C:  MOVLB  5
05E5E:  MOVF   x97,F
05E60:  BNZ   5E86
....................          PidePassword(0,0,1,Password[0],Password[1],Password[2],Password[3],0); 
05E62:  MOVLB  6
05E64:  CLRF   x5A
05E66:  CLRF   x5B
05E68:  MOVLW  01
05E6A:  MOVWF  x5C
05E6C:  MOVFF  5DA,65D
05E70:  MOVFF  5DB,65E
05E74:  MOVFF  5DC,65F
05E78:  MOVFF  5DD,660
05E7C:  CLRF   x61
05E7E:  MOVLB  0
05E80:  CALL   3896
05E84:  MOVLB  5
....................       } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1){ //Menu Principal.       
05E86:  DECFSZ x97,W
05E88:  BRA    616E
....................        
....................          if(Opcion>4) 
05E8A:  MOVF   x9B,W
05E8C:  SUBLW  04
05E8E:  BC    5E94
....................             Opcion=1; 
05E90:  MOVLW  01
05E92:  MOVWF  x9B
....................              
....................          if(Opcion<1) 
05E94:  MOVF   x9B,F
05E96:  BNZ   5E9C
....................             Opcion=4; 
05E98:  MOVLW  04
05E9A:  MOVWF  x9B
....................           
....................          strcpy(Menus.Letra,"Menu"); 
05E9C:  MOVLW  06
05E9E:  MOVWF  FEA
05EA0:  MOVLW  3A
05EA2:  MOVWF  FE9
05EA4:  MOVFF  FF2,65A
05EA8:  BCF    FF2.7
05EAA:  MOVLW  00
05EAC:  MOVLB  0
05EAE:  CALL   08BA
05EB2:  TBLRD*-
05EB4:  TBLRD*+
05EB6:  MOVF   FF5,W
05EB8:  MOVWF  FEE
05EBA:  IORLW  00
05EBC:  BNZ   5EB4
05EBE:  MOVLB  6
05EC0:  BTFSC  x5A.7
05EC2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,30,0,1,2); 
05EC4:  MOVLW  06
05EC6:  MOVWF  x63
05EC8:  MOVLW  3A
05ECA:  MOVWF  x62
05ECC:  MOVLW  1E
05ECE:  MOVWF  x64
05ED0:  CLRF   x65
05ED2:  MOVLW  01
05ED4:  MOVWF  x66
05ED6:  MOVLW  02
05ED8:  MOVWF  x67
05EDA:  MOVLB  0
05EDC:  CALL   2BEE
....................        
....................          if(Opcion==1)    
05EE0:  MOVLB  5
05EE2:  DECFSZ x9B,W
05EE4:  BRA    5F2C
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
05EE6:  MOVLW  06
05EE8:  MOVWF  FEA
05EEA:  MOVLW  3A
05EEC:  MOVWF  FE9
05EEE:  MOVFF  FF2,65A
05EF2:  BCF    FF2.7
05EF4:  MOVLW  00
05EF6:  MOVLB  0
05EF8:  CALL   08DE
05EFC:  TBLRD*-
05EFE:  TBLRD*+
05F00:  MOVF   FF5,W
05F02:  MOVWF  FEE
05F04:  IORLW  00
05F06:  BNZ   5EFE
05F08:  MOVLB  6
05F0A:  BTFSC  x5A.7
05F0C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,1,1);} 
05F0E:  MOVLW  06
05F10:  MOVWF  x63
05F12:  MOVLW  3A
05F14:  MOVWF  x62
05F16:  CLRF   x64
05F18:  MOVLW  14
05F1A:  MOVWF  x65
05F1C:  MOVLW  01
05F1E:  MOVWF  x66
05F20:  MOVWF  x67
05F22:  MOVLB  0
05F24:  CALL   2BEE
....................          else 
05F28:  BRA    5F6E
05F2A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Iniciar Proceso"); 
05F2C:  MOVLW  06
05F2E:  MOVWF  FEA
05F30:  MOVLW  3A
05F32:  MOVWF  FE9
05F34:  MOVFF  FF2,65A
05F38:  BCF    FF2.7
05F3A:  MOVLW  00
05F3C:  MOVLB  0
05F3E:  CALL   08DE
05F42:  TBLRD*-
05F44:  TBLRD*+
05F46:  MOVF   FF5,W
05F48:  MOVWF  FEE
05F4A:  IORLW  00
05F4C:  BNZ   5F44
05F4E:  MOVLB  6
05F50:  BTFSC  x5A.7
05F52:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,20,0,1);} 
05F54:  MOVLW  06
05F56:  MOVWF  x63
05F58:  MOVLW  3A
05F5A:  MOVWF  x62
05F5C:  CLRF   x64
05F5E:  MOVLW  14
05F60:  MOVWF  x65
05F62:  CLRF   x66
05F64:  MOVLW  01
05F66:  MOVWF  x67
05F68:  MOVLB  0
05F6A:  CALL   2BEE
....................           
....................          if(Opcion==2)    
05F6E:  MOVLB  5
05F70:  MOVF   x9B,W
05F72:  SUBLW  02
05F74:  BNZ   5FBC
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
05F76:  MOVLW  06
05F78:  MOVWF  FEA
05F7A:  MOVLW  3A
05F7C:  MOVWF  FE9
05F7E:  MOVFF  FF2,65A
05F82:  BCF    FF2.7
05F84:  MOVLW  00
05F86:  MOVLB  0
05F88:  CALL   090C
05F8C:  TBLRD*-
05F8E:  TBLRD*+
05F90:  MOVF   FF5,W
05F92:  MOVWF  FEE
05F94:  IORLW  00
05F96:  BNZ   5F8E
05F98:  MOVLB  6
05F9A:  BTFSC  x5A.7
05F9C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,1,1);} 
05F9E:  MOVLW  06
05FA0:  MOVWF  x63
05FA2:  MOVLW  3A
05FA4:  MOVWF  x62
05FA6:  CLRF   x64
05FA8:  MOVLW  1E
05FAA:  MOVWF  x65
05FAC:  MOVLW  01
05FAE:  MOVWF  x66
05FB0:  MOVWF  x67
05FB2:  MOVLB  0
05FB4:  CALL   2BEE
....................          else 
05FB8:  BRA    5FFE
05FBA:  MOVLB  5
....................             {strcpy(Menus.Letra,"Seleccion Temperatura"); 
05FBC:  MOVLW  06
05FBE:  MOVWF  FEA
05FC0:  MOVLW  3A
05FC2:  MOVWF  FE9
05FC4:  MOVFF  FF2,65A
05FC8:  BCF    FF2.7
05FCA:  MOVLW  00
05FCC:  MOVLB  0
05FCE:  CALL   090C
05FD2:  TBLRD*-
05FD4:  TBLRD*+
05FD6:  MOVF   FF5,W
05FD8:  MOVWF  FEE
05FDA:  IORLW  00
05FDC:  BNZ   5FD4
05FDE:  MOVLB  6
05FE0:  BTFSC  x5A.7
05FE2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,1);} 
05FE4:  MOVLW  06
05FE6:  MOVWF  x63
05FE8:  MOVLW  3A
05FEA:  MOVWF  x62
05FEC:  CLRF   x64
05FEE:  MOVLW  1E
05FF0:  MOVWF  x65
05FF2:  CLRF   x66
05FF4:  MOVLW  01
05FF6:  MOVWF  x67
05FF8:  MOVLB  0
05FFA:  CALL   2BEE
....................              
....................          if(Opcion==3)    
05FFE:  MOVLB  5
06000:  MOVF   x9B,W
06002:  SUBLW  03
06004:  BNZ   604C
....................             {strcpy(Menus.Letra,"Temporizador"); 
06006:  MOVLW  06
06008:  MOVWF  FEA
0600A:  MOVLW  3A
0600C:  MOVWF  FE9
0600E:  MOVFF  FF2,65A
06012:  BCF    FF2.7
06014:  MOVLW  00
06016:  MOVLB  0
06018:  CALL   0940
0601C:  TBLRD*-
0601E:  TBLRD*+
06020:  MOVF   FF5,W
06022:  MOVWF  FEE
06024:  IORLW  00
06026:  BNZ   601E
06028:  MOVLB  6
0602A:  BTFSC  x5A.7
0602C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,1,1);} 
0602E:  MOVLW  06
06030:  MOVWF  x63
06032:  MOVLW  3A
06034:  MOVWF  x62
06036:  CLRF   x64
06038:  MOVLW  28
0603A:  MOVWF  x65
0603C:  MOVLW  01
0603E:  MOVWF  x66
06040:  MOVWF  x67
06042:  MOVLB  0
06044:  CALL   2BEE
....................          else 
06048:  BRA    608E
0604A:  MOVLB  5
....................             {strcpy(Menus.Letra,"Temporizador"); 
0604C:  MOVLW  06
0604E:  MOVWF  FEA
06050:  MOVLW  3A
06052:  MOVWF  FE9
06054:  MOVFF  FF2,65A
06058:  BCF    FF2.7
0605A:  MOVLW  00
0605C:  MOVLB  0
0605E:  CALL   0940
06062:  TBLRD*-
06064:  TBLRD*+
06066:  MOVF   FF5,W
06068:  MOVWF  FEE
0606A:  IORLW  00
0606C:  BNZ   6064
0606E:  MOVLB  6
06070:  BTFSC  x5A.7
06072:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,40,0,1);}    
06074:  MOVLW  06
06076:  MOVWF  x63
06078:  MOVLW  3A
0607A:  MOVWF  x62
0607C:  CLRF   x64
0607E:  MOVLW  28
06080:  MOVWF  x65
06082:  CLRF   x66
06084:  MOVLW  01
06086:  MOVWF  x67
06088:  MOVLB  0
0608A:  CALL   2BEE
....................                          
....................          if(Opcion==4)    
0608E:  MOVLB  5
06090:  MOVF   x9B,W
06092:  SUBLW  04
06094:  BNZ   60DC
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
06096:  MOVLW  06
06098:  MOVWF  FEA
0609A:  MOVLW  3A
0609C:  MOVWF  FE9
0609E:  MOVFF  FF2,65A
060A2:  BCF    FF2.7
060A4:  MOVLW  00
060A6:  MOVLB  0
060A8:  CALL   096C
060AC:  TBLRD*-
060AE:  TBLRD*+
060B0:  MOVF   FF5,W
060B2:  MOVWF  FEE
060B4:  IORLW  00
060B6:  BNZ   60AE
060B8:  MOVLB  6
060BA:  BTFSC  x5A.7
060BC:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,1,1);} 
060BE:  MOVLW  06
060C0:  MOVWF  x63
060C2:  MOVLW  3A
060C4:  MOVWF  x62
060C6:  CLRF   x64
060C8:  MOVLW  32
060CA:  MOVWF  x65
060CC:  MOVLW  01
060CE:  MOVWF  x66
060D0:  MOVWF  x67
060D2:  MOVLB  0
060D4:  CALL   2BEE
....................          else 
060D8:  BRA    611E
060DA:  MOVLB  5
....................             {strcpy(Menus.Letra,"Cambio Clave"); 
060DC:  MOVLW  06
060DE:  MOVWF  FEA
060E0:  MOVLW  3A
060E2:  MOVWF  FE9
060E4:  MOVFF  FF2,65A
060E8:  BCF    FF2.7
060EA:  MOVLW  00
060EC:  MOVLB  0
060EE:  CALL   096C
060F2:  TBLRD*-
060F4:  TBLRD*+
060F6:  MOVF   FF5,W
060F8:  MOVWF  FEE
060FA:  IORLW  00
060FC:  BNZ   60F4
060FE:  MOVLB  6
06100:  BTFSC  x5A.7
06102:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,50,0,1);}      
06104:  MOVLW  06
06106:  MOVWF  x63
06108:  MOVLW  3A
0610A:  MOVWF  x62
0610C:  CLRF   x64
0610E:  MOVLW  32
06110:  MOVWF  x65
06112:  CLRF   x66
06114:  MOVLW  01
06116:  MOVWF  x67
06118:  MOVLB  0
0611A:  CALL   2BEE
....................              
....................          if(UP){ 
0611E:  BSF    F92.4
06120:  BTFSC  F80.4
06122:  BRA    6130
....................             DelayPuls();Opcion--;visual=1; 
06124:  CALL   37DA
06128:  MOVLB  5
0612A:  DECF   x9B,F
0612C:  BSF    x87.4
0612E:  MOVLB  0
....................          } 
....................                    
....................          if(DOWN){ 
06130:  BSF    F92.5
06132:  BTFSC  F80.5
06134:  BRA    6142
....................             DelayPuls();Opcion++;visual=1;    
06136:  CALL   37DA
0613A:  MOVLB  5
0613C:  INCF   x9B,F
0613E:  BSF    x87.4
06140:  MOVLB  0
....................          } 
....................                 
....................          if(RIGHT){  
06142:  BSF    F96.0
06144:  BTFSC  F84.0
06146:  BRA    6170
....................             delay_ms(200);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);visual=1; 
06148:  MOVLW  C8
0614A:  MOVLB  6
0614C:  MOVWF  x63
0614E:  MOVLB  0
06150:  CALL   1056
06154:  MOVLW  03
06156:  MOVLB  5
06158:  ADDWF  x9B,W
0615A:  MOVWF  x97
0615C:  MOVLW  01
0615E:  MOVWF  x9B
06160:  MOVLB  6
06162:  CLRF   x62
06164:  MOVLB  0
06166:  CALL   25C0
0616A:  MOVLB  5
0616C:  BSF    x87.4
0616E:  MOVLB  0
....................          } 
....................       } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
.................... //-Sub-Menus de selección de proceso. 
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Continuar 
06170:  MOVLB  5
06172:  MOVF   x97,W
06174:  SUBLW  04
06176:  BTFSS  FD8.2
06178:  BRA    64FE
....................        
....................       if(Opcion>3) 
0617A:  MOVF   x9B,W
0617C:  SUBLW  03
0617E:  BC    6184
....................          Opcion=1; 
06180:  MOVLW  01
06182:  MOVWF  x9B
....................           
....................       if(Opcion<1) 
06184:  MOVF   x9B,F
06186:  BNZ   618C
....................          Opcion=3; 
06188:  MOVLW  03
0618A:  MOVWF  x9B
....................        
....................          strcpy(Menus.Letra,"Seleccione"); 
0618C:  MOVLW  06
0618E:  MOVWF  FEA
06190:  MOVLW  3A
06192:  MOVWF  FE9
06194:  MOVFF  FF2,65A
06198:  BCF    FF2.7
0619A:  MOVLW  00
0619C:  MOVLB  0
0619E:  CALL   0998
061A2:  TBLRD*-
061A4:  TBLRD*+
061A6:  MOVF   FF5,W
061A8:  MOVWF  FEE
061AA:  IORLW  00
061AC:  BNZ   61A4
061AE:  MOVLB  6
061B0:  BTFSC  x5A.7
061B2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
061B4:  MOVLW  06
061B6:  MOVWF  x63
061B8:  MOVLW  3A
061BA:  MOVWF  x62
061BC:  CLRF   x64
061BE:  CLRF   x65
061C0:  MOVLW  01
061C2:  MOVWF  x66
061C4:  MOVLW  02
061C6:  MOVWF  x67
061C8:  MOVLB  0
061CA:  CALL   2BEE
....................           
....................          strcpy(Menus.Letra,"Temperatura"); 
061CE:  MOVLW  06
061D0:  MOVWF  FEA
061D2:  MOVLW  3A
061D4:  MOVWF  FE9
061D6:  MOVFF  FF2,65A
061DA:  BCF    FF2.7
061DC:  MOVLW  00
061DE:  CALL   09C2
061E2:  TBLRD*-
061E4:  TBLRD*+
061E6:  MOVF   FF5,W
061E8:  MOVWF  FEE
061EA:  IORLW  00
061EC:  BNZ   61E4
061EE:  MOVLB  6
061F0:  BTFSC  x5A.7
061F2:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,16,1,2); 
061F4:  MOVLW  06
061F6:  MOVWF  x63
061F8:  MOVLW  3A
061FA:  MOVWF  x62
061FC:  CLRF   x64
061FE:  MOVLW  10
06200:  MOVWF  x65
06202:  MOVLW  01
06204:  MOVWF  x66
06206:  MOVLW  02
06208:  MOVWF  x67
0620A:  MOVLB  0
0620C:  CALL   2BEE
....................           
....................          displayContrasena(Opcion,10,38,1); 
06210:  MOVFF  59B,664
06214:  MOVLW  0A
06216:  MOVLB  6
06218:  MOVWF  x65
0621A:  MOVLW  26
0621C:  MOVWF  x66
0621E:  MOVLW  01
06220:  MOVWF  x67
06222:  MOVLB  0
06224:  CALL   371C
....................          glcd_circle(90,38,2,NO,ON); 
06228:  MOVLW  5A
0622A:  MOVLB  6
0622C:  MOVWF  x6F
0622E:  MOVLW  26
06230:  MOVWF  x70
06232:  MOVLW  02
06234:  MOVWF  x71
06236:  CLRF   x72
06238:  MOVLW  01
0623A:  MOVWF  x73
0623C:  MOVLB  0
0623E:  CALL   411C
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,97,35,2,2);          
06242:  MOVLW  06
06244:  MOVWF  FEA
06246:  MOVLW  3A
06248:  MOVWF  FE9
0624A:  MOVFF  FF2,65A
0624E:  BCF    FF2.7
06250:  MOVLW  00
06252:  CALL   06D2
06256:  TBLRD*-
06258:  TBLRD*+
0625A:  MOVF   FF5,W
0625C:  MOVWF  FEE
0625E:  IORLW  00
06260:  BNZ   6258
06262:  MOVLB  6
06264:  BTFSC  x5A.7
06266:  BSF    FF2.7
06268:  MOVLW  06
0626A:  MOVWF  x63
0626C:  MOVLW  3A
0626E:  MOVWF  x62
06270:  MOVLW  61
06272:  MOVWF  x64
06274:  MOVLW  23
06276:  MOVWF  x65
06278:  MOVLW  02
0627A:  MOVWF  x66
0627C:  MOVWF  x67
0627E:  MOVLB  0
06280:  CALL   2BEE
....................           
....................          if(Opcion==1) 
06284:  MOVLB  5
06286:  DECFSZ x9B,W
06288:  BRA    62CA
....................             displayTemperatura(Temperatura1,50,38,0,2); 
0628A:  MOVFF  621,65D
0628E:  MOVFF  620,65C
06292:  MOVFF  61F,65B
06296:  MOVFF  61E,65A
0629A:  MOVLB  0
0629C:  CALL   4346
062A0:  MOVFF  02,65B
062A4:  MOVFF  01,65A
062A8:  MOVFF  02,65D
062AC:  MOVFF  01,65C
062B0:  MOVLW  32
062B2:  MOVLB  6
062B4:  MOVWF  x5E
062B6:  MOVLW  26
062B8:  MOVWF  x5F
062BA:  CLRF   x60
062BC:  MOVLW  02
062BE:  MOVWF  x61
062C0:  MOVLB  0
062C2:  CALL   4440
....................          else if(Opcion==2) 
062C6:  BRA    6352
062C8:  MOVLB  5
062CA:  MOVF   x9B,W
062CC:  SUBLW  02
062CE:  BNZ   6310
....................             displayTemperatura(Temperatura2,50,38,0,2);  
062D0:  MOVFF  625,65D
062D4:  MOVFF  624,65C
062D8:  MOVFF  623,65B
062DC:  MOVFF  622,65A
062E0:  MOVLB  0
062E2:  CALL   4346
062E6:  MOVFF  02,65B
062EA:  MOVFF  01,65A
062EE:  MOVFF  02,65D
062F2:  MOVFF  01,65C
062F6:  MOVLW  32
062F8:  MOVLB  6
062FA:  MOVWF  x5E
062FC:  MOVLW  26
062FE:  MOVWF  x5F
06300:  CLRF   x60
06302:  MOVLW  02
06304:  MOVWF  x61
06306:  MOVLB  0
06308:  CALL   4440
....................          else if(Opcion==3) 
0630C:  BRA    6352
0630E:  MOVLB  5
06310:  MOVF   x9B,W
06312:  SUBLW  03
06314:  BNZ   6354
....................             displayTemperatura(Temperatura3,50,38,0,2);  
06316:  MOVFF  629,65D
0631A:  MOVFF  628,65C
0631E:  MOVFF  627,65B
06322:  MOVFF  626,65A
06326:  MOVLB  0
06328:  CALL   4346
0632C:  MOVFF  02,65B
06330:  MOVFF  01,65A
06334:  MOVFF  02,65D
06338:  MOVFF  01,65C
0633C:  MOVLW  32
0633E:  MOVLB  6
06340:  MOVWF  x5E
06342:  MOVLW  26
06344:  MOVWF  x5F
06346:  CLRF   x60
06348:  MOVLW  02
0634A:  MOVWF  x61
0634C:  MOVLB  0
0634E:  CALL   4440
06352:  MOVLB  5
....................          
....................       if(UP){ 
06354:  BSF    F92.4
06356:  BTFSC  F80.4
06358:  BRA    637C
....................          Opcion++; 
0635A:  INCF   x9B,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
0635C:  MOVLW  28
0635E:  MOVLB  6
06360:  MOVWF  x73
06362:  MOVLW  23
06364:  MOVWF  x74
06366:  MOVLW  55
06368:  MOVWF  x75
0636A:  MOVLW  3C
0636C:  MOVWF  x76
0636E:  MOVLW  01
06370:  MOVWF  x77
06372:  CLRF   x78
06374:  MOVLB  0
06376:  CALL   2B2C
0637A:  MOVLB  5
....................       } 
....................              
....................       if(DOWN){   
0637C:  BSF    F92.5
0637E:  BTFSC  F80.5
06380:  BRA    63A4
....................          Opcion--;   
06382:  DECF   x9B,F
....................          glcd_rect(40, 35, 85, 60, YES, OFF); 
06384:  MOVLW  28
06386:  MOVLB  6
06388:  MOVWF  x73
0638A:  MOVLW  23
0638C:  MOVWF  x74
0638E:  MOVLW  55
06390:  MOVWF  x75
06392:  MOVLW  3C
06394:  MOVWF  x76
06396:  MOVLW  01
06398:  MOVWF  x77
0639A:  CLRF   x78
0639C:  MOVLB  0
0639E:  CALL   2B2C
063A2:  MOVLB  5
....................       } 
....................              
....................       if(RIGHT){   
063A4:  BSF    F96.0
063A6:  BTFSC  F84.0
063A8:  BRA    64CA
....................          if(Opcion==1) 
063AA:  DECFSZ x9B,W
063AC:  BRA    63C0
....................             Setpoint=Temperatura1;           
063AE:  MOVFF  621,61D
063B2:  MOVFF  620,61C
063B6:  MOVFF  61F,61B
063BA:  MOVFF  61E,61A
....................          else if(Opcion==2) 
063BE:  BRA    63EE
063C0:  MOVF   x9B,W
063C2:  SUBLW  02
063C4:  BNZ   63D8
....................             Setpoint=Temperatura2;  
063C6:  MOVFF  625,61D
063CA:  MOVFF  624,61C
063CE:  MOVFF  623,61B
063D2:  MOVFF  622,61A
....................          else if(Opcion==3) 
063D6:  BRA    63EE
063D8:  MOVF   x9B,W
063DA:  SUBLW  03
063DC:  BNZ   63EE
....................             Setpoint=Temperatura3; 
063DE:  MOVFF  629,61D
063E2:  MOVFF  628,61C
063E6:  MOVFF  627,61B
063EA:  MOVFF  626,61A
....................           
....................          Ganancia=Ganancia*(Setpoint/44.5); 
063EE:  MOVFF  61D,65E
063F2:  MOVFF  61C,65D
063F6:  MOVFF  61B,65C
063FA:  MOVFF  61A,65B
063FE:  MOVLB  6
06400:  CLRF   x62
06402:  CLRF   x61
06404:  MOVLW  32
06406:  MOVWF  x60
06408:  MOVLW  84
0640A:  MOVWF  x5F
0640C:  MOVLB  0
0640E:  CALL   10EC
06412:  MOVFF  605,67D
06416:  MOVFF  604,67C
0641A:  MOVFF  603,67B
0641E:  MOVFF  602,67A
06422:  MOVFF  03,681
06426:  MOVFF  02,680
0642A:  MOVFF  01,67F
0642E:  MOVFF  00,67E
06432:  CALL   2D40
06436:  MOVFF  03,605
0643A:  MOVFF  02,604
0643E:  MOVFF  01,603
06442:  MOVFF  00,602
....................          Gananciamax=(0.27)*Setpoint;  
06446:  MOVLW  71
06448:  MOVLB  6
0644A:  MOVWF  x7D
0644C:  MOVLW  3D
0644E:  MOVWF  x7C
06450:  MOVLW  0A
06452:  MOVWF  x7B
06454:  MOVLW  7D
06456:  MOVWF  x7A
06458:  MOVFF  61D,681
0645C:  MOVFF  61C,680
06460:  MOVFF  61B,67F
06464:  MOVFF  61A,67E
06468:  MOVLB  0
0646A:  CALL   2D40
0646E:  MOVFF  03,5BD
06472:  MOVFF  02,5BC
06476:  MOVFF  01,5BB
0647A:  MOVFF  00,5BA
....................          Menu=20;glcd_rect(15, 18, 30, 53, NO, ON);tiempo_secado=0;glcd_fillScreen(OFF);pausa=0;         
0647E:  MOVLW  14
06480:  MOVLB  5
06482:  MOVWF  x97
06484:  MOVLW  0F
06486:  MOVLB  6
06488:  MOVWF  x73
0648A:  MOVLW  12
0648C:  MOVWF  x74
0648E:  MOVLW  1E
06490:  MOVWF  x75
06492:  MOVLW  35
06494:  MOVWF  x76
06496:  CLRF   x77
06498:  MOVLW  01
0649A:  MOVWF  x78
0649C:  MOVLB  0
0649E:  CALL   2B2C
064A2:  MOVLB  5
064A4:  CLRF   x9D
064A6:  MOVLB  6
064A8:  CLRF   x62
064AA:  MOVLB  0
064AC:  CALL   25C0
064B0:  MOVLB  5
064B2:  CLRF   x9A
....................           
....................          if((Testerilizacionp[0]==0)&&(Testerilizacionp[1]==0)&&(Testerilizacionp[2]==0)&&(Testerilizacionp[3]==0)) 
064B4:  MOVF   xD2,F
064B6:  BNZ   64C8
064B8:  MOVF   xD3,F
064BA:  BNZ   64C8
064BC:  MOVF   xD4,F
064BE:  BNZ   64C8
064C0:  MOVF   xD5,F
064C2:  BNZ   64C8
....................             Infinito=1; 
064C4:  BSF    x93.1
....................          else 
064C6:  BRA    64CA
....................             Infinito=0; 
064C8:  BCF    x93.1
....................       }  
....................                    
....................       if(LEFT){ 
064CA:  BSF    F96.1
064CC:  BTFSC  F84.1
064CE:  BRA    64FE
....................          delay_ms(300);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
064D0:  MOVLW  02
064D2:  MOVLB  6
064D4:  MOVWF  x5A
064D6:  MOVLW  96
064D8:  MOVWF  x63
064DA:  MOVLB  0
064DC:  CALL   1056
064E0:  MOVLB  6
064E2:  DECFSZ x5A,F
064E4:  BRA    64D6
064E6:  MOVLW  01
064E8:  MOVLB  5
064EA:  MOVWF  x97
064EC:  MOVLB  6
064EE:  CLRF   x62
064F0:  MOVLB  0
064F2:  CALL   25C0
064F6:  MOVLW  01
064F8:  MOVLB  5
064FA:  MOVWF  x9B
064FC:  BSF    x87.4
....................       }  
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==5){ // Menu de Temperatura 
064FE:  MOVF   x97,W
06500:  SUBLW  05
06502:  BTFSS  FD8.2
06504:  GOTO   6D8A
....................       
....................          if(Opcion>3) 
06508:  MOVF   x9B,W
0650A:  SUBLW  03
0650C:  BC    6512
....................             Opcion=1; 
0650E:  MOVLW  01
06510:  MOVWF  x9B
....................          if(Opcion<1) 
06512:  MOVF   x9B,F
06514:  BNZ   651A
....................             Opcion=3; 
06516:  MOVLW  03
06518:  MOVWF  x9B
....................           
....................          if(Opcion==1)   { 
0651A:  DECFSZ x9B,W
0651C:  BRA    6574
....................             strcpy(Menus.Letra,"Temperatura 1"); 
0651E:  MOVLW  06
06520:  MOVWF  FEA
06522:  MOVLW  3A
06524:  MOVWF  FE9
06526:  MOVFF  FF2,65A
0652A:  BCF    FF2.7
0652C:  MOVLW  00
0652E:  MOVLB  0
06530:  CALL   09EC
06534:  TBLRD*-
06536:  TBLRD*+
06538:  MOVF   FF5,W
0653A:  MOVWF  FEE
0653C:  IORLW  00
0653E:  BNZ   6536
06540:  MOVLB  6
06542:  BTFSC  x5A.7
06544:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,1,1); 
06546:  MOVLW  06
06548:  MOVWF  x5B
0654A:  MOVLW  3A
0654C:  MOVWF  x5A
0654E:  MOVFF  621,65F
06552:  MOVFF  620,65E
06556:  MOVFF  61F,65D
0655A:  MOVFF  61E,65C
0655E:  CLRF   x60
06560:  MOVLW  14
06562:  MOVWF  x61
06564:  MOVLW  01
06566:  MOVWF  x62
06568:  MOVWF  x63
0656A:  MOVLB  0
0656C:  CALL   4870
....................          }else{ 
06570:  BRA    65C6
06572:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 1"); 
06574:  MOVLW  06
06576:  MOVWF  FEA
06578:  MOVLW  3A
0657A:  MOVWF  FE9
0657C:  MOVFF  FF2,65A
06580:  BCF    FF2.7
06582:  MOVLW  00
06584:  MOVLB  0
06586:  CALL   09EC
0658A:  TBLRD*-
0658C:  TBLRD*+
0658E:  MOVF   FF5,W
06590:  MOVWF  FEE
06592:  IORLW  00
06594:  BNZ   658C
06596:  MOVLB  6
06598:  BTFSC  x5A.7
0659A:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura1,0,20,0,1); 
0659C:  MOVLW  06
0659E:  MOVWF  x5B
065A0:  MOVLW  3A
065A2:  MOVWF  x5A
065A4:  MOVFF  621,65F
065A8:  MOVFF  620,65E
065AC:  MOVFF  61F,65D
065B0:  MOVFF  61E,65C
065B4:  CLRF   x60
065B6:  MOVLW  14
065B8:  MOVWF  x61
065BA:  CLRF   x62
065BC:  MOVLW  01
065BE:  MOVWF  x63
065C0:  MOVLB  0
065C2:  CALL   4870
....................          } 
....................           
....................          if(Opcion==2)   { 
065C6:  MOVLB  5
065C8:  MOVF   x9B,W
065CA:  SUBLW  02
065CC:  BNZ   6624
....................             strcpy(Menus.Letra,"Temperatura 2"); 
065CE:  MOVLW  06
065D0:  MOVWF  FEA
065D2:  MOVLW  3A
065D4:  MOVWF  FE9
065D6:  MOVFF  FF2,65A
065DA:  BCF    FF2.7
065DC:  MOVLW  00
065DE:  MOVLB  0
065E0:  CALL   0A18
065E4:  TBLRD*-
065E6:  TBLRD*+
065E8:  MOVF   FF5,W
065EA:  MOVWF  FEE
065EC:  IORLW  00
065EE:  BNZ   65E6
065F0:  MOVLB  6
065F2:  BTFSC  x5A.7
065F4:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,1,1); 
065F6:  MOVLW  06
065F8:  MOVWF  x5B
065FA:  MOVLW  3A
065FC:  MOVWF  x5A
065FE:  MOVFF  625,65F
06602:  MOVFF  624,65E
06606:  MOVFF  623,65D
0660A:  MOVFF  622,65C
0660E:  CLRF   x60
06610:  MOVLW  23
06612:  MOVWF  x61
06614:  MOVLW  01
06616:  MOVWF  x62
06618:  MOVWF  x63
0661A:  MOVLB  0
0661C:  CALL   4870
....................          }else{ 
06620:  BRA    6676
06622:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 2"); 
06624:  MOVLW  06
06626:  MOVWF  FEA
06628:  MOVLW  3A
0662A:  MOVWF  FE9
0662C:  MOVFF  FF2,65A
06630:  BCF    FF2.7
06632:  MOVLW  00
06634:  MOVLB  0
06636:  CALL   0A18
0663A:  TBLRD*-
0663C:  TBLRD*+
0663E:  MOVF   FF5,W
06640:  MOVWF  FEE
06642:  IORLW  00
06644:  BNZ   663C
06646:  MOVLB  6
06648:  BTFSC  x5A.7
0664A:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura2,0,35,0,1); 
0664C:  MOVLW  06
0664E:  MOVWF  x5B
06650:  MOVLW  3A
06652:  MOVWF  x5A
06654:  MOVFF  625,65F
06658:  MOVFF  624,65E
0665C:  MOVFF  623,65D
06660:  MOVFF  622,65C
06664:  CLRF   x60
06666:  MOVLW  23
06668:  MOVWF  x61
0666A:  CLRF   x62
0666C:  MOVLW  01
0666E:  MOVWF  x63
06670:  MOVLB  0
06672:  CALL   4870
....................          } 
....................              
....................          if(Opcion==3)   { 
06676:  MOVLB  5
06678:  MOVF   x9B,W
0667A:  SUBLW  03
0667C:  BNZ   66D4
....................             strcpy(Menus.Letra,"Temperatura 3"); 
0667E:  MOVLW  06
06680:  MOVWF  FEA
06682:  MOVLW  3A
06684:  MOVWF  FE9
06686:  MOVFF  FF2,65A
0668A:  BCF    FF2.7
0668C:  MOVLW  00
0668E:  MOVLB  0
06690:  CALL   0A44
06694:  TBLRD*-
06696:  TBLRD*+
06698:  MOVF   FF5,W
0669A:  MOVWF  FEE
0669C:  IORLW  00
0669E:  BNZ   6696
066A0:  MOVLB  6
066A2:  BTFSC  x5A.7
066A4:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,1,1); 
066A6:  MOVLW  06
066A8:  MOVWF  x5B
066AA:  MOVLW  3A
066AC:  MOVWF  x5A
066AE:  MOVFF  629,65F
066B2:  MOVFF  628,65E
066B6:  MOVFF  627,65D
066BA:  MOVFF  626,65C
066BE:  CLRF   x60
066C0:  MOVLW  32
066C2:  MOVWF  x61
066C4:  MOVLW  01
066C6:  MOVWF  x62
066C8:  MOVWF  x63
066CA:  MOVLB  0
066CC:  CALL   4870
....................          }else{ 
066D0:  BRA    6726
066D2:  MOVLB  5
....................             strcpy(Menus.Letra,"Temperatura 3"); 
066D4:  MOVLW  06
066D6:  MOVWF  FEA
066D8:  MOVLW  3A
066DA:  MOVWF  FE9
066DC:  MOVFF  FF2,65A
066E0:  BCF    FF2.7
066E2:  MOVLW  00
066E4:  MOVLB  0
066E6:  CALL   0A44
066EA:  TBLRD*-
066EC:  TBLRD*+
066EE:  MOVF   FF5,W
066F0:  MOVWF  FEE
066F2:  IORLW  00
066F4:  BNZ   66EC
066F6:  MOVLB  6
066F8:  BTFSC  x5A.7
066FA:  BSF    FF2.7
....................             displayTemps(Menus.Letra,Temperatura3,0,50,0,1); 
066FC:  MOVLW  06
066FE:  MOVWF  x5B
06700:  MOVLW  3A
06702:  MOVWF  x5A
06704:  MOVFF  629,65F
06708:  MOVFF  628,65E
0670C:  MOVFF  627,65D
06710:  MOVFF  626,65C
06714:  CLRF   x60
06716:  MOVLW  32
06718:  MOVWF  x61
0671A:  CLRF   x62
0671C:  MOVLW  01
0671E:  MOVWF  x63
06720:  MOVLB  0
06722:  CALL   4870
....................          } 
....................                
....................                 
....................          if(RIGHT)//Si oprime SET          
06726:  BSF    F96.0
06728:  BTFSC  F84.0
0672A:  BRA    6732
....................             Opcion++;          
0672C:  MOVLB  5
0672E:  INCF   x9B,F
06730:  MOVLB  0
....................        
....................          strcpy(Menus.Letra,"Temperatura"); 
06732:  MOVLW  06
06734:  MOVWF  FEA
06736:  MOVLW  3A
06738:  MOVWF  FE9
0673A:  MOVFF  FF2,65A
0673E:  BCF    FF2.7
06740:  MOVLW  00
06742:  CALL   09C2
06746:  TBLRD*-
06748:  TBLRD*+
0674A:  MOVF   FF5,W
0674C:  MOVWF  FEE
0674E:  IORLW  00
06750:  BNZ   6748
06752:  MOVLB  6
06754:  BTFSC  x5A.7
06756:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
06758:  MOVLW  06
0675A:  MOVWF  x63
0675C:  MOVLW  3A
0675E:  MOVWF  x62
06760:  CLRF   x64
06762:  CLRF   x65
06764:  MOVLW  01
06766:  MOVWF  x66
06768:  MOVLW  02
0676A:  MOVWF  x67
0676C:  MOVLB  0
0676E:  CALL   2BEE
....................           
....................        
....................          if(UP){   
06772:  BSF    F92.4
06774:  BTFSC  F80.4
06776:  BRA    683C
....................             if(Opcion==1) 
06778:  MOVLB  5
0677A:  DECFSZ x9B,W
0677C:  BRA    67BA
....................                Temperatura1+=0.1; 
0677E:  BCF    FD8.1
06780:  MOVFF  621,662
06784:  MOVFF  620,661
06788:  MOVFF  61F,660
0678C:  MOVFF  61E,65F
06790:  MOVLW  CD
06792:  MOVLB  6
06794:  MOVWF  x66
06796:  MOVLW  CC
06798:  MOVWF  x65
0679A:  MOVLW  4C
0679C:  MOVWF  x64
0679E:  MOVLW  7B
067A0:  MOVWF  x63
067A2:  MOVLB  0
067A4:  CALL   124A
067A8:  MOVFF  03,621
067AC:  MOVFF  02,620
067B0:  MOVFF  01,61F
067B4:  MOVFF  00,61E
067B8:  MOVLB  5
....................              
....................             if(Opcion==2) 
067BA:  MOVF   x9B,W
067BC:  SUBLW  02
067BE:  BNZ   67FC
....................                Temperatura2+=0.1; 
067C0:  BCF    FD8.1
067C2:  MOVFF  625,662
067C6:  MOVFF  624,661
067CA:  MOVFF  623,660
067CE:  MOVFF  622,65F
067D2:  MOVLW  CD
067D4:  MOVLB  6
067D6:  MOVWF  x66
067D8:  MOVLW  CC
067DA:  MOVWF  x65
067DC:  MOVLW  4C
067DE:  MOVWF  x64
067E0:  MOVLW  7B
067E2:  MOVWF  x63
067E4:  MOVLB  0
067E6:  CALL   124A
067EA:  MOVFF  03,625
067EE:  MOVFF  02,624
067F2:  MOVFF  01,623
067F6:  MOVFF  00,622
067FA:  MOVLB  5
....................                 
....................             if(Opcion==3) 
067FC:  MOVF   x9B,W
067FE:  SUBLW  03
06800:  BNZ   683E
....................                Temperatura3+=0.1;    
06802:  BCF    FD8.1
06804:  MOVFF  629,662
06808:  MOVFF  628,661
0680C:  MOVFF  627,660
06810:  MOVFF  626,65F
06814:  MOVLW  CD
06816:  MOVLB  6
06818:  MOVWF  x66
0681A:  MOVLW  CC
0681C:  MOVWF  x65
0681E:  MOVLW  4C
06820:  MOVWF  x64
06822:  MOVLW  7B
06824:  MOVWF  x63
06826:  MOVLB  0
06828:  CALL   124A
0682C:  MOVFF  03,629
06830:  MOVFF  02,628
06834:  MOVFF  01,627
06838:  MOVFF  00,626
0683C:  MOVLB  5
....................          } 
....................                 
....................          if(DOWN){   
0683E:  BSF    F92.5
06840:  BTFSC  F80.5
06842:  BRA    6908
....................             if(Opcion==1) 
06844:  DECFSZ x9B,W
06846:  BRA    6884
....................                Temperatura1-=0.1; 
06848:  BSF    FD8.1
0684A:  MOVFF  621,662
0684E:  MOVFF  620,661
06852:  MOVFF  61F,660
06856:  MOVFF  61E,65F
0685A:  MOVLW  CD
0685C:  MOVLB  6
0685E:  MOVWF  x66
06860:  MOVLW  CC
06862:  MOVWF  x65
06864:  MOVLW  4C
06866:  MOVWF  x64
06868:  MOVLW  7B
0686A:  MOVWF  x63
0686C:  MOVLB  0
0686E:  CALL   124A
06872:  MOVFF  03,621
06876:  MOVFF  02,620
0687A:  MOVFF  01,61F
0687E:  MOVFF  00,61E
06882:  MOVLB  5
....................              
....................             if(Opcion==2) 
06884:  MOVF   x9B,W
06886:  SUBLW  02
06888:  BNZ   68C6
....................                Temperatura2-=0.1; 
0688A:  BSF    FD8.1
0688C:  MOVFF  625,662
06890:  MOVFF  624,661
06894:  MOVFF  623,660
06898:  MOVFF  622,65F
0689C:  MOVLW  CD
0689E:  MOVLB  6
068A0:  MOVWF  x66
068A2:  MOVLW  CC
068A4:  MOVWF  x65
068A6:  MOVLW  4C
068A8:  MOVWF  x64
068AA:  MOVLW  7B
068AC:  MOVWF  x63
068AE:  MOVLB  0
068B0:  CALL   124A
068B4:  MOVFF  03,625
068B8:  MOVFF  02,624
068BC:  MOVFF  01,623
068C0:  MOVFF  00,622
068C4:  MOVLB  5
....................                 
....................             if(Opcion==3) 
068C6:  MOVF   x9B,W
068C8:  SUBLW  03
068CA:  BNZ   6908
....................                Temperatura3-=0.1;    
068CC:  BSF    FD8.1
068CE:  MOVFF  629,662
068D2:  MOVFF  628,661
068D6:  MOVFF  627,660
068DA:  MOVFF  626,65F
068DE:  MOVLW  CD
068E0:  MOVLB  6
068E2:  MOVWF  x66
068E4:  MOVLW  CC
068E6:  MOVWF  x65
068E8:  MOVLW  4C
068EA:  MOVWF  x64
068EC:  MOVLW  7B
068EE:  MOVWF  x63
068F0:  MOVLB  0
068F2:  CALL   124A
068F6:  MOVFF  03,629
068FA:  MOVFF  02,628
068FE:  MOVFF  01,627
06902:  MOVFF  00,626
06906:  MOVLB  5
....................          } 
....................                            
....................          if(LEFT){ 
06908:  BSF    F96.1
0690A:  BTFSC  F84.1
0690C:  BRA    6C5A
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0690E:  MOVLW  04
06910:  MOVLB  6
06912:  MOVWF  x5A
06914:  MOVLW  AF
06916:  MOVWF  x63
06918:  MOVLB  0
0691A:  CALL   1056
0691E:  MOVLB  6
06920:  DECFSZ x5A,F
06922:  BRA    6914
06924:  MOVLW  01
06926:  MOVLB  5
06928:  MOVWF  x97
0692A:  MOVLB  6
0692C:  CLRF   x62
0692E:  MOVLB  0
06930:  CALL   25C0
06934:  MOVLW  01
06936:  MOVLB  5
06938:  MOVWF  x9B
0693A:  BSF    x87.4
....................              
....................             entero=(int8)Temperatura1; 
0693C:  MOVFF  621,65D
06940:  MOVFF  620,65C
06944:  MOVFF  61F,65B
06948:  MOVFF  61E,65A
0694C:  MOVLB  0
0694E:  CALL   4346
06952:  MOVFF  01,59F
....................             decimal=(Temperatura1-entero)*10; 
06956:  MOVLB  6
06958:  CLRF   x61
0695A:  MOVFF  59F,660
0695E:  MOVLB  0
06960:  CALL   10B6
06964:  BSF    FD8.1
06966:  MOVFF  621,662
0696A:  MOVFF  620,661
0696E:  MOVFF  61F,660
06972:  MOVFF  61E,65F
06976:  MOVFF  03,666
0697A:  MOVFF  02,665
0697E:  MOVFF  01,664
06982:  MOVFF  00,663
06986:  CALL   124A
0698A:  MOVFF  00,65A
0698E:  MOVFF  01,65B
06992:  MOVFF  02,65C
06996:  MOVFF  03,65D
0699A:  MOVFF  03,67D
0699E:  MOVFF  02,67C
069A2:  MOVFF  01,67B
069A6:  MOVFF  00,67A
069AA:  MOVLB  6
069AC:  CLRF   x81
069AE:  CLRF   x80
069B0:  MOVLW  20
069B2:  MOVWF  x7F
069B4:  MOVLW  82
069B6:  MOVWF  x7E
069B8:  MOVLB  0
069BA:  CALL   2D40
069BE:  MOVFF  03,65D
069C2:  MOVFF  02,65C
069C6:  MOVFF  01,65B
069CA:  MOVFF  00,65A
069CE:  CALL   4346
069D2:  MOVFF  01,59E
....................             write_eeprom(8,entero); 
069D6:  CLRF   FAA
069D8:  MOVLW  08
069DA:  MOVWF  FA9
069DC:  MOVFF  59F,FA8
069E0:  BCF    FA6.6
069E2:  BCF    FA6.7
069E4:  BSF    FA6.2
069E6:  MOVF   FF2,W
069E8:  MOVWF  00
069EA:  BCF    FF2.7
069EC:  MOVLB  F
069EE:  MOVLW  55
069F0:  MOVWF  FA7
069F2:  MOVLW  AA
069F4:  MOVWF  FA7
069F6:  BSF    FA6.1
069F8:  BTFSC  FA6.1
069FA:  BRA    69F8
069FC:  BCF    FA6.2
069FE:  MOVF   00,W
06A00:  IORWF  FF2,F
....................             delay_ms(50);    
06A02:  MOVLW  32
06A04:  MOVLB  6
06A06:  MOVWF  x63
06A08:  MOVLB  0
06A0A:  CALL   1056
....................             write_eeprom(9,decimal);//Guardar valor de Setpoint en eeprom 
06A0E:  CLRF   FAA
06A10:  MOVLW  09
06A12:  MOVWF  FA9
06A14:  MOVFF  59E,FA8
06A18:  BCF    FA6.6
06A1A:  BCF    FA6.7
06A1C:  BSF    FA6.2
06A1E:  MOVF   FF2,W
06A20:  MOVWF  00
06A22:  BCF    FF2.7
06A24:  MOVLB  F
06A26:  MOVLW  55
06A28:  MOVWF  FA7
06A2A:  MOVLW  AA
06A2C:  MOVWF  FA7
06A2E:  BSF    FA6.1
06A30:  BTFSC  FA6.1
06A32:  BRA    6A30
06A34:  BCF    FA6.2
06A36:  MOVF   00,W
06A38:  IORWF  FF2,F
....................             delay_ms(50);   
06A3A:  MOVLW  32
06A3C:  MOVLB  6
06A3E:  MOVWF  x63
06A40:  MOVLB  0
06A42:  CALL   1056
....................              
....................             entero=(int8)Temperatura2; 
06A46:  MOVFF  625,65D
06A4A:  MOVFF  624,65C
06A4E:  MOVFF  623,65B
06A52:  MOVFF  622,65A
06A56:  CALL   4346
06A5A:  MOVFF  01,59F
....................             decimal=(Temperatura2-entero)*10; 
06A5E:  MOVLB  6
06A60:  CLRF   x61
06A62:  MOVFF  59F,660
06A66:  MOVLB  0
06A68:  CALL   10B6
06A6C:  BSF    FD8.1
06A6E:  MOVFF  625,662
06A72:  MOVFF  624,661
06A76:  MOVFF  623,660
06A7A:  MOVFF  622,65F
06A7E:  MOVFF  03,666
06A82:  MOVFF  02,665
06A86:  MOVFF  01,664
06A8A:  MOVFF  00,663
06A8E:  CALL   124A
06A92:  MOVFF  00,65A
06A96:  MOVFF  01,65B
06A9A:  MOVFF  02,65C
06A9E:  MOVFF  03,65D
06AA2:  MOVFF  03,67D
06AA6:  MOVFF  02,67C
06AAA:  MOVFF  01,67B
06AAE:  MOVFF  00,67A
06AB2:  MOVLB  6
06AB4:  CLRF   x81
06AB6:  CLRF   x80
06AB8:  MOVLW  20
06ABA:  MOVWF  x7F
06ABC:  MOVLW  82
06ABE:  MOVWF  x7E
06AC0:  MOVLB  0
06AC2:  CALL   2D40
06AC6:  MOVFF  03,65D
06ACA:  MOVFF  02,65C
06ACE:  MOVFF  01,65B
06AD2:  MOVFF  00,65A
06AD6:  CALL   4346
06ADA:  MOVFF  01,59E
....................             write_eeprom(10,entero); 
06ADE:  CLRF   FAA
06AE0:  MOVLW  0A
06AE2:  MOVWF  FA9
06AE4:  MOVFF  59F,FA8
06AE8:  BCF    FA6.6
06AEA:  BCF    FA6.7
06AEC:  BSF    FA6.2
06AEE:  MOVF   FF2,W
06AF0:  MOVWF  00
06AF2:  BCF    FF2.7
06AF4:  MOVLB  F
06AF6:  MOVLW  55
06AF8:  MOVWF  FA7
06AFA:  MOVLW  AA
06AFC:  MOVWF  FA7
06AFE:  BSF    FA6.1
06B00:  BTFSC  FA6.1
06B02:  BRA    6B00
06B04:  BCF    FA6.2
06B06:  MOVF   00,W
06B08:  IORWF  FF2,F
....................             delay_ms(50);    
06B0A:  MOVLW  32
06B0C:  MOVLB  6
06B0E:  MOVWF  x63
06B10:  MOVLB  0
06B12:  CALL   1056
....................             write_eeprom(11,decimal);//Guardar valor de Setpoint en eeprom 
06B16:  CLRF   FAA
06B18:  MOVLW  0B
06B1A:  MOVWF  FA9
06B1C:  MOVFF  59E,FA8
06B20:  BCF    FA6.6
06B22:  BCF    FA6.7
06B24:  BSF    FA6.2
06B26:  MOVF   FF2,W
06B28:  MOVWF  00
06B2A:  BCF    FF2.7
06B2C:  MOVLB  F
06B2E:  MOVLW  55
06B30:  MOVWF  FA7
06B32:  MOVLW  AA
06B34:  MOVWF  FA7
06B36:  BSF    FA6.1
06B38:  BTFSC  FA6.1
06B3A:  BRA    6B38
06B3C:  BCF    FA6.2
06B3E:  MOVF   00,W
06B40:  IORWF  FF2,F
....................             delay_ms(50);    
06B42:  MOVLW  32
06B44:  MOVLB  6
06B46:  MOVWF  x63
06B48:  MOVLB  0
06B4A:  CALL   1056
....................              
....................             entero=(int8)Temperatura3; 
06B4E:  MOVFF  629,65D
06B52:  MOVFF  628,65C
06B56:  MOVFF  627,65B
06B5A:  MOVFF  626,65A
06B5E:  CALL   4346
06B62:  MOVFF  01,59F
....................             decimal=(Temperatura3-entero)*10; 
06B66:  MOVLB  6
06B68:  CLRF   x61
06B6A:  MOVFF  59F,660
06B6E:  MOVLB  0
06B70:  CALL   10B6
06B74:  BSF    FD8.1
06B76:  MOVFF  629,662
06B7A:  MOVFF  628,661
06B7E:  MOVFF  627,660
06B82:  MOVFF  626,65F
06B86:  MOVFF  03,666
06B8A:  MOVFF  02,665
06B8E:  MOVFF  01,664
06B92:  MOVFF  00,663
06B96:  CALL   124A
06B9A:  MOVFF  00,65A
06B9E:  MOVFF  01,65B
06BA2:  MOVFF  02,65C
06BA6:  MOVFF  03,65D
06BAA:  MOVFF  03,67D
06BAE:  MOVFF  02,67C
06BB2:  MOVFF  01,67B
06BB6:  MOVFF  00,67A
06BBA:  MOVLB  6
06BBC:  CLRF   x81
06BBE:  CLRF   x80
06BC0:  MOVLW  20
06BC2:  MOVWF  x7F
06BC4:  MOVLW  82
06BC6:  MOVWF  x7E
06BC8:  MOVLB  0
06BCA:  CALL   2D40
06BCE:  MOVFF  03,65D
06BD2:  MOVFF  02,65C
06BD6:  MOVFF  01,65B
06BDA:  MOVFF  00,65A
06BDE:  CALL   4346
06BE2:  MOVFF  01,59E
....................             write_eeprom(12,entero); 
06BE6:  CLRF   FAA
06BE8:  MOVLW  0C
06BEA:  MOVWF  FA9
06BEC:  MOVFF  59F,FA8
06BF0:  BCF    FA6.6
06BF2:  BCF    FA6.7
06BF4:  BSF    FA6.2
06BF6:  MOVF   FF2,W
06BF8:  MOVWF  00
06BFA:  BCF    FF2.7
06BFC:  MOVLB  F
06BFE:  MOVLW  55
06C00:  MOVWF  FA7
06C02:  MOVLW  AA
06C04:  MOVWF  FA7
06C06:  BSF    FA6.1
06C08:  BTFSC  FA6.1
06C0A:  BRA    6C08
06C0C:  BCF    FA6.2
06C0E:  MOVF   00,W
06C10:  IORWF  FF2,F
....................             delay_ms(50);    
06C12:  MOVLW  32
06C14:  MOVLB  6
06C16:  MOVWF  x63
06C18:  MOVLB  0
06C1A:  CALL   1056
....................             write_eeprom(13,decimal);//Guardar valor de Setpoint en eeprom 
06C1E:  CLRF   FAA
06C20:  MOVLW  0D
06C22:  MOVWF  FA9
06C24:  MOVFF  59E,FA8
06C28:  BCF    FA6.6
06C2A:  BCF    FA6.7
06C2C:  BSF    FA6.2
06C2E:  MOVF   FF2,W
06C30:  MOVWF  00
06C32:  BCF    FF2.7
06C34:  MOVLB  F
06C36:  MOVLW  55
06C38:  MOVWF  FA7
06C3A:  MOVLW  AA
06C3C:  MOVWF  FA7
06C3E:  BSF    FA6.1
06C40:  BTFSC  FA6.1
06C42:  BRA    6C40
06C44:  BCF    FA6.2
06C46:  MOVF   00,W
06C48:  IORWF  FF2,F
....................             delay_ms(50);  
06C4A:  MOVLW  32
06C4C:  MOVLB  6
06C4E:  MOVWF  x63
06C50:  MOVLB  0
06C52:  CALL   1056
....................             MensajeAlmacenado(); 
06C56:  CALL   37E8
....................          } 
....................           
....................          if(Temperatura1<1) 
06C5A:  MOVFF  621,661
06C5E:  MOVFF  620,660
06C62:  MOVFF  61F,65F
06C66:  MOVFF  61E,65E
06C6A:  MOVLB  6
06C6C:  CLRF   x65
06C6E:  CLRF   x64
06C70:  CLRF   x63
06C72:  MOVLW  7F
06C74:  MOVWF  x62
06C76:  MOVLB  0
06C78:  CALL   1C46
06C7C:  BNC   6C8C
....................             Temperatura1=80; 
06C7E:  MOVLB  6
06C80:  CLRF   x21
06C82:  CLRF   x20
06C84:  MOVLW  20
06C86:  MOVWF  x1F
06C88:  MOVLW  85
06C8A:  MOVWF  x1E
....................              
....................          if(Temperatura2<1) 
06C8C:  MOVFF  625,661
06C90:  MOVFF  624,660
06C94:  MOVFF  623,65F
06C98:  MOVFF  622,65E
06C9C:  MOVLB  6
06C9E:  CLRF   x65
06CA0:  CLRF   x64
06CA2:  CLRF   x63
06CA4:  MOVLW  7F
06CA6:  MOVWF  x62
06CA8:  MOVLB  0
06CAA:  CALL   1C46
06CAE:  BNC   6CBE
....................             Temperatura2=80; 
06CB0:  MOVLB  6
06CB2:  CLRF   x25
06CB4:  CLRF   x24
06CB6:  MOVLW  20
06CB8:  MOVWF  x23
06CBA:  MOVLW  85
06CBC:  MOVWF  x22
....................              
....................          if(Temperatura3<1) 
06CBE:  MOVFF  629,661
06CC2:  MOVFF  628,660
06CC6:  MOVFF  627,65F
06CCA:  MOVFF  626,65E
06CCE:  MOVLB  6
06CD0:  CLRF   x65
06CD2:  CLRF   x64
06CD4:  CLRF   x63
06CD6:  MOVLW  7F
06CD8:  MOVWF  x62
06CDA:  MOVLB  0
06CDC:  CALL   1C46
06CE0:  BNC   6CF0
....................             Temperatura3=80; 
06CE2:  MOVLB  6
06CE4:  CLRF   x29
06CE6:  CLRF   x28
06CE8:  MOVLW  20
06CEA:  MOVWF  x27
06CEC:  MOVLW  85
06CEE:  MOVWF  x26
....................              
....................          if(Temperatura1>80) 
06CF0:  MOVLB  6
06CF2:  CLRF   x61
06CF4:  CLRF   x60
06CF6:  MOVLW  20
06CF8:  MOVWF  x5F
06CFA:  MOVLW  85
06CFC:  MOVWF  x5E
06CFE:  MOVFF  621,665
06D02:  MOVFF  620,664
06D06:  MOVFF  61F,663
06D0A:  MOVFF  61E,662
06D0E:  MOVLB  0
06D10:  CALL   1C46
06D14:  BNC   6D22
....................             Temperatura1=1;    
06D16:  MOVLB  6
06D18:  CLRF   x21
06D1A:  CLRF   x20
06D1C:  CLRF   x1F
06D1E:  MOVLW  7F
06D20:  MOVWF  x1E
....................              
....................          if(Temperatura2>80) 
06D22:  MOVLB  6
06D24:  CLRF   x61
06D26:  CLRF   x60
06D28:  MOVLW  20
06D2A:  MOVWF  x5F
06D2C:  MOVLW  85
06D2E:  MOVWF  x5E
06D30:  MOVFF  625,665
06D34:  MOVFF  624,664
06D38:  MOVFF  623,663
06D3C:  MOVFF  622,662
06D40:  MOVLB  0
06D42:  CALL   1C46
06D46:  BNC   6D54
....................             Temperatura2=1;    
06D48:  MOVLB  6
06D4A:  CLRF   x25
06D4C:  CLRF   x24
06D4E:  CLRF   x23
06D50:  MOVLW  7F
06D52:  MOVWF  x22
....................              
....................          if(Temperatura3>80) 
06D54:  MOVLB  6
06D56:  CLRF   x61
06D58:  CLRF   x60
06D5A:  MOVLW  20
06D5C:  MOVWF  x5F
06D5E:  MOVLW  85
06D60:  MOVWF  x5E
06D62:  MOVFF  629,665
06D66:  MOVFF  628,664
06D6A:  MOVFF  627,663
06D6E:  MOVFF  626,662
06D72:  MOVLB  0
06D74:  CALL   1C46
06D78:  BNC   6D88
....................             Temperatura3=1;    
06D7A:  MOVLB  6
06D7C:  CLRF   x29
06D7E:  CLRF   x28
06D80:  CLRF   x27
06D82:  MOVLW  7F
06D84:  MOVWF  x26
06D86:  MOVLB  0
06D88:  MOVLB  5
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==6){ // Menu de Temporizador 
06D8A:  MOVF   x97,W
06D8C:  SUBLW  06
06D8E:  BTFSS  FD8.2
06D90:  BRA    7118
....................       
....................          if(unidad<1) 
06D92:  MOVF   x98,F
06D94:  BNZ   6D9A
....................             unidad=4; 
06D96:  MOVLW  04
06D98:  MOVWF  x98
....................           
....................          strcpy(Menus.Letra,"Tiempo"); 
06D9A:  MOVLW  06
06D9C:  MOVWF  FEA
06D9E:  MOVLW  3A
06DA0:  MOVWF  FE9
06DA2:  MOVFF  FF2,65A
06DA6:  BCF    FF2.7
06DA8:  MOVLW  00
06DAA:  MOVLB  0
06DAC:  CALL   0A70
06DB0:  TBLRD*-
06DB2:  TBLRD*+
06DB4:  MOVF   FF5,W
06DB6:  MOVWF  FEE
06DB8:  IORLW  00
06DBA:  BNZ   6DB2
06DBC:  MOVLB  6
06DBE:  BTFSC  x5A.7
06DC0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,10,0,1,2); 
06DC2:  MOVLW  06
06DC4:  MOVWF  x63
06DC6:  MOVLW  3A
06DC8:  MOVWF  x62
06DCA:  MOVLW  0A
06DCC:  MOVWF  x64
06DCE:  CLRF   x65
06DD0:  MOVLW  01
06DD2:  MOVWF  x66
06DD4:  MOVLW  02
06DD6:  MOVWF  x67
06DD8:  MOVLB  0
06DDA:  CALL   2BEE
....................           
....................          if(unidad==4) 
06DDE:  MOVLB  5
06DE0:  MOVF   x98,W
06DE2:  SUBLW  04
06DE4:  BNZ   6E04
....................          {displayTiempo(Testerilizacionp[3],20,40,1,2);} 
06DE6:  MOVFF  5D5,65B
06DEA:  MOVLW  14
06DEC:  MOVLB  6
06DEE:  MOVWF  x5C
06DF0:  MOVLW  28
06DF2:  MOVWF  x5D
06DF4:  MOVLW  01
06DF6:  MOVWF  x5E
06DF8:  MOVLW  02
06DFA:  MOVWF  x5F
06DFC:  MOVLB  0
06DFE:  CALL   4B7E
....................          else 
06E02:  BRA    6E1E
....................          {displayTiempo(Testerilizacionp[3],20,40,0,2);} 
06E04:  MOVFF  5D5,65B
06E08:  MOVLW  14
06E0A:  MOVLB  6
06E0C:  MOVWF  x5C
06E0E:  MOVLW  28
06E10:  MOVWF  x5D
06E12:  CLRF   x5E
06E14:  MOVLW  02
06E16:  MOVWF  x5F
06E18:  MOVLB  0
06E1A:  CALL   4B7E
....................           
....................          if(unidad==3) 
06E1E:  MOVLB  5
06E20:  MOVF   x98,W
06E22:  SUBLW  03
06E24:  BNZ   6E42
....................          {displayTiempo(Testerilizacionp[2],40,40,1,2);} 
06E26:  MOVFF  5D4,65B
06E2A:  MOVLW  28
06E2C:  MOVLB  6
06E2E:  MOVWF  x5C
06E30:  MOVWF  x5D
06E32:  MOVLW  01
06E34:  MOVWF  x5E
06E36:  MOVLW  02
06E38:  MOVWF  x5F
06E3A:  MOVLB  0
06E3C:  CALL   4B7E
....................          else 
06E40:  BRA    6E5A
....................          {displayTiempo(Testerilizacionp[2],40,40,0,2);} 
06E42:  MOVFF  5D4,65B
06E46:  MOVLW  28
06E48:  MOVLB  6
06E4A:  MOVWF  x5C
06E4C:  MOVWF  x5D
06E4E:  CLRF   x5E
06E50:  MOVLW  02
06E52:  MOVWF  x5F
06E54:  MOVLB  0
06E56:  CALL   4B7E
....................           
....................          if(unidad==2) 
06E5A:  MOVLB  5
06E5C:  MOVF   x98,W
06E5E:  SUBLW  02
06E60:  BNZ   6E80
....................          {displayTiempo(Testerilizacionp[1],70,40,1,2);} 
06E62:  MOVFF  5D3,65B
06E66:  MOVLW  46
06E68:  MOVLB  6
06E6A:  MOVWF  x5C
06E6C:  MOVLW  28
06E6E:  MOVWF  x5D
06E70:  MOVLW  01
06E72:  MOVWF  x5E
06E74:  MOVLW  02
06E76:  MOVWF  x5F
06E78:  MOVLB  0
06E7A:  CALL   4B7E
....................          else 
06E7E:  BRA    6E9A
....................          {displayTiempo(Testerilizacionp[1],70,40,0,2);} 
06E80:  MOVFF  5D3,65B
06E84:  MOVLW  46
06E86:  MOVLB  6
06E88:  MOVWF  x5C
06E8A:  MOVLW  28
06E8C:  MOVWF  x5D
06E8E:  CLRF   x5E
06E90:  MOVLW  02
06E92:  MOVWF  x5F
06E94:  MOVLB  0
06E96:  CALL   4B7E
....................           
....................          if(unidad==1) 
06E9A:  MOVLB  5
06E9C:  DECFSZ x98,W
06E9E:  BRA    6EBE
....................          {displayTiempo(Testerilizacionp[0],90,40,1,2);} 
06EA0:  MOVFF  5D2,65B
06EA4:  MOVLW  5A
06EA6:  MOVLB  6
06EA8:  MOVWF  x5C
06EAA:  MOVLW  28
06EAC:  MOVWF  x5D
06EAE:  MOVLW  01
06EB0:  MOVWF  x5E
06EB2:  MOVLW  02
06EB4:  MOVWF  x5F
06EB6:  MOVLB  0
06EB8:  CALL   4B7E
....................          else 
06EBC:  BRA    6ED8
....................          {displayTiempo(Testerilizacionp[0],90,40,0,2);} 
06EBE:  MOVFF  5D2,65B
06EC2:  MOVLW  5A
06EC4:  MOVLB  6
06EC6:  MOVWF  x5C
06EC8:  MOVLW  28
06ECA:  MOVWF  x5D
06ECC:  CLRF   x5E
06ECE:  MOVLW  02
06ED0:  MOVWF  x5F
06ED2:  MOVLB  0
06ED4:  CALL   4B7E
....................           
....................          strcpy(Menus.Letra,":"); 
06ED8:  MOVLW  06
06EDA:  MOVWF  FEA
06EDC:  MOVLW  3A
06EDE:  MOVWF  FE9
06EE0:  MOVFF  FF2,65A
06EE4:  BCF    FF2.7
06EE6:  MOVLW  00
06EE8:  CALL   0A96
06EEC:  TBLRD*-
06EEE:  TBLRD*+
06EF0:  MOVF   FF5,W
06EF2:  MOVWF  FEE
06EF4:  IORLW  00
06EF6:  BNZ   6EEE
06EF8:  MOVLB  6
06EFA:  BTFSC  x5A.7
06EFC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,60,42,2,2);            
06EFE:  MOVLW  06
06F00:  MOVWF  x63
06F02:  MOVLW  3A
06F04:  MOVWF  x62
06F06:  MOVLW  3C
06F08:  MOVWF  x64
06F0A:  MOVLW  2A
06F0C:  MOVWF  x65
06F0E:  MOVLW  02
06F10:  MOVWF  x66
06F12:  MOVWF  x67
06F14:  MOVLB  0
06F16:  CALL   2BEE
....................        
....................          if(UP){   
06F1A:  BSF    F92.4
06F1C:  BTFSC  F80.4
06F1E:  BRA    6F98
....................             if(unidad==2){ 
06F20:  MOVLB  5
06F22:  MOVF   x98,W
06F24:  SUBLW  02
06F26:  BNZ   6F60
....................                if(Testerilizacionp[unidad-1]<5){ 
06F28:  MOVLW  01
06F2A:  SUBWF  x98,W
06F2C:  CLRF   03
06F2E:  ADDLW  D2
06F30:  MOVWF  FE9
06F32:  MOVLW  05
06F34:  ADDWFC 03,W
06F36:  MOVWF  FEA
06F38:  BTFSC  FEF.7
06F3A:  BRA    6F42
06F3C:  MOVF   FEF,W
06F3E:  SUBLW  04
06F40:  BNC   6F5E
....................                   DelayPuls();Testerilizacionp[unidad-1]++;visual=1; 
06F42:  MOVLB  0
06F44:  CALL   37DA
06F48:  MOVLW  01
06F4A:  MOVLB  5
06F4C:  SUBWF  x98,W
06F4E:  CLRF   03
06F50:  ADDLW  D2
06F52:  MOVWF  FE9
06F54:  MOVLW  05
06F56:  ADDWFC 03,W
06F58:  MOVWF  FEA
06F5A:  INCF   FEF,F
06F5C:  BSF    x87.4
....................                } 
....................             }else{ 
06F5E:  BRA    6F96
....................                if(Testerilizacionp[unidad-1]<9){ 
06F60:  MOVLW  01
06F62:  SUBWF  x98,W
06F64:  CLRF   03
06F66:  ADDLW  D2
06F68:  MOVWF  FE9
06F6A:  MOVLW  05
06F6C:  ADDWFC 03,W
06F6E:  MOVWF  FEA
06F70:  BTFSC  FEF.7
06F72:  BRA    6F7A
06F74:  MOVF   FEF,W
06F76:  SUBLW  08
06F78:  BNC   6F96
....................                   DelayPuls();Testerilizacionp[unidad-1]++;visual=1; 
06F7A:  MOVLB  0
06F7C:  CALL   37DA
06F80:  MOVLW  01
06F82:  MOVLB  5
06F84:  SUBWF  x98,W
06F86:  CLRF   03
06F88:  ADDLW  D2
06F8A:  MOVWF  FE9
06F8C:  MOVLW  05
06F8E:  ADDWFC 03,W
06F90:  MOVWF  FEA
06F92:  INCF   FEF,F
06F94:  BSF    x87.4
06F96:  MOVLB  0
....................                } 
....................             } 
....................          } 
....................                 
....................          if(DOWN){   
06F98:  BSF    F92.5
06F9A:  BTFSC  F80.5
06F9C:  BRA    6FD8
....................             if(Testerilizacionp[unidad-1]>0){ 
06F9E:  MOVLW  01
06FA0:  MOVLB  5
06FA2:  SUBWF  x98,W
06FA4:  CLRF   03
06FA6:  ADDLW  D2
06FA8:  MOVWF  FE9
06FAA:  MOVLW  05
06FAC:  ADDWFC 03,W
06FAE:  MOVWF  FEA
06FB0:  BTFSC  FEF.7
06FB2:  BRA    6FD6
06FB4:  MOVF   FEF,W
06FB6:  SUBLW  00
06FB8:  BC    6FD6
....................                DelayPuls();Testerilizacionp[unidad-1]--;visual=1;      
06FBA:  MOVLB  0
06FBC:  CALL   37DA
06FC0:  MOVLW  01
06FC2:  MOVLB  5
06FC4:  SUBWF  x98,W
06FC6:  CLRF   03
06FC8:  ADDLW  D2
06FCA:  MOVWF  FE9
06FCC:  MOVLW  05
06FCE:  ADDWFC 03,W
06FD0:  MOVWF  FEA
06FD2:  DECF   FEF,F
06FD4:  BSF    x87.4
06FD6:  MOVLB  0
....................             } 
....................          } 
....................                 
....................          if(RIGHT){   
06FD8:  BSF    F96.0
06FDA:  BTFSC  F84.0
06FDC:  BRA    6FEA
....................             DelayPuls();unidad--;visual=1; 
06FDE:  CALL   37DA
06FE2:  MOVLB  5
06FE4:  DECF   x98,F
06FE6:  BSF    x87.4
06FE8:  MOVLB  0
....................          }  
....................                    
....................          if(LEFT){ 
06FEA:  BSF    F96.1
06FEC:  BTFSC  F84.1
06FEE:  BRA    711A
....................             delay_ms(700);Menu=1;glcd_fillscreen(OFF);Opcion=1;visual=1; 
06FF0:  MOVLW  04
06FF2:  MOVLB  6
06FF4:  MOVWF  x5A
06FF6:  MOVLW  AF
06FF8:  MOVWF  x63
06FFA:  MOVLB  0
06FFC:  CALL   1056
07000:  MOVLB  6
07002:  DECFSZ x5A,F
07004:  BRA    6FF6
07006:  MOVLW  01
07008:  MOVLB  5
0700A:  MOVWF  x97
0700C:  MOVLB  6
0700E:  CLRF   x62
07010:  MOVLB  0
07012:  CALL   25C0
07016:  MOVLW  01
07018:  MOVLB  5
0701A:  MOVWF  x9B
0701C:  BSF    x87.4
....................             write_eeprom(0,Testerilizacionp[0]); 
0701E:  CLRF   FAA
07020:  CLRF   FA9
07022:  MOVFF  5D2,FA8
07026:  BCF    FA6.6
07028:  BCF    FA6.7
0702A:  BSF    FA6.2
0702C:  MOVF   FF2,W
0702E:  MOVWF  00
07030:  BCF    FF2.7
07032:  MOVLB  F
07034:  MOVLW  55
07036:  MOVWF  FA7
07038:  MOVLW  AA
0703A:  MOVWF  FA7
0703C:  BSF    FA6.1
0703E:  BTFSC  FA6.1
07040:  BRA    703E
07042:  BCF    FA6.2
07044:  MOVF   00,W
07046:  IORWF  FF2,F
....................             delay_ms(50);    
07048:  MOVLW  32
0704A:  MOVLB  6
0704C:  MOVWF  x63
0704E:  MOVLB  0
07050:  CALL   1056
....................             write_eeprom(1,Testerilizacionp[1]); 
07054:  CLRF   FAA
07056:  MOVLW  01
07058:  MOVWF  FA9
0705A:  MOVFF  5D3,FA8
0705E:  BCF    FA6.6
07060:  BCF    FA6.7
07062:  BSF    FA6.2
07064:  MOVF   FF2,W
07066:  MOVWF  00
07068:  BCF    FF2.7
0706A:  MOVLB  F
0706C:  MOVLW  55
0706E:  MOVWF  FA7
07070:  MOVLW  AA
07072:  MOVWF  FA7
07074:  BSF    FA6.1
07076:  BTFSC  FA6.1
07078:  BRA    7076
0707A:  BCF    FA6.2
0707C:  MOVF   00,W
0707E:  IORWF  FF2,F
....................             delay_ms(50);    
07080:  MOVLW  32
07082:  MOVLB  6
07084:  MOVWF  x63
07086:  MOVLB  0
07088:  CALL   1056
....................             write_eeprom(2,Testerilizacionp[2]); 
0708C:  CLRF   FAA
0708E:  MOVLW  02
07090:  MOVWF  FA9
07092:  MOVFF  5D4,FA8
07096:  BCF    FA6.6
07098:  BCF    FA6.7
0709A:  BSF    FA6.2
0709C:  MOVF   FF2,W
0709E:  MOVWF  00
070A0:  BCF    FF2.7
070A2:  MOVLB  F
070A4:  MOVLW  55
070A6:  MOVWF  FA7
070A8:  MOVLW  AA
070AA:  MOVWF  FA7
070AC:  BSF    FA6.1
070AE:  BTFSC  FA6.1
070B0:  BRA    70AE
070B2:  BCF    FA6.2
070B4:  MOVF   00,W
070B6:  IORWF  FF2,F
....................             delay_ms(50);    
070B8:  MOVLW  32
070BA:  MOVLB  6
070BC:  MOVWF  x63
070BE:  MOVLB  0
070C0:  CALL   1056
....................             write_eeprom(3,Testerilizacionp[3]); 
070C4:  CLRF   FAA
070C6:  MOVLW  03
070C8:  MOVWF  FA9
070CA:  MOVFF  5D5,FA8
070CE:  BCF    FA6.6
070D0:  BCF    FA6.7
070D2:  BSF    FA6.2
070D4:  MOVF   FF2,W
070D6:  MOVWF  00
070D8:  BCF    FF2.7
070DA:  MOVLB  F
070DC:  MOVLW  55
070DE:  MOVWF  FA7
070E0:  MOVLW  AA
070E2:  MOVWF  FA7
070E4:  BSF    FA6.1
070E6:  BTFSC  FA6.1
070E8:  BRA    70E6
070EA:  BCF    FA6.2
070EC:  MOVF   00,W
070EE:  IORWF  FF2,F
....................             delay_ms(50);    
070F0:  MOVLW  32
070F2:  MOVLB  6
070F4:  MOVWF  x63
070F6:  MOVLB  0
070F8:  CALL   1056
....................             MensajeAlmacenado(); 
070FC:  CALL   37E8
....................             if((Testerilizacionp[0]==0)&&(Testerilizacionp[1]==0)&&(Testerilizacionp[2]==0)&&(Testerilizacionp[3]==0)) 
07100:  MOVLB  5
07102:  MOVF   xD2,F
07104:  BNZ   7116
07106:  MOVF   xD3,F
07108:  BNZ   7116
0710A:  MOVF   xD4,F
0710C:  BNZ   7116
0710E:  MOVF   xD5,F
07110:  BNZ   7116
....................                Infinito=1; 
07112:  BSF    x93.1
....................             else 
07114:  BRA    7118
....................                Infinito=0; 
07116:  BCF    x93.1
07118:  MOVLB  0
....................          } 
....................      } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==7){ // Menu de Cambio de Contraseña 
0711A:  MOVLB  5
0711C:  MOVF   x97,W
0711E:  SUBLW  07
07120:  BNZ   714A
....................          PidePassword(1,7,91,Password[0],Password[1],Password[2],Password[3],0); 
07122:  MOVLW  01
07124:  MOVLB  6
07126:  MOVWF  x5A
07128:  MOVLW  07
0712A:  MOVWF  x5B
0712C:  MOVLW  5B
0712E:  MOVWF  x5C
07130:  MOVFF  5DA,65D
07134:  MOVFF  5DB,65E
07138:  MOVFF  5DC,65F
0713C:  MOVFF  5DD,660
07140:  CLRF   x61
07142:  MOVLB  0
07144:  CALL   3896
07148:  MOVLB  5
....................       }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==91){ // Menu de Cambio de Contraseña 
0714A:  MOVF   x97,W
0714C:  SUBLW  5B
0714E:  BNZ   7178
....................        PidePassword(1,91,91,Password[0],Password[1],Password[2],Password[3],1); 
07150:  MOVLW  01
07152:  MOVLB  6
07154:  MOVWF  x5A
07156:  MOVLW  5B
07158:  MOVWF  x5B
0715A:  MOVWF  x5C
0715C:  MOVFF  5DA,65D
07160:  MOVFF  5DB,65E
07164:  MOVFF  5DC,65F
07168:  MOVFF  5DD,660
0716C:  MOVLW  01
0716E:  MOVWF  x61
07170:  MOVLB  0
07172:  CALL   3896
07176:  MOVLB  5
....................     }     
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------     
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==20){ //Menu de Funcionamiento 
07178:  MOVF   x97,W
0717A:  SUBLW  14
0717C:  BTFSS  FD8.2
0717E:  GOTO   7BDA
....................        
....................       // Muestra imagen de fondo en Display GLCD 
....................       glcd_imagen(5); 
07182:  MOVLW  05
07184:  MOVLB  6
07186:  MOVWF  x5A
07188:  MOVLB  0
0718A:  GOTO   4D44
....................        
....................       if(UP && DOWN){ 
0718E:  BSF    F92.4
07190:  BTFSC  F80.4
07192:  BRA    71AC
07194:  BSF    F92.5
07196:  BTFSC  F80.5
07198:  BRA    71AC
....................          glcd_init(ON);flag_display=!flag_display; 
0719A:  MOVLW  01
0719C:  MOVLB  6
0719E:  MOVWF  x5A
071A0:  MOVLB  0
071A2:  CALL   26D2
071A6:  MOVLB  5
071A8:  BTG    x93.5
071AA:  MOVLB  0
....................       } 
....................   
....................       if(!TERM && !DOOR && !Finalizo){ 
071AC:  BSF    F93.7
071AE:  BTFSC  F81.7
071B0:  BRA    72F8
071B2:  BSF    F96.2
071B4:  BTFSC  F84.2
071B6:  BRA    72F8
071B8:  MOVLB  5
071BA:  BTFSS  x93.7
071BC:  BRA    71C2
071BE:  MOVLB  0
071C0:  BRA    72F8
....................          Motor1_on; 
071C2:  BCF    F8B.5
071C4:  BCF    F94.5
....................          Motor2_on; 
071C6:  BCF    F8B.6
071C8:  BCF    F94.6
....................          if(Temperatura>=Setpoint-1.0){ 
071CA:  BSF    FD8.1
071CC:  MOVFF  61D,662
071D0:  MOVFF  61C,661
071D4:  MOVFF  61B,660
071D8:  MOVFF  61A,65F
071DC:  MOVLB  6
071DE:  CLRF   x66
071E0:  CLRF   x65
071E2:  CLRF   x64
071E4:  MOVLW  7F
071E6:  MOVWF  x63
071E8:  MOVLB  0
071EA:  CALL   124A
071EE:  MOVFF  03,661
071F2:  MOVFF  02,660
071F6:  MOVFF  01,65F
071FA:  MOVFF  00,65E
071FE:  MOVFF  615,665
07202:  MOVFF  614,664
07206:  MOVFF  613,663
0720A:  MOVFF  612,662
0720E:  CALL   1C46
07212:  BC    7216
07214:  BNZ   728C
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
07216:  MOVLB  6
07218:  CLRF   x73
0721A:  MOVLW  37
0721C:  MOVWF  x74
0721E:  MOVLW  7F
07220:  MOVWF  x75
07222:  MOVLW  3F
07224:  MOVWF  x76
07226:  MOVLW  01
07228:  MOVWF  x77
0722A:  CLRF   x78
0722C:  MOVLB  0
0722E:  CALL   2B2C
....................             strcpy(Menus.Letra,"Status:Controlando"); 
07232:  MOVLW  06
07234:  MOVWF  FEA
07236:  MOVLW  3A
07238:  MOVWF  FE9
0723A:  MOVFF  FF2,65A
0723E:  BCF    FF2.7
07240:  MOVLW  00
07242:  CALL   0AB6
07246:  TBLRD*-
07248:  TBLRD*+
0724A:  MOVF   FF5,W
0724C:  MOVWF  FEE
0724E:  IORLW  00
07250:  BNZ   7248
07252:  MOVLB  6
07254:  BTFSC  x5A.7
07256:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
07258:  MOVLW  06
0725A:  MOVWF  x63
0725C:  MOVLW  3A
0725E:  MOVWF  x62
07260:  CLRF   x64
07262:  MOVLW  37
07264:  MOVWF  x65
07266:  MOVLW  02
07268:  MOVWF  x66
0726A:  MOVLW  01
0726C:  MOVWF  x67
0726E:  MOVLB  0
07270:  CALL   2BEE
....................             if(!Infinito) 
07274:  MOVLB  5
07276:  BTFSC  x93.1
07278:  BRA    727E
....................                tiempo_esterilizacion=1; 
0727A:  MOVLW  01
0727C:  MOVWF  x9C
....................                 
....................             Controla(); 
0727E:  MOVLB  0
07280:  CALL   4E64
....................             flag_tiempocalentamiento=0; 
07284:  MOVLB  5
07286:  BCF    x93.4
....................          }else{ 
07288:  BRA    72FA
0728A:  MOVLB  0
....................             flag_tiempocalentamiento=1; 
0728C:  MOVLB  5
0728E:  BSF    x93.4
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
07290:  MOVLB  6
07292:  CLRF   x73
07294:  MOVLW  37
07296:  MOVWF  x74
07298:  MOVLW  7F
0729A:  MOVWF  x75
0729C:  MOVLW  3F
0729E:  MOVWF  x76
072A0:  MOVLW  01
072A2:  MOVWF  x77
072A4:  CLRF   x78
072A6:  MOVLB  0
072A8:  CALL   2B2C
....................             strcpy(Menus.Letra,"Status:Calentando"); 
072AC:  MOVLW  06
072AE:  MOVWF  FEA
072B0:  MOVLW  3A
072B2:  MOVWF  FE9
072B4:  MOVFF  FF2,65A
072B8:  BCF    FF2.7
072BA:  MOVLW  00
072BC:  CALL   0AE8
072C0:  TBLRD*-
072C2:  TBLRD*+
072C4:  MOVF   FF5,W
072C6:  MOVWF  FEE
072C8:  IORLW  00
072CA:  BNZ   72C2
072CC:  MOVLB  6
072CE:  BTFSC  x5A.7
072D0:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
072D2:  MOVLW  06
072D4:  MOVWF  x63
072D6:  MOVLW  3A
072D8:  MOVWF  x62
072DA:  CLRF   x64
072DC:  MOVLW  37
072DE:  MOVWF  x65
072E0:  MOVLW  02
072E2:  MOVWF  x66
072E4:  MOVLW  01
072E6:  MOVWF  x67
072E8:  MOVLB  0
072EA:  CALL   2BEE
....................             tiempo_esterilizacion=0; 
072EE:  MOVLB  5
072F0:  CLRF   x9C
....................             Controla(); 
072F2:  MOVLB  0
072F4:  CALL   4E64
072F8:  MOVLB  5
....................          } 
....................       } 
....................           
....................       if(DOOR){ 
072FA:  BSF    F96.2
072FC:  BTFSS  F84.2
072FE:  BRA    7420
....................          Controlando=0; 
07300:  CLRF   x90
....................          Motor1_off; 
07302:  BSF    F8B.5
07304:  BCF    F94.5
....................          Motor2_off; 
07306:  BSF    F8B.6
07308:  BCF    F94.6
....................          flag_tiempocalentamiento=0; 
0730A:  BCF    x93.4
....................          if(flag_clear2==0){ 
0730C:  BTFSC  x93.2
0730E:  BRA    73A8
....................             Ganancia=read_eeprom(14); 
07310:  MOVFF  FF2,65A
07314:  BCF    FF2.7
07316:  CLRF   FAA
07318:  MOVLW  0E
0731A:  MOVWF  FA9
0731C:  BCF    FA6.6
0731E:  BCF    FA6.7
07320:  BSF    FA6.0
07322:  MOVF   FA8,W
07324:  MOVLB  6
07326:  BTFSC  x5A.7
07328:  BSF    FF2.7
0732A:  CLRF   x61
0732C:  MOVWF  x60
0732E:  MOVLB  0
07330:  CALL   10B6
07334:  MOVFF  03,605
07338:  MOVFF  02,604
0733C:  MOVFF  01,603
07340:  MOVFF  00,602
....................             delay_ms(10); 
07344:  MOVLW  0A
07346:  MOVLB  6
07348:  MOVWF  x63
0734A:  MOVLB  0
0734C:  CALL   1056
....................             Ganancia=Ganancia*(Setpoint/44.5); 
07350:  MOVFF  61D,65E
07354:  MOVFF  61C,65D
07358:  MOVFF  61B,65C
0735C:  MOVFF  61A,65B
07360:  MOVLB  6
07362:  CLRF   x62
07364:  CLRF   x61
07366:  MOVLW  32
07368:  MOVWF  x60
0736A:  MOVLW  84
0736C:  MOVWF  x5F
0736E:  MOVLB  0
07370:  CALL   10EC
07374:  MOVFF  605,67D
07378:  MOVFF  604,67C
0737C:  MOVFF  603,67B
07380:  MOVFF  602,67A
07384:  MOVFF  03,681
07388:  MOVFF  02,680
0738C:  MOVFF  01,67F
07390:  MOVFF  00,67E
07394:  CALL   2D40
07398:  MOVFF  03,605
0739C:  MOVFF  02,604
073A0:  MOVFF  01,603
073A4:  MOVFF  00,602
....................          } 
....................          glcd_rect(0, 55, 127, 63, YES, OFF); 
073A8:  MOVLB  6
073AA:  CLRF   x73
073AC:  MOVLW  37
073AE:  MOVWF  x74
073B0:  MOVLW  7F
073B2:  MOVWF  x75
073B4:  MOVLW  3F
073B6:  MOVWF  x76
073B8:  MOVLW  01
073BA:  MOVWF  x77
073BC:  CLRF   x78
073BE:  MOVLB  0
073C0:  CALL   2B2C
....................          tiempo_esterilizacion=0; 
073C4:  MOVLB  5
073C6:  CLRF   x9C
....................          SSR_off; 
073C8:  BSF    F8B.2
073CA:  BCF    F94.2
....................          Tpulso=0.0; 
073CC:  CLRF   xF1
073CE:  CLRF   xF0
073D0:  CLRF   xEF
073D2:  CLRF   xEE
....................          flag_clear2=1; 
073D4:  BSF    x93.2
....................          flag_ganancia=0; 
073D6:  CLRF   x8E
....................          strcpy(Menus.Letra,"Status:Puerta Abierta"); 
073D8:  MOVLW  06
073DA:  MOVWF  FEA
073DC:  MOVLW  3A
073DE:  MOVWF  FE9
073E0:  MOVFF  FF2,65A
073E4:  BCF    FF2.7
073E6:  MOVLW  00
073E8:  MOVLB  0
073EA:  CALL   0B18
073EE:  TBLRD*-
073F0:  TBLRD*+
073F2:  MOVF   FF5,W
073F4:  MOVWF  FEE
073F6:  IORLW  00
073F8:  BNZ   73F0
073FA:  MOVLB  6
073FC:  BTFSC  x5A.7
073FE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
07400:  MOVLW  06
07402:  MOVWF  x63
07404:  MOVLW  3A
07406:  MOVWF  x62
07408:  CLRF   x64
0740A:  MOVLW  37
0740C:  MOVWF  x65
0740E:  MOVLW  02
07410:  MOVWF  x66
07412:  MOVLW  01
07414:  MOVWF  x67
07416:  MOVLB  0
07418:  CALL   2BEE
....................       }else{ 
0741C:  BRA    7446
0741E:  MOVLB  5
....................          if(flag_clear2==1){ 
07420:  BTFSS  x93.2
07422:  BRA    7444
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
07424:  MOVLB  6
07426:  CLRF   x73
07428:  MOVLW  37
0742A:  MOVWF  x74
0742C:  MOVLW  7F
0742E:  MOVWF  x75
07430:  MOVLW  3F
07432:  MOVWF  x76
07434:  MOVLW  01
07436:  MOVWF  x77
07438:  CLRF   x78
0743A:  MOVLB  0
0743C:  CALL   2B2C
....................             flag_clear2=0; 
07440:  MOVLB  5
07442:  BCF    x93.2
07444:  MOVLB  0
....................          } 
....................       } 
....................        
....................       if(TERM){ 
07446:  BSF    F93.7
07448:  BTFSS  F81.7
0744A:  BRA    74D4
....................          Controlando=0; 
0744C:  MOVLB  5
0744E:  CLRF   x90
....................          Motor1_off; 
07450:  BSF    F8B.5
07452:  BCF    F94.5
....................          Motor2_off;          
07454:  BSF    F8B.6
07456:  BCF    F94.6
....................          flag_tiempocalentamiento=0; 
07458:  BCF    x93.4
....................          if(flag_clear3==0){ 
0745A:  BTFSC  x93.3
0745C:  BRA    748E
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
0745E:  MOVLB  6
07460:  CLRF   x73
07462:  MOVLW  37
07464:  MOVWF  x74
07466:  MOVLW  7F
07468:  MOVWF  x75
0746A:  MOVLW  3F
0746C:  MOVWF  x76
0746E:  MOVLW  01
07470:  MOVWF  x77
07472:  CLRF   x78
07474:  MOVLB  0
07476:  CALL   2B2C
....................             tiempo_esterilizacion=0; 
0747A:  MOVLB  5
0747C:  CLRF   x9C
....................             SSR_off; 
0747E:  BSF    F8B.2
07480:  BCF    F94.2
....................             Tpulso=0.0; 
07482:  CLRF   xF1
07484:  CLRF   xF0
07486:  CLRF   xEF
07488:  CLRF   xEE
....................             flag_clear3=1; 
0748A:  BSF    x93.3
....................             flag_ganancia=0; 
0748C:  CLRF   x8E
....................          } 
....................          strcpy(Menus.Letra,"Status:Alarma 01"); 
0748E:  MOVLW  06
07490:  MOVWF  FEA
07492:  MOVLW  3A
07494:  MOVWF  FE9
07496:  MOVFF  FF2,65A
0749A:  BCF    FF2.7
0749C:  MOVLW  00
0749E:  MOVLB  0
074A0:  CALL   0B4C
074A4:  TBLRD*-
074A6:  TBLRD*+
074A8:  MOVF   FF5,W
074AA:  MOVWF  FEE
074AC:  IORLW  00
074AE:  BNZ   74A6
074B0:  MOVLB  6
074B2:  BTFSC  x5A.7
074B4:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1);          
074B6:  MOVLW  06
074B8:  MOVWF  x63
074BA:  MOVLW  3A
074BC:  MOVWF  x62
074BE:  CLRF   x64
074C0:  MOVLW  37
074C2:  MOVWF  x65
074C4:  MOVLW  02
074C6:  MOVWF  x66
074C8:  MOVLW  01
074CA:  MOVWF  x67
074CC:  MOVLB  0
074CE:  CALL   2BEE
....................       }else{ 
074D2:  BRA    74FA
....................          if(flag_clear3==1){ 
074D4:  MOVLB  5
074D6:  BTFSS  x93.3
074D8:  BRA    74FA
....................             glcd_rect(0, 55, 127, 63, YES, OFF); 
074DA:  MOVLB  6
074DC:  CLRF   x73
074DE:  MOVLW  37
074E0:  MOVWF  x74
074E2:  MOVLW  7F
074E4:  MOVWF  x75
074E6:  MOVLW  3F
074E8:  MOVWF  x76
074EA:  MOVLW  01
074EC:  MOVWF  x77
074EE:  CLRF   x78
074F0:  MOVLB  0
074F2:  CALL   2B2C
....................             flag_clear3=0; 
074F6:  MOVLB  5
074F8:  BCF    x93.3
....................          } 
....................       }    
....................          
....................       if(Lectura==1){                   
074FA:  MOVLB  5
074FC:  BTFSS  x87.5
074FE:  BRA    7A8C
....................          Lectura=0; 
07500:  BCF    x87.5
....................          Potencia=(100.0/Tciclo)*Tpulso; 
07502:  MOVLB  6
07504:  CLRF   x5E
07506:  CLRF   x5D
07508:  MOVLW  48
0750A:  MOVWF  x5C
0750C:  MOVLW  85
0750E:  MOVWF  x5B
07510:  MOVFF  5ED,662
07514:  MOVFF  5EC,661
07518:  MOVFF  5EB,660
0751C:  MOVFF  5EA,65F
07520:  MOVLB  0
07522:  CALL   10EC
07526:  MOVFF  00,65A
0752A:  MOVFF  01,65B
0752E:  MOVFF  02,65C
07532:  MOVFF  03,65D
07536:  MOVFF  03,67D
0753A:  MOVFF  02,67C
0753E:  MOVFF  01,67B
07542:  MOVFF  00,67A
07546:  MOVFF  5F1,681
0754A:  MOVFF  5F0,680
0754E:  MOVFF  5EF,67F
07552:  MOVFF  5EE,67E
07556:  CALL   2D40
0755A:  MOVFF  03,5B5
0755E:  MOVFF  02,5B4
07562:  MOVFF  01,5B3
07566:  MOVFF  00,5B2
....................           
....................  //----------------Muestra Temperatura-------------------------- 
....................          if(Source==1){ 
0756A:  MOVLB  5
0756C:  DECFSZ x96,W
0756E:  BRA    766E
....................             if((V0<180 || V0>1000)){ 
07570:  MOVFF  5E1,661
07574:  MOVFF  5E0,660
07578:  MOVFF  5DF,65F
0757C:  MOVFF  5DE,65E
07580:  MOVLB  6
07582:  CLRF   x65
07584:  CLRF   x64
07586:  MOVLW  34
07588:  MOVWF  x63
0758A:  MOVLW  86
0758C:  MOVWF  x62
0758E:  MOVLB  0
07590:  CALL   1C46
07594:  BC    75BC
07596:  MOVLB  6
07598:  CLRF   x61
0759A:  CLRF   x60
0759C:  MOVLW  7A
0759E:  MOVWF  x5F
075A0:  MOVLW  88
075A2:  MOVWF  x5E
075A4:  MOVFF  5E1,665
075A8:  MOVFF  5E0,664
075AC:  MOVFF  5DF,663
075B0:  MOVFF  5DE,662
075B4:  MOVLB  0
075B6:  CALL   1C46
075BA:  BNC   7624
....................                glcd_rect(15, 29, 69, 45, YES, OFF); 
075BC:  MOVLW  0F
075BE:  MOVLB  6
075C0:  MOVWF  x73
075C2:  MOVLW  1D
075C4:  MOVWF  x74
075C6:  MOVLW  45
075C8:  MOVWF  x75
075CA:  MOVLW  2D
075CC:  MOVWF  x76
075CE:  MOVLW  01
075D0:  MOVWF  x77
075D2:  CLRF   x78
075D4:  MOVLB  0
075D6:  CALL   2B2C
....................                strcpy(Menus.Letra,"-----");displayMenu(Menus.Letra,15,29,2,2); 
075DA:  MOVLW  06
075DC:  MOVWF  FEA
075DE:  MOVLW  3A
075E0:  MOVWF  FE9
075E2:  MOVFF  FF2,65A
075E6:  BCF    FF2.7
075E8:  MOVLW  00
075EA:  CALL   0B7C
075EE:  TBLRD*-
075F0:  TBLRD*+
075F2:  MOVF   FF5,W
075F4:  MOVWF  FEE
075F6:  IORLW  00
075F8:  BNZ   75F0
075FA:  MOVLB  6
075FC:  BTFSC  x5A.7
075FE:  BSF    FF2.7
07600:  MOVLW  06
07602:  MOVWF  x63
07604:  MOVLW  3A
07606:  MOVWF  x62
07608:  MOVLW  0F
0760A:  MOVWF  x64
0760C:  MOVLW  1D
0760E:  MOVWF  x65
07610:  MOVLW  02
07612:  MOVWF  x66
07614:  MOVWF  x67
07616:  MOVLB  0
07618:  CALL   2BEE
....................                Desconectado=1; 
0761C:  MOVLB  5
0761E:  BSF    x87.0
....................             }else{ 
07620:  BRA    766E
07622:  MOVLB  0
....................                if(Desconectado==1){ 
07624:  MOVLB  5
07626:  BTFSS  x87.0
07628:  BRA    766E
....................                   Desconectado=0; 
0762A:  BCF    x87.0
....................                   delay_ms(2000); 
0762C:  MOVLW  08
0762E:  MOVLB  6
07630:  MOVWF  x5A
07632:  MOVLW  FA
07634:  MOVWF  x63
07636:  MOVLB  0
07638:  CALL   1056
0763C:  MOVLB  6
0763E:  DECFSZ x5A,F
07640:  BRA    7632
....................                   for(i=0;i<80;i++){ 
07642:  MOVLB  5
07644:  CLRF   x99
07646:  MOVF   x99,W
07648:  SUBLW  4F
0764A:  BNC   766E
....................                      Temperatura=Leer_Sensor(80); 
0764C:  MOVLW  50
0764E:  MOVLB  6
07650:  MOVWF  x5A
07652:  MOVLB  0
07654:  CALL   2E58
07658:  MOVFF  03,615
0765C:  MOVFF  02,614
07660:  MOVFF  01,613
07664:  MOVFF  00,612
....................                   } 
07668:  MOVLB  5
0766A:  INCF   x99,F
0766C:  BRA    7646
....................                } 
....................             } 
....................          } 
....................          displayT(Temperatura,15,29,2); 
0766E:  MOVFF  615,65D
07672:  MOVFF  614,65C
07676:  MOVFF  613,65B
0767A:  MOVFF  612,65A
0767E:  MOVLW  0F
07680:  MOVLB  6
07682:  MOVWF  x5E
07684:  MOVLW  1D
07686:  MOVWF  x5F
07688:  MOVLW  02
0768A:  MOVWF  x60
0768C:  MOVLB  0
0768E:  CALL   5794
....................          glcd_circle(74,30,2,NO,ON); 
07692:  MOVLW  4A
07694:  MOVLB  6
07696:  MOVWF  x6F
07698:  MOVLW  1E
0769A:  MOVWF  x70
0769C:  MOVLW  02
0769E:  MOVWF  x71
076A0:  CLRF   x72
076A2:  MOVLW  01
076A4:  MOVWF  x73
076A6:  MOVLB  0
076A8:  CALL   411C
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,75,30,2,2); 
076AC:  MOVLW  06
076AE:  MOVWF  FEA
076B0:  MOVLW  3A
076B2:  MOVWF  FE9
076B4:  MOVFF  FF2,65A
076B8:  BCF    FF2.7
076BA:  MOVLW  00
076BC:  CALL   06D2
076C0:  TBLRD*-
076C2:  TBLRD*+
076C4:  MOVF   FF5,W
076C6:  MOVWF  FEE
076C8:  IORLW  00
076CA:  BNZ   76C2
076CC:  MOVLB  6
076CE:  BTFSC  x5A.7
076D0:  BSF    FF2.7
076D2:  MOVLW  06
076D4:  MOVWF  x63
076D6:  MOVLW  3A
076D8:  MOVWF  x62
076DA:  MOVLW  4B
076DC:  MOVWF  x64
076DE:  MOVLW  1E
076E0:  MOVWF  x65
076E2:  MOVLW  02
076E4:  MOVWF  x66
076E6:  MOVWF  x67
076E8:  MOVLB  0
076EA:  CALL   2BEE
....................           
....................          displayT(Setpoint,30,46,1); 
076EE:  MOVFF  61D,65D
076F2:  MOVFF  61C,65C
076F6:  MOVFF  61B,65B
076FA:  MOVFF  61A,65A
076FE:  MOVLW  1E
07700:  MOVLB  6
07702:  MOVWF  x5E
07704:  MOVLW  2E
07706:  MOVWF  x5F
07708:  MOVLW  01
0770A:  MOVWF  x60
0770C:  MOVLB  0
0770E:  CALL   5794
....................          glcd_circle(55,47,1,NO,ON); 
07712:  MOVLW  37
07714:  MOVLB  6
07716:  MOVWF  x6F
07718:  MOVLW  2F
0771A:  MOVWF  x70
0771C:  MOVLW  01
0771E:  MOVWF  x71
07720:  CLRF   x72
07722:  MOVWF  x73
07724:  MOVLB  0
07726:  CALL   411C
....................          strcpy(Menus.Letra,"C");displayMenu(Menus.Letra,58,45,2,1); 
0772A:  MOVLW  06
0772C:  MOVWF  FEA
0772E:  MOVLW  3A
07730:  MOVWF  FE9
07732:  MOVFF  FF2,65A
07736:  BCF    FF2.7
07738:  MOVLW  00
0773A:  CALL   06D2
0773E:  TBLRD*-
07740:  TBLRD*+
07742:  MOVF   FF5,W
07744:  MOVWF  FEE
07746:  IORLW  00
07748:  BNZ   7740
0774A:  MOVLB  6
0774C:  BTFSC  x5A.7
0774E:  BSF    FF2.7
07750:  MOVLW  06
07752:  MOVWF  x63
07754:  MOVLW  3A
07756:  MOVWF  x62
07758:  MOVWF  x64
0775A:  MOVLW  2D
0775C:  MOVWF  x65
0775E:  MOVLW  02
07760:  MOVWF  x66
07762:  MOVLW  01
07764:  MOVWF  x67
07766:  MOVLB  0
07768:  CALL   2BEE
....................          strcpy(Menus.Letra,"Temp:");displayMenu(Menus.Letra,0,45,2,1);  
0776C:  MOVLW  06
0776E:  MOVWF  FEA
07770:  MOVLW  3A
07772:  MOVWF  FE9
07774:  MOVFF  FF2,65A
07778:  BCF    FF2.7
0777A:  MOVLW  00
0777C:  CALL   0BA0
07780:  TBLRD*-
07782:  TBLRD*+
07784:  MOVF   FF5,W
07786:  MOVWF  FEE
07788:  IORLW  00
0778A:  BNZ   7782
0778C:  MOVLB  6
0778E:  BTFSC  x5A.7
07790:  BSF    FF2.7
07792:  MOVLW  06
07794:  MOVWF  x63
07796:  MOVLW  3A
07798:  MOVWF  x62
0779A:  CLRF   x64
0779C:  MOVLW  2D
0779E:  MOVWF  x65
077A0:  MOVLW  02
077A2:  MOVWF  x66
077A4:  MOVLW  01
077A6:  MOVWF  x67
077A8:  MOVLB  0
077AA:  CALL   2BEE
....................           
....................          displayTiempo(Potencia,97,42,3,1);strcpy(Menus.Letra,"%");displayMenu(Menus.Letra,115,42,2,1); 
077AE:  MOVFF  5B5,65D
077B2:  MOVFF  5B4,65C
077B6:  MOVFF  5B3,65B
077BA:  MOVFF  5B2,65A
077BE:  CALL   4346
077C2:  MOVFF  01,65A
077C6:  MOVFF  01,65B
077CA:  MOVLW  61
077CC:  MOVLB  6
077CE:  MOVWF  x5C
077D0:  MOVLW  2A
077D2:  MOVWF  x5D
077D4:  MOVLW  03
077D6:  MOVWF  x5E
077D8:  MOVLW  01
077DA:  MOVWF  x5F
077DC:  MOVLB  0
077DE:  CALL   4B7E
077E2:  MOVLW  06
077E4:  MOVWF  FEA
077E6:  MOVLW  3A
077E8:  MOVWF  FE9
077EA:  MOVFF  FF2,65A
077EE:  BCF    FF2.7
077F0:  MOVLW  00
077F2:  CALL   0BC4
077F6:  TBLRD*-
077F8:  TBLRD*+
077FA:  MOVF   FF5,W
077FC:  MOVWF  FEE
077FE:  IORLW  00
07800:  BNZ   77F8
07802:  MOVLB  6
07804:  BTFSC  x5A.7
07806:  BSF    FF2.7
07808:  MOVLW  06
0780A:  MOVWF  x63
0780C:  MOVLW  3A
0780E:  MOVWF  x62
07810:  MOVLW  73
07812:  MOVWF  x64
07814:  MOVLW  2A
07816:  MOVWF  x65
07818:  MOVLW  02
0781A:  MOVWF  x66
0781C:  MOVLW  01
0781E:  MOVWF  x67
07820:  MOVLB  0
07822:  CALL   2BEE
....................          
....................          if(flag_display==1) 
07826:  MOVLB  5
07828:  BTFSS  x93.5
0782A:  BRA    7864
....................             displayTiempo(Ganancia,66,45,3,1); 
0782C:  MOVFF  605,65D
07830:  MOVFF  604,65C
07834:  MOVFF  603,65B
07838:  MOVFF  602,65A
0783C:  MOVLB  0
0783E:  CALL   4346
07842:  MOVFF  01,65A
07846:  MOVFF  01,65B
0784A:  MOVLW  42
0784C:  MOVLB  6
0784E:  MOVWF  x5C
07850:  MOVLW  2D
07852:  MOVWF  x5D
07854:  MOVLW  03
07856:  MOVWF  x5E
07858:  MOVLW  01
0785A:  MOVWF  x5F
0785C:  MOVLB  0
0785E:  CALL   4B7E
....................             //displayTemperatura(Prom,97,13,0,1); 
....................             //displayT(Tpulsomin,60,46,1); 
....................          else 
07862:  BRA    7882
....................             //displayT(V0,66,45,1); 
....................             glcd_rect(66, 45, 88, 52, YES, OFF); 
07864:  MOVLW  42
07866:  MOVLB  6
07868:  MOVWF  x73
0786A:  MOVLW  2D
0786C:  MOVWF  x74
0786E:  MOVLW  58
07870:  MOVWF  x75
07872:  MOVLW  34
07874:  MOVWF  x76
07876:  MOVLW  01
07878:  MOVWF  x77
0787A:  CLRF   x78
0787C:  MOVLB  0
0787E:  CALL   2B2C
....................           
....................          // Muestra Valor de esterilizacion Programado. 
....................          displayTiempo(Testerilizacion[3],20,2,0,2);displayTiempo(Testerilizacion[2],33,2,0,2); 
07882:  MOVFF  5D1,65B
07886:  MOVLW  14
07888:  MOVLB  6
0788A:  MOVWF  x5C
0788C:  MOVLW  02
0788E:  MOVWF  x5D
07890:  CLRF   x5E
07892:  MOVWF  x5F
07894:  MOVLB  0
07896:  CALL   4B7E
0789A:  MOVFF  5D0,65B
0789E:  MOVLW  21
078A0:  MOVLB  6
078A2:  MOVWF  x5C
078A4:  MOVLW  02
078A6:  MOVWF  x5D
078A8:  CLRF   x5E
078AA:  MOVWF  x5F
078AC:  MOVLB  0
078AE:  CALL   4B7E
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,46,2,2,2);  
078B2:  MOVLW  06
078B4:  MOVWF  FEA
078B6:  MOVLW  3A
078B8:  MOVWF  FE9
078BA:  MOVFF  FF2,65A
078BE:  BCF    FF2.7
078C0:  MOVLW  00
078C2:  CALL   0A96
078C6:  TBLRD*-
078C8:  TBLRD*+
078CA:  MOVF   FF5,W
078CC:  MOVWF  FEE
078CE:  IORLW  00
078D0:  BNZ   78C8
078D2:  MOVLB  6
078D4:  BTFSC  x5A.7
078D6:  BSF    FF2.7
078D8:  MOVLW  06
078DA:  MOVWF  x63
078DC:  MOVLW  3A
078DE:  MOVWF  x62
078E0:  MOVLW  2E
078E2:  MOVWF  x64
078E4:  MOVLW  02
078E6:  MOVWF  x65
078E8:  MOVWF  x66
078EA:  MOVWF  x67
078EC:  MOVLB  0
078EE:  CALL   2BEE
....................          displayTiempo(Testerilizacion[1],55,2,0,2);displayTiempo(Testerilizacion[0],68,2,0,2); 
078F2:  MOVFF  5CF,65B
078F6:  MOVLW  37
078F8:  MOVLB  6
078FA:  MOVWF  x5C
078FC:  MOVLW  02
078FE:  MOVWF  x5D
07900:  CLRF   x5E
07902:  MOVWF  x5F
07904:  MOVLB  0
07906:  CALL   4B7E
0790A:  MOVFF  5CE,65B
0790E:  MOVLW  44
07910:  MOVLB  6
07912:  MOVWF  x5C
07914:  MOVLW  02
07916:  MOVWF  x5D
07918:  CLRF   x5E
0791A:  MOVWF  x5F
0791C:  MOVLB  0
0791E:  CALL   4B7E
....................           
....................          // Muestra Valor de esterilizacion actual. 
....................          strcpy(Menus.Letra,"Time:");displayMenu(Menus.Letra,0,18,2,1);  
07922:  MOVLW  06
07924:  MOVWF  FEA
07926:  MOVLW  3A
07928:  MOVWF  FE9
0792A:  MOVFF  FF2,65A
0792E:  BCF    FF2.7
07930:  MOVLW  00
07932:  CALL   0BE4
07936:  TBLRD*-
07938:  TBLRD*+
0793A:  MOVF   FF5,W
0793C:  MOVWF  FEE
0793E:  IORLW  00
07940:  BNZ   7938
07942:  MOVLB  6
07944:  BTFSC  x5A.7
07946:  BSF    FF2.7
07948:  MOVLW  06
0794A:  MOVWF  x63
0794C:  MOVLW  3A
0794E:  MOVWF  x62
07950:  CLRF   x64
07952:  MOVLW  12
07954:  MOVWF  x65
07956:  MOVLW  02
07958:  MOVWF  x66
0795A:  MOVLW  01
0795C:  MOVWF  x67
0795E:  MOVLB  0
07960:  CALL   2BEE
....................          displayTiempo(Testerilizacionp[3],30,18,0,1);displayTiempo(Testerilizacionp[2],36,18,0,1); 
07964:  MOVFF  5D5,65B
07968:  MOVLW  1E
0796A:  MOVLB  6
0796C:  MOVWF  x5C
0796E:  MOVLW  12
07970:  MOVWF  x5D
07972:  CLRF   x5E
07974:  MOVLW  01
07976:  MOVWF  x5F
07978:  MOVLB  0
0797A:  CALL   4B7E
0797E:  MOVFF  5D4,65B
07982:  MOVLW  24
07984:  MOVLB  6
07986:  MOVWF  x5C
07988:  MOVLW  12
0798A:  MOVWF  x5D
0798C:  CLRF   x5E
0798E:  MOVLW  01
07990:  MOVWF  x5F
07992:  MOVLB  0
07994:  CALL   4B7E
....................          strcpy(Menus.Letra,":");displayMenu(Menus.Letra,42,18,2,1);  
07998:  MOVLW  06
0799A:  MOVWF  FEA
0799C:  MOVLW  3A
0799E:  MOVWF  FE9
079A0:  MOVFF  FF2,65A
079A4:  BCF    FF2.7
079A6:  MOVLW  00
079A8:  CALL   0A96
079AC:  TBLRD*-
079AE:  TBLRD*+
079B0:  MOVF   FF5,W
079B2:  MOVWF  FEE
079B4:  IORLW  00
079B6:  BNZ   79AE
079B8:  MOVLB  6
079BA:  BTFSC  x5A.7
079BC:  BSF    FF2.7
079BE:  MOVLW  06
079C0:  MOVWF  x63
079C2:  MOVLW  3A
079C4:  MOVWF  x62
079C6:  MOVLW  2A
079C8:  MOVWF  x64
079CA:  MOVLW  12
079CC:  MOVWF  x65
079CE:  MOVLW  02
079D0:  MOVWF  x66
079D2:  MOVLW  01
079D4:  MOVWF  x67
079D6:  MOVLB  0
079D8:  CALL   2BEE
....................          displayTiempo(Testerilizacionp[1],48,18,0,1);displayTiempo(Testerilizacionp[0],54,18,0,1); 
079DC:  MOVFF  5D3,65B
079E0:  MOVLW  30
079E2:  MOVLB  6
079E4:  MOVWF  x5C
079E6:  MOVLW  12
079E8:  MOVWF  x5D
079EA:  CLRF   x5E
079EC:  MOVLW  01
079EE:  MOVWF  x5F
079F0:  MOVLB  0
079F2:  CALL   4B7E
079F6:  MOVFF  5D2,65B
079FA:  MOVLW  36
079FC:  MOVLB  6
079FE:  MOVWF  x5C
07A00:  MOVLW  12
07A02:  MOVWF  x5D
07A04:  CLRF   x5E
07A06:  MOVLW  01
07A08:  MOVWF  x5F
07A0A:  MOVLB  0
07A0C:  CALL   4B7E
....................          strcpy(Menus.Letra,"(H:M)");displayMenu(Menus.Letra,60,18,2,1);  
07A10:  MOVLW  06
07A12:  MOVWF  FEA
07A14:  MOVLW  3A
07A16:  MOVWF  FE9
07A18:  MOVFF  FF2,65A
07A1C:  BCF    FF2.7
07A1E:  MOVLW  00
07A20:  CALL   0C08
07A24:  TBLRD*-
07A26:  TBLRD*+
07A28:  MOVF   FF5,W
07A2A:  MOVWF  FEE
07A2C:  IORLW  00
07A2E:  BNZ   7A26
07A30:  MOVLB  6
07A32:  BTFSC  x5A.7
07A34:  BSF    FF2.7
07A36:  MOVLW  06
07A38:  MOVWF  x63
07A3A:  MOVLW  3A
07A3C:  MOVWF  x62
07A3E:  MOVLW  3C
07A40:  MOVWF  x64
07A42:  MOVLW  12
07A44:  MOVWF  x65
07A46:  MOVLW  02
07A48:  MOVWF  x66
07A4A:  MOVLW  01
07A4C:  MOVWF  x67
07A4E:  MOVLB  0
07A50:  CALL   2BEE
....................           
....................          glcd_rect(0, 0, 89, 27, NO, ON); 
07A54:  MOVLB  6
07A56:  CLRF   x73
07A58:  CLRF   x74
07A5A:  MOVLW  59
07A5C:  MOVWF  x75
07A5E:  MOVLW  1B
07A60:  MOVWF  x76
07A62:  CLRF   x77
07A64:  MOVLW  01
07A66:  MOVWF  x78
07A68:  MOVLB  0
07A6A:  CALL   2B2C
....................          glcd_rect(0, 27, 89, 54, NO, ON); 
07A6E:  MOVLB  6
07A70:  CLRF   x73
07A72:  MOVLW  1B
07A74:  MOVWF  x74
07A76:  MOVLW  59
07A78:  MOVWF  x75
07A7A:  MOVLW  36
07A7C:  MOVWF  x76
07A7E:  CLRF   x77
07A80:  MOVLW  01
07A82:  MOVWF  x78
07A84:  MOVLB  0
07A86:  CALL   2B2C
07A8A:  MOVLB  5
....................       }  
....................        
....................       // Si cumplio el tiempo de esterilización, Muestre ciclo finalizado y detenga control de temperatura. 
....................       if((Testerilizacionp[0]>0)||(Testerilizacionp[1]>0)||(Testerilizacionp[2]>0)||(Testerilizacionp[3]>0)){ 
07A8C:  BTFSC  xD2.7
07A8E:  BRA    7A96
07A90:  MOVF   xD2,W
07A92:  SUBLW  00
07A94:  BNC   7AB4
07A96:  BTFSC  xD3.7
07A98:  BRA    7AA0
07A9A:  MOVF   xD3,W
07A9C:  SUBLW  00
07A9E:  BNC   7AB4
07AA0:  BTFSC  xD4.7
07AA2:  BRA    7AAA
07AA4:  MOVF   xD4,W
07AA6:  SUBLW  00
07AA8:  BNC   7AB4
07AAA:  BTFSC  xD5.7
07AAC:  BRA    7B70
07AAE:  MOVF   xD5,W
07AB0:  SUBLW  00
07AB2:  BC    7B70
....................          if((Testerilizacion[0]>=Testerilizacionp[0])&&(Testerilizacion[1]>=Testerilizacionp[1])&&(Testerilizacion[2]>=Testerilizacionp[2])&&(Testerilizacion[3]>=Testerilizacionp[3]) && tiempo_esterilizacion==1){ 
07AB4:  MOVF   xD2,W
07AB6:  XORLW  80
07AB8:  MOVWF  00
07ABA:  MOVF   xCE,W
07ABC:  XORLW  80
07ABE:  SUBWF  00,W
07AC0:  BZ    7AC4
07AC2:  BC    7B70
07AC4:  MOVF   xD3,W
07AC6:  XORLW  80
07AC8:  MOVWF  00
07ACA:  MOVF   xCF,W
07ACC:  XORLW  80
07ACE:  SUBWF  00,W
07AD0:  BZ    7AD4
07AD2:  BC    7B70
07AD4:  MOVF   xD4,W
07AD6:  XORLW  80
07AD8:  MOVWF  00
07ADA:  MOVF   xD0,W
07ADC:  XORLW  80
07ADE:  SUBWF  00,W
07AE0:  BZ    7AE4
07AE2:  BC    7B70
07AE4:  MOVF   xD5,W
07AE6:  XORLW  80
07AE8:  MOVWF  00
07AEA:  MOVF   xD1,W
07AEC:  XORLW  80
07AEE:  SUBWF  00,W
07AF0:  BZ    7AF4
07AF2:  BC    7B70
07AF4:  DECFSZ x9C,W
07AF6:  BRA    7B70
....................             if(flag_clear==0){ 
07AF8:  BTFSC  x93.0
07AFA:  BRA    7B2A
....................                glcd_fillScreen(OFF); 
07AFC:  MOVLB  6
07AFE:  CLRF   x62
07B00:  MOVLB  0
07B02:  CALL   25C0
....................                //glcd_rect(0, 55, 127, 63, YES, OFF); 
....................                tiempo_esterilizacion=0; 
07B06:  MOVLB  5
07B08:  CLRF   x9C
....................                Pausa=2; 
07B0A:  MOVLW  02
07B0C:  MOVWF  x9A
....................                flag_clear=1; 
07B0E:  BSF    x93.0
....................                SSR_off; 
07B10:  BSF    F8B.2
07B12:  BCF    F94.2
....................                Motor1_off; 
07B14:  BSF    F8B.5
07B16:  BCF    F94.5
....................                Motor2_off; 
07B18:  BSF    F8B.6
07B1A:  BCF    F94.6
....................                Controlando=0; 
07B1C:  CLRF   x90
....................                Tpulso=0.0; 
07B1E:  CLRF   xF1
07B20:  CLRF   xF0
07B22:  CLRF   xEF
07B24:  CLRF   xEE
....................                flag_ganancia=0; 
07B26:  CLRF   x8E
....................                Finalizo=1; 
07B28:  BSF    x93.7
....................             } 
....................             strcpy(Menus.Letra,"Status:Finalizado"); 
07B2A:  MOVLW  06
07B2C:  MOVWF  FEA
07B2E:  MOVLW  3A
07B30:  MOVWF  FE9
07B32:  MOVFF  FF2,65A
07B36:  BCF    FF2.7
07B38:  MOVLW  00
07B3A:  MOVLB  0
07B3C:  CALL   0C2C
07B40:  TBLRD*-
07B42:  TBLRD*+
07B44:  MOVF   FF5,W
07B46:  MOVWF  FEE
07B48:  IORLW  00
07B4A:  BNZ   7B42
07B4C:  MOVLB  6
07B4E:  BTFSC  x5A.7
07B50:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,55,2,1); 
07B52:  MOVLW  06
07B54:  MOVWF  x63
07B56:  MOVLW  3A
07B58:  MOVWF  x62
07B5A:  CLRF   x64
07B5C:  MOVLW  37
07B5E:  MOVWF  x65
07B60:  MOVLW  02
07B62:  MOVWF  x66
07B64:  MOVLW  01
07B66:  MOVWF  x67
07B68:  MOVLB  0
07B6A:  CALL   2BEE
07B6E:  MOVLB  5
....................          } 
....................       } 
....................         
....................       if(Finalizo){ 
07B70:  BTFSS  x93.7
07B72:  BRA    7BD2
....................          strcpy(Menus.Letra,"Status:Finalizado"); 
07B74:  MOVLW  06
07B76:  MOVWF  FEA
07B78:  MOVLW  3A
07B7A:  MOVWF  FE9
07B7C:  MOVFF  FF2,65A
07B80:  BCF    FF2.7
07B82:  MOVLW  00
07B84:  MOVLB  0
07B86:  CALL   0C2C
07B8A:  TBLRD*-
07B8C:  TBLRD*+
07B8E:  MOVF   FF5,W
07B90:  MOVWF  FEE
07B92:  IORLW  00
07B94:  BNZ   7B8C
07B96:  MOVLB  6
07B98:  BTFSC  x5A.7
07B9A:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,55,2,1); 
07B9C:  MOVLW  06
07B9E:  MOVWF  x63
07BA0:  MOVLW  3A
07BA2:  MOVWF  x62
07BA4:  CLRF   x64
07BA6:  MOVLW  37
07BA8:  MOVWF  x65
07BAA:  MOVLW  02
07BAC:  MOVWF  x66
07BAE:  MOVLW  01
07BB0:  MOVWF  x67
07BB2:  MOVLB  0
07BB4:  CALL   2BEE
....................          SSR_off; 
07BB8:  BSF    F8B.2
07BBA:  BCF    F94.2
....................          Motor1_off; 
07BBC:  BSF    F8B.5
07BBE:  BCF    F94.5
....................          Motor2_off; 
07BC0:  BSF    F8B.6
07BC2:  BCF    F94.6
....................          Controlando=0; 
07BC4:  MOVLB  5
07BC6:  CLRF   x90
....................          Tpulso=0.0; 
07BC8:  CLRF   xF1
07BCA:  CLRF   xF0
07BCC:  CLRF   xEF
07BCE:  CLRF   xEE
....................          tiempo_esterilizacion=0; 
07BD0:  CLRF   x9C
....................       } 
....................        
....................       CuentaTiempo(); 
07BD2:  MOVLB  0
07BD4:  GOTO   580E
07BD8:  MOVLB  5
....................       /*if(LEFT)//Si oprime boton de Toma. 
....................       { 
....................          if(Pausa!=2) 
....................          { 
....................             delay_ms(500);Menu=30;glcd_fillscreen(OFF);Opcion=1;visual=1;Pausa=1; 
....................          } 
....................          LEFT=0; 
....................       }*/         
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==100){ //Menu de Configuración de Parametros de Control 
07BDA:  MOVF   x97,W
07BDC:  SUBLW  64
07BDE:  BTFSS  FD8.2
07BE0:  GOTO   8336
....................        
....................       if(Opcion>11) 
07BE4:  MOVF   x9B,W
07BE6:  SUBLW  0B
07BE8:  BC    7BEE
....................       {Opcion=1;} 
07BEA:  MOVLW  01
07BEC:  MOVWF  x9B
....................       if(Opcion<1) 
07BEE:  MOVF   x9B,F
07BF0:  BNZ   7BF6
....................       {Opcion=11;} 
07BF2:  MOVLW  0B
07BF4:  MOVWF  x9B
....................        
....................       if(Opcion<=6){ 
07BF6:  MOVF   x9B,W
07BF8:  SUBLW  06
07BFA:  BTFSS  FD8.0
07BFC:  BRA    7F5A
....................          if(Opcion==1)    
07BFE:  DECFSZ x9B,W
07C00:  BRA    7C46
....................             {strcpy(Menus.Letra,"Proporcional"); 
07C02:  MOVLW  06
07C04:  MOVWF  FEA
07C06:  MOVLW  3A
07C08:  MOVWF  FE9
07C0A:  MOVFF  FF2,65A
07C0E:  BCF    FF2.7
07C10:  MOVLW  00
07C12:  MOVLB  0
07C14:  CALL   0C5C
07C18:  TBLRD*-
07C1A:  TBLRD*+
07C1C:  MOVF   FF5,W
07C1E:  MOVWF  FEE
07C20:  IORLW  00
07C22:  BNZ   7C1A
07C24:  MOVLB  6
07C26:  BTFSC  x5A.7
07C28:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
07C2A:  MOVLW  06
07C2C:  MOVWF  x63
07C2E:  MOVLW  3A
07C30:  MOVWF  x62
07C32:  CLRF   x64
07C34:  CLRF   x65
07C36:  MOVLW  01
07C38:  MOVWF  x66
07C3A:  MOVWF  x67
07C3C:  MOVLB  0
07C3E:  CALL   2BEE
....................          else 
07C42:  BRA    7C86
07C44:  MOVLB  5
....................             {strcpy(Menus.Letra,"Proporcional"); 
07C46:  MOVLW  06
07C48:  MOVWF  FEA
07C4A:  MOVLW  3A
07C4C:  MOVWF  FE9
07C4E:  MOVFF  FF2,65A
07C52:  BCF    FF2.7
07C54:  MOVLW  00
07C56:  MOVLB  0
07C58:  CALL   0C5C
07C5C:  TBLRD*-
07C5E:  TBLRD*+
07C60:  MOVF   FF5,W
07C62:  MOVWF  FEE
07C64:  IORLW  00
07C66:  BNZ   7C5E
07C68:  MOVLB  6
07C6A:  BTFSC  x5A.7
07C6C:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);} 
07C6E:  MOVLW  06
07C70:  MOVWF  x63
07C72:  MOVLW  3A
07C74:  MOVWF  x62
07C76:  CLRF   x64
07C78:  CLRF   x65
07C7A:  CLRF   x66
07C7C:  MOVLW  01
07C7E:  MOVWF  x67
07C80:  MOVLB  0
07C82:  CALL   2BEE
....................           
....................          if(Opcion==2)    
07C86:  MOVLB  5
07C88:  MOVF   x9B,W
07C8A:  SUBLW  02
07C8C:  BNZ   7CD4
....................             {strcpy(Menus.Letra,"Integral"); 
07C8E:  MOVLW  06
07C90:  MOVWF  FEA
07C92:  MOVLW  3A
07C94:  MOVWF  FE9
07C96:  MOVFF  FF2,65A
07C9A:  BCF    FF2.7
07C9C:  MOVLW  00
07C9E:  MOVLB  0
07CA0:  CALL   0C88
07CA4:  TBLRD*-
07CA6:  TBLRD*+
07CA8:  MOVF   FF5,W
07CAA:  MOVWF  FEE
07CAC:  IORLW  00
07CAE:  BNZ   7CA6
07CB0:  MOVLB  6
07CB2:  BTFSC  x5A.7
07CB4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
07CB6:  MOVLW  06
07CB8:  MOVWF  x63
07CBA:  MOVLW  3A
07CBC:  MOVWF  x62
07CBE:  CLRF   x64
07CC0:  MOVLW  09
07CC2:  MOVWF  x65
07CC4:  MOVLW  01
07CC6:  MOVWF  x66
07CC8:  MOVWF  x67
07CCA:  MOVLB  0
07CCC:  CALL   2BEE
....................          else 
07CD0:  BRA    7D16
07CD2:  MOVLB  5
....................             {strcpy(Menus.Letra,"Integral"); 
07CD4:  MOVLW  06
07CD6:  MOVWF  FEA
07CD8:  MOVLW  3A
07CDA:  MOVWF  FE9
07CDC:  MOVFF  FF2,65A
07CE0:  BCF    FF2.7
07CE2:  MOVLW  00
07CE4:  MOVLB  0
07CE6:  CALL   0C88
07CEA:  TBLRD*-
07CEC:  TBLRD*+
07CEE:  MOVF   FF5,W
07CF0:  MOVWF  FEE
07CF2:  IORLW  00
07CF4:  BNZ   7CEC
07CF6:  MOVLB  6
07CF8:  BTFSC  x5A.7
07CFA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);} 
07CFC:  MOVLW  06
07CFE:  MOVWF  x63
07D00:  MOVLW  3A
07D02:  MOVWF  x62
07D04:  CLRF   x64
07D06:  MOVLW  09
07D08:  MOVWF  x65
07D0A:  CLRF   x66
07D0C:  MOVLW  01
07D0E:  MOVWF  x67
07D10:  MOVLB  0
07D12:  CALL   2BEE
....................              
....................          if(Opcion==3)    
07D16:  MOVLB  5
07D18:  MOVF   x9B,W
07D1A:  SUBLW  03
07D1C:  BNZ   7D64
....................             {strcpy(Menus.Letra,"Derivativo"); 
07D1E:  MOVLW  06
07D20:  MOVWF  FEA
07D22:  MOVLW  3A
07D24:  MOVWF  FE9
07D26:  MOVFF  FF2,65A
07D2A:  BCF    FF2.7
07D2C:  MOVLW  00
07D2E:  MOVLB  0
07D30:  CALL   0CB0
07D34:  TBLRD*-
07D36:  TBLRD*+
07D38:  MOVF   FF5,W
07D3A:  MOVWF  FEE
07D3C:  IORLW  00
07D3E:  BNZ   7D36
07D40:  MOVLB  6
07D42:  BTFSC  x5A.7
07D44:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
07D46:  MOVLW  06
07D48:  MOVWF  x63
07D4A:  MOVLW  3A
07D4C:  MOVWF  x62
07D4E:  CLRF   x64
07D50:  MOVLW  12
07D52:  MOVWF  x65
07D54:  MOVLW  01
07D56:  MOVWF  x66
07D58:  MOVWF  x67
07D5A:  MOVLB  0
07D5C:  CALL   2BEE
....................          else 
07D60:  BRA    7DA6
07D62:  MOVLB  5
....................             {strcpy(Menus.Letra,"Derivativo"); 
07D64:  MOVLW  06
07D66:  MOVWF  FEA
07D68:  MOVLW  3A
07D6A:  MOVWF  FE9
07D6C:  MOVFF  FF2,65A
07D70:  BCF    FF2.7
07D72:  MOVLW  00
07D74:  MOVLB  0
07D76:  CALL   0CB0
07D7A:  TBLRD*-
07D7C:  TBLRD*+
07D7E:  MOVF   FF5,W
07D80:  MOVWF  FEE
07D82:  IORLW  00
07D84:  BNZ   7D7C
07D86:  MOVLB  6
07D88:  BTFSC  x5A.7
07D8A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}    
07D8C:  MOVLW  06
07D8E:  MOVWF  x63
07D90:  MOVLW  3A
07D92:  MOVWF  x62
07D94:  CLRF   x64
07D96:  MOVLW  12
07D98:  MOVWF  x65
07D9A:  CLRF   x66
07D9C:  MOVLW  01
07D9E:  MOVWF  x67
07DA0:  MOVLB  0
07DA2:  CALL   2BEE
....................           
....................          if(Opcion==4)    
07DA6:  MOVLB  5
07DA8:  MOVF   x9B,W
07DAA:  SUBLW  04
07DAC:  BNZ   7DF4
....................             {strcpy(Menus.Letra,"Tciclo"); 
07DAE:  MOVLW  06
07DB0:  MOVWF  FEA
07DB2:  MOVLW  3A
07DB4:  MOVWF  FE9
07DB6:  MOVFF  FF2,65A
07DBA:  BCF    FF2.7
07DBC:  MOVLW  00
07DBE:  MOVLB  0
07DC0:  CALL   0CDA
07DC4:  TBLRD*-
07DC6:  TBLRD*+
07DC8:  MOVF   FF5,W
07DCA:  MOVWF  FEE
07DCC:  IORLW  00
07DCE:  BNZ   7DC6
07DD0:  MOVLB  6
07DD2:  BTFSC  x5A.7
07DD4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
07DD6:  MOVLW  06
07DD8:  MOVWF  x63
07DDA:  MOVLW  3A
07DDC:  MOVWF  x62
07DDE:  CLRF   x64
07DE0:  MOVLW  1B
07DE2:  MOVWF  x65
07DE4:  MOVLW  01
07DE6:  MOVWF  x66
07DE8:  MOVWF  x67
07DEA:  MOVLB  0
07DEC:  CALL   2BEE
....................          else 
07DF0:  BRA    7E36
07DF2:  MOVLB  5
....................             {strcpy(Menus.Letra,"Tciclo"); 
07DF4:  MOVLW  06
07DF6:  MOVWF  FEA
07DF8:  MOVLW  3A
07DFA:  MOVWF  FE9
07DFC:  MOVFF  FF2,65A
07E00:  BCF    FF2.7
07E02:  MOVLW  00
07E04:  MOVLB  0
07E06:  CALL   0CDA
07E0A:  TBLRD*-
07E0C:  TBLRD*+
07E0E:  MOVF   FF5,W
07E10:  MOVWF  FEE
07E12:  IORLW  00
07E14:  BNZ   7E0C
07E16:  MOVLB  6
07E18:  BTFSC  x5A.7
07E1A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);} 
07E1C:  MOVLW  06
07E1E:  MOVWF  x63
07E20:  MOVLW  3A
07E22:  MOVWF  x62
07E24:  CLRF   x64
07E26:  MOVLW  1B
07E28:  MOVWF  x65
07E2A:  CLRF   x66
07E2C:  MOVLW  01
07E2E:  MOVWF  x67
07E30:  MOVLB  0
07E32:  CALL   2BEE
....................              
....................          if(Opcion==5)    
07E36:  MOVLB  5
07E38:  MOVF   x9B,W
07E3A:  SUBLW  05
07E3C:  BNZ   7E84
....................             {strcpy(Menus.Letra,"Ajuste +"); 
07E3E:  MOVLW  06
07E40:  MOVWF  FEA
07E42:  MOVLW  3A
07E44:  MOVWF  FE9
07E46:  MOVFF  FF2,65A
07E4A:  BCF    FF2.7
07E4C:  MOVLW  00
07E4E:  MOVLB  0
07E50:  CALL   0D00
07E54:  TBLRD*-
07E56:  TBLRD*+
07E58:  MOVF   FF5,W
07E5A:  MOVWF  FEE
07E5C:  IORLW  00
07E5E:  BNZ   7E56
07E60:  MOVLB  6
07E62:  BTFSC  x5A.7
07E64:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
07E66:  MOVLW  06
07E68:  MOVWF  x63
07E6A:  MOVLW  3A
07E6C:  MOVWF  x62
07E6E:  CLRF   x64
07E70:  MOVLW  24
07E72:  MOVWF  x65
07E74:  MOVLW  01
07E76:  MOVWF  x66
07E78:  MOVWF  x67
07E7A:  MOVLB  0
07E7C:  CALL   2BEE
....................          else 
07E80:  BRA    7EC6
07E82:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste +"); 
07E84:  MOVLW  06
07E86:  MOVWF  FEA
07E88:  MOVLW  3A
07E8A:  MOVWF  FE9
07E8C:  MOVFF  FF2,65A
07E90:  BCF    FF2.7
07E92:  MOVLW  00
07E94:  MOVLB  0
07E96:  CALL   0D00
07E9A:  TBLRD*-
07E9C:  TBLRD*+
07E9E:  MOVF   FF5,W
07EA0:  MOVWF  FEE
07EA2:  IORLW  00
07EA4:  BNZ   7E9C
07EA6:  MOVLB  6
07EA8:  BTFSC  x5A.7
07EAA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}    
07EAC:  MOVLW  06
07EAE:  MOVWF  x63
07EB0:  MOVLW  3A
07EB2:  MOVWF  x62
07EB4:  CLRF   x64
07EB6:  MOVLW  24
07EB8:  MOVWF  x65
07EBA:  CLRF   x66
07EBC:  MOVLW  01
07EBE:  MOVWF  x67
07EC0:  MOVLB  0
07EC2:  CALL   2BEE
....................                          
....................          if(Opcion==6)    
07EC6:  MOVLB  5
07EC8:  MOVF   x9B,W
07ECA:  SUBLW  06
07ECC:  BNZ   7F14
....................             {strcpy(Menus.Letra,"Ajuste -"); 
07ECE:  MOVLW  06
07ED0:  MOVWF  FEA
07ED2:  MOVLW  3A
07ED4:  MOVWF  FE9
07ED6:  MOVFF  FF2,65A
07EDA:  BCF    FF2.7
07EDC:  MOVLW  00
07EDE:  MOVLB  0
07EE0:  CALL   0D28
07EE4:  TBLRD*-
07EE6:  TBLRD*+
07EE8:  MOVF   FF5,W
07EEA:  MOVWF  FEE
07EEC:  IORLW  00
07EEE:  BNZ   7EE6
07EF0:  MOVLB  6
07EF2:  BTFSC  x5A.7
07EF4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,1,1);} 
07EF6:  MOVLW  06
07EF8:  MOVWF  x63
07EFA:  MOVLW  3A
07EFC:  MOVWF  x62
07EFE:  CLRF   x64
07F00:  MOVLW  2D
07F02:  MOVWF  x65
07F04:  MOVLW  01
07F06:  MOVWF  x66
07F08:  MOVWF  x67
07F0A:  MOVLB  0
07F0C:  CALL   2BEE
....................          else 
07F10:  BRA    7F56
07F12:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ajuste -"); 
07F14:  MOVLW  06
07F16:  MOVWF  FEA
07F18:  MOVLW  3A
07F1A:  MOVWF  FE9
07F1C:  MOVFF  FF2,65A
07F20:  BCF    FF2.7
07F22:  MOVLW  00
07F24:  MOVLB  0
07F26:  CALL   0D28
07F2A:  TBLRD*-
07F2C:  TBLRD*+
07F2E:  MOVF   FF5,W
07F30:  MOVWF  FEE
07F32:  IORLW  00
07F34:  BNZ   7F2C
07F36:  MOVLB  6
07F38:  BTFSC  x5A.7
07F3A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,0,1);}      
07F3C:  MOVLW  06
07F3E:  MOVWF  x63
07F40:  MOVLW  3A
07F42:  MOVWF  x62
07F44:  CLRF   x64
07F46:  MOVLW  2D
07F48:  MOVWF  x65
07F4A:  CLRF   x66
07F4C:  MOVLW  01
07F4E:  MOVWF  x67
07F50:  MOVLB  0
07F52:  CALL   2BEE
....................       } 
....................       else{ 
07F56:  BRA    8264
07F58:  MOVLB  5
....................          if(Opcion==7)    
07F5A:  MOVF   x9B,W
07F5C:  SUBLW  07
07F5E:  BNZ   7FA4
....................             {strcpy(Menus.Letra,"Media Movil"); 
07F60:  MOVLW  06
07F62:  MOVWF  FEA
07F64:  MOVLW  3A
07F66:  MOVWF  FE9
07F68:  MOVFF  FF2,65A
07F6C:  BCF    FF2.7
07F6E:  MOVLW  00
07F70:  MOVLB  0
07F72:  CALL   0D50
07F76:  TBLRD*-
07F78:  TBLRD*+
07F7A:  MOVF   FF5,W
07F7C:  MOVWF  FEE
07F7E:  IORLW  00
07F80:  BNZ   7F78
07F82:  MOVLB  6
07F84:  BTFSC  x5A.7
07F86:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,1);} 
07F88:  MOVLW  06
07F8A:  MOVWF  x63
07F8C:  MOVLW  3A
07F8E:  MOVWF  x62
07F90:  CLRF   x64
07F92:  CLRF   x65
07F94:  MOVLW  01
07F96:  MOVWF  x66
07F98:  MOVWF  x67
07F9A:  MOVLB  0
07F9C:  CALL   2BEE
....................          else 
07FA0:  BRA    7FE4
07FA2:  MOVLB  5
....................             {strcpy(Menus.Letra,"Media Movil"); 
07FA4:  MOVLW  06
07FA6:  MOVWF  FEA
07FA8:  MOVLW  3A
07FAA:  MOVWF  FE9
07FAC:  MOVFF  FF2,65A
07FB0:  BCF    FF2.7
07FB2:  MOVLW  00
07FB4:  MOVLB  0
07FB6:  CALL   0D50
07FBA:  TBLRD*-
07FBC:  TBLRD*+
07FBE:  MOVF   FF5,W
07FC0:  MOVWF  FEE
07FC2:  IORLW  00
07FC4:  BNZ   7FBC
07FC6:  MOVLB  6
07FC8:  BTFSC  x5A.7
07FCA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,0,1);}      
07FCC:  MOVLW  06
07FCE:  MOVWF  x63
07FD0:  MOVLW  3A
07FD2:  MOVWF  x62
07FD4:  CLRF   x64
07FD6:  CLRF   x65
07FD8:  CLRF   x66
07FDA:  MOVLW  01
07FDC:  MOVWF  x67
07FDE:  MOVLB  0
07FE0:  CALL   2BEE
....................              
....................          if(Opcion==8)    
07FE4:  MOVLB  5
07FE6:  MOVF   x9B,W
07FE8:  SUBLW  08
07FEA:  BNZ   8032
....................             {strcpy(Menus.Letra,"Ganancia    "); 
07FEC:  MOVLW  06
07FEE:  MOVWF  FEA
07FF0:  MOVLW  3A
07FF2:  MOVWF  FE9
07FF4:  MOVFF  FF2,65A
07FF8:  BCF    FF2.7
07FFA:  MOVLW  00
07FFC:  MOVLB  0
07FFE:  CALL   0D7A
08002:  TBLRD*-
08004:  TBLRD*+
08006:  MOVF   FF5,W
08008:  MOVWF  FEE
0800A:  IORLW  00
0800C:  BNZ   8004
0800E:  MOVLB  6
08010:  BTFSC  x5A.7
08012:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,1,1);} 
08014:  MOVLW  06
08016:  MOVWF  x63
08018:  MOVLW  3A
0801A:  MOVWF  x62
0801C:  CLRF   x64
0801E:  MOVLW  09
08020:  MOVWF  x65
08022:  MOVLW  01
08024:  MOVWF  x66
08026:  MOVWF  x67
08028:  MOVLB  0
0802A:  CALL   2BEE
....................          else 
0802E:  BRA    8074
08030:  MOVLB  5
....................             {strcpy(Menus.Letra,"Ganancia    "); 
08032:  MOVLW  06
08034:  MOVWF  FEA
08036:  MOVLW  3A
08038:  MOVWF  FE9
0803A:  MOVFF  FF2,65A
0803E:  BCF    FF2.7
08040:  MOVLW  00
08042:  MOVLB  0
08044:  CALL   0D7A
08048:  TBLRD*-
0804A:  TBLRD*+
0804C:  MOVF   FF5,W
0804E:  MOVWF  FEE
08050:  IORLW  00
08052:  BNZ   804A
08054:  MOVLB  6
08056:  BTFSC  x5A.7
08058:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,9,0,1);}   
0805A:  MOVLW  06
0805C:  MOVWF  x63
0805E:  MOVLW  3A
08060:  MOVWF  x62
08062:  CLRF   x64
08064:  MOVLW  09
08066:  MOVWF  x65
08068:  CLRF   x66
0806A:  MOVLW  01
0806C:  MOVWF  x67
0806E:  MOVLB  0
08070:  CALL   2BEE
....................              
....................          if(Opcion==9)    
08074:  MOVLB  5
08076:  MOVF   x9B,W
08078:  SUBLW  09
0807A:  BNZ   80C2
....................             {strcpy(Menus.Letra,"R51         "); 
0807C:  MOVLW  06
0807E:  MOVWF  FEA
08080:  MOVLW  3A
08082:  MOVWF  FE9
08084:  MOVFF  FF2,65A
08088:  BCF    FF2.7
0808A:  MOVLW  00
0808C:  MOVLB  0
0808E:  CALL   0DA6
08092:  TBLRD*-
08094:  TBLRD*+
08096:  MOVF   FF5,W
08098:  MOVWF  FEE
0809A:  IORLW  00
0809C:  BNZ   8094
0809E:  MOVLB  6
080A0:  BTFSC  x5A.7
080A2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,1,1);} 
080A4:  MOVLW  06
080A6:  MOVWF  x63
080A8:  MOVLW  3A
080AA:  MOVWF  x62
080AC:  CLRF   x64
080AE:  MOVLW  12
080B0:  MOVWF  x65
080B2:  MOVLW  01
080B4:  MOVWF  x66
080B6:  MOVWF  x67
080B8:  MOVLB  0
080BA:  CALL   2BEE
....................          else 
080BE:  BRA    8104
080C0:  MOVLB  5
....................             {strcpy(Menus.Letra,"R51         "); 
080C2:  MOVLW  06
080C4:  MOVWF  FEA
080C6:  MOVLW  3A
080C8:  MOVWF  FE9
080CA:  MOVFF  FF2,65A
080CE:  BCF    FF2.7
080D0:  MOVLW  00
080D2:  MOVLB  0
080D4:  CALL   0DA6
080D8:  TBLRD*-
080DA:  TBLRD*+
080DC:  MOVF   FF5,W
080DE:  MOVWF  FEE
080E0:  IORLW  00
080E2:  BNZ   80DA
080E4:  MOVLB  6
080E6:  BTFSC  x5A.7
080E8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,18,0,1);}      
080EA:  MOVLW  06
080EC:  MOVWF  x63
080EE:  MOVLW  3A
080F0:  MOVWF  x62
080F2:  CLRF   x64
080F4:  MOVLW  12
080F6:  MOVWF  x65
080F8:  CLRF   x66
080FA:  MOVLW  01
080FC:  MOVWF  x67
080FE:  MOVLB  0
08100:  CALL   2BEE
....................           
....................          if(Opcion==10)    
08104:  MOVLB  5
08106:  MOVF   x9B,W
08108:  SUBLW  0A
0810A:  BNZ   8152
....................             {strcpy(Menus.Letra,"RPT100 B     "); 
0810C:  MOVLW  06
0810E:  MOVWF  FEA
08110:  MOVLW  3A
08112:  MOVWF  FE9
08114:  MOVFF  FF2,65A
08118:  BCF    FF2.7
0811A:  MOVLW  00
0811C:  MOVLB  0
0811E:  CALL   0DD2
08122:  TBLRD*-
08124:  TBLRD*+
08126:  MOVF   FF5,W
08128:  MOVWF  FEE
0812A:  IORLW  00
0812C:  BNZ   8124
0812E:  MOVLB  6
08130:  BTFSC  x5A.7
08132:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,1,1);} 
08134:  MOVLW  06
08136:  MOVWF  x63
08138:  MOVLW  3A
0813A:  MOVWF  x62
0813C:  CLRF   x64
0813E:  MOVLW  1B
08140:  MOVWF  x65
08142:  MOVLW  01
08144:  MOVWF  x66
08146:  MOVWF  x67
08148:  MOVLB  0
0814A:  CALL   2BEE
....................          else 
0814E:  BRA    8194
08150:  MOVLB  5
....................             {strcpy(Menus.Letra,"RPT100 B     "); 
08152:  MOVLW  06
08154:  MOVWF  FEA
08156:  MOVLW  3A
08158:  MOVWF  FE9
0815A:  MOVFF  FF2,65A
0815E:  BCF    FF2.7
08160:  MOVLW  00
08162:  MOVLB  0
08164:  CALL   0DD2
08168:  TBLRD*-
0816A:  TBLRD*+
0816C:  MOVF   FF5,W
0816E:  MOVWF  FEE
08170:  IORLW  00
08172:  BNZ   816A
08174:  MOVLB  6
08176:  BTFSC  x5A.7
08178:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,27,0,1);}      
0817A:  MOVLW  06
0817C:  MOVWF  x63
0817E:  MOVLW  3A
08180:  MOVWF  x62
08182:  CLRF   x64
08184:  MOVLW  1B
08186:  MOVWF  x65
08188:  CLRF   x66
0818A:  MOVLW  01
0818C:  MOVWF  x67
0818E:  MOVLB  0
08190:  CALL   2BEE
....................           
....................          if(Opcion==11)    
08194:  MOVLB  5
08196:  MOVF   x9B,W
08198:  SUBLW  0B
0819A:  BNZ   81E2
....................             {strcpy(Menus.Letra,"In Temperatura"); 
0819C:  MOVLW  06
0819E:  MOVWF  FEA
081A0:  MOVLW  3A
081A2:  MOVWF  FE9
081A4:  MOVFF  FF2,65A
081A8:  BCF    FF2.7
081AA:  MOVLW  00
081AC:  MOVLB  0
081AE:  CALL   0DFE
081B2:  TBLRD*-
081B4:  TBLRD*+
081B6:  MOVF   FF5,W
081B8:  MOVWF  FEE
081BA:  IORLW  00
081BC:  BNZ   81B4
081BE:  MOVLB  6
081C0:  BTFSC  x5A.7
081C2:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,1,1);} 
081C4:  MOVLW  06
081C6:  MOVWF  x63
081C8:  MOVLW  3A
081CA:  MOVWF  x62
081CC:  CLRF   x64
081CE:  MOVLW  24
081D0:  MOVWF  x65
081D2:  MOVLW  01
081D4:  MOVWF  x66
081D6:  MOVWF  x67
081D8:  MOVLB  0
081DA:  CALL   2BEE
....................          else 
081DE:  BRA    8224
081E0:  MOVLB  5
....................             {strcpy(Menus.Letra,"In Temperatura"); 
081E2:  MOVLW  06
081E4:  MOVWF  FEA
081E6:  MOVLW  3A
081E8:  MOVWF  FE9
081EA:  MOVFF  FF2,65A
081EE:  BCF    FF2.7
081F0:  MOVLW  00
081F2:  MOVLB  0
081F4:  CALL   0DFE
081F8:  TBLRD*-
081FA:  TBLRD*+
081FC:  MOVF   FF5,W
081FE:  MOVWF  FEE
08200:  IORLW  00
08202:  BNZ   81FA
08204:  MOVLB  6
08206:  BTFSC  x5A.7
08208:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,36,0,1);}  
0820A:  MOVLW  06
0820C:  MOVWF  x63
0820E:  MOVLW  3A
08210:  MOVWF  x62
08212:  CLRF   x64
08214:  MOVLW  24
08216:  MOVWF  x65
08218:  CLRF   x66
0821A:  MOVLW  01
0821C:  MOVWF  x67
0821E:  MOVLB  0
08220:  CALL   2BEE
....................              
....................             strcpy(Menus.Letra,"            "); 
08224:  MOVLW  06
08226:  MOVWF  FEA
08228:  MOVLW  3A
0822A:  MOVWF  FE9
0822C:  MOVFF  FF2,65A
08230:  BCF    FF2.7
08232:  MOVLW  00
08234:  CALL   0E2C
08238:  TBLRD*-
0823A:  TBLRD*+
0823C:  MOVF   FF5,W
0823E:  MOVWF  FEE
08240:  IORLW  00
08242:  BNZ   823A
08244:  MOVLB  6
08246:  BTFSC  x5A.7
08248:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,45,0,1); 
0824A:  MOVLW  06
0824C:  MOVWF  x63
0824E:  MOVLW  3A
08250:  MOVWF  x62
08252:  CLRF   x64
08254:  MOVLW  2D
08256:  MOVWF  x65
08258:  CLRF   x66
0825A:  MOVLW  01
0825C:  MOVWF  x67
0825E:  MOVLB  0
08260:  CALL   2BEE
....................       }    
....................        
....................          if(UP)//Si oprime hacia arriba 
08264:  BSF    F92.4
08266:  BTFSC  F80.4
08268:  BRA    8292
....................          { 
....................             delay_ms(10); 
0826A:  MOVLW  0A
0826C:  MOVLB  6
0826E:  MOVWF  x63
08270:  MOVLB  0
08272:  CALL   1056
....................             if(Flanco == 0) 
08276:  MOVLB  5
08278:  BTFSC  x87.1
0827A:  BRA    8290
....................                {Flanco = 1;delay_ms(30);Opcion--;visual=1; 
0827C:  BSF    x87.1
0827E:  MOVLW  1E
08280:  MOVLB  6
08282:  MOVWF  x63
08284:  MOVLB  0
08286:  CALL   1056
0828A:  MOVLB  5
0828C:  DECF   x9B,F
0828E:  BSF    x87.4
....................                } 
....................          } 
....................             else 
08290:  BRA    8296
....................                {Flanco = 0;} 
08292:  MOVLB  5
08294:  BCF    x87.1
....................                    
....................          if(DOWN)//Si oprime hacia abajo 
08296:  BSF    F92.5
08298:  BTFSC  F80.5
0829A:  BRA    82C4
....................          { 
....................             delay_ms(10); 
0829C:  MOVLW  0A
0829E:  MOVLB  6
082A0:  MOVWF  x63
082A2:  MOVLB  0
082A4:  CALL   1056
....................             if(Flanco2 == 0) 
082A8:  MOVLB  5
082AA:  BTFSC  x87.3
082AC:  BRA    82C2
....................                {Flanco2 = 1;delay_ms(30);Opcion++;visual=1; 
082AE:  BSF    x87.3
082B0:  MOVLW  1E
082B2:  MOVLB  6
082B4:  MOVWF  x63
082B6:  MOVLB  0
082B8:  CALL   1056
082BC:  MOVLB  5
082BE:  INCF   x9B,F
082C0:  BSF    x87.4
....................                }      
....................          } 
....................             else 
082C2:  BRA    82C6
....................                {Flanco2 = 0;}   
082C4:  BCF    x87.3
....................                 
....................          if(RIGHT)//Si oprime SET 
082C6:  BSF    F96.0
082C8:  BTFSC  F84.0
082CA:  BRA    8308
....................          {   
....................             delay_ms(10); 
082CC:  MOVLW  0A
082CE:  MOVLB  6
082D0:  MOVWF  x63
082D2:  MOVLB  0
082D4:  CALL   1056
....................             if(Flanco1 == 0) 
082D8:  MOVLB  5
082DA:  BTFSC  x87.2
082DC:  BRA    8306
....................                {Flanco1 = 1;delay_ms(30);Menu=Opcion+100;Opcion=1;glcd_fillscreen(OFF);visual=1; 
082DE:  BSF    x87.2
082E0:  MOVLW  1E
082E2:  MOVLB  6
082E4:  MOVWF  x63
082E6:  MOVLB  0
082E8:  CALL   1056
082EC:  MOVLW  64
082EE:  MOVLB  5
082F0:  ADDWF  x9B,W
082F2:  MOVWF  x97
082F4:  MOVLW  01
082F6:  MOVWF  x9B
082F8:  MOVLB  6
082FA:  CLRF   x62
082FC:  MOVLB  0
082FE:  CALL   25C0
08302:  MOVLB  5
08304:  BSF    x87.4
....................                } 
....................          } 
....................             else 
08306:  BRA    830A
....................                {Flanco1 = 0;}  
08308:  BCF    x87.2
....................                 
....................          if(LEFT)//Si oprime boton de Toma. 
0830A:  BSF    F96.1
0830C:  BTFSC  F84.1
0830E:  BRA    8336
....................          { 
....................             delay_ms(10); 
08310:  MOVLW  0A
08312:  MOVLB  6
08314:  MOVWF  x63
08316:  MOVLB  0
08318:  CALL   1056
....................             delay_ms(700);reset_cpu();          
0831C:  MOVLW  04
0831E:  MOVLB  6
08320:  MOVWF  x5A
08322:  MOVLW  AF
08324:  MOVWF  x63
08326:  MOVLB  0
08328:  CALL   1056
0832C:  MOVLB  6
0832E:  DECFSZ x5A,F
08330:  BRA    8322
08332:  RESET
08334:  MOVLB  5
....................          }       
....................          
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==101){ // Menu de Ajuste de Ganancia 
08336:  MOVF   x97,W
08338:  SUBLW  65
0833A:  BTFSS  FD8.2
0833C:  BRA    8548
....................          if(Ganancia>40)       
0833E:  MOVLB  6
08340:  CLRF   x61
08342:  CLRF   x60
08344:  MOVLW  20
08346:  MOVWF  x5F
08348:  MOVLW  84
0834A:  MOVWF  x5E
0834C:  MOVFF  605,665
08350:  MOVFF  604,664
08354:  MOVFF  603,663
08358:  MOVFF  602,662
0835C:  MOVLB  0
0835E:  CALL   1C46
08362:  BNC   8372
....................             Ganancia=1; 
08364:  MOVLB  6
08366:  CLRF   x05
08368:  CLRF   x04
0836A:  CLRF   x03
0836C:  MOVLW  7F
0836E:  MOVWF  x02
....................          else if(Ganancia<1) 
08370:  BRA    83A4
08372:  MOVFF  605,661
08376:  MOVFF  604,660
0837A:  MOVFF  603,65F
0837E:  MOVFF  602,65E
08382:  MOVLB  6
08384:  CLRF   x65
08386:  CLRF   x64
08388:  CLRF   x63
0838A:  MOVLW  7F
0838C:  MOVWF  x62
0838E:  MOVLB  0
08390:  CALL   1C46
08394:  BNC   83A4
....................             Ganancia=40; 
08396:  MOVLB  6
08398:  CLRF   x05
0839A:  CLRF   x04
0839C:  MOVLW  20
0839E:  MOVWF  x03
083A0:  MOVLW  84
083A2:  MOVWF  x02
....................           
....................          if(visual==1){ 
083A4:  MOVLB  5
083A6:  BTFSS  x87.4
083A8:  BRA    8430
....................             glcd_fillScreen(OFF); 
083AA:  MOVLB  6
083AC:  CLRF   x62
083AE:  MOVLB  0
083B0:  CALL   25C0
....................             strcpy(Menus.Letra,"P"); 
083B4:  MOVLW  06
083B6:  MOVWF  FEA
083B8:  MOVLW  3A
083BA:  MOVWF  FE9
083BC:  MOVFF  FF2,65A
083C0:  BCF    FF2.7
083C2:  MOVLW  00
083C4:  CALL   0E58
083C8:  TBLRD*-
083CA:  TBLRD*+
083CC:  MOVF   FF5,W
083CE:  MOVWF  FEE
083D0:  IORLW  00
083D2:  BNZ   83CA
083D4:  MOVLB  6
083D6:  BTFSC  x5A.7
083D8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);  
083DA:  MOVLW  06
083DC:  MOVWF  x63
083DE:  MOVLW  3A
083E0:  MOVWF  x62
083E2:  CLRF   x64
083E4:  CLRF   x65
083E6:  MOVLW  01
083E8:  MOVWF  x66
083EA:  MOVLW  02
083EC:  MOVWF  x67
083EE:  MOVLB  0
083F0:  CALL   2BEE
....................             displayTemperatura(Ganancia,30,30,0,3);          
083F4:  MOVFF  605,65D
083F8:  MOVFF  604,65C
083FC:  MOVFF  603,65B
08400:  MOVFF  602,65A
08404:  CALL   4346
08408:  MOVFF  02,65B
0840C:  MOVFF  01,65A
08410:  MOVFF  02,65D
08414:  MOVFF  01,65C
08418:  MOVLW  1E
0841A:  MOVLB  6
0841C:  MOVWF  x5E
0841E:  MOVWF  x5F
08420:  CLRF   x60
08422:  MOVLW  03
08424:  MOVWF  x61
08426:  MOVLB  0
08428:  CALL   4440
....................             visual=0; 
0842C:  MOVLB  5
0842E:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08430:  BSF    F92.4
08432:  BTFSC  F80.4
08434:  BRA    8474
....................             DelayPuls();Ganancia+=1.0;visual=1;             
08436:  MOVLB  0
08438:  CALL   37DA
0843C:  BCF    FD8.1
0843E:  MOVFF  605,662
08442:  MOVFF  604,661
08446:  MOVFF  603,660
0844A:  MOVFF  602,65F
0844E:  MOVLB  6
08450:  CLRF   x66
08452:  CLRF   x65
08454:  CLRF   x64
08456:  MOVLW  7F
08458:  MOVWF  x63
0845A:  MOVLB  0
0845C:  CALL   124A
08460:  MOVFF  03,605
08464:  MOVFF  02,604
08468:  MOVFF  01,603
0846C:  MOVFF  00,602
08470:  MOVLB  5
08472:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08474:  BSF    F92.5
08476:  BTFSC  F80.5
08478:  BRA    84B8
....................             DelayPuls();Ganancia-=1.0;visual=1;      
0847A:  MOVLB  0
0847C:  CALL   37DA
08480:  BSF    FD8.1
08482:  MOVFF  605,662
08486:  MOVFF  604,661
0848A:  MOVFF  603,660
0848E:  MOVFF  602,65F
08492:  MOVLB  6
08494:  CLRF   x66
08496:  CLRF   x65
08498:  CLRF   x64
0849A:  MOVLW  7F
0849C:  MOVWF  x63
0849E:  MOVLB  0
084A0:  CALL   124A
084A4:  MOVFF  03,605
084A8:  MOVFF  02,604
084AC:  MOVFF  01,603
084B0:  MOVFF  00,602
084B4:  MOVLB  5
084B6:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
084B8:  BSF    F96.0
084BA:  BTFSC  F84.0
084BC:  BRA    84C0
....................             visual=1;           
084BE:  BSF    x87.4
....................                    
....................          if(LEFT){ 
084C0:  BSF    F96.1
084C2:  BTFSC  F84.1
084C4:  BRA    8548
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
084C6:  MOVLW  04
084C8:  MOVLB  6
084CA:  MOVWF  x5A
084CC:  MOVLW  AF
084CE:  MOVWF  x63
084D0:  MOVLB  0
084D2:  CALL   1056
084D6:  MOVLB  6
084D8:  DECFSZ x5A,F
084DA:  BRA    84CC
084DC:  MOVLW  64
084DE:  MOVLB  5
084E0:  MOVWF  x97
084E2:  MOVLB  6
084E4:  CLRF   x62
084E6:  MOVLB  0
084E8:  CALL   25C0
084EC:  MOVLW  01
084EE:  MOVLB  5
084F0:  MOVWF  x9B
084F2:  BSF    x87.4
....................             write_eeprom(14,(int8)Ganancia);delay_ms(20); 
084F4:  MOVFF  605,65D
084F8:  MOVFF  604,65C
084FC:  MOVFF  603,65B
08500:  MOVFF  602,65A
08504:  MOVLB  0
08506:  CALL   4346
0850A:  MOVFF  01,65A
0850E:  CLRF   FAA
08510:  MOVLW  0E
08512:  MOVWF  FA9
08514:  MOVFF  65A,FA8
08518:  BCF    FA6.6
0851A:  BCF    FA6.7
0851C:  BSF    FA6.2
0851E:  MOVF   FF2,W
08520:  MOVWF  00
08522:  BCF    FF2.7
08524:  MOVLB  F
08526:  MOVLW  55
08528:  MOVWF  FA7
0852A:  MOVLW  AA
0852C:  MOVWF  FA7
0852E:  BSF    FA6.1
08530:  BTFSC  FA6.1
08532:  BRA    8530
08534:  BCF    FA6.2
08536:  MOVF   00,W
08538:  IORWF  FF2,F
0853A:  MOVLW  14
0853C:  MOVLB  6
0853E:  MOVWF  x63
08540:  MOVLB  0
08542:  CALL   1056
08546:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==102){ // Menu de Ajuste de Integral    
08548:  MOVF   x97,W
0854A:  SUBLW  66
0854C:  BTFSS  FD8.2
0854E:  BRA    8766
....................          if(Integral>40)       
08550:  MOVLB  6
08552:  CLRF   x61
08554:  CLRF   x60
08556:  MOVLW  20
08558:  MOVWF  x5F
0855A:  MOVLW  84
0855C:  MOVWF  x5E
0855E:  MOVFF  5C9,665
08562:  MOVFF  5C8,664
08566:  MOVFF  5C7,663
0856A:  MOVFF  5C6,662
0856E:  MOVLB  0
08570:  CALL   1C46
08574:  BNC   8584
....................             Integral=1; 
08576:  MOVLB  5
08578:  CLRF   xC9
0857A:  CLRF   xC8
0857C:  CLRF   xC7
0857E:  MOVLW  7F
08580:  MOVWF  xC6
....................          else if(Integral<1) 
08582:  BRA    85B6
08584:  MOVFF  5C9,661
08588:  MOVFF  5C8,660
0858C:  MOVFF  5C7,65F
08590:  MOVFF  5C6,65E
08594:  MOVLB  6
08596:  CLRF   x65
08598:  CLRF   x64
0859A:  CLRF   x63
0859C:  MOVLW  7F
0859E:  MOVWF  x62
085A0:  MOVLB  0
085A2:  CALL   1C46
085A6:  BNC   85B6
....................             Integral=40; 
085A8:  MOVLB  5
085AA:  CLRF   xC9
085AC:  CLRF   xC8
085AE:  MOVLW  20
085B0:  MOVWF  xC7
085B2:  MOVLW  84
085B4:  MOVWF  xC6
....................        
....................          if(visual==1){ 
085B6:  MOVLB  5
085B8:  BTFSS  x87.4
085BA:  BRA    8642
....................             glcd_fillScreen(OFF); 
085BC:  MOVLB  6
085BE:  CLRF   x62
085C0:  MOVLB  0
085C2:  CALL   25C0
....................             strcpy(Menus.Letra,"I"); 
085C6:  MOVLW  06
085C8:  MOVWF  FEA
085CA:  MOVLW  3A
085CC:  MOVWF  FE9
085CE:  MOVFF  FF2,65A
085D2:  BCF    FF2.7
085D4:  MOVLW  00
085D6:  CALL   0E78
085DA:  TBLRD*-
085DC:  TBLRD*+
085DE:  MOVF   FF5,W
085E0:  MOVWF  FEE
085E2:  IORLW  00
085E4:  BNZ   85DC
085E6:  MOVLB  6
085E8:  BTFSC  x5A.7
085EA:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
085EC:  MOVLW  06
085EE:  MOVWF  x63
085F0:  MOVLW  3A
085F2:  MOVWF  x62
085F4:  CLRF   x64
085F6:  CLRF   x65
085F8:  MOVLW  01
085FA:  MOVWF  x66
085FC:  MOVLW  02
085FE:  MOVWF  x67
08600:  MOVLB  0
08602:  CALL   2BEE
....................             displayTemperatura(Integral,30,30,0,3);  
08606:  MOVFF  5C9,65D
0860A:  MOVFF  5C8,65C
0860E:  MOVFF  5C7,65B
08612:  MOVFF  5C6,65A
08616:  CALL   4346
0861A:  MOVFF  02,65B
0861E:  MOVFF  01,65A
08622:  MOVFF  02,65D
08626:  MOVFF  01,65C
0862A:  MOVLW  1E
0862C:  MOVLB  6
0862E:  MOVWF  x5E
08630:  MOVWF  x5F
08632:  CLRF   x60
08634:  MOVLW  03
08636:  MOVWF  x61
08638:  MOVLB  0
0863A:  CALL   4440
....................             visual=0; 
0863E:  MOVLB  5
08640:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08642:  BSF    F92.4
08644:  BTFSC  F80.4
08646:  BRA    8686
....................             DelayPuls();Integral+=1.0;visual=1;  
08648:  MOVLB  0
0864A:  CALL   37DA
0864E:  BCF    FD8.1
08650:  MOVFF  5C9,662
08654:  MOVFF  5C8,661
08658:  MOVFF  5C7,660
0865C:  MOVFF  5C6,65F
08660:  MOVLB  6
08662:  CLRF   x66
08664:  CLRF   x65
08666:  CLRF   x64
08668:  MOVLW  7F
0866A:  MOVWF  x63
0866C:  MOVLB  0
0866E:  CALL   124A
08672:  MOVFF  03,5C9
08676:  MOVFF  02,5C8
0867A:  MOVFF  01,5C7
0867E:  MOVFF  00,5C6
08682:  MOVLB  5
08684:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){               
08686:  BSF    F92.5
08688:  BTFSC  F80.5
0868A:  BRA    86CA
....................             DelayPuls();Integral-=1.0;visual=1;      
0868C:  MOVLB  0
0868E:  CALL   37DA
08692:  BSF    FD8.1
08694:  MOVFF  5C9,662
08698:  MOVFF  5C8,661
0869C:  MOVFF  5C7,660
086A0:  MOVFF  5C6,65F
086A4:  MOVLB  6
086A6:  CLRF   x66
086A8:  CLRF   x65
086AA:  CLRF   x64
086AC:  MOVLW  7F
086AE:  MOVWF  x63
086B0:  MOVLB  0
086B2:  CALL   124A
086B6:  MOVFF  03,5C9
086BA:  MOVFF  02,5C8
086BE:  MOVFF  01,5C7
086C2:  MOVFF  00,5C6
086C6:  MOVLB  5
086C8:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
086CA:  BSF    F96.0
086CC:  BTFSC  F84.0
086CE:  BRA    86D2
....................             visual=1;  
086D0:  BSF    x87.4
....................                    
....................          if(LEFT){ 
086D2:  BSF    F96.1
086D4:  BTFSC  F84.1
086D6:  BRA    8766
....................             delay_ms(10); 
086D8:  MOVLW  0A
086DA:  MOVLB  6
086DC:  MOVWF  x63
086DE:  MOVLB  0
086E0:  CALL   1056
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
086E4:  MOVLW  04
086E6:  MOVLB  6
086E8:  MOVWF  x5A
086EA:  MOVLW  AF
086EC:  MOVWF  x63
086EE:  MOVLB  0
086F0:  CALL   1056
086F4:  MOVLB  6
086F6:  DECFSZ x5A,F
086F8:  BRA    86EA
086FA:  MOVLW  64
086FC:  MOVLB  5
086FE:  MOVWF  x97
08700:  MOVLB  6
08702:  CLRF   x62
08704:  MOVLB  0
08706:  CALL   25C0
0870A:  MOVLW  01
0870C:  MOVLB  5
0870E:  MOVWF  x9B
08710:  BSF    x87.4
....................             write_eeprom(15,(int8)Integral);delay_ms(20); 
08712:  MOVFF  5C9,65D
08716:  MOVFF  5C8,65C
0871A:  MOVFF  5C7,65B
0871E:  MOVFF  5C6,65A
08722:  MOVLB  0
08724:  CALL   4346
08728:  MOVFF  01,65A
0872C:  CLRF   FAA
0872E:  MOVLW  0F
08730:  MOVWF  FA9
08732:  MOVFF  65A,FA8
08736:  BCF    FA6.6
08738:  BCF    FA6.7
0873A:  BSF    FA6.2
0873C:  MOVF   FF2,W
0873E:  MOVWF  00
08740:  BCF    FF2.7
08742:  MOVLB  F
08744:  MOVLW  55
08746:  MOVWF  FA7
08748:  MOVLW  AA
0874A:  MOVWF  FA7
0874C:  BSF    FA6.1
0874E:  BTFSC  FA6.1
08750:  BRA    874E
08752:  BCF    FA6.2
08754:  MOVF   00,W
08756:  IORWF  FF2,F
08758:  MOVLW  14
0875A:  MOVLB  6
0875C:  MOVWF  x63
0875E:  MOVLB  0
08760:  CALL   1056
08764:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==103){ // Menu de Ajuste de Derivativo 
08766:  MOVF   x97,W
08768:  SUBLW  67
0876A:  BTFSS  FD8.2
0876C:  BRA    898E
....................        
....................          if(Derivativo>200) 
0876E:  MOVLB  6
08770:  CLRF   x61
08772:  CLRF   x60
08774:  MOVLW  48
08776:  MOVWF  x5F
08778:  MOVLW  86
0877A:  MOVWF  x5E
0877C:  MOVFF  5CD,665
08780:  MOVFF  5CC,664
08784:  MOVFF  5CB,663
08788:  MOVFF  5CA,662
0878C:  MOVLB  0
0878E:  CALL   1C46
08792:  BNC   87A2
....................             Derivativo=2; 
08794:  MOVLB  5
08796:  CLRF   xCD
08798:  CLRF   xCC
0879A:  CLRF   xCB
0879C:  MOVLW  80
0879E:  MOVWF  xCA
....................          else if(Derivativo<2) 
087A0:  BRA    87D4
087A2:  MOVFF  5CD,661
087A6:  MOVFF  5CC,660
087AA:  MOVFF  5CB,65F
087AE:  MOVFF  5CA,65E
087B2:  MOVLB  6
087B4:  CLRF   x65
087B6:  CLRF   x64
087B8:  CLRF   x63
087BA:  MOVLW  80
087BC:  MOVWF  x62
087BE:  MOVLB  0
087C0:  CALL   1C46
087C4:  BNC   87D4
....................             Derivativo=200; 
087C6:  MOVLB  5
087C8:  CLRF   xCD
087CA:  CLRF   xCC
087CC:  MOVLW  48
087CE:  MOVWF  xCB
087D0:  MOVLW  86
087D2:  MOVWF  xCA
....................        
....................          if(visual==1){ 
087D4:  MOVLB  5
087D6:  BTFSS  x87.4
087D8:  BRA    8860
....................             glcd_fillScreen(OFF); 
087DA:  MOVLB  6
087DC:  CLRF   x62
087DE:  MOVLB  0
087E0:  CALL   25C0
....................             strcpy(Menus.Letra,"D"); 
087E4:  MOVLW  06
087E6:  MOVWF  FEA
087E8:  MOVLW  3A
087EA:  MOVWF  FE9
087EC:  MOVFF  FF2,65A
087F0:  BCF    FF2.7
087F2:  MOVLW  00
087F4:  CALL   0E98
087F8:  TBLRD*-
087FA:  TBLRD*+
087FC:  MOVF   FF5,W
087FE:  MOVWF  FEE
08800:  IORLW  00
08802:  BNZ   87FA
08804:  MOVLB  6
08806:  BTFSC  x5A.7
08808:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);          
0880A:  MOVLW  06
0880C:  MOVWF  x63
0880E:  MOVLW  3A
08810:  MOVWF  x62
08812:  CLRF   x64
08814:  CLRF   x65
08816:  MOVLW  01
08818:  MOVWF  x66
0881A:  MOVLW  02
0881C:  MOVWF  x67
0881E:  MOVLB  0
08820:  CALL   2BEE
....................             displayTemperatura(Derivativo,30,30,0,3); 
08824:  MOVFF  5CD,65D
08828:  MOVFF  5CC,65C
0882C:  MOVFF  5CB,65B
08830:  MOVFF  5CA,65A
08834:  CALL   4346
08838:  MOVFF  02,65B
0883C:  MOVFF  01,65A
08840:  MOVFF  02,65D
08844:  MOVFF  01,65C
08848:  MOVLW  1E
0884A:  MOVLB  6
0884C:  MOVWF  x5E
0884E:  MOVWF  x5F
08850:  CLRF   x60
08852:  MOVLW  03
08854:  MOVWF  x61
08856:  MOVLB  0
08858:  CALL   4440
....................             visual=0; 
0885C:  MOVLB  5
0885E:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08860:  BSF    F92.4
08862:  BTFSC  F80.4
08864:  BRA    88AE
....................             delay_ms(10); 
08866:  MOVLW  0A
08868:  MOVLB  6
0886A:  MOVWF  x63
0886C:  MOVLB  0
0886E:  CALL   1056
....................             DelayPuls();Derivativo+=1.0;visual=1; 
08872:  CALL   37DA
08876:  BCF    FD8.1
08878:  MOVFF  5CD,662
0887C:  MOVFF  5CC,661
08880:  MOVFF  5CB,660
08884:  MOVFF  5CA,65F
08888:  MOVLB  6
0888A:  CLRF   x66
0888C:  CLRF   x65
0888E:  CLRF   x64
08890:  MOVLW  7F
08892:  MOVWF  x63
08894:  MOVLB  0
08896:  CALL   124A
0889A:  MOVFF  03,5CD
0889E:  MOVFF  02,5CC
088A2:  MOVFF  01,5CB
088A6:  MOVFF  00,5CA
088AA:  MOVLB  5
088AC:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
088AE:  BSF    F92.5
088B0:  BTFSC  F80.5
088B2:  BRA    88F2
....................             DelayPuls();Derivativo-=1.0;visual=1;      
088B4:  MOVLB  0
088B6:  CALL   37DA
088BA:  BSF    FD8.1
088BC:  MOVFF  5CD,662
088C0:  MOVFF  5CC,661
088C4:  MOVFF  5CB,660
088C8:  MOVFF  5CA,65F
088CC:  MOVLB  6
088CE:  CLRF   x66
088D0:  CLRF   x65
088D2:  CLRF   x64
088D4:  MOVLW  7F
088D6:  MOVWF  x63
088D8:  MOVLB  0
088DA:  CALL   124A
088DE:  MOVFF  03,5CD
088E2:  MOVFF  02,5CC
088E6:  MOVFF  01,5CB
088EA:  MOVFF  00,5CA
088EE:  MOVLB  5
088F0:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT)//Si oprime SET 
088F2:  BSF    F96.0
088F4:  BTFSC  F84.0
088F6:  BRA    88FA
....................             visual=1;  
088F8:  BSF    x87.4
....................                    
....................          if(LEFT){ 
088FA:  BSF    F96.1
088FC:  BTFSC  F84.1
088FE:  BRA    898E
....................             delay_ms(10); 
08900:  MOVLW  0A
08902:  MOVLB  6
08904:  MOVWF  x63
08906:  MOVLB  0
08908:  CALL   1056
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0890C:  MOVLW  04
0890E:  MOVLB  6
08910:  MOVWF  x5A
08912:  MOVLW  AF
08914:  MOVWF  x63
08916:  MOVLB  0
08918:  CALL   1056
0891C:  MOVLB  6
0891E:  DECFSZ x5A,F
08920:  BRA    8912
08922:  MOVLW  64
08924:  MOVLB  5
08926:  MOVWF  x97
08928:  MOVLB  6
0892A:  CLRF   x62
0892C:  MOVLB  0
0892E:  CALL   25C0
08932:  MOVLW  01
08934:  MOVLB  5
08936:  MOVWF  x9B
08938:  BSF    x87.4
....................             write_eeprom(16,(int8)Derivativo);delay_ms(20); 
0893A:  MOVFF  5CD,65D
0893E:  MOVFF  5CC,65C
08942:  MOVFF  5CB,65B
08946:  MOVFF  5CA,65A
0894A:  MOVLB  0
0894C:  CALL   4346
08950:  MOVFF  01,65A
08954:  CLRF   FAA
08956:  MOVLW  10
08958:  MOVWF  FA9
0895A:  MOVFF  65A,FA8
0895E:  BCF    FA6.6
08960:  BCF    FA6.7
08962:  BSF    FA6.2
08964:  MOVF   FF2,W
08966:  MOVWF  00
08968:  BCF    FF2.7
0896A:  MOVLB  F
0896C:  MOVLW  55
0896E:  MOVWF  FA7
08970:  MOVLW  AA
08972:  MOVWF  FA7
08974:  BSF    FA6.1
08976:  BTFSC  FA6.1
08978:  BRA    8976
0897A:  BCF    FA6.2
0897C:  MOVF   00,W
0897E:  IORWF  FF2,F
08980:  MOVLW  14
08982:  MOVLB  6
08984:  MOVWF  x63
08986:  MOVLB  0
08988:  CALL   1056
0898C:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==104){ // Menu de Tiempo de Ciclo 
0898E:  MOVF   x97,W
08990:  SUBLW  68
08992:  BTFSS  FD8.2
08994:  BRA    8BA2
....................        
....................          if(Tciclo>40) 
08996:  MOVLB  6
08998:  CLRF   x61
0899A:  CLRF   x60
0899C:  MOVLW  20
0899E:  MOVWF  x5F
089A0:  MOVLW  84
089A2:  MOVWF  x5E
089A4:  MOVFF  5ED,665
089A8:  MOVFF  5EC,664
089AC:  MOVFF  5EB,663
089B0:  MOVFF  5EA,662
089B4:  MOVLB  0
089B6:  CALL   1C46
089BA:  BNC   89CC
....................             Tciclo=40; 
089BC:  MOVLB  5
089BE:  CLRF   xED
089C0:  CLRF   xEC
089C2:  MOVLW  20
089C4:  MOVWF  xEB
089C6:  MOVLW  84
089C8:  MOVWF  xEA
....................          else if(Tciclo<1) 
089CA:  BRA    89FE
089CC:  MOVFF  5ED,661
089D0:  MOVFF  5EC,660
089D4:  MOVFF  5EB,65F
089D8:  MOVFF  5EA,65E
089DC:  MOVLB  6
089DE:  CLRF   x65
089E0:  CLRF   x64
089E2:  CLRF   x63
089E4:  MOVLW  7F
089E6:  MOVWF  x62
089E8:  MOVLB  0
089EA:  CALL   1C46
089EE:  BNC   89FE
....................             Tciclo=40; 
089F0:  MOVLB  5
089F2:  CLRF   xED
089F4:  CLRF   xEC
089F6:  MOVLW  20
089F8:  MOVWF  xEB
089FA:  MOVLW  84
089FC:  MOVWF  xEA
....................        
....................          if(visual==1){ 
089FE:  MOVLB  5
08A00:  BTFSS  x87.4
08A02:  BRA    8A8A
....................             glcd_fillScreen(OFF); 
08A04:  MOVLB  6
08A06:  CLRF   x62
08A08:  MOVLB  0
08A0A:  CALL   25C0
....................             strcpy(Menus.Letra,"Tciclo"); 
08A0E:  MOVLW  06
08A10:  MOVWF  FEA
08A12:  MOVLW  3A
08A14:  MOVWF  FE9
08A16:  MOVFF  FF2,65A
08A1A:  BCF    FF2.7
08A1C:  MOVLW  00
08A1E:  CALL   0CDA
08A22:  TBLRD*-
08A24:  TBLRD*+
08A26:  MOVF   FF5,W
08A28:  MOVWF  FEE
08A2A:  IORLW  00
08A2C:  BNZ   8A24
08A2E:  MOVLB  6
08A30:  BTFSC  x5A.7
08A32:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);          
08A34:  MOVLW  06
08A36:  MOVWF  x63
08A38:  MOVLW  3A
08A3A:  MOVWF  x62
08A3C:  CLRF   x64
08A3E:  CLRF   x65
08A40:  MOVLW  01
08A42:  MOVWF  x66
08A44:  MOVLW  02
08A46:  MOVWF  x67
08A48:  MOVLB  0
08A4A:  CALL   2BEE
....................             displayTemperatura(Tciclo,30,30,0,3); 
08A4E:  MOVFF  5ED,65D
08A52:  MOVFF  5EC,65C
08A56:  MOVFF  5EB,65B
08A5A:  MOVFF  5EA,65A
08A5E:  CALL   4346
08A62:  MOVFF  02,65B
08A66:  MOVFF  01,65A
08A6A:  MOVFF  02,65D
08A6E:  MOVFF  01,65C
08A72:  MOVLW  1E
08A74:  MOVLB  6
08A76:  MOVWF  x5E
08A78:  MOVWF  x5F
08A7A:  CLRF   x60
08A7C:  MOVLW  03
08A7E:  MOVWF  x61
08A80:  MOVLB  0
08A82:  CALL   4440
....................             visual=0; 
08A86:  MOVLB  5
08A88:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08A8A:  BSF    F92.4
08A8C:  BTFSC  F80.4
08A8E:  BRA    8ACE
....................             DelayPuls();Tciclo+=1.0;visual=1; 
08A90:  MOVLB  0
08A92:  CALL   37DA
08A96:  BCF    FD8.1
08A98:  MOVFF  5ED,662
08A9C:  MOVFF  5EC,661
08AA0:  MOVFF  5EB,660
08AA4:  MOVFF  5EA,65F
08AA8:  MOVLB  6
08AAA:  CLRF   x66
08AAC:  CLRF   x65
08AAE:  CLRF   x64
08AB0:  MOVLW  7F
08AB2:  MOVWF  x63
08AB4:  MOVLB  0
08AB6:  CALL   124A
08ABA:  MOVFF  03,5ED
08ABE:  MOVFF  02,5EC
08AC2:  MOVFF  01,5EB
08AC6:  MOVFF  00,5EA
08ACA:  MOVLB  5
08ACC:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08ACE:  BSF    F92.5
08AD0:  BTFSC  F80.5
08AD2:  BRA    8B12
....................             DelayPuls();Tciclo-=1.0;visual=1;      
08AD4:  MOVLB  0
08AD6:  CALL   37DA
08ADA:  BSF    FD8.1
08ADC:  MOVFF  5ED,662
08AE0:  MOVFF  5EC,661
08AE4:  MOVFF  5EB,660
08AE8:  MOVFF  5EA,65F
08AEC:  MOVLB  6
08AEE:  CLRF   x66
08AF0:  CLRF   x65
08AF2:  CLRF   x64
08AF4:  MOVLW  7F
08AF6:  MOVWF  x63
08AF8:  MOVLB  0
08AFA:  CALL   124A
08AFE:  MOVFF  03,5ED
08B02:  MOVFF  02,5EC
08B06:  MOVFF  01,5EB
08B0A:  MOVFF  00,5EA
08B0E:  MOVLB  5
08B10:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT) 
08B12:  BSF    F96.0
08B14:  BTFSC  F84.0
08B16:  BRA    8B1A
....................             visual=1;  
08B18:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08B1A:  BSF    F96.1
08B1C:  BTFSC  F84.1
08B1E:  BRA    8BA2
....................             delay_ms(10); 
08B20:  MOVLW  0A
08B22:  MOVLB  6
08B24:  MOVWF  x63
08B26:  MOVLB  0
08B28:  CALL   1056
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08B2C:  MOVLW  04
08B2E:  MOVLB  6
08B30:  MOVWF  x5A
08B32:  MOVLW  AF
08B34:  MOVWF  x63
08B36:  MOVLB  0
08B38:  CALL   1056
08B3C:  MOVLB  6
08B3E:  DECFSZ x5A,F
08B40:  BRA    8B32
08B42:  MOVLW  64
08B44:  MOVLB  5
08B46:  MOVWF  x97
08B48:  MOVLB  6
08B4A:  CLRF   x62
08B4C:  MOVLB  0
08B4E:  CALL   25C0
08B52:  MOVLW  01
08B54:  MOVLB  5
08B56:  MOVWF  x9B
08B58:  BSF    x87.4
....................             write_eeprom(17,(int8)Tciclo); 
08B5A:  MOVFF  5ED,65D
08B5E:  MOVFF  5EC,65C
08B62:  MOVFF  5EB,65B
08B66:  MOVFF  5EA,65A
08B6A:  MOVLB  0
08B6C:  CALL   4346
08B70:  MOVFF  01,65A
08B74:  CLRF   FAA
08B76:  MOVLW  11
08B78:  MOVWF  FA9
08B7A:  MOVFF  65A,FA8
08B7E:  BCF    FA6.6
08B80:  BCF    FA6.7
08B82:  BSF    FA6.2
08B84:  MOVF   FF2,W
08B86:  MOVWF  00
08B88:  BCF    FF2.7
08B8A:  MOVLB  F
08B8C:  MOVLW  55
08B8E:  MOVWF  FA7
08B90:  MOVLW  AA
08B92:  MOVWF  FA7
08B94:  BSF    FA6.1
08B96:  BTFSC  FA6.1
08B98:  BRA    8B96
08B9A:  BCF    FA6.2
08B9C:  MOVF   00,W
08B9E:  IORWF  FF2,F
08BA0:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==105){ // Menu de Ajuste de Ajuste+ 
08BA2:  MOVF   x97,W
08BA4:  SUBLW  69
08BA6:  BTFSS  FD8.2
08BA8:  BRA    8CC8
....................        
....................          if(Ajuste>100) 
08BAA:  MOVF   x8A,W
08BAC:  SUBLW  64
08BAE:  BC    8BB2
....................             Ajuste=0; 
08BB0:  CLRF   x8A
....................        
....................          if(visual==1) 
08BB2:  BTFSS  x87.4
08BB4:  BRA    8C1E
....................          { 
....................             glcd_fillScreen(OFF); 
08BB6:  MOVLB  6
08BB8:  CLRF   x62
08BBA:  MOVLB  0
08BBC:  CALL   25C0
....................             strcpy(Menus.Letra,"Ajuste"); 
08BC0:  MOVLW  06
08BC2:  MOVWF  FEA
08BC4:  MOVLW  3A
08BC6:  MOVWF  FE9
08BC8:  MOVFF  FF2,65A
08BCC:  BCF    FF2.7
08BCE:  MOVLW  00
08BD0:  CALL   0EB8
08BD4:  TBLRD*-
08BD6:  TBLRD*+
08BD8:  MOVF   FF5,W
08BDA:  MOVWF  FEE
08BDC:  IORLW  00
08BDE:  BNZ   8BD6
08BE0:  MOVLB  6
08BE2:  BTFSC  x5A.7
08BE4:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2);       
08BE6:  MOVLW  06
08BE8:  MOVWF  x63
08BEA:  MOVLW  3A
08BEC:  MOVWF  x62
08BEE:  CLRF   x64
08BF0:  CLRF   x65
08BF2:  MOVLW  01
08BF4:  MOVWF  x66
08BF6:  MOVLW  02
08BF8:  MOVWF  x67
08BFA:  MOVLB  0
08BFC:  CALL   2BEE
....................             displayTemperatura(Ajuste,30,30,0,3); 
08C00:  MOVLB  6
08C02:  CLRF   x5D
08C04:  MOVFF  58A,65C
08C08:  MOVLW  1E
08C0A:  MOVWF  x5E
08C0C:  MOVWF  x5F
08C0E:  CLRF   x60
08C10:  MOVLW  03
08C12:  MOVWF  x61
08C14:  MOVLB  0
08C16:  CALL   4440
....................             visual=0; 
08C1A:  MOVLB  5
08C1C:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08C1E:  BSF    F92.4
08C20:  BTFSC  F80.4
08C22:  BRA    8C30
....................             DelayPuls();Ajuste++;visual=1; 
08C24:  MOVLB  0
08C26:  CALL   37DA
08C2A:  MOVLB  5
08C2C:  INCF   x8A,F
08C2E:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN)//Si oprime hacia abajo 
08C30:  BSF    F92.5
08C32:  BTFSC  F80.5
08C34:  BRA    8C46
....................          {   
....................             if(Ajuste>0){ 
08C36:  MOVF   x8A,F
08C38:  BZ    8C46
....................                DelayPuls();Ajuste--;visual=1;      
08C3A:  MOVLB  0
08C3C:  CALL   37DA
08C40:  MOVLB  5
08C42:  DECF   x8A,F
08C44:  BSF    x87.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT) 
08C46:  BSF    F96.0
08C48:  BTFSC  F84.0
08C4A:  BRA    8C4E
....................             visual=1; 
08C4C:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08C4E:  BSF    F96.1
08C50:  BTFSC  F84.1
08C52:  BRA    8CC8
....................             delay_ms(10); 
08C54:  MOVLW  0A
08C56:  MOVLB  6
08C58:  MOVWF  x63
08C5A:  MOVLB  0
08C5C:  CALL   1056
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08C60:  MOVLW  04
08C62:  MOVLB  6
08C64:  MOVWF  x5A
08C66:  MOVLW  AF
08C68:  MOVWF  x63
08C6A:  MOVLB  0
08C6C:  CALL   1056
08C70:  MOVLB  6
08C72:  DECFSZ x5A,F
08C74:  BRA    8C66
08C76:  MOVLW  64
08C78:  MOVLB  5
08C7A:  MOVWF  x97
08C7C:  MOVLB  6
08C7E:  CLRF   x62
08C80:  MOVLB  0
08C82:  CALL   25C0
08C86:  MOVLW  01
08C88:  MOVLB  5
08C8A:  MOVWF  x9B
08C8C:  BSF    x87.4
....................             write_eeprom(18,Ajuste);delay_ms(20); 
08C8E:  CLRF   FAA
08C90:  MOVLW  12
08C92:  MOVWF  FA9
08C94:  MOVFF  58A,FA8
08C98:  BCF    FA6.6
08C9A:  BCF    FA6.7
08C9C:  BSF    FA6.2
08C9E:  MOVF   FF2,W
08CA0:  MOVWF  00
08CA2:  BCF    FF2.7
08CA4:  MOVLB  F
08CA6:  MOVLW  55
08CA8:  MOVWF  FA7
08CAA:  MOVLW  AA
08CAC:  MOVWF  FA7
08CAE:  BSF    FA6.1
08CB0:  BTFSC  FA6.1
08CB2:  BRA    8CB0
08CB4:  BCF    FA6.2
08CB6:  MOVF   00,W
08CB8:  IORWF  FF2,F
08CBA:  MOVLW  14
08CBC:  MOVLB  6
08CBE:  MOVWF  x63
08CC0:  MOVLB  0
08CC2:  CALL   1056
08CC6:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==106){ // Menu de Ajuste de Ajuste - 
08CC8:  MOVF   x97,W
08CCA:  SUBLW  6A
08CCC:  BTFSS  FD8.2
08CCE:  BRA    8DEE
....................        
....................          if(Ajusten>100) 
08CD0:  MOVF   x8B,W
08CD2:  SUBLW  64
08CD4:  BC    8CD8
....................             Ajusten=0; 
08CD6:  CLRF   x8B
....................         
....................          if(visual==1){ 
08CD8:  BTFSS  x87.4
08CDA:  BRA    8D44
....................             glcd_fillScreen(OFF); 
08CDC:  MOVLB  6
08CDE:  CLRF   x62
08CE0:  MOVLB  0
08CE2:  CALL   25C0
....................             strcpy(Menus.Letra,"Ajusten"); 
08CE6:  MOVLW  06
08CE8:  MOVWF  FEA
08CEA:  MOVLW  3A
08CEC:  MOVWF  FE9
08CEE:  MOVFF  FF2,65A
08CF2:  BCF    FF2.7
08CF4:  MOVLW  00
08CF6:  CALL   0EDE
08CFA:  TBLRD*-
08CFC:  TBLRD*+
08CFE:  MOVF   FF5,W
08D00:  MOVWF  FEE
08D02:  IORLW  00
08D04:  BNZ   8CFC
08D06:  MOVLB  6
08D08:  BTFSC  x5A.7
08D0A:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
08D0C:  MOVLW  06
08D0E:  MOVWF  x63
08D10:  MOVLW  3A
08D12:  MOVWF  x62
08D14:  CLRF   x64
08D16:  CLRF   x65
08D18:  MOVLW  01
08D1A:  MOVWF  x66
08D1C:  MOVLW  02
08D1E:  MOVWF  x67
08D20:  MOVLB  0
08D22:  CALL   2BEE
....................             displayTemperatura(Ajusten,30,30,0,3); 
08D26:  MOVLB  6
08D28:  CLRF   x5D
08D2A:  MOVFF  58B,65C
08D2E:  MOVLW  1E
08D30:  MOVWF  x5E
08D32:  MOVWF  x5F
08D34:  CLRF   x60
08D36:  MOVLW  03
08D38:  MOVWF  x61
08D3A:  MOVLB  0
08D3C:  CALL   4440
....................             visual=0; 
08D40:  MOVLB  5
08D42:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08D44:  BSF    F92.4
08D46:  BTFSC  F80.4
08D48:  BRA    8D56
....................             DelayPuls();Ajusten++;visual=1; 
08D4A:  MOVLB  0
08D4C:  CALL   37DA
08D50:  MOVLB  5
08D52:  INCF   x8B,F
08D54:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08D56:  BSF    F92.5
08D58:  BTFSC  F80.5
08D5A:  BRA    8D6C
....................             if(Ajusten>0){ 
08D5C:  MOVF   x8B,F
08D5E:  BZ    8D6C
....................                DelayPuls();Ajusten--;visual=1;      
08D60:  MOVLB  0
08D62:  CALL   37DA
08D66:  MOVLB  5
08D68:  DECF   x8B,F
08D6A:  BSF    x87.4
....................             } 
....................          } 
....................                 
....................          if(RIGHT) 
08D6C:  BSF    F96.0
08D6E:  BTFSC  F84.0
08D70:  BRA    8D74
....................             visual=1; 
08D72:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08D74:  BSF    F96.1
08D76:  BTFSC  F84.1
08D78:  BRA    8DEE
....................             delay_ms(10); 
08D7A:  MOVLW  0A
08D7C:  MOVLB  6
08D7E:  MOVWF  x63
08D80:  MOVLB  0
08D82:  CALL   1056
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08D86:  MOVLW  04
08D88:  MOVLB  6
08D8A:  MOVWF  x5A
08D8C:  MOVLW  AF
08D8E:  MOVWF  x63
08D90:  MOVLB  0
08D92:  CALL   1056
08D96:  MOVLB  6
08D98:  DECFSZ x5A,F
08D9A:  BRA    8D8C
08D9C:  MOVLW  64
08D9E:  MOVLB  5
08DA0:  MOVWF  x97
08DA2:  MOVLB  6
08DA4:  CLRF   x62
08DA6:  MOVLB  0
08DA8:  CALL   25C0
08DAC:  MOVLW  01
08DAE:  MOVLB  5
08DB0:  MOVWF  x9B
08DB2:  BSF    x87.4
....................             write_eeprom(19,Ajusten);delay_ms(20); 
08DB4:  CLRF   FAA
08DB6:  MOVLW  13
08DB8:  MOVWF  FA9
08DBA:  MOVFF  58B,FA8
08DBE:  BCF    FA6.6
08DC0:  BCF    FA6.7
08DC2:  BSF    FA6.2
08DC4:  MOVF   FF2,W
08DC6:  MOVWF  00
08DC8:  BCF    FF2.7
08DCA:  MOVLB  F
08DCC:  MOVLW  55
08DCE:  MOVWF  FA7
08DD0:  MOVLW  AA
08DD2:  MOVWF  FA7
08DD4:  BSF    FA6.1
08DD6:  BTFSC  FA6.1
08DD8:  BRA    8DD6
08DDA:  BCF    FA6.2
08DDC:  MOVF   00,W
08DDE:  IORWF  FF2,F
08DE0:  MOVLW  14
08DE2:  MOVLB  6
08DE4:  MOVWF  x63
08DE6:  MOVLB  0
08DE8:  CALL   1056
08DEC:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==107){ // Menu de Ajuste de Media Movil 
08DEE:  MOVF   x97,W
08DF0:  SUBLW  6B
08DF2:  BTFSS  FD8.2
08DF4:  BRA    8F1E
....................        
....................          if(MediaMovil>80) 
08DF6:  MOVF   x8C,W
08DF8:  SUBLW  50
08DFA:  BC    8E02
....................             MediaMovil=10; 
08DFC:  MOVLW  0A
08DFE:  MOVWF  x8C
....................          else if(MediaMovil<10) 
08E00:  BRA    8E0C
08E02:  MOVF   x8C,W
08E04:  SUBLW  09
08E06:  BNC   8E0C
....................             MediaMovil=80; 
08E08:  MOVLW  50
08E0A:  MOVWF  x8C
....................        
....................          if(visual==1){ 
08E0C:  BTFSS  x87.4
08E0E:  BRA    8E78
....................             glcd_fillScreen(OFF); 
08E10:  MOVLB  6
08E12:  CLRF   x62
08E14:  MOVLB  0
08E16:  CALL   25C0
....................             strcpy(Menus.Letra,"Media"); 
08E1A:  MOVLW  06
08E1C:  MOVWF  FEA
08E1E:  MOVLW  3A
08E20:  MOVWF  FE9
08E22:  MOVFF  FF2,65A
08E26:  BCF    FF2.7
08E28:  MOVLW  00
08E2A:  CALL   0F04
08E2E:  TBLRD*-
08E30:  TBLRD*+
08E32:  MOVF   FF5,W
08E34:  MOVWF  FEE
08E36:  IORLW  00
08E38:  BNZ   8E30
08E3A:  MOVLB  6
08E3C:  BTFSC  x5A.7
08E3E:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
08E40:  MOVLW  06
08E42:  MOVWF  x63
08E44:  MOVLW  3A
08E46:  MOVWF  x62
08E48:  CLRF   x64
08E4A:  CLRF   x65
08E4C:  MOVLW  01
08E4E:  MOVWF  x66
08E50:  MOVLW  02
08E52:  MOVWF  x67
08E54:  MOVLB  0
08E56:  CALL   2BEE
....................             displayTemperatura(MediaMovil,30,30,0,3); 
08E5A:  MOVLB  6
08E5C:  CLRF   x5D
08E5E:  MOVFF  58C,65C
08E62:  MOVLW  1E
08E64:  MOVWF  x5E
08E66:  MOVWF  x5F
08E68:  CLRF   x60
08E6A:  MOVLW  03
08E6C:  MOVWF  x61
08E6E:  MOVLB  0
08E70:  CALL   4440
....................             visual=0; 
08E74:  MOVLB  5
08E76:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
08E78:  BSF    F92.4
08E7A:  BTFSC  F80.4
08E7C:  BRA    8E8A
....................             DelayPuls();MediaMovil++;visual=1; 
08E7E:  MOVLB  0
08E80:  CALL   37DA
08E84:  MOVLB  5
08E86:  INCF   x8C,F
08E88:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
08E8A:  BSF    F92.5
08E8C:  BTFSC  F80.5
08E8E:  BRA    8E9C
....................             DelayPuls();MediaMovil--;visual=1;      
08E90:  MOVLB  0
08E92:  CALL   37DA
08E96:  MOVLB  5
08E98:  DECF   x8C,F
08E9A:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT) 
08E9C:  BSF    F96.0
08E9E:  BTFSC  F84.0
08EA0:  BRA    8EA4
....................             visual=1; 
08EA2:  BSF    x87.4
....................                    
....................          if(LEFT){ 
08EA4:  BSF    F96.1
08EA6:  BTFSC  F84.1
08EA8:  BRA    8F1E
....................             delay_ms(10); 
08EAA:  MOVLW  0A
08EAC:  MOVLB  6
08EAE:  MOVWF  x63
08EB0:  MOVLB  0
08EB2:  CALL   1056
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
08EB6:  MOVLW  04
08EB8:  MOVLB  6
08EBA:  MOVWF  x5A
08EBC:  MOVLW  AF
08EBE:  MOVWF  x63
08EC0:  MOVLB  0
08EC2:  CALL   1056
08EC6:  MOVLB  6
08EC8:  DECFSZ x5A,F
08ECA:  BRA    8EBC
08ECC:  MOVLW  64
08ECE:  MOVLB  5
08ED0:  MOVWF  x97
08ED2:  MOVLB  6
08ED4:  CLRF   x62
08ED6:  MOVLB  0
08ED8:  CALL   25C0
08EDC:  MOVLW  01
08EDE:  MOVLB  5
08EE0:  MOVWF  x9B
08EE2:  BSF    x87.4
....................             write_eeprom(20,(int8)MediaMovil);delay_ms(20); 
08EE4:  CLRF   FAA
08EE6:  MOVLW  14
08EE8:  MOVWF  FA9
08EEA:  MOVFF  58C,FA8
08EEE:  BCF    FA6.6
08EF0:  BCF    FA6.7
08EF2:  BSF    FA6.2
08EF4:  MOVF   FF2,W
08EF6:  MOVWF  00
08EF8:  BCF    FF2.7
08EFA:  MOVLB  F
08EFC:  MOVLW  55
08EFE:  MOVWF  FA7
08F00:  MOVLW  AA
08F02:  MOVWF  FA7
08F04:  BSF    FA6.1
08F06:  BTFSC  FA6.1
08F08:  BRA    8F06
08F0A:  BCF    FA6.2
08F0C:  MOVF   00,W
08F0E:  IORWF  FF2,F
08F10:  MOVLW  14
08F12:  MOVLB  6
08F14:  MOVWF  x63
08F16:  MOVLB  0
08F18:  CALL   1056
08F1C:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==108){ // Menu de Ganancia Instrumentacion 
08F1E:  MOVF   x97,W
08F20:  SUBLW  6C
08F22:  BTFSS  FD8.2
08F24:  BRA    91E8
....................        
....................          if(Gain>50 || Gain<30) 
08F26:  MOVLB  6
08F28:  CLRF   x61
08F2A:  CLRF   x60
08F2C:  MOVLW  48
08F2E:  MOVWF  x5F
08F30:  MOVLW  84
08F32:  MOVWF  x5E
08F34:  MOVFF  5C1,665
08F38:  MOVFF  5C0,664
08F3C:  MOVFF  5BF,663
08F40:  MOVFF  5BE,662
08F44:  MOVLB  0
08F46:  CALL   1C46
08F4A:  BC    8F72
08F4C:  MOVFF  5C1,661
08F50:  MOVFF  5C0,660
08F54:  MOVFF  5BF,65F
08F58:  MOVFF  5BE,65E
08F5C:  MOVLB  6
08F5E:  CLRF   x65
08F60:  CLRF   x64
08F62:  MOVLW  70
08F64:  MOVWF  x63
08F66:  MOVLW  83
08F68:  MOVWF  x62
08F6A:  MOVLB  0
08F6C:  CALL   1C46
08F70:  BNC   8F82
....................             Gain=40; 
08F72:  MOVLB  5
08F74:  CLRF   xC1
08F76:  CLRF   xC0
08F78:  MOVLW  20
08F7A:  MOVWF  xBF
08F7C:  MOVLW  84
08F7E:  MOVWF  xBE
08F80:  MOVLB  0
....................        
....................          strcpy(Menus.Letra,"Ganancia"); 
08F82:  MOVLW  06
08F84:  MOVWF  FEA
08F86:  MOVLW  3A
08F88:  MOVWF  FE9
08F8A:  MOVFF  FF2,65A
08F8E:  BCF    FF2.7
08F90:  MOVLW  00
08F92:  CALL   0F28
08F96:  TBLRD*-
08F98:  TBLRD*+
08F9A:  MOVF   FF5,W
08F9C:  MOVWF  FEE
08F9E:  IORLW  00
08FA0:  BNZ   8F98
08FA2:  MOVLB  6
08FA4:  BTFSC  x5A.7
08FA6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2); 
08FA8:  MOVLW  06
08FAA:  MOVWF  x63
08FAC:  MOVLW  3A
08FAE:  MOVWF  x62
08FB0:  CLRF   x64
08FB2:  CLRF   x65
08FB4:  MOVLW  01
08FB6:  MOVWF  x66
08FB8:  MOVLW  02
08FBA:  MOVWF  x67
08FBC:  MOVLB  0
08FBE:  CALL   2BEE
....................          displayTT(Gain,30,30,2); 
08FC2:  MOVFF  5C1,65D
08FC6:  MOVFF  5C0,65C
08FCA:  MOVFF  5BF,65B
08FCE:  MOVFF  5BE,65A
08FD2:  MOVLW  1E
08FD4:  MOVLB  6
08FD6:  MOVWF  x5E
08FD8:  MOVWF  x5F
08FDA:  MOVLW  02
08FDC:  MOVWF  x60
08FDE:  MOVLB  0
08FE0:  CALL   585C
....................  
....................          if(UP){   
08FE4:  BSF    F92.4
08FE6:  BTFSC  F80.4
08FE8:  BRA    9028
....................             DelayPuls(); 
08FEA:  CALL   37DA
....................             Gain+=0.1; 
08FEE:  BCF    FD8.1
08FF0:  MOVFF  5C1,662
08FF4:  MOVFF  5C0,661
08FF8:  MOVFF  5BF,660
08FFC:  MOVFF  5BE,65F
09000:  MOVLW  CD
09002:  MOVLB  6
09004:  MOVWF  x66
09006:  MOVLW  CC
09008:  MOVWF  x65
0900A:  MOVLW  4C
0900C:  MOVWF  x64
0900E:  MOVLW  7B
09010:  MOVWF  x63
09012:  MOVLB  0
09014:  CALL   124A
09018:  MOVFF  03,5C1
0901C:  MOVFF  02,5C0
09020:  MOVFF  01,5BF
09024:  MOVFF  00,5BE
....................          } 
....................                 
....................          if(DOWN){   
09028:  BSF    F92.5
0902A:  BTFSC  F80.5
0902C:  BRA    906C
....................             DelayPuls(); 
0902E:  CALL   37DA
....................             Gain-=0.1; 
09032:  BSF    FD8.1
09034:  MOVFF  5C1,662
09038:  MOVFF  5C0,661
0903C:  MOVFF  5BF,660
09040:  MOVFF  5BE,65F
09044:  MOVLW  CD
09046:  MOVLB  6
09048:  MOVWF  x66
0904A:  MOVLW  CC
0904C:  MOVWF  x65
0904E:  MOVLW  4C
09050:  MOVWF  x64
09052:  MOVLW  7B
09054:  MOVWF  x63
09056:  MOVLB  0
09058:  CALL   124A
0905C:  MOVFF  03,5C1
09060:  MOVFF  02,5C0
09064:  MOVFF  01,5BF
09068:  MOVFF  00,5BE
....................          } 
....................                 
....................          if(RIGHT) 
0906C:  BSF    F96.0
0906E:  BTFSC  F84.0
09070:  BRA    9078
....................             visual=1; 
09072:  MOVLB  5
09074:  BSF    x87.4
09076:  MOVLB  0
....................                    
....................          if(LEFT){ 
09078:  BSF    F96.1
0907A:  BTFSC  F84.1
0907C:  BRA    91E6
....................             delay_ms(10); 
0907E:  MOVLW  0A
09080:  MOVLB  6
09082:  MOVWF  x63
09084:  MOVLB  0
09086:  CALL   1056
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0908A:  MOVLW  04
0908C:  MOVLB  6
0908E:  MOVWF  x5A
09090:  MOVLW  AF
09092:  MOVWF  x63
09094:  MOVLB  0
09096:  CALL   1056
0909A:  MOVLB  6
0909C:  DECFSZ x5A,F
0909E:  BRA    9090
090A0:  MOVLW  64
090A2:  MOVLB  5
090A4:  MOVWF  x97
090A6:  MOVLB  6
090A8:  CLRF   x62
090AA:  MOVLB  0
090AC:  CALL   25C0
090B0:  MOVLW  01
090B2:  MOVLB  5
090B4:  MOVWF  x9B
090B6:  BSF    x87.4
....................             write_eeprom(21,(int8)Gain); 
090B8:  MOVFF  5C1,65D
090BC:  MOVFF  5C0,65C
090C0:  MOVFF  5BF,65B
090C4:  MOVFF  5BE,65A
090C8:  MOVLB  0
090CA:  CALL   4346
090CE:  MOVFF  01,65A
090D2:  CLRF   FAA
090D4:  MOVLW  15
090D6:  MOVWF  FA9
090D8:  MOVFF  65A,FA8
090DC:  BCF    FA6.6
090DE:  BCF    FA6.7
090E0:  BSF    FA6.2
090E2:  MOVF   FF2,W
090E4:  MOVWF  00
090E6:  BCF    FF2.7
090E8:  MOVLB  F
090EA:  MOVLW  55
090EC:  MOVWF  FA7
090EE:  MOVLW  AA
090F0:  MOVWF  FA7
090F2:  BSF    FA6.1
090F4:  BTFSC  FA6.1
090F6:  BRA    90F4
090F8:  BCF    FA6.2
090FA:  MOVF   00,W
090FC:  IORWF  FF2,F
....................             delay_ms(10); 
090FE:  MOVLW  0A
09100:  MOVLB  6
09102:  MOVWF  x63
09104:  MOVLB  0
09106:  CALL   1056
....................             Temporal=Gain-((int8)Gain); 
0910A:  MOVFF  5C1,65D
0910E:  MOVFF  5C0,65C
09112:  MOVFF  5BF,65B
09116:  MOVFF  5BE,65A
0911A:  CALL   4346
0911E:  MOVLB  6
09120:  CLRF   x61
09122:  MOVFF  01,660
09126:  MOVLB  0
09128:  CALL   10B6
0912C:  BSF    FD8.1
0912E:  MOVFF  5C1,662
09132:  MOVFF  5C0,661
09136:  MOVFF  5BF,660
0913A:  MOVFF  5BE,65F
0913E:  MOVFF  03,666
09142:  MOVFF  02,665
09146:  MOVFF  01,664
0914A:  MOVFF  00,663
0914E:  CALL   124A
09152:  MOVFF  03,62D
09156:  MOVFF  02,62C
0915A:  MOVFF  01,62B
0915E:  MOVFF  00,62A
....................             Temporal=Temporal*10; 
09162:  MOVFF  62D,67D
09166:  MOVFF  62C,67C
0916A:  MOVFF  62B,67B
0916E:  MOVFF  62A,67A
09172:  MOVLB  6
09174:  CLRF   x81
09176:  CLRF   x80
09178:  MOVLW  20
0917A:  MOVWF  x7F
0917C:  MOVLW  82
0917E:  MOVWF  x7E
09180:  MOVLB  0
09182:  CALL   2D40
09186:  MOVFF  03,62D
0918A:  MOVFF  02,62C
0918E:  MOVFF  01,62B
09192:  MOVFF  00,62A
....................             write_eeprom(22,(int8)Temporal); 
09196:  MOVFF  62D,65D
0919A:  MOVFF  62C,65C
0919E:  MOVFF  62B,65B
091A2:  MOVFF  62A,65A
091A6:  CALL   4346
091AA:  MOVFF  01,65A
091AE:  CLRF   FAA
091B0:  MOVLW  16
091B2:  MOVWF  FA9
091B4:  MOVFF  65A,FA8
091B8:  BCF    FA6.6
091BA:  BCF    FA6.7
091BC:  BSF    FA6.2
091BE:  MOVF   FF2,W
091C0:  MOVWF  00
091C2:  BCF    FF2.7
091C4:  MOVLB  F
091C6:  MOVLW  55
091C8:  MOVWF  FA7
091CA:  MOVLW  AA
091CC:  MOVWF  FA7
091CE:  BSF    FA6.1
091D0:  BTFSC  FA6.1
091D2:  BRA    91D0
091D4:  BCF    FA6.2
091D6:  MOVF   00,W
091D8:  IORWF  FF2,F
....................             delay_ms(10); 
091DA:  MOVLW  0A
091DC:  MOVLB  6
091DE:  MOVWF  x63
091E0:  MOVLB  0
091E2:  CALL   1056
091E6:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==109){ // Menu de Ajuste R1 
091E8:  MOVF   x97,W
091EA:  SUBLW  6D
091EC:  BTFSS  FD8.2
091EE:  BRA    9460
....................        
....................          if(R1>6400 || R1<6000) 
091F0:  MOVLB  6
091F2:  CLRF   x61
091F4:  CLRF   x60
091F6:  MOVLW  48
091F8:  MOVWF  x5F
091FA:  MOVLW  8B
091FC:  MOVWF  x5E
091FE:  MOVFF  5E5,665
09202:  MOVFF  5E4,664
09206:  MOVFF  5E3,663
0920A:  MOVFF  5E2,662
0920E:  MOVLB  0
09210:  CALL   1C46
09214:  BC    923E
09216:  MOVFF  5E5,661
0921A:  MOVFF  5E4,660
0921E:  MOVFF  5E3,65F
09222:  MOVFF  5E2,65E
09226:  MOVLB  6
09228:  CLRF   x65
0922A:  MOVLW  80
0922C:  MOVWF  x64
0922E:  MOVLW  3B
09230:  MOVWF  x63
09232:  MOVLW  8B
09234:  MOVWF  x62
09236:  MOVLB  0
09238:  CALL   1C46
0923C:  BNC   9250
....................             R1=6200; 
0923E:  MOVLB  5
09240:  CLRF   xE5
09242:  MOVLW  C0
09244:  MOVWF  xE4
09246:  MOVLW  41
09248:  MOVWF  xE3
0924A:  MOVLW  8B
0924C:  MOVWF  xE2
0924E:  MOVLB  0
....................  
....................          strcpy(Menus.Letra,"R51"); 
09250:  MOVLW  06
09252:  MOVWF  FEA
09254:  MOVLW  3A
09256:  MOVWF  FE9
09258:  MOVFF  FF2,65A
0925C:  BCF    FF2.7
0925E:  MOVLW  00
09260:  CALL   0F50
09264:  TBLRD*-
09266:  TBLRD*+
09268:  MOVF   FF5,W
0926A:  MOVWF  FEE
0926C:  IORLW  00
0926E:  BNZ   9266
09270:  MOVLB  6
09272:  BTFSC  x5A.7
09274:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2);    
09276:  MOVLW  06
09278:  MOVWF  x63
0927A:  MOVLW  3A
0927C:  MOVWF  x62
0927E:  CLRF   x64
09280:  CLRF   x65
09282:  MOVLW  01
09284:  MOVWF  x66
09286:  MOVLW  02
09288:  MOVWF  x67
0928A:  MOVLB  0
0928C:  CALL   2BEE
....................          displayTemperatura(R1,30,30,0,3); 
09290:  MOVFF  5E5,65D
09294:  MOVFF  5E4,65C
09298:  MOVFF  5E3,65B
0929C:  MOVFF  5E2,65A
092A0:  CALL   4346
092A4:  MOVFF  02,65B
092A8:  MOVFF  01,65A
092AC:  MOVFF  02,65D
092B0:  MOVFF  01,65C
092B4:  MOVLW  1E
092B6:  MOVLB  6
092B8:  MOVWF  x5E
092BA:  MOVWF  x5F
092BC:  CLRF   x60
092BE:  MOVLW  03
092C0:  MOVWF  x61
092C2:  MOVLB  0
092C4:  CALL   4440
....................  
....................          if(UP){   
092C8:  BSF    F92.4
092CA:  BTFSC  F80.4
092CC:  BRA    9310
....................             DelayPuls(); 
092CE:  CALL   37DA
....................             R1+=1.0; 
092D2:  BCF    FD8.1
092D4:  MOVFF  5E5,662
092D8:  MOVFF  5E4,661
092DC:  MOVFF  5E3,660
092E0:  MOVFF  5E2,65F
092E4:  MOVLB  6
092E6:  CLRF   x66
092E8:  CLRF   x65
092EA:  CLRF   x64
092EC:  MOVLW  7F
092EE:  MOVWF  x63
092F0:  MOVLB  0
092F2:  CALL   124A
092F6:  MOVFF  03,5E5
092FA:  MOVFF  02,5E4
092FE:  MOVFF  01,5E3
09302:  MOVFF  00,5E2
....................             glcd_fillscreen(OFF); 
09306:  MOVLB  6
09308:  CLRF   x62
0930A:  MOVLB  0
0930C:  CALL   25C0
....................          } 
....................                 
....................          if(DOWN){   
09310:  BSF    F92.5
09312:  BTFSC  F80.5
09314:  BRA    9358
....................             DelayPuls(); 
09316:  CALL   37DA
....................             R1-=1.0; 
0931A:  BSF    FD8.1
0931C:  MOVFF  5E5,662
09320:  MOVFF  5E4,661
09324:  MOVFF  5E3,660
09328:  MOVFF  5E2,65F
0932C:  MOVLB  6
0932E:  CLRF   x66
09330:  CLRF   x65
09332:  CLRF   x64
09334:  MOVLW  7F
09336:  MOVWF  x63
09338:  MOVLB  0
0933A:  CALL   124A
0933E:  MOVFF  03,5E5
09342:  MOVFF  02,5E4
09346:  MOVFF  01,5E3
0934A:  MOVFF  00,5E2
....................             glcd_fillscreen(OFF); 
0934E:  MOVLB  6
09350:  CLRF   x62
09352:  MOVLB  0
09354:  CALL   25C0
....................          } 
....................                 
....................          if(RIGHT){   
09358:  BSF    F96.0
0935A:  BTFSC  F84.0
0935C:  BRA    936C
....................             visual=1; 
0935E:  MOVLB  5
09360:  BSF    x87.4
....................             glcd_fillscreen(OFF); 
09362:  MOVLB  6
09364:  CLRF   x62
09366:  MOVLB  0
09368:  CALL   25C0
....................          }  
....................                    
....................          if(LEFT){ 
0936C:  BSF    F96.1
0936E:  BTFSC  F84.1
09370:  BRA    945E
....................             delay_ms(10); 
09372:  MOVLW  0A
09374:  MOVLB  6
09376:  MOVWF  x63
09378:  MOVLB  0
0937A:  CALL   1056
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
0937E:  MOVLW  04
09380:  MOVLB  6
09382:  MOVWF  x5A
09384:  MOVLW  AF
09386:  MOVWF  x63
09388:  MOVLB  0
0938A:  CALL   1056
0938E:  MOVLB  6
09390:  DECFSZ x5A,F
09392:  BRA    9384
09394:  MOVLW  64
09396:  MOVLB  5
09398:  MOVWF  x97
0939A:  MOVLB  6
0939C:  CLRF   x62
0939E:  MOVLB  0
093A0:  CALL   25C0
093A4:  MOVLW  01
093A6:  MOVLB  5
093A8:  MOVWF  x9B
093AA:  BSF    x87.4
....................             write_eeprom(23,make8((int16)R1,0)); 
093AC:  MOVFF  5E5,65D
093B0:  MOVFF  5E4,65C
093B4:  MOVFF  5E3,65B
093B8:  MOVFF  5E2,65A
093BC:  MOVLB  0
093BE:  CALL   4346
093C2:  MOVFF  02,65B
093C6:  MOVFF  01,65A
093CA:  MOVFF  65A,65C
093CE:  CLRF   FAA
093D0:  MOVLW  17
093D2:  MOVWF  FA9
093D4:  MOVFF  65C,FA8
093D8:  BCF    FA6.6
093DA:  BCF    FA6.7
093DC:  BSF    FA6.2
093DE:  MOVF   FF2,W
093E0:  MOVWF  00
093E2:  BCF    FF2.7
093E4:  MOVLB  F
093E6:  MOVLW  55
093E8:  MOVWF  FA7
093EA:  MOVLW  AA
093EC:  MOVWF  FA7
093EE:  BSF    FA6.1
093F0:  BTFSC  FA6.1
093F2:  BRA    93F0
093F4:  BCF    FA6.2
093F6:  MOVF   00,W
093F8:  IORWF  FF2,F
....................             delay_ms(10); 
093FA:  MOVLW  0A
093FC:  MOVLB  6
093FE:  MOVWF  x63
09400:  MOVLB  0
09402:  CALL   1056
....................             write_eeprom(24,make8((int16)R1,1)); 
09406:  MOVFF  5E5,65D
0940A:  MOVFF  5E4,65C
0940E:  MOVFF  5E3,65B
09412:  MOVFF  5E2,65A
09416:  CALL   4346
0941A:  MOVFF  02,65B
0941E:  MOVFF  01,65A
09422:  MOVFF  65B,65C
09426:  CLRF   FAA
09428:  MOVLW  18
0942A:  MOVWF  FA9
0942C:  MOVFF  65C,FA8
09430:  BCF    FA6.6
09432:  BCF    FA6.7
09434:  BSF    FA6.2
09436:  MOVF   FF2,W
09438:  MOVWF  00
0943A:  BCF    FF2.7
0943C:  MOVLB  F
0943E:  MOVLW  55
09440:  MOVWF  FA7
09442:  MOVLW  AA
09444:  MOVWF  FA7
09446:  BSF    FA6.1
09448:  BTFSC  FA6.1
0944A:  BRA    9448
0944C:  BCF    FA6.2
0944E:  MOVF   00,W
09450:  IORWF  FF2,F
....................             delay_ms(10); 
09452:  MOVLW  0A
09454:  MOVLB  6
09456:  MOVWF  x63
09458:  MOVLB  0
0945A:  CALL   1056
0945E:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==110){ // Menu de Ajuste RPT100 
09460:  MOVF   x97,W
09462:  SUBLW  6E
09464:  BTFSS  FD8.2
09466:  BRA    971C
....................        
....................          if(RPT100>2.0) 
09468:  MOVLB  6
0946A:  CLRF   x61
0946C:  CLRF   x60
0946E:  CLRF   x5F
09470:  MOVLW  80
09472:  MOVWF  x5E
09474:  MOVFF  5C5,665
09478:  MOVFF  5C4,664
0947C:  MOVFF  5C3,663
09480:  MOVFF  5C2,662
09484:  MOVLB  0
09486:  CALL   1C46
0948A:  BNC   949A
....................             RPT100=0.5; 
0948C:  MOVLB  5
0948E:  CLRF   xC5
09490:  CLRF   xC4
09492:  CLRF   xC3
09494:  MOVLW  7E
09496:  MOVWF  xC2
09498:  MOVLB  0
....................  
....................          strcpy(Menus.Letra,"RPT100"); 
0949A:  MOVLW  06
0949C:  MOVWF  FEA
0949E:  MOVLW  3A
094A0:  MOVWF  FE9
094A2:  MOVFF  FF2,65A
094A6:  BCF    FF2.7
094A8:  MOVLW  00
094AA:  CALL   0F72
094AE:  TBLRD*-
094B0:  TBLRD*+
094B2:  MOVF   FF5,W
094B4:  MOVWF  FEE
094B6:  IORLW  00
094B8:  BNZ   94B0
094BA:  MOVLB  6
094BC:  BTFSC  x5A.7
094BE:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,0,1,2);    
094C0:  MOVLW  06
094C2:  MOVWF  x63
094C4:  MOVLW  3A
094C6:  MOVWF  x62
094C8:  CLRF   x64
094CA:  CLRF   x65
094CC:  MOVLW  01
094CE:  MOVWF  x66
094D0:  MOVLW  02
094D2:  MOVWF  x67
094D4:  MOVLB  0
094D6:  CALL   2BEE
....................          displayTT(RPT100,30,30,2); 
094DA:  MOVFF  5C5,65D
094DE:  MOVFF  5C4,65C
094E2:  MOVFF  5C3,65B
094E6:  MOVFF  5C2,65A
094EA:  MOVLW  1E
094EC:  MOVLB  6
094EE:  MOVWF  x5E
094F0:  MOVWF  x5F
094F2:  MOVLW  02
094F4:  MOVWF  x60
094F6:  MOVLB  0
094F8:  CALL   585C
....................  
....................          if(UP){   
094FC:  BSF    F92.4
094FE:  BTFSC  F80.4
09500:  BRA    954A
....................             DelayPuls(); 
09502:  CALL   37DA
....................             RPT100+=0.1; 
09506:  BCF    FD8.1
09508:  MOVFF  5C5,662
0950C:  MOVFF  5C4,661
09510:  MOVFF  5C3,660
09514:  MOVFF  5C2,65F
09518:  MOVLW  CD
0951A:  MOVLB  6
0951C:  MOVWF  x66
0951E:  MOVLW  CC
09520:  MOVWF  x65
09522:  MOVLW  4C
09524:  MOVWF  x64
09526:  MOVLW  7B
09528:  MOVWF  x63
0952A:  MOVLB  0
0952C:  CALL   124A
09530:  MOVFF  03,5C5
09534:  MOVFF  02,5C4
09538:  MOVFF  01,5C3
0953C:  MOVFF  00,5C2
....................             glcd_fillscreen(OFF); 
09540:  MOVLB  6
09542:  CLRF   x62
09544:  MOVLB  0
09546:  CALL   25C0
....................          } 
....................                 
....................          if(DOWN){   
0954A:  BSF    F92.5
0954C:  BTFSC  F80.5
0954E:  BRA    9598
....................             DelayPuls(); 
09550:  CALL   37DA
....................             RPT100-=0.1; 
09554:  BSF    FD8.1
09556:  MOVFF  5C5,662
0955A:  MOVFF  5C4,661
0955E:  MOVFF  5C3,660
09562:  MOVFF  5C2,65F
09566:  MOVLW  CD
09568:  MOVLB  6
0956A:  MOVWF  x66
0956C:  MOVLW  CC
0956E:  MOVWF  x65
09570:  MOVLW  4C
09572:  MOVWF  x64
09574:  MOVLW  7B
09576:  MOVWF  x63
09578:  MOVLB  0
0957A:  CALL   124A
0957E:  MOVFF  03,5C5
09582:  MOVFF  02,5C4
09586:  MOVFF  01,5C3
0958A:  MOVFF  00,5C2
....................             glcd_fillscreen(OFF); 
0958E:  MOVLB  6
09590:  CLRF   x62
09592:  MOVLB  0
09594:  CALL   25C0
....................          } 
....................                 
....................          if(RIGHT){   
09598:  BSF    F96.0
0959A:  BTFSC  F84.0
0959C:  BRA    95AC
....................             visual=1; 
0959E:  MOVLB  5
095A0:  BSF    x87.4
....................             glcd_fillscreen(OFF); 
095A2:  MOVLB  6
095A4:  CLRF   x62
095A6:  MOVLB  0
095A8:  CALL   25C0
....................          }  
....................                    
....................          if(LEFT){ 
095AC:  BSF    F96.1
095AE:  BTFSC  F84.1
095B0:  BRA    971A
....................             delay_ms(10); 
095B2:  MOVLW  0A
095B4:  MOVLB  6
095B6:  MOVWF  x63
095B8:  MOVLB  0
095BA:  CALL   1056
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
095BE:  MOVLW  04
095C0:  MOVLB  6
095C2:  MOVWF  x5A
095C4:  MOVLW  AF
095C6:  MOVWF  x63
095C8:  MOVLB  0
095CA:  CALL   1056
095CE:  MOVLB  6
095D0:  DECFSZ x5A,F
095D2:  BRA    95C4
095D4:  MOVLW  64
095D6:  MOVLB  5
095D8:  MOVWF  x97
095DA:  MOVLB  6
095DC:  CLRF   x62
095DE:  MOVLB  0
095E0:  CALL   25C0
095E4:  MOVLW  01
095E6:  MOVLB  5
095E8:  MOVWF  x9B
095EA:  BSF    x87.4
....................             write_eeprom(25,(int8)RPT100); 
095EC:  MOVFF  5C5,65D
095F0:  MOVFF  5C4,65C
095F4:  MOVFF  5C3,65B
095F8:  MOVFF  5C2,65A
095FC:  MOVLB  0
095FE:  CALL   4346
09602:  MOVFF  01,65A
09606:  CLRF   FAA
09608:  MOVLW  19
0960A:  MOVWF  FA9
0960C:  MOVFF  65A,FA8
09610:  BCF    FA6.6
09612:  BCF    FA6.7
09614:  BSF    FA6.2
09616:  MOVF   FF2,W
09618:  MOVWF  00
0961A:  BCF    FF2.7
0961C:  MOVLB  F
0961E:  MOVLW  55
09620:  MOVWF  FA7
09622:  MOVLW  AA
09624:  MOVWF  FA7
09626:  BSF    FA6.1
09628:  BTFSC  FA6.1
0962A:  BRA    9628
0962C:  BCF    FA6.2
0962E:  MOVF   00,W
09630:  IORWF  FF2,F
....................             delay_ms(10); 
09632:  MOVLW  0A
09634:  MOVLB  6
09636:  MOVWF  x63
09638:  MOVLB  0
0963A:  CALL   1056
....................             Temporal=RPT100-((int8)RPT100); 
0963E:  MOVFF  5C5,65D
09642:  MOVFF  5C4,65C
09646:  MOVFF  5C3,65B
0964A:  MOVFF  5C2,65A
0964E:  CALL   4346
09652:  MOVLB  6
09654:  CLRF   x61
09656:  MOVFF  01,660
0965A:  MOVLB  0
0965C:  CALL   10B6
09660:  BSF    FD8.1
09662:  MOVFF  5C5,662
09666:  MOVFF  5C4,661
0966A:  MOVFF  5C3,660
0966E:  MOVFF  5C2,65F
09672:  MOVFF  03,666
09676:  MOVFF  02,665
0967A:  MOVFF  01,664
0967E:  MOVFF  00,663
09682:  CALL   124A
09686:  MOVFF  03,62D
0968A:  MOVFF  02,62C
0968E:  MOVFF  01,62B
09692:  MOVFF  00,62A
....................             Temporal=Temporal*10; 
09696:  MOVFF  62D,67D
0969A:  MOVFF  62C,67C
0969E:  MOVFF  62B,67B
096A2:  MOVFF  62A,67A
096A6:  MOVLB  6
096A8:  CLRF   x81
096AA:  CLRF   x80
096AC:  MOVLW  20
096AE:  MOVWF  x7F
096B0:  MOVLW  82
096B2:  MOVWF  x7E
096B4:  MOVLB  0
096B6:  CALL   2D40
096BA:  MOVFF  03,62D
096BE:  MOVFF  02,62C
096C2:  MOVFF  01,62B
096C6:  MOVFF  00,62A
....................             write_eeprom(26,(int8)Temporal); 
096CA:  MOVFF  62D,65D
096CE:  MOVFF  62C,65C
096D2:  MOVFF  62B,65B
096D6:  MOVFF  62A,65A
096DA:  CALL   4346
096DE:  MOVFF  01,65A
096E2:  CLRF   FAA
096E4:  MOVLW  1A
096E6:  MOVWF  FA9
096E8:  MOVFF  65A,FA8
096EC:  BCF    FA6.6
096EE:  BCF    FA6.7
096F0:  BSF    FA6.2
096F2:  MOVF   FF2,W
096F4:  MOVWF  00
096F6:  BCF    FF2.7
096F8:  MOVLB  F
096FA:  MOVLW  55
096FC:  MOVWF  FA7
096FE:  MOVLW  AA
09700:  MOVWF  FA7
09702:  BSF    FA6.1
09704:  BTFSC  FA6.1
09706:  BRA    9704
09708:  BCF    FA6.2
0970A:  MOVF   00,W
0970C:  IORWF  FF2,F
....................             delay_ms(10); 
0970E:  MOVLW  0A
09710:  MOVLB  6
09712:  MOVWF  x63
09714:  MOVLB  0
09716:  CALL   1056
0971A:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------       
....................       if(Menu==111){ // Menu de Ajuste de Entrada Analoga de Temperatura 
0971C:  MOVF   x97,W
0971E:  SUBLW  6F
09720:  BTFSS  FD8.2
09722:  BRA    9838
....................        
....................          if(visual==1){ 
09724:  BTFSS  x87.4
09726:  BRA    9790
....................             glcd_fillScreen(OFF); 
09728:  MOVLB  6
0972A:  CLRF   x62
0972C:  MOVLB  0
0972E:  CALL   25C0
....................             strcpy(Menus.Letra,"In Tem"); 
09732:  MOVLW  06
09734:  MOVWF  FEA
09736:  MOVLW  3A
09738:  MOVWF  FE9
0973A:  MOVFF  FF2,65A
0973E:  BCF    FF2.7
09740:  MOVLW  00
09742:  CALL   0F98
09746:  TBLRD*-
09748:  TBLRD*+
0974A:  MOVF   FF5,W
0974C:  MOVWF  FEE
0974E:  IORLW  00
09750:  BNZ   9748
09752:  MOVLB  6
09754:  BTFSC  x5A.7
09756:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,0,1,2); 
09758:  MOVLW  06
0975A:  MOVWF  x63
0975C:  MOVLW  3A
0975E:  MOVWF  x62
09760:  CLRF   x64
09762:  CLRF   x65
09764:  MOVLW  01
09766:  MOVWF  x66
09768:  MOVLW  02
0976A:  MOVWF  x67
0976C:  MOVLB  0
0976E:  CALL   2BEE
....................             displayTemperatura(Source,30,30,0,3); 
09772:  MOVLB  6
09774:  CLRF   x5D
09776:  MOVFF  596,65C
0977A:  MOVLW  1E
0977C:  MOVWF  x5E
0977E:  MOVWF  x5F
09780:  CLRF   x60
09782:  MOVLW  03
09784:  MOVWF  x61
09786:  MOVLB  0
09788:  CALL   4440
....................             visual=0; 
0978C:  MOVLB  5
0978E:  BCF    x87.4
....................          } 
....................        
....................          if(UP){   
09790:  BSF    F92.4
09792:  BTFSC  F80.4
09794:  BRA    97A4
....................             DelayPuls();Source=1;visual=1; 
09796:  MOVLB  0
09798:  CALL   37DA
0979C:  MOVLW  01
0979E:  MOVLB  5
097A0:  MOVWF  x96
097A2:  BSF    x87.4
....................          } 
....................                 
....................          if(DOWN){   
097A4:  BSF    F92.5
097A6:  BTFSC  F80.5
097A8:  BRA    97B6
....................             DelayPuls();Source=0;visual=1;      
097AA:  MOVLB  0
097AC:  CALL   37DA
097B0:  MOVLB  5
097B2:  CLRF   x96
097B4:  BSF    x87.4
....................          } 
....................                 
....................          if(RIGHT) 
097B6:  BSF    F96.0
097B8:  BTFSC  F84.0
097BA:  BRA    97BE
....................             visual=1; 
097BC:  BSF    x87.4
....................                    
....................          if(LEFT){ 
097BE:  BSF    F96.1
097C0:  BTFSC  F84.1
097C2:  BRA    9838
....................             delay_ms(10); 
097C4:  MOVLW  0A
097C6:  MOVLB  6
097C8:  MOVWF  x63
097CA:  MOVLB  0
097CC:  CALL   1056
....................             delay_ms(700);Menu=100;glcd_fillscreen(OFF);Opcion=1;visual=1; 
097D0:  MOVLW  04
097D2:  MOVLB  6
097D4:  MOVWF  x5A
097D6:  MOVLW  AF
097D8:  MOVWF  x63
097DA:  MOVLB  0
097DC:  CALL   1056
097E0:  MOVLB  6
097E2:  DECFSZ x5A,F
097E4:  BRA    97D6
097E6:  MOVLW  64
097E8:  MOVLB  5
097EA:  MOVWF  x97
097EC:  MOVLB  6
097EE:  CLRF   x62
097F0:  MOVLB  0
097F2:  CALL   25C0
097F6:  MOVLW  01
097F8:  MOVLB  5
097FA:  MOVWF  x9B
097FC:  BSF    x87.4
....................             write_eeprom(27,Source);delay_ms(20); 
097FE:  CLRF   FAA
09800:  MOVLW  1B
09802:  MOVWF  FA9
09804:  MOVFF  596,FA8
09808:  BCF    FA6.6
0980A:  BCF    FA6.7
0980C:  BSF    FA6.2
0980E:  MOVF   FF2,W
09810:  MOVWF  00
09812:  BCF    FF2.7
09814:  MOVLB  F
09816:  MOVLW  55
09818:  MOVWF  FA7
0981A:  MOVLW  AA
0981C:  MOVWF  FA7
0981E:  BSF    FA6.1
09820:  BTFSC  FA6.1
09822:  BRA    9820
09824:  BCF    FA6.2
09826:  MOVF   00,W
09828:  IORWF  FF2,F
0982A:  MOVLW  14
0982C:  MOVLB  6
0982E:  MOVWF  x63
09830:  MOVLB  0
09832:  CALL   1056
09836:  MOVLB  5
....................          } 
....................      } 
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................  
....................  
....................       if(tiemporeset>=60 && Menu!=0) 
09838:  MOVF   x95,W
0983A:  SUBLW  3B
0983C:  BC    9852
0983E:  MOVF   x97,F
09840:  BZ    9852
....................       { 
....................          glcd_init(ON); 
09842:  MOVLW  01
09844:  MOVLB  6
09846:  MOVWF  x5A
09848:  MOVLB  0
0984A:  CALL   26D2
....................          tiemporeset=0; 
0984E:  MOVLB  5
09850:  CLRF   x95
....................       }  
....................  
....................    } 
09852:  GOTO   5E34
.................... } 
09856:  SLEEP 

Configuration Fuses:
   Word  1: 0200   HS NOIESO NOFCMEN
   Word  2: 1E1F   BROWNOUT NOWDT BORV20 NOPUT WDT32768
   Word  3: 0000   NOPBADEN NOLPT1OSC NOMCLR
   Word  4: 00B0   NOSTVREN NODEBUG NOLVP NOXINST BBSIZ4K
   Word  5: C03F   NOPROTECT NOCPD NOCPB
   Word  6: E03F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 403F   NOEBTR NOEBTRB
