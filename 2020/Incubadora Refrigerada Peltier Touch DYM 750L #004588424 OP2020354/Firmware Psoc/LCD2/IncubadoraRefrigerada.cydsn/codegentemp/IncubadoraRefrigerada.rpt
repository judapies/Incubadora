Loading plugins phase: Elapsed time ==> 0s.118ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\IncubadoraRefrigerada.cyprj -d CY8C5888AXI-LP096 -s D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_10 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.052ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.107ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  IncubadoraRefrigerada.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\IncubadoraRefrigerada.cyprj -dcpsoc3 IncubadoraRefrigerada.v -verilog
======================================================================

======================================================================
Compiling:  IncubadoraRefrigerada.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\IncubadoraRefrigerada.cyprj -dcpsoc3 IncubadoraRefrigerada.v -verilog
======================================================================

======================================================================
Compiling:  IncubadoraRefrigerada.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\IncubadoraRefrigerada.cyprj -dcpsoc3 -verilog IncubadoraRefrigerada.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Fri Dec 04 09:08:23 2020


======================================================================
Compiling:  IncubadoraRefrigerada.v
Program  :   vpp
Options  :    -yv2 -q10 IncubadoraRefrigerada.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Fri Dec 04 09:08:23 2020

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Timer_v2_80\B_Timer_v2_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'IncubadoraRefrigerada.ctl'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
IncubadoraRefrigerada.v (line 919, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Timer_v2_80\B_Timer_v2_80.v (line 368, col 46):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Timer_v2_80\B_Timer_v2_80.v (line 374, col 62):  Note: Substituting module 'add_vv_vv' for '+'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  IncubadoraRefrigerada.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\IncubadoraRefrigerada.cyprj -dcpsoc3 -verilog IncubadoraRefrigerada.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Fri Dec 04 09:08:23 2020

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\codegentemp\IncubadoraRefrigerada.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\codegentemp\IncubadoraRefrigerada.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Timer_v2_80\B_Timer_v2_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  IncubadoraRefrigerada.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\IncubadoraRefrigerada.cyprj -dcpsoc3 -verilog IncubadoraRefrigerada.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Fri Dec 04 09:08:24 2020

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\codegentemp\IncubadoraRefrigerada.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\codegentemp\IncubadoraRefrigerada.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_Timer_v2_80\B_Timer_v2_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	Net_682
	\UART_1:BUART:reset_sr\
	Net_654
	\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_1\
	\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_0\
	\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\
	\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	Net_649
	\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_1\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_1\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:lt_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:gt_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:lti_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:gti_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_0\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:xeq\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:xlt\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:xlte\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:xgt\
	\UART_1:BUART:sRX:MODULE_6:g1:a0:xgte\
	\UART_1:BUART:sRX:MODULE_6:lt\
	\UART_1:BUART:sRX:MODULE_6:eq\
	\UART_1:BUART:sRX:MODULE_6:gt\
	\UART_1:BUART:sRX:MODULE_6:gte\
	\UART_1:BUART:sRX:MODULE_6:lte\
	\ADC_SAR:SAR:Net_221\
	\ADC_SAR:SAR:Net_383\
	\ADC_SAR:bSAR_SEQ:sw_soc\
	\ADC_SAR:soc_out\
	\ADC_SAR:Net_3905\
	\ADC_SAR:Net_3867\
	\ADC_SAR:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_SAR:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_SAR:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_SAR:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_SAR:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_SAR:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_SAR:MODULE_1:g1:a0:xneq\
	\ADC_SAR:MODULE_1:g1:a0:xlt\
	\ADC_SAR:MODULE_1:g1:a0:xlte\
	\ADC_SAR:MODULE_1:g1:a0:xgt\
	\ADC_SAR:MODULE_1:g1:a0:xgte\
	\ADC_SAR:MODULE_1:lt\
	\ADC_SAR:MODULE_1:gt\
	\ADC_SAR:MODULE_1:gte\
	\ADC_SAR:MODULE_1:lte\
	\ADC_SAR:MODULE_1:neq\
	\I2C:udb_clk\
	Net_912
	\I2C:Net_973\
	Net_913
	\I2C:Net_974\
	\I2C:timeout_clk\
	Net_918
	\I2C:Net_975\
	Net_916
	Net_917
	\Timer2:Net_260\
	Net_901
	\Timer2:TimerUDB:ctrl_ten\
	\Timer2:TimerUDB:ctrl_cmode_0\
	\Timer2:TimerUDB:ctrl_tmode_1\
	\Timer2:TimerUDB:ctrl_tmode_0\
	\Timer2:TimerUDB:ctrl_ic_1\
	\Timer2:TimerUDB:ctrl_ic_0\
	Net_905
	\Timer2:TimerUDB:zeros_3\
	\Timer2:Net_102\
	\Timer2:Net_266\
	\IDAC:Net_157\
	\ADC:Net_268\
	\ADC:Net_270\
	\USBUART:dma_complete_0\
	\USBUART:Net_1922\
	\USBUART:dma_complete_1\
	\USBUART:Net_1921\
	\USBUART:dma_complete_2\
	\USBUART:Net_1920\
	\USBUART:dma_complete_3\
	\USBUART:Net_1919\
	\USBUART:dma_complete_4\
	\USBUART:Net_1918\
	\USBUART:dma_complete_5\
	\USBUART:Net_1917\
	\USBUART:dma_complete_6\
	\USBUART:Net_1916\
	\USBUART:dma_complete_7\
	\USBUART:Net_1915\


Deleted 90 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing one to tmpOE__LCD1_net_0
Aliasing tmpOE__BUZZER_net_0 to tmpOE__LCD1_net_0
Aliasing \Timer:Net_260\ to zero
Aliasing Net_12 to zero
Aliasing \Timer:Net_102\ to tmpOE__LCD1_net_0
Aliasing tmpOE__CR5_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__RTD_Negative_net_0 to tmpOE__LCD1_net_0
Aliasing \UART_1:BUART:tx_hd_send_break\ to zero
Aliasing \UART_1:BUART:HalfDuplexSend\ to zero
Aliasing \UART_1:BUART:FinalParityType_1\ to zero
Aliasing \UART_1:BUART:FinalParityType_0\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_2\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_1\ to zero
Aliasing \UART_1:BUART:FinalAddrMode_0\ to zero
Aliasing \UART_1:BUART:tx_ctrl_mark\ to zero
Aliasing \UART_1:BUART:tx_status_6\ to zero
Aliasing \UART_1:BUART:tx_status_5\ to zero
Aliasing \UART_1:BUART:tx_status_4\ to zero
Aliasing \UART_1:BUART:rx_count7_bit8_wire\ to zero
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__LCD1_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN4_1\ to \UART_1:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN4_0\ to \UART_1:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ to zero
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ to tmpOE__LCD1_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN5_1\ to \UART_1:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \UART_1:BUART:sRX:s23Poll:MODIN5_0\ to \UART_1:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to tmpOE__LCD1_net_0
Aliasing \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to zero
Aliasing \UART_1:BUART:rx_status_1\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_6\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_5\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_4\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_6\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_5\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_4\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_3\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_2\ to tmpOE__LCD1_net_0
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_1\ to tmpOE__LCD1_net_0
Aliasing \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_0\ to zero
Aliasing \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\ to tmpOE__LCD1_net_0
Aliasing tmpOE__Rx_1_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__Tx_1_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__CR4_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__SSR_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__DOOR_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__LCD2_net_0 to tmpOE__LCD1_net_0
Aliasing \ADC_SAR:AMuxHw_2_Decoder_enable\ to tmpOE__LCD1_net_0
Aliasing \ADC_SAR:SAR:vp_ctl_0\ to zero
Aliasing \ADC_SAR:SAR:vp_ctl_2\ to zero
Aliasing \ADC_SAR:SAR:vn_ctl_1\ to zero
Aliasing \ADC_SAR:SAR:vn_ctl_3\ to zero
Aliasing \ADC_SAR:SAR:vp_ctl_1\ to zero
Aliasing \ADC_SAR:SAR:vp_ctl_3\ to zero
Aliasing \ADC_SAR:SAR:vn_ctl_0\ to zero
Aliasing \ADC_SAR:SAR:vn_ctl_2\ to zero
Aliasing \ADC_SAR:SAR:soc\ to zero
Aliasing \ADC_SAR:bSAR_SEQ:status_7\ to zero
Aliasing \ADC_SAR:bSAR_SEQ:status_6\ to zero
Aliasing \ADC_SAR:bSAR_SEQ:status_5\ to zero
Aliasing \ADC_SAR:bSAR_SEQ:status_4\ to zero
Aliasing \ADC_SAR:bSAR_SEQ:status_3\ to zero
Aliasing \ADC_SAR:bSAR_SEQ:status_2\ to zero
Aliasing \ADC_SAR:bSAR_SEQ:status_1\ to zero
Aliasing Net_994 to \ADC_SAR:bSAR_SEQ:status_0\
Aliasing \ADC_SAR:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__LCD1_net_0
Aliasing tmpOE__LM35_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__CR2_net_0 to tmpOE__LCD1_net_0
Aliasing \I2C:Net_969\ to tmpOE__LCD1_net_0
Aliasing \I2C:Net_968\ to tmpOE__LCD1_net_0
Aliasing tmpOE__SDA_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__SCL_net_0 to tmpOE__LCD1_net_0
Aliasing \Timer2:TimerUDB:ctrl_cmode_1\ to zero
Aliasing \Timer2:TimerUDB:trigger_enable\ to tmpOE__LCD1_net_0
Aliasing \Timer2:TimerUDB:status_6\ to zero
Aliasing \Timer2:TimerUDB:status_5\ to zero
Aliasing \Timer2:TimerUDB:status_4\ to zero
Aliasing \Timer2:TimerUDB:status_0\ to \Timer2:TimerUDB:tc_i\
Aliasing Net_900 to zero
Aliasing tmpOE__RTD_Current_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__RTD_Positive_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__CR1_net_0 to tmpOE__LCD1_net_0
Aliasing \IDAC:Net_125\ to zero
Aliasing \IDAC:Net_194\ to zero
Aliasing \IDAC:Net_195\ to zero
Aliasing tmpOE__RefRes_Current_net_0 to tmpOE__LCD1_net_0
Aliasing \ADC:Net_482\ to zero
Aliasing \ADC:Net_252\ to zero
Aliasing \ADC:soc\ to tmpOE__LCD1_net_0
Aliasing tmpOE__RefRes_Negative_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__RefRes_Positive_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__CR3_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__RTD_Negative_1_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__RTD_Positive_1_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__RTD_Current_1_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__DS1302_IO_PIN_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__DS1302_SCLK_PIN_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__DS1302_CE_PIN_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__LEVEL_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__TERM_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__CR6_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__CR7_net_0 to tmpOE__LCD1_net_0
Aliasing tmpOE__CR8_net_0 to tmpOE__LCD1_net_0
Aliasing \USBUART:tmpOE__Dm_net_0\ to tmpOE__LCD1_net_0
Aliasing \USBUART:tmpOE__Dp_net_0\ to tmpOE__LCD1_net_0
Aliasing \UART_1:BUART:reset_reg\\D\ to zero
Aliasing \UART_1:BUART:rx_break_status\\D\ to zero
Aliasing \ADC_SAR:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_SAR:MODIN1_5\
Aliasing \ADC_SAR:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_SAR:MODIN1_4\
Aliasing \ADC_SAR:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_SAR:MODIN1_3\
Aliasing \ADC_SAR:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_SAR:MODIN1_2\
Aliasing \ADC_SAR:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_SAR:MODIN1_1\
Aliasing \ADC_SAR:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_SAR:MODIN1_0\
Aliasing \Timer2:TimerUDB:capture_last\\D\ to zero
Aliasing \Timer2:TimerUDB:hwEnable_reg\\D\ to \Timer2:TimerUDB:run_mode\
Aliasing \Timer2:TimerUDB:capture_out_reg_i\\D\ to \Timer2:TimerUDB:capt_fifo_load_int\
Removing Lhs of wire one[10] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__BUZZER_net_0[13] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \Timer:Net_260\[20] = zero[6]
Removing Lhs of wire \Timer:Net_266\[21] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire Net_12[22] = zero[6]
Removing Rhs of wire Net_8[27] = \Timer:Net_51\[23]
Removing Lhs of wire \Timer:Net_102\[28] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__CR5_net_0[32] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__RTD_Negative_net_0[38] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:Net_61\[47] = \UART_1:Net_9\[46]
Removing Lhs of wire \UART_1:BUART:tx_hd_send_break\[51] = zero[6]
Removing Lhs of wire \UART_1:BUART:HalfDuplexSend\[52] = zero[6]
Removing Lhs of wire \UART_1:BUART:FinalParityType_1\[53] = zero[6]
Removing Lhs of wire \UART_1:BUART:FinalParityType_0\[54] = zero[6]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_2\[55] = zero[6]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_1\[56] = zero[6]
Removing Lhs of wire \UART_1:BUART:FinalAddrMode_0\[57] = zero[6]
Removing Lhs of wire \UART_1:BUART:tx_ctrl_mark\[58] = zero[6]
Removing Rhs of wire Net_655[65] = \UART_1:BUART:rx_interrupt_out\[66]
Removing Rhs of wire \UART_1:BUART:tx_bitclk_enable_pre\[70] = \UART_1:BUART:tx_bitclk_dp\[106]
Removing Lhs of wire \UART_1:BUART:tx_counter_tc\[116] = \UART_1:BUART:tx_counter_dp\[107]
Removing Lhs of wire \UART_1:BUART:tx_status_6\[117] = zero[6]
Removing Lhs of wire \UART_1:BUART:tx_status_5\[118] = zero[6]
Removing Lhs of wire \UART_1:BUART:tx_status_4\[119] = zero[6]
Removing Lhs of wire \UART_1:BUART:tx_status_1\[121] = \UART_1:BUART:tx_fifo_empty\[84]
Removing Lhs of wire \UART_1:BUART:tx_status_3\[123] = \UART_1:BUART:tx_fifo_notfull\[83]
Removing Lhs of wire \UART_1:BUART:rx_count7_bit8_wire\[183] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_1\[191] = \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\[202]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_0\[193] = \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\[203]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_3\[194] = \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\[219]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[195] = \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[233]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_1\[196] = \UART_1:BUART:sRX:s23Poll:MODIN3_1\[197]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN3_1\[197] = \UART_1:BUART:pollcount_1\[189]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_0\[198] = \UART_1:BUART:sRX:s23Poll:MODIN3_0\[199]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN3_0\[199] = \UART_1:BUART:pollcount_0\[192]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[205] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[206] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\[207] = \UART_1:BUART:pollcount_1\[189]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN4_1\[208] = \UART_1:BUART:pollcount_1\[189]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\[209] = \UART_1:BUART:pollcount_0\[192]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN4_0\[210] = \UART_1:BUART:pollcount_0\[192]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\[211] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\[212] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\[213] = \UART_1:BUART:pollcount_1\[189]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\[214] = \UART_1:BUART:pollcount_0\[192]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\[215] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\[216] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[221] = \UART_1:BUART:pollcount_1\[189]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN5_1\[222] = \UART_1:BUART:pollcount_1\[189]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[223] = \UART_1:BUART:pollcount_0\[192]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODIN5_0\[224] = \UART_1:BUART:pollcount_0\[192]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[225] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[226] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[227] = \UART_1:BUART:pollcount_1\[189]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[228] = \UART_1:BUART:pollcount_0\[192]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[229] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[230] = zero[6]
Removing Lhs of wire \UART_1:BUART:rx_status_1\[237] = zero[6]
Removing Rhs of wire \UART_1:BUART:rx_status_2\[238] = \UART_1:BUART:rx_parity_error_status\[239]
Removing Rhs of wire \UART_1:BUART:rx_status_3\[240] = \UART_1:BUART:rx_stop_bit_error\[241]
Removing Lhs of wire \UART_1:BUART:sRX:cmp_vv_vv_MODGEN_5\[251] = \UART_1:BUART:sRX:MODULE_5:g2:a0:lta_0\[300]
Removing Lhs of wire \UART_1:BUART:sRX:cmp_vv_vv_MODGEN_6\[255] = \UART_1:BUART:sRX:MODULE_6:g1:a0:xneq\[322]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_6\[256] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_5\[257] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_4\[258] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_3\[259] = \UART_1:BUART:sRX:MODIN6_6\[260]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN6_6\[260] = \UART_1:BUART:rx_count_6\[178]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_2\[261] = \UART_1:BUART:sRX:MODIN6_5\[262]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN6_5\[262] = \UART_1:BUART:rx_count_5\[179]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_1\[263] = \UART_1:BUART:sRX:MODIN6_4\[264]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN6_4\[264] = \UART_1:BUART:rx_count_4\[180]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newa_0\[265] = \UART_1:BUART:sRX:MODIN6_3\[266]
Removing Lhs of wire \UART_1:BUART:sRX:MODIN6_3\[266] = \UART_1:BUART:rx_count_3\[181]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_6\[267] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_5\[268] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_4\[269] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_3\[270] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_2\[271] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_1\[272] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:newb_0\[273] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_6\[274] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_5\[275] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_4\[276] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_3\[277] = \UART_1:BUART:rx_count_6\[178]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_2\[278] = \UART_1:BUART:rx_count_5\[179]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_1\[279] = \UART_1:BUART:rx_count_4\[180]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:dataa_0\[280] = \UART_1:BUART:rx_count_3\[181]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_6\[281] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_5\[282] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_4\[283] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_3\[284] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_2\[285] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_1\[286] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_5:g2:a0:datab_0\[287] = zero[6]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:newa_0\[302] = \UART_1:BUART:rx_postpoll\[137]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:newb_0\[303] = \UART_1:BUART:rx_parity_bit\[254]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:dataa_0\[304] = \UART_1:BUART:rx_postpoll\[137]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:datab_0\[305] = \UART_1:BUART:rx_parity_bit\[254]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:a_0\[306] = \UART_1:BUART:rx_postpoll\[137]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:b_0\[307] = \UART_1:BUART:rx_parity_bit\[254]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\[309] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:eq_0\[310] = \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[308]
Removing Lhs of wire \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:eqi_0\[311] = \UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[308]
Removing Lhs of wire tmpOE__Rx_1_net_0[333] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__Tx_1_net_0[338] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__CR4_net_0[345] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__SSR_net_0[351] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__DOOR_net_0[357] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__LCD2_net_0[363] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \ADC_SAR:AMuxHw_2_Decoder_enable\[368] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \ADC_SAR:cmp_vv_vv_MODGEN_1\[370] = \ADC_SAR:MODULE_1:g1:a0:xeq\[705]
Removing Rhs of wire \ADC_SAR:clock\[371] = \ADC_SAR:Net_3874\[605]
Removing Rhs of wire \ADC_SAR:ch_addr_5\[373] = \ADC_SAR:bSAR_SEQ:count_5\[572]
Removing Rhs of wire \ADC_SAR:ch_addr_4\[375] = \ADC_SAR:bSAR_SEQ:count_4\[573]
Removing Rhs of wire \ADC_SAR:ch_addr_3\[377] = \ADC_SAR:bSAR_SEQ:count_3\[574]
Removing Rhs of wire \ADC_SAR:ch_addr_2\[379] = \ADC_SAR:bSAR_SEQ:count_2\[575]
Removing Rhs of wire \ADC_SAR:ch_addr_1\[381] = \ADC_SAR:bSAR_SEQ:count_1\[576]
Removing Rhs of wire \ADC_SAR:ch_addr_0\[383] = \ADC_SAR:bSAR_SEQ:count_0\[577]
Removing Lhs of wire \ADC_SAR:SAR:vp_ctl_0\[517] = zero[6]
Removing Lhs of wire \ADC_SAR:SAR:vp_ctl_2\[518] = zero[6]
Removing Lhs of wire \ADC_SAR:SAR:vn_ctl_1\[519] = zero[6]
Removing Lhs of wire \ADC_SAR:SAR:vn_ctl_3\[520] = zero[6]
Removing Lhs of wire \ADC_SAR:SAR:vp_ctl_1\[521] = zero[6]
Removing Lhs of wire \ADC_SAR:SAR:vp_ctl_3\[522] = zero[6]
Removing Lhs of wire \ADC_SAR:SAR:vn_ctl_0\[523] = zero[6]
Removing Lhs of wire \ADC_SAR:SAR:vn_ctl_2\[524] = zero[6]
Removing Lhs of wire \ADC_SAR:SAR:Net_188\[525] = \ADC_SAR:clock\[371]
Removing Lhs of wire \ADC_SAR:SAR:soc\[531] = zero[6]
Removing Rhs of wire \ADC_SAR:bSAR_SEQ:enable\[562] = \ADC_SAR:bSAR_SEQ:control_0\[563]
Removing Rhs of wire \ADC_SAR:bSAR_SEQ:load_period\[564] = \ADC_SAR:bSAR_SEQ:control_1\[565]
Removing Lhs of wire \ADC_SAR:bSAR_SEQ:status_7\[578] = zero[6]
Removing Lhs of wire \ADC_SAR:bSAR_SEQ:status_6\[579] = zero[6]
Removing Lhs of wire \ADC_SAR:bSAR_SEQ:status_5\[580] = zero[6]
Removing Lhs of wire \ADC_SAR:bSAR_SEQ:status_4\[581] = zero[6]
Removing Lhs of wire \ADC_SAR:bSAR_SEQ:status_3\[582] = zero[6]
Removing Lhs of wire \ADC_SAR:bSAR_SEQ:status_2\[583] = zero[6]
Removing Lhs of wire \ADC_SAR:bSAR_SEQ:status_1\[584] = zero[6]
Removing Rhs of wire \ADC_SAR:bSAR_SEQ:status_0\[585] = \ADC_SAR:bSAR_SEQ:nrq_edge_detect_reg\[586]
Removing Rhs of wire Net_994[593] = \ADC_SAR:bSAR_SEQ:status_0\[585]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newa_5\[616] = \ADC_SAR:MODIN1_5\[617]
Removing Lhs of wire \ADC_SAR:MODIN1_5\[617] = \ADC_SAR:ch_addr_5\[373]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newa_4\[618] = \ADC_SAR:MODIN1_4\[619]
Removing Lhs of wire \ADC_SAR:MODIN1_4\[619] = \ADC_SAR:ch_addr_4\[375]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newa_3\[620] = \ADC_SAR:MODIN1_3\[621]
Removing Lhs of wire \ADC_SAR:MODIN1_3\[621] = \ADC_SAR:ch_addr_3\[377]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newa_2\[622] = \ADC_SAR:MODIN1_2\[623]
Removing Lhs of wire \ADC_SAR:MODIN1_2\[623] = \ADC_SAR:ch_addr_2\[379]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newa_1\[624] = \ADC_SAR:MODIN1_1\[625]
Removing Lhs of wire \ADC_SAR:MODIN1_1\[625] = \ADC_SAR:ch_addr_1\[381]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newa_0\[626] = \ADC_SAR:MODIN1_0\[627]
Removing Lhs of wire \ADC_SAR:MODIN1_0\[627] = \ADC_SAR:ch_addr_0\[383]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newb_5\[628] = \ADC_SAR:MODIN2_5\[629]
Removing Lhs of wire \ADC_SAR:MODIN2_5\[629] = \ADC_SAR:AMuxHw_2_Decoder_old_id_5\[372]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newb_4\[630] = \ADC_SAR:MODIN2_4\[631]
Removing Lhs of wire \ADC_SAR:MODIN2_4\[631] = \ADC_SAR:AMuxHw_2_Decoder_old_id_4\[374]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newb_3\[632] = \ADC_SAR:MODIN2_3\[633]
Removing Lhs of wire \ADC_SAR:MODIN2_3\[633] = \ADC_SAR:AMuxHw_2_Decoder_old_id_3\[376]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newb_2\[634] = \ADC_SAR:MODIN2_2\[635]
Removing Lhs of wire \ADC_SAR:MODIN2_2\[635] = \ADC_SAR:AMuxHw_2_Decoder_old_id_2\[378]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newb_1\[636] = \ADC_SAR:MODIN2_1\[637]
Removing Lhs of wire \ADC_SAR:MODIN2_1\[637] = \ADC_SAR:AMuxHw_2_Decoder_old_id_1\[380]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:newb_0\[638] = \ADC_SAR:MODIN2_0\[639]
Removing Lhs of wire \ADC_SAR:MODIN2_0\[639] = \ADC_SAR:AMuxHw_2_Decoder_old_id_0\[382]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:dataa_5\[640] = \ADC_SAR:ch_addr_5\[373]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:dataa_4\[641] = \ADC_SAR:ch_addr_4\[375]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:dataa_3\[642] = \ADC_SAR:ch_addr_3\[377]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:dataa_2\[643] = \ADC_SAR:ch_addr_2\[379]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:dataa_1\[644] = \ADC_SAR:ch_addr_1\[381]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:dataa_0\[645] = \ADC_SAR:ch_addr_0\[383]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:datab_5\[646] = \ADC_SAR:AMuxHw_2_Decoder_old_id_5\[372]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:datab_4\[647] = \ADC_SAR:AMuxHw_2_Decoder_old_id_4\[374]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:datab_3\[648] = \ADC_SAR:AMuxHw_2_Decoder_old_id_3\[376]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:datab_2\[649] = \ADC_SAR:AMuxHw_2_Decoder_old_id_2\[378]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:datab_1\[650] = \ADC_SAR:AMuxHw_2_Decoder_old_id_1\[380]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:datab_0\[651] = \ADC_SAR:AMuxHw_2_Decoder_old_id_0\[382]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:a_5\[652] = \ADC_SAR:ch_addr_5\[373]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:a_4\[653] = \ADC_SAR:ch_addr_4\[375]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:a_3\[654] = \ADC_SAR:ch_addr_3\[377]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:a_2\[655] = \ADC_SAR:ch_addr_2\[379]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:a_1\[656] = \ADC_SAR:ch_addr_1\[381]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:a_0\[657] = \ADC_SAR:ch_addr_0\[383]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:b_5\[658] = \ADC_SAR:AMuxHw_2_Decoder_old_id_5\[372]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:b_4\[659] = \ADC_SAR:AMuxHw_2_Decoder_old_id_4\[374]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:b_3\[660] = \ADC_SAR:AMuxHw_2_Decoder_old_id_3\[376]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:b_2\[661] = \ADC_SAR:AMuxHw_2_Decoder_old_id_2\[378]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:b_1\[662] = \ADC_SAR:AMuxHw_2_Decoder_old_id_1\[380]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:b_0\[663] = \ADC_SAR:AMuxHw_2_Decoder_old_id_0\[382]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:aeqb_0\[670] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_0\[671] = \ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_0\[669]
Removing Lhs of wire \ADC_SAR:MODULE_1:g1:a0:gx:u0:eqi_0\[677] = \ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_5\[676]
Removing Rhs of wire \ADC_SAR:MODULE_1:g1:a0:xeq\[705] = \ADC_SAR:MODULE_1:g1:a0:gx:u0:aeqb_1\[678]
Removing Lhs of wire tmpOE__LM35_net_0[728] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__CR2_net_0[734] = tmpOE__LCD1_net_0[5]
Removing Rhs of wire \I2C:sda_x_wire\[739] = \I2C:Net_643_1\[740]
Removing Rhs of wire \I2C:Net_697\[742] = \I2C:Net_643_2\[748]
Removing Rhs of wire \I2C:Net_1109_0\[745] = \I2C:scl_yfb\[759]
Removing Rhs of wire \I2C:Net_1109_1\[746] = \I2C:sda_yfb\[760]
Removing Lhs of wire \I2C:scl_x_wire\[749] = \I2C:Net_643_0\[747]
Removing Lhs of wire \I2C:Net_969\[750] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \I2C:Net_968\[751] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \I2C:tmpOE__Bufoe_scl_net_0\[762] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \I2C:tmpOE__Bufoe_sda_net_0\[765] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__SDA_net_0[773] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__SCL_net_0[778] = tmpOE__LCD1_net_0[5]
Removing Rhs of wire Net_906[787] = \Timer2:Net_53\[788]
Removing Rhs of wire Net_906[787] = \Timer2:TimerUDB:tc_reg_i\[820]
Removing Lhs of wire \Timer2:TimerUDB:ctrl_enable\[802] = \Timer2:TimerUDB:control_7\[794]
Removing Lhs of wire \Timer2:TimerUDB:ctrl_cmode_1\[804] = zero[6]
Removing Rhs of wire \Timer2:TimerUDB:timer_enable\[813] = \Timer2:TimerUDB:runmode_enable\[825]
Removing Rhs of wire \Timer2:TimerUDB:run_mode\[814] = \Timer2:TimerUDB:hwEnable\[815]
Removing Lhs of wire \Timer2:TimerUDB:run_mode\[814] = \Timer2:TimerUDB:control_7\[794]
Removing Lhs of wire \Timer2:TimerUDB:trigger_enable\[817] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \Timer2:TimerUDB:tc_i\[819] = \Timer2:TimerUDB:status_tc\[816]
Removing Lhs of wire \Timer2:TimerUDB:capt_fifo_load_int\[824] = \Timer2:TimerUDB:capt_fifo_load\[812]
Removing Lhs of wire \Timer2:TimerUDB:status_6\[827] = zero[6]
Removing Lhs of wire \Timer2:TimerUDB:status_5\[828] = zero[6]
Removing Lhs of wire \Timer2:TimerUDB:status_4\[829] = zero[6]
Removing Lhs of wire \Timer2:TimerUDB:status_0\[830] = \Timer2:TimerUDB:status_tc\[816]
Removing Lhs of wire \Timer2:TimerUDB:status_1\[831] = \Timer2:TimerUDB:capt_fifo_load\[812]
Removing Rhs of wire \Timer2:TimerUDB:status_2\[832] = \Timer2:TimerUDB:fifo_full\[833]
Removing Rhs of wire \Timer2:TimerUDB:status_3\[834] = \Timer2:TimerUDB:fifo_nempty\[835]
Removing Lhs of wire Net_900[837] = zero[6]
Removing Lhs of wire \Timer2:TimerUDB:cs_addr_2\[838] = zero[6]
Removing Lhs of wire \Timer2:TimerUDB:cs_addr_1\[839] = \Timer2:TimerUDB:trig_reg\[826]
Removing Lhs of wire \Timer2:TimerUDB:cs_addr_0\[840] = \Timer2:TimerUDB:per_zero\[818]
Removing Lhs of wire tmpOE__RTD_Current_net_0[974] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__RTD_Positive_net_0[981] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__CR1_net_0[989] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \IDAC:Net_125\[1001] = zero[6]
Removing Lhs of wire \IDAC:Net_158\[1002] = zero[6]
Removing Lhs of wire \IDAC:Net_123\[1003] = zero[6]
Removing Lhs of wire \IDAC:Net_194\[1007] = zero[6]
Removing Lhs of wire \IDAC:Net_195\[1008] = zero[6]
Removing Lhs of wire tmpOE__RefRes_Current_net_0[1010] = tmpOE__LCD1_net_0[5]
Removing Rhs of wire \ADC:Net_488\[1031] = \ADC:Net_250\[1066]
Removing Lhs of wire \ADC:Net_481\[1033] = zero[6]
Removing Lhs of wire \ADC:Net_482\[1034] = zero[6]
Removing Lhs of wire \ADC:Net_252\[1068] = zero[6]
Removing Lhs of wire \ADC:soc\[1070] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__RefRes_Negative_net_0[1074] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__RefRes_Positive_net_0[1080] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__CR3_net_0[1088] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__RTD_Negative_1_net_0[1099] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__RTD_Positive_1_net_0[1106] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__RTD_Current_1_net_0[1113] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__DS1302_IO_PIN_net_0[1120] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__DS1302_SCLK_PIN_net_0[1126] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__DS1302_CE_PIN_net_0[1132] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__LEVEL_net_0[1138] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__TERM_net_0[1144] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__CR6_net_0[1150] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__CR7_net_0[1156] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire tmpOE__CR8_net_0[1162] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \USBUART:tmpOE__Dm_net_0\[1170] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \USBUART:tmpOE__Dp_net_0\[1177] = tmpOE__LCD1_net_0[5]
Removing Lhs of wire \UART_1:BUART:reset_reg\\D\[1228] = zero[6]
Removing Lhs of wire \UART_1:BUART:rx_bitclk\\D\[1243] = \UART_1:BUART:rx_bitclk_pre\[172]
Removing Lhs of wire \UART_1:BUART:rx_parity_error_pre\\D\[1252] = \UART_1:BUART:rx_parity_error_pre\[249]
Removing Lhs of wire \UART_1:BUART:rx_break_status\\D\[1253] = zero[6]
Removing Lhs of wire \ADC_SAR:AMuxHw_2_Decoder_old_id_5\\D\[1257] = \ADC_SAR:ch_addr_5\[373]
Removing Lhs of wire \ADC_SAR:AMuxHw_2_Decoder_old_id_4\\D\[1258] = \ADC_SAR:ch_addr_4\[375]
Removing Lhs of wire \ADC_SAR:AMuxHw_2_Decoder_old_id_3\\D\[1259] = \ADC_SAR:ch_addr_3\[377]
Removing Lhs of wire \ADC_SAR:AMuxHw_2_Decoder_old_id_2\\D\[1260] = \ADC_SAR:ch_addr_2\[379]
Removing Lhs of wire \ADC_SAR:AMuxHw_2_Decoder_old_id_1\\D\[1261] = \ADC_SAR:ch_addr_1\[381]
Removing Lhs of wire \ADC_SAR:AMuxHw_2_Decoder_old_id_0\\D\[1262] = \ADC_SAR:ch_addr_0\[383]
Removing Lhs of wire \ADC_SAR:bSAR_SEQ:nrq_edge_detect_reg\\D\[1327] = \ADC_SAR:bSAR_SEQ:nrq_edge_detect\[592]
Removing Lhs of wire \ADC_SAR:bSAR_SEQ:nrq_reg\\D\[1329] = \ADC_SAR:bSAR_SEQ:bus_clk_nrq_reg\[589]
Removing Lhs of wire \Timer2:TimerUDB:capture_last\\D\[1330] = zero[6]
Removing Lhs of wire \Timer2:TimerUDB:tc_reg_i\\D\[1331] = \Timer2:TimerUDB:status_tc\[816]
Removing Lhs of wire \Timer2:TimerUDB:hwEnable_reg\\D\[1332] = \Timer2:TimerUDB:control_7\[794]
Removing Lhs of wire \Timer2:TimerUDB:capture_out_reg_i\\D\[1333] = \Timer2:TimerUDB:capt_fifo_load\[812]

------------------------------------------------------
Aliased 0 equations, 271 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'tmpOE__LCD1_net_0' (cost = 0):
tmpOE__LCD1_net_0 <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:rx_addressmatch\' (cost = 0):
\UART_1:BUART:rx_addressmatch\ <= (\UART_1:BUART:rx_addressmatch2\
	OR \UART_1:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\UART_1:BUART:rx_bitclk_pre\' (cost = 1):
\UART_1:BUART:rx_bitclk_pre\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and not \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_bitclk_pre16x\' (cost = 0):
\UART_1:BUART:rx_bitclk_pre16x\ <= ((not \UART_1:BUART:rx_count_2\ and \UART_1:BUART:rx_count_1\ and \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_poll_bit1\' (cost = 1):
\UART_1:BUART:rx_poll_bit1\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:rx_poll_bit2\' (cost = 1):
\UART_1:BUART:rx_poll_bit2\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\ and not \UART_1:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:pollingrange\' (cost = 4):
\UART_1:BUART:pollingrange\ <= ((not \UART_1:BUART:rx_count_2\ and not \UART_1:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\UART_1:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\ <= (not \UART_1:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ <= (\UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <= (not \UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_6\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_6\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_5\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_5\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_4\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_4\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_3\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_3\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_3\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_2\' (cost = 1):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_2\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_2\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_2\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_1\' (cost = 2):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_1\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_4\)
	OR (not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_1\' (cost = 0):
\UART_1:BUART:sRX:MODULE_5:g2:a0:gta_1\ <= (\UART_1:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_0\' (cost = 8):
\UART_1:BUART:sRX:MODULE_5:g2:a0:lta_0\ <= ((not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_4\)
	OR (not \UART_1:BUART:rx_count_6\ and not \UART_1:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_SAR:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\));

Note:  Expanding virtual equation for '\Timer2:TimerUDB:fifo_load_polarized\' (cost = 0):
\Timer2:TimerUDB:fifo_load_polarized\ <=  ('0') ;

Note:  Expanding virtual equation for '\Timer2:TimerUDB:timer_enable\' (cost = 0):
\Timer2:TimerUDB:timer_enable\ <= (\Timer2:TimerUDB:control_7\);


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\' (cost = 4):
\UART_1:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ <= ((not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 0):
\UART_1:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= (not \UART_1:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\' (cost = 2):
\UART_1:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\ <= ((not \UART_1:BUART:pollcount_0\ and \UART_1:BUART:pollcount_1\)
	OR (not \UART_1:BUART:pollcount_1\ and \UART_1:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\ADC_SAR:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_SAR:MODULE_1:g1:a0:xeq\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Expanding virtual equation for '\UART_1:BUART:rx_postpoll\' (cost = 72):
\UART_1:BUART:rx_postpoll\ <= (\UART_1:BUART:pollcount_1\
	OR (Net_653 and \UART_1:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\ <= ((not \UART_1:BUART:pollcount_1\ and not Net_653 and not \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and not \UART_1:BUART:rx_parity_bit\)
	OR (\UART_1:BUART:pollcount_1\ and \UART_1:BUART:rx_parity_bit\)
	OR (Net_653 and \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\UART_1:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\ <= ((not \UART_1:BUART:pollcount_1\ and not Net_653 and not \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and not \UART_1:BUART:rx_parity_bit\)
	OR (\UART_1:BUART:pollcount_1\ and \UART_1:BUART:rx_parity_bit\)
	OR (Net_653 and \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\));

Note:  Virtual signal \ADC_SAR:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_SAR:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR:ch_addr_0\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (not \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\)
	OR (\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR:ch_addr_5\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR:ch_addr_4\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR:ch_addr_3\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR:ch_addr_2\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR:ch_addr_1\ and \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 55 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \UART_1:BUART:rx_status_0\ to zero
Aliasing \UART_1:BUART:rx_status_6\ to zero
Aliasing \Timer2:TimerUDB:capt_fifo_load\ to zero
Aliasing \UART_1:BUART:rx_markspace_status\\D\ to zero
Aliasing \UART_1:BUART:rx_parity_error_status\\D\ to zero
Aliasing \UART_1:BUART:rx_addr_match_status\\D\ to zero
Removing Rhs of wire \UART_1:BUART:rx_bitclk_enable\[136] = \UART_1:BUART:rx_bitclk\[184]
Removing Lhs of wire \UART_1:BUART:rx_status_0\[235] = zero[6]
Removing Lhs of wire \UART_1:BUART:rx_status_6\[244] = zero[6]
Removing Lhs of wire \Timer2:TimerUDB:capt_fifo_load\[812] = zero[6]
Removing Lhs of wire \Timer2:TimerUDB:trig_reg\[826] = \Timer2:TimerUDB:control_7\[794]
Removing Lhs of wire \UART_1:BUART:tx_ctrl_mark_last\\D\[1235] = \UART_1:BUART:tx_ctrl_mark_last\[127]
Removing Lhs of wire \UART_1:BUART:rx_markspace_status\\D\[1247] = zero[6]
Removing Lhs of wire \UART_1:BUART:rx_parity_error_status\\D\[1248] = zero[6]
Removing Lhs of wire \UART_1:BUART:rx_addr_match_status\\D\[1250] = zero[6]
Removing Lhs of wire \UART_1:BUART:rx_markspace_pre\\D\[1251] = \UART_1:BUART:rx_markspace_pre\[248]
Removing Lhs of wire \UART_1:BUART:rx_parity_bit\\D\[1256] = \UART_1:BUART:rx_parity_bit\[254]

------------------------------------------------------
Aliased 0 equations, 11 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\UART_1:BUART:sRX:MODULE_6:g1:a0:xneq\ <= ((not \UART_1:BUART:rx_parity_bit\ and Net_653 and \UART_1:BUART:pollcount_0\)
	OR (not \UART_1:BUART:pollcount_1\ and not \UART_1:BUART:pollcount_0\ and \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:pollcount_1\ and not Net_653 and \UART_1:BUART:rx_parity_bit\)
	OR (not \UART_1:BUART:rx_parity_bit\ and \UART_1:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya "-.fftprj=D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\IncubadoraRefrigerada.cyprj" -dcpsoc3 IncubadoraRefrigerada.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 2s.657ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.3.0.1445, Family: PSoC3, Started at: Friday, 04 December 2020 09:08:25
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=D:\Laboratorio\Incubadora\2020\Incubadora Refrigerada Peltier Touch DYM 750L #004588424 OP2020354\Firmware Psoc\LCD2\IncubadoraRefrigerada.cydsn\IncubadoraRefrigerada.cyprj -d CY8C5888AXI-LP096 IncubadoraRefrigerada.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.025ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_SAR:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_SAR:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_SAR:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_SAR:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_SAR:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_SAR:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_SAR:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_SAR:MODULE_1:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \UART_1:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_1:BUART:rx_break_status\ from registered to combinatorial
    Converted constant MacroCell: \Timer2:TimerUDB:capture_last\ from registered to combinatorial
    Converted constant MacroCell: \Timer2:TimerUDB:capture_out_reg_i\ from registered to combinatorial
Assigning clock timer_clock to clock BUS_CLK because it is a pass-through
Assigning clock ADC_SAR_BusClock to clock BUS_CLK because it is a pass-through
Assigning clock I2C_BusClock to clock BUS_CLK because it is a pass-through
Assigning clock timer_clock_1 to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'ADC_Ext_CP_Clk'. Fanout=1, Signal=\ADC:Net_93\
    Analog  Clock 0: Automatic-assigning  clock 'ADC_theACLK'. Fanout=1, Signal=\ADC:Net_488\
    Digital Clock 1: Automatic-assigning  clock 'ADC_SAR_IntClock'. Fanout=73, Signal=\ADC_SAR:clock\
    Digital Clock 2: Automatic-assigning  clock 'UART_1_IntClock'. Fanout=1, Signal=\UART_1:Net_9\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \UART_1:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_1_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_1_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \ADC_SAR:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_SAR_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_SAR:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_IntClock, EnableOut: \ADC_SAR:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_SAR:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_SAR_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \Timer2:TimerUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: BUS_CLK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: BUS_CLK, EnableOut: Constant 1
    UDB Clk/Enable \Timer2:TimerUDB:sCTRLReg:SyncCtl:cy_psoc3_udb_Ctl_Clk_Sync\: with output requested to be synchronous
        ClockIn: BUS_CLK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: BUS_CLK, EnableOut: Constant 1
</CYPRESSTAG>
Info: plm.M0038: The pin named RefRes_Negative(0) at location P3[2] prevents usage of special purposes: DSM:ExtVref. (App=cydsfit)

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \UART_1:BUART:rx_parity_bit\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_parity_bit\ (fanout=0)

    Removing \UART_1:BUART:rx_address_detected\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_address_detected\ (fanout=0)

    Removing \UART_1:BUART:rx_parity_error_pre\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \UART_1:BUART:rx_markspace_pre\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_markspace_pre\ (fanout=0)

    Removing \UART_1:BUART:rx_state_1\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:rx_state_1\ (fanout=8)

    Removing \UART_1:BUART:tx_parity_bit\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART_1:BUART:tx_mark\, Duplicate of \UART_1:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_1:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_mark\ (fanout=0)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = LCD1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LCD1(0)__PA ,
            pad => LCD1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = BUZZER(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => BUZZER(0)__PA ,
            pad => BUZZER(0)_PAD );
        Properties:
        {
        }

    Pin : Name = CR5(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => CR5(0)__PA ,
            pad => CR5(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RTD_Negative(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => RTD_Negative(0)__PA ,
            analog_term => Net_1117 ,
            annotation => Net_966 ,
            pad => RTD_Negative(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Rx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Rx_1(0)__PA ,
            fb => Net_653 ,
            pad => Rx_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Tx_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Tx_1(0)__PA ,
            pin_input => Net_648 ,
            pad => Tx_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = CR4(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => CR4(0)__PA ,
            pad => CR4(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SSR(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => SSR(0)__PA ,
            pad => SSR(0)_PAD );
        Properties:
        {
        }

    Pin : Name = DOOR(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => DOOR(0)__PA ,
            pad => DOOR(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LCD2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LCD2(0)__PA ,
            pad => LCD2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LM35(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LM35(0)__PA ,
            analog_term => Net_1216 ,
            pad => LM35(0)_PAD ,
            pin_input => \ADC_SAR:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = CR2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => CR2(0)__PA ,
            pad => CR2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SDA(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: OPEN_DRAIN_LO
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => SDA(0)__PA ,
            fb => \I2C:Net_1109_1\ ,
            pin_input => \I2C:sda_x_wire\ ,
            pad => SDA(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SCL(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: OPEN_DRAIN_LO
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => SCL(0)__PA ,
            fb => \I2C:Net_1109_0\ ,
            pin_input => \I2C:Net_643_0\ ,
            pad => SCL(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RTD_Current(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RTD_Current(0)__PA ,
            analog_term => Net_318 ,
            annotation => Net_730 ,
            pad => RTD_Current(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RTD_Positive(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RTD_Positive(0)__PA ,
            analog_term => Net_180 ,
            annotation => Net_733 ,
            pad => RTD_Positive(0)_PAD );
        Properties:
        {
        }

    Pin : Name = CR1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => CR1(0)__PA ,
            pad => CR1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RefRes_Current(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RefRes_Current(0)__PA ,
            analog_term => Net_317 ,
            annotation => Net_337 ,
            pad => RefRes_Current(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RefRes_Negative(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RefRes_Negative(0)__PA ,
            analog_term => Net_1118 ,
            annotation => Net_273 ,
            pad => RefRes_Negative(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RefRes_Positive(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RefRes_Positive(0)__PA ,
            analog_term => Net_186 ,
            annotation => Net_337 ,
            pad => RefRes_Positive(0)_PAD );
        Properties:
        {
        }

    Pin : Name = CR3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => CR3(0)__PA ,
            pad => CR3(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RTD_Negative_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => RTD_Negative_1(0)__PA ,
            analog_term => Net_1120 ,
            pad => RTD_Negative_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RTD_Positive_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RTD_Positive_1(0)__PA ,
            analog_term => Net_185 ,
            pad => RTD_Positive_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RTD_Current_1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RTD_Current_1(0)__PA ,
            analog_term => Net_1125 ,
            pad => RTD_Current_1(0)_PAD );
        Properties:
        {
        }

    Pin : Name = DS1302_IO_PIN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => DS1302_IO_PIN(0)__PA ,
            pad => DS1302_IO_PIN(0)_PAD );
        Properties:
        {
        }

    Pin : Name = DS1302_SCLK_PIN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => DS1302_SCLK_PIN(0)__PA ,
            pad => DS1302_SCLK_PIN(0)_PAD );
        Properties:
        {
        }

    Pin : Name = DS1302_CE_PIN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => DS1302_CE_PIN(0)__PA ,
            pad => DS1302_CE_PIN(0)_PAD );
        Properties:
        {
        }

    Pin : Name = LEVEL(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => LEVEL(0)__PA ,
            pad => LEVEL(0)_PAD );
        Properties:
        {
        }

    Pin : Name = TERM(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => TERM(0)__PA ,
            pad => TERM(0)_PAD );
        Properties:
        {
        }

    Pin : Name = CR6(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => CR6(0)__PA ,
            pad => CR6(0)_PAD );
        Properties:
        {
        }

    Pin : Name = CR7(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => CR7(0)__PA ,
            pad => CR7(0)_PAD );
        Properties:
        {
        }

    Pin : Name = CR8(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => CR8(0)__PA ,
            pad => CR8(0)_PAD );
        Properties:
        {
        }

    Pin : Name = \USBUART:Dm(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: USB_D_MINUS
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBUART:Dm(0)\__PA ,
            analog_term => \USBUART:Net_597\ ,
            pad => \USBUART:Dm(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \USBUART:Dp(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: HI_Z_ANALOG
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: USB_D_PLUS
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBUART:Dp(0)\__PA ,
            analog_term => \USBUART:Net_1000\ ,
            pad => \USBUART:Dp(0)_PAD\ );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * !\ADC_SAR:ch_addr_5\
            + \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * !\ADC_SAR:ch_addr_4\
            + \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * !\ADC_SAR:ch_addr_3\
            + \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * !\ADC_SAR:ch_addr_2\
            + !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * \ADC_SAR:ch_addr_1\
            + \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * !\ADC_SAR:ch_addr_1\
            + !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\ * \ADC_SAR:ch_addr_0\
            + \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ * !\ADC_SAR:ch_addr_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=Net_648, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:txn\
        );
        Output = Net_648 (fanout=1)

    MacroCell: Name=\UART_1:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_fifo_notfull\
        );
        Output = \UART_1:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART_1:BUART:pollcount_1\
            + Net_653 * \UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_load_fifo\ * \UART_1:BUART:rx_fifofull\
        );
        Output = \UART_1:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_fifonotempty\ * 
              \UART_1:BUART:rx_state_stop1_reg\
        );
        Output = \UART_1:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * \ADC_SAR:ch_addr_5\
            + !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * \ADC_SAR:ch_addr_4\
            + !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * \ADC_SAR:ch_addr_3\
            + !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * \ADC_SAR:ch_addr_2\
            + \ADC_SAR:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_SAR:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_993 * !\ADC_SAR:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\Timer2:TimerUDB:status_tc\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Timer2:TimerUDB:control_7\ * \Timer2:TimerUDB:per_zero\
        );
        Output = \Timer2:TimerUDB:status_tc\ (fanout=1)

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=2)

    MacroCell: Name=\UART_1:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_1\ * 
              !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\ * 
              !\UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:txn\ (fanout=2)

    MacroCell: Name=\UART_1:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              !\UART_1:BUART:tx_fifo_empty\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_fifo_empty\ * !\UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\UART_1:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_1:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\UART_1:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_ctrl_mark_last\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_653
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\UART_1:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              !\UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\UART_1:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\UART_1:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !Net_653 * \UART_1:BUART:rx_last\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\UART_1:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:rx_count_0\
        );
        Output = \UART_1:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\UART_1:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_state_3\ * \UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:pollcount_1\ * Net_653 * 
              \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !Net_653
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\UART_1:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !Net_653 * \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              Net_653 * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\UART_1:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_653
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\UART_1:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_653
        );
        Output = \UART_1:BUART:rx_last\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_5\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_4\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_3\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_2\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_1\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_994, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR:bSAR_SEQ:nrq_reg\
        );
        Output = Net_994 (fanout=3)

    MacroCell: Name=\ADC_SAR:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_994
            + \ADC_SAR:Net_3935\
        );
        Output = \ADC_SAR:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_SAR:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=Net_906, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Timer2:TimerUDB:control_7\ * \Timer2:TimerUDB:per_zero\
        );
        Output = Net_906 (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\UART_1:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            cs_addr_2 => \UART_1:BUART:tx_state_1\ ,
            cs_addr_1 => \UART_1:BUART:tx_state_0\ ,
            cs_addr_0 => \UART_1:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART_1:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART_1:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART_1:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_1:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            cs_addr_0 => \UART_1:BUART:counter_load_not\ ,
            ce0_reg => \UART_1:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART_1:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_1:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            cs_addr_2 => \UART_1:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \UART_1:BUART:rx_state_0\ ,
            cs_addr_0 => \UART_1:BUART:rx_bitclk_enable\ ,
            route_si => \UART_1:BUART:rx_postpoll\ ,
            f0_load => \UART_1:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \UART_1:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \UART_1:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\Timer2:TimerUDB:sT24:timerdp:u0\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            cs_addr_1 => \Timer2:TimerUDB:control_7\ ,
            cs_addr_0 => \Timer2:TimerUDB:per_zero\ ,
            chain_out => \Timer2:TimerUDB:sT24:timerdp:carry0\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111000000000000000000000001000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Next in chain : \Timer2:TimerUDB:sT24:timerdp:u1\

    datapathcell: Name =\Timer2:TimerUDB:sT24:timerdp:u1\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            cs_addr_1 => \Timer2:TimerUDB:control_7\ ,
            cs_addr_0 => \Timer2:TimerUDB:per_zero\ ,
            chain_in => \Timer2:TimerUDB:sT24:timerdp:carry0\ ,
            chain_out => \Timer2:TimerUDB:sT24:timerdp:carry1\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \Timer2:TimerUDB:sT24:timerdp:u0\
        Next in chain : \Timer2:TimerUDB:sT24:timerdp:u2\

    datapathcell: Name =\Timer2:TimerUDB:sT24:timerdp:u2\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            cs_addr_1 => \Timer2:TimerUDB:control_7\ ,
            cs_addr_0 => \Timer2:TimerUDB:per_zero\ ,
            z0_comb => \Timer2:TimerUDB:per_zero\ ,
            f0_bus_stat_comb => \Timer2:TimerUDB:status_3\ ,
            f0_blk_stat_comb => \Timer2:TimerUDB:status_2\ ,
            chain_in => \Timer2:TimerUDB:sT24:timerdp:carry1\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \Timer2:TimerUDB:sT24:timerdp:u1\
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_SAR:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_SAR:clock\ ,
            status_0 => Net_994 ,
            clk_en => \ADC_SAR:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\UART_1:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            status_3 => \UART_1:BUART:tx_fifo_notfull\ ,
            status_2 => \UART_1:BUART:tx_status_2\ ,
            status_1 => \UART_1:BUART:tx_fifo_empty\ ,
            status_0 => \UART_1:BUART:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART_1:BUART:sRX:RxSts\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            status_5 => \UART_1:BUART:rx_status_5\ ,
            status_4 => \UART_1:BUART:rx_status_4\ ,
            status_3 => \UART_1:BUART:rx_status_3\ ,
            interrupt => Net_655 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\Timer2:TimerUDB:rstSts:stsreg\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            status_3 => \Timer2:TimerUDB:status_3\ ,
            status_2 => \Timer2:TimerUDB:status_2\ ,
            status_0 => \Timer2:TimerUDB:status_tc\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000011"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_SAR:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_SAR:nrq\ ,
            out => \ADC_SAR:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ADC_SAR:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_SAR:clock\ ,
            control_7 => \ADC_SAR:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_SAR:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_SAR:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_SAR:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_SAR:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_SAR:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_SAR:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_SAR:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\Timer2:TimerUDB:sCTRLReg:SyncCtl:ctrlreg\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            control_7 => \Timer2:TimerUDB:control_7\ ,
            control_6 => \Timer2:TimerUDB:control_6\ ,
            control_5 => \Timer2:TimerUDB:control_5\ ,
            control_4 => \Timer2:TimerUDB:control_4\ ,
            control_3 => \Timer2:TimerUDB:control_3\ ,
            control_2 => \Timer2:TimerUDB:control_2\ ,
            control_1 => \Timer2:TimerUDB:control_1\ ,
            control_0 => \Timer2:TimerUDB:control_0\ );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\UART_1:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \UART_1:Net_9\ ,
            load => \UART_1:BUART:rx_counter_load\ ,
            count_6 => \UART_1:BUART:rx_count_6\ ,
            count_5 => \UART_1:BUART:rx_count_5\ ,
            count_4 => \UART_1:BUART:rx_count_4\ ,
            count_3 => \UART_1:BUART:rx_count_3\ ,
            count_2 => \UART_1:BUART:rx_count_2\ ,
            count_1 => \UART_1:BUART:rx_count_1\ ,
            count_0 => \UART_1:BUART:rx_count_0\ ,
            tc => \UART_1:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    count7cell: Name =\ADC_SAR:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_SAR:clock\ ,
            load => \ADC_SAR:bSAR_SEQ:load_period\ ,
            enable => \ADC_SAR:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_SAR:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_SAR:ch_addr_5\ ,
            count_4 => \ADC_SAR:ch_addr_4\ ,
            count_3 => \ADC_SAR:ch_addr_3\ ,
            count_2 => \ADC_SAR:ch_addr_2\ ,
            count_1 => \ADC_SAR:ch_addr_1\ ,
            count_0 => \ADC_SAR:ch_addr_0\ ,
            tc => \ADC_SAR:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_SAR:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000000"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_SAR:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =Reloj
        PORT MAP (
            interrupt => Net_8 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }

    interrupt: Name =RX2
        PORT MAP (
            interrupt => Net_655 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ADC_SAR:IRQ\
        PORT MAP (
            interrupt => Net_994 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\I2C:I2C_IRQ\
        PORT MAP (
            interrupt => \I2C:Net_697\ );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }

    interrupt: Name =leeT
        PORT MAP (
            interrupt => Net_906 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ADC:IRQ\
        PORT MAP (
            interrupt => Net_1103 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:dp_int\
        PORT MAP (
            interrupt => \USBUART:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:ep_3\
        PORT MAP (
            interrupt => \USBUART:ep_int_3\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:ep_2\
        PORT MAP (
            interrupt => \USBUART:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:ep_1\
        PORT MAP (
            interrupt => \USBUART:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:ep_0\
        PORT MAP (
            interrupt => \USBUART:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:bus_reset\
        PORT MAP (
            interrupt => \USBUART:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:arb_int\
        PORT MAP (
            interrupt => \USBUART:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART:sof_int\
        PORT MAP (
            interrupt => Net_1214 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    3 :    5 :    8 : 37.50 %
Analog Clocks                 :    1 :    3 :    4 : 25.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :   14 :   18 :   32 : 43.75 %
IO                            :   37 :   35 :   72 : 51.39 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    1 :    0 :    1 : 100.00 %
USB                           :    1 :    0 :    1 : 100.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    1 :    3 :    4 : 25.00 %
UDB                           :      :      :      :        
  Macrocells                  :  103 :   89 :  192 : 53.65 %
  Unique P-terms              :  133 :  251 :  384 : 34.64 %
  Total P-terms               :  143 :      :      :        
  Datapath Cells              :    6 :   18 :   24 : 25.00 %
  Status Cells                :    7 :   17 :   24 : 29.17 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    3 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    4 :   20 :   24 : 16.67 %
    Control Registers         :    2 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    1 :    0 :    1 : 100.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    1 :    3 :    4 : 25.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.245ms
Tech Mapping phase: Elapsed time ==> 0s.308ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_1217" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1218" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_999" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1001" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1003" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1004" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1006" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1008" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1009" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1011" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1013" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1014" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1016" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1018" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1019" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1021" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1023" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1024" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1026" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1028" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1029" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1031" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1033" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1034" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1036" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1038" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1039" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1041" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1043" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1044" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1046" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1048" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1049" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1051" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1053" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1054" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1056" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1058" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1059" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1061" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1063" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1064" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1066" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1068" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1069" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1071" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1073" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1074" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1075" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1076" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1077" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1078" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1079" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1080" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1081" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1082" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1083" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1084" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1085" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1086" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1087" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1088" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1089" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_2@[IOP=(1)][IoId=(2)] : BUZZER(0) (fixed)
IO_5@[IOP=(15)][IoId=(5)] : CR1(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : CR2(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : CR3(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : CR4(0) (fixed)
IO_3@[IOP=(2)][IoId=(3)] : CR5(0) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : CR6(0) (fixed)
IO_4@[IOP=(1)][IoId=(4)] : CR7(0) (fixed)
IO_4@[IOP=(2)][IoId=(4)] : CR8(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : DOOR(0) (fixed)
IO_2@[IOP=(6)][IoId=(2)] : DS1302_CE_PIN(0) (fixed)
IO_1@[IOP=(6)][IoId=(1)] : DS1302_IO_PIN(0) (fixed)
IO_0@[IOP=(6)][IoId=(0)] : DS1302_SCLK_PIN(0) (fixed)
IO_5@[IOP=(5)][IoId=(5)] : LCD1(0) (fixed)
IO_4@[IOP=(5)][IoId=(4)] : LCD2(0) (fixed)
IO_3@[IOP=(6)][IoId=(3)] : LEVEL(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : LM35(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : RTD_Current(0) (fixed)
IO_2@[IOP=(4)][IoId=(2)] : RTD_Current_1(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : RTD_Negative(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : RTD_Negative_1(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : RTD_Positive(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : RTD_Positive_1(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : RefRes_Current(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : RefRes_Negative(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : RefRes_Positive(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : SCL(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : SDA(0) (fixed)
IO_4@[IOP=(15)][IoId=(4)] : SSR(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : TERM(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \USBUART:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBUART:Dp(0)\ (fixed)
DSM[0]@[FFB(DSM,0)] : \ADC:DSM\
SAR[1]@[FFB(SAR,1)] : \ADC_SAR:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR:SAR:vRef_Vdda_1\
VIDAC[3]@[FFB(VIDAC,3)] : \IDAC:viDAC8\
USB[0]@[FFB(USB,0)] : \USBUART:USB\
Log: apr.M0058: The analog placement iterative improvement is 33% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 57% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 78% done. (App=cydsfit)
Analog Placement Results:
IO_2@[IOP=(1)][IoId=(2)] : BUZZER(0) (fixed)
IO_5@[IOP=(15)][IoId=(5)] : CR1(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : CR2(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : CR3(0) (fixed)
IO_2@[IOP=(2)][IoId=(2)] : CR4(0) (fixed)
IO_3@[IOP=(2)][IoId=(3)] : CR5(0) (fixed)
IO_5@[IOP=(1)][IoId=(5)] : CR6(0) (fixed)
IO_4@[IOP=(1)][IoId=(4)] : CR7(0) (fixed)
IO_4@[IOP=(2)][IoId=(4)] : CR8(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : DOOR(0) (fixed)
IO_2@[IOP=(6)][IoId=(2)] : DS1302_CE_PIN(0) (fixed)
IO_1@[IOP=(6)][IoId=(1)] : DS1302_IO_PIN(0) (fixed)
IO_0@[IOP=(6)][IoId=(0)] : DS1302_SCLK_PIN(0) (fixed)
IO_5@[IOP=(5)][IoId=(5)] : LCD1(0) (fixed)
IO_4@[IOP=(5)][IoId=(4)] : LCD2(0) (fixed)
IO_3@[IOP=(6)][IoId=(3)] : LEVEL(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : LM35(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : RTD_Current(0) (fixed)
IO_2@[IOP=(4)][IoId=(2)] : RTD_Current_1(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : RTD_Negative(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : RTD_Negative_1(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : RTD_Positive(0) (fixed)
IO_7@[IOP=(0)][IoId=(7)] : RTD_Positive_1(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : RefRes_Current(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : RefRes_Negative(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : RefRes_Positive(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : Rx_1(0) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : SCL(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : SDA(0) (fixed)
IO_4@[IOP=(15)][IoId=(4)] : SSR(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : TERM(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : Tx_1(0) (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \USBUART:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBUART:Dp(0)\ (fixed)
DSM[0]@[FFB(DSM,0)] : \ADC:DSM\
SAR[0]@[FFB(SAR,0)] : \ADC_SAR:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR:SAR:vRef_Vdda_1\
VIDAC[1]@[FFB(VIDAC,1)] : \IDAC:viDAC8\
USB[0]@[FFB(USB,0)] : \USBUART:USB\

Analog Placement phase: Elapsed time ==> 2s.684ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Net "AmuxEye::ADCMux_CYAMUXSIDE_A" overuses wire "dsm0+ Wire"
Net "AmuxEye::ADCMux_CYAMUXSIDE_A" overuses wire "dsm0+ Wire"
Net "AmuxEye::ADCMux_CYAMUXSIDE_A" overuses wire "AGL[7]"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "dsm0+ Wire"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "AGL[6]"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "AGL[7]"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "AGL[6]"
Net "AmuxEye::\ADC_SAR:AMuxHw_2\" overuses wire "AGL[6]"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "GPIO P3[2] Mux__0b"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "GPIO P3[2] Mux__1b"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "GPIO P3[2] Mux__0b"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "GPIO P3[2] Mux__1b"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "GPIO P3[5] Mux__2b"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "GPIO P3[5] Mux__3b"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "AGL[6]"
Net "AmuxEye::ADCMux_CYAMUXSIDE_B" overuses wire "GPIO P3[5] Mux__4b"
Net "AmuxEye::\ADC_SAR:AMuxHw_2\" overuses wire "AGL[6]"
Analog Routing phase: Elapsed time ==> 0s.032ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: Net_1100 {
    dsm_0_vplus
  }
  Net: Net_180 {
    p3_4
  }
  Net: Net_186 {
    p3_1
  }
  Net: Net_185 {
    p0_7
  }
  Net: Net_1101 {
    dsm_0_vminus
  }
  Net: Net_1117 {
    p3_3
  }
  Net: Net_1118 {
    p3_2
  }
  Net: Net_1120 {
    p0_6
  }
  Net: Net_1109 {
    vidac_1_iout
  }
  Net: Net_318 {
    p3_5
  }
  Net: Net_317 {
    p3_0
  }
  Net: Net_1125 {
    p4_2
  }
  Net: \ADC_SAR:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_1216 {
    p0_2
  }
  Net: Net_1217 {
  }
  Net: Net_1218 {
  }
  Net: Net_999 {
  }
  Net: Net_1001 {
  }
  Net: Net_1003 {
  }
  Net: Net_1004 {
  }
  Net: Net_1006 {
  }
  Net: Net_1008 {
  }
  Net: Net_1009 {
  }
  Net: Net_1011 {
  }
  Net: Net_1013 {
  }
  Net: Net_1014 {
  }
  Net: Net_1016 {
  }
  Net: Net_1018 {
  }
  Net: Net_1019 {
  }
  Net: Net_1021 {
  }
  Net: Net_1023 {
  }
  Net: Net_1024 {
  }
  Net: Net_1026 {
  }
  Net: Net_1028 {
  }
  Net: Net_1029 {
  }
  Net: Net_1031 {
  }
  Net: Net_1033 {
  }
  Net: Net_1034 {
  }
  Net: Net_1036 {
  }
  Net: Net_1038 {
  }
  Net: Net_1039 {
  }
  Net: Net_1041 {
  }
  Net: Net_1043 {
  }
  Net: Net_1044 {
  }
  Net: Net_1046 {
  }
  Net: Net_1048 {
  }
  Net: Net_1049 {
  }
  Net: Net_1051 {
  }
  Net: Net_1053 {
  }
  Net: Net_1054 {
  }
  Net: Net_1056 {
  }
  Net: Net_1058 {
  }
  Net: Net_1059 {
  }
  Net: Net_1061 {
  }
  Net: Net_1063 {
  }
  Net: Net_1064 {
  }
  Net: Net_1066 {
  }
  Net: Net_1068 {
  }
  Net: Net_1069 {
  }
  Net: Net_1071 {
  }
  Net: Net_1073 {
  }
  Net: Net_1074 {
  }
  Net: Net_1075 {
  }
  Net: Net_1076 {
  }
  Net: Net_1077 {
  }
  Net: Net_1078 {
  }
  Net: Net_1079 {
  }
  Net: Net_1080 {
  }
  Net: Net_1081 {
  }
  Net: Net_1082 {
  }
  Net: Net_1083 {
  }
  Net: Net_1084 {
  }
  Net: Net_1085 {
  }
  Net: Net_1086 {
  }
  Net: Net_1087 {
  }
  Net: Net_1088 {
  }
  Net: Net_1089 {
  }
  Net: \ADC:Net_249\ {
  }
  Net: \ADC:Net_257\ {
  }
  Net: \ADC:Net_109\ {
  }
  Net: \ADC:Net_34\ {
  }
  Net: \ADC_SAR:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ADC_SAR:SAR:Net_209\ {
  }
  Net: \ADC_SAR:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: \IDAC:Net_124\ {
  }
  Net: AmuxNet::ADCMux_CYAMUXSIDE_A {
    dsm_0_vplus
    agl4_x_dsm_0_vplus
    agl4
    agl4_x_agr4
    agr4
    agr4_x_p3_4
    agl4_x_vidac_2_iout
    vidac_2_iout
    p0_7_x_vidac_2_iout
    agr4_x_vidac_3_iout
    vidac_3_iout
    p3_1_x_vidac_3_iout
    p3_4
    p0_7
    p3_1
  }
  Net: AmuxNet::ADCMux_CYAMUXSIDE_B {
    dsm_0_vminus
    agl5_x_dsm_0_vminus
    agl5
    agl5_x_agr5
    agr5
    agr5_x_opamp_3_vminus
    opamp_3_vminus
    opamp_3_vminus_x_p3_2
    agl1_x_dsm_0_vminus
    agl1
    agl1_x_vidac_0_iout
    vidac_0_iout
    p0_6_x_vidac_0_iout
    agl7_x_dsm_0_vminus
    agl7
    agl7_x_agr7
    agr7
    agr7_x_p3_3
    p3_2
    p0_6
    p3_3
  }
  Net: AmuxNet::CurrentMux {
    vidac_1_iout
    amuxbusr_x_vidac_1_iout
    amuxbusr
    amuxbusl_x_amuxbusr
    amuxbusl
    amuxbusl_x_p4_2
    amuxbusr_x_p3_5
    p3_0_x_vidac_1_iout
    p4_2
    p3_5
    p3_0
  }
  Net: AmuxNet::\ADC_SAR:AMuxHw_2\ {
    sar_0_vplus
    agl6_x_sar_0_vplus
    agl6
    agl6_x_p0_2
    p0_2
  }
}
Map of item to net {
  sar_0_vrefhi                                     -> \ADC_SAR:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ADC_SAR:SAR:Net_126\
  sar_0_vminus                                     -> \ADC_SAR:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \ADC_SAR:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \ADC_SAR:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \ADC_SAR:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \ADC_SAR:SAR:Net_235\
  sar_0_vref                                       -> \ADC_SAR:SAR:Net_235\
  dsm_0_vplus                                      -> Net_1100
  p3_4                                             -> Net_180
  p3_1                                             -> Net_186
  p0_7                                             -> Net_185
  dsm_0_vminus                                     -> Net_1101
  p3_3                                             -> Net_1117
  p3_2                                             -> Net_1118
  p0_6                                             -> Net_1120
  vidac_1_iout                                     -> Net_1109
  p3_5                                             -> Net_318
  p3_0                                             -> Net_317
  p4_2                                             -> Net_1125
  sar_0_vplus                                      -> \ADC_SAR:Net_2803\
  p0_2                                             -> Net_1216
  agl4_x_dsm_0_vplus                               -> AmuxNet::ADCMux_CYAMUXSIDE_A
  agl4                                             -> AmuxNet::ADCMux_CYAMUXSIDE_A
  agl4_x_agr4                                      -> AmuxNet::ADCMux_CYAMUXSIDE_A
  agr4                                             -> AmuxNet::ADCMux_CYAMUXSIDE_A
  agr4_x_p3_4                                      -> AmuxNet::ADCMux_CYAMUXSIDE_A
  agl4_x_vidac_2_iout                              -> AmuxNet::ADCMux_CYAMUXSIDE_A
  vidac_2_iout                                     -> AmuxNet::ADCMux_CYAMUXSIDE_A
  p0_7_x_vidac_2_iout                              -> AmuxNet::ADCMux_CYAMUXSIDE_A
  agr4_x_vidac_3_iout                              -> AmuxNet::ADCMux_CYAMUXSIDE_A
  vidac_3_iout                                     -> AmuxNet::ADCMux_CYAMUXSIDE_A
  p3_1_x_vidac_3_iout                              -> AmuxNet::ADCMux_CYAMUXSIDE_A
  agl5_x_dsm_0_vminus                              -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agl5                                             -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agl5_x_agr5                                      -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agr5                                             -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agr5_x_opamp_3_vminus                            -> AmuxNet::ADCMux_CYAMUXSIDE_B
  opamp_3_vminus                                   -> AmuxNet::ADCMux_CYAMUXSIDE_B
  opamp_3_vminus_x_p3_2                            -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agl1_x_dsm_0_vminus                              -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agl1                                             -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agl1_x_vidac_0_iout                              -> AmuxNet::ADCMux_CYAMUXSIDE_B
  vidac_0_iout                                     -> AmuxNet::ADCMux_CYAMUXSIDE_B
  p0_6_x_vidac_0_iout                              -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agl7_x_dsm_0_vminus                              -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agl7                                             -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agl7_x_agr7                                      -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agr7                                             -> AmuxNet::ADCMux_CYAMUXSIDE_B
  agr7_x_p3_3                                      -> AmuxNet::ADCMux_CYAMUXSIDE_B
  amuxbusr_x_vidac_1_iout                          -> AmuxNet::CurrentMux
  amuxbusr                                         -> AmuxNet::CurrentMux
  amuxbusl_x_amuxbusr                              -> AmuxNet::CurrentMux
  amuxbusl                                         -> AmuxNet::CurrentMux
  amuxbusl_x_p4_2                                  -> AmuxNet::CurrentMux
  amuxbusr_x_p3_5                                  -> AmuxNet::CurrentMux
  p3_0_x_vidac_1_iout                              -> AmuxNet::CurrentMux
  agl6_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR:AMuxHw_2\
  agl6                                             -> AmuxNet::\ADC_SAR:AMuxHw_2\
  agl6_x_p0_2                                      -> AmuxNet::\ADC_SAR:AMuxHw_2\
}
Mux Info {
  Mux: ADCMux_CYAMUXSIDE_A {
     Mouth: Net_1100
     Guts:  AmuxNet::ADCMux_CYAMUXSIDE_A
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: False
    Arm: 0 {
      Net:   Net_180
      Outer: agr4_x_p3_4
      Inner: __open__
      Path {
        p3_4
        agr4_x_p3_4
        agr4
        agl4_x_agr4
        agl4
        agl4_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_186
      Outer: p3_1_x_vidac_3_iout
      Inner: agr4_x_vidac_3_iout
      Path {
        p3_1
        p3_1_x_vidac_3_iout
        vidac_3_iout
        agr4_x_vidac_3_iout
        agr4
        agl4_x_agr4
        agl4
        agl4_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_185
      Outer: p0_7_x_vidac_2_iout
      Inner: agl4_x_vidac_2_iout
      Path {
        p0_7
        p0_7_x_vidac_2_iout
        vidac_2_iout
        agl4_x_vidac_2_iout
        agl4
        agl4_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
  }
  Mux: ADCMux_CYAMUXSIDE_B {
     Mouth: Net_1101
     Guts:  AmuxNet::ADCMux_CYAMUXSIDE_B
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: False
    Arm: 0 {
      Net:   Net_1117
      Outer: agr7_x_p3_3
      Inner: agl7_x_dsm_0_vminus
      Path {
        p3_3
        agr7_x_p3_3
        agr7
        agl7_x_agr7
        agl7
        agl7_x_dsm_0_vminus
        dsm_0_vminus
      }
    }
    Arm: 1 {
      Net:   Net_1118
      Outer: opamp_3_vminus_x_p3_2
      Inner: agl5_x_dsm_0_vminus
      Path {
        p3_2
        opamp_3_vminus_x_p3_2
        opamp_3_vminus
        agr5_x_opamp_3_vminus
        agr5
        agl5_x_agr5
        agl5
        agl5_x_dsm_0_vminus
        dsm_0_vminus
      }
    }
    Arm: 2 {
      Net:   Net_1120
      Outer: p0_6_x_vidac_0_iout
      Inner: agl1_x_dsm_0_vminus
      Path {
        p0_6
        p0_6_x_vidac_0_iout
        vidac_0_iout
        agl1_x_vidac_0_iout
        agl1
        agl1_x_dsm_0_vminus
        dsm_0_vminus
      }
    }
  }
  Mux: CurrentMux {
     Mouth: Net_1109
     Guts:  AmuxNet::CurrentMux
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: False
    Arm: 0 {
      Net:   Net_318
      Outer: amuxbusr_x_p3_5
      Inner: __open__
      Path {
        p3_5
        amuxbusr_x_p3_5
        amuxbusr
        amuxbusr_x_vidac_1_iout
        vidac_1_iout
      }
    }
    Arm: 1 {
      Net:   Net_317
      Outer: p3_0_x_vidac_1_iout
      Inner: __open__
      Path {
        p3_0
        p3_0_x_vidac_1_iout
        vidac_1_iout
      }
    }
    Arm: 2 {
      Net:   Net_1125
      Outer: amuxbusl_x_p4_2
      Inner: amuxbusl_x_amuxbusr
      Path {
        p4_2
        amuxbusl_x_p4_2
        amuxbusl
        amuxbusl_x_amuxbusr
        amuxbusr
        amuxbusr_x_vidac_1_iout
        vidac_1_iout
      }
    }
  }
  Mux: \ADC_SAR:AMuxHw_2\ {
     Mouth: \ADC_SAR:Net_2803\
     Guts:  AmuxNet::\ADC_SAR:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_1216
      Outer: agl6_x_p0_2
      Inner: agl6_x_sar_0_vplus
      Path {
        p0_2
        agl6_x_p0_2
        agl6
        agl6_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_1217
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 2 {
      Net:   Net_1218
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 3 {
      Net:   Net_999
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_1001
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_1003
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_1004
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_1006
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_1008
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_1009
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_1011
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_1013
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_1014
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_1016
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_1018
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_1019
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_1021
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_1023
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_1024
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_1026
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_1028
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_1029
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_1031
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_1033
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_1034
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_1036
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_1038
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_1039
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_1041
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_1043
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_1044
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_1046
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_1048
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_1049
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_1051
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_1053
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_1054
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_1056
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_1058
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_1059
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_1061
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_1063
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_1064
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_1066
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_1068
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_1069
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_1071
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_1073
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_1074
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_1075
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_1076
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_1077
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_1078
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_1079
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_1080
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_1081
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_1082
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_1083
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_1084
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_1085
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_1086
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_1087
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_1088
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_1089
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.191ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 3.1 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   37 :   11 :   48 :  77.08%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.51
                   Pterms :            3.73
               Macrocells :            2.78
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.001ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.156ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         19 :      10.11 :       5.42
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=2, #inputs=2, #pterms=1
{
    [McSlotId=0]:     MacroCell: Name=Net_906, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Timer2:TimerUDB:control_7\ * \Timer2:TimerUDB:per_zero\
        );
        Output = Net_906 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Timer2:TimerUDB:status_tc\, Mode=(Combinatorial) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Timer2:TimerUDB:control_7\ * \Timer2:TimerUDB:per_zero\
        );
        Output = \Timer2:TimerUDB:status_tc\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,0)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\Timer2:TimerUDB:sT24:timerdp:u2\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        cs_addr_1 => \Timer2:TimerUDB:control_7\ ,
        cs_addr_0 => \Timer2:TimerUDB:per_zero\ ,
        z0_comb => \Timer2:TimerUDB:per_zero\ ,
        f0_bus_stat_comb => \Timer2:TimerUDB:status_3\ ,
        f0_blk_stat_comb => \Timer2:TimerUDB:status_2\ ,
        chain_in => \Timer2:TimerUDB:sT24:timerdp:carry1\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \Timer2:TimerUDB:sT24:timerdp:u1\

statusicell: Name =\Timer2:TimerUDB:rstSts:stsreg\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        status_3 => \Timer2:TimerUDB:status_3\ ,
        status_2 => \Timer2:TimerUDB:status_2\ ,
        status_0 => \Timer2:TimerUDB:status_tc\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000011"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\Timer2:TimerUDB:sT24:timerdp:u1\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        cs_addr_1 => \Timer2:TimerUDB:control_7\ ,
        cs_addr_0 => \Timer2:TimerUDB:per_zero\ ,
        chain_in => \Timer2:TimerUDB:sT24:timerdp:carry0\ ,
        chain_out => \Timer2:TimerUDB:sT24:timerdp:carry1\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111100000110000000000000001000000110000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \Timer2:TimerUDB:sT24:timerdp:u0\
    Next in chain : \Timer2:TimerUDB:sT24:timerdp:u2\

controlcell: Name =\Timer2:TimerUDB:sCTRLReg:SyncCtl:ctrlreg\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        control_7 => \Timer2:TimerUDB:control_7\ ,
        control_6 => \Timer2:TimerUDB:control_6\ ,
        control_5 => \Timer2:TimerUDB:control_5\ ,
        control_4 => \Timer2:TimerUDB:control_4\ ,
        control_3 => \Timer2:TimerUDB:control_3\ ,
        control_2 => \Timer2:TimerUDB:control_2\ ,
        control_1 => \Timer2:TimerUDB:control_1\ ,
        control_0 => \Timer2:TimerUDB:control_0\ );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_994, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR:bSAR_SEQ:nrq_reg\
        );
        Output = Net_994 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,2)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

statuscell: Name =\ADC_SAR:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_SAR:clock\ ,
        status_0 => Net_994 ,
        clk_en => \ADC_SAR:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR:bSAR_SEQ:enable\)

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,4)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,5)][LB=1] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=4, #inputs=10, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !Net_653 * \UART_1:BUART:rx_last\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              !\UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=4, #inputs=6, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_1:BUART:tx_ctrl_mark_last\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:rx_count_0\
        );
        Output = \UART_1:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !Net_653 * \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              Net_653 * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              !\UART_1:BUART:pollcount_1\ * Net_653 * 
              \UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !Net_653
            + !\UART_1:BUART:rx_count_2\ * !\UART_1:BUART:rx_count_1\ * 
              \UART_1:BUART:pollcount_1\ * !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }
}

count7cell: Name =\UART_1:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        load => \UART_1:BUART:rx_counter_load\ ,
        count_6 => \UART_1:BUART:rx_count_6\ ,
        count_5 => \UART_1:BUART:rx_count_5\ ,
        count_4 => \UART_1:BUART:rx_count_4\ ,
        count_3 => \UART_1:BUART:rx_count_3\ ,
        count_2 => \UART_1:BUART:rx_count_2\ ,
        count_1 => \UART_1:BUART:rx_count_1\ ,
        count_0 => \UART_1:BUART:rx_count_0\ ,
        tc => \UART_1:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=3, #inputs=9, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_fifonotempty\ * 
              \UART_1:BUART:rx_state_stop1_reg\
        );
        Output = \UART_1:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,1)][LB=1] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_653
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * !\UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_5\
            + !\UART_1:BUART:tx_ctrl_mark_last\ * \UART_1:BUART:rx_state_0\ * 
              !\UART_1:BUART:rx_state_3\ * !\UART_1:BUART:rx_state_2\ * 
              !\UART_1:BUART:rx_count_6\ * !\UART_1:BUART:rx_count_4\
        );
        Output = \UART_1:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_state_3\ * \UART_1:BUART:rx_state_2\
        );
        Output = \UART_1:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:rx_last\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_653
        );
        Output = \UART_1:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !Net_653
            + !\UART_1:BUART:tx_ctrl_mark_last\ * !\UART_1:BUART:rx_state_0\ * 
              \UART_1:BUART:rx_bitclk_enable\ * \UART_1:BUART:rx_state_3\ * 
              \UART_1:BUART:rx_state_2\ * !\UART_1:BUART:pollcount_1\ * 
              !\UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\Timer2:TimerUDB:sT24:timerdp:u0\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        cs_addr_1 => \Timer2:TimerUDB:control_7\ ,
        cs_addr_0 => \Timer2:TimerUDB:per_zero\ ,
        chain_out => \Timer2:TimerUDB:sT24:timerdp:carry0\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000000100000001000000010000000000000010000000000000001000000000000000100000000000000010000000000000001000000011111111000000001111111111111111000000000000000000000001000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Next in chain : \Timer2:TimerUDB:sT24:timerdp:u1\

statusicell: Name =\UART_1:BUART:sRX:RxSts\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        status_5 => \UART_1:BUART:rx_status_5\ ,
        status_4 => \UART_1:BUART:rx_status_4\ ,
        status_3 => \UART_1:BUART:rx_status_3\ ,
        interrupt => Net_655 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_1:BUART:rx_load_fifo\ * \UART_1:BUART:rx_fifofull\
        );
        Output = \UART_1:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=2, #inputs=6, #pterms=4
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \UART_1:BUART:pollcount_1\
            + Net_653 * \UART_1:BUART:pollcount_0\
        );
        Output = \UART_1:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_994
            + \ADC_SAR:Net_3935\
        );
        Output = \ADC_SAR:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\UART_1:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        cs_addr_2 => \UART_1:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \UART_1:BUART:rx_state_0\ ,
        cs_addr_0 => \UART_1:BUART:rx_bitclk_enable\ ,
        route_si => \UART_1:BUART:rx_postpoll\ ,
        f0_load => \UART_1:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \UART_1:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \UART_1:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

synccell: Name =\ADC_SAR:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_SAR:nrq\ ,
        out => \ADC_SAR:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_993 * !\ADC_SAR:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_5\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }
}

controlcell: Name =\ADC_SAR:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_SAR:clock\ ,
        control_7 => \ADC_SAR:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_SAR:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_SAR:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_SAR:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_SAR:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_SAR:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_SAR:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_SAR:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_1\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=1, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * !\ADC_SAR:ch_addr_5\
            + \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * !\ADC_SAR:ch_addr_4\
            + \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * !\ADC_SAR:ch_addr_3\
            + \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * !\ADC_SAR:ch_addr_2\
            + !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * \ADC_SAR:ch_addr_1\
            + \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * !\ADC_SAR:ch_addr_1\
            + !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\ * \ADC_SAR:ch_addr_0\
            + \ADC_SAR:AMuxHw_2_Decoder_old_id_0\ * !\ADC_SAR:ch_addr_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

count7cell: Name =\ADC_SAR:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_SAR:clock\ ,
        load => \ADC_SAR:bSAR_SEQ:load_period\ ,
        enable => \ADC_SAR:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_SAR:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_SAR:ch_addr_5\ ,
        count_4 => \ADC_SAR:ch_addr_4\ ,
        count_3 => \ADC_SAR:ch_addr_3\ ,
        count_2 => \ADC_SAR:ch_addr_2\ ,
        count_1 => \ADC_SAR:ch_addr_1\ ,
        count_0 => \ADC_SAR:ch_addr_0\ ,
        tc => \ADC_SAR:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_SAR:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000000"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR:bSAR_SEQ:enable\)

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=0][MC=3]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * \ADC_SAR:ch_addr_5\
            + !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * \ADC_SAR:ch_addr_4\
            + !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * \ADC_SAR:ch_addr_3\
            + !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * \ADC_SAR:ch_addr_2\
            + \ADC_SAR:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }
}

LAB@[UDB=(1,5)][LB=1] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_4\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_3\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:ch_addr_2\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=2, #inputs=8, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:txn\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_1\ * 
              !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:txn\ * \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * !\UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_shift_out\ * !\UART_1:BUART:tx_state_2\ * 
              !\UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_state_2\
            + !\UART_1:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_1:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,0)][LB=1] #macrocells=2, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=Net_648, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:txn\
        );
        Output = Net_648 (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=2, #inputs=7, #pterms=5
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\UART_1:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              !\UART_1:BUART:tx_fifo_empty\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_fifo_empty\ * !\UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_0\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_1:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_fifo_notfull\
        );
        Output = \UART_1:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,1)][LB=1] #macrocells=4, #inputs=12, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\UART_1:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * 
              \UART_1:BUART:tx_fifo_empty\ * \UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_1:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        cs_addr_2 => \UART_1:BUART:tx_state_1\ ,
        cs_addr_1 => \UART_1:BUART:tx_state_0\ ,
        cs_addr_0 => \UART_1:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART_1:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART_1:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART_1:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\UART_1:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        status_3 => \UART_1:BUART:tx_fifo_notfull\ ,
        status_2 => \UART_1:BUART:tx_status_2\ ,
        status_1 => \UART_1:BUART:tx_fifo_empty\ ,
        status_0 => \UART_1:BUART:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,2)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,3)] is empty.
UDB [UDB=(2,4)] is empty.
UDB [UDB=(2,5)] is empty.
UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=2, #inputs=11, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\
            + !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\
        );
        Output = \UART_1:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\UART_1:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART_1:Net_9\ ,
        cs_addr_0 => \UART_1:BUART:counter_load_not\ ,
        ce0_reg => \UART_1:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART_1:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=1, #inputs=6, #pterms=4
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART_1:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_1:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              \UART_1:BUART:tx_bitclk_enable_pre\ * \UART_1:BUART:tx_state_2\
            + \UART_1:BUART:tx_state_1\ * \UART_1:BUART:tx_state_0\ * 
              !\UART_1:BUART:tx_state_2\ * \UART_1:BUART:tx_bitclk\
            + \UART_1:BUART:tx_state_1\ * !\UART_1:BUART:tx_state_2\ * 
              \UART_1:BUART:tx_counter_dp\ * \UART_1:BUART:tx_bitclk\
        );
        Output = \UART_1:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] is empty.
UDB [UDB=(3,4)] is empty.
UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=1] #macrocells=1, #inputs=0, #pterms=0
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=2)
        Properties               : 
        {
        }
}

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =RX2
        PORT MAP (
            interrupt => Net_655 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =Reloj
        PORT MAP (
            interrupt => Net_8 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =\ADC_SAR:IRQ\
        PORT MAP (
            interrupt => Net_994 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(3)] 
    interrupt: Name =\USBUART:ep_1\
        PORT MAP (
            interrupt => \USBUART:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(4)] 
    interrupt: Name =\USBUART:ep_2\
        PORT MAP (
            interrupt => \USBUART:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(5)] 
    interrupt: Name =\USBUART:ep_3\
        PORT MAP (
            interrupt => \USBUART:ep_int_3\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(6)] 
    interrupt: Name =leeT
        PORT MAP (
            interrupt => Net_906 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(12)] 
    interrupt: Name =\USBUART:dp_int\
        PORT MAP (
            interrupt => \USBUART:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(15)] 
    interrupt: Name =\I2C:I2C_IRQ\
        PORT MAP (
            interrupt => \I2C:Net_697\ );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(21)] 
    interrupt: Name =\USBUART:sof_int\
        PORT MAP (
            interrupt => Net_1214 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(22)] 
    interrupt: Name =\USBUART:arb_int\
        PORT MAP (
            interrupt => \USBUART:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(23)] 
    interrupt: Name =\USBUART:bus_reset\
        PORT MAP (
            interrupt => \USBUART:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(24)] 
    interrupt: Name =\USBUART:ep_0\
        PORT MAP (
            interrupt => \USBUART:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(29)] 
    interrupt: Name =\ADC:IRQ\
        PORT MAP (
            interrupt => Net_1103 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_SAR:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_SAR:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=1]: 
Pin : Name = TERM(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => TERM(0)__PA ,
        pad => TERM(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = LM35(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LM35(0)__PA ,
        analog_term => Net_1216 ,
        pad => LM35(0)_PAD ,
        pin_input => \ADC_SAR:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = DOOR(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => DOOR(0)__PA ,
        pad => DOOR(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = RTD_Negative_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => RTD_Negative_1(0)__PA ,
        analog_term => Net_1120 ,
        pad => RTD_Negative_1(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = RTD_Positive_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RTD_Positive_1(0)__PA ,
        analog_term => Net_185 ,
        pad => RTD_Positive_1(0)_PAD );
    Properties:
    {
    }

Port 1 contains the following IO cells:
[IoId=2]: 
Pin : Name = BUZZER(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => BUZZER(0)__PA ,
        pad => BUZZER(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = CR7(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => CR7(0)__PA ,
        pad => CR7(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = CR6(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => CR6(0)__PA ,
        pad => CR6(0)_PAD );
    Properties:
    {
    }

Port 2 contains the following IO cells:
[IoId=0]: 
Pin : Name = CR2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => CR2(0)__PA ,
        pad => CR2(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = CR3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => CR3(0)__PA ,
        pad => CR3(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = CR4(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => CR4(0)__PA ,
        pad => CR4(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = CR5(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => CR5(0)__PA ,
        pad => CR5(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = CR8(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => CR8(0)__PA ,
        pad => CR8(0)_PAD );
    Properties:
    {
    }

Port 3 contains the following IO cells:
[IoId=0]: 
Pin : Name = RefRes_Current(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RefRes_Current(0)__PA ,
        analog_term => Net_317 ,
        annotation => Net_337 ,
        pad => RefRes_Current(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = RefRes_Positive(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RefRes_Positive(0)__PA ,
        analog_term => Net_186 ,
        annotation => Net_337 ,
        pad => RefRes_Positive(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = RefRes_Negative(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RefRes_Negative(0)__PA ,
        analog_term => Net_1118 ,
        annotation => Net_273 ,
        pad => RefRes_Negative(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = RTD_Negative(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => RTD_Negative(0)__PA ,
        analog_term => Net_1117 ,
        annotation => Net_966 ,
        pad => RTD_Negative(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = RTD_Positive(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RTD_Positive(0)__PA ,
        analog_term => Net_180 ,
        annotation => Net_733 ,
        pad => RTD_Positive(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = RTD_Current(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RTD_Current(0)__PA ,
        analog_term => Net_318 ,
        annotation => Net_730 ,
        pad => RTD_Current(0)_PAD );
    Properties:
    {
    }

Port 4 contains the following IO cells:
[IoId=2]: 
Pin : Name = RTD_Current_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RTD_Current_1(0)__PA ,
        analog_term => Net_1125 ,
        pad => RTD_Current_1(0)_PAD );
    Properties:
    {
    }

Port 5 contains the following IO cells:
[IoId=4]: 
Pin : Name = LCD2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LCD2(0)__PA ,
        pad => LCD2(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = LCD1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LCD1(0)__PA ,
        pad => LCD1(0)_PAD );
    Properties:
    {
    }

Port 6 contains the following IO cells:
[IoId=0]: 
Pin : Name = DS1302_SCLK_PIN(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => DS1302_SCLK_PIN(0)__PA ,
        pad => DS1302_SCLK_PIN(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = DS1302_IO_PIN(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => DS1302_IO_PIN(0)__PA ,
        pad => DS1302_IO_PIN(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = DS1302_CE_PIN(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => DS1302_CE_PIN(0)__PA ,
        pad => DS1302_CE_PIN(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = LEVEL(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => LEVEL(0)__PA ,
        pad => LEVEL(0)_PAD );
    Properties:
    {
    }

Port 12 contains the following IO cells:
[IoId=4]: 
Pin : Name = SCL(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: OPEN_DRAIN_LO
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => SCL(0)__PA ,
        fb => \I2C:Net_1109_0\ ,
        pin_input => \I2C:Net_643_0\ ,
        pad => SCL(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = SDA(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: OPEN_DRAIN_LO
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => SDA(0)__PA ,
        fb => \I2C:Net_1109_1\ ,
        pin_input => \I2C:sda_x_wire\ ,
        pad => SDA(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = Rx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Rx_1(0)__PA ,
        fb => Net_653 ,
        pad => Rx_1(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Tx_1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => Tx_1(0)__PA ,
        pin_input => Net_648 ,
        pad => Tx_1(0)_PAD );
    Properties:
    {
    }

Port 15 generates interrupt for logical port:
    logicalport: Name =\USBUART:Dp\
        PORT MAP (
            in_clock_en => tmpOE__LCD1_net_0 ,
            in_reset => zero ,
            out_clock_en => tmpOE__LCD1_net_0 ,
            out_reset => zero ,
            interrupt => \USBUART:Net_1010\ ,
            in_clock => ClockBlock_BUS_CLK );
        Properties:
        {
            drive_mode = "000"
            ibuf_enabled = "0"
            id = "beca5e2d-f70f-4900-a4db-7eca1ed3126e/618a72fc-5ddd-4df5-958f-a3d55102db42"
            init_dr_st = "1"
            input_buffer_sel = "00"
            input_clk_en = 0
            input_sync = "1"
            input_sync_mode = "0"
            intr_mode = "10"
            invert_in_clock = 0
            invert_in_clock_en = 0
            invert_in_reset = 0
            invert_out_clock = 0
            invert_out_clock_en = 0
            invert_out_reset = 0
            io_voltage = ""
            layout_mode = "CONTIGUOUS"
            oe_conn = "0"
            oe_reset = 0
            oe_sync = "0"
            output_clk_en = 0
            output_clock_mode = "0"
            output_conn = "0"
            output_mode = "0"
            output_reset = 0
            output_sync = "0"
            ovt_hyst_trim = "0"
            ovt_needed = "0"
            ovt_slew_control = "00"
            pa_in_clock = -1
            pa_in_clock_en = -1
            pa_in_reset = -1
            pa_out_clock = -1
            pa_out_clock_en = -1
            pa_out_reset = -1
            pin_aliases = ""
            pin_mode = "I"
            por_state = 4
            port_alias_group = ""
            port_alias_required = 0
            sio_group_cnt = 0
            sio_hifreq = "00000000"
            sio_hyst = "1"
            sio_ibuf = "00000000"
            sio_info = "00"
            sio_obuf = "00000000"
            sio_refsel = "00000000"
            sio_vohsel = "00000000"
            sio_vtrip = "00000000"
            slew_rate = "0"
            spanning = 0
            sw_only = 0
            use_annotation = "0"
            vtrip = "00"
            width = 1
        }
    and contains the following IO cells:
[IoId=4]: 
Pin : Name = SSR(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => SSR(0)__PA ,
        pad => SSR(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = CR1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => CR1(0)__PA ,
        pad => CR1(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = \USBUART:Dp(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: True
        Interrupt mode: FALLING
        Drive mode: HI_Z_ANALOG
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: USB_D_PLUS
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBUART:Dp(0)\__PA ,
        analog_term => \USBUART:Net_1000\ ,
        pad => \USBUART:Dp(0)_PAD\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = \USBUART:Dm(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: USB_D_MINUS
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBUART:Dm(0)\__PA ,
        analog_term => \USBUART:Net_597\ ,
        pad => \USBUART:Dm(0)_PAD\ );
    Properties:
    {
    }

ARM group 0: empty
CAN group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \ADC:Net_93\ ,
            dclk_0 => \ADC:Net_93_local\ ,
            aclk_glb_0 => \ADC:Net_488\ ,
            aclk_0 => \ADC:Net_488_local\ ,
            clk_a_dig_glb_0 => \ADC:Net_488_adig\ ,
            clk_a_dig_0 => \ADC:Net_488_adig_local\ ,
            dclk_glb_1 => \ADC_SAR:clock\ ,
            dclk_1 => \ADC_SAR:clock_local\ ,
            dclk_glb_2 => \UART_1:Net_9\ ,
            dclk_2 => \UART_1:Net_9_local\ );
        Properties:
        {
        }
Comparator group 0: empty
DFB group 0: empty
DSM group 0: 
    DS Modulator @ F(DSM,0): 
    dsmodcell: Name =\ADC:DSM\
        PORT MAP (
            aclock => \ADC:Net_488\ ,
            vplus => Net_1100 ,
            vminus => Net_1101 ,
            reset_dec => \ADC:mod_reset\ ,
            extclk_cp_udb => \ADC:Net_93_local\ ,
            ext_pin_1 => \ADC:Net_249\ ,
            ext_pin_2 => \ADC:Net_257\ ,
            ext_vssa => \ADC:Net_109\ ,
            qtz_ref => \ADC:Net_34\ ,
            dec_clock => \ADC:aclock\ ,
            mod_dat_3 => \ADC:mod_dat_3\ ,
            mod_dat_2 => \ADC:mod_dat_2\ ,
            mod_dat_1 => \ADC:mod_dat_1\ ,
            mod_dat_0 => \ADC:mod_dat_0\ ,
            dout_udb_7 => \ADC:Net_245_7\ ,
            dout_udb_6 => \ADC:Net_245_6\ ,
            dout_udb_5 => \ADC:Net_245_5\ ,
            dout_udb_4 => \ADC:Net_245_4\ ,
            dout_udb_3 => \ADC:Net_245_3\ ,
            dout_udb_2 => \ADC:Net_245_2\ ,
            dout_udb_1 => \ADC:Net_245_1\ ,
            dout_udb_0 => \ADC:Net_245_0\ );
        Properties:
        {
            cy_registers = ""
            resolution = 20
        }
Decimator group 0: 
    Decimator Block @ F(Decimator,0): 
    decimatorcell: Name =\ADC:DEC\
        PORT MAP (
            aclock => \ADC:aclock\ ,
            mod_dat_3 => \ADC:mod_dat_3\ ,
            mod_dat_2 => \ADC:mod_dat_2\ ,
            mod_dat_1 => \ADC:mod_dat_1\ ,
            mod_dat_0 => \ADC:mod_dat_0\ ,
            ext_start => __ONE__ ,
            modrst => \ADC:mod_reset\ ,
            interrupt => Net_1103 );
        Properties:
        {
            cy_registers = ""
        }
EMIF group 0: empty
I2C group 0: 
    I2C Block @ F(I2C,0): 
    i2ccell: Name =\I2C:I2C_FF\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            scl_in => \I2C:Net_1109_0\ ,
            sda_in => \I2C:Net_1109_1\ ,
            scl_out => \I2C:Net_643_0\ ,
            sda_out => \I2C:sda_x_wire\ ,
            interrupt => \I2C:Net_697\ );
        Properties:
        {
            cy_registers = ""
            use_wakeup = 0
        }
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SC group 0: empty
SPC group 0: empty
Timer group 0: 
    Timer Block @ F(Timer,0): 
    timercell: Name =\Timer:TimerHW\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            enable => __ONE__ ,
            tc => Net_8 ,
            cmp => \Timer:Net_261\ ,
            irq => \Timer:Net_57\ );
        Properties:
        {
            cy_registers = ""
        }
USB group 0: 
    USB Block @ F(USB,0): 
    usbcell: Name =\USBUART:USB\
        PORT MAP (
            dp => \USBUART:Net_1000\ ,
            dm => \USBUART:Net_597\ ,
            sof_int => Net_1214 ,
            arb_int => \USBUART:Net_1889\ ,
            usb_int => \USBUART:Net_1876\ ,
            ept_int_8 => \USBUART:ep_int_8\ ,
            ept_int_7 => \USBUART:ep_int_7\ ,
            ept_int_6 => \USBUART:ep_int_6\ ,
            ept_int_5 => \USBUART:ep_int_5\ ,
            ept_int_4 => \USBUART:ep_int_4\ ,
            ept_int_3 => \USBUART:ep_int_3\ ,
            ept_int_2 => \USBUART:ep_int_2\ ,
            ept_int_1 => \USBUART:ep_int_1\ ,
            ept_int_0 => \USBUART:ep_int_0\ ,
            ord_int => \USBUART:Net_95\ ,
            dma_req_7 => \USBUART:dma_request_7\ ,
            dma_req_6 => \USBUART:dma_request_6\ ,
            dma_req_5 => \USBUART:dma_request_5\ ,
            dma_req_4 => \USBUART:dma_request_4\ ,
            dma_req_3 => \USBUART:dma_request_3\ ,
            dma_req_2 => \USBUART:dma_request_2\ ,
            dma_req_1 => \USBUART:dma_request_1\ ,
            dma_req_0 => \USBUART:dma_request_0\ ,
            dma_termin => \USBUART:dma_terminate\ );
        Properties:
        {
            cy_registers = ""
        }
VIDAC group 0: 
    VIDAC Block @ F(VIDAC,1): 
    vidaccell: Name =\IDAC:viDAC8\
        PORT MAP (
            vout => \IDAC:Net_124\ ,
            iout => Net_1109 );
        Properties:
        {
            cy_registers = ""
            is_all_if_any = 0
            reg_data = 0
        }
OpAmp group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC_SAR:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC_SAR:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\ADC_SAR:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_SAR:Net_2803\ ,
            vminus => \ADC_SAR:SAR:Net_126\ ,
            ext_pin => \ADC_SAR:SAR:Net_209\ ,
            vrefhi_out => \ADC_SAR:SAR:Net_126\ ,
            vref => \ADC_SAR:SAR:Net_235\ ,
            clk_udb => \ADC_SAR:clock_local\ ,
            irq => \ADC_SAR:SAR:Net_252\ ,
            next => Net_993 ,
            data_out_udb_11 => \ADC_SAR:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR:SAR:Net_207_0\ ,
            eof_udb => \ADC_SAR:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_SAR:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_1089 ,
            muxin_62 => Net_1088 ,
            muxin_61 => Net_1087 ,
            muxin_60 => Net_1086 ,
            muxin_59 => Net_1085 ,
            muxin_58 => Net_1084 ,
            muxin_57 => Net_1083 ,
            muxin_56 => Net_1082 ,
            muxin_55 => Net_1081 ,
            muxin_54 => Net_1080 ,
            muxin_53 => Net_1079 ,
            muxin_52 => Net_1078 ,
            muxin_51 => Net_1077 ,
            muxin_50 => Net_1076 ,
            muxin_49 => Net_1075 ,
            muxin_48 => Net_1074 ,
            muxin_47 => Net_1073 ,
            muxin_46 => Net_1071 ,
            muxin_45 => Net_1069 ,
            muxin_44 => Net_1068 ,
            muxin_43 => Net_1066 ,
            muxin_42 => Net_1064 ,
            muxin_41 => Net_1063 ,
            muxin_40 => Net_1061 ,
            muxin_39 => Net_1059 ,
            muxin_38 => Net_1058 ,
            muxin_37 => Net_1056 ,
            muxin_36 => Net_1054 ,
            muxin_35 => Net_1053 ,
            muxin_34 => Net_1051 ,
            muxin_33 => Net_1049 ,
            muxin_32 => Net_1048 ,
            muxin_31 => Net_1046 ,
            muxin_30 => Net_1044 ,
            muxin_29 => Net_1043 ,
            muxin_28 => Net_1041 ,
            muxin_27 => Net_1039 ,
            muxin_26 => Net_1038 ,
            muxin_25 => Net_1036 ,
            muxin_24 => Net_1034 ,
            muxin_23 => Net_1033 ,
            muxin_22 => Net_1031 ,
            muxin_21 => Net_1029 ,
            muxin_20 => Net_1028 ,
            muxin_19 => Net_1026 ,
            muxin_18 => Net_1024 ,
            muxin_17 => Net_1023 ,
            muxin_16 => Net_1021 ,
            muxin_15 => Net_1019 ,
            muxin_14 => Net_1018 ,
            muxin_13 => Net_1016 ,
            muxin_12 => Net_1014 ,
            muxin_11 => Net_1013 ,
            muxin_10 => Net_1011 ,
            muxin_9 => Net_1009 ,
            muxin_8 => Net_1008 ,
            muxin_7 => Net_1006 ,
            muxin_6 => Net_1004 ,
            muxin_5 => Net_1003 ,
            muxin_4 => Net_1001 ,
            muxin_3 => Net_999 ,
            muxin_2 => Net_1218 ,
            muxin_1 => Net_1217 ,
            muxin_0 => Net_1216 ,
            hw_ctrl_en_63 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_3\ ,
            hw_ctrl_en_2 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_2\ ,
            hw_ctrl_en_1 => \ADC_SAR:AMuxHw_2_Decoder_one_hot_1\ ,
            vout => \ADC_SAR:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =CurrentMux
        PORT MAP (
            muxin_2 => Net_1125 ,
            muxin_1 => Net_317 ,
            muxin_0 => Net_318 ,
            vout => Net_1109 );
        Properties:
        {
            api_type = 0
            connect_mode = 1
            cy_registers = ""
            hw_control = 0
            init_mux_sel = "000"
            muxin_width = 3
            one_active = 0
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =ADCMux_CYAMUXSIDE_A
        PORT MAP (
            muxin_2 => Net_185 ,
            muxin_1 => Net_186 ,
            muxin_0 => Net_180 ,
            vout => Net_1100 );
        Properties:
        {
            api_type = 0
            connect_mode = 1
            cy_registers = ""
            hw_control = 0
            init_mux_sel = "000"
            muxin_width = 3
            one_active = 0
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =ADCMux_CYAMUXSIDE_B
        PORT MAP (
            muxin_2 => Net_1120 ,
            muxin_1 => Net_1118 ,
            muxin_0 => Net_1117 ,
            vout => Net_1101 );
        Properties:
        {
            api_type = 0
            connect_mode = 1
            cy_registers = ""
            hw_control = 0
            init_mux_sel = "000"
            muxin_width = 3
            one_active = 0
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                    | 
Port | Pin | Fixed |      Type |       Drive Mode |               Name | Connections
-----+-----+-------+-----------+------------------+--------------------+-----------------------------------------------------------
   0 |   1 |     * |      NONE |      RES_PULL_UP |            TERM(0) | 
     |   2 |     * |      NONE |      HI_Z_ANALOG |            LM35(0) | In(\ADC_SAR:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_1216)
     |   4 |     * |      NONE |      RES_PULL_UP |            DOOR(0) | 
     |   6 |     * |      NONE |      HI_Z_ANALOG |  RTD_Negative_1(0) | Analog(Net_1120)
     |   7 |     * |      NONE |      HI_Z_ANALOG |  RTD_Positive_1(0) | Analog(Net_185)
-----+-----+-------+-----------+------------------+--------------------+-----------------------------------------------------------
   1 |   2 |     * |      NONE |         CMOS_OUT |          BUZZER(0) | 
     |   4 |     * |      NONE |         CMOS_OUT |             CR7(0) | 
     |   5 |     * |      NONE |         CMOS_OUT |             CR6(0) | 
-----+-----+-------+-----------+------------------+--------------------+-----------------------------------------------------------
   2 |   0 |     * |      NONE |         CMOS_OUT |             CR2(0) | 
     |   1 |     * |      NONE |         CMOS_OUT |             CR3(0) | 
     |   2 |     * |      NONE |         CMOS_OUT |             CR4(0) | 
     |   3 |     * |      NONE |         CMOS_OUT |             CR5(0) | 
     |   4 |     * |      NONE |         CMOS_OUT |             CR8(0) | 
-----+-----+-------+-----------+------------------+--------------------+-----------------------------------------------------------
   3 |   0 |     * |      NONE |      HI_Z_ANALOG |  RefRes_Current(0) | Analog(Net_317)
     |   1 |     * |      NONE |      HI_Z_ANALOG | RefRes_Positive(0) | Analog(Net_186)
     |   2 |     * |      NONE |      HI_Z_ANALOG | RefRes_Negative(0) | Analog(Net_1118)
     |   3 |     * |      NONE |      HI_Z_ANALOG |    RTD_Negative(0) | Analog(Net_1117)
     |   4 |     * |      NONE |      HI_Z_ANALOG |    RTD_Positive(0) | Analog(Net_180)
     |   5 |     * |      NONE |      HI_Z_ANALOG |     RTD_Current(0) | Analog(Net_318)
-----+-----+-------+-----------+------------------+--------------------+-----------------------------------------------------------
   4 |   2 |     * |      NONE |      HI_Z_ANALOG |   RTD_Current_1(0) | Analog(Net_1125)
-----+-----+-------+-----------+------------------+--------------------+-----------------------------------------------------------
   5 |   4 |     * |      NONE |         CMOS_OUT |            LCD2(0) | 
     |   5 |     * |      NONE |         CMOS_OUT |            LCD1(0) | 
-----+-----+-------+-----------+------------------+--------------------+-----------------------------------------------------------
   6 |   0 |     * |      NONE |         CMOS_OUT | DS1302_SCLK_PIN(0) | 
     |   1 |     * |      NONE |         CMOS_OUT |   DS1302_IO_PIN(0) | 
     |   2 |     * |      NONE |         CMOS_OUT |   DS1302_CE_PIN(0) | 
     |   3 |     * |      NONE |      RES_PULL_UP |           LEVEL(0) | 
-----+-----+-------+-----------+------------------+--------------------+-----------------------------------------------------------
  12 |   4 |     * |      NONE |    OPEN_DRAIN_LO |             SCL(0) | FB(\I2C:Net_1109_0\), In(\I2C:Net_643_0\)
     |   5 |     * |      NONE |    OPEN_DRAIN_LO |             SDA(0) | FB(\I2C:Net_1109_1\), In(\I2C:sda_x_wire\)
     |   6 |     * |      NONE |     HI_Z_DIGITAL |            Rx_1(0) | FB(Net_653)
     |   7 |     * |      NONE |         CMOS_OUT |            Tx_1(0) | In(Net_648)
-----+-----+-------+-----------+------------------+--------------------+-----------------------------------------------------------
  15 |   4 |     * |      NONE |         CMOS_OUT |             SSR(0) | 
     |   5 |     * |      NONE |         CMOS_OUT |             CR1(0) | 
     |   6 |     * |   FALLING |      HI_Z_ANALOG |    \USBUART:Dp(0)\ | Analog(\USBUART:Net_1000\)
     |   7 |     * |      NONE |      HI_Z_ANALOG |    \USBUART:Dm(0)\ | Analog(\USBUART:Net_597\)
-----------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.106ms
Digital Placement phase: Elapsed time ==> 3s.668ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.3\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "IncubadoraRefrigerada_r.vh2" --pcf-path "IncubadoraRefrigerada.pco" --des-name "IncubadoraRefrigerada" --dsf-path "IncubadoraRefrigerada.dsf" --sdc-path "IncubadoraRefrigerada.sdc" --lib-path "IncubadoraRefrigerada_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 3s.130ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.220ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.031ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in IncubadoraRefrigerada_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.472ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.239ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 11s.049ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 11s.049ms
API generation phase: Elapsed time ==> 3s.857ms
Dependency generation phase: Elapsed time ==> 0s.023ms
Cleanup phase: Elapsed time ==> 0s.000ms
